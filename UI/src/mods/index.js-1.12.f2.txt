(() => {
    var e = {
            611: (e, t, n) => {
                var s;
                s = function (e, t, n) {
                    "use strict";
                    var s = void 0 !== t;
                    if ((t = t || {})._Initialized) return t;
                    var i = [2, 0, 2, 0];

                    function a() {
                        this.events = {}
                    }

                    function o(e, t) {
                        this.code = e, this.context = t
                    }
                    for (var r in a.prototype._createClear = function (e, n, s, i) {
                            return function () {
                                var a = e.events[n];
                                if (a) {
                                    var o = -1;
                                    if (void 0 === s) {
                                        for (var r = 0; r < a.length; ++r)
                                            if (void 0 !== a[r].wasInCPP) {
                                                o = r;
                                                break
                                            }
                                    } else o = a.indexOf(s); - 1 != o && (a.splice(o, 1), 0 === a.length && delete e.events[n])
                                } else void 0 !== t.RemoveOnHandler && t.RemoveOnHandler(n, s, i || t)
                            }
                        }, a.prototype.on = function (e, t, n) {
                            var s = this.events[e];
                            void 0 === s && (s = this.events[e] = []);
                            var i = new o(t, n || this);
                            return s.push(i), {
                                clear: this._createClear(this, e, i, n)
                            }
                        }, a.prototype.off = function (e, n, s) {
                            var i = this.events[e];
                            if (void 0 !== i) {
                                var a;
                                s = s || this;
                                var o = i.length;
                                for (a = 0; a < o; ++a) {
                                    var r = i[a];
                                    if (r.code == n && r.context == s) break
                                }
                                a < o && (i.splice(a, 1), 0 === i.length && delete this.events[e])
                            } else t.RemoveOnHandler(e, n, s || this)
                        }, a.prototype.trigger = function (e) {
                            var t = this.events[e];
                            if (void 0 !== t) {
                                var n = Array.prototype.slice.call(arguments, 1);
                                return t.forEach((function (e) {
                                    e.code.apply(e.context, n)
                                })), !0
                            }
                            return !1
                        }, t.isAttached = s, t.isAttached || (a.prototype.on = function (e, t, n) {
                            var s = this.events[e];
                            this.browserCallbackOn && this.browserCallbackOn(e, t, n), void 0 === s && (s = this.events[e] = []);
                            var i = new o(t, n || this);
                            return s.push(i), {
                                clear: this._createClear(this, e, i)
                            }
                        }, a.prototype.off = function (e, t, n) {
                            var s = this.events[e];
                            if (void 0 !== s) {
                                var i;
                                n = n || this;
                                var a = s.length;
                                for (i = 0; i < a; ++i) {
                                    var o = s[i];
                                    if (o.code == t && o.context == n) break
                                }
                                i < a && (s.splice(i, 1), 0 === s.length && (delete this.events[e], this.browserCallbackOff && this.browserCallbackOff(e, t, n)))
                            }
                        }, t.SendMessage = function (e, n) {
                            var s = Array.prototype.slice.call(arguments, 2),
                                i = t._ActiveRequests[n];
                            delete t._ActiveRequests[n], window.setTimeout((function () {
                                var n = t._mocks[e];
                                void 0 !== n && i.resolve(n.apply(t, s))
                            }), 16)
                        }, t.TriggerEvent = function () {
                            var e = Array.prototype.slice.call(arguments);
                            return window.setTimeout((function () {
                                var n = t._mocks[e[0]];
                                void 0 !== n && n.apply(t, e.slice(1))
                            }), 16), void 0 !== t._mocks[e[0]]
                        }, t.BindingsReady = function () {
                            t._OnReady()
                        }, t.createJSModel = function (t, n) {
                            e[t] = n
                        }, t.updateWholeModel = function () {}, t.synchronizeModels = function () {}, t.enableImmediateLayout = function () {}, t.isImmediateLayoutEnabled = function () {
                            return !0
                        }, t.executeImmediateLayoutSync = function () {}, t._mocks = {}, t._mockImpl = function (e, t, n, s) {
                            t && (this._mocks[e] = t);
                            var i = t.toString().replace("function " + t.name + "(", ""),
                                a = i.indexOf(")"),
                                o = i.substr(0, a);
                            this.browserCallbackMock && this.browserCallbackMock(e, o, n, Boolean(s))
                        }, t.mock = function (e, t, n) {
                            this._mockImpl(e, t, !0, n)
                        }), t.events = {}, a.prototype) t[r] = a.prototype[r];
                    return t.isAttached && (t.on = function (e, n, s) {
                        return n ? (t.AddOrRemoveOnHandler(e, n, s || t), {
                            clear: this._createClear(this, e, n, s)
                        }) : (console.error("No handler specified for engine.on"), {
                            clear: function () {}
                        })
                    }), t.whenReady = new Promise((e => {
                        t.on("Ready", e)
                    })), t._trigger = a.prototype.trigger, t.trigger = function () {
                        this._trigger.apply(this, arguments) || this.TriggerEvent.apply(this, arguments)
                    }, t.isAttached && (t.mock = function () {}), t._BindingsReady = !1, t._WindowLoaded = !1, t._RequestId = 0, t._ActiveRequests = {}, t.call = function () {
                        t._RequestId++;
                        var e = t._RequestId,
                            n = Array.prototype.slice.call(arguments);
                        return n.splice(1, 0, e), new Promise((function (s, i) {
                            t._ActiveRequests[e] = {
                                resolve: s,
                                reject: i
                            }, t.SendMessage.apply(t, n)
                        }))
                    }, t._Result = function (e) {
                        var n = t._ActiveRequests[e];
                        if (void 0 !== n) {
                            delete t._ActiveRequests[e];
                            var s = Array.prototype.slice.call(arguments);
                            s.shift(), n.resolve.apply(n, s)
                        }
                    }, t._Reject = function (e) {
                        var n = t._ActiveRequests[e];
                        void 0 !== n && (delete t._ActiveRequests[e], requestAnimationFrame((() => n.reject("No handler registered"))))
                    }, t._ForEachError = function (e, t) {
                        for (var n = e.length, s = 0; s < n; ++s) t(e[s].first, e[s].second)
                    }, t._TriggerError = function (e) {
                        t.trigger("Error", e)
                    }, t._OnError = function (e, n) {
                        if (null === e || 0 === e) t._ForEachError(n, t._TriggerError);
                        else {
                            var s = t._ActiveRequests[e];
                            delete t._ActiveRequests[e], s.reject(new Error(n[0].second))
                        }
                        if (n.length) throw new Error(n[0].second)
                    }, t._OnReady = function () {
                        t._BindingsReady = !0, t._WindowLoaded && t.trigger("Ready")
                    }, t._OnWindowLoaded = function () {
                        t._WindowLoaded = !0, t._BindingsReady && t.trigger("Ready")
                    }, n ? e.addEventListener("load", (function () {
                        t._OnWindowLoaded()
                    })) : t._WindowLoaded = !0, t.on("_Result", t._Result, t), t.on("_Reject", t._Reject, t), t.on("_OnReady", t._OnReady, t), t.on("_OnError", t._OnError, t), t.dependency = new WeakMap, t.hasAttachedUpdateListner = !1, t.onUpdateWholeModel = e => {
                        (t.dependency.get(e) || []).forEach((e => t.updateWholeModel(e)))
                    }, t.createObservableModel = e => {
                        const n = {
                            set: (n, s, i) => {
                                t.updateWholeModel(window[e]), n[s] = i
                            }
                        };
                        t.createJSModel(e, new Proxy({}, n))
                    }, t.addSynchronizationDependency = (e, n) => {
                        t.hasAttachedUpdateListner || (t.addDataBindEventListner("updateWholeModel", t.onUpdateWholeModel), t.hasAttachedUpdateListner = !0);
                        let s = t.dependency.get(e);
                        s || (s = [], t.dependency.set(e, s)), s.push(n)
                    }, t.removeSynchronizationDependency = (e, n) => {
                        let s = t.dependency.get(e) || [];
                        s.splice(s.indexOf(n), 1)
                    }, t.BindingsReady(i[0], i[1], i[2], i[3]), t._Initialized = !0, t
                }, e.exports ? e.exports = s(n.g, n.g.engine, !1) : engine = s(window, window.engine, !0)
            },
            580: () => {
                var e, t;
                document && document.location && document.location.hostname || document.location || Object.defineProperty(document, "location", {
                    get: () => ({
                        hostname: ""
                    })
                }), void 0 === document.body.clientWidth && (Object.defineProperty(Element.prototype, "clientHeight", {
                    get: function () {
                        return this.offsetHeight
                    }
                }), Object.defineProperty(Element.prototype, "clientWidth", {
                    get: function () {
                        return this.offsetWidth
                    }
                })), CanvasRenderingContext2D.prototype.resetTransform || (CanvasRenderingContext2D.prototype.resetTransform = function () {
                    this.setTransform(1, 0, 0, 1, 0, 0)
                }), CanvasRenderingContext2D.prototype.setLineDash || (CanvasRenderingContext2D.prototype.setLineDash = function () {}), window.addEventListener = (e = window.addEventListener, function (t, ...n) {
                    "test" != t && e(t, ...n)
                }), window.removeEventListener = (t = window.removeEventListener, function (e, ...n) {
                    "test" != e && t(e, ...n)
                })
            },
            4: e => {
                var t = .1,
                    n = "function" == typeof Float32Array;

                function s(e, t) {
                    return 1 - 3 * t + 3 * e
                }

                function i(e, t) {
                    return 3 * t - 6 * e
                }

                function a(e) {
                    return 3 * e
                }

                function o(e, t, n) {
                    return ((s(t, n) * e + i(t, n)) * e + a(t)) * e
                }

                function r(e, t, n) {
                    return 3 * s(t, n) * e * e + 2 * i(t, n) * e + a(t)
                }

                function l(e) {
                    return e
                }
                e.exports = function (e, s, i, a) {
                    if (!(0 <= e && e <= 1 && 0 <= i && i <= 1)) throw new Error("bezier x values must be in [0, 1] range");
                    if (e === s && i === a) return l;
                    for (var c = n ? new Float32Array(11) : new Array(11), u = 0; u < 11; ++u) c[u] = o(u * t, e, i);

                    function d(n) {
                        for (var s = 0, a = 1; 10 !== a && c[a] <= n; ++a) s += t;
                        --a;
                        var l = s + (n - c[a]) / (c[a + 1] - c[a]) * t,
                            u = r(l, e, i);
                        return u >= .001 ? function (e, t, n, s) {
                            for (var i = 0; i < 4; ++i) {
                                var a = r(t, n, s);
                                if (0 === a) return t;
                                t -= (o(t, n, s) - e) / a
                            }
                            return t
                        }(n, l, e, i) : 0 === u ? l : function (e, t, n, s, i) {
                            var a, r, l = 0;
                            do {
                                (a = o(r = t + (n - t) / 2, s, i) - e) > 0 ? n = r : t = r
                            } while (Math.abs(a) > 1e-7 && ++l < 10);
                            return r
                        }(n, s, s + t, e, i)
                    }
                    return function (e) {
                        return 0 === e ? 0 : 1 === e ? 1 : o(d(e), s, a)
                    }
                }
            },
            80: (e, t) => {
                var n;
                ! function () {
                    "use strict";
                    var s = {}.hasOwnProperty;

                    function i() {
                        for (var e = [], t = 0; t < arguments.length; t++) {
                            var n = arguments[t];
                            if (n) {
                                var a = typeof n;
                                if ("string" === a || "number" === a) e.push(n);
                                else if (Array.isArray(n)) {
                                    if (n.length) {
                                        var o = i.apply(null, n);
                                        o && e.push(o)
                                    }
                                } else if ("object" === a) {
                                    if (n.toString !== Object.prototype.toString && !n.toString.toString().includes("[native code]")) {
                                        e.push(n.toString());
                                        continue
                                    }
                                    for (var r in n) s.call(n, r) && n[r] && e.push(r)
                                }
                            }
                        }
                        return e.join(" ")
                    }
                    e.exports ? (i.default = i, e.exports = i) : void 0 === (n = function () {
                        return i
                    }.apply(t, [])) || (e.exports = n)
                }()
            },
            516: (e, t, n) => {
                "use strict";
                var s = n(504),
                    i = n(712);

                function a(e) {
                    for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++) t += "&args[]=" + encodeURIComponent(arguments[n]);
                    return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
                }
                var o = new Set,
                    r = {};

                function l(e, t) {
                    c(e, t), c(e + "Capture", t)
                }

                function c(e, t) {
                    for (r[e] = t, e = 0; e < t.length; e++) o.add(t[e])
                }
                var u = !("undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement),
                    d = Object.prototype.hasOwnProperty,
                    m = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
                    h = {},
                    g = {};

                function p(e, t, n, s, i, a, o) {
                    this.acceptsBooleans = 2 === t || 3 === t || 4 === t, this.attributeName = s, this.attributeNamespace = i, this.mustUseProperty = n, this.propertyName = e, this.type = t, this.sanitizeURL = a, this.removeEmptyString = o
                }
                var f = {};
                "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function (e) {
                    f[e] = new p(e, 0, !1, e, null, !1, !1)
                })), [
                    ["acceptCharset", "accept-charset"],
                    ["className", "class"],
                    ["htmlFor", "for"],
                    ["httpEquiv", "http-equiv"]
                ].forEach((function (e) {
                    var t = e[0];
                    f[t] = new p(t, 1, !1, e[1], null, !1, !1)
                })), ["contentEditable", "draggable", "spellCheck", "value"].forEach((function (e) {
                    f[e] = new p(e, 2, !1, e.toLowerCase(), null, !1, !1)
                })), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach((function (e) {
                    f[e] = new p(e, 2, !1, e, null, !1, !1)
                })), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function (e) {
                    f[e] = new p(e, 3, !1, e.toLowerCase(), null, !1, !1)
                })), ["checked", "multiple", "muted", "selected"].forEach((function (e) {
                    f[e] = new p(e, 3, !0, e, null, !1, !1)
                })), ["capture", "download"].forEach((function (e) {
                    f[e] = new p(e, 4, !1, e, null, !1, !1)
                })), ["cols", "rows", "size", "span"].forEach((function (e) {
                    f[e] = new p(e, 6, !1, e, null, !1, !1)
                })), ["rowSpan", "start"].forEach((function (e) {
                    f[e] = new p(e, 5, !1, e.toLowerCase(), null, !1, !1)
                }));
                var x = /[\-:]([a-z])/g;

                function v(e) {
                    return e[1].toUpperCase()
                }

                function _(e, t, n, s) {
                    var i = f.hasOwnProperty(t) ? f[t] : null;
                    (null !== i ? 0 !== i.type : s || !(2 < t.length) || "o" !== t[0] && "O" !== t[0] || "n" !== t[1] && "N" !== t[1]) && (function (e, t, n, s) {
                        if (null == t || function (e, t, n, s) {
                                if (null !== n && 0 === n.type) return !1;
                                switch (typeof t) {
                                case "function":
                                case "symbol":
                                    return !0;
                                case "boolean":
                                    return !s && (null !== n ? !n.acceptsBooleans : "data-" !== (e = e.toLowerCase().slice(0, 5)) && "aria-" !== e);
                                default:
                                    return !1
                                }
                            }(e, t, n, s)) return !0;
                        if (s) return !1;
                        if (null !== n) switch (n.type) {
                        case 3:
                            return !t;
                        case 4:
                            return !1 === t;
                        case 5:
                            return isNaN(t);
                        case 6:
                            return isNaN(t) || 1 > t
                        }
                        return !1
                    }(t, n, i, s) && (n = null), s || null === i ? function (e) {
                        return !!d.call(g, e) || !d.call(h, e) && (m.test(e) ? g[e] = !0 : (h[e] = !0, !1))
                    }(t) && (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n)) : i.mustUseProperty ? e[i.propertyName] = null === n ? 3 !== i.type && "" : n : (t = i.attributeName, s = i.attributeNamespace, null === n ? e.removeAttribute(t) : (n = 3 === (i = i.type) || 4 === i && !0 === n ? "" : "" + n, s ? e.setAttributeNS(s, t, n) : e.setAttribute(t, n))))
                }
                "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function (e) {
                    var t = e.replace(x, v);
                    f[t] = new p(t, 1, !1, e, null, !1, !1)
                })), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function (e) {
                    var t = e.replace(x, v);
                    f[t] = new p(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1)
                })), ["xml:base", "xml:lang", "xml:space"].forEach((function (e) {
                    var t = e.replace(x, v);
                    f[t] = new p(t, 1, !1, e, "http://www.w3.org/XML/1998/namespace", !1, !1)
                })), ["tabIndex", "crossOrigin"].forEach((function (e) {
                    f[e] = new p(e, 1, !1, e.toLowerCase(), null, !1, !1)
                })), f.xlinkHref = new p("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach((function (e) {
                    f[e] = new p(e, 1, !1, e.toLowerCase(), null, !0, !0)
                }));
                var b = s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
                    T = Symbol.for("react.element"),
                    E = Symbol.for("react.portal"),
                    I = Symbol.for("react.fragment"),
                    y = Symbol.for("react.strict_mode"),
                    j = Symbol.for("react.profiler"),
                    S = Symbol.for("react.provider"),
                    C = Symbol.for("react.context"),
                    N = Symbol.for("react.forward_ref"),
                    w = Symbol.for("react.suspense"),
                    O = Symbol.for("react.suspense_list"),
                    P = Symbol.for("react.memo"),
                    L = Symbol.for("react.lazy");
                Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode");
                var A = Symbol.for("react.offscreen");
                Symbol.for("react.legacy_hidden"), Symbol.for("react.cache"), Symbol.for("react.tracing_marker");
                var M = Symbol.iterator;

                function R(e) {
                    return null === e || "object" != typeof e ? null : "function" == typeof (e = M && e[M] || e["@@iterator"]) ? e : null
                }
                var k, D = Object.assign;

                function F(e) {
                    if (void 0 === k) try {
                        throw Error()
                    } catch (e) {
                        var t = e.stack.trim().match(/\n( *(at )?)/);
                        k = t && t[1] || ""
                    }
                    return "\n" + k + e
                }
                var U = !1;

                function B(e, t) {
                    if (!e || U) return "";
                    U = !0;
                    var n = Error.prepareStackTrace;
                    Error.prepareStackTrace = void 0;
                    try {
                        if (t)
                            if (t = function () {
                                    throw Error()
                                }, Object.defineProperty(t.prototype, "props", {
                                    set: function () {
                                        throw Error()
                                    }
                                }), "object" == typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(t, [])
                                } catch (e) {
                                    var s = e
                                }
                                Reflect.construct(e, [], t)
                            } else {
                                try {
                                    t.call()
                                } catch (e) {
                                    s = e
                                }
                                e.call(t.prototype)
                            }
                        else {
                            try {
                                throw Error()
                            } catch (e) {
                                s = e
                            }
                            e()
                        }
                    } catch (t) {
                        if (t && s && "string" == typeof t.stack) {
                            for (var i = t.stack.split("\n"), a = s.stack.split("\n"), o = i.length - 1, r = a.length - 1; 1 <= o && 0 <= r && i[o] !== a[r];) r--;
                            for (; 1 <= o && 0 <= r; o--, r--)
                                if (i[o] !== a[r]) {
                                    if (1 !== o || 1 !== r)
                                        do {
                                            if (o--, 0 > --r || i[o] !== a[r]) {
                                                var l = "\n" + i[o].replace(" at new ", " at ");
                                                return e.displayName && l.includes("<anonymous>") && (l = l.replace("<anonymous>", e.displayName)), l
                                            }
                                        } while (1 <= o && 0 <= r);
                                    break
                                }
                        }
                    } finally {
                        U = !1, Error.prepareStackTrace = n
                    }
                    return (e = e ? e.displayName || e.name : "") ? F(e) : ""
                }

                function G(e) {
                    switch (e.tag) {
                    case 5:
                        return F(e.type);
                    case 16:
                        return F("Lazy");
                    case 13:
                        return F("Suspense");
                    case 19:
                        return F("SuspenseList");
                    case 0:
                    case 2:
                    case 15:
                        return e = B(e.type, !1);
                    case 11:
                        return e = B(e.type.render, !1);
                    case 1:
                        return e = B(e.type, !0);
                    default:
                        return ""
                    }
                }

                function V(e) {
                    if (null == e) return null;
                    if ("function" == typeof e) return e.displayName || e.name || null;
                    if ("string" == typeof e) return e;
                    switch (e) {
                    case I:
                        return "Fragment";
                    case E:
                        return "Portal";
                    case j:
                        return "Profiler";
                    case y:
                        return "StrictMode";
                    case w:
                        return "Suspense";
                    case O:
                        return "SuspenseList"
                    }
                    if ("object" == typeof e) switch (e.$$typeof) {
                    case C:
                        return (e.displayName || "Context") + ".Consumer";
                    case S:
                        return (e._context.displayName || "Context") + ".Provider";
                    case N:
                        var t = e.render;
                        return (e = e.displayName) || (e = "" !== (e = t.displayName || t.name || "") ? "ForwardRef(" + e + ")" : "ForwardRef"), e;
                    case P:
                        return null !== (t = e.displayName || null) ? t : V(e.type) || "Memo";
                    case L:
                        t = e._payload, e = e._init;
                        try {
                            return V(e(t))
                        } catch (e) {}
                    }
                    return null
                }

                function H(e) {
                    var t = e.type;
                    switch (e.tag) {
                    case 24:
                        return "Cache";
                    case 9:
                        return (t.displayName || "Context") + ".Consumer";
                    case 10:
                        return (t._context.displayName || "Context") + ".Provider";
                    case 18:
                        return "DehydratedFragment";
                    case 11:
                        return e = (e = t.render).displayName || e.name || "", t.displayName || ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef");
                    case 7:
                        return "Fragment";
                    case 5:
                        return t;
                    case 4:
                        return "Portal";
                    case 3:
                        return "Root";
                    case 6:
                        return "Text";
                    case 16:
                        return V(t);
                    case 8:
                        return t === y ? "StrictMode" : "Mode";
                    case 22:
                        return "Offscreen";
                    case 12:
                        return "Profiler";
                    case 21:
                        return "Scope";
                    case 13:
                        return "Suspense";
                    case 19:
                        return "SuspenseList";
                    case 25:
                        return "TracingMarker";
                    case 1:
                    case 0:
                    case 17:
                    case 2:
                    case 14:
                    case 15:
                        if ("function" == typeof t) return t.displayName || t.name || null;
                        if ("string" == typeof t) return t
                    }
                    return null
                }

                function K(e) {
                    switch (typeof e) {
                    case "boolean":
                    case "number":
                    case "string":
                    case "undefined":
                    case "object":
                        return e;
                    default:
                        return ""
                    }
                }

                function W(e) {
                    var t = e.type;
                    return (e = e.nodeName) && "input" === e.toLowerCase() && ("checkbox" === t || "radio" === t)
                }

                function z(e) {
                    e._valueTracker || (e._valueTracker = function (e) {
                        var t = W(e) ? "checked" : "value",
                            n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                            s = "" + e[t];
                        if (!e.hasOwnProperty(t) && void 0 !== n && "function" == typeof n.get && "function" == typeof n.set) {
                            var i = n.get,
                                a = n.set;
                            return Object.defineProperty(e, t, {
                                configurable: !0,
                                get: function () {
                                    return i.call(this)
                                },
                                set: function (e) {
                                    s = "" + e, a.call(this, e)
                                }
                            }), Object.defineProperty(e, t, {
                                enumerable: n.enumerable
                            }), {
                                getValue: function () {
                                    return s
                                },
                                setValue: function (e) {
                                    s = "" + e
                                },
                                stopTracking: function () {
                                    e._valueTracker = null, delete e[t]
                                }
                            }
                        }
                    }(e))
                }

                function Y(e) {
                    if (!e) return !1;
                    var t = e._valueTracker;
                    if (!t) return !0;
                    var n = t.getValue(),
                        s = "";
                    return e && (s = W(e) ? e.checked ? "true" : "false" : e.value), (e = s) !== n && (t.setValue(e), !0)
                }

                function $(e) {
                    if (void 0 === (e = e || ("undefined" != typeof document ? document : void 0))) return null;
                    try {
                        return e.activeElement || e.body
                    } catch (t) {
                        return e.body
                    }
                }

                function q(e, t) {
                    var n = t.checked;
                    return D({}, t, {
                        defaultChecked: void 0,
                        defaultValue: void 0,
                        value: void 0,
                        checked: null != n ? n : e._wrapperState.initialChecked
                    })
                }

                function X(e, t) {
                    var n = null == t.defaultValue ? "" : t.defaultValue,
                        s = null != t.checked ? t.checked : t.defaultChecked;
                    n = K(null != t.value ? t.value : n), e._wrapperState = {
                        initialChecked: s,
                        initialValue: n,
                        controlled: "checkbox" === t.type || "radio" === t.type ? null != t.checked : null != t.value
                    }
                }

                function Q(e, t) {
                    null != (t = t.checked) && _(e, "checked", t, !1)
                }

                function Z(e, t) {
                    Q(e, t);
                    var n = K(t.value),
                        s = t.type;
                    if (null != n) "number" === s ? (0 === n && "" === e.value || e.value != n) && (e.value = "" + n) : e.value !== "" + n && (e.value = "" + n);
                    else if ("submit" === s || "reset" === s) return void e.removeAttribute("value");
                    t.hasOwnProperty("value") ? ee(e, t.type, n) : t.hasOwnProperty("defaultValue") && ee(e, t.type, K(t.defaultValue)), null == t.checked && null != t.defaultChecked && (e.defaultChecked = !!t.defaultChecked)
                }

                function J(e, t, n) {
                    if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
                        var s = t.type;
                        if (!("submit" !== s && "reset" !== s || void 0 !== t.value && null !== t.value)) return;
                        t = "" + e._wrapperState.initialValue, n || t === e.value || (e.value = t), e.defaultValue = t
                    }
                    "" !== (n = e.name) && (e.name = ""), e.defaultChecked = !!e._wrapperState.initialChecked, "" !== n && (e.name = n)
                }

                function ee(e, t, n) {
                    "number" === t && $(e.ownerDocument) === e || (null == n ? e.defaultValue = "" + e._wrapperState.initialValue : e.defaultValue !== "" + n && (e.defaultValue = "" + n))
                }
                var te = Array.isArray;

                function ne(e, t, n, s) {
                    if (e = e.options, t) {
                        t = {};
                        for (var i = 0; i < n.length; i++) t["$" + n[i]] = !0;
                        for (n = 0; n < e.length; n++) i = t.hasOwnProperty("$" + e[n].value), e[n].selected !== i && (e[n].selected = i), i && s && (e[n].defaultSelected = !0)
                    } else {
                        for (n = "" + K(n), t = null, i = 0; i < e.length; i++) {
                            if (e[i].value === n) return e[i].selected = !0, void(s && (e[i].defaultSelected = !0));
                            null !== t || e[i].disabled || (t = e[i])
                        }
                        null !== t && (t.selected = !0)
                    }
                }

                function se(e, t) {
                    if (null != t.dangerouslySetInnerHTML) throw Error(a(91));
                    return D({}, t, {
                        value: void 0,
                        defaultValue: void 0,
                        children: "" + e._wrapperState.initialValue
                    })
                }

                function ie(e, t) {
                    var n = t.value;
                    if (null == n) {
                        if (n = t.children, t = t.defaultValue, null != n) {
                            if (null != t) throw Error(a(92));
                            if (te(n)) {
                                if (1 < n.length) throw Error(a(93));
                                n = n[0]
                            }
                            t = n
                        }
                        null == t && (t = ""), n = t
                    }
                    e._wrapperState = {
                        initialValue: K(n)
                    }
                }

                function ae(e, t) {
                    var n = K(t.value),
                        s = K(t.defaultValue);
                    null != n && ((n = "" + n) !== e.value && (e.value = n), null == t.defaultValue && e.defaultValue !== n && (e.defaultValue = n)), null != s && (e.defaultValue = "" + s)
                }

                function oe(e) {
                    var t = e.textContent;
                    t === e._wrapperState.initialValue && "" !== t && null !== t && (e.value = t)
                }

                function re(e) {
                    switch (e) {
                    case "svg":
                        return "http://www.w3.org/2000/svg";
                    case "math":
                        return "http://www.w3.org/1998/Math/MathML";
                    default:
                        return "http://www.w3.org/1999/xhtml"
                    }
                }

                function le(e, t) {
                    return null == e || "http://www.w3.org/1999/xhtml" === e ? re(t) : "http://www.w3.org/2000/svg" === e && "foreignObject" === t ? "http://www.w3.org/1999/xhtml" : e
                }
                var ce, ue, de = (ue = function (e, t) {
                    if ("http://www.w3.org/2000/svg" !== e.namespaceURI || "innerHTML" in e) e.innerHTML = t;
                    else {
                        for ((ce = ce || document.createElement("div")).innerHTML = "<svg>" + t.valueOf().toString() + "</svg>", t = ce.firstChild; e.firstChild;) e.removeChild(e.firstChild);
                        for (; t.firstChild;) e.appendChild(t.firstChild)
                    }
                }, "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function (e, t, n, s) {
                    MSApp.execUnsafeLocalFunction((function () {
                        return ue(e, t)
                    }))
                } : ue);

                function me(e, t) {
                    if (t) {
                        var n = e.firstChild;
                        if (n && n === e.lastChild && 3 === n.nodeType) return void(n.nodeValue = t)
                    }
                    e.textContent = t
                }
                var he = {
                        animationIterationCount: !0,
                        aspectRatio: !0,
                        borderImageOutset: !0,
                        borderImageSlice: !0,
                        borderImageWidth: !0,
                        boxFlex: !0,
                        boxFlexGroup: !0,
                        boxOrdinalGroup: !0,
                        columnCount: !0,
                        columns: !0,
                        flex: !0,
                        flexGrow: !0,
                        flexPositive: !0,
                        flexShrink: !0,
                        flexNegative: !0,
                        flexOrder: !0,
                        gridArea: !0,
                        gridRow: !0,
                        gridRowEnd: !0,
                        gridRowSpan: !0,
                        gridRowStart: !0,
                        gridColumn: !0,
                        gridColumnEnd: !0,
                        gridColumnSpan: !0,
                        gridColumnStart: !0,
                        fontWeight: !0,
                        lineClamp: !0,
                        lineHeight: !0,
                        opacity: !0,
                        order: !0,
                        orphans: !0,
                        tabSize: !0,
                        widows: !0,
                        zIndex: !0,
                        zoom: !0,
                        fillOpacity: !0,
                        floodOpacity: !0,
                        stopOpacity: !0,
                        strokeDasharray: !0,
                        strokeDashoffset: !0,
                        strokeMiterlimit: !0,
                        strokeOpacity: !0,
                        strokeWidth: !0
                    },
                    ge = ["Webkit", "ms", "Moz", "O"];

                function pe(e, t, n) {
                    return null == t || "boolean" == typeof t || "" === t ? "" : n || "number" != typeof t || 0 === t || he.hasOwnProperty(e) && he[e] ? ("" + t).trim() : t + "px"
                }

                function fe(e, t) {
                    for (var n in e = e.style, t)
                        if (t.hasOwnProperty(n)) {
                            var s = 0 === n.indexOf("--"),
                                i = pe(n, t[n], s);
                            "float" === n && (n = "cssFloat"), s ? e.setProperty(n, i) : e[n] = i
                        }
                }
                Object.keys(he).forEach((function (e) {
                    ge.forEach((function (t) {
                        t = t + e.charAt(0).toUpperCase() + e.substring(1), he[t] = he[e]
                    }))
                }));
                var xe = D({
                    menuitem: !0
                }, {
                    area: !0,
                    base: !0,
                    br: !0,
                    col: !0,
                    embed: !0,
                    hr: !0,
                    img: !0,
                    input: !0,
                    keygen: !0,
                    link: !0,
                    meta: !0,
                    param: !0,
                    source: !0,
                    track: !0,
                    wbr: !0
                });

                function ve(e, t) {
                    if (t) {
                        if (xe[e] && (null != t.children || null != t.dangerouslySetInnerHTML)) throw Error(a(137, e));
                        if (null != t.dangerouslySetInnerHTML) {
                            if (null != t.children) throw Error(a(60));
                            if ("object" != typeof t.dangerouslySetInnerHTML || !("__html" in t.dangerouslySetInnerHTML)) throw Error(a(61))
                        }
                        if (null != t.style && "object" != typeof t.style) throw Error(a(62))
                    }
                }

                function _e(e, t) {
                    if (-1 === e.indexOf("-")) return "string" == typeof t.is;
                    switch (e) {
                    case "annotation-xml":
                    case "color-profile":
                    case "font-face":
                    case "font-face-src":
                    case "font-face-uri":
                    case "font-face-format":
                    case "font-face-name":
                    case "missing-glyph":
                        return !1;
                    default:
                        return !0
                    }
                }
                var be = null;

                function Te(e) {
                    return (e = e.target || e.srcElement || window).correspondingUseElement && (e = e.correspondingUseElement), 3 === e.nodeType ? e.parentNode : e
                }
                var Ee = null,
                    Ie = null,
                    ye = null;

                function je(e) {
                    if (e = _i(e)) {
                        if ("function" != typeof Ee) throw Error(a(280));
                        var t = e.stateNode;
                        t && (t = Ti(t), Ee(e.stateNode, e.type, t))
                    }
                }

                function Se(e) {
                    Ie ? ye ? ye.push(e) : ye = [e] : Ie = e
                }

                function Ce() {
                    if (Ie) {
                        var e = Ie,
                            t = ye;
                        if (ye = Ie = null, je(e), t)
                            for (e = 0; e < t.length; e++) je(t[e])
                    }
                }

                function Ne(e, t) {
                    return e(t)
                }

                function we() {}
                var Oe = !1;

                function Pe(e, t, n) {
                    if (Oe) return e(t, n);
                    Oe = !0;
                    try {
                        return Ne(e, t, n)
                    } finally {
                        Oe = !1, (null !== Ie || null !== ye) && (we(), Ce())
                    }
                }

                function Le(e, t) {
                    var n = e.stateNode;
                    if (null === n) return null;
                    var s = Ti(n);
                    if (null === s) return null;
                    n = s[t];
                    e: switch (t) {
                    case "onClick":
                    case "onClickCapture":
                    case "onDoubleClick":
                    case "onDoubleClickCapture":
                    case "onMouseDown":
                    case "onMouseDownCapture":
                    case "onMouseMove":
                    case "onMouseMoveCapture":
                    case "onMouseUp":
                    case "onMouseUpCapture":
                    case "onMouseEnter":
                        (s = !s.disabled) || (s = !("button" === (e = e.type) || "input" === e || "select" === e || "textarea" === e)), e = !s;
                        break e;
                    default:
                        e = !1
                    }
                    if (e) return null;
                    if (n && "function" != typeof n) throw Error(a(231, t, typeof n));
                    return n
                }
                var Ae = !1;
                if (u) try {
                    var Me = {};
                    Object.defineProperty(Me, "passive", {
                        get: function () {
                            Ae = !0
                        }
                    }), window.addEventListener("test", Me, Me), window.removeEventListener("test", Me, Me)
                } catch (ue) {
                    Ae = !1
                }

                function Re(e, t, n, s, i, a, o, r, l) {
                    var c = Array.prototype.slice.call(arguments, 3);
                    try {
                        t.apply(n, c)
                    } catch (e) {
                        this.onError(e)
                    }
                }
                var ke = !1,
                    De = null,
                    Fe = !1,
                    Ue = null,
                    Be = {
                        onError: function (e) {
                            ke = !0, De = e
                        }
                    };

                function Ge(e, t, n, s, i, a, o, r, l) {
                    ke = !1, De = null, Re.apply(Be, arguments)
                }

                function Ve(e) {
                    var t = e,
                        n = e;
                    if (e.alternate)
                        for (; t.return;) t = t.return;
                    else {
                        e = t;
                        do {
                            0 != (4098 & (t = e).flags) && (n = t.return), e = t.return
                        } while (e)
                    }
                    return 3 === t.tag ? n : null
                }

                function He(e) {
                    if (13 === e.tag) {
                        var t = e.memoizedState;
                        if (null === t && (null !== (e = e.alternate) && (t = e.memoizedState)), null !== t) return t.dehydrated
                    }
                    return null
                }

                function Ke(e) {
                    if (Ve(e) !== e) throw Error(a(188))
                }

                function We(e) {
                    return null !== (e = function (e) {
                        var t = e.alternate;
                        if (!t) {
                            if (null === (t = Ve(e))) throw Error(a(188));
                            return t !== e ? null : e
                        }
                        for (var n = e, s = t;;) {
                            var i = n.return;
                            if (null === i) break;
                            var o = i.alternate;
                            if (null === o) {
                                if (null !== (s = i.return)) {
                                    n = s;
                                    continue
                                }
                                break
                            }
                            if (i.child === o.child) {
                                for (o = i.child; o;) {
                                    if (o === n) return Ke(i), e;
                                    if (o === s) return Ke(i), t;
                                    o = o.sibling
                                }
                                throw Error(a(188))
                            }
                            if (n.return !== s.return) n = i, s = o;
                            else {
                                for (var r = !1, l = i.child; l;) {
                                    if (l === n) {
                                        r = !0, n = i, s = o;
                                        break
                                    }
                                    if (l === s) {
                                        r = !0, s = i, n = o;
                                        break
                                    }
                                    l = l.sibling
                                }
                                if (!r) {
                                    for (l = o.child; l;) {
                                        if (l === n) {
                                            r = !0, n = o, s = i;
                                            break
                                        }
                                        if (l === s) {
                                            r = !0, s = o, n = i;
                                            break
                                        }
                                        l = l.sibling
                                    }
                                    if (!r) throw Error(a(189))
                                }
                            }
                            if (n.alternate !== s) throw Error(a(190))
                        }
                        if (3 !== n.tag) throw Error(a(188));
                        return n.stateNode.current === n ? e : t
                    }(e)) ? ze(e) : null
                }

                function ze(e) {
                    if (5 === e.tag || 6 === e.tag) return e;
                    for (e = e.child; null !== e;) {
                        var t = ze(e);
                        if (null !== t) return t;
                        e = e.sibling
                    }
                    return null
                }
                var Ye = i.unstable_scheduleCallback,
                    $e = i.unstable_cancelCallback,
                    qe = i.unstable_shouldYield,
                    Xe = i.unstable_requestPaint,
                    Qe = i.unstable_now,
                    Ze = i.unstable_getCurrentPriorityLevel,
                    Je = i.unstable_ImmediatePriority,
                    et = i.unstable_UserBlockingPriority,
                    tt = i.unstable_NormalPriority,
                    nt = i.unstable_LowPriority,
                    st = i.unstable_IdlePriority,
                    it = null,
                    at = null;
                var ot = Math.clz32 ? Math.clz32 : function (e) {
                        return e >>>= 0, 0 === e ? 32 : 31 - (rt(e) / lt | 0) | 0
                    },
                    rt = Math.log,
                    lt = Math.LN2;
                var ct = 64,
                    ut = 4194304;

                function dt(e) {
                    switch (e & -e) {
                    case 1:
                        return 1;
                    case 2:
                        return 2;
                    case 4:
                        return 4;
                    case 8:
                        return 8;
                    case 16:
                        return 16;
                    case 32:
                        return 32;
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                        return 4194240 & e;
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                        return 130023424 & e;
                    case 134217728:
                        return 134217728;
                    case 268435456:
                        return 268435456;
                    case 536870912:
                        return 536870912;
                    case 1073741824:
                        return 1073741824;
                    default:
                        return e
                    }
                }

                function mt(e, t) {
                    var n = e.pendingLanes;
                    if (0 === n) return 0;
                    var s = 0,
                        i = e.suspendedLanes,
                        a = e.pingedLanes,
                        o = 268435455 & n;
                    if (0 !== o) {
                        var r = o & ~i;
                        0 !== r ? s = dt(r) : 0 !== (a &= o) && (s = dt(a))
                    } else 0 !== (o = n & ~i) ? s = dt(o) : 0 !== a && (s = dt(a));
                    if (0 === s) return 0;
                    if (0 !== t && t !== s && 0 == (t & i) && ((i = s & -s) >= (a = t & -t) || 16 === i && 0 != (4194240 & a))) return t;
                    if (0 != (4 & s) && (s |= 16 & n), 0 !== (t = e.entangledLanes))
                        for (e = e.entanglements, t &= s; 0 < t;) i = 1 << (n = 31 - ot(t)), s |= e[n], t &= ~i;
                    return s
                }

                function ht(e, t) {
                    switch (e) {
                    case 1:
                    case 2:
                    case 4:
                        return t + 250;
                    case 8:
                    case 16:
                    case 32:
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                        return t + 5e3;
                    default:
                        return -1
                    }
                }

                function gt(e) {
                    return 0 !== (e = -1073741825 & e.pendingLanes) ? e : 1073741824 & e ? 1073741824 : 0
                }

                function pt() {
                    var e = ct;
                    return 0 == (4194240 & (ct <<= 1)) && (ct = 64), e
                }

                function ft(e) {
                    for (var t = [], n = 0; 31 > n; n++) t.push(e);
                    return t
                }

                function xt(e, t, n) {
                    e.pendingLanes |= t, 536870912 !== t && (e.suspendedLanes = 0, e.pingedLanes = 0), (e = e.eventTimes)[t = 31 - ot(t)] = n
                }

                function vt(e, t) {
                    var n = e.entangledLanes |= t;
                    for (e = e.entanglements; n;) {
                        var s = 31 - ot(n),
                            i = 1 << s;
                        i & t | e[s] & t && (e[s] |= t), n &= ~i
                    }
                }
                var _t = 0;

                function bt(e) {
                    return 1 < (e &= -e) ? 4 < e ? 0 != (268435455 & e) ? 16 : 536870912 : 4 : 1
                }
                var Tt, Et, It, yt, jt, St = !1,
                    Ct = [],
                    Nt = null,
                    wt = null,
                    Ot = null,
                    Pt = new Map,
                    Lt = new Map,
                    At = [],
                    Mt = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");

                function Rt(e, t) {
                    switch (e) {
                    case "focusin":
                    case "focusout":
                        Nt = null;
                        break;
                    case "dragenter":
                    case "dragleave":
                        wt = null;
                        break;
                    case "mouseover":
                    case "mouseout":
                        Ot = null;
                        break;
                    case "pointerover":
                    case "pointerout":
                        Pt.delete(t.pointerId);
                        break;
                    case "gotpointercapture":
                    case "lostpointercapture":
                        Lt.delete(t.pointerId)
                    }
                }

                function kt(e, t, n, s, i, a) {
                    return null === e || e.nativeEvent !== a ? (e = {
                        blockedOn: t,
                        domEventName: n,
                        eventSystemFlags: s,
                        nativeEvent: a,
                        targetContainers: [i]
                    }, null !== t && (null !== (t = _i(t)) && Et(t)), e) : (e.eventSystemFlags |= s, t = e.targetContainers, null !== i && -1 === t.indexOf(i) && t.push(i), e)
                }

                function Dt(e) {
                    var t = vi(e.target);
                    if (null !== t) {
                        var n = Ve(t);
                        if (null !== n)
                            if (13 === (t = n.tag)) {
                                if (null !== (t = He(n))) return e.blockedOn = t, void jt(e.priority, (function () {
                                    It(n)
                                }))
                            } else if (3 === t && n.stateNode.current.memoizedState.isDehydrated) return void(e.blockedOn = 3 === n.tag ? n.stateNode.containerInfo : null)
                    }
                    e.blockedOn = null
                }

                function Ft(e) {
                    if (null !== e.blockedOn) return !1;
                    for (var t = e.targetContainers; 0 < t.length;) {
                        var n = qt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
                        if (null !== n) return null !== (t = _i(n)) && Et(t), e.blockedOn = n, !1;
                        var s = new(n = e.nativeEvent).constructor(n.type, n);
                        be = s, n.target.dispatchEvent(s), be = null, t.shift()
                    }
                    return !0
                }

                function Ut(e, t, n) {
                    Ft(e) && n.delete(t)
                }

                function Bt() {
                    St = !1, null !== Nt && Ft(Nt) && (Nt = null), null !== wt && Ft(wt) && (wt = null), null !== Ot && Ft(Ot) && (Ot = null), Pt.forEach(Ut), Lt.forEach(Ut)
                }

                function Gt(e, t) {
                    e.blockedOn === t && (e.blockedOn = null, St || (St = !0, i.unstable_scheduleCallback(i.unstable_NormalPriority, Bt)))
                }

                function Vt(e) {
                    function t(t) {
                        return Gt(t, e)
                    }
                    if (0 < Ct.length) {
                        Gt(Ct[0], e);
                        for (var n = 1; n < Ct.length; n++) {
                            var s = Ct[n];
                            s.blockedOn === e && (s.blockedOn = null)
                        }
                    }
                    for (null !== Nt && Gt(Nt, e), null !== wt && Gt(wt, e), null !== Ot && Gt(Ot, e), Pt.forEach(t), Lt.forEach(t), n = 0; n < At.length; n++)(s = At[n]).blockedOn === e && (s.blockedOn = null);
                    for (; 0 < At.length && null === (n = At[0]).blockedOn;) Dt(n), null === n.blockedOn && At.shift()
                }
                var Ht = b.ReactCurrentBatchConfig,
                    Kt = !0;

                function Wt(e, t, n, s) {
                    var i = _t,
                        a = Ht.transition;
                    Ht.transition = null;
                    try {
                        _t = 1, Yt(e, t, n, s)
                    } finally {
                        _t = i, Ht.transition = a
                    }
                }

                function zt(e, t, n, s) {
                    var i = _t,
                        a = Ht.transition;
                    Ht.transition = null;
                    try {
                        _t = 4, Yt(e, t, n, s)
                    } finally {
                        _t = i, Ht.transition = a
                    }
                }

                function Yt(e, t, n, s) {
                    if (Kt) {
                        var i = qt(e, t, n, s);
                        if (null === i) Ks(e, t, s, $t, n), Rt(e, s);
                        else if (function (e, t, n, s, i) {
                                switch (t) {
                                case "focusin":
                                    return Nt = kt(Nt, e, t, n, s, i), !0;
                                case "dragenter":
                                    return wt = kt(wt, e, t, n, s, i), !0;
                                case "mouseover":
                                    return Ot = kt(Ot, e, t, n, s, i), !0;
                                case "pointerover":
                                    var a = i.pointerId;
                                    return Pt.set(a, kt(Pt.get(a) || null, e, t, n, s, i)), !0;
                                case "gotpointercapture":
                                    return a = i.pointerId, Lt.set(a, kt(Lt.get(a) || null, e, t, n, s, i)), !0
                                }
                                return !1
                            }(i, e, t, n, s)) s.stopPropagation();
                        else if (Rt(e, s), 4 & t && -1 < Mt.indexOf(e)) {
                            for (; null !== i;) {
                                var a = _i(i);
                                if (null !== a && Tt(a), null === (a = qt(e, t, n, s)) && Ks(e, t, s, $t, n), a === i) break;
                                i = a
                            }
                            null !== i && s.stopPropagation()
                        } else Ks(e, t, s, null, n)
                    }
                }
                var $t = null;

                function qt(e, t, n, s) {
                    if ($t = null, null !== (e = vi(e = Te(s))))
                        if (null === (t = Ve(e))) e = null;
                        else if (13 === (n = t.tag)) {
                        if (null !== (e = He(t))) return e;
                        e = null
                    } else if (3 === n) {
                        if (t.stateNode.current.memoizedState.isDehydrated) return 3 === t.tag ? t.stateNode.containerInfo : null;
                        e = null
                    } else t !== e && (e = null);
                    return $t = e, null
                }

                function Xt(e) {
                    switch (e) {
                    case "cancel":
                    case "click":
                    case "close":
                    case "contextmenu":
                    case "copy":
                    case "cut":
                    case "auxclick":
                    case "dblclick":
                    case "dragend":
                    case "dragstart":
                    case "drop":
                    case "focusin":
                    case "focusout":
                    case "input":
                    case "invalid":
                    case "keydown":
                    case "keypress":
                    case "keyup":
                    case "mousedown":
                    case "mouseup":
                    case "paste":
                    case "pause":
                    case "play":
                    case "pointercancel":
                    case "pointerdown":
                    case "pointerup":
                    case "ratechange":
                    case "reset":
                    case "resize":
                    case "seeked":
                    case "submit":
                    case "touchcancel":
                    case "touchend":
                    case "touchstart":
                    case "volumechange":
                    case "change":
                    case "selectionchange":
                    case "textInput":
                    case "compositionstart":
                    case "compositionend":
                    case "compositionupdate":
                    case "beforeblur":
                    case "afterblur":
                    case "beforeinput":
                    case "blur":
                    case "fullscreenchange":
                    case "focus":
                    case "hashchange":
                    case "popstate":
                    case "select":
                    case "selectstart":
                        return 1;
                    case "drag":
                    case "dragenter":
                    case "dragexit":
                    case "dragleave":
                    case "dragover":
                    case "mousemove":
                    case "mouseout":
                    case "mouseover":
                    case "pointermove":
                    case "pointerout":
                    case "pointerover":
                    case "scroll":
                    case "toggle":
                    case "touchmove":
                    case "wheel":
                    case "mouseenter":
                    case "mouseleave":
                    case "pointerenter":
                    case "pointerleave":
                        return 4;
                    case "message":
                        switch (Ze()) {
                        case Je:
                            return 1;
                        case et:
                            return 4;
                        case tt:
                        case nt:
                            return 16;
                        case st:
                            return 536870912;
                        default:
                            return 16
                        }
                        default:
                            return 16
                    }
                }
                var Qt = null,
                    Zt = null,
                    Jt = null;

                function en() {
                    if (Jt) return Jt;
                    var e, t, n = Zt,
                        s = n.length,
                        i = "value" in Qt ? Qt.value : Qt.textContent,
                        a = i.length;
                    for (e = 0; e < s && n[e] === i[e]; e++);
                    var o = s - e;
                    for (t = 1; t <= o && n[s - t] === i[a - t]; t++);
                    return Jt = i.slice(e, 1 < t ? 1 - t : void 0)
                }

                function tn(e) {
                    var t = e.keyCode;
                    return "charCode" in e ? 0 === (e = e.charCode) && 13 === t && (e = 13) : e = t, 10 === e && (e = 13), 32 <= e || 13 === e ? e : 0
                }

                function nn() {
                    return !0
                }

                function sn() {
                    return !1
                }

                function an(e) {
                    function t(t, n, s, i, a) {
                        for (var o in this._reactName = t, this._targetInst = s, this.type = n, this.nativeEvent = i, this.target = a, this.currentTarget = null, e) e.hasOwnProperty(o) && (t = e[o], this[o] = t ? t(i) : i[o]);
                        return this.isDefaultPrevented = (null != i.defaultPrevented ? i.defaultPrevented : !1 === i.returnValue) ? nn : sn, this.isPropagationStopped = sn, this
                    }
                    return D(t.prototype, {
                        preventDefault: function () {
                            this.defaultPrevented = !0;
                            var e = this.nativeEvent;
                            e && (e.preventDefault ? e.preventDefault() : "unknown" != typeof e.returnValue && (e.returnValue = !1), this.isDefaultPrevented = nn)
                        },
                        stopPropagation: function () {
                            var e = this.nativeEvent;
                            e && (e.stopPropagation ? e.stopPropagation() : "unknown" != typeof e.cancelBubble && (e.cancelBubble = !0), this.isPropagationStopped = nn)
                        },
                        persist: function () {},
                        isPersistent: nn
                    }), t
                }
                var on, rn, ln, cn = {
                        eventPhase: 0,
                        bubbles: 0,
                        cancelable: 0,
                        timeStamp: function (e) {
                            return e.timeStamp || Date.now()
                        },
                        defaultPrevented: 0,
                        isTrusted: 0
                    },
                    un = an(cn),
                    dn = D({}, cn, {
                        view: 0,
                        detail: 0
                    }),
                    mn = an(dn),
                    hn = D({}, dn, {
                        screenX: 0,
                        screenY: 0,
                        clientX: 0,
                        clientY: 0,
                        pageX: 0,
                        pageY: 0,
                        ctrlKey: 0,
                        shiftKey: 0,
                        altKey: 0,
                        metaKey: 0,
                        getModifierState: jn,
                        button: 0,
                        buttons: 0,
                        relatedTarget: function (e) {
                            return void 0 === e.relatedTarget ? e.fromElement === e.srcElement ? e.toElement : e.fromElement : e.relatedTarget
                        },
                        movementX: function (e) {
                            return "movementX" in e ? e.movementX : (e !== ln && (ln && "mousemove" === e.type ? (on = e.screenX - ln.screenX, rn = e.screenY - ln.screenY) : rn = on = 0, ln = e), on)
                        },
                        movementY: function (e) {
                            return "movementY" in e ? e.movementY : rn
                        }
                    }),
                    gn = an(hn),
                    pn = an(D({}, hn, {
                        dataTransfer: 0
                    })),
                    fn = an(D({}, dn, {
                        relatedTarget: 0
                    })),
                    xn = an(D({}, cn, {
                        animationName: 0,
                        elapsedTime: 0,
                        pseudoElement: 0
                    })),
                    vn = D({}, cn, {
                        clipboardData: function (e) {
                            return "clipboardData" in e ? e.clipboardData : window.clipboardData
                        }
                    }),
                    _n = an(vn),
                    bn = an(D({}, cn, {
                        data: 0
                    })),
                    Tn = {
                        Esc: "Escape",
                        Spacebar: " ",
                        Left: "ArrowLeft",
                        Up: "ArrowUp",
                        Right: "ArrowRight",
                        Down: "ArrowDown",
                        Del: "Delete",
                        Win: "OS",
                        Menu: "ContextMenu",
                        Apps: "ContextMenu",
                        Scroll: "ScrollLock",
                        MozPrintableKey: "Unidentified"
                    },
                    En = {
                        8: "Backspace",
                        9: "Tab",
                        12: "Clear",
                        13: "Enter",
                        16: "Shift",
                        17: "Control",
                        18: "Alt",
                        19: "Pause",
                        20: "CapsLock",
                        27: "Escape",
                        32: " ",
                        33: "PageUp",
                        34: "PageDown",
                        35: "End",
                        36: "Home",
                        37: "ArrowLeft",
                        38: "ArrowUp",
                        39: "ArrowRight",
                        40: "ArrowDown",
                        45: "Insert",
                        46: "Delete",
                        112: "F1",
                        113: "F2",
                        114: "F3",
                        115: "F4",
                        116: "F5",
                        117: "F6",
                        118: "F7",
                        119: "F8",
                        120: "F9",
                        121: "F10",
                        122: "F11",
                        123: "F12",
                        144: "NumLock",
                        145: "ScrollLock",
                        224: "Meta"
                    },
                    In = {
                        Alt: "altKey",
                        Control: "ctrlKey",
                        Meta: "metaKey",
                        Shift: "shiftKey"
                    };

                function yn(e) {
                    var t = this.nativeEvent;
                    return t.getModifierState ? t.getModifierState(e) : !!(e = In[e]) && !!t[e]
                }

                function jn() {
                    return yn
                }
                var Sn = D({}, dn, {
                        key: function (e) {
                            if (e.key) {
                                var t = Tn[e.key] || e.key;
                                if ("Unidentified" !== t) return t
                            }
                            return "keypress" === e.type ? 13 === (e = tn(e)) ? "Enter" : String.fromCharCode(e) : "keydown" === e.type || "keyup" === e.type ? En[e.keyCode] || "Unidentified" : ""
                        },
                        code: 0,
                        location: 0,
                        ctrlKey: 0,
                        shiftKey: 0,
                        altKey: 0,
                        metaKey: 0,
                        repeat: 0,
                        locale: 0,
                        getModifierState: jn,
                        charCode: function (e) {
                            return "keypress" === e.type ? tn(e) : 0
                        },
                        keyCode: function (e) {
                            return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                        },
                        which: function (e) {
                            return "keypress" === e.type ? tn(e) : "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                        }
                    }),
                    Cn = an(Sn),
                    Nn = an(D({}, hn, {
                        pointerId: 0,
                        width: 0,
                        height: 0,
                        pressure: 0,
                        tangentialPressure: 0,
                        tiltX: 0,
                        tiltY: 0,
                        twist: 0,
                        pointerType: 0,
                        isPrimary: 0
                    })),
                    wn = an(D({}, dn, {
                        touches: 0,
                        targetTouches: 0,
                        changedTouches: 0,
                        altKey: 0,
                        metaKey: 0,
                        ctrlKey: 0,
                        shiftKey: 0,
                        getModifierState: jn
                    })),
                    On = an(D({}, cn, {
                        propertyName: 0,
                        elapsedTime: 0,
                        pseudoElement: 0
                    })),
                    Pn = D({}, hn, {
                        deltaX: function (e) {
                            return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0
                        },
                        deltaY: function (e) {
                            return "deltaY" in e ? e.deltaY : "wheelDeltaY" in e ? -e.wheelDeltaY : "wheelDelta" in e ? -e.wheelDelta : 0
                        },
                        deltaZ: 0,
                        deltaMode: 0
                    }),
                    Ln = an(Pn),
                    An = [9, 13, 27, 32],
                    Mn = u && "CompositionEvent" in window,
                    Rn = null;
                u && "documentMode" in document && (Rn = document.documentMode);
                var kn = u && "TextEvent" in window && !Rn,
                    Dn = u && (!Mn || Rn && 8 < Rn && 11 >= Rn),
                    Fn = String.fromCharCode(32),
                    Un = !1;

                function Bn(e, t) {
                    switch (e) {
                    case "keyup":
                        return -1 !== An.indexOf(t.keyCode);
                    case "keydown":
                        return 229 !== t.keyCode;
                    case "keypress":
                    case "mousedown":
                    case "focusout":
                        return !0;
                    default:
                        return !1
                    }
                }

                function Gn(e) {
                    return "object" == typeof (e = e.detail) && "data" in e ? e.data : null
                }
                var Vn = !1;
                var Hn = {
                    color: !0,
                    date: !0,
                    datetime: !0,
                    "datetime-local": !0,
                    email: !0,
                    month: !0,
                    number: !0,
                    password: !0,
                    range: !0,
                    search: !0,
                    tel: !0,
                    text: !0,
                    time: !0,
                    url: !0,
                    week: !0
                };

                function Kn(e) {
                    var t = e && e.nodeName && e.nodeName.toLowerCase();
                    return "input" === t ? !!Hn[e.type] : "textarea" === t
                }

                function Wn(e, t, n, s) {
                    Se(s), 0 < (t = zs(t, "onChange")).length && (n = new un("onChange", "change", null, n, s), e.push({
                        event: n,
                        listeners: t
                    }))
                }
                var zn = null,
                    Yn = null;

                function $n(e) {
                    Fs(e, 0)
                }

                function qn(e) {
                    if (Y(bi(e))) return e
                }

                function Xn(e, t) {
                    if ("change" === e) return t
                }
                var Qn = !1;
                if (u) {
                    var Zn;
                    if (u) {
                        var Jn = "oninput" in document;
                        if (!Jn) {
                            var es = document.createElement("div");
                            es.setAttribute("oninput", "return;"), Jn = "function" == typeof es.oninput
                        }
                        Zn = Jn
                    } else Zn = !1;
                    Qn = Zn && (!document.documentMode || 9 < document.documentMode)
                }

                function ts() {
                    zn && (zn.detachEvent("onpropertychange", ns), Yn = zn = null)
                }

                function ns(e) {
                    if ("value" === e.propertyName && qn(Yn)) {
                        var t = [];
                        Wn(t, Yn, e, Te(e)), Pe($n, t)
                    }
                }

                function ss(e, t, n) {
                    "focusin" === e ? (ts(), Yn = n, (zn = t).attachEvent("onpropertychange", ns)) : "focusout" === e && ts()
                }

                function is(e) {
                    if ("selectionchange" === e || "keyup" === e || "keydown" === e) return qn(Yn)
                }

                function as(e, t) {
                    if ("click" === e) return qn(t)
                }

                function os(e, t) {
                    if ("input" === e || "change" === e) return qn(t)
                }
                var rs = "function" == typeof Object.is ? Object.is : function (e, t) {
                    return e === t && (0 !== e || 1 / e == 1 / t) || e != e && t != t
                };

                function ls(e, t) {
                    if (rs(e, t)) return !0;
                    if ("object" != typeof e || null === e || "object" != typeof t || null === t) return !1;
                    var n = Object.keys(e),
                        s = Object.keys(t);
                    if (n.length !== s.length) return !1;
                    for (s = 0; s < n.length; s++) {
                        var i = n[s];
                        if (!d.call(t, i) || !rs(e[i], t[i])) return !1
                    }
                    return !0
                }

                function cs(e) {
                    for (; e && e.firstChild;) e = e.firstChild;
                    return e
                }

                function us(e, t) {
                    var n, s = cs(e);
                    for (e = 0; s;) {
                        if (3 === s.nodeType) {
                            if (n = e + s.textContent.length, e <= t && n >= t) return {
                                node: s,
                                offset: t - e
                            };
                            e = n
                        }
                        e: {
                            for (; s;) {
                                if (s.nextSibling) {
                                    s = s.nextSibling;
                                    break e
                                }
                                s = s.parentNode
                            }
                            s = void 0
                        }
                        s = cs(s)
                    }
                }

                function ds(e, t) {
                    return !(!e || !t) && (e === t || (!e || 3 !== e.nodeType) && (t && 3 === t.nodeType ? ds(e, t.parentNode) : "contains" in e ? e.contains(t) : !!e.compareDocumentPosition && !!(16 & e.compareDocumentPosition(t))))
                }

                function ms() {
                    for (var e = window, t = $(); t instanceof e.HTMLIFrameElement;) {
                        try {
                            var n = "string" == typeof t.contentWindow.location.href
                        } catch (e) {
                            n = !1
                        }
                        if (!n) break;
                        t = $((e = t.contentWindow).document)
                    }
                    return t
                }

                function hs(e) {
                    var t = e && e.nodeName && e.nodeName.toLowerCase();
                    return t && ("input" === t && ("text" === e.type || "search" === e.type || "tel" === e.type || "url" === e.type || "password" === e.type) || "textarea" === t || "true" === e.contentEditable)
                }

                function gs(e) {
                    var t = ms(),
                        n = e.focusedElem,
                        s = e.selectionRange;
                    if (t !== n && n && n.ownerDocument && ds(n.ownerDocument.documentElement, n)) {
                        if (null !== s && hs(n))
                            if (t = s.start, void 0 === (e = s.end) && (e = t), "selectionStart" in n) n.selectionStart = t, n.selectionEnd = Math.min(e, n.value.length);
                            else if ((e = (t = n.ownerDocument || document) && t.defaultView || window).getSelection) {
                            e = e.getSelection();
                            var i = n.textContent.length,
                                a = Math.min(s.start, i);
                            s = void 0 === s.end ? a : Math.min(s.end, i), !e.extend && a > s && (i = s, s = a, a = i), i = us(n, a);
                            var o = us(n, s);
                            i && o && (1 !== e.rangeCount || e.anchorNode !== i.node || e.anchorOffset !== i.offset || e.focusNode !== o.node || e.focusOffset !== o.offset) && ((t = t.createRange()).setStart(i.node, i.offset), e.removeAllRanges(), a > s ? (e.addRange(t), e.extend(o.node, o.offset)) : (t.setEnd(o.node, o.offset), e.addRange(t)))
                        }
                        for (t = [], e = n; e = e.parentNode;) 1 === e.nodeType && t.push({
                            element: e,
                            left: e.scrollLeft,
                            top: e.scrollTop
                        });
                        for ("function" == typeof n.focus && n.focus(), n = 0; n < t.length; n++)(e = t[n]).element.scrollLeft = e.left, e.element.scrollTop = e.top
                    }
                }
                var ps = u && "documentMode" in document && 11 >= document.documentMode,
                    fs = null,
                    xs = null,
                    vs = null,
                    _s = !1;

                function bs(e, t, n) {
                    var s = n.window === n ? n.document : 9 === n.nodeType ? n : n.ownerDocument;
                    _s || null == fs || fs !== $(s) || ("selectionStart" in (s = fs) && hs(s) ? s = {
                        start: s.selectionStart,
                        end: s.selectionEnd
                    } : s = {
                        anchorNode: (s = (s.ownerDocument && s.ownerDocument.defaultView || window).getSelection()).anchorNode,
                        anchorOffset: s.anchorOffset,
                        focusNode: s.focusNode,
                        focusOffset: s.focusOffset
                    }, vs && ls(vs, s) || (vs = s, 0 < (s = zs(xs, "onSelect")).length && (t = new un("onSelect", "select", null, t, n), e.push({
                        event: t,
                        listeners: s
                    }), t.target = fs)))
                }

                function Ts(e, t) {
                    var n = {};
                    return n[e.toLowerCase()] = t.toLowerCase(), n["Webkit" + e] = "webkit" + t, n["Moz" + e] = "moz" + t, n
                }
                var Es = {
                        animationend: Ts("Animation", "AnimationEnd"),
                        animationiteration: Ts("Animation", "AnimationIteration"),
                        animationstart: Ts("Animation", "AnimationStart"),
                        transitionend: Ts("Transition", "TransitionEnd")
                    },
                    Is = {},
                    ys = {};

                function js(e) {
                    if (Is[e]) return Is[e];
                    if (!Es[e]) return e;
                    var t, n = Es[e];
                    for (t in n)
                        if (n.hasOwnProperty(t) && t in ys) return Is[e] = n[t];
                    return e
                }
                u && (ys = document.createElement("div").style, "AnimationEvent" in window || (delete Es.animationend.animation, delete Es.animationiteration.animation, delete Es.animationstart.animation), "TransitionEvent" in window || delete Es.transitionend.transition);
                var Ss = js("animationend"),
                    Cs = js("animationiteration"),
                    Ns = js("animationstart"),
                    ws = js("transitionend"),
                    Os = new Map,
                    Ps = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");

                function Ls(e, t) {
                    Os.set(e, t), l(t, [e])
                }
                for (var As = 0; As < Ps.length; As++) {
                    var Ms = Ps[As];
                    Ls(Ms.toLowerCase(), "on" + (Ms[0].toUpperCase() + Ms.slice(1)))
                }
                Ls(Ss, "onAnimationEnd"), Ls(Cs, "onAnimationIteration"), Ls(Ns, "onAnimationStart"), Ls("dblclick", "onDoubleClick"), Ls("focusin", "onFocus"), Ls("focusout", "onBlur"), Ls(ws, "onTransitionEnd"), c("onMouseEnter", ["mouseout", "mouseover"]), c("onMouseLeave", ["mouseout", "mouseover"]), c("onPointerEnter", ["pointerout", "pointerover"]), c("onPointerLeave", ["pointerout", "pointerover"]), l("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), l("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), l("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), l("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), l("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), l("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
                var Rs = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
                    ks = new Set("cancel close invalid load scroll toggle".split(" ").concat(Rs));

                function Ds(e, t, n) {
                    var s = e.type || "unknown-event";
                    e.currentTarget = n,
                        function (e, t, n, s, i, o, r, l, c) {
                            if (Ge.apply(this, arguments), ke) {
                                if (!ke) throw Error(a(198));
                                var u = De;
                                ke = !1, De = null, Fe || (Fe = !0, Ue = u)
                            }
                        }(s, t, void 0, e), e.currentTarget = null
                }

                function Fs(e, t) {
                    t = 0 != (4 & t);
                    for (var n = 0; n < e.length; n++) {
                        var s = e[n],
                            i = s.event;
                        s = s.listeners;
                        e: {
                            var a = void 0;
                            if (t)
                                for (var o = s.length - 1; 0 <= o; o--) {
                                    var r = s[o],
                                        l = r.instance,
                                        c = r.currentTarget;
                                    if (r = r.listener, l !== a && i.isPropagationStopped()) break e;
                                    Ds(i, r, c), a = l
                                } else
                                    for (o = 0; o < s.length; o++) {
                                        if (l = (r = s[o]).instance, c = r.currentTarget, r = r.listener, l !== a && i.isPropagationStopped()) break e;
                                        Ds(i, r, c), a = l
                                    }
                        }
                    }
                    if (Fe) throw e = Ue, Fe = !1, Ue = null, e
                }

                function Us(e, t) {
                    var n = t[pi];
                    void 0 === n && (n = t[pi] = new Set);
                    var s = e + "__bubble";
                    n.has(s) || (Hs(t, e, 2, !1), n.add(s))
                }

                function Bs(e, t, n) {
                    var s = 0;
                    t && (s |= 4), Hs(n, e, s, t)
                }
                var Gs = "_reactListening" + Math.random().toString(36).slice(2);

                function Vs(e) {
                    if (!e[Gs]) {
                        e[Gs] = !0, o.forEach((function (t) {
                            "selectionchange" !== t && (ks.has(t) || Bs(t, !1, e), Bs(t, !0, e))
                        }));
                        var t = 9 === e.nodeType ? e : e.ownerDocument;
                        null === t || t[Gs] || (t[Gs] = !0, Bs("selectionchange", !1, t))
                    }
                }

                function Hs(e, t, n, s) {
                    switch (Xt(t)) {
                    case 1:
                        var i = Wt;
                        break;
                    case 4:
                        i = zt;
                        break;
                    default:
                        i = Yt
                    }
                    n = i.bind(null, t, n, e), i = void 0, !Ae || "touchstart" !== t && "touchmove" !== t && "wheel" !== t || (i = !0), s ? void 0 !== i ? e.addEventListener(t, n, {
                        capture: !0,
                        passive: i
                    }) : e.addEventListener(t, n, !0) : void 0 !== i ? e.addEventListener(t, n, {
                        passive: i
                    }) : e.addEventListener(t, n, !1)
                }

                function Ks(e, t, n, s, i) {
                    var a = s;
                    if (0 == (1 & t) && 0 == (2 & t) && null !== s) e: for (;;) {
                        if (null === s) return;
                        var o = s.tag;
                        if (3 === o || 4 === o) {
                            var r = s.stateNode.containerInfo;
                            if (r === i || 8 === r.nodeType && r.parentNode === i) break;
                            if (4 === o)
                                for (o = s.return; null !== o;) {
                                    var l = o.tag;
                                    if ((3 === l || 4 === l) && ((l = o.stateNode.containerInfo) === i || 8 === l.nodeType && l.parentNode === i)) return;
                                    o = o.return
                                }
                            for (; null !== r;) {
                                if (null === (o = vi(r))) return;
                                if (5 === (l = o.tag) || 6 === l) {
                                    s = a = o;
                                    continue e
                                }
                                r = r.parentNode
                            }
                        }
                        s = s.return
                    }
                    Pe((function () {
                        var s = a,
                            i = Te(n),
                            o = [];
                        e: {
                            var r = Os.get(e);
                            if (void 0 !== r) {
                                var l = un,
                                    c = e;
                                switch (e) {
                                case "keypress":
                                    if (0 === tn(n)) break e;
                                case "keydown":
                                case "keyup":
                                    l = Cn;
                                    break;
                                case "focusin":
                                    c = "focus", l = fn;
                                    break;
                                case "focusout":
                                    c = "blur", l = fn;
                                    break;
                                case "beforeblur":
                                case "afterblur":
                                    l = fn;
                                    break;
                                case "click":
                                    if (2 === n.button) break e;
                                case "auxclick":
                                case "dblclick":
                                case "mousedown":
                                case "mousemove":
                                case "mouseup":
                                case "mouseout":
                                case "mouseover":
                                case "contextmenu":
                                    l = gn;
                                    break;
                                case "drag":
                                case "dragend":
                                case "dragenter":
                                case "dragexit":
                                case "dragleave":
                                case "dragover":
                                case "dragstart":
                                case "drop":
                                    l = pn;
                                    break;
                                case "touchcancel":
                                case "touchend":
                                case "touchmove":
                                case "touchstart":
                                    l = wn;
                                    break;
                                case Ss:
                                case Cs:
                                case Ns:
                                    l = xn;
                                    break;
                                case ws:
                                    l = On;
                                    break;
                                case "scroll":
                                    l = mn;
                                    break;
                                case "wheel":
                                    l = Ln;
                                    break;
                                case "copy":
                                case "cut":
                                case "paste":
                                    l = _n;
                                    break;
                                case "gotpointercapture":
                                case "lostpointercapture":
                                case "pointercancel":
                                case "pointerdown":
                                case "pointermove":
                                case "pointerout":
                                case "pointerover":
                                case "pointerup":
                                    l = Nn
                                }
                                var u = 0 != (4 & t),
                                    d = !u && "scroll" === e,
                                    m = u ? null !== r ? r + "Capture" : null : r;
                                u = [];
                                for (var h, g = s; null !== g;) {
                                    var p = (h = g).stateNode;
                                    if (5 === h.tag && null !== p && (h = p, null !== m && (null != (p = Le(g, m)) && u.push(Ws(g, p, h)))), d) break;
                                    g = g.return
                                }
                                0 < u.length && (r = new l(r, c, null, n, i), o.push({
                                    event: r,
                                    listeners: u
                                }))
                            }
                        }
                        if (0 == (7 & t)) {
                            if (l = "mouseout" === e || "pointerout" === e, (!(r = "mouseover" === e || "pointerover" === e) || n === be || !(c = n.relatedTarget || n.fromElement) || !vi(c) && !c[gi]) && (l || r) && (r = i.window === i ? i : (r = i.ownerDocument) ? r.defaultView || r.parentWindow : window, l ? (l = s, null !== (c = (c = n.relatedTarget || n.toElement) ? vi(c) : null) && (c !== (d = Ve(c)) || 5 !== c.tag && 6 !== c.tag) && (c = null)) : (l = null, c = s), l !== c)) {
                                if (u = gn, p = "onMouseLeave", m = "onMouseEnter", g = "mouse", "pointerout" !== e && "pointerover" !== e || (u = Nn, p = "onPointerLeave", m = "onPointerEnter", g = "pointer"), d = null == l ? r : bi(l), h = null == c ? r : bi(c), (r = new u(p, g + "leave", l, n, i)).target = d, r.relatedTarget = h, p = null, vi(i) === s && ((u = new u(m, g + "enter", c, n, i)).target = h, u.relatedTarget = d, p = u), d = p, l && c) e: {
                                    for (m = c, g = 0, h = u = l; h; h = Ys(h)) g++;
                                    for (h = 0, p = m; p; p = Ys(p)) h++;
                                    for (; 0 < g - h;) u = Ys(u),
                                    g--;
                                    for (; 0 < h - g;) m = Ys(m),
                                    h--;
                                    for (; g--;) {
                                        if (u === m || null !== m && u === m.alternate) break e;
                                        u = Ys(u), m = Ys(m)
                                    }
                                    u = null
                                }
                                else u = null;
                                null !== l && $s(o, r, l, u, !1), null !== c && null !== d && $s(o, d, c, u, !0)
                            }
                            if ("select" === (l = (r = s ? bi(s) : window).nodeName && r.nodeName.toLowerCase()) || "input" === l && "file" === r.type) var f = Xn;
                            else if (Kn(r))
                                if (Qn) f = os;
                                else {
                                    f = is;
                                    var x = ss
                                }
                            else(l = r.nodeName) && "input" === l.toLowerCase() && ("checkbox" === r.type || "radio" === r.type) && (f = as);
                            switch (f && (f = f(e, s)) ? Wn(o, f, n, i) : (x && x(e, r, s), "focusout" === e && (x = r._wrapperState) && x.controlled && "number" === r.type && ee(r, "number", r.value)), x = s ? bi(s) : window, e) {
                            case "focusin":
                                (Kn(x) || "true" === x.contentEditable) && (fs = x, xs = s, vs = null);
                                break;
                            case "focusout":
                                vs = xs = fs = null;
                                break;
                            case "mousedown":
                                _s = !0;
                                break;
                            case "contextmenu":
                            case "mouseup":
                            case "dragend":
                                _s = !1, bs(o, n, i);
                                break;
                            case "selectionchange":
                                if (ps) break;
                            case "keydown":
                            case "keyup":
                                bs(o, n, i)
                            }
                            var v;
                            if (Mn) e: {
                                switch (e) {
                                case "compositionstart":
                                    var _ = "onCompositionStart";
                                    break e;
                                case "compositionend":
                                    _ = "onCompositionEnd";
                                    break e;
                                case "compositionupdate":
                                    _ = "onCompositionUpdate";
                                    break e
                                }
                                _ = void 0
                            }
                            else Vn ? Bn(e, n) && (_ = "onCompositionEnd") : "keydown" === e && 229 === n.keyCode && (_ = "onCompositionStart");
                            _ && (Dn && "ko" !== n.locale && (Vn || "onCompositionStart" !== _ ? "onCompositionEnd" === _ && Vn && (v = en()) : (Zt = "value" in (Qt = i) ? Qt.value : Qt.textContent, Vn = !0)), 0 < (x = zs(s, _)).length && (_ = new bn(_, e, null, n, i), o.push({
                                event: _,
                                listeners: x
                            }), v ? _.data = v : null !== (v = Gn(n)) && (_.data = v))), (v = kn ? function (e, t) {
                                switch (e) {
                                case "compositionend":
                                    return Gn(t);
                                case "keypress":
                                    return 32 !== t.which ? null : (Un = !0, Fn);
                                case "textInput":
                                    return (e = t.data) === Fn && Un ? null : e;
                                default:
                                    return null
                                }
                            }(e, n) : function (e, t) {
                                if (Vn) return "compositionend" === e || !Mn && Bn(e, t) ? (e = en(), Jt = Zt = Qt = null, Vn = !1, e) : null;
                                switch (e) {
                                case "paste":
                                default:
                                    return null;
                                case "keypress":
                                    if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
                                        if (t.char && 1 < t.char.length) return t.char;
                                        if (t.which) return String.fromCharCode(t.which)
                                    }
                                    return null;
                                case "compositionend":
                                    return Dn && "ko" !== t.locale ? null : t.data
                                }
                            }(e, n)) && (0 < (s = zs(s, "onBeforeInput")).length && (i = new bn("onBeforeInput", "beforeinput", null, n, i), o.push({
                                event: i,
                                listeners: s
                            }), i.data = v))
                        }
                        Fs(o, t)
                    }))
                }

                function Ws(e, t, n) {
                    return {
                        instance: e,
                        listener: t,
                        currentTarget: n
                    }
                }

                function zs(e, t) {
                    for (var n = t + "Capture", s = []; null !== e;) {
                        var i = e,
                            a = i.stateNode;
                        5 === i.tag && null !== a && (i = a, null != (a = Le(e, n)) && s.unshift(Ws(e, a, i)), null != (a = Le(e, t)) && s.push(Ws(e, a, i))), e = e.return
                    }
                    return s
                }

                function Ys(e) {
                    if (null === e) return null;
                    do {
                        e = e.return
                    } while (e && 5 !== e.tag);
                    return e || null
                }

                function $s(e, t, n, s, i) {
                    for (var a = t._reactName, o = []; null !== n && n !== s;) {
                        var r = n,
                            l = r.alternate,
                            c = r.stateNode;
                        if (null !== l && l === s) break;
                        5 === r.tag && null !== c && (r = c, i ? null != (l = Le(n, a)) && o.unshift(Ws(n, l, r)) : i || null != (l = Le(n, a)) && o.push(Ws(n, l, r))), n = n.return
                    }
                    0 !== o.length && e.push({
                        event: t,
                        listeners: o
                    })
                }
                var qs = /\r\n?/g,
                    Xs = /\u0000|\uFFFD/g;

                function Qs(e) {
                    return ("string" == typeof e ? e : "" + e).replace(qs, "\n").replace(Xs, "")
                }

                function Zs(e, t, n) {
                    if (t = Qs(t), Qs(e) !== t && n) throw Error(a(425))
                }

                function Js() {}
                var ei = null,
                    ti = null;

                function ni(e, t) {
                    return "textarea" === e || "noscript" === e || "string" == typeof t.children || "number" == typeof t.children || "object" == typeof t.dangerouslySetInnerHTML && null !== t.dangerouslySetInnerHTML && null != t.dangerouslySetInnerHTML.__html
                }
                var si = "function" == typeof setTimeout ? setTimeout : void 0,
                    ii = "function" == typeof clearTimeout ? clearTimeout : void 0,
                    ai = "function" == typeof Promise ? Promise : void 0,
                    oi = "function" == typeof queueMicrotask ? queueMicrotask : void 0 !== ai ? function (e) {
                        return ai.resolve(null).then(e).catch(ri)
                    } : si;

                function ri(e) {
                    setTimeout((function () {
                        throw e
                    }))
                }

                function li(e, t) {
                    var n = t,
                        s = 0;
                    do {
                        var i = n.nextSibling;
                        if (e.removeChild(n), i && 8 === i.nodeType)
                            if ("/$" === (n = i.data)) {
                                if (0 === s) return e.removeChild(i), void Vt(t);
                                s--
                            } else "$" !== n && "$?" !== n && "$!" !== n || s++;
                        n = i
                    } while (n);
                    Vt(t)
                }

                function ci(e) {
                    for (; null != e; e = e.nextSibling) {
                        var t = e.nodeType;
                        if (1 === t || 3 === t) break;
                        if (8 === t) {
                            if ("$" === (t = e.data) || "$!" === t || "$?" === t) break;
                            if ("/$" === t) return null
                        }
                    }
                    return e
                }

                function ui(e) {
                    e = e.previousSibling;
                    for (var t = 0; e;) {
                        if (8 === e.nodeType) {
                            var n = e.data;
                            if ("$" === n || "$!" === n || "$?" === n) {
                                if (0 === t) return e;
                                t--
                            } else "/$" === n && t++
                        }
                        e = e.previousSibling
                    }
                    return null
                }
                var di = Math.random().toString(36).slice(2),
                    mi = "__reactFiber$" + di,
                    hi = "__reactProps$" + di,
                    gi = "__reactContainer$" + di,
                    pi = "__reactEvents$" + di,
                    fi = "__reactListeners$" + di,
                    xi = "__reactHandles$" + di;

                function vi(e) {
                    var t = e[mi];
                    if (t) return t;
                    for (var n = e.parentNode; n;) {
                        if (t = n[gi] || n[mi]) {
                            if (n = t.alternate, null !== t.child || null !== n && null !== n.child)
                                for (e = ui(e); null !== e;) {
                                    if (n = e[mi]) return n;
                                    e = ui(e)
                                }
                            return t
                        }
                        n = (e = n).parentNode
                    }
                    return null
                }

                function _i(e) {
                    return !(e = e[mi] || e[gi]) || 5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag ? null : e
                }

                function bi(e) {
                    if (5 === e.tag || 6 === e.tag) return e.stateNode;
                    throw Error(a(33))
                }

                function Ti(e) {
                    return e[hi] || null
                }
                var Ei = [],
                    Ii = -1;

                function yi(e) {
                    return {
                        current: e
                    }
                }

                function ji(e) {
                    0 > Ii || (e.current = Ei[Ii], Ei[Ii] = null, Ii--)
                }

                function Si(e, t) {
                    Ii++, Ei[Ii] = e.current, e.current = t
                }
                var Ci = {},
                    Ni = yi(Ci),
                    wi = yi(!1),
                    Oi = Ci;

                function Pi(e, t) {
                    var n = e.type.contextTypes;
                    if (!n) return Ci;
                    var s = e.stateNode;
                    if (s && s.__reactInternalMemoizedUnmaskedChildContext === t) return s.__reactInternalMemoizedMaskedChildContext;
                    var i, a = {};
                    for (i in n) a[i] = t[i];
                    return s && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t, e.__reactInternalMemoizedMaskedChildContext = a), a
                }

                function Li(e) {
                    return null != (e = e.childContextTypes)
                }

                function Ai() {
                    ji(wi), ji(Ni)
                }

                function Mi(e, t, n) {
                    if (Ni.current !== Ci) throw Error(a(168));
                    Si(Ni, t), Si(wi, n)
                }

                function Ri(e, t, n) {
                    var s = e.stateNode;
                    if (t = t.childContextTypes, "function" != typeof s.getChildContext) return n;
                    for (var i in s = s.getChildContext())
                        if (!(i in t)) throw Error(a(108, H(e) || "Unknown", i));
                    return D({}, n, s)
                }

                function ki(e) {
                    return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || Ci, Oi = Ni.current, Si(Ni, e), Si(wi, wi.current), !0
                }

                function Di(e, t, n) {
                    var s = e.stateNode;
                    if (!s) throw Error(a(169));
                    n ? (e = Ri(e, t, Oi), s.__reactInternalMemoizedMergedChildContext = e, ji(wi), ji(Ni), Si(Ni, e)) : ji(wi), Si(wi, n)
                }
                var Fi = null,
                    Ui = !1,
                    Bi = !1;

                function Gi(e) {
                    null === Fi ? Fi = [e] : Fi.push(e)
                }

                function Vi() {
                    if (!Bi && null !== Fi) {
                        Bi = !0;
                        var e = 0,
                            t = _t;
                        try {
                            var n = Fi;
                            for (_t = 1; e < n.length; e++) {
                                var s = n[e];
                                do {
                                    s = s(!0)
                                } while (null !== s)
                            }
                            Fi = null, Ui = !1
                        } catch (t) {
                            throw null !== Fi && (Fi = Fi.slice(e + 1)), Ye(Je, Vi), t
                        } finally {
                            _t = t, Bi = !1
                        }
                    }
                    return null
                }
                var Hi = [],
                    Ki = 0,
                    Wi = null,
                    zi = 0,
                    Yi = [],
                    $i = 0,
                    qi = null,
                    Xi = 1,
                    Qi = "";

                function Zi(e, t) {
                    Hi[Ki++] = zi, Hi[Ki++] = Wi, Wi = e, zi = t
                }

                function Ji(e, t, n) {
                    Yi[$i++] = Xi, Yi[$i++] = Qi, Yi[$i++] = qi, qi = e;
                    var s = Xi;
                    e = Qi;
                    var i = 32 - ot(s) - 1;
                    s &= ~(1 << i), n += 1;
                    var a = 32 - ot(t) + i;
                    if (30 < a) {
                        var o = i - i % 5;
                        a = (s & (1 << o) - 1).toString(32), s >>= o, i -= o, Xi = 1 << 32 - ot(t) + i | n << i | s, Qi = a + e
                    } else Xi = 1 << a | n << i | s, Qi = e
                }

                function ea(e) {
                    null !== e.return && (Zi(e, 1), Ji(e, 1, 0))
                }

                function ta(e) {
                    for (; e === Wi;) Wi = Hi[--Ki], Hi[Ki] = null, zi = Hi[--Ki], Hi[Ki] = null;
                    for (; e === qi;) qi = Yi[--$i], Yi[$i] = null, Qi = Yi[--$i], Yi[$i] = null, Xi = Yi[--$i], Yi[$i] = null
                }
                var na = null,
                    sa = null,
                    ia = !1,
                    aa = null;

                function oa(e, t) {
                    var n = Lc(5, null, null, 0);
                    n.elementType = "DELETED", n.stateNode = t, n.return = e, null === (t = e.deletions) ? (e.deletions = [n], e.flags |= 16) : t.push(n)
                }

                function ra(e, t) {
                    switch (e.tag) {
                    case 5:
                        var n = e.type;
                        return null !== (t = 1 !== t.nodeType || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t) && (e.stateNode = t, na = e, sa = ci(t.firstChild), !0);
                    case 6:
                        return null !== (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) && (e.stateNode = t, na = e, sa = null, !0);
                    case 13:
                        return null !== (t = 8 !== t.nodeType ? null : t) && (n = null !== qi ? {
                            id: Xi,
                            overflow: Qi
                        } : null, e.memoizedState = {
                            dehydrated: t,
                            treeContext: n,
                            retryLane: 1073741824
                        }, (n = Lc(18, null, null, 0)).stateNode = t, n.return = e, e.child = n, na = e, sa = null, !0);
                    default:
                        return !1
                    }
                }

                function la(e) {
                    return 0 != (1 & e.mode) && 0 == (128 & e.flags)
                }

                function ca(e) {
                    if (ia) {
                        var t = sa;
                        if (t) {
                            var n = t;
                            if (!ra(e, t)) {
                                if (la(e)) throw Error(a(418));
                                t = ci(n.nextSibling);
                                var s = na;
                                t && ra(e, t) ? oa(s, n) : (e.flags = -4097 & e.flags | 2, ia = !1, na = e)
                            }
                        } else {
                            if (la(e)) throw Error(a(418));
                            e.flags = -4097 & e.flags | 2, ia = !1, na = e
                        }
                    }
                }

                function ua(e) {
                    for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;) e = e.return;
                    na = e
                }

                function da(e) {
                    if (e !== na) return !1;
                    if (!ia) return ua(e), ia = !0, !1;
                    var t;
                    if ((t = 3 !== e.tag) && !(t = 5 !== e.tag) && (t = "head" !== (t = e.type) && "body" !== t && !ni(e.type, e.memoizedProps)), t && (t = sa)) {
                        if (la(e)) throw ma(), Error(a(418));
                        for (; t;) oa(e, t), t = ci(t.nextSibling)
                    }
                    if (ua(e), 13 === e.tag) {
                        if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null)) throw Error(a(317));
                        e: {
                            for (e = e.nextSibling, t = 0; e;) {
                                if (8 === e.nodeType) {
                                    var n = e.data;
                                    if ("/$" === n) {
                                        if (0 === t) {
                                            sa = ci(e.nextSibling);
                                            break e
                                        }
                                        t--
                                    } else "$" !== n && "$!" !== n && "$?" !== n || t++
                                }
                                e = e.nextSibling
                            }
                            sa = null
                        }
                    } else sa = na ? ci(e.stateNode.nextSibling) : null;
                    return !0
                }

                function ma() {
                    for (var e = sa; e;) e = ci(e.nextSibling)
                }

                function ha() {
                    sa = na = null, ia = !1
                }

                function ga(e) {
                    null === aa ? aa = [e] : aa.push(e)
                }
                var pa = b.ReactCurrentBatchConfig;

                function fa(e, t) {
                    if (e && e.defaultProps) {
                        for (var n in t = D({}, t), e = e.defaultProps) void 0 === t[n] && (t[n] = e[n]);
                        return t
                    }
                    return t
                }
                var xa = yi(null),
                    va = null,
                    _a = null,
                    ba = null;

                function Ta() {
                    ba = _a = va = null
                }

                function Ea(e) {
                    var t = xa.current;
                    ji(xa), e._currentValue = t
                }

                function Ia(e, t, n) {
                    for (; null !== e;) {
                        var s = e.alternate;
                        if ((e.childLanes & t) !== t ? (e.childLanes |= t, null !== s && (s.childLanes |= t)) : null !== s && (s.childLanes & t) !== t && (s.childLanes |= t), e === n) break;
                        e = e.return
                    }
                }

                function ya(e, t) {
                    va = e, ba = _a = null, null !== (e = e.dependencies) && null !== e.firstContext && (0 != (e.lanes & t) && (br = !0), e.firstContext = null)
                }

                function ja(e) {
                    var t = e._currentValue;
                    if (ba !== e)
                        if (e = {
                                context: e,
                                memoizedValue: t,
                                next: null
                            }, null === _a) {
                            if (null === va) throw Error(a(308));
                            _a = e, va.dependencies = {
                                lanes: 0,
                                firstContext: e
                            }
                        } else _a = _a.next = e;
                    return t
                }
                var Sa = null;

                function Ca(e) {
                    null === Sa ? Sa = [e] : Sa.push(e)
                }

                function Na(e, t, n, s) {
                    var i = t.interleaved;
                    return null === i ? (n.next = n, Ca(t)) : (n.next = i.next, i.next = n), t.interleaved = n, wa(e, s)
                }

                function wa(e, t) {
                    e.lanes |= t;
                    var n = e.alternate;
                    for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e;) e.childLanes |= t, null !== (n = e.alternate) && (n.childLanes |= t), n = e, e = e.return;
                    return 3 === n.tag ? n.stateNode : null
                }
                var Oa = !1;

                function Pa(e) {
                    e.updateQueue = {
                        baseState: e.memoizedState,
                        firstBaseUpdate: null,
                        lastBaseUpdate: null,
                        shared: {
                            pending: null,
                            interleaved: null,
                            lanes: 0
                        },
                        effects: null
                    }
                }

                function La(e, t) {
                    e = e.updateQueue, t.updateQueue === e && (t.updateQueue = {
                        baseState: e.baseState,
                        firstBaseUpdate: e.firstBaseUpdate,
                        lastBaseUpdate: e.lastBaseUpdate,
                        shared: e.shared,
                        effects: e.effects
                    })
                }

                function Aa(e, t) {
                    return {
                        eventTime: e,
                        lane: t,
                        tag: 0,
                        payload: null,
                        callback: null,
                        next: null
                    }
                }

                function Ma(e, t, n) {
                    var s = e.updateQueue;
                    if (null === s) return null;
                    if (s = s.shared, 0 != (2 & wl)) {
                        var i = s.pending;
                        return null === i ? t.next = t : (t.next = i.next, i.next = t), s.pending = t, wa(e, n)
                    }
                    return null === (i = s.interleaved) ? (t.next = t, Ca(s)) : (t.next = i.next, i.next = t), s.interleaved = t, wa(e, n)
                }

                function Ra(e, t, n) {
                    if (null !== (t = t.updateQueue) && (t = t.shared, 0 != (4194240 & n))) {
                        var s = t.lanes;
                        n |= s &= e.pendingLanes, t.lanes = n, vt(e, n)
                    }
                }

                function ka(e, t) {
                    var n = e.updateQueue,
                        s = e.alternate;
                    if (null !== s && n === (s = s.updateQueue)) {
                        var i = null,
                            a = null;
                        if (null !== (n = n.firstBaseUpdate)) {
                            do {
                                var o = {
                                    eventTime: n.eventTime,
                                    lane: n.lane,
                                    tag: n.tag,
                                    payload: n.payload,
                                    callback: n.callback,
                                    next: null
                                };
                                null === a ? i = a = o : a = a.next = o, n = n.next
                            } while (null !== n);
                            null === a ? i = a = t : a = a.next = t
                        } else i = a = t;
                        return n = {
                            baseState: s.baseState,
                            firstBaseUpdate: i,
                            lastBaseUpdate: a,
                            shared: s.shared,
                            effects: s.effects
                        }, void(e.updateQueue = n)
                    }
                    null === (e = n.lastBaseUpdate) ? n.firstBaseUpdate = t : e.next = t, n.lastBaseUpdate = t
                }

                function Da(e, t, n, s) {
                    var i = e.updateQueue;
                    Oa = !1;
                    var a = i.firstBaseUpdate,
                        o = i.lastBaseUpdate,
                        r = i.shared.pending;
                    if (null !== r) {
                        i.shared.pending = null;
                        var l = r,
                            c = l.next;
                        l.next = null, null === o ? a = c : o.next = c, o = l;
                        var u = e.alternate;
                        null !== u && ((r = (u = u.updateQueue).lastBaseUpdate) !== o && (null === r ? u.firstBaseUpdate = c : r.next = c, u.lastBaseUpdate = l))
                    }
                    if (null !== a) {
                        var d = i.baseState;
                        for (o = 0, u = c = l = null, r = a;;) {
                            var m = r.lane,
                                h = r.eventTime;
                            if ((s & m) === m) {
                                null !== u && (u = u.next = {
                                    eventTime: h,
                                    lane: 0,
                                    tag: r.tag,
                                    payload: r.payload,
                                    callback: r.callback,
                                    next: null
                                });
                                e: {
                                    var g = e,
                                        p = r;
                                    switch (m = t, h = n, p.tag) {
                                    case 1:
                                        if ("function" == typeof (g = p.payload)) {
                                            d = g.call(h, d, m);
                                            break e
                                        }
                                        d = g;
                                        break e;
                                    case 3:
                                        g.flags = -65537 & g.flags | 128;
                                    case 0:
                                        if (null == (m = "function" == typeof (g = p.payload) ? g.call(h, d, m) : g)) break e;
                                        d = D({}, d, m);
                                        break e;
                                    case 2:
                                        Oa = !0
                                    }
                                }
                                null !== r.callback && 0 !== r.lane && (e.flags |= 64, null === (m = i.effects) ? i.effects = [r] : m.push(r))
                            } else h = {
                                eventTime: h,
                                lane: m,
                                tag: r.tag,
                                payload: r.payload,
                                callback: r.callback,
                                next: null
                            }, null === u ? (c = u = h, l = d) : u = u.next = h, o |= m;
                            if (null === (r = r.next)) {
                                if (null === (r = i.shared.pending)) break;
                                r = (m = r).next, m.next = null, i.lastBaseUpdate = m, i.shared.pending = null
                            }
                        }
                        if (null === u && (l = d), i.baseState = l, i.firstBaseUpdate = c, i.lastBaseUpdate = u, null !== (t = i.shared.interleaved)) {
                            i = t;
                            do {
                                o |= i.lane, i = i.next
                            } while (i !== t)
                        } else null === a && (i.shared.lanes = 0);
                        Dl |= o, e.lanes = o, e.memoizedState = d
                    }
                }

                function Fa(e, t, n) {
                    if (e = t.effects, t.effects = null, null !== e)
                        for (t = 0; t < e.length; t++) {
                            var s = e[t],
                                i = s.callback;
                            if (null !== i) {
                                if (s.callback = null, s = n, "function" != typeof i) throw Error(a(191, i));
                                i.call(s)
                            }
                        }
                }
                var Ua = (new s.Component).refs;

                function Ba(e, t, n, s) {
                    n = null == (n = n(s, t = e.memoizedState)) ? t : D({}, t, n), e.memoizedState = n, 0 === e.lanes && (e.updateQueue.baseState = n)
                }
                var Ga = {
                    isMounted: function (e) {
                        return !!(e = e._reactInternals) && Ve(e) === e
                    },
                    enqueueSetState: function (e, t, n) {
                        e = e._reactInternals;
                        var s = tc(),
                            i = nc(e),
                            a = Aa(s, i);
                        a.payload = t, null != n && (a.callback = n), null !== (t = Ma(e, a, i)) && (sc(t, e, i, s), Ra(t, e, i))
                    },
                    enqueueReplaceState: function (e, t, n) {
                        e = e._reactInternals;
                        var s = tc(),
                            i = nc(e),
                            a = Aa(s, i);
                        a.tag = 1, a.payload = t, null != n && (a.callback = n), null !== (t = Ma(e, a, i)) && (sc(t, e, i, s), Ra(t, e, i))
                    },
                    enqueueForceUpdate: function (e, t) {
                        e = e._reactInternals;
                        var n = tc(),
                            s = nc(e),
                            i = Aa(n, s);
                        i.tag = 2, null != t && (i.callback = t), null !== (t = Ma(e, i, s)) && (sc(t, e, s, n), Ra(t, e, s))
                    }
                };

                function Va(e, t, n, s, i, a, o) {
                    return "function" == typeof (e = e.stateNode).shouldComponentUpdate ? e.shouldComponentUpdate(s, a, o) : !t.prototype || !t.prototype.isPureReactComponent || (!ls(n, s) || !ls(i, a))
                }

                function Ha(e, t, n) {
                    var s = !1,
                        i = Ci,
                        a = t.contextType;
                    return "object" == typeof a && null !== a ? a = ja(a) : (i = Li(t) ? Oi : Ni.current, a = (s = null != (s = t.contextTypes)) ? Pi(e, i) : Ci), t = new t(n, a), e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null, t.updater = Ga, e.stateNode = t, t._reactInternals = e, s && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = i, e.__reactInternalMemoizedMaskedChildContext = a), t
                }

                function Ka(e, t, n, s) {
                    e = t.state, "function" == typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, s), "function" == typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, s), t.state !== e && Ga.enqueueReplaceState(t, t.state, null)
                }

                function Wa(e, t, n, s) {
                    var i = e.stateNode;
                    i.props = n, i.state = e.memoizedState, i.refs = Ua, Pa(e);
                    var a = t.contextType;
                    "object" == typeof a && null !== a ? i.context = ja(a) : (a = Li(t) ? Oi : Ni.current, i.context = Pi(e, a)), i.state = e.memoizedState, "function" == typeof (a = t.getDerivedStateFromProps) && (Ba(e, t, a, n), i.state = e.memoizedState), "function" == typeof t.getDerivedStateFromProps || "function" == typeof i.getSnapshotBeforeUpdate || "function" != typeof i.UNSAFE_componentWillMount && "function" != typeof i.componentWillMount || (t = i.state, "function" == typeof i.componentWillMount && i.componentWillMount(), "function" == typeof i.UNSAFE_componentWillMount && i.UNSAFE_componentWillMount(), t !== i.state && Ga.enqueueReplaceState(i, i.state, null), Da(e, n, i, s), i.state = e.memoizedState), "function" == typeof i.componentDidMount && (e.flags |= 4194308)
                }

                function za(e, t, n) {
                    if (null !== (e = n.ref) && "function" != typeof e && "object" != typeof e) {
                        if (n._owner) {
                            if (n = n._owner) {
                                if (1 !== n.tag) throw Error(a(309));
                                var s = n.stateNode
                            }
                            if (!s) throw Error(a(147, e));
                            var i = s,
                                o = "" + e;
                            return null !== t && null !== t.ref && "function" == typeof t.ref && t.ref._stringRef === o ? t.ref : (t = function (e) {
                                var t = i.refs;
                                t === Ua && (t = i.refs = {}), null === e ? delete t[o] : t[o] = e
                            }, t._stringRef = o, t)
                        }
                        if ("string" != typeof e) throw Error(a(284));
                        if (!n._owner) throw Error(a(290, e))
                    }
                    return e
                }

                function Ya(e, t) {
                    throw e = Object.prototype.toString.call(t), Error(a(31, "[object Object]" === e ? "object with keys {" + Object.keys(t).join(", ") + "}" : e))
                }

                function $a(e) {
                    return (0, e._init)(e._payload)
                }

                function qa(e) {
                    function t(t, n) {
                        if (e) {
                            var s = t.deletions;
                            null === s ? (t.deletions = [n], t.flags |= 16) : s.push(n)
                        }
                    }

                    function n(n, s) {
                        if (!e) return null;
                        for (; null !== s;) t(n, s), s = s.sibling;
                        return null
                    }

                    function s(e, t) {
                        for (e = new Map; null !== t;) null !== t.key ? e.set(t.key, t) : e.set(t.index, t), t = t.sibling;
                        return e
                    }

                    function i(e, t) {
                        return (e = Mc(e, t)).index = 0, e.sibling = null, e
                    }

                    function o(t, n, s) {
                        return t.index = s, e ? null !== (s = t.alternate) ? (s = s.index) < n ? (t.flags |= 2, n) : s : (t.flags |= 2, n) : (t.flags |= 1048576, n)
                    }

                    function r(t) {
                        return e && null === t.alternate && (t.flags |= 2), t
                    }

                    function l(e, t, n, s) {
                        return null === t || 6 !== t.tag ? ((t = Fc(n, e.mode, s)).return = e, t) : ((t = i(t, n)).return = e, t)
                    }

                    function c(e, t, n, s) {
                        var a = n.type;
                        return a === I ? d(e, t, n.props.children, s, n.key) : null !== t && (t.elementType === a || "object" == typeof a && null !== a && a.$$typeof === L && $a(a) === t.type) ? ((s = i(t, n.props)).ref = za(e, t, n), s.return = e, s) : ((s = Rc(n.type, n.key, n.props, null, e.mode, s)).ref = za(e, t, n), s.return = e, s)
                    }

                    function u(e, t, n, s) {
                        return null === t || 4 !== t.tag || t.stateNode.containerInfo !== n.containerInfo || t.stateNode.implementation !== n.implementation ? ((t = Uc(n, e.mode, s)).return = e, t) : ((t = i(t, n.children || [])).return = e, t)
                    }

                    function d(e, t, n, s, a) {
                        return null === t || 7 !== t.tag ? ((t = kc(n, e.mode, s, a)).return = e, t) : ((t = i(t, n)).return = e, t)
                    }

                    function m(e, t, n) {
                        if ("string" == typeof t && "" !== t || "number" == typeof t) return (t = Fc("" + t, e.mode, n)).return = e, t;
                        if ("object" == typeof t && null !== t) {
                            switch (t.$$typeof) {
                            case T:
                                return (n = Rc(t.type, t.key, t.props, null, e.mode, n)).ref = za(e, null, t), n.return = e, n;
                            case E:
                                return (t = Uc(t, e.mode, n)).return = e, t;
                            case L:
                                return m(e, (0, t._init)(t._payload), n)
                            }
                            if (te(t) || R(t)) return (t = kc(t, e.mode, n, null)).return = e, t;
                            Ya(e, t)
                        }
                        return null
                    }

                    function h(e, t, n, s) {
                        var i = null !== t ? t.key : null;
                        if ("string" == typeof n && "" !== n || "number" == typeof n) return null !== i ? null : l(e, t, "" + n, s);
                        if ("object" == typeof n && null !== n) {
                            switch (n.$$typeof) {
                            case T:
                                return n.key === i ? c(e, t, n, s) : null;
                            case E:
                                return n.key === i ? u(e, t, n, s) : null;
                            case L:
                                return h(e, t, (i = n._init)(n._payload), s)
                            }
                            if (te(n) || R(n)) return null !== i ? null : d(e, t, n, s, null);
                            Ya(e, n)
                        }
                        return null
                    }

                    function g(e, t, n, s, i) {
                        if ("string" == typeof s && "" !== s || "number" == typeof s) return l(t, e = e.get(n) || null, "" + s, i);
                        if ("object" == typeof s && null !== s) {
                            switch (s.$$typeof) {
                            case T:
                                return c(t, e = e.get(null === s.key ? n : s.key) || null, s, i);
                            case E:
                                return u(t, e = e.get(null === s.key ? n : s.key) || null, s, i);
                            case L:
                                return g(e, t, n, (0, s._init)(s._payload), i)
                            }
                            if (te(s) || R(s)) return d(t, e = e.get(n) || null, s, i, null);
                            Ya(t, s)
                        }
                        return null
                    }

                    function p(i, a, r, l) {
                        for (var c = null, u = null, d = a, p = a = 0, f = null; null !== d && p < r.length; p++) {
                            d.index > p ? (f = d, d = null) : f = d.sibling;
                            var x = h(i, d, r[p], l);
                            if (null === x) {
                                null === d && (d = f);
                                break
                            }
                            e && d && null === x.alternate && t(i, d), a = o(x, a, p), null === u ? c = x : u.sibling = x, u = x, d = f
                        }
                        if (p === r.length) return n(i, d), ia && Zi(i, p), c;
                        if (null === d) {
                            for (; p < r.length; p++) null !== (d = m(i, r[p], l)) && (a = o(d, a, p), null === u ? c = d : u.sibling = d, u = d);
                            return ia && Zi(i, p), c
                        }
                        for (d = s(i, d); p < r.length; p++) null !== (f = g(d, i, p, r[p], l)) && (e && null !== f.alternate && d.delete(null === f.key ? p : f.key), a = o(f, a, p), null === u ? c = f : u.sibling = f, u = f);
                        return e && d.forEach((function (e) {
                            return t(i, e)
                        })), ia && Zi(i, p), c
                    }

                    function f(i, r, l, c) {
                        var u = R(l);
                        if ("function" != typeof u) throw Error(a(150));
                        if (null == (l = u.call(l))) throw Error(a(151));
                        for (var d = u = null, p = r, f = r = 0, x = null, v = l.next(); null !== p && !v.done; f++, v = l.next()) {
                            p.index > f ? (x = p, p = null) : x = p.sibling;
                            var _ = h(i, p, v.value, c);
                            if (null === _) {
                                null === p && (p = x);
                                break
                            }
                            e && p && null === _.alternate && t(i, p), r = o(_, r, f), null === d ? u = _ : d.sibling = _, d = _, p = x
                        }
                        if (v.done) return n(i, p), ia && Zi(i, f), u;
                        if (null === p) {
                            for (; !v.done; f++, v = l.next()) null !== (v = m(i, v.value, c)) && (r = o(v, r, f), null === d ? u = v : d.sibling = v, d = v);
                            return ia && Zi(i, f), u
                        }
                        for (p = s(i, p); !v.done; f++, v = l.next()) null !== (v = g(p, i, f, v.value, c)) && (e && null !== v.alternate && p.delete(null === v.key ? f : v.key), r = o(v, r, f), null === d ? u = v : d.sibling = v, d = v);
                        return e && p.forEach((function (e) {
                            return t(i, e)
                        })), ia && Zi(i, f), u
                    }
                    return function e(s, a, o, l) {
                        if ("object" == typeof o && null !== o && o.type === I && null === o.key && (o = o.props.children), "object" == typeof o && null !== o) {
                            switch (o.$$typeof) {
                            case T:
                                e: {
                                    for (var c = o.key, u = a; null !== u;) {
                                        if (u.key === c) {
                                            if ((c = o.type) === I) {
                                                if (7 === u.tag) {
                                                    n(s, u.sibling), (a = i(u, o.props.children)).return = s, s = a;
                                                    break e
                                                }
                                            } else if (u.elementType === c || "object" == typeof c && null !== c && c.$$typeof === L && $a(c) === u.type) {
                                                n(s, u.sibling), (a = i(u, o.props)).ref = za(s, u, o), a.return = s, s = a;
                                                break e
                                            }
                                            n(s, u);
                                            break
                                        }
                                        t(s, u), u = u.sibling
                                    }
                                    o.type === I ? ((a = kc(o.props.children, s.mode, l, o.key)).return = s, s = a) : ((l = Rc(o.type, o.key, o.props, null, s.mode, l)).ref = za(s, a, o), l.return = s, s = l)
                                }
                                return r(s);
                            case E:
                                e: {
                                    for (u = o.key; null !== a;) {
                                        if (a.key === u) {
                                            if (4 === a.tag && a.stateNode.containerInfo === o.containerInfo && a.stateNode.implementation === o.implementation) {
                                                n(s, a.sibling), (a = i(a, o.children || [])).return = s, s = a;
                                                break e
                                            }
                                            n(s, a);
                                            break
                                        }
                                        t(s, a), a = a.sibling
                                    }(a = Uc(o, s.mode, l)).return = s,
                                    s = a
                                }
                                return r(s);
                            case L:
                                return e(s, a, (u = o._init)(o._payload), l)
                            }
                            if (te(o)) return p(s, a, o, l);
                            if (R(o)) return f(s, a, o, l);
                            Ya(s, o)
                        }
                        return "string" == typeof o && "" !== o || "number" == typeof o ? (o = "" + o, null !== a && 6 === a.tag ? (n(s, a.sibling), (a = i(a, o)).return = s, s = a) : (n(s, a), (a = Fc(o, s.mode, l)).return = s, s = a), r(s)) : n(s, a)
                    }
                }
                var Xa = qa(!0),
                    Qa = qa(!1),
                    Za = {},
                    Ja = yi(Za),
                    eo = yi(Za),
                    to = yi(Za);

                function no(e) {
                    if (e === Za) throw Error(a(174));
                    return e
                }

                function so(e, t) {
                    switch (Si(to, t), Si(eo, e), Si(Ja, Za), e = t.nodeType) {
                    case 9:
                    case 11:
                        t = (t = t.documentElement) ? t.namespaceURI : le(null, "");
                        break;
                    default:
                        t = le(t = (e = 8 === e ? t.parentNode : t).namespaceURI || null, e = e.tagName)
                    }
                    ji(Ja), Si(Ja, t)
                }

                function io() {
                    ji(Ja), ji(eo), ji(to)
                }

                function ao(e) {
                    no(to.current);
                    var t = no(Ja.current),
                        n = le(t, e.type);
                    t !== n && (Si(eo, e), Si(Ja, n))
                }

                function oo(e) {
                    eo.current === e && (ji(Ja), ji(eo))
                }
                var ro = yi(0);

                function lo(e) {
                    for (var t = e; null !== t;) {
                        if (13 === t.tag) {
                            var n = t.memoizedState;
                            if (null !== n && (null === (n = n.dehydrated) || "$?" === n.data || "$!" === n.data)) return t
                        } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
                            if (0 != (128 & t.flags)) return t
                        } else if (null !== t.child) {
                            t.child.return = t, t = t.child;
                            continue
                        }
                        if (t === e) break;
                        for (; null === t.sibling;) {
                            if (null === t.return || t.return === e) return null;
                            t = t.return
                        }
                        t.sibling.return = t.return, t = t.sibling
                    }
                    return null
                }
                var co = [];

                function uo() {
                    for (var e = 0; e < co.length; e++) co[e]._workInProgressVersionPrimary = null;
                    co.length = 0
                }
                var mo = b.ReactCurrentDispatcher,
                    ho = b.ReactCurrentBatchConfig,
                    go = 0,
                    po = null,
                    fo = null,
                    xo = null,
                    vo = !1,
                    _o = !1,
                    bo = 0,
                    To = 0;

                function Eo() {
                    throw Error(a(321))
                }

                function Io(e, t) {
                    if (null === t) return !1;
                    for (var n = 0; n < t.length && n < e.length; n++)
                        if (!rs(e[n], t[n])) return !1;
                    return !0
                }

                function yo(e, t, n, s, i, o) {
                    if (go = o, po = t, t.memoizedState = null, t.updateQueue = null, t.lanes = 0, mo.current = null === e || null === e.memoizedState ? rr : lr, e = n(s, i), _o) {
                        o = 0;
                        do {
                            if (_o = !1, bo = 0, 25 <= o) throw Error(a(301));
                            o += 1, xo = fo = null, t.updateQueue = null, mo.current = cr, e = n(s, i)
                        } while (_o)
                    }
                    if (mo.current = or, t = null !== fo && null !== fo.next, go = 0, xo = fo = po = null, vo = !1, t) throw Error(a(300));
                    return e
                }

                function jo() {
                    var e = 0 !== bo;
                    return bo = 0, e
                }

                function So() {
                    var e = {
                        memoizedState: null,
                        baseState: null,
                        baseQueue: null,
                        queue: null,
                        next: null
                    };
                    return null === xo ? po.memoizedState = xo = e : xo = xo.next = e, xo
                }

                function Co() {
                    if (null === fo) {
                        var e = po.alternate;
                        e = null !== e ? e.memoizedState : null
                    } else e = fo.next;
                    var t = null === xo ? po.memoizedState : xo.next;
                    if (null !== t) xo = t, fo = e;
                    else {
                        if (null === e) throw Error(a(310));
                        e = {
                            memoizedState: (fo = e).memoizedState,
                            baseState: fo.baseState,
                            baseQueue: fo.baseQueue,
                            queue: fo.queue,
                            next: null
                        }, null === xo ? po.memoizedState = xo = e : xo = xo.next = e
                    }
                    return xo
                }

                function No(e, t) {
                    return "function" == typeof t ? t(e) : t
                }

                function wo(e) {
                    var t = Co(),
                        n = t.queue;
                    if (null === n) throw Error(a(311));
                    n.lastRenderedReducer = e;
                    var s = fo,
                        i = s.baseQueue,
                        o = n.pending;
                    if (null !== o) {
                        if (null !== i) {
                            var r = i.next;
                            i.next = o.next, o.next = r
                        }
                        s.baseQueue = i = o, n.pending = null
                    }
                    if (null !== i) {
                        o = i.next, s = s.baseState;
                        var l = r = null,
                            c = null,
                            u = o;
                        do {
                            var d = u.lane;
                            if ((go & d) === d) null !== c && (c = c.next = {
                                lane: 0,
                                action: u.action,
                                hasEagerState: u.hasEagerState,
                                eagerState: u.eagerState,
                                next: null
                            }), s = u.hasEagerState ? u.eagerState : e(s, u.action);
                            else {
                                var m = {
                                    lane: d,
                                    action: u.action,
                                    hasEagerState: u.hasEagerState,
                                    eagerState: u.eagerState,
                                    next: null
                                };
                                null === c ? (l = c = m, r = s) : c = c.next = m, po.lanes |= d, Dl |= d
                            }
                            u = u.next
                        } while (null !== u && u !== o);
                        null === c ? r = s : c.next = l, rs(s, t.memoizedState) || (br = !0), t.memoizedState = s, t.baseState = r, t.baseQueue = c, n.lastRenderedState = s
                    }
                    if (null !== (e = n.interleaved)) {
                        i = e;
                        do {
                            o = i.lane, po.lanes |= o, Dl |= o, i = i.next
                        } while (i !== e)
                    } else null === i && (n.lanes = 0);
                    return [t.memoizedState, n.dispatch]
                }

                function Oo(e) {
                    var t = Co(),
                        n = t.queue;
                    if (null === n) throw Error(a(311));
                    n.lastRenderedReducer = e;
                    var s = n.dispatch,
                        i = n.pending,
                        o = t.memoizedState;
                    if (null !== i) {
                        n.pending = null;
                        var r = i = i.next;
                        do {
                            o = e(o, r.action), r = r.next
                        } while (r !== i);
                        rs(o, t.memoizedState) || (br = !0), t.memoizedState = o, null === t.baseQueue && (t.baseState = o), n.lastRenderedState = o
                    }
                    return [o, s]
                }

                function Po() {}

                function Lo(e, t) {
                    var n = po,
                        s = Co(),
                        i = t(),
                        o = !rs(s.memoizedState, i);
                    if (o && (s.memoizedState = i, br = !0), s = s.queue, Ko(Ro.bind(null, n, s, e), [e]), s.getSnapshot !== t || o || null !== xo && 1 & xo.memoizedState.tag) {
                        if (n.flags |= 2048, Uo(9, Mo.bind(null, n, s, i, t), void 0, null), null === Ol) throw Error(a(349));
                        0 != (30 & go) || Ao(n, t, i)
                    }
                    return i
                }

                function Ao(e, t, n) {
                    e.flags |= 16384, e = {
                        getSnapshot: t,
                        value: n
                    }, null === (t = po.updateQueue) ? (t = {
                        lastEffect: null,
                        stores: null
                    }, po.updateQueue = t, t.stores = [e]) : null === (n = t.stores) ? t.stores = [e] : n.push(e)
                }

                function Mo(e, t, n, s) {
                    t.value = n, t.getSnapshot = s, ko(t) && Do(e)
                }

                function Ro(e, t, n) {
                    return n((function () {
                        ko(t) && Do(e)
                    }))
                }

                function ko(e) {
                    var t = e.getSnapshot;
                    e = e.value;
                    try {
                        var n = t();
                        return !rs(e, n)
                    } catch (e) {
                        return !0
                    }
                }

                function Do(e) {
                    var t = wa(e, 1);
                    null !== t && sc(t, e, 1, -1)
                }

                function Fo(e) {
                    var t = So();
                    return "function" == typeof e && (e = e()), t.memoizedState = t.baseState = e, e = {
                        pending: null,
                        interleaved: null,
                        lanes: 0,
                        dispatch: null,
                        lastRenderedReducer: No,
                        lastRenderedState: e
                    }, t.queue = e, e = e.dispatch = nr.bind(null, po, e), [t.memoizedState, e]
                }

                function Uo(e, t, n, s) {
                    return e = {
                        tag: e,
                        create: t,
                        destroy: n,
                        deps: s,
                        next: null
                    }, null === (t = po.updateQueue) ? (t = {
                        lastEffect: null,
                        stores: null
                    }, po.updateQueue = t, t.lastEffect = e.next = e) : null === (n = t.lastEffect) ? t.lastEffect = e.next = e : (s = n.next, n.next = e, e.next = s, t.lastEffect = e), e
                }

                function Bo() {
                    return Co().memoizedState
                }

                function Go(e, t, n, s) {
                    var i = So();
                    po.flags |= e, i.memoizedState = Uo(1 | t, n, void 0, void 0 === s ? null : s)
                }

                function Vo(e, t, n, s) {
                    var i = Co();
                    s = void 0 === s ? null : s;
                    var a = void 0;
                    if (null !== fo) {
                        var o = fo.memoizedState;
                        if (a = o.destroy, null !== s && Io(s, o.deps)) return void(i.memoizedState = Uo(t, n, a, s))
                    }
                    po.flags |= e, i.memoizedState = Uo(1 | t, n, a, s)
                }

                function Ho(e, t) {
                    return Go(8390656, 8, e, t)
                }

                function Ko(e, t) {
                    return Vo(2048, 8, e, t)
                }

                function Wo(e, t) {
                    return Vo(4, 2, e, t)
                }

                function zo(e, t) {
                    return Vo(4, 4, e, t)
                }

                function Yo(e, t) {
                    return "function" == typeof t ? (e = e(), t(e), function () {
                        t(null)
                    }) : null != t ? (e = e(), t.current = e, function () {
                        t.current = null
                    }) : void 0
                }

                function $o(e, t, n) {
                    return n = null != n ? n.concat([e]) : null, Vo(4, 4, Yo.bind(null, t, e), n)
                }

                function qo() {}

                function Xo(e, t) {
                    var n = Co();
                    t = void 0 === t ? null : t;
                    var s = n.memoizedState;
                    return null !== s && null !== t && Io(t, s[1]) ? s[0] : (n.memoizedState = [e, t], e)
                }

                function Qo(e, t) {
                    var n = Co();
                    t = void 0 === t ? null : t;
                    var s = n.memoizedState;
                    return null !== s && null !== t && Io(t, s[1]) ? s[0] : (e = e(), n.memoizedState = [e, t], e)
                }

                function Zo(e, t, n) {
                    return 0 == (21 & go) ? (e.baseState && (e.baseState = !1, br = !0), e.memoizedState = n) : (rs(n, t) || (n = pt(), po.lanes |= n, Dl |= n, e.baseState = !0), t)
                }

                function Jo(e, t) {
                    var n = _t;
                    _t = 0 !== n && 4 > n ? n : 4, e(!0);
                    var s = ho.transition;
                    ho.transition = {};
                    try {
                        e(!1), t()
                    } finally {
                        _t = n, ho.transition = s
                    }
                }

                function er() {
                    return Co().memoizedState
                }

                function tr(e, t, n) {
                    var s = nc(e);
                    if (n = {
                            lane: s,
                            action: n,
                            hasEagerState: !1,
                            eagerState: null,
                            next: null
                        }, sr(e)) ir(t, n);
                    else if (null !== (n = Na(e, t, n, s))) {
                        sc(n, e, s, tc()), ar(n, t, s)
                    }
                }

                function nr(e, t, n) {
                    var s = nc(e),
                        i = {
                            lane: s,
                            action: n,
                            hasEagerState: !1,
                            eagerState: null,
                            next: null
                        };
                    if (sr(e)) ir(t, i);
                    else {
                        var a = e.alternate;
                        if (0 === e.lanes && (null === a || 0 === a.lanes) && null !== (a = t.lastRenderedReducer)) try {
                            var o = t.lastRenderedState,
                                r = a(o, n);
                            if (i.hasEagerState = !0, i.eagerState = r, rs(r, o)) {
                                var l = t.interleaved;
                                return null === l ? (i.next = i, Ca(t)) : (i.next = l.next, l.next = i), void(t.interleaved = i)
                            }
                        } catch (e) {}
                        null !== (n = Na(e, t, i, s)) && (sc(n, e, s, i = tc()), ar(n, t, s))
                    }
                }

                function sr(e) {
                    var t = e.alternate;
                    return e === po || null !== t && t === po
                }

                function ir(e, t) {
                    _o = vo = !0;
                    var n = e.pending;
                    null === n ? t.next = t : (t.next = n.next, n.next = t), e.pending = t
                }

                function ar(e, t, n) {
                    if (0 != (4194240 & n)) {
                        var s = t.lanes;
                        n |= s &= e.pendingLanes, t.lanes = n, vt(e, n)
                    }
                }
                var or = {
                        readContext: ja,
                        useCallback: Eo,
                        useContext: Eo,
                        useEffect: Eo,
                        useImperativeHandle: Eo,
                        useInsertionEffect: Eo,
                        useLayoutEffect: Eo,
                        useMemo: Eo,
                        useReducer: Eo,
                        useRef: Eo,
                        useState: Eo,
                        useDebugValue: Eo,
                        useDeferredValue: Eo,
                        useTransition: Eo,
                        useMutableSource: Eo,
                        useSyncExternalStore: Eo,
                        useId: Eo,
                        unstable_isNewReconciler: !1
                    },
                    rr = {
                        readContext: ja,
                        useCallback: function (e, t) {
                            return So().memoizedState = [e, void 0 === t ? null : t], e
                        },
                        useContext: ja,
                        useEffect: Ho,
                        useImperativeHandle: function (e, t, n) {
                            return n = null != n ? n.concat([e]) : null, Go(4194308, 4, Yo.bind(null, t, e), n)
                        },
                        useLayoutEffect: function (e, t) {
                            return Go(4194308, 4, e, t)
                        },
                        useInsertionEffect: function (e, t) {
                            return Go(4, 2, e, t)
                        },
                        useMemo: function (e, t) {
                            var n = So();
                            return t = void 0 === t ? null : t, e = e(), n.memoizedState = [e, t], e
                        },
                        useReducer: function (e, t, n) {
                            var s = So();
                            return t = void 0 !== n ? n(t) : t, s.memoizedState = s.baseState = t, e = {
                                pending: null,
                                interleaved: null,
                                lanes: 0,
                                dispatch: null,
                                lastRenderedReducer: e,
                                lastRenderedState: t
                            }, s.queue = e, e = e.dispatch = tr.bind(null, po, e), [s.memoizedState, e]
                        },
                        useRef: function (e) {
                            return e = {
                                current: e
                            }, So().memoizedState = e
                        },
                        useState: Fo,
                        useDebugValue: qo,
                        useDeferredValue: function (e) {
                            return So().memoizedState = e
                        },
                        useTransition: function () {
                            var e = Fo(!1),
                                t = e[0];
                            return e = Jo.bind(null, e[1]), So().memoizedState = e, [t, e]
                        },
                        useMutableSource: function () {},
                        useSyncExternalStore: function (e, t, n) {
                            var s = po,
                                i = So();
                            if (ia) {
                                if (void 0 === n) throw Error(a(407));
                                n = n()
                            } else {
                                if (n = t(), null === Ol) throw Error(a(349));
                                0 != (30 & go) || Ao(s, t, n)
                            }
                            i.memoizedState = n;
                            var o = {
                                value: n,
                                getSnapshot: t
                            };
                            return i.queue = o, Ho(Ro.bind(null, s, o, e), [e]), s.flags |= 2048, Uo(9, Mo.bind(null, s, o, n, t), void 0, null), n
                        },
                        useId: function () {
                            var e = So(),
                                t = Ol.identifierPrefix;
                            if (ia) {
                                var n = Qi;
                                t = ":" + t + "R" + (n = (Xi & ~(1 << 32 - ot(Xi) - 1)).toString(32) + n), 0 < (n = bo++) && (t += "H" + n.toString(32)), t += ":"
                            } else t = ":" + t + "r" + (n = To++).toString(32) + ":";
                            return e.memoizedState = t
                        },
                        unstable_isNewReconciler: !1
                    },
                    lr = {
                        readContext: ja,
                        useCallback: Xo,
                        useContext: ja,
                        useEffect: Ko,
                        useImperativeHandle: $o,
                        useInsertionEffect: Wo,
                        useLayoutEffect: zo,
                        useMemo: Qo,
                        useReducer: wo,
                        useRef: Bo,
                        useState: function () {
                            return wo(No)
                        },
                        useDebugValue: qo,
                        useDeferredValue: function (e) {
                            return Zo(Co(), fo.memoizedState, e)
                        },
                        useTransition: function () {
                            return [wo(No)[0], Co().memoizedState]
                        },
                        useMutableSource: Po,
                        useSyncExternalStore: Lo,
                        useId: er,
                        unstable_isNewReconciler: !1
                    },
                    cr = {
                        readContext: ja,
                        useCallback: Xo,
                        useContext: ja,
                        useEffect: Ko,
                        useImperativeHandle: $o,
                        useInsertionEffect: Wo,
                        useLayoutEffect: zo,
                        useMemo: Qo,
                        useReducer: Oo,
                        useRef: Bo,
                        useState: function () {
                            return Oo(No)
                        },
                        useDebugValue: qo,
                        useDeferredValue: function (e) {
                            var t = Co();
                            return null === fo ? t.memoizedState = e : Zo(t, fo.memoizedState, e)
                        },
                        useTransition: function () {
                            return [Oo(No)[0], Co().memoizedState]
                        },
                        useMutableSource: Po,
                        useSyncExternalStore: Lo,
                        useId: er,
                        unstable_isNewReconciler: !1
                    };

                function ur(e, t) {
                    try {
                        var n = "",
                            s = t;
                        do {
                            n += G(s), s = s.return
                        } while (s);
                        var i = n
                    } catch (e) {
                        i = "\nError generating stack: " + e.message + "\n" + e.stack
                    }
                    return {
                        value: e,
                        source: t,
                        stack: i,
                        digest: null
                    }
                }

                function dr(e, t, n) {
                    return {
                        value: e,
                        source: null,
                        stack: null != n ? n : null,
                        digest: null != t ? t : null
                    }
                }

                function mr(e, t) {
                    try {
                        console.error(t.value)
                    } catch (e) {
                        setTimeout((function () {
                            throw e
                        }))
                    }
                }
                var hr = "function" == typeof WeakMap ? WeakMap : Map;

                function gr(e, t, n) {
                    (n = Aa(-1, n)).tag = 3, n.payload = {
                        element: null
                    };
                    var s = t.value;
                    return n.callback = function () {
                        Wl || (Wl = !0, zl = s), mr(0, t)
                    }, n
                }

                function pr(e, t, n) {
                    (n = Aa(-1, n)).tag = 3;
                    var s = e.type.getDerivedStateFromError;
                    if ("function" == typeof s) {
                        var i = t.value;
                        n.payload = function () {
                            return s(i)
                        }, n.callback = function () {
                            mr(0, t)
                        }
                    }
                    var a = e.stateNode;
                    return null !== a && "function" == typeof a.componentDidCatch && (n.callback = function () {
                        mr(0, t), "function" != typeof s && (null === Yl ? Yl = new Set([this]) : Yl.add(this));
                        var e = t.stack;
                        this.componentDidCatch(t.value, {
                            componentStack: null !== e ? e : ""
                        })
                    }), n
                }

                function fr(e, t, n) {
                    var s = e.pingCache;
                    if (null === s) {
                        s = e.pingCache = new hr;
                        var i = new Set;
                        s.set(t, i)
                    } else void 0 === (i = s.get(t)) && (i = new Set, s.set(t, i));
                    i.has(n) || (i.add(n), e = Sc.bind(null, e, t, n), t.then(e, e))
                }

                function xr(e) {
                    do {
                        var t;
                        if ((t = 13 === e.tag) && (t = null === (t = e.memoizedState) || null !== t.dehydrated), t) return e;
                        e = e.return
                    } while (null !== e);
                    return null
                }

                function vr(e, t, n, s, i) {
                    return 0 == (1 & e.mode) ? (e === t ? e.flags |= 65536 : (e.flags |= 128, n.flags |= 131072, n.flags &= -52805, 1 === n.tag && (null === n.alternate ? n.tag = 17 : ((t = Aa(-1, 1)).tag = 2, Ma(n, t, 1))), n.lanes |= 1), e) : (e.flags |= 65536, e.lanes = i, e)
                }
                var _r = b.ReactCurrentOwner,
                    br = !1;

                function Tr(e, t, n, s) {
                    t.child = null === e ? Qa(t, null, n, s) : Xa(t, e.child, n, s)
                }

                function Er(e, t, n, s, i) {
                    n = n.render;
                    var a = t.ref;
                    return ya(t, i), s = yo(e, t, n, s, a, i), n = jo(), null === e || br ? (ia && n && ea(t), t.flags |= 1, Tr(e, t, s, i), t.child) : (t.updateQueue = e.updateQueue, t.flags &= -2053, e.lanes &= ~i, Wr(e, t, i))
                }

                function Ir(e, t, n, s, i) {
                    if (null === e) {
                        var a = n.type;
                        return "function" != typeof a || Ac(a) || void 0 !== a.defaultProps || null !== n.compare || void 0 !== n.defaultProps ? ((e = Rc(n.type, null, s, t, t.mode, i)).ref = t.ref, e.return = t, t.child = e) : (t.tag = 15, t.type = a, yr(e, t, a, s, i))
                    }
                    if (a = e.child, 0 == (e.lanes & i)) {
                        var o = a.memoizedProps;
                        if ((n = null !== (n = n.compare) ? n : ls)(o, s) && e.ref === t.ref) return Wr(e, t, i)
                    }
                    return t.flags |= 1, (e = Mc(a, s)).ref = t.ref, e.return = t, t.child = e
                }

                function yr(e, t, n, s, i) {
                    if (null !== e) {
                        var a = e.memoizedProps;
                        if (ls(a, s) && e.ref === t.ref) {
                            if (br = !1, t.pendingProps = s = a, 0 == (e.lanes & i)) return t.lanes = e.lanes, Wr(e, t, i);
                            0 != (131072 & e.flags) && (br = !0)
                        }
                    }
                    return Cr(e, t, n, s, i)
                }

                function jr(e, t, n) {
                    var s = t.pendingProps,
                        i = s.children,
                        a = null !== e ? e.memoizedState : null;
                    if ("hidden" === s.mode)
                        if (0 == (1 & t.mode)) t.memoizedState = {
                            baseLanes: 0,
                            cachePool: null,
                            transitions: null
                        }, Si(Ml, Al), Al |= n;
                        else {
                            if (0 == (1073741824 & n)) return e = null !== a ? a.baseLanes | n : n, t.lanes = t.childLanes = 1073741824, t.memoizedState = {
                                baseLanes: e,
                                cachePool: null,
                                transitions: null
                            }, t.updateQueue = null, Si(Ml, Al), Al |= e, null;
                            t.memoizedState = {
                                baseLanes: 0,
                                cachePool: null,
                                transitions: null
                            }, s = null !== a ? a.baseLanes : n, Si(Ml, Al), Al |= s
                        }
                    else null !== a ? (s = a.baseLanes | n, t.memoizedState = null) : s = n, Si(Ml, Al), Al |= s;
                    return Tr(e, t, i, n), t.child
                }

                function Sr(e, t) {
                    var n = t.ref;
                    (null === e && null !== n || null !== e && e.ref !== n) && (t.flags |= 512, t.flags |= 2097152)
                }

                function Cr(e, t, n, s, i) {
                    var a = Li(n) ? Oi : Ni.current;
                    return a = Pi(t, a), ya(t, i), n = yo(e, t, n, s, a, i), s = jo(), null === e || br ? (ia && s && ea(t), t.flags |= 1, Tr(e, t, n, i), t.child) : (t.updateQueue = e.updateQueue, t.flags &= -2053, e.lanes &= ~i, Wr(e, t, i))
                }

                function Nr(e, t, n, s, i) {
                    if (Li(n)) {
                        var a = !0;
                        ki(t)
                    } else a = !1;
                    if (ya(t, i), null === t.stateNode) Kr(e, t), Ha(t, n, s), Wa(t, n, s, i), s = !0;
                    else if (null === e) {
                        var o = t.stateNode,
                            r = t.memoizedProps;
                        o.props = r;
                        var l = o.context,
                            c = n.contextType;
                        "object" == typeof c && null !== c ? c = ja(c) : c = Pi(t, c = Li(n) ? Oi : Ni.current);
                        var u = n.getDerivedStateFromProps,
                            d = "function" == typeof u || "function" == typeof o.getSnapshotBeforeUpdate;
                        d || "function" != typeof o.UNSAFE_componentWillReceiveProps && "function" != typeof o.componentWillReceiveProps || (r !== s || l !== c) && Ka(t, o, s, c), Oa = !1;
                        var m = t.memoizedState;
                        o.state = m, Da(t, s, o, i), l = t.memoizedState, r !== s || m !== l || wi.current || Oa ? ("function" == typeof u && (Ba(t, n, u, s), l = t.memoizedState), (r = Oa || Va(t, n, r, s, m, l, c)) ? (d || "function" != typeof o.UNSAFE_componentWillMount && "function" != typeof o.componentWillMount || ("function" == typeof o.componentWillMount && o.componentWillMount(), "function" == typeof o.UNSAFE_componentWillMount && o.UNSAFE_componentWillMount()), "function" == typeof o.componentDidMount && (t.flags |= 4194308)) : ("function" == typeof o.componentDidMount && (t.flags |= 4194308), t.memoizedProps = s, t.memoizedState = l), o.props = s, o.state = l, o.context = c, s = r) : ("function" == typeof o.componentDidMount && (t.flags |= 4194308), s = !1)
                    } else {
                        o = t.stateNode, La(e, t), r = t.memoizedProps, c = t.type === t.elementType ? r : fa(t.type, r), o.props = c, d = t.pendingProps, m = o.context, "object" == typeof (l = n.contextType) && null !== l ? l = ja(l) : l = Pi(t, l = Li(n) ? Oi : Ni.current);
                        var h = n.getDerivedStateFromProps;
                        (u = "function" == typeof h || "function" == typeof o.getSnapshotBeforeUpdate) || "function" != typeof o.UNSAFE_componentWillReceiveProps && "function" != typeof o.componentWillReceiveProps || (r !== d || m !== l) && Ka(t, o, s, l), Oa = !1, m = t.memoizedState, o.state = m, Da(t, s, o, i);
                        var g = t.memoizedState;
                        r !== d || m !== g || wi.current || Oa ? ("function" == typeof h && (Ba(t, n, h, s), g = t.memoizedState), (c = Oa || Va(t, n, c, s, m, g, l) || !1) ? (u || "function" != typeof o.UNSAFE_componentWillUpdate && "function" != typeof o.componentWillUpdate || ("function" == typeof o.componentWillUpdate && o.componentWillUpdate(s, g, l), "function" == typeof o.UNSAFE_componentWillUpdate && o.UNSAFE_componentWillUpdate(s, g, l)), "function" == typeof o.componentDidUpdate && (t.flags |= 4), "function" == typeof o.getSnapshotBeforeUpdate && (t.flags |= 1024)) : ("function" != typeof o.componentDidUpdate || r === e.memoizedProps && m === e.memoizedState || (t.flags |= 4), "function" != typeof o.getSnapshotBeforeUpdate || r === e.memoizedProps && m === e.memoizedState || (t.flags |= 1024), t.memoizedProps = s, t.memoizedState = g), o.props = s, o.state = g, o.context = l, s = c) : ("function" != typeof o.componentDidUpdate || r === e.memoizedProps && m === e.memoizedState || (t.flags |= 4), "function" != typeof o.getSnapshotBeforeUpdate || r === e.memoizedProps && m === e.memoizedState || (t.flags |= 1024), s = !1)
                    }
                    return wr(e, t, n, s, a, i)
                }

                function wr(e, t, n, s, i, a) {
                    Sr(e, t);
                    var o = 0 != (128 & t.flags);
                    if (!s && !o) return i && Di(t, n, !1), Wr(e, t, a);
                    s = t.stateNode, _r.current = t;
                    var r = o && "function" != typeof n.getDerivedStateFromError ? null : s.render();
                    return t.flags |= 1, null !== e && o ? (t.child = Xa(t, e.child, null, a), t.child = Xa(t, null, r, a)) : Tr(e, t, r, a), t.memoizedState = s.state, i && Di(t, n, !0), t.child
                }

                function Or(e) {
                    var t = e.stateNode;
                    t.pendingContext ? Mi(0, t.pendingContext, t.pendingContext !== t.context) : t.context && Mi(0, t.context, !1), so(e, t.containerInfo)
                }

                function Pr(e, t, n, s, i) {
                    return ha(), ga(i), t.flags |= 256, Tr(e, t, n, s), t.child
                }
                var Lr, Ar, Mr, Rr, kr = {
                    dehydrated: null,
                    treeContext: null,
                    retryLane: 0
                };

                function Dr(e) {
                    return {
                        baseLanes: e,
                        cachePool: null,
                        transitions: null
                    }
                }

                function Fr(e, t, n) {
                    var s, i = t.pendingProps,
                        o = ro.current,
                        r = !1,
                        l = 0 != (128 & t.flags);
                    if ((s = l) || (s = (null === e || null !== e.memoizedState) && 0 != (2 & o)), s ? (r = !0, t.flags &= -129) : null !== e && null === e.memoizedState || (o |= 1), Si(ro, 1 & o), null === e) return ca(t), null !== (e = t.memoizedState) && null !== (e = e.dehydrated) ? (0 == (1 & t.mode) ? t.lanes = 1 : "$!" === e.data ? t.lanes = 8 : t.lanes = 1073741824, null) : (l = i.children, e = i.fallback, r ? (i = t.mode, r = t.child, l = {
                        mode: "hidden",
                        children: l
                    }, 0 == (1 & i) && null !== r ? (r.childLanes = 0, r.pendingProps = l) : r = Dc(l, i, 0, null), e = kc(e, i, n, null), r.return = t, e.return = t, r.sibling = e, t.child = r, t.child.memoizedState = Dr(n), t.memoizedState = kr, e) : Ur(t, l));
                    if (null !== (o = e.memoizedState) && null !== (s = o.dehydrated)) return function (e, t, n, s, i, o, r) {
                        if (n) return 256 & t.flags ? (t.flags &= -257, Br(e, t, r, s = dr(Error(a(422))))) : null !== t.memoizedState ? (t.child = e.child, t.flags |= 128, null) : (o = s.fallback, i = t.mode, s = Dc({
                            mode: "visible",
                            children: s.children
                        }, i, 0, null), (o = kc(o, i, r, null)).flags |= 2, s.return = t, o.return = t, s.sibling = o, t.child = s, 0 != (1 & t.mode) && Xa(t, e.child, null, r), t.child.memoizedState = Dr(r), t.memoizedState = kr, o);
                        if (0 == (1 & t.mode)) return Br(e, t, r, null);
                        if ("$!" === i.data) {
                            if (s = i.nextSibling && i.nextSibling.dataset) var l = s.dgst;
                            return s = l, Br(e, t, r, s = dr(o = Error(a(419)), s, void 0))
                        }
                        if (l = 0 != (r & e.childLanes), br || l) {
                            if (null !== (s = Ol)) {
                                switch (r & -r) {
                                case 4:
                                    i = 2;
                                    break;
                                case 16:
                                    i = 8;
                                    break;
                                case 64:
                                case 128:
                                case 256:
                                case 512:
                                case 1024:
                                case 2048:
                                case 4096:
                                case 8192:
                                case 16384:
                                case 32768:
                                case 65536:
                                case 131072:
                                case 262144:
                                case 524288:
                                case 1048576:
                                case 2097152:
                                case 4194304:
                                case 8388608:
                                case 16777216:
                                case 33554432:
                                case 67108864:
                                    i = 32;
                                    break;
                                case 536870912:
                                    i = 268435456;
                                    break;
                                default:
                                    i = 0
                                }
                                0 !== (i = 0 != (i & (s.suspendedLanes | r)) ? 0 : i) && i !== o.retryLane && (o.retryLane = i, wa(e, i), sc(s, e, i, -1))
                            }
                            return fc(), Br(e, t, r, s = dr(Error(a(421))))
                        }
                        return "$?" === i.data ? (t.flags |= 128, t.child = e.child, t = Nc.bind(null, e), i._reactRetry = t, null) : (e = o.treeContext, sa = ci(i.nextSibling), na = t, ia = !0, aa = null, null !== e && (Yi[$i++] = Xi, Yi[$i++] = Qi, Yi[$i++] = qi, Xi = e.id, Qi = e.overflow, qi = t), t = Ur(t, s.children), t.flags |= 4096, t)
                    }(e, t, l, i, s, o, n);
                    if (r) {
                        r = i.fallback, l = t.mode, s = (o = e.child).sibling;
                        var c = {
                            mode: "hidden",
                            children: i.children
                        };
                        return 0 == (1 & l) && t.child !== o ? ((i = t.child).childLanes = 0, i.pendingProps = c, t.deletions = null) : (i = Mc(o, c)).subtreeFlags = 14680064 & o.subtreeFlags, null !== s ? r = Mc(s, r) : (r = kc(r, l, n, null)).flags |= 2, r.return = t, i.return = t, i.sibling = r, t.child = i, i = r, r = t.child, l = null === (l = e.child.memoizedState) ? Dr(n) : {
                            baseLanes: l.baseLanes | n,
                            cachePool: null,
                            transitions: l.transitions
                        }, r.memoizedState = l, r.childLanes = e.childLanes & ~n, t.memoizedState = kr, i
                    }
                    return e = (r = e.child).sibling, i = Mc(r, {
                        mode: "visible",
                        children: i.children
                    }), 0 == (1 & t.mode) && (i.lanes = n), i.return = t, i.sibling = null, null !== e && (null === (n = t.deletions) ? (t.deletions = [e], t.flags |= 16) : n.push(e)), t.child = i, t.memoizedState = null, i
                }

                function Ur(e, t) {
                    return (t = Dc({
                        mode: "visible",
                        children: t
                    }, e.mode, 0, null)).return = e, e.child = t
                }

                function Br(e, t, n, s) {
                    return null !== s && ga(s), Xa(t, e.child, null, n), (e = Ur(t, t.pendingProps.children)).flags |= 2, t.memoizedState = null, e
                }

                function Gr(e, t, n) {
                    e.lanes |= t;
                    var s = e.alternate;
                    null !== s && (s.lanes |= t), Ia(e.return, t, n)
                }

                function Vr(e, t, n, s, i) {
                    var a = e.memoizedState;
                    null === a ? e.memoizedState = {
                        isBackwards: t,
                        rendering: null,
                        renderingStartTime: 0,
                        last: s,
                        tail: n,
                        tailMode: i
                    } : (a.isBackwards = t, a.rendering = null, a.renderingStartTime = 0, a.last = s, a.tail = n, a.tailMode = i)
                }

                function Hr(e, t, n) {
                    var s = t.pendingProps,
                        i = s.revealOrder,
                        a = s.tail;
                    if (Tr(e, t, s.children, n), 0 != (2 & (s = ro.current))) s = 1 & s | 2, t.flags |= 128;
                    else {
                        if (null !== e && 0 != (128 & e.flags)) e: for (e = t.child; null !== e;) {
                            if (13 === e.tag) null !== e.memoizedState && Gr(e, n, t);
                            else if (19 === e.tag) Gr(e, n, t);
                            else if (null !== e.child) {
                                e.child.return = e, e = e.child;
                                continue
                            }
                            if (e === t) break e;
                            for (; null === e.sibling;) {
                                if (null === e.return || e.return === t) break e;
                                e = e.return
                            }
                            e.sibling.return = e.return, e = e.sibling
                        }
                        s &= 1
                    }
                    if (Si(ro, s), 0 == (1 & t.mode)) t.memoizedState = null;
                    else switch (i) {
                    case "forwards":
                        for (n = t.child, i = null; null !== n;) null !== (e = n.alternate) && null === lo(e) && (i = n), n = n.sibling;
                        null === (n = i) ? (i = t.child, t.child = null) : (i = n.sibling, n.sibling = null), Vr(t, !1, i, n, a);
                        break;
                    case "backwards":
                        for (n = null, i = t.child, t.child = null; null !== i;) {
                            if (null !== (e = i.alternate) && null === lo(e)) {
                                t.child = i;
                                break
                            }
                            e = i.sibling, i.sibling = n, n = i, i = e
                        }
                        Vr(t, !0, n, null, a);
                        break;
                    case "together":
                        Vr(t, !1, null, null, void 0);
                        break;
                    default:
                        t.memoizedState = null
                    }
                    return t.child
                }

                function Kr(e, t) {
                    0 == (1 & t.mode) && null !== e && (e.alternate = null, t.alternate = null, t.flags |= 2)
                }

                function Wr(e, t, n) {
                    if (null !== e && (t.dependencies = e.dependencies), Dl |= t.lanes, 0 == (n & t.childLanes)) return null;
                    if (null !== e && t.child !== e.child) throw Error(a(153));
                    if (null !== t.child) {
                        for (n = Mc(e = t.child, e.pendingProps), t.child = n, n.return = t; null !== e.sibling;) e = e.sibling, (n = n.sibling = Mc(e, e.pendingProps)).return = t;
                        n.sibling = null
                    }
                    return t.child
                }

                function zr(e, t) {
                    if (!ia) switch (e.tailMode) {
                    case "hidden":
                        t = e.tail;
                        for (var n = null; null !== t;) null !== t.alternate && (n = t), t = t.sibling;
                        null === n ? e.tail = null : n.sibling = null;
                        break;
                    case "collapsed":
                        n = e.tail;
                        for (var s = null; null !== n;) null !== n.alternate && (s = n), n = n.sibling;
                        null === s ? t || null === e.tail ? e.tail = null : e.tail.sibling = null : s.sibling = null
                    }
                }

                function Yr(e) {
                    var t = null !== e.alternate && e.alternate.child === e.child,
                        n = 0,
                        s = 0;
                    if (t)
                        for (var i = e.child; null !== i;) n |= i.lanes | i.childLanes, s |= 14680064 & i.subtreeFlags, s |= 14680064 & i.flags, i.return = e, i = i.sibling;
                    else
                        for (i = e.child; null !== i;) n |= i.lanes | i.childLanes, s |= i.subtreeFlags, s |= i.flags, i.return = e, i = i.sibling;
                    return e.subtreeFlags |= s, e.childLanes = n, t
                }

                function $r(e, t, n) {
                    var s = t.pendingProps;
                    switch (ta(t), t.tag) {
                    case 2:
                    case 16:
                    case 15:
                    case 0:
                    case 11:
                    case 7:
                    case 8:
                    case 12:
                    case 9:
                    case 14:
                        return Yr(t), null;
                    case 1:
                    case 17:
                        return Li(t.type) && Ai(), Yr(t), null;
                    case 3:
                        return s = t.stateNode, io(), ji(wi), ji(Ni), uo(), s.pendingContext && (s.context = s.pendingContext, s.pendingContext = null), null !== e && null !== e.child || (da(t) ? t.flags |= 4 : null === e || e.memoizedState.isDehydrated && 0 == (256 & t.flags) || (t.flags |= 1024, null !== aa && (rc(aa), aa = null))), Ar(e, t), Yr(t), null;
                    case 5:
                        oo(t);
                        var i = no(to.current);
                        if (n = t.type, null !== e && null != t.stateNode) Mr(e, t, n, s, i), e.ref !== t.ref && (t.flags |= 512, t.flags |= 2097152);
                        else {
                            if (!s) {
                                if (null === t.stateNode) throw Error(a(166));
                                return Yr(t), null
                            }
                            if (e = no(Ja.current), da(t)) {
                                s = t.stateNode, n = t.type;
                                var o = t.memoizedProps;
                                switch (s[mi] = t, s[hi] = o, e = 0 != (1 & t.mode), n) {
                                case "dialog":
                                    Us("cancel", s), Us("close", s);
                                    break;
                                case "iframe":
                                case "object":
                                case "embed":
                                    Us("load", s);
                                    break;
                                case "video":
                                case "audio":
                                    for (i = 0; i < Rs.length; i++) Us(Rs[i], s);
                                    break;
                                case "source":
                                    Us("error", s);
                                    break;
                                case "img":
                                case "image":
                                case "link":
                                    Us("error", s), Us("load", s);
                                    break;
                                case "details":
                                    Us("toggle", s);
                                    break;
                                case "input":
                                    X(s, o), Us("invalid", s);
                                    break;
                                case "select":
                                    s._wrapperState = {
                                        wasMultiple: !!o.multiple
                                    }, Us("invalid", s);
                                    break;
                                case "textarea":
                                    ie(s, o), Us("invalid", s)
                                }
                                for (var l in ve(n, o), i = null, o)
                                    if (o.hasOwnProperty(l)) {
                                        var c = o[l];
                                        "children" === l ? "string" == typeof c ? s.textContent !== c && (!0 !== o.suppressHydrationWarning && Zs(s.textContent, c, e), i = ["children", c]) : "number" == typeof c && s.textContent !== "" + c && (!0 !== o.suppressHydrationWarning && Zs(s.textContent, c, e), i = ["children", "" + c]) : r.hasOwnProperty(l) && null != c && "onScroll" === l && Us("scroll", s)
                                    } switch (n) {
                                case "input":
                                    z(s), J(s, o, !0);
                                    break;
                                case "textarea":
                                    z(s), oe(s);
                                    break;
                                case "select":
                                case "option":
                                    break;
                                default:
                                    "function" == typeof o.onClick && (s.onclick = Js)
                                }
                                s = i, t.updateQueue = s, null !== s && (t.flags |= 4)
                            } else {
                                l = 9 === i.nodeType ? i : i.ownerDocument, "http://www.w3.org/1999/xhtml" === e && (e = re(n)), "http://www.w3.org/1999/xhtml" === e ? "script" === n ? ((e = l.createElement("div")).innerHTML = "<script><\/script>", e = e.removeChild(e.firstChild)) : "string" == typeof s.is ? e = l.createElement(n, {
                                    is: s.is
                                }) : (e = l.createElement(n), "select" === n && (l = e, s.multiple ? l.multiple = !0 : s.size && (l.size = s.size))) : e = l.createElementNS(e, n), e[mi] = t, e[hi] = s, Lr(e, t, !1, !1), t.stateNode = e;
                                e: {
                                    switch (l = _e(n, s), n) {
                                    case "dialog":
                                        Us("cancel", e), Us("close", e), i = s;
                                        break;
                                    case "iframe":
                                    case "object":
                                    case "embed":
                                        Us("load", e), i = s;
                                        break;
                                    case "video":
                                    case "audio":
                                        for (i = 0; i < Rs.length; i++) Us(Rs[i], e);
                                        i = s;
                                        break;
                                    case "source":
                                        Us("error", e), i = s;
                                        break;
                                    case "img":
                                    case "image":
                                    case "link":
                                        Us("error", e), Us("load", e), i = s;
                                        break;
                                    case "details":
                                        Us("toggle", e), i = s;
                                        break;
                                    case "input":
                                        X(e, s), i = q(e, s), Us("invalid", e);
                                        break;
                                    case "option":
                                    default:
                                        i = s;
                                        break;
                                    case "select":
                                        e._wrapperState = {
                                            wasMultiple: !!s.multiple
                                        }, i = D({}, s, {
                                            value: void 0
                                        }), Us("invalid", e);
                                        break;
                                    case "textarea":
                                        ie(e, s), i = se(e, s), Us("invalid", e)
                                    }
                                    for (o in ve(n, i), c = i)
                                        if (c.hasOwnProperty(o)) {
                                            var u = c[o];
                                            "style" === o ? fe(e, u) : "dangerouslySetInnerHTML" === o ? null != (u = u ? u.__html : void 0) && de(e, u) : "children" === o ? "string" == typeof u ? ("textarea" !== n || "" !== u) && me(e, u) : "number" == typeof u && me(e, "" + u) : "suppressContentEditableWarning" !== o && "suppressHydrationWarning" !== o && "autoFocus" !== o && (r.hasOwnProperty(o) ? null != u && "onScroll" === o && Us("scroll", e) : null != u && _(e, o, u, l))
                                        } switch (n) {
                                    case "input":
                                        z(e), J(e, s, !1);
                                        break;
                                    case "textarea":
                                        z(e), oe(e);
                                        break;
                                    case "option":
                                        null != s.value && e.setAttribute("value", "" + K(s.value));
                                        break;
                                    case "select":
                                        e.multiple = !!s.multiple, null != (o = s.value) ? ne(e, !!s.multiple, o, !1) : null != s.defaultValue && ne(e, !!s.multiple, s.defaultValue, !0);
                                        break;
                                    default:
                                        "function" == typeof i.onClick && (e.onclick = Js)
                                    }
                                    switch (n) {
                                    case "button":
                                    case "input":
                                    case "select":
                                    case "textarea":
                                        s = !!s.autoFocus;
                                        break e;
                                    case "img":
                                        s = !0;
                                        break e;
                                    default:
                                        s = !1
                                    }
                                }
                                s && (t.flags |= 4)
                            }
                            null !== t.ref && (t.flags |= 512, t.flags |= 2097152)
                        }
                        return Yr(t), null;
                    case 6:
                        if (e && null != t.stateNode) Rr(e, t, e.memoizedProps, s);
                        else {
                            if ("string" != typeof s && null === t.stateNode) throw Error(a(166));
                            if (n = no(to.current), no(Ja.current), da(t)) {
                                if (s = t.stateNode, n = t.memoizedProps, s[mi] = t, (o = s.nodeValue !== n) && null !== (e = na)) switch (e.tag) {
                                case 3:
                                    Zs(s.nodeValue, n, 0 != (1 & e.mode));
                                    break;
                                case 5:
                                    !0 !== e.memoizedProps.suppressHydrationWarning && Zs(s.nodeValue, n, 0 != (1 & e.mode))
                                }
                                o && (t.flags |= 4)
                            } else(s = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(s))[mi] = t, t.stateNode = s
                        }
                        return Yr(t), null;
                    case 13:
                        if (ji(ro), s = t.memoizedState, null === e || null !== e.memoizedState && null !== e.memoizedState.dehydrated) {
                            if (ia && null !== sa && 0 != (1 & t.mode) && 0 == (128 & t.flags)) ma(), ha(), t.flags |= 98560, o = !1;
                            else if (o = da(t), null !== s && null !== s.dehydrated) {
                                if (null === e) {
                                    if (!o) throw Error(a(318));
                                    if (!(o = null !== (o = t.memoizedState) ? o.dehydrated : null)) throw Error(a(317));
                                    o[mi] = t
                                } else ha(), 0 == (128 & t.flags) && (t.memoizedState = null), t.flags |= 4;
                                Yr(t), o = !1
                            } else null !== aa && (rc(aa), aa = null), o = !0;
                            if (!o) return 65536 & t.flags ? t : null
                        }
                        return 0 != (128 & t.flags) ? (t.lanes = n, t) : ((s = null !== s) !== (null !== e && null !== e.memoizedState) && s && (t.child.flags |= 8192, 0 != (1 & t.mode) && (null === e || 0 != (1 & ro.current) ? 0 === Rl && (Rl = 3) : fc())), null !== t.updateQueue && (t.flags |= 4), Yr(t), null);
                    case 4:
                        return io(), Ar(e, t), null === e && Vs(t.stateNode.containerInfo), Yr(t), null;
                    case 10:
                        return Ea(t.type._context), Yr(t), null;
                    case 19:
                        if (ji(ro), null === (o = t.memoizedState)) return Yr(t), null;
                        if (s = 0 != (128 & t.flags), null === (l = o.rendering))
                            if (s) zr(o, !1);
                            else {
                                if (0 !== Rl || null !== e && 0 != (128 & e.flags))
                                    for (e = t.child; null !== e;) {
                                        if (null !== (l = lo(e))) {
                                            for (t.flags |= 128, zr(o, !1), null !== (s = l.updateQueue) && (t.updateQueue = s, t.flags |= 4), t.subtreeFlags = 0, s = n, n = t.child; null !== n;) e = s, (o = n).flags &= 14680066, null === (l = o.alternate) ? (o.childLanes = 0, o.lanes = e, o.child = null, o.subtreeFlags = 0, o.memoizedProps = null, o.memoizedState = null, o.updateQueue = null, o.dependencies = null, o.stateNode = null) : (o.childLanes = l.childLanes, o.lanes = l.lanes, o.child = l.child, o.subtreeFlags = 0, o.deletions = null, o.memoizedProps = l.memoizedProps, o.memoizedState = l.memoizedState, o.updateQueue = l.updateQueue, o.type = l.type, e = l.dependencies, o.dependencies = null === e ? null : {
                                                lanes: e.lanes,
                                                firstContext: e.firstContext
                                            }), n = n.sibling;
                                            return Si(ro, 1 & ro.current | 2), t.child
                                        }
                                        e = e.sibling
                                    }
                                null !== o.tail && Qe() > Hl && (t.flags |= 128, s = !0, zr(o, !1), t.lanes = 4194304)
                            }
                        else {
                            if (!s)
                                if (null !== (e = lo(l))) {
                                    if (t.flags |= 128, s = !0, null !== (n = e.updateQueue) && (t.updateQueue = n, t.flags |= 4), zr(o, !0), null === o.tail && "hidden" === o.tailMode && !l.alternate && !ia) return Yr(t), null
                                } else 2 * Qe() - o.renderingStartTime > Hl && 1073741824 !== n && (t.flags |= 128, s = !0, zr(o, !1), t.lanes = 4194304);
                            o.isBackwards ? (l.sibling = t.child, t.child = l) : (null !== (n = o.last) ? n.sibling = l : t.child = l, o.last = l)
                        }
                        return null !== o.tail ? (t = o.tail, o.rendering = t, o.tail = t.sibling, o.renderingStartTime = Qe(), t.sibling = null, n = ro.current, Si(ro, s ? 1 & n | 2 : 1 & n), t) : (Yr(t), null);
                    case 22:
                    case 23:
                        return mc(), s = null !== t.memoizedState, null !== e && null !== e.memoizedState !== s && (t.flags |= 8192), s && 0 != (1 & t.mode) ? 0 != (1073741824 & Al) && (Yr(t), 6 & t.subtreeFlags && (t.flags |= 8192)) : Yr(t), null;
                    case 24:
                    case 25:
                        return null
                    }
                    throw Error(a(156, t.tag))
                }

                function qr(e, t) {
                    switch (ta(t), t.tag) {
                    case 1:
                        return Li(t.type) && Ai(), 65536 & (e = t.flags) ? (t.flags = -65537 & e | 128, t) : null;
                    case 3:
                        return io(), ji(wi), ji(Ni), uo(), 0 != (65536 & (e = t.flags)) && 0 == (128 & e) ? (t.flags = -65537 & e | 128, t) : null;
                    case 5:
                        return oo(t), null;
                    case 13:
                        if (ji(ro), null !== (e = t.memoizedState) && null !== e.dehydrated) {
                            if (null === t.alternate) throw Error(a(340));
                            ha()
                        }
                        return 65536 & (e = t.flags) ? (t.flags = -65537 & e | 128, t) : null;
                    case 19:
                        return ji(ro), null;
                    case 4:
                        return io(), null;
                    case 10:
                        return Ea(t.type._context), null;
                    case 22:
                    case 23:
                        return mc(), null;
                    default:
                        return null
                    }
                }
                Lr = function (e, t) {
                    for (var n = t.child; null !== n;) {
                        if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
                        else if (4 !== n.tag && null !== n.child) {
                            n.child.return = n, n = n.child;
                            continue
                        }
                        if (n === t) break;
                        for (; null === n.sibling;) {
                            if (null === n.return || n.return === t) return;
                            n = n.return
                        }
                        n.sibling.return = n.return, n = n.sibling
                    }
                }, Ar = function () {}, Mr = function (e, t, n, s) {
                    var i = e.memoizedProps;
                    if (i !== s) {
                        e = t.stateNode, no(Ja.current);
                        var a, o = null;
                        switch (n) {
                        case "input":
                            i = q(e, i), s = q(e, s), o = [];
                            break;
                        case "select":
                            i = D({}, i, {
                                value: void 0
                            }), s = D({}, s, {
                                value: void 0
                            }), o = [];
                            break;
                        case "textarea":
                            i = se(e, i), s = se(e, s), o = [];
                            break;
                        default:
                            "function" != typeof i.onClick && "function" == typeof s.onClick && (e.onclick = Js)
                        }
                        for (u in ve(n, s), n = null, i)
                            if (!s.hasOwnProperty(u) && i.hasOwnProperty(u) && null != i[u])
                                if ("style" === u) {
                                    var l = i[u];
                                    for (a in l) l.hasOwnProperty(a) && (n || (n = {}), n[a] = "")
                                } else "dangerouslySetInnerHTML" !== u && "children" !== u && "suppressContentEditableWarning" !== u && "suppressHydrationWarning" !== u && "autoFocus" !== u && (r.hasOwnProperty(u) ? o || (o = []) : (o = o || []).push(u, null));
                        for (u in s) {
                            var c = s[u];
                            if (l = null != i ? i[u] : void 0, s.hasOwnProperty(u) && c !== l && (null != c || null != l))
                                if ("style" === u)
                                    if (l) {
                                        for (a in l) !l.hasOwnProperty(a) || c && c.hasOwnProperty(a) || (n || (n = {}), n[a] = "");
                                        for (a in c) c.hasOwnProperty(a) && l[a] !== c[a] && (n || (n = {}), n[a] = c[a])
                                    } else n || (o || (o = []), o.push(u, n)), n = c;
                            else "dangerouslySetInnerHTML" === u ? (c = c ? c.__html : void 0, l = l ? l.__html : void 0, null != c && l !== c && (o = o || []).push(u, c)) : "children" === u ? "string" != typeof c && "number" != typeof c || (o = o || []).push(u, "" + c) : "suppressContentEditableWarning" !== u && "suppressHydrationWarning" !== u && (r.hasOwnProperty(u) ? (null != c && "onScroll" === u && Us("scroll", e), o || l === c || (o = [])) : (o = o || []).push(u, c))
                        }
                        n && (o = o || []).push("style", n);
                        var u = o;
                        (t.updateQueue = u) && (t.flags |= 4)
                    }
                }, Rr = function (e, t, n, s) {
                    n !== s && (t.flags |= 4)
                };
                var Xr = !1,
                    Qr = !1,
                    Zr = "function" == typeof WeakSet ? WeakSet : Set,
                    Jr = null;

                function el(e, t) {
                    var n = e.ref;
                    if (null !== n)
                        if ("function" == typeof n) try {
                            n(null)
                        } catch (n) {
                            jc(e, t, n)
                        } else n.current = null
                }

                function tl(e, t, n) {
                    try {
                        n()
                    } catch (n) {
                        jc(e, t, n)
                    }
                }
                var nl = !1;

                function sl(e, t, n) {
                    var s = t.updateQueue;
                    if (null !== (s = null !== s ? s.lastEffect : null)) {
                        var i = s = s.next;
                        do {
                            if ((i.tag & e) === e) {
                                var a = i.destroy;
                                i.destroy = void 0, void 0 !== a && tl(t, n, a)
                            }
                            i = i.next
                        } while (i !== s)
                    }
                }

                function il(e, t) {
                    if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
                        var n = t = t.next;
                        do {
                            if ((n.tag & e) === e) {
                                var s = n.create;
                                n.destroy = s()
                            }
                            n = n.next
                        } while (n !== t)
                    }
                }

                function al(e) {
                    var t = e.ref;
                    if (null !== t) {
                        var n = e.stateNode;
                        e.tag, e = n, "function" == typeof t ? t(e) : t.current = e
                    }
                }

                function ol(e) {
                    var t = e.alternate;
                    null !== t && (e.alternate = null, ol(t)), e.child = null, e.deletions = null, e.sibling = null, 5 === e.tag && (null !== (t = e.stateNode) && (delete t[mi], delete t[hi], delete t[pi], delete t[fi], delete t[xi])), e.stateNode = null, e.return = null, e.dependencies = null, e.memoizedProps = null, e.memoizedState = null, e.pendingProps = null, e.stateNode = null, e.updateQueue = null
                }

                function rl(e) {
                    return 5 === e.tag || 3 === e.tag || 4 === e.tag
                }

                function ll(e) {
                    e: for (;;) {
                        for (; null === e.sibling;) {
                            if (null === e.return || rl(e.return)) return null;
                            e = e.return
                        }
                        for (e.sibling.return = e.return, e = e.sibling; 5 !== e.tag && 6 !== e.tag && 18 !== e.tag;) {
                            if (2 & e.flags) continue e;
                            if (null === e.child || 4 === e.tag) continue e;
                            e.child.return = e, e = e.child
                        }
                        if (!(2 & e.flags)) return e.stateNode
                    }
                }

                function cl(e, t, n) {
                    var s = e.tag;
                    if (5 === s || 6 === s) e = e.stateNode, t ? 8 === n.nodeType ? n.parentNode.insertBefore(e, t) : n.insertBefore(e, t) : (8 === n.nodeType ? (t = n.parentNode).insertBefore(e, n) : (t = n).appendChild(e), null != (n = n._reactRootContainer) || null !== t.onclick || (t.onclick = Js));
                    else if (4 !== s && null !== (e = e.child))
                        for (cl(e, t, n), e = e.sibling; null !== e;) cl(e, t, n), e = e.sibling
                }

                function ul(e, t, n) {
                    var s = e.tag;
                    if (5 === s || 6 === s) e = e.stateNode, t ? n.insertBefore(e, t) : n.appendChild(e);
                    else if (4 !== s && null !== (e = e.child))
                        for (ul(e, t, n), e = e.sibling; null !== e;) ul(e, t, n), e = e.sibling
                }
                var dl = null,
                    ml = !1;

                function hl(e, t, n) {
                    for (n = n.child; null !== n;) gl(e, t, n), n = n.sibling
                }

                function gl(e, t, n) {
                    if (at && "function" == typeof at.onCommitFiberUnmount) try {
                        at.onCommitFiberUnmount(it, n)
                    } catch (e) {}
                    switch (n.tag) {
                    case 5:
                        Qr || el(n, t);
                    case 6:
                        var s = dl,
                            i = ml;
                        dl = null, hl(e, t, n), ml = i, null !== (dl = s) && (ml ? (e = dl, n = n.stateNode, 8 === e.nodeType ? e.parentNode.removeChild(n) : e.removeChild(n)) : dl.removeChild(n.stateNode));
                        break;
                    case 18:
                        null !== dl && (ml ? (e = dl, n = n.stateNode, 8 === e.nodeType ? li(e.parentNode, n) : 1 === e.nodeType && li(e, n), Vt(e)) : li(dl, n.stateNode));
                        break;
                    case 4:
                        s = dl, i = ml, dl = n.stateNode.containerInfo, ml = !0, hl(e, t, n), dl = s, ml = i;
                        break;
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                        if (!Qr && (null !== (s = n.updateQueue) && null !== (s = s.lastEffect))) {
                            i = s = s.next;
                            do {
                                var a = i,
                                    o = a.destroy;
                                a = a.tag, void 0 !== o && (0 != (2 & a) || 0 != (4 & a)) && tl(n, t, o), i = i.next
                            } while (i !== s)
                        }
                        hl(e, t, n);
                        break;
                    case 1:
                        if (!Qr && (el(n, t), "function" == typeof (s = n.stateNode).componentWillUnmount)) try {
                            s.props = n.memoizedProps, s.state = n.memoizedState, s.componentWillUnmount()
                        } catch (e) {
                            jc(n, t, e)
                        }
                        hl(e, t, n);
                        break;
                    case 21:
                        hl(e, t, n);
                        break;
                    case 22:
                        1 & n.mode ? (Qr = (s = Qr) || null !== n.memoizedState, hl(e, t, n), Qr = s) : hl(e, t, n);
                        break;
                    default:
                        hl(e, t, n)
                    }
                }

                function pl(e) {
                    var t = e.updateQueue;
                    if (null !== t) {
                        e.updateQueue = null;
                        var n = e.stateNode;
                        null === n && (n = e.stateNode = new Zr), t.forEach((function (t) {
                            var s = wc.bind(null, e, t);
                            n.has(t) || (n.add(t), t.then(s, s))
                        }))
                    }
                }

                function fl(e, t) {
                    var n = t.deletions;
                    if (null !== n)
                        for (var s = 0; s < n.length; s++) {
                            var i = n[s];
                            try {
                                var o = e,
                                    r = t,
                                    l = r;
                                e: for (; null !== l;) {
                                    switch (l.tag) {
                                    case 5:
                                        dl = l.stateNode, ml = !1;
                                        break e;
                                    case 3:
                                    case 4:
                                        dl = l.stateNode.containerInfo, ml = !0;
                                        break e
                                    }
                                    l = l.return
                                }
                                if (null === dl) throw Error(a(160));
                                gl(o, r, i), dl = null, ml = !1;
                                var c = i.alternate;
                                null !== c && (c.return = null), i.return = null
                            } catch (e) {
                                jc(i, t, e)
                            }
                        }
                    if (12854 & t.subtreeFlags)
                        for (t = t.child; null !== t;) xl(t, e), t = t.sibling
                }

                function xl(e, t) {
                    var n = e.alternate,
                        s = e.flags;
                    switch (e.tag) {
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                        if (fl(t, e), vl(e), 4 & s) {
                            try {
                                sl(3, e, e.return), il(3, e)
                            } catch (t) {
                                jc(e, e.return, t)
                            }
                            try {
                                sl(5, e, e.return)
                            } catch (t) {
                                jc(e, e.return, t)
                            }
                        }
                        break;
                    case 1:
                        fl(t, e), vl(e), 512 & s && null !== n && el(n, n.return);
                        break;
                    case 5:
                        if (fl(t, e), vl(e), 512 & s && null !== n && el(n, n.return), 32 & e.flags) {
                            var i = e.stateNode;
                            try {
                                me(i, "")
                            } catch (t) {
                                jc(e, e.return, t)
                            }
                        }
                        if (4 & s && null != (i = e.stateNode)) {
                            var o = e.memoizedProps,
                                r = null !== n ? n.memoizedProps : o,
                                l = e.type,
                                c = e.updateQueue;
                            if (e.updateQueue = null, null !== c) try {
                                "input" === l && "radio" === o.type && null != o.name && Q(i, o), _e(l, r);
                                var u = _e(l, o);
                                for (r = 0; r < c.length; r += 2) {
                                    var d = c[r],
                                        m = c[r + 1];
                                    "style" === d ? fe(i, m) : "dangerouslySetInnerHTML" === d ? de(i, m) : "children" === d ? me(i, m) : _(i, d, m, u)
                                }
                                switch (l) {
                                case "input":
                                    Z(i, o);
                                    break;
                                case "textarea":
                                    ae(i, o);
                                    break;
                                case "select":
                                    var h = i._wrapperState.wasMultiple;
                                    i._wrapperState.wasMultiple = !!o.multiple;
                                    var g = o.value;
                                    null != g ? ne(i, !!o.multiple, g, !1) : h !== !!o.multiple && (null != o.defaultValue ? ne(i, !!o.multiple, o.defaultValue, !0) : ne(i, !!o.multiple, o.multiple ? [] : "", !1))
                                }
                                i[hi] = o
                            } catch (t) {
                                jc(e, e.return, t)
                            }
                        }
                        break;
                    case 6:
                        if (fl(t, e), vl(e), 4 & s) {
                            if (null === e.stateNode) throw Error(a(162));
                            i = e.stateNode, o = e.memoizedProps;
                            try {
                                i.nodeValue = o
                            } catch (t) {
                                jc(e, e.return, t)
                            }
                        }
                        break;
                    case 3:
                        if (fl(t, e), vl(e), 4 & s && null !== n && n.memoizedState.isDehydrated) try {
                            Vt(t.containerInfo)
                        } catch (t) {
                            jc(e, e.return, t)
                        }
                        break;
                    case 4:
                    default:
                        fl(t, e), vl(e);
                        break;
                    case 13:
                        fl(t, e), vl(e), 8192 & (i = e.child).flags && (o = null !== i.memoizedState, i.stateNode.isHidden = o, !o || null !== i.alternate && null !== i.alternate.memoizedState || (Vl = Qe())), 4 & s && pl(e);
                        break;
                    case 22:
                        if (d = null !== n && null !== n.memoizedState, 1 & e.mode ? (Qr = (u = Qr) || d, fl(t, e), Qr = u) : fl(t, e), vl(e), 8192 & s) {
                            if (u = null !== e.memoizedState, (e.stateNode.isHidden = u) && !d && 0 != (1 & e.mode))
                                for (Jr = e, d = e.child; null !== d;) {
                                    for (m = Jr = d; null !== Jr;) {
                                        switch (g = (h = Jr).child, h.tag) {
                                        case 0:
                                        case 11:
                                        case 14:
                                        case 15:
                                            sl(4, h, h.return);
                                            break;
                                        case 1:
                                            el(h, h.return);
                                            var p = h.stateNode;
                                            if ("function" == typeof p.componentWillUnmount) {
                                                s = h, n = h.return;
                                                try {
                                                    t = s, p.props = t.memoizedProps, p.state = t.memoizedState, p.componentWillUnmount()
                                                } catch (e) {
                                                    jc(s, n, e)
                                                }
                                            }
                                            break;
                                        case 5:
                                            el(h, h.return);
                                            break;
                                        case 22:
                                            if (null !== h.memoizedState) {
                                                El(m);
                                                continue
                                            }
                                        }
                                        null !== g ? (g.return = h, Jr = g) : El(m)
                                    }
                                    d = d.sibling
                                }
                            e: for (d = null, m = e;;) {
                                if (5 === m.tag) {
                                    if (null === d) {
                                        d = m;
                                        try {
                                            i = m.stateNode, u ? "function" == typeof (o = i.style).setProperty ? o.setProperty("display", "none", "important") : o.display = "none" : (l = m.stateNode, r = null != (c = m.memoizedProps.style) && c.hasOwnProperty("display") ? c.display : null, l.style.display = pe("display", r))
                                        } catch (t) {
                                            jc(e, e.return, t)
                                        }
                                    }
                                } else if (6 === m.tag) {
                                    if (null === d) try {
                                        m.stateNode.nodeValue = u ? "" : m.memoizedProps
                                    } catch (t) {
                                        jc(e, e.return, t)
                                    }
                                } else if ((22 !== m.tag && 23 !== m.tag || null === m.memoizedState || m === e) && null !== m.child) {
                                    m.child.return = m, m = m.child;
                                    continue
                                }
                                if (m === e) break e;
                                for (; null === m.sibling;) {
                                    if (null === m.return || m.return === e) break e;
                                    d === m && (d = null), m = m.return
                                }
                                d === m && (d = null), m.sibling.return = m.return, m = m.sibling
                            }
                        }
                        break;
                    case 19:
                        fl(t, e), vl(e), 4 & s && pl(e);
                    case 21:
                    }
                }

                function vl(e) {
                    var t = e.flags;
                    if (2 & t) {
                        try {
                            e: {
                                for (var n = e.return; null !== n;) {
                                    if (rl(n)) {
                                        var s = n;
                                        break e
                                    }
                                    n = n.return
                                }
                                throw Error(a(160))
                            }
                            switch (s.tag) {
                            case 5:
                                var i = s.stateNode;
                                32 & s.flags && (me(i, ""), s.flags &= -33), ul(e, ll(e), i);
                                break;
                            case 3:
                            case 4:
                                var o = s.stateNode.containerInfo;
                                cl(e, ll(e), o);
                                break;
                            default:
                                throw Error(a(161))
                            }
                        }
                        catch (t) {
                            jc(e, e.return, t)
                        }
                        e.flags &= -3
                    }
                    4096 & t && (e.flags &= -4097)
                }

                function _l(e, t, n) {
                    Jr = e, bl(e, t, n)
                }

                function bl(e, t, n) {
                    for (var s = 0 != (1 & e.mode); null !== Jr;) {
                        var i = Jr,
                            a = i.child;
                        if (22 === i.tag && s) {
                            var o = null !== i.memoizedState || Xr;
                            if (!o) {
                                var r = i.alternate,
                                    l = null !== r && null !== r.memoizedState || Qr;
                                r = Xr;
                                var c = Qr;
                                if (Xr = o, (Qr = l) && !c)
                                    for (Jr = i; null !== Jr;) l = (o = Jr).child, 22 === o.tag && null !== o.memoizedState ? Il(i) : null !== l ? (l.return = o, Jr = l) : Il(i);
                                for (; null !== a;) Jr = a, bl(a, t, n), a = a.sibling;
                                Jr = i, Xr = r, Qr = c
                            }
                            Tl(e)
                        } else 0 != (8772 & i.subtreeFlags) && null !== a ? (a.return = i, Jr = a) : Tl(e)
                    }
                }

                function Tl(e) {
                    for (; null !== Jr;) {
                        var t = Jr;
                        if (0 != (8772 & t.flags)) {
                            var n = t.alternate;
                            try {
                                if (0 != (8772 & t.flags)) switch (t.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    Qr || il(5, t);
                                    break;
                                case 1:
                                    var s = t.stateNode;
                                    if (4 & t.flags && !Qr)
                                        if (null === n) s.componentDidMount();
                                        else {
                                            var i = t.elementType === t.type ? n.memoizedProps : fa(t.type, n.memoizedProps);
                                            s.componentDidUpdate(i, n.memoizedState, s.__reactInternalSnapshotBeforeUpdate)
                                        } var o = t.updateQueue;
                                    null !== o && Fa(t, o, s);
                                    break;
                                case 3:
                                    var r = t.updateQueue;
                                    if (null !== r) {
                                        if (n = null, null !== t.child) switch (t.child.tag) {
                                        case 5:
                                        case 1:
                                            n = t.child.stateNode
                                        }
                                        Fa(t, r, n)
                                    }
                                    break;
                                case 5:
                                    var l = t.stateNode;
                                    if (null === n && 4 & t.flags) {
                                        n = l;
                                        var c = t.memoizedProps;
                                        switch (t.type) {
                                        case "button":
                                        case "input":
                                        case "select":
                                        case "textarea":
                                            c.autoFocus && n.focus();
                                            break;
                                        case "img":
                                            c.src && (n.src = c.src)
                                        }
                                    }
                                    break;
                                case 6:
                                case 4:
                                case 12:
                                case 19:
                                case 17:
                                case 21:
                                case 22:
                                case 23:
                                case 25:
                                    break;
                                case 13:
                                    if (null === t.memoizedState) {
                                        var u = t.alternate;
                                        if (null !== u) {
                                            var d = u.memoizedState;
                                            if (null !== d) {
                                                var m = d.dehydrated;
                                                null !== m && Vt(m)
                                            }
                                        }
                                    }
                                    break;
                                default:
                                    throw Error(a(163))
                                }
                                Qr || 512 & t.flags && al(t)
                            } catch (e) {
                                jc(t, t.return, e)
                            }
                        }
                        if (t === e) {
                            Jr = null;
                            break
                        }
                        if (null !== (n = t.sibling)) {
                            n.return = t.return, Jr = n;
                            break
                        }
                        Jr = t.return
                    }
                }

                function El(e) {
                    for (; null !== Jr;) {
                        var t = Jr;
                        if (t === e) {
                            Jr = null;
                            break
                        }
                        var n = t.sibling;
                        if (null !== n) {
                            n.return = t.return, Jr = n;
                            break
                        }
                        Jr = t.return
                    }
                }

                function Il(e) {
                    for (; null !== Jr;) {
                        var t = Jr;
                        try {
                            switch (t.tag) {
                            case 0:
                            case 11:
                            case 15:
                                var n = t.return;
                                try {
                                    il(4, t)
                                } catch (e) {
                                    jc(t, n, e)
                                }
                                break;
                            case 1:
                                var s = t.stateNode;
                                if ("function" == typeof s.componentDidMount) {
                                    var i = t.return;
                                    try {
                                        s.componentDidMount()
                                    } catch (e) {
                                        jc(t, i, e)
                                    }
                                }
                                var a = t.return;
                                try {
                                    al(t)
                                } catch (e) {
                                    jc(t, a, e)
                                }
                                break;
                            case 5:
                                var o = t.return;
                                try {
                                    al(t)
                                } catch (e) {
                                    jc(t, o, e)
                                }
                            }
                        } catch (e) {
                            jc(t, t.return, e)
                        }
                        if (t === e) {
                            Jr = null;
                            break
                        }
                        var r = t.sibling;
                        if (null !== r) {
                            r.return = t.return, Jr = r;
                            break
                        }
                        Jr = t.return
                    }
                }
                var yl, jl = Math.ceil,
                    Sl = b.ReactCurrentDispatcher,
                    Cl = b.ReactCurrentOwner,
                    Nl = b.ReactCurrentBatchConfig,
                    wl = 0,
                    Ol = null,
                    Pl = null,
                    Ll = 0,
                    Al = 0,
                    Ml = yi(0),
                    Rl = 0,
                    kl = null,
                    Dl = 0,
                    Fl = 0,
                    Ul = 0,
                    Bl = null,
                    Gl = null,
                    Vl = 0,
                    Hl = 1 / 0,
                    Kl = null,
                    Wl = !1,
                    zl = null,
                    Yl = null,
                    $l = !1,
                    ql = null,
                    Xl = 0,
                    Ql = 0,
                    Zl = null,
                    Jl = -1,
                    ec = 0;

                function tc() {
                    return 0 != (6 & wl) ? Qe() : -1 !== Jl ? Jl : Jl = Qe()
                }

                function nc(e) {
                    return 0 == (1 & e.mode) ? 1 : 0 != (2 & wl) && 0 !== Ll ? Ll & -Ll : null !== pa.transition ? (0 === ec && (ec = pt()), ec) : 0 !== (e = _t) ? e : e = void 0 === (e = window.event) ? 16 : Xt(e.type)
                }

                function sc(e, t, n, s) {
                    if (50 < Ql) throw Ql = 0, Zl = null, Error(a(185));
                    xt(e, n, s), 0 != (2 & wl) && e === Ol || (e === Ol && (0 == (2 & wl) && (Fl |= n), 4 === Rl && lc(e, Ll)), ic(e, s), 1 === n && 0 === wl && 0 == (1 & t.mode) && (Hl = Qe() + 500, Ui && Vi()))
                }

                function ic(e, t) {
                    var n = e.callbackNode;
                    ! function (e, t) {
                        for (var n = e.suspendedLanes, s = e.pingedLanes, i = e.expirationTimes, a = e.pendingLanes; 0 < a;) {
                            var o = 31 - ot(a),
                                r = 1 << o,
                                l = i[o]; - 1 === l ? 0 != (r & n) && 0 == (r & s) || (i[o] = ht(r, t)) : l <= t && (e.expiredLanes |= r), a &= ~r
                        }
                    }(e, t);
                    var s = mt(e, e === Ol ? Ll : 0);
                    if (0 === s) null !== n && $e(n), e.callbackNode = null, e.callbackPriority = 0;
                    else if (t = s & -s, e.callbackPriority !== t) {
                        if (null != n && $e(n), 1 === t) 0 === e.tag ? function (e) {
                            Ui = !0, Gi(e)
                        }(cc.bind(null, e)) : Gi(cc.bind(null, e)), oi((function () {
                            0 == (6 & wl) && Vi()
                        })), n = null;
                        else {
                            switch (bt(s)) {
                            case 1:
                                n = Je;
                                break;
                            case 4:
                                n = et;
                                break;
                            case 16:
                            default:
                                n = tt;
                                break;
                            case 536870912:
                                n = st
                            }
                            n = Oc(n, ac.bind(null, e))
                        }
                        e.callbackPriority = t, e.callbackNode = n
                    }
                }

                function ac(e, t) {
                    if (Jl = -1, ec = 0, 0 != (6 & wl)) throw Error(a(327));
                    var n = e.callbackNode;
                    if (Ic() && e.callbackNode !== n) return null;
                    var s = mt(e, e === Ol ? Ll : 0);
                    if (0 === s) return null;
                    if (0 != (30 & s) || 0 != (s & e.expiredLanes) || t) t = xc(e, s);
                    else {
                        t = s;
                        var i = wl;
                        wl |= 2;
                        var o = pc();
                        for (Ol === e && Ll === t || (Kl = null, Hl = Qe() + 500, hc(e, t));;) try {
                            _c();
                            break
                        } catch (t) {
                            gc(e, t)
                        }
                        Ta(), Sl.current = o, wl = i, null !== Pl ? t = 0 : (Ol = null, Ll = 0, t = Rl)
                    }
                    if (0 !== t) {
                        if (2 === t && (0 !== (i = gt(e)) && (s = i, t = oc(e, i))), 1 === t) throw n = kl, hc(e, 0), lc(e, s), ic(e, Qe()), n;
                        if (6 === t) lc(e, s);
                        else {
                            if (i = e.current.alternate, 0 == (30 & s) && ! function (e) {
                                    for (var t = e;;) {
                                        if (16384 & t.flags) {
                                            var n = t.updateQueue;
                                            if (null !== n && null !== (n = n.stores))
                                                for (var s = 0; s < n.length; s++) {
                                                    var i = n[s],
                                                        a = i.getSnapshot;
                                                    i = i.value;
                                                    try {
                                                        if (!rs(a(), i)) return !1
                                                    } catch (e) {
                                                        return !1
                                                    }
                                                }
                                        }
                                        if (n = t.child, 16384 & t.subtreeFlags && null !== n) n.return = t, t = n;
                                        else {
                                            if (t === e) break;
                                            for (; null === t.sibling;) {
                                                if (null === t.return || t.return === e) return !0;
                                                t = t.return
                                            }
                                            t.sibling.return = t.return, t = t.sibling
                                        }
                                    }
                                    return !0
                                }(i) && (2 === (t = xc(e, s)) && (0 !== (o = gt(e)) && (s = o, t = oc(e, o))), 1 === t)) throw n = kl, hc(e, 0), lc(e, s), ic(e, Qe()), n;
                            switch (e.finishedWork = i, e.finishedLanes = s, t) {
                            case 0:
                            case 1:
                                throw Error(a(345));
                            case 2:
                            case 5:
                                Ec(e, Gl, Kl);
                                break;
                            case 3:
                                if (lc(e, s), (130023424 & s) === s && 10 < (t = Vl + 500 - Qe())) {
                                    if (0 !== mt(e, 0)) break;
                                    if (((i = e.suspendedLanes) & s) !== s) {
                                        tc(), e.pingedLanes |= e.suspendedLanes & i;
                                        break
                                    }
                                    e.timeoutHandle = si(Ec.bind(null, e, Gl, Kl), t);
                                    break
                                }
                                Ec(e, Gl, Kl);
                                break;
                            case 4:
                                if (lc(e, s), (4194240 & s) === s) break;
                                for (t = e.eventTimes, i = -1; 0 < s;) {
                                    var r = 31 - ot(s);
                                    o = 1 << r, (r = t[r]) > i && (i = r), s &= ~o
                                }
                                if (s = i, 10 < (s = (120 > (s = Qe() - s) ? 120 : 480 > s ? 480 : 1080 > s ? 1080 : 1920 > s ? 1920 : 3e3 > s ? 3e3 : 4320 > s ? 4320 : 1960 * jl(s / 1960)) - s)) {
                                    e.timeoutHandle = si(Ec.bind(null, e, Gl, Kl), s);
                                    break
                                }
                                Ec(e, Gl, Kl);
                                break;
                            default:
                                throw Error(a(329))
                            }
                        }
                    }
                    return ic(e, Qe()), e.callbackNode === n ? ac.bind(null, e) : null
                }

                function oc(e, t) {
                    var n = Bl;
                    return e.current.memoizedState.isDehydrated && (hc(e, t).flags |= 256), 2 !== (e = xc(e, t)) && (t = Gl, Gl = n, null !== t && rc(t)), e
                }

                function rc(e) {
                    null === Gl ? Gl = e : Gl.push.apply(Gl, e)
                }

                function lc(e, t) {
                    for (t &= ~Ul, t &= ~Fl, e.suspendedLanes |= t, e.pingedLanes &= ~t, e = e.expirationTimes; 0 < t;) {
                        var n = 31 - ot(t),
                            s = 1 << n;
                        e[n] = -1, t &= ~s
                    }
                }

                function cc(e) {
                    if (0 != (6 & wl)) throw Error(a(327));
                    Ic();
                    var t = mt(e, 0);
                    if (0 == (1 & t)) return ic(e, Qe()), null;
                    var n = xc(e, t);
                    if (0 !== e.tag && 2 === n) {
                        var s = gt(e);
                        0 !== s && (t = s, n = oc(e, s))
                    }
                    if (1 === n) throw n = kl, hc(e, 0), lc(e, t), ic(e, Qe()), n;
                    if (6 === n) throw Error(a(345));
                    return e.finishedWork = e.current.alternate, e.finishedLanes = t, Ec(e, Gl, Kl), ic(e, Qe()), null
                }

                function uc(e, t) {
                    var n = wl;
                    wl |= 1;
                    try {
                        return e(t)
                    } finally {
                        0 === (wl = n) && (Hl = Qe() + 500, Ui && Vi())
                    }
                }

                function dc(e) {
                    null !== ql && 0 === ql.tag && 0 == (6 & wl) && Ic();
                    var t = wl;
                    wl |= 1;
                    var n = Nl.transition,
                        s = _t;
                    try {
                        if (Nl.transition = null, _t = 1, e) return e()
                    } finally {
                        _t = s, Nl.transition = n, 0 == (6 & (wl = t)) && Vi()
                    }
                }

                function mc() {
                    Al = Ml.current, ji(Ml)
                }

                function hc(e, t) {
                    e.finishedWork = null, e.finishedLanes = 0;
                    var n = e.timeoutHandle;
                    if (-1 !== n && (e.timeoutHandle = -1, ii(n)), null !== Pl)
                        for (n = Pl.return; null !== n;) {
                            var s = n;
                            switch (ta(s), s.tag) {
                            case 1:
                                null != (s = s.type.childContextTypes) && Ai();
                                break;
                            case 3:
                                io(), ji(wi), ji(Ni), uo();
                                break;
                            case 5:
                                oo(s);
                                break;
                            case 4:
                                io();
                                break;
                            case 13:
                            case 19:
                                ji(ro);
                                break;
                            case 10:
                                Ea(s.type._context);
                                break;
                            case 22:
                            case 23:
                                mc()
                            }
                            n = n.return
                        }
                    if (Ol = e, Pl = e = Mc(e.current, null), Ll = Al = t, Rl = 0, kl = null, Ul = Fl = Dl = 0, Gl = Bl = null, null !== Sa) {
                        for (t = 0; t < Sa.length; t++)
                            if (null !== (s = (n = Sa[t]).interleaved)) {
                                n.interleaved = null;
                                var i = s.next,
                                    a = n.pending;
                                if (null !== a) {
                                    var o = a.next;
                                    a.next = i, s.next = o
                                }
                                n.pending = s
                            } Sa = null
                    }
                    return e
                }

                function gc(e, t) {
                    for (;;) {
                        var n = Pl;
                        try {
                            if (Ta(), mo.current = or, vo) {
                                for (var s = po.memoizedState; null !== s;) {
                                    var i = s.queue;
                                    null !== i && (i.pending = null), s = s.next
                                }
                                vo = !1
                            }
                            if (go = 0, xo = fo = po = null, _o = !1, bo = 0, Cl.current = null, null === n || null === n.return) {
                                Rl = 1, kl = t, Pl = null;
                                break
                            }
                            e: {
                                var o = e,
                                    r = n.return,
                                    l = n,
                                    c = t;
                                if (t = Ll, l.flags |= 32768, null !== c && "object" == typeof c && "function" == typeof c.then) {
                                    var u = c,
                                        d = l,
                                        m = d.tag;
                                    if (0 == (1 & d.mode) && (0 === m || 11 === m || 15 === m)) {
                                        var h = d.alternate;
                                        h ? (d.updateQueue = h.updateQueue, d.memoizedState = h.memoizedState, d.lanes = h.lanes) : (d.updateQueue = null, d.memoizedState = null)
                                    }
                                    var g = xr(r);
                                    if (null !== g) {
                                        g.flags &= -257, vr(g, r, l, 0, t), 1 & g.mode && fr(o, u, t), c = u;
                                        var p = (t = g).updateQueue;
                                        if (null === p) {
                                            var f = new Set;
                                            f.add(c), t.updateQueue = f
                                        } else p.add(c);
                                        break e
                                    }
                                    if (0 == (1 & t)) {
                                        fr(o, u, t), fc();
                                        break e
                                    }
                                    c = Error(a(426))
                                } else if (ia && 1 & l.mode) {
                                    var x = xr(r);
                                    if (null !== x) {
                                        0 == (65536 & x.flags) && (x.flags |= 256), vr(x, r, l, 0, t), ga(ur(c, l));
                                        break e
                                    }
                                }
                                o = c = ur(c, l),
                                4 !== Rl && (Rl = 2),
                                null === Bl ? Bl = [o] : Bl.push(o),
                                o = r;do {
                                    switch (o.tag) {
                                    case 3:
                                        o.flags |= 65536, t &= -t, o.lanes |= t, ka(o, gr(0, c, t));
                                        break e;
                                    case 1:
                                        l = c;
                                        var v = o.type,
                                            _ = o.stateNode;
                                        if (0 == (128 & o.flags) && ("function" == typeof v.getDerivedStateFromError || null !== _ && "function" == typeof _.componentDidCatch && (null === Yl || !Yl.has(_)))) {
                                            o.flags |= 65536, t &= -t, o.lanes |= t, ka(o, pr(o, l, t));
                                            break e
                                        }
                                    }
                                    o = o.return
                                } while (null !== o)
                            }
                            Tc(n)
                        } catch (e) {
                            t = e, Pl === n && null !== n && (Pl = n = n.return);
                            continue
                        }
                        break
                    }
                }

                function pc() {
                    var e = Sl.current;
                    return Sl.current = or, null === e ? or : e
                }

                function fc() {
                    0 !== Rl && 3 !== Rl && 2 !== Rl || (Rl = 4), null === Ol || 0 == (268435455 & Dl) && 0 == (268435455 & Fl) || lc(Ol, Ll)
                }

                function xc(e, t) {
                    var n = wl;
                    wl |= 2;
                    var s = pc();
                    for (Ol === e && Ll === t || (Kl = null, hc(e, t));;) try {
                        vc();
                        break
                    } catch (t) {
                        gc(e, t)
                    }
                    if (Ta(), wl = n, Sl.current = s, null !== Pl) throw Error(a(261));
                    return Ol = null, Ll = 0, Rl
                }

                function vc() {
                    for (; null !== Pl;) bc(Pl)
                }

                function _c() {
                    for (; null !== Pl && !qe();) bc(Pl)
                }

                function bc(e) {
                    var t = yl(e.alternate, e, Al);
                    e.memoizedProps = e.pendingProps, null === t ? Tc(e) : Pl = t, Cl.current = null
                }

                function Tc(e) {
                    var t = e;
                    do {
                        var n = t.alternate;
                        if (e = t.return, 0 == (32768 & t.flags)) {
                            if (null !== (n = $r(n, t, Al))) return void(Pl = n)
                        } else {
                            if (null !== (n = qr(n, t))) return n.flags &= 32767, void(Pl = n);
                            if (null === e) return Rl = 6, void(Pl = null);
                            e.flags |= 32768, e.subtreeFlags = 0, e.deletions = null
                        }
                        if (null !== (t = t.sibling)) return void(Pl = t);
                        Pl = t = e
                    } while (null !== t);
                    0 === Rl && (Rl = 5)
                }

                function Ec(e, t, n) {
                    var s = _t,
                        i = Nl.transition;
                    try {
                        Nl.transition = null, _t = 1,
                            function (e, t, n, s) {
                                do {
                                    Ic()
                                } while (null !== ql);
                                if (0 != (6 & wl)) throw Error(a(327));
                                n = e.finishedWork;
                                var i = e.finishedLanes;
                                if (null === n) return null;
                                if (e.finishedWork = null, e.finishedLanes = 0, n === e.current) throw Error(a(177));
                                e.callbackNode = null, e.callbackPriority = 0;
                                var o = n.lanes | n.childLanes;
                                if (function (e, t) {
                                        var n = e.pendingLanes & ~t;
                                        e.pendingLanes = t, e.suspendedLanes = 0, e.pingedLanes = 0, e.expiredLanes &= t, e.mutableReadLanes &= t, e.entangledLanes &= t, t = e.entanglements;
                                        var s = e.eventTimes;
                                        for (e = e.expirationTimes; 0 < n;) {
                                            var i = 31 - ot(n),
                                                a = 1 << i;
                                            t[i] = 0, s[i] = -1, e[i] = -1, n &= ~a
                                        }
                                    }(e, o), e === Ol && (Pl = Ol = null, Ll = 0), 0 == (2064 & n.subtreeFlags) && 0 == (2064 & n.flags) || $l || ($l = !0, Oc(tt, (function () {
                                        return Ic(), null
                                    }))), o = 0 != (15990 & n.flags), 0 != (15990 & n.subtreeFlags) || o) {
                                    o = Nl.transition, Nl.transition = null;
                                    var r = _t;
                                    _t = 1;
                                    var l = wl;
                                    wl |= 4, Cl.current = null,
                                        function (e, t) {
                                            if (ei = Kt, hs(e = ms())) {
                                                if ("selectionStart" in e) var n = {
                                                    start: e.selectionStart,
                                                    end: e.selectionEnd
                                                };
                                                else e: {
                                                    var s = (n = (n = e.ownerDocument) && n.defaultView || window).getSelection && n.getSelection();
                                                    if (s && 0 !== s.rangeCount) {
                                                        n = s.anchorNode;
                                                        var i = s.anchorOffset,
                                                            o = s.focusNode;
                                                        s = s.focusOffset;
                                                        try {
                                                            n.nodeType, o.nodeType
                                                        } catch (e) {
                                                            n = null;
                                                            break e
                                                        }
                                                        var r = 0,
                                                            l = -1,
                                                            c = -1,
                                                            u = 0,
                                                            d = 0,
                                                            m = e,
                                                            h = null;
                                                        t: for (;;) {
                                                            for (var g; m !== n || 0 !== i && 3 !== m.nodeType || (l = r + i), m !== o || 0 !== s && 3 !== m.nodeType || (c = r + s), 3 === m.nodeType && (r += m.nodeValue.length), null !== (g = m.firstChild);) h = m, m = g;
                                                            for (;;) {
                                                                if (m === e) break t;
                                                                if (h === n && ++u === i && (l = r), h === o && ++d === s && (c = r), null !== (g = m.nextSibling)) break;
                                                                h = (m = h).parentNode
                                                            }
                                                            m = g
                                                        }
                                                        n = -1 === l || -1 === c ? null : {
                                                            start: l,
                                                            end: c
                                                        }
                                                    } else n = null
                                                }
                                                n = n || {
                                                    start: 0,
                                                    end: 0
                                                }
                                            } else n = null;
                                            for (ti = {
                                                    focusedElem: e,
                                                    selectionRange: n
                                                }, Kt = !1, Jr = t; null !== Jr;)
                                                if (e = (t = Jr).child, 0 != (1028 & t.subtreeFlags) && null !== e) e.return = t, Jr = e;
                                                else
                                                    for (; null !== Jr;) {
                                                        t = Jr;
                                                        try {
                                                            var p = t.alternate;
                                                            if (0 != (1024 & t.flags)) switch (t.tag) {
                                                            case 0:
                                                            case 11:
                                                            case 15:
                                                            case 5:
                                                            case 6:
                                                            case 4:
                                                            case 17:
                                                                break;
                                                            case 1:
                                                                if (null !== p) {
                                                                    var f = p.memoizedProps,
                                                                        x = p.memoizedState,
                                                                        v = t.stateNode,
                                                                        _ = v.getSnapshotBeforeUpdate(t.elementType === t.type ? f : fa(t.type, f), x);
                                                                    v.__reactInternalSnapshotBeforeUpdate = _
                                                                }
                                                                break;
                                                            case 3:
                                                                var b = t.stateNode.containerInfo;
                                                                1 === b.nodeType ? b.textContent = "" : 9 === b.nodeType && b.documentElement && b.removeChild(b.documentElement);
                                                                break;
                                                            default:
                                                                throw Error(a(163))
                                                            }
                                                        } catch (e) {
                                                            jc(t, t.return, e)
                                                        }
                                                        if (null !== (e = t.sibling)) {
                                                            e.return = t.return, Jr = e;
                                                            break
                                                        }
                                                        Jr = t.return
                                                    }
                                            p = nl, nl = !1
                                        }(e, n), xl(n, e), gs(ti), Kt = !!ei, ti = ei = null, e.current = n, _l(n, e, i), Xe(), wl = l, _t = r, Nl.transition = o
                                } else e.current = n;
                                if ($l && ($l = !1, ql = e, Xl = i), o = e.pendingLanes, 0 === o && (Yl = null), function (e) {
                                        if (at && "function" == typeof at.onCommitFiberRoot) try {
                                            at.onCommitFiberRoot(it, e, void 0, 128 == (128 & e.current.flags))
                                        } catch (e) {}
                                    }(n.stateNode), ic(e, Qe()), null !== t)
                                    for (s = e.onRecoverableError, n = 0; n < t.length; n++) i = t[n], s(i.value, {
                                        componentStack: i.stack,
                                        digest: i.digest
                                    });
                                if (Wl) throw Wl = !1, e = zl, zl = null, e;
                                0 != (1 & Xl) && 0 !== e.tag && Ic(), o = e.pendingLanes, 0 != (1 & o) ? e === Zl ? Ql++ : (Ql = 0, Zl = e) : Ql = 0, Vi()
                            }(e, t, n, s)
                    } finally {
                        Nl.transition = i, _t = s
                    }
                    return null
                }

                function Ic() {
                    if (null !== ql) {
                        var e = bt(Xl),
                            t = Nl.transition,
                            n = _t;
                        try {
                            if (Nl.transition = null, _t = 16 > e ? 16 : e, null === ql) var s = !1;
                            else {
                                if (e = ql, ql = null, Xl = 0, 0 != (6 & wl)) throw Error(a(331));
                                var i = wl;
                                for (wl |= 4, Jr = e.current; null !== Jr;) {
                                    var o = Jr,
                                        r = o.child;
                                    if (0 != (16 & Jr.flags)) {
                                        var l = o.deletions;
                                        if (null !== l) {
                                            for (var c = 0; c < l.length; c++) {
                                                var u = l[c];
                                                for (Jr = u; null !== Jr;) {
                                                    var d = Jr;
                                                    switch (d.tag) {
                                                    case 0:
                                                    case 11:
                                                    case 15:
                                                        sl(8, d, o)
                                                    }
                                                    var m = d.child;
                                                    if (null !== m) m.return = d, Jr = m;
                                                    else
                                                        for (; null !== Jr;) {
                                                            var h = (d = Jr).sibling,
                                                                g = d.return;
                                                            if (ol(d), d === u) {
                                                                Jr = null;
                                                                break
                                                            }
                                                            if (null !== h) {
                                                                h.return = g, Jr = h;
                                                                break
                                                            }
                                                            Jr = g
                                                        }
                                                }
                                            }
                                            var p = o.alternate;
                                            if (null !== p) {
                                                var f = p.child;
                                                if (null !== f) {
                                                    p.child = null;
                                                    do {
                                                        var x = f.sibling;
                                                        f.sibling = null, f = x
                                                    } while (null !== f)
                                                }
                                            }
                                            Jr = o
                                        }
                                    }
                                    if (0 != (2064 & o.subtreeFlags) && null !== r) r.return = o, Jr = r;
                                    else e: for (; null !== Jr;) {
                                        if (0 != (2048 & (o = Jr).flags)) switch (o.tag) {
                                        case 0:
                                        case 11:
                                        case 15:
                                            sl(9, o, o.return)
                                        }
                                        var v = o.sibling;
                                        if (null !== v) {
                                            v.return = o.return, Jr = v;
                                            break e
                                        }
                                        Jr = o.return
                                    }
                                }
                                var _ = e.current;
                                for (Jr = _; null !== Jr;) {
                                    var b = (r = Jr).child;
                                    if (0 != (2064 & r.subtreeFlags) && null !== b) b.return = r, Jr = b;
                                    else e: for (r = _; null !== Jr;) {
                                        if (0 != (2048 & (l = Jr).flags)) try {
                                            switch (l.tag) {
                                            case 0:
                                            case 11:
                                            case 15:
                                                il(9, l)
                                            }
                                        } catch (e) {
                                            jc(l, l.return, e)
                                        }
                                        if (l === r) {
                                            Jr = null;
                                            break e
                                        }
                                        var T = l.sibling;
                                        if (null !== T) {
                                            T.return = l.return, Jr = T;
                                            break e
                                        }
                                        Jr = l.return
                                    }
                                }
                                if (wl = i, Vi(), at && "function" == typeof at.onPostCommitFiberRoot) try {
                                    at.onPostCommitFiberRoot(it, e)
                                } catch (e) {}
                                s = !0
                            }
                            return s
                        } finally {
                            _t = n, Nl.transition = t
                        }
                    }
                    return !1
                }

                function yc(e, t, n) {
                    e = Ma(e, t = gr(0, t = ur(n, t), 1), 1), t = tc(), null !== e && (xt(e, 1, t), ic(e, t))
                }

                function jc(e, t, n) {
                    if (3 === e.tag) yc(e, e, n);
                    else
                        for (; null !== t;) {
                            if (3 === t.tag) {
                                yc(t, e, n);
                                break
                            }
                            if (1 === t.tag) {
                                var s = t.stateNode;
                                if ("function" == typeof t.type.getDerivedStateFromError || "function" == typeof s.componentDidCatch && (null === Yl || !Yl.has(s))) {
                                    t = Ma(t, e = pr(t, e = ur(n, e), 1), 1), e = tc(), null !== t && (xt(t, 1, e), ic(t, e));
                                    break
                                }
                            }
                            t = t.return
                        }
                }

                function Sc(e, t, n) {
                    var s = e.pingCache;
                    null !== s && s.delete(t), t = tc(), e.pingedLanes |= e.suspendedLanes & n, Ol === e && (Ll & n) === n && (4 === Rl || 3 === Rl && (130023424 & Ll) === Ll && 500 > Qe() - Vl ? hc(e, 0) : Ul |= n), ic(e, t)
                }

                function Cc(e, t) {
                    0 === t && (0 == (1 & e.mode) ? t = 1 : (t = ut, 0 == (130023424 & (ut <<= 1)) && (ut = 4194304)));
                    var n = tc();
                    null !== (e = wa(e, t)) && (xt(e, t, n), ic(e, n))
                }

                function Nc(e) {
                    var t = e.memoizedState,
                        n = 0;
                    null !== t && (n = t.retryLane), Cc(e, n)
                }

                function wc(e, t) {
                    var n = 0;
                    switch (e.tag) {
                    case 13:
                        var s = e.stateNode,
                            i = e.memoizedState;
                        null !== i && (n = i.retryLane);
                        break;
                    case 19:
                        s = e.stateNode;
                        break;
                    default:
                        throw Error(a(314))
                    }
                    null !== s && s.delete(t), Cc(e, n)
                }

                function Oc(e, t) {
                    return Ye(e, t)
                }

                function Pc(e, t, n, s) {
                    this.tag = e, this.key = n, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = t, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = s, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null
                }

                function Lc(e, t, n, s) {
                    return new Pc(e, t, n, s)
                }

                function Ac(e) {
                    return !(!(e = e.prototype) || !e.isReactComponent)
                }

                function Mc(e, t) {
                    var n = e.alternate;
                    return null === n ? ((n = Lc(e.tag, t, e.key, e.mode)).elementType = e.elementType, n.type = e.type, n.stateNode = e.stateNode, n.alternate = e, e.alternate = n) : (n.pendingProps = t, n.type = e.type, n.flags = 0, n.subtreeFlags = 0, n.deletions = null), n.flags = 14680064 & e.flags, n.childLanes = e.childLanes, n.lanes = e.lanes, n.child = e.child, n.memoizedProps = e.memoizedProps, n.memoizedState = e.memoizedState, n.updateQueue = e.updateQueue, t = e.dependencies, n.dependencies = null === t ? null : {
                        lanes: t.lanes,
                        firstContext: t.firstContext
                    }, n.sibling = e.sibling, n.index = e.index, n.ref = e.ref, n
                }

                function Rc(e, t, n, s, i, o) {
                    var r = 2;
                    if (s = e, "function" == typeof e) Ac(e) && (r = 1);
                    else if ("string" == typeof e) r = 5;
                    else e: switch (e) {
                    case I:
                        return kc(n.children, i, o, t);
                    case y:
                        r = 8, i |= 8;
                        break;
                    case j:
                        return (e = Lc(12, n, t, 2 | i)).elementType = j, e.lanes = o, e;
                    case w:
                        return (e = Lc(13, n, t, i)).elementType = w, e.lanes = o, e;
                    case O:
                        return (e = Lc(19, n, t, i)).elementType = O, e.lanes = o, e;
                    case A:
                        return Dc(n, i, o, t);
                    default:
                        if ("object" == typeof e && null !== e) switch (e.$$typeof) {
                        case S:
                            r = 10;
                            break e;
                        case C:
                            r = 9;
                            break e;
                        case N:
                            r = 11;
                            break e;
                        case P:
                            r = 14;
                            break e;
                        case L:
                            r = 16, s = null;
                            break e
                        }
                        throw Error(a(130, null == e ? e : typeof e, ""))
                    }
                    return (t = Lc(r, n, t, i)).elementType = e, t.type = s, t.lanes = o, t
                }

                function kc(e, t, n, s) {
                    return (e = Lc(7, e, s, t)).lanes = n, e
                }

                function Dc(e, t, n, s) {
                    return (e = Lc(22, e, s, t)).elementType = A, e.lanes = n, e.stateNode = {
                        isHidden: !1
                    }, e
                }

                function Fc(e, t, n) {
                    return (e = Lc(6, e, null, t)).lanes = n, e
                }

                function Uc(e, t, n) {
                    return (t = Lc(4, null !== e.children ? e.children : [], e.key, t)).lanes = n, t.stateNode = {
                        containerInfo: e.containerInfo,
                        pendingChildren: null,
                        implementation: e.implementation
                    }, t
                }

                function Bc(e, t, n, s, i) {
                    this.tag = t, this.containerInfo = e, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = ft(0), this.expirationTimes = ft(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = ft(0), this.identifierPrefix = s, this.onRecoverableError = i, this.mutableSourceEagerHydrationData = null
                }

                function Gc(e, t, n, s, i, a, o, r, l) {
                    return e = new Bc(e, t, n, r, l), 1 === t ? (t = 1, !0 === a && (t |= 8)) : t = 0, a = Lc(3, null, null, t), e.current = a, a.stateNode = e, a.memoizedState = {
                        element: s,
                        isDehydrated: n,
                        cache: null,
                        transitions: null,
                        pendingSuspenseBoundaries: null
                    }, Pa(a), e
                }

                function Vc(e) {
                    if (!e) return Ci;
                    e: {
                        if (Ve(e = e._reactInternals) !== e || 1 !== e.tag) throw Error(a(170));
                        var t = e;do {
                            switch (t.tag) {
                            case 3:
                                t = t.stateNode.context;
                                break e;
                            case 1:
                                if (Li(t.type)) {
                                    t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                                    break e
                                }
                            }
                            t = t.return
                        } while (null !== t);
                        throw Error(a(171))
                    }
                    if (1 === e.tag) {
                        var n = e.type;
                        if (Li(n)) return Ri(e, n, t)
                    }
                    return t
                }

                function Hc(e, t, n, s, i, a, o, r, l) {
                    return (e = Gc(n, s, !0, e, 0, a, 0, r, l)).context = Vc(null), n = e.current, (a = Aa(s = tc(), i = nc(n))).callback = null != t ? t : null, Ma(n, a, i), e.current.lanes = i, xt(e, i, s), ic(e, s), e
                }

                function Kc(e, t, n, s) {
                    var i = t.current,
                        a = tc(),
                        o = nc(i);
                    return n = Vc(n), null === t.context ? t.context = n : t.pendingContext = n, (t = Aa(a, o)).payload = {
                        element: e
                    }, null !== (s = void 0 === s ? null : s) && (t.callback = s), null !== (e = Ma(i, t, o)) && (sc(e, i, o, a), Ra(e, i, o)), o
                }

                function Wc(e) {
                    return (e = e.current).child ? (e.child.tag, e.child.stateNode) : null
                }

                function zc(e, t) {
                    if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
                        var n = e.retryLane;
                        e.retryLane = 0 !== n && n < t ? n : t
                    }
                }

                function Yc(e, t) {
                    zc(e, t), (e = e.alternate) && zc(e, t)
                }
                yl = function (e, t, n) {
                    if (null !== e)
                        if (e.memoizedProps !== t.pendingProps || wi.current) br = !0;
                        else {
                            if (0 == (e.lanes & n) && 0 == (128 & t.flags)) return br = !1,
                                function (e, t, n) {
                                    switch (t.tag) {
                                    case 3:
                                        Or(t), ha();
                                        break;
                                    case 5:
                                        ao(t);
                                        break;
                                    case 1:
                                        Li(t.type) && ki(t);
                                        break;
                                    case 4:
                                        so(t, t.stateNode.containerInfo);
                                        break;
                                    case 10:
                                        var s = t.type._context,
                                            i = t.memoizedProps.value;
                                        Si(xa, s._currentValue), s._currentValue = i;
                                        break;
                                    case 13:
                                        if (null !== (s = t.memoizedState)) return null !== s.dehydrated ? (Si(ro, 1 & ro.current), t.flags |= 128, null) : 0 != (n & t.child.childLanes) ? Fr(e, t, n) : (Si(ro, 1 & ro.current), null !== (e = Wr(e, t, n)) ? e.sibling : null);
                                        Si(ro, 1 & ro.current);
                                        break;
                                    case 19:
                                        if (s = 0 != (n & t.childLanes), 0 != (128 & e.flags)) {
                                            if (s) return Hr(e, t, n);
                                            t.flags |= 128
                                        }
                                        if (null !== (i = t.memoizedState) && (i.rendering = null, i.tail = null, i.lastEffect = null), Si(ro, ro.current), s) break;
                                        return null;
                                    case 22:
                                    case 23:
                                        return t.lanes = 0, jr(e, t, n)
                                    }
                                    return Wr(e, t, n)
                                }(e, t, n);
                            br = 0 != (131072 & e.flags)
                        }
                    else br = !1, ia && 0 != (1048576 & t.flags) && Ji(t, zi, t.index);
                    switch (t.lanes = 0, t.tag) {
                    case 2:
                        var s = t.type;
                        Kr(e, t), e = t.pendingProps;
                        var i = Pi(t, Ni.current);
                        ya(t, n), i = yo(null, t, s, e, i, n);
                        var o = jo();
                        return t.flags |= 1, "object" == typeof i && null !== i && "function" == typeof i.render && void 0 === i.$$typeof ? (t.tag = 1, t.memoizedState = null, t.updateQueue = null, Li(s) ? (o = !0, ki(t)) : o = !1, t.memoizedState = null !== i.state && void 0 !== i.state ? i.state : null, Pa(t), i.updater = Ga, t.stateNode = i, i._reactInternals = t, Wa(t, s, e, n), t = wr(null, t, s, !0, o, n)) : (t.tag = 0, ia && o && ea(t), Tr(null, t, i, n), t = t.child), t;
                    case 16:
                        s = t.elementType;
                        e: {
                            switch (Kr(e, t), e = t.pendingProps, s = (i = s._init)(s._payload), t.type = s, i = t.tag = function (e) {
                                if ("function" == typeof e) return Ac(e) ? 1 : 0;
                                if (null != e) {
                                    if ((e = e.$$typeof) === N) return 11;
                                    if (e === P) return 14
                                }
                                return 2
                            }(s), e = fa(s, e), i) {
                            case 0:
                                t = Cr(null, t, s, e, n);
                                break e;
                            case 1:
                                t = Nr(null, t, s, e, n);
                                break e;
                            case 11:
                                t = Er(null, t, s, e, n);
                                break e;
                            case 14:
                                t = Ir(null, t, s, fa(s.type, e), n);
                                break e
                            }
                            throw Error(a(306, s, ""))
                        }
                        return t;
                    case 0:
                        return s = t.type, i = t.pendingProps, Cr(e, t, s, i = t.elementType === s ? i : fa(s, i), n);
                    case 1:
                        return s = t.type, i = t.pendingProps, Nr(e, t, s, i = t.elementType === s ? i : fa(s, i), n);
                    case 3:
                        e: {
                            if (Or(t), null === e) throw Error(a(387));s = t.pendingProps,
                            i = (o = t.memoizedState).element,
                            La(e, t),
                            Da(t, s, null, n);
                            var r = t.memoizedState;
                            if (s = r.element, o.isDehydrated) {
                                if (o = {
                                        element: s,
                                        isDehydrated: !1,
                                        cache: r.cache,
                                        pendingSuspenseBoundaries: r.pendingSuspenseBoundaries,
                                        transitions: r.transitions
                                    }, t.updateQueue.baseState = o, t.memoizedState = o, 256 & t.flags) {
                                    t = Pr(e, t, s, n, i = ur(Error(a(423)), t));
                                    break e
                                }
                                if (s !== i) {
                                    t = Pr(e, t, s, n, i = ur(Error(a(424)), t));
                                    break e
                                }
                                for (sa = ci(t.stateNode.containerInfo.firstChild), na = t, ia = !0, aa = null, n = Qa(t, null, s, n), t.child = n; n;) n.flags = -3 & n.flags | 4096, n = n.sibling
                            } else {
                                if (ha(), s === i) {
                                    t = Wr(e, t, n);
                                    break e
                                }
                                Tr(e, t, s, n)
                            }
                            t = t.child
                        }
                        return t;
                    case 5:
                        return ao(t), null === e && ca(t), s = t.type, i = t.pendingProps, o = null !== e ? e.memoizedProps : null, r = i.children, ni(s, i) ? r = null : null !== o && ni(s, o) && (t.flags |= 32), Sr(e, t), Tr(e, t, r, n), t.child;
                    case 6:
                        return null === e && ca(t), null;
                    case 13:
                        return Fr(e, t, n);
                    case 4:
                        return so(t, t.stateNode.containerInfo), s = t.pendingProps, null === e ? t.child = Xa(t, null, s, n) : Tr(e, t, s, n), t.child;
                    case 11:
                        return s = t.type, i = t.pendingProps, Er(e, t, s, i = t.elementType === s ? i : fa(s, i), n);
                    case 7:
                        return Tr(e, t, t.pendingProps, n), t.child;
                    case 8:
                    case 12:
                        return Tr(e, t, t.pendingProps.children, n), t.child;
                    case 10:
                        e: {
                            if (s = t.type._context, i = t.pendingProps, o = t.memoizedProps, r = i.value, Si(xa, s._currentValue), s._currentValue = r, null !== o)
                                if (rs(o.value, r)) {
                                    if (o.children === i.children && !wi.current) {
                                        t = Wr(e, t, n);
                                        break e
                                    }
                                } else
                                    for (null !== (o = t.child) && (o.return = t); null !== o;) {
                                        var l = o.dependencies;
                                        if (null !== l) {
                                            r = o.child;
                                            for (var c = l.firstContext; null !== c;) {
                                                if (c.context === s) {
                                                    if (1 === o.tag) {
                                                        (c = Aa(-1, n & -n)).tag = 2;
                                                        var u = o.updateQueue;
                                                        if (null !== u) {
                                                            var d = (u = u.shared).pending;
                                                            null === d ? c.next = c : (c.next = d.next, d.next = c), u.pending = c
                                                        }
                                                    }
                                                    o.lanes |= n, null !== (c = o.alternate) && (c.lanes |= n), Ia(o.return, n, t), l.lanes |= n;
                                                    break
                                                }
                                                c = c.next
                                            }
                                        } else if (10 === o.tag) r = o.type === t.type ? null : o.child;
                                        else if (18 === o.tag) {
                                            if (null === (r = o.return)) throw Error(a(341));
                                            r.lanes |= n, null !== (l = r.alternate) && (l.lanes |= n), Ia(r, n, t), r = o.sibling
                                        } else r = o.child;
                                        if (null !== r) r.return = o;
                                        else
                                            for (r = o; null !== r;) {
                                                if (r === t) {
                                                    r = null;
                                                    break
                                                }
                                                if (null !== (o = r.sibling)) {
                                                    o.return = r.return, r = o;
                                                    break
                                                }
                                                r = r.return
                                            }
                                        o = r
                                    }
                            Tr(e, t, i.children, n),
                            t = t.child
                        }
                        return t;
                    case 9:
                        return i = t.type, s = t.pendingProps.children, ya(t, n), s = s(i = ja(i)), t.flags |= 1, Tr(e, t, s, n), t.child;
                    case 14:
                        return i = fa(s = t.type, t.pendingProps), Ir(e, t, s, i = fa(s.type, i), n);
                    case 15:
                        return yr(e, t, t.type, t.pendingProps, n);
                    case 17:
                        return s = t.type, i = t.pendingProps, i = t.elementType === s ? i : fa(s, i), Kr(e, t), t.tag = 1, Li(s) ? (e = !0, ki(t)) : e = !1, ya(t, n), Ha(t, s, i), Wa(t, s, i, n), wr(null, t, s, !0, e, n);
                    case 19:
                        return Hr(e, t, n);
                    case 22:
                        return jr(e, t, n)
                    }
                    throw Error(a(156, t.tag))
                };
                var $c = "function" == typeof reportError ? reportError : function (e) {
                    console.error(e)
                };

                function qc(e) {
                    this._internalRoot = e
                }

                function Xc(e) {
                    this._internalRoot = e
                }

                function Qc(e) {
                    return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType)
                }

                function Zc(e) {
                    return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType && (8 !== e.nodeType || " react-mount-point-unstable " !== e.nodeValue))
                }

                function Jc() {}

                function eu(e, t, n, s, i) {
                    var a = n._reactRootContainer;
                    if (a) {
                        var o = a;
                        if ("function" == typeof i) {
                            var r = i;
                            i = function () {
                                var e = Wc(o);
                                r.call(e)
                            }
                        }
                        Kc(t, o, e, i)
                    } else o = function (e, t, n, s, i) {
                        if (i) {
                            if ("function" == typeof s) {
                                var a = s;
                                s = function () {
                                    var e = Wc(o);
                                    a.call(e)
                                }
                            }
                            var o = Hc(t, s, e, 0, null, !1, 0, "", Jc);
                            return e._reactRootContainer = o, e[gi] = o.current, Vs(8 === e.nodeType ? e.parentNode : e), dc(), o
                        }
                        for (; i = e.lastChild;) e.removeChild(i);
                        if ("function" == typeof s) {
                            var r = s;
                            s = function () {
                                var e = Wc(l);
                                r.call(e)
                            }
                        }
                        var l = Gc(e, 0, !1, null, 0, !1, 0, "", Jc);
                        return e._reactRootContainer = l, e[gi] = l.current, Vs(8 === e.nodeType ? e.parentNode : e), dc((function () {
                            Kc(t, l, n, s)
                        })), l
                    }(n, t, e, i, s);
                    return Wc(o)
                }
                Xc.prototype.render = qc.prototype.render = function (e) {
                    var t = this._internalRoot;
                    if (null === t) throw Error(a(409));
                    Kc(e, t, null, null)
                }, Xc.prototype.unmount = qc.prototype.unmount = function () {
                    var e = this._internalRoot;
                    if (null !== e) {
                        this._internalRoot = null;
                        var t = e.containerInfo;
                        dc((function () {
                            Kc(null, e, null, null)
                        })), t[gi] = null
                    }
                }, Xc.prototype.unstable_scheduleHydration = function (e) {
                    if (e) {
                        var t = yt();
                        e = {
                            blockedOn: null,
                            target: e,
                            priority: t
                        };
                        for (var n = 0; n < At.length && 0 !== t && t < At[n].priority; n++);
                        At.splice(n, 0, e), 0 === n && Dt(e)
                    }
                }, Tt = function (e) {
                    switch (e.tag) {
                    case 3:
                        var t = e.stateNode;
                        if (t.current.memoizedState.isDehydrated) {
                            var n = dt(t.pendingLanes);
                            0 !== n && (vt(t, 1 | n), ic(t, Qe()), 0 == (6 & wl) && (Hl = Qe() + 500, Vi()))
                        }
                        break;
                    case 13:
                        dc((function () {
                            var t = wa(e, 1);
                            if (null !== t) {
                                var n = tc();
                                sc(t, e, 1, n)
                            }
                        })), Yc(e, 1)
                    }
                }, Et = function (e) {
                    if (13 === e.tag) {
                        var t = wa(e, 134217728);
                        if (null !== t) sc(t, e, 134217728, tc());
                        Yc(e, 134217728)
                    }
                }, It = function (e) {
                    if (13 === e.tag) {
                        var t = nc(e),
                            n = wa(e, t);
                        if (null !== n) sc(n, e, t, tc());
                        Yc(e, t)
                    }
                }, yt = function () {
                    return _t
                }, jt = function (e, t) {
                    var n = _t;
                    try {
                        return _t = e, t()
                    } finally {
                        _t = n
                    }
                }, Ee = function (e, t, n) {
                    switch (t) {
                    case "input":
                        if (Z(e, n), t = n.name, "radio" === n.type && null != t) {
                            for (n = e; n.parentNode;) n = n.parentNode;
                            for (n = n.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'), t = 0; t < n.length; t++) {
                                var s = n[t];
                                if (s !== e && s.form === e.form) {
                                    var i = Ti(s);
                                    if (!i) throw Error(a(90));
                                    Y(s), Z(s, i)
                                }
                            }
                        }
                        break;
                    case "textarea":
                        ae(e, n);
                        break;
                    case "select":
                        null != (t = n.value) && ne(e, !!n.multiple, t, !1)
                    }
                }, Ne = uc, we = dc;
                var tu = {
                        usingClientEntryPoint: !1,
                        Events: [_i, bi, Ti, Se, Ce, uc]
                    },
                    nu = {
                        findFiberByHostInstance: vi,
                        bundleType: 0,
                        version: "18.2.0",
                        rendererPackageName: "react-dom"
                    },
                    su = {
                        bundleType: nu.bundleType,
                        version: nu.version,
                        rendererPackageName: nu.rendererPackageName,
                        rendererConfig: nu.rendererConfig,
                        overrideHookState: null,
                        overrideHookStateDeletePath: null,
                        overrideHookStateRenamePath: null,
                        overrideProps: null,
                        overridePropsDeletePath: null,
                        overridePropsRenamePath: null,
                        setErrorHandler: null,
                        setSuspenseHandler: null,
                        scheduleUpdate: null,
                        currentDispatcherRef: b.ReactCurrentDispatcher,
                        findHostInstanceByFiber: function (e) {
                            return null === (e = We(e)) ? null : e.stateNode
                        },
                        findFiberByHostInstance: nu.findFiberByHostInstance || function () {
                            return null
                        },
                        findHostInstancesForRefresh: null,
                        scheduleRefresh: null,
                        scheduleRoot: null,
                        setRefreshHandler: null,
                        getCurrentFiber: null,
                        reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
                    };
                if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
                    var iu = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                    if (!iu.isDisabled && iu.supportsFiber) try {
                        it = iu.inject(su), at = iu
                    } catch (ue) {}
                }
                t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tu, t.createPortal = function (e, t) {
                    var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
                    if (!Qc(t)) throw Error(a(200));
                    return function (e, t, n) {
                        var s = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
                        return {
                            $$typeof: E,
                            key: null == s ? null : "" + s,
                            children: e,
                            containerInfo: t,
                            implementation: n
                        }
                    }(e, t, null, n)
                }, t.createRoot = function (e, t) {
                    if (!Qc(e)) throw Error(a(299));
                    var n = !1,
                        s = "",
                        i = $c;
                    return null != t && (!0 === t.unstable_strictMode && (n = !0), void 0 !== t.identifierPrefix && (s = t.identifierPrefix), void 0 !== t.onRecoverableError && (i = t.onRecoverableError)), t = Gc(e, 1, !1, null, 0, n, 0, s, i), e[gi] = t.current, Vs(8 === e.nodeType ? e.parentNode : e), new qc(t)
                }, t.findDOMNode = function (e) {
                    if (null == e) return null;
                    if (1 === e.nodeType) return e;
                    var t = e._reactInternals;
                    if (void 0 === t) {
                        if ("function" == typeof e.render) throw Error(a(188));
                        throw e = Object.keys(e).join(","), Error(a(268, e))
                    }
                    return e = null === (e = We(t)) ? null : e.stateNode
                }, t.flushSync = function (e) {
                    return dc(e)
                }, t.hydrate = function (e, t, n) {
                    if (!Zc(t)) throw Error(a(200));
                    return eu(null, e, t, !0, n)
                }, t.hydrateRoot = function (e, t, n) {
                    if (!Qc(e)) throw Error(a(405));
                    var s = null != n && n.hydratedSources || null,
                        i = !1,
                        o = "",
                        r = $c;
                    if (null != n && (!0 === n.unstable_strictMode && (i = !0), void 0 !== n.identifierPrefix && (o = n.identifierPrefix), void 0 !== n.onRecoverableError && (r = n.onRecoverableError)), t = Hc(t, null, e, 1, null != n ? n : null, i, 0, o, r), e[gi] = t.current, Vs(e), s)
                        for (e = 0; e < s.length; e++) i = (i = (n = s[e])._getVersion)(n._source), null == t.mutableSourceEagerHydrationData ? t.mutableSourceEagerHydrationData = [n, i] : t.mutableSourceEagerHydrationData.push(n, i);
                    return new Xc(t)
                }, t.render = function (e, t, n) {
                    if (!Zc(t)) throw Error(a(200));
                    return eu(null, e, t, !1, n)
                }, t.unmountComponentAtNode = function (e) {
                    if (!Zc(e)) throw Error(a(40));
                    return !!e._reactRootContainer && (dc((function () {
                        eu(null, null, e, !1, (function () {
                            e._reactRootContainer = null, e[gi] = null
                        }))
                    })), !0)
                }, t.unstable_batchedUpdates = uc, t.unstable_renderSubtreeIntoContainer = function (e, t, n, s) {
                    if (!Zc(n)) throw Error(a(200));
                    if (null == e || void 0 === e._reactInternals) throw Error(a(38));
                    return eu(e, t, n, !1, s)
                }, t.version = "18.2.0-next-9e3b772b8-20220608"
            },
            352: (e, t, n) => {
                "use strict";
                var s = n(104);
                t.createRoot = s.createRoot, t.hydrateRoot = s.hydrateRoot
            },
            104: (e, t, n) => {
                "use strict";
                ! function e() {
                    if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE) try {
                        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)
                    } catch (e) {
                        console.error(e)
                    }
                }(), e.exports = n(516)
            },
            808: (e, t, n) => {
                "use strict";
                var s = n(504),
                    i = Symbol.for("react.element"),
                    a = Symbol.for("react.fragment"),
                    o = Object.prototype.hasOwnProperty,
                    r = s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
                    l = {
                        key: !0,
                        ref: !0,
                        __self: !0,
                        __source: !0
                    };

                function c(e, t, n) {
                    var s, a = {},
                        c = null,
                        u = null;
                    for (s in void 0 !== n && (c = "" + n), void 0 !== t.key && (c = "" + t.key), void 0 !== t.ref && (u = t.ref), t) o.call(t, s) && !l.hasOwnProperty(s) && (a[s] = t[s]);
                    if (e && e.defaultProps)
                        for (s in t = e.defaultProps) void 0 === a[s] && (a[s] = t[s]);
                    return {
                        $$typeof: i,
                        type: e,
                        key: c,
                        ref: u,
                        props: a,
                        _owner: r.current
                    }
                }
                t.Fragment = a, t.jsx = c, t.jsxs = c
            },
            28: (e, t) => {
                "use strict";
                var n = Symbol.for("react.element"),
                    s = Symbol.for("react.portal"),
                    i = Symbol.for("react.fragment"),
                    a = Symbol.for("react.strict_mode"),
                    o = Symbol.for("react.profiler"),
                    r = Symbol.for("react.provider"),
                    l = Symbol.for("react.context"),
                    c = Symbol.for("react.forward_ref"),
                    u = Symbol.for("react.suspense"),
                    d = Symbol.for("react.memo"),
                    m = Symbol.for("react.lazy"),
                    h = Symbol.iterator;
                var g = {
                        isMounted: function () {
                            return !1
                        },
                        enqueueForceUpdate: function () {},
                        enqueueReplaceState: function () {},
                        enqueueSetState: function () {}
                    },
                    p = Object.assign,
                    f = {};

                function x(e, t, n) {
                    this.props = e, this.context = t, this.refs = f, this.updater = n || g
                }

                function v() {}

                function _(e, t, n) {
                    this.props = e, this.context = t, this.refs = f, this.updater = n || g
                }
                x.prototype.isReactComponent = {}, x.prototype.setState = function (e, t) {
                    if ("object" != typeof e && "function" != typeof e && null != e) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
                    this.updater.enqueueSetState(this, e, t, "setState")
                }, x.prototype.forceUpdate = function (e) {
                    this.updater.enqueueForceUpdate(this, e, "forceUpdate")
                }, v.prototype = x.prototype;
                var b = _.prototype = new v;
                b.constructor = _, p(b, x.prototype), b.isPureReactComponent = !0;
                var T = Array.isArray,
                    E = Object.prototype.hasOwnProperty,
                    I = {
                        current: null
                    },
                    y = {
                        key: !0,
                        ref: !0,
                        __self: !0,
                        __source: !0
                    };

                function j(e, t, s) {
                    var i, a = {},
                        o = null,
                        r = null;
                    if (null != t)
                        for (i in void 0 !== t.ref && (r = t.ref), void 0 !== t.key && (o = "" + t.key), t) E.call(t, i) && !y.hasOwnProperty(i) && (a[i] = t[i]);
                    var l = arguments.length - 2;
                    if (1 === l) a.children = s;
                    else if (1 < l) {
                        for (var c = Array(l), u = 0; u < l; u++) c[u] = arguments[u + 2];
                        a.children = c
                    }
                    if (e && e.defaultProps)
                        for (i in l = e.defaultProps) void 0 === a[i] && (a[i] = l[i]);
                    return {
                        $$typeof: n,
                        type: e,
                        key: o,
                        ref: r,
                        props: a,
                        _owner: I.current
                    }
                }

                function S(e) {
                    return "object" == typeof e && null !== e && e.$$typeof === n
                }
                var C = /\/+/g;

                function N(e, t) {
                    return "object" == typeof e && null !== e && null != e.key ? function (e) {
                        var t = {
                            "=": "=0",
                            ":": "=2"
                        };
                        return "$" + e.replace(/[=:]/g, (function (e) {
                            return t[e]
                        }))
                    }("" + e.key) : t.toString(36)
                }

                function w(e, t, i, a, o) {
                    var r = typeof e;
                    "undefined" !== r && "boolean" !== r || (e = null);
                    var l = !1;
                    if (null === e) l = !0;
                    else switch (r) {
                    case "string":
                    case "number":
                        l = !0;
                        break;
                    case "object":
                        switch (e.$$typeof) {
                        case n:
                        case s:
                            l = !0
                        }
                    }
                    if (l) return o = o(l = e), e = "" === a ? "." + N(l, 0) : a, T(o) ? (i = "", null != e && (i = e.replace(C, "$&/") + "/"), w(o, t, i, "", (function (e) {
                        return e
                    }))) : null != o && (S(o) && (o = function (e, t) {
                        return {
                            $$typeof: n,
                            type: e.type,
                            key: t,
                            ref: e.ref,
                            props: e.props,
                            _owner: e._owner
                        }
                    }(o, i + (!o.key || l && l.key === o.key ? "" : ("" + o.key).replace(C, "$&/") + "/") + e)), t.push(o)), 1;
                    if (l = 0, a = "" === a ? "." : a + ":", T(e))
                        for (var c = 0; c < e.length; c++) {
                            var u = a + N(r = e[c], c);
                            l += w(r, t, i, u, o)
                        } else if (u = function (e) {
                                return null === e || "object" != typeof e ? null : "function" == typeof (e = h && e[h] || e["@@iterator"]) ? e : null
                            }(e), "function" == typeof u)
                            for (e = u.call(e), c = 0; !(r = e.next()).done;) l += w(r = r.value, t, i, u = a + N(r, c++), o);
                        else if ("object" === r) throw t = String(e), Error("Objects are not valid as a React child (found: " + ("[object Object]" === t ? "object with keys {" + Object.keys(e).join(", ") + "}" : t) + "). If you meant to render a collection of children, use an array instead.");
                    return l
                }

                function O(e, t, n) {
                    if (null == e) return e;
                    var s = [],
                        i = 0;
                    return w(e, s, "", "", (function (e) {
                        return t.call(n, e, i++)
                    })), s
                }

                function P(e) {
                    if (-1 === e._status) {
                        var t = e._result;
                        (t = t()).then((function (t) {
                            0 !== e._status && -1 !== e._status || (e._status = 1, e._result = t)
                        }), (function (t) {
                            0 !== e._status && -1 !== e._status || (e._status = 2, e._result = t)
                        })), -1 === e._status && (e._status = 0, e._result = t)
                    }
                    if (1 === e._status) return e._result.default;
                    throw e._result
                }
                var L = {
                        current: null
                    },
                    A = {
                        transition: null
                    },
                    M = {
                        ReactCurrentDispatcher: L,
                        ReactCurrentBatchConfig: A,
                        ReactCurrentOwner: I
                    };
                t.Children = {
                    map: O,
                    forEach: function (e, t, n) {
                        O(e, (function () {
                            t.apply(this, arguments)
                        }), n)
                    },
                    count: function (e) {
                        var t = 0;
                        return O(e, (function () {
                            t++
                        })), t
                    },
                    toArray: function (e) {
                        return O(e, (function (e) {
                            return e
                        })) || []
                    },
                    only: function (e) {
                        if (!S(e)) throw Error("React.Children.only expected to receive a single React element child.");
                        return e
                    }
                }, t.Component = x, t.Fragment = i, t.Profiler = o, t.PureComponent = _, t.StrictMode = a, t.Suspense = u, t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = M, t.cloneElement = function (e, t, s) {
                    if (null == e) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + e + ".");
                    var i = p({}, e.props),
                        a = e.key,
                        o = e.ref,
                        r = e._owner;
                    if (null != t) {
                        if (void 0 !== t.ref && (o = t.ref, r = I.current), void 0 !== t.key && (a = "" + t.key), e.type && e.type.defaultProps) var l = e.type.defaultProps;
                        for (c in t) E.call(t, c) && !y.hasOwnProperty(c) && (i[c] = void 0 === t[c] && void 0 !== l ? l[c] : t[c])
                    }
                    var c = arguments.length - 2;
                    if (1 === c) i.children = s;
                    else if (1 < c) {
                        l = Array(c);
                        for (var u = 0; u < c; u++) l[u] = arguments[u + 2];
                        i.children = l
                    }
                    return {
                        $$typeof: n,
                        type: e.type,
                        key: a,
                        ref: o,
                        props: i,
                        _owner: r
                    }
                }, t.createContext = function (e) {
                    return (e = {
                        $$typeof: l,
                        _currentValue: e,
                        _currentValue2: e,
                        _threadCount: 0,
                        Provider: null,
                        Consumer: null,
                        _defaultValue: null,
                        _globalName: null
                    }).Provider = {
                        $$typeof: r,
                        _context: e
                    }, e.Consumer = e
                }, t.createElement = j, t.createFactory = function (e) {
                    var t = j.bind(null, e);
                    return t.type = e, t
                }, t.createRef = function () {
                    return {
                        current: null
                    }
                }, t.forwardRef = function (e) {
                    return {
                        $$typeof: c,
                        render: e
                    }
                }, t.isValidElement = S, t.lazy = function (e) {
                    return {
                        $$typeof: m,
                        _payload: {
                            _status: -1,
                            _result: e
                        },
                        _init: P
                    }
                }, t.memo = function (e, t) {
                    return {
                        $$typeof: d,
                        type: e,
                        compare: void 0 === t ? null : t
                    }
                }, t.startTransition = function (e) {
                    var t = A.transition;
                    A.transition = {};
                    try {
                        e()
                    } finally {
                        A.transition = t
                    }
                }, t.unstable_act = function () {
                    throw Error("act(...) is not supported in production builds of React.")
                }, t.useCallback = function (e, t) {
                    return L.current.useCallback(e, t)
                }, t.useContext = function (e) {
                    return L.current.useContext(e)
                }, t.useDebugValue = function () {}, t.useDeferredValue = function (e) {
                    return L.current.useDeferredValue(e)
                }, t.useEffect = function (e, t) {
                    return L.current.useEffect(e, t)
                }, t.useId = function () {
                    return L.current.useId()
                }, t.useImperativeHandle = function (e, t, n) {
                    return L.current.useImperativeHandle(e, t, n)
                }, t.useInsertionEffect = function (e, t) {
                    return L.current.useInsertionEffect(e, t)
                }, t.useLayoutEffect = function (e, t) {
                    return L.current.useLayoutEffect(e, t)
                }, t.useMemo = function (e, t) {
                    return L.current.useMemo(e, t)
                }, t.useReducer = function (e, t, n) {
                    return L.current.useReducer(e, t, n)
                }, t.useRef = function (e) {
                    return L.current.useRef(e)
                }, t.useState = function (e) {
                    return L.current.useState(e)
                }, t.useSyncExternalStore = function (e, t, n) {
                    return L.current.useSyncExternalStore(e, t, n)
                }, t.useTransition = function () {
                    return L.current.useTransition()
                }, t.version = "18.2.0"
            },
            504: (e, t, n) => {
                "use strict";
                e.exports = n(28)
            },
            624: (e, t, n) => {
                "use strict";
                e.exports = n(808)
            },
            928: function (e) {
                e.exports = function () {
                    "use strict";
                    var e = void 0;
                    "undefined" != typeof window && (e = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame), e || "undefined" == typeof process || "node" !== process.title || (e = setImmediate);
                    var t = e = e || function (e) {
                            window.setTimeout(e, 1e3 / 60)
                        },
                        n = Array.prototype.concat,
                        s = Array.prototype.slice;

                    function i(e, t) {
                        for (var i = arguments.length, a = Array(i > 2 ? i - 2 : 0), o = 2; o < i; o++) a[o - 2] = arguments[o];
                        return function () {
                            for (var i = arguments.length, o = Array(i), r = 0; r < i; r++) o[r] = arguments[r];
                            e.apply(t, n.call(a, s.call(o)))
                        }
                    }

                    function a(e, t) {
                        for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                    }

                    function o(e) {
                        return t(e)
                    }

                    function r(e, t) {
                        var n = e.indexOf(t); - 1 !== n && e.splice(n, 1)
                    }
                    var l = {};

                    function c(e) {
                        if (l[e]) return l[e];
                        var t = e.replace("#", "");
                        3 === t.length && (t = t[0] + t[0] + t[1] + t[1] + t[2] + t[2]);
                        var n = t.match(/.{2}/g);
                        if (!n || n.length < 3) throw new Error("Expected a color string of format #rrggbb");
                        var s = {
                            r: parseInt(n[0], 16),
                            g: parseInt(n[1], 16),
                            b: parseInt(n[2], 16)
                        };
                        return l[e] = s, s
                    }

                    function u(e, t, n) {
                        var s = e.toString(16),
                            i = t.toString(16),
                            a = n.toString(16);
                        return "#" + (s = s.length < 2 ? "0" + s : s) + (i = i.length < 2 ? "0" + i : i) + (a = a.length < 2 ? "0" + a : a)
                    }
                    var d = Object.freeze({
                        bind: i,
                        extend: a,
                        onFrame: o,
                        removeFirst: r,
                        hexToRGB: c,
                        rgbToHex: u
                    });

                    function m(e, t, n, s, i) {
                        return s + (e - t) / (n - t) * (i - s)
                    }

                    function h(e, t, n) {
                        var s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                            i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1,
                            a = arguments[5],
                            o = c(t),
                            r = c(n),
                            l = Math.floor(m(e, s, i, o.r, r.r)),
                            d = Math.floor(m(e, s, i, o.g, r.g)),
                            h = Math.floor(m(e, s, i, o.b, r.b));
                        return a ? "rgb(" + l + "," + d + "," + h + ")" : u(l, d, h)
                    }

                    function g(e) {
                        return e * Math.PI / 180
                    }

                    function p(e) {
                        return 180 * e / Math.PI
                    }
                    var f = Object.freeze({
                        mapValueInRange: m,
                        interpolateColor: h,
                        degreesToRadians: g,
                        radiansToDegrees: p
                    });

                    function x(e) {
                        return 3.62 * (e - 30) + 194
                    }

                    function v(e) {
                        return (e - 194) / 3.62 + 30
                    }

                    function _(e) {
                        return 3 * (e - 8) + 25
                    }

                    function b(e) {
                        return (e - 25) / 3 + 8
                    }
                    var T = Object.freeze({
                            tensionFromOrigamiValue: x,
                            origamiValueFromTension: v,
                            frictionFromOrigamiValue: _,
                            origamiFromFriction: b
                        }),
                        E = function (e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        },
                        I = Object.assign || function (e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = arguments[t];
                                for (var s in n) Object.prototype.hasOwnProperty.call(n, s) && (e[s] = n[s])
                            }
                            return e
                        },
                        y = function () {
                            function e() {
                                E(this, e), this.springSystem = null
                            }
                            return e.prototype.run = function () {
                                var e = C.call(this);
                                o((function () {
                                    e.loop(Date.now())
                                }))
                            }, e
                        }(),
                        j = function () {
                            function e(t) {
                                E(this, e), this.springSystem = null, this.time = 0, this.running = !1, this.timestep = t || 16.667
                            }
                            return e.prototype.run = function () {
                                var e = C.call(this);
                                if (!this.running) {
                                    for (this.running = !0; !e.getIsIdle();) e.loop(this.time += this.timestep);
                                    this.running = !1
                                }
                            }, e
                        }(),
                        S = function () {
                            function e() {
                                E(this, e), this.springSystem = null, this.time = 0, this.running = !1
                            }
                            return e.prototype.run = function () {}, e.prototype.step = function (e) {
                                C.call(this).loop(this.time += e)
                            }, e
                        }();

                    function C() {
                        if (null == this.springSystem) throw new Error("cannot run looper without a springSystem");
                        return this.springSystem
                    }
                    var N = Object.freeze({
                            AnimationLooper: y,
                            SimulationLooper: j,
                            SteppingSimulationLooper: S
                        }),
                        w = function () {
                            function e(t, n) {
                                E(this, e), this.bounciness = t, this.speed = n;
                                var s = this.normalize(t / 1.7, 0, 20);
                                s = this.projectNormal(s, 0, .8);
                                var i = this.normalize(n / 1.7, 0, 20);
                                this.bouncyTension = this.projectNormal(i, .5, 200), this.bouncyFriction = this.quadraticOutInterpolation(s, this.b3Nobounce(this.bouncyTension), .01)
                            }
                            return e.prototype.normalize = function (e, t, n) {
                                return (e - t) / (n - t)
                            }, e.prototype.projectNormal = function (e, t, n) {
                                return t + e * (n - t)
                            }, e.prototype.linearInterpolation = function (e, t, n) {
                                return e * n + (1 - e) * t
                            }, e.prototype.quadraticOutInterpolation = function (e, t, n) {
                                return this.linearInterpolation(2 * e - e * e, t, n)
                            }, e.prototype.b3Friction1 = function (e) {
                                return 7e-4 * Math.pow(e, 3) - .031 * Math.pow(e, 2) + .64 * e + 1.28
                            }, e.prototype.b3Friction2 = function (e) {
                                return 44e-6 * Math.pow(e, 3) - .006 * Math.pow(e, 2) + .36 * e + 2
                            }, e.prototype.b3Friction3 = function (e) {
                                return 45e-8 * Math.pow(e, 3) - 332e-6 * Math.pow(e, 2) + .1078 * e + 5.84
                            }, e.prototype.b3Nobounce = function (e) {
                                return e <= 18 ? this.b3Friction1(e) : e > 18 && e <= 44 ? this.b3Friction2(e) : this.b3Friction3(e)
                            }, e
                        }(),
                        O = function () {
                            function e(t, n) {
                                E(this, e), this.tension = t, this.friction = n
                            }
                            return e.fromOrigamiTensionAndFriction = function (t, n) {
                                return new e(x(t), _(n))
                            }, e.fromBouncinessAndSpeed = function (t, n) {
                                var s = new w(t, n);
                                return e.fromOrigamiTensionAndFriction(s.bouncyTension, s.bouncyFriction)
                            }, e.coastingConfigWithOrigamiFriction = function (t) {
                                return new e(0, _(t))
                            }, e
                        }();
                    O.DEFAULT_ORIGAMI_SPRING_CONFIG = O.fromOrigamiTensionAndFriction(40, 7);
                    var P = function e() {
                            E(this, e), this.position = 0, this.velocity = 0
                        },
                        L = function () {
                            function e(t) {
                                E(this, e), this.listeners = [], this._startValue = 0, this._currentState = new P, this._displacementFromRestThreshold = .001, this._endValue = 0, this._overshootClampingEnabled = !1, this._previousState = new P, this._restSpeedThreshold = .001, this._tempState = new P, this._timeAccumulator = 0, this._wasAtRest = !0, this._id = "s" + e._ID++, this._springSystem = t
                            }
                            return e.prototype.destroy = function () {
                                this.listeners = [], this._springSystem.deregisterSpring(this)
                            }, e.prototype.getId = function () {
                                return this._id
                            }, e.prototype.setSpringConfig = function (e) {
                                return this._springConfig = e, this
                            }, e.prototype.getSpringConfig = function () {
                                return this._springConfig
                            }, e.prototype.setCurrentValue = function (e, t) {
                                return this._startValue = e, this._currentState.position = e, t || this.setAtRest(), this.notifyPositionUpdated(!1, !1), this
                            }, e.prototype.getStartValue = function () {
                                return this._startValue
                            }, e.prototype.getCurrentValue = function () {
                                return this._currentState.position
                            }, e.prototype.getCurrentDisplacementDistance = function () {
                                return this.getDisplacementDistanceForState(this._currentState)
                            }, e.prototype.getDisplacementDistanceForState = function (e) {
                                return Math.abs(this._endValue - e.position)
                            }, e.prototype.setEndValue = function (e) {
                                if (this._endValue === e && this.isAtRest()) return this;
                                this._startValue = this.getCurrentValue(), this._endValue = e, this._springSystem.activateSpring(this.getId());
                                for (var t = 0, n = this.listeners.length; t < n; t++) {
                                    var s = this.listeners[t].onSpringEndStateChange;
                                    s && s(this)
                                }
                                return this
                            }, e.prototype.getEndValue = function () {
                                return this._endValue
                            }, e.prototype.setVelocity = function (e) {
                                return e === this._currentState.velocity || (this._currentState.velocity = e, this._springSystem.activateSpring(this.getId())), this
                            }, e.prototype.getVelocity = function () {
                                return this._currentState.velocity
                            }, e.prototype.setRestSpeedThreshold = function (e) {
                                return this._restSpeedThreshold = e, this
                            }, e.prototype.getRestSpeedThreshold = function () {
                                return this._restSpeedThreshold
                            }, e.prototype.setRestDisplacementThreshold = function (e) {
                                this._displacementFromRestThreshold = e
                            }, e.prototype.getRestDisplacementThreshold = function () {
                                return this._displacementFromRestThreshold
                            }, e.prototype.setOvershootClampingEnabled = function (e) {
                                return this._overshootClampingEnabled = e, this
                            }, e.prototype.isOvershootClampingEnabled = function () {
                                return this._overshootClampingEnabled
                            }, e.prototype.isOvershooting = function () {
                                var e = this._startValue,
                                    t = this._endValue;
                                return this._springConfig.tension > 0 && (e < t && this.getCurrentValue() > t || e > t && this.getCurrentValue() < t)
                            }, e.prototype.advance = function (t, n) {
                                var s = this.isAtRest();
                                if (!s || !this._wasAtRest) {
                                    var i = n;
                                    n > e.MAX_DELTA_TIME_SEC && (i = e.MAX_DELTA_TIME_SEC), this._timeAccumulator += i;
                                    for (var a = this._springConfig.tension, o = this._springConfig.friction, r = this._currentState.position, l = this._currentState.velocity, c = this._tempState.position, u = this._tempState.velocity, d = void 0, m = void 0, h = void 0, g = void 0, p = void 0, f = void 0, x = void 0, v = void 0; this._timeAccumulator >= e.SOLVER_TIMESTEP_SEC;) this._timeAccumulator -= e.SOLVER_TIMESTEP_SEC, this._timeAccumulator < e.SOLVER_TIMESTEP_SEC && (this._previousState.position = r, this._previousState.velocity = l), d = l, m = a * (this._endValue - c) - o * l, c = r + d * e.SOLVER_TIMESTEP_SEC * .5, h = u = l + m * e.SOLVER_TIMESTEP_SEC * .5, g = a * (this._endValue - c) - o * u, c = r + h * e.SOLVER_TIMESTEP_SEC * .5, p = u = l + g * e.SOLVER_TIMESTEP_SEC * .5, f = a * (this._endValue - c) - o * u, c = r + p * e.SOLVER_TIMESTEP_SEC, x = u = l + f * e.SOLVER_TIMESTEP_SEC, v = 1 / 6 * (m + 2 * (g + f) + (a * (this._endValue - c) - o * u)), r += 1 / 6 * (d + 2 * (h + p) + x) * e.SOLVER_TIMESTEP_SEC, l += v * e.SOLVER_TIMESTEP_SEC;
                                    this._tempState.position = c, this._tempState.velocity = u, this._currentState.position = r, this._currentState.velocity = l, this._timeAccumulator > 0 && this._interpolate(this._timeAccumulator / e.SOLVER_TIMESTEP_SEC), (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) && (this._springConfig.tension > 0 ? (this._startValue = this._endValue, this._currentState.position = this._endValue) : (this._endValue = this._currentState.position, this._startValue = this._endValue), this.setVelocity(0), s = !0);
                                    var _ = !1;
                                    this._wasAtRest && (this._wasAtRest = !1, _ = !0);
                                    var b = !1;
                                    s && (this._wasAtRest = !0, b = !0), this.notifyPositionUpdated(_, b)
                                }
                            }, e.prototype.notifyPositionUpdated = function (e, t) {
                                for (var n = 0, s = this.listeners.length; n < s; n++) {
                                    var i = this.listeners[n];
                                    e && i.onSpringActivate && i.onSpringActivate(this), i.onSpringUpdate && i.onSpringUpdate(this), t && i.onSpringAtRest && i.onSpringAtRest(this)
                                }
                            }, e.prototype.systemShouldAdvance = function () {
                                return !this.isAtRest() || !this.wasAtRest()
                            }, e.prototype.wasAtRest = function () {
                                return this._wasAtRest
                            }, e.prototype.isAtRest = function () {
                                return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || 0 === this._springConfig.tension)
                            }, e.prototype.setAtRest = function () {
                                return this._endValue = this._currentState.position, this._tempState.position = this._currentState.position, this._currentState.velocity = 0, this
                            }, e.prototype._interpolate = function (e) {
                                this._currentState.position = this._currentState.position * e + this._previousState.position * (1 - e), this._currentState.velocity = this._currentState.velocity * e + this._previousState.velocity * (1 - e)
                            }, e.prototype.getListeners = function () {
                                return this.listeners
                            }, e.prototype.addListener = function (e) {
                                return this.listeners.push(e), this
                            }, e.prototype.removeListener = function (e) {
                                return r(this.listeners, e), this
                            }, e.prototype.removeAllListeners = function () {
                                return this.listeners = [], this
                            }, e.prototype.currentValueIsApproximately = function (e) {
                                return Math.abs(this.getCurrentValue() - e) <= this.getRestDisplacementThreshold()
                            }, e
                        }();
                    L._ID = 0, L.MAX_DELTA_TIME_SEC = .064, L.SOLVER_TIMESTEP_SEC = .001;
                    var A = function () {
                        function e(t) {
                            E(this, e), this.listeners = [], this._activeSprings = [], this._idleSpringIndices = [], this._isIdle = !0, this._lastTimeMillis = -1, this._springRegistry = {}, this.looper = t || new y, this.looper.springSystem = this
                        }
                        return e.prototype.setLooper = function (e) {
                            this.looper = e, e.springSystem = this
                        }, e.prototype.createSpring = function (e, t) {
                            var n = void 0;
                            return n = void 0 === e || void 0 === t ? O.DEFAULT_ORIGAMI_SPRING_CONFIG : O.fromOrigamiTensionAndFriction(e, t), this.createSpringWithConfig(n)
                        }, e.prototype.createSpringWithBouncinessAndSpeed = function (e, t) {
                            var n = void 0;
                            return n = void 0 === e || void 0 === t ? O.DEFAULT_ORIGAMI_SPRING_CONFIG : O.fromBouncinessAndSpeed(e, t), this.createSpringWithConfig(n)
                        }, e.prototype.createSpringWithConfig = function (e) {
                            var t = new L(this);
                            return this.registerSpring(t), t.setSpringConfig(e), t
                        }, e.prototype.getIsIdle = function () {
                            return this._isIdle
                        }, e.prototype.getSpringById = function (e) {
                            return this._springRegistry[e]
                        }, e.prototype.getAllSprings = function () {
                            var e = [];
                            for (var t in this._springRegistry) this._springRegistry.hasOwnProperty(t) && e.push(this._springRegistry[t]);
                            return e
                        }, e.prototype.registerSpring = function (e) {
                            this._springRegistry[e.getId()] = e
                        }, e.prototype.deregisterSpring = function (e) {
                            r(this._activeSprings, e), delete this._springRegistry[e.getId()]
                        }, e.prototype.advance = function (e, t) {
                            for (; this._idleSpringIndices.length > 0;) this._idleSpringIndices.pop();
                            for (var n = 0, s = this._activeSprings.length; n < s; n++) {
                                var i = this._activeSprings[n];
                                i.systemShouldAdvance() ? i.advance(e / 1e3, t / 1e3) : this._idleSpringIndices.push(this._activeSprings.indexOf(i))
                            }
                            for (; this._idleSpringIndices.length > 0;) {
                                var a = this._idleSpringIndices.pop();
                                a >= 0 && this._activeSprings.splice(a, 1)
                            }
                        }, e.prototype.loop = function (e) {
                            var t = void 0; - 1 === this._lastTimeMillis && (this._lastTimeMillis = e - 1);
                            var n = e - this._lastTimeMillis;
                            this._lastTimeMillis = e;
                            var s = 0,
                                i = this.listeners.length;
                            for (s = 0; s < i; s++)(t = this.listeners[s]).onBeforeIntegrate && t.onBeforeIntegrate(this);
                            for (this.advance(e, n), 0 === this._activeSprings.length && (this._isIdle = !0, this._lastTimeMillis = -1), s = 0; s < i; s++)(t = this.listeners[s]).onAfterIntegrate && t.onAfterIntegrate(this);
                            this._isIdle || this.looper.run()
                        }, e.prototype.activateSpring = function (e) {
                            var t = this._springRegistry[e]; - 1 === this._activeSprings.indexOf(t) && this._activeSprings.push(t), this.getIsIdle() && (this._isIdle = !1, this.looper.run())
                        }, e.prototype.addListener = function (e) {
                            this.listeners.push(e)
                        }, e.prototype.removeListener = function (e) {
                            r(this.listeners, e)
                        }, e.prototype.removeAllListeners = function () {
                            this.listeners = []
                        }, e
                    }();
                    return I({}, N, {
                        OrigamiValueConverter: T,
                        MathUtil: f,
                        Spring: L,
                        SpringConfig: O,
                        SpringSystem: A,
                        util: I({}, d, f)
                    })
                }()
            },
            328: (e, t) => {
                "use strict";

                function n(e, t) {
                    var n = e.length;
                    e.push(t);
                    e: for (; 0 < n;) {
                        var s = n - 1 >>> 1,
                            i = e[s];
                        if (!(0 < a(i, t))) break e;
                        e[s] = t, e[n] = i, n = s
                    }
                }

                function s(e) {
                    return 0 === e.length ? null : e[0]
                }

                function i(e) {
                    if (0 === e.length) return null;
                    var t = e[0],
                        n = e.pop();
                    if (n !== t) {
                        e[0] = n;
                        e: for (var s = 0, i = e.length, o = i >>> 1; s < o;) {
                            var r = 2 * (s + 1) - 1,
                                l = e[r],
                                c = r + 1,
                                u = e[c];
                            if (0 > a(l, n)) c < i && 0 > a(u, l) ? (e[s] = u, e[c] = n, s = c) : (e[s] = l, e[r] = n, s = r);
                            else {
                                if (!(c < i && 0 > a(u, n))) break e;
                                e[s] = u, e[c] = n, s = c
                            }
                        }
                    }
                    return t
                }

                function a(e, t) {
                    var n = e.sortIndex - t.sortIndex;
                    return 0 !== n ? n : e.id - t.id
                }
                if ("object" == typeof performance && "function" == typeof performance.now) {
                    var o = performance;
                    t.unstable_now = function () {
                        return o.now()
                    }
                } else {
                    var r = Date,
                        l = r.now();
                    t.unstable_now = function () {
                        return r.now() - l
                    }
                }
                var c = [],
                    u = [],
                    d = 1,
                    m = null,
                    h = 3,
                    g = !1,
                    p = !1,
                    f = !1,
                    x = "function" == typeof setTimeout ? setTimeout : null,
                    v = "function" == typeof clearTimeout ? clearTimeout : null,
                    _ = "undefined" != typeof setImmediate ? setImmediate : null;

                function b(e) {
                    for (var t = s(u); null !== t;) {
                        if (null === t.callback) i(u);
                        else {
                            if (!(t.startTime <= e)) break;
                            i(u), t.sortIndex = t.expirationTime, n(c, t)
                        }
                        t = s(u)
                    }
                }

                function T(e) {
                    if (f = !1, b(e), !p)
                        if (null !== s(c)) p = !0, A(E);
                        else {
                            var t = s(u);
                            null !== t && M(T, t.startTime - e)
                        }
                }

                function E(e, n) {
                    p = !1, f && (f = !1, v(S), S = -1), g = !0;
                    var a = h;
                    try {
                        for (b(n), m = s(c); null !== m && (!(m.expirationTime > n) || e && !w());) {
                            var o = m.callback;
                            if ("function" == typeof o) {
                                m.callback = null, h = m.priorityLevel;
                                var r = o(m.expirationTime <= n);
                                n = t.unstable_now(), "function" == typeof r ? m.callback = r : m === s(c) && i(c), b(n)
                            } else i(c);
                            m = s(c)
                        }
                        if (null !== m) var l = !0;
                        else {
                            var d = s(u);
                            null !== d && M(T, d.startTime - n), l = !1
                        }
                        return l
                    } finally {
                        m = null, h = a, g = !1
                    }
                }
                "undefined" != typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
                var I, y = !1,
                    j = null,
                    S = -1,
                    C = 5,
                    N = -1;

                function w() {
                    return !(t.unstable_now() - N < C)
                }

                function O() {
                    if (null !== j) {
                        var e = t.unstable_now();
                        N = e;
                        var n = !0;
                        try {
                            n = j(!0, e)
                        } finally {
                            n ? I() : (y = !1, j = null)
                        }
                    } else y = !1
                }
                if ("function" == typeof _) I = function () {
                    _(O)
                };
                else if ("undefined" != typeof MessageChannel) {
                    var P = new MessageChannel,
                        L = P.port2;
                    P.port1.onmessage = O, I = function () {
                        L.postMessage(null)
                    }
                } else I = function () {
                    x(O, 0)
                };

                function A(e) {
                    j = e, y || (y = !0, I())
                }

                function M(e, n) {
                    S = x((function () {
                        e(t.unstable_now())
                    }), n)
                }
                t.unstable_IdlePriority = 5, t.unstable_ImmediatePriority = 1, t.unstable_LowPriority = 4, t.unstable_NormalPriority = 3, t.unstable_Profiling = null, t.unstable_UserBlockingPriority = 2, t.unstable_cancelCallback = function (e) {
                    e.callback = null
                }, t.unstable_continueExecution = function () {
                    p || g || (p = !0, A(E))
                }, t.unstable_forceFrameRate = function (e) {
                    0 > e || 125 < e ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : C = 0 < e ? Math.floor(1e3 / e) : 5
                }, t.unstable_getCurrentPriorityLevel = function () {
                    return h
                }, t.unstable_getFirstCallbackNode = function () {
                    return s(c)
                }, t.unstable_next = function (e) {
                    switch (h) {
                    case 1:
                    case 2:
                    case 3:
                        var t = 3;
                        break;
                    default:
                        t = h
                    }
                    var n = h;
                    h = t;
                    try {
                        return e()
                    } finally {
                        h = n
                    }
                }, t.unstable_pauseExecution = function () {}, t.unstable_requestPaint = function () {}, t.unstable_runWithPriority = function (e, t) {
                    switch (e) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        e = 3
                    }
                    var n = h;
                    h = e;
                    try {
                        return t()
                    } finally {
                        h = n
                    }
                }, t.unstable_scheduleCallback = function (e, i, a) {
                    var o = t.unstable_now();
                    switch ("object" == typeof a && null !== a ? a = "number" == typeof (a = a.delay) && 0 < a ? o + a : o : a = o, e) {
                    case 1:
                        var r = -1;
                        break;
                    case 2:
                        r = 250;
                        break;
                    case 5:
                        r = 1073741823;
                        break;
                    case 4:
                        r = 1e4;
                        break;
                    default:
                        r = 5e3
                    }
                    return e = {
                        id: d++,
                        callback: i,
                        priorityLevel: e,
                        startTime: a,
                        expirationTime: r = a + r,
                        sortIndex: -1
                    }, a > o ? (e.sortIndex = a, n(u, e), null === s(c) && e === s(u) && (f ? (v(S), S = -1) : f = !0, M(T, a - o))) : (e.sortIndex = r, n(c, e), p || g || (p = !0, A(E))), e
                }, t.unstable_shouldYield = w, t.unstable_wrapCallback = function (e) {
                    var t = h;
                    return function () {
                        var n = h;
                        h = t;
                        try {
                            return e.apply(this, arguments)
                        } finally {
                            h = n
                        }
                    }
                }
            },
            712: (e, t, n) => {
                "use strict";
                e.exports = n(328)
            }
        },
        t = {};

    function n(s) {
        var i = t[s];
        if (void 0 !== i) return i.exports;
        var a = t[s] = {
            exports: {}
        };
        return e[s].call(a.exports, a, a.exports, n), a.exports
    }
    n.n = e => {
        var t = e && e.__esModule ? () => e.default : () => e;
        return n.d(t, {
            a: t
        }), t
    }, n.d = (e, t) => {
        for (var s in t) n.o(t, s) && !n.o(e, s) && Object.defineProperty(e, s, {
            enumerable: !0,
            get: t[s]
        })
    }, n.g = function () {
        if ("object" == typeof globalThis) return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window) return window
        }
    }(), n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), n.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, (() => {
        "use strict";
        var e = {};
        n.r(e), n.d(e, {
            Animation: () => ws,
            Animations: () => Os,
            ArcElement: () => ka,
            BarController: () => Qs,
            BarElement: () => eo,
            BasePlatform: () => wi,
            BasicPlatform: () => Oi,
            BubbleController: () => Zs,
            CategoryScale: () => nr,
            Chart: () => Pa,
            Colors: () => lo,
            DatasetController: () => Vs,
            Decimation: () => mo,
            DomPlatform: () => Wi,
            DoughnutController: () => Js,
            Element: () => Yi,
            Filler: () => wo,
            Interaction: () => pi,
            Legend: () => Ao,
            LineController: () => ei,
            LineElement: () => Wa,
            LinearScale: () => or,
            LogarithmicScale: () => mr,
            PieController: () => ni,
            PointElement: () => Ya,
            PolarAreaController: () => ti,
            RadarController: () => si,
            RadialLinearScale: () => Tr,
            Scale: () => na,
            ScatterController: () => ii,
            SubTitle: () => Do,
            Ticks: () => Zt,
            TimeScale: () => wr,
            TimeSeriesScale: () => Pr,
            Title: () => Ro,
            Tooltip: () => Zo,
            _adapters: () => li,
            _detectPlatform: () => zi,
            animator: () => Ss,
            controllers: () => ai,
            defaults: () => an,
            elements: () => to,
            layouts: () => Ni,
            plugins: () => Jo,
            registerables: () => Ar,
            registry: () => aa,
            scales: () => Lr
        });
        var t = {};
        n.r(t), n.d(t, {
            bindEvent: () => Zr,
            bindLocalValue: () => qr,
            bindMap: () => Xr,
            bindTrigger: () => Jr,
            bindTriggerWithArgs: () => el,
            bindValue: () => $r,
            call: () => nl,
            trigger: () => tl,
            useMapValue: () => ll,
            useMapValueOnChange: () => rl,
            useMapValues: () => cl,
            useReducedValue: () => il,
            useValue: () => sl,
            useValueOnChange: () => ol,
            useValueRef: () => al
        });
        var s = {};
        n.r(s), n.d(s, {
            Localized: () => gu,
            LocalizedBounds: () => au,
            LocalizedDate: () => Su,
            LocalizedDuration: () => Uu,
            LocalizedEntityName: () => Ku,
            LocalizedFraction: () => cu,
            LocalizedNumber: () => Gc,
            LocalizedPercentage: () => $u,
            LocalizedString: () => Tc,
            Unit: () => Oc,
            useLocalization: () => ac
        });
        var i = {};
        n.r(i), n.d(i, {
            AdvisorItemType: () => cg,
            TutorialControlScheme: () => ug,
            TutorialPhaseType: () => dg,
            activateTutorial: () => qh,
            activateTutorialPhase: () => Xh,
            activateTutorialTag: () => ig,
            activeTutorial$: () => Wh,
            activeTutorialList$: () => Dh,
            activeTutorialPhase$: () => zh,
            advisorPanelVisible$: () => mg,
            completeActiveTutorial: () => eg,
            completeActiveTutorialPhase: () => Jh,
            completeIntro: () => tg,
            completeListIntro: () => ng,
            completeListOutro: () => sg,
            forceTutorial: () => Qh,
            listIntroActive$: () => Yh,
            listOutroActive$: () => $h,
            nextTutorial$: () => Fh,
            setTutorialListFocused: () => Hh,
            toggleAdvisorPanel: () => hg,
            toggleTutorialListFocus: () => Zh,
            triggerTutorialTag: () => ag,
            tutorialCategories$: () => Bh,
            tutorialGroups$: () => Gh,
            tutorialIntroActive$: () => kh,
            tutorialListFocused$: () => Vh,
            tutorialPending$: () => Uh,
            tutorials$: () => Kh,
            tutorialsEnabled$: () => Rh,
            useTutorialTag: () => lg,
            useTutorialTagActivation: () => og,
            useTutorialTagTrigger: () => rg
        });
        var a = {};
        n.r(a), n.d(a, {
            emptyPrefabDetails: () => Dx,
            manualUITags$: () => kx,
            prefabDetails$: () => Rx,
            themes$: () => Mx
        });
        var o = {};
        n.r(o), n.d(o, {
            activeInfoview$: () => iv,
            ageData$: () => nb,
            arrestedCriminals$: () => j_,
            attractiveness$: () => G_,
            availableFertility$: () => pb,
            availableForest$: () => gb,
            availableOil$: () => mb,
            availableOre$: () => hb,
            averageAirPollution$: () => p_,
            averageCrimeProbability$: () => __,
            averageFireHazard$: () => v_,
            averageGroundPollution$: () => g_,
            averageHealth$: () => zv,
            averageHotelPrice$: () => V_,
            averageLandValue$: () => A_,
            averageNoisePollution$: () => x_,
            averageWaterPollution$: () => f_,
            batteryCharge$: () => xv,
            birthRate$: () => J_,
            cemeteryAvailability$: () => n_,
            cemeteryCapacity$: () => $v,
            cemeteryUse$: () => Yv,
            clearActiveInfoview: () => rv,
            closeInfoviewMenu: () => av,
            collectedMail$: () => z_,
            collegeAvailability$: () => Hv,
            collegeCapacity$: () => Mv,
            collegeEligible$: () => Ov,
            collegeStudents$: () => Uv,
            commercialLevels$: () => R_,
            commercialProfitability$: () => sb,
            crimePerMonth$: () => P_,
            crimeProbability$: () => I_,
            crimeProducers$: () => E_,
            criminals$: () => O_,
            deathRate$: () => qv,
            deathcareAvailability$: () => t_,
            deliveredMail$: () => Y_,
            educationData$: () => kv,
            electricityAvailability$: () => gv,
            electricityConsumption$: () => cv,
            electricityExport$: () => mv,
            electricityImport$: () => hv,
            electricityProduction$: () => uv,
            electricityTrade$: () => fv,
            electricityTransmission$: () => pv,
            electricityTransmitted$: () => dv,
            elementaryAvailability$: () => Gv,
            elementaryCapacity$: () => Lv,
            elementaryEligible$: () => Nv,
            elementaryStudents$: () => Dv,
            employed$: () => X_,
            employeesData$: () => Ib,
            escapedRate$: () => L_,
            fertilityExtractionRate$: () => _b,
            fertilityRenewalRate$: () => Tb,
            forestExtractionRate$: () => vb,
            forestRenewalRate$: () => bb,
            garbageProcessingRate$: () => s_,
            garbageProductionRate$: () => r_,
            healthcareAvailability$: () => e_,
            highSchoolAvailability$: () => Vv,
            highSchoolCapacity$: () => Av,
            highSchoolEligible$: () => wv,
            highSchoolStudents$: () => Fv,
            inJail$: () => S_,
            inPrison$: () => w_,
            industrialLevels$: () => k_,
            industrialProfitability$: () => ib,
            infoviews$: () => sv,
            jailAvailability$: () => b_,
            jailCapacity$: () => y_,
            jobs$: () => Q_,
            landfillAvailability$: () => o_,
            landfillCapacity$: () => i_,
            mailProductionRate$: () => W_,
            movedAway$: () => tb,
            movedIn$: () => eb,
            officeLevels$: () => D_,
            officeProfitability$: () => ab,
            oilExtractionRate$: () => fb,
            oreExtractionRate$: () => xb,
            parkedCars$: () => d_,
            parkingAvailability$: () => m_,
            parkingCapacity$: () => c_,
            parkingIncome$: () => u_,
            patientCapacity$: () => Jv,
            patientCount$: () => Zv,
            population$: () => q_,
            postServiceAvailability$: () => $_,
            prisonAvailability$: () => T_,
            prisonCapacity$: () => C_,
            prisoners$: () => N_,
            processingAvailability$: () => a_,
            processingRate$: () => Xv,
            residentialLevels$: () => M_,
            setActiveInfoview: () => ov,
            setInfomodeActive: () => lv,
            sewageAvailability$: () => jv,
            sewageCapacity$: () => bv,
            sewageConsumption$: () => Tv,
            sewageExport$: () => yv,
            shelterAvailability$: () => B_,
            shelterCapacity$: () => U_,
            shelteredCount$: () => F_,
            sickCount$: () => Qv,
            storedGarbage$: () => l_,
            topExportColors$: () => ub,
            topExportData$: () => db,
            topExportNames$: () => cb,
            topImportColors$: () => rb,
            topImportData$: () => lb,
            topImportNames$: () => ob,
            tourismRate$: () => H_,
            trafficFlow$: () => h_,
            transportSummaries$: () => Wv,
            unemployment$: () => Z_,
            universityAvailability$: () => Kv,
            universityCapacity$: () => Rv,
            universityEligible$: () => Pv,
            universityStudents$: () => Bv,
            useInfoviewToggle: () => Sb,
            waterAvailability$: () => Sv,
            waterCapacity$: () => vv,
            waterConsumption$: () => _v,
            waterExport$: () => Ev,
            waterImport$: () => Iv,
            waterTrade$: () => Cv,
            weatherEffect$: () => K_,
            workers$: () => jb,
            workplacesData$: () => Eb,
            worksplaces$: () => yb
        });
        var r = {};
        n.r(r), n.d(r, {
            CityInfoPanelTab: () => $b,
            EconomyPanelTab: () => zb,
            GamePanelType: () => kb,
            GameScreen: () => Nb,
            LayoutPosition: () => wb,
            ProgressionPanelTab: () => Db,
            TransportationOverviewPanelTab: () => Xb,
            activeGamePanel$: () => Fb,
            activeGameScreen$: () => Ob,
            activePanelPosition$: () => Bb,
            blockingPanelActive$: () => Ub,
            canUseSaveSystem$: () => Lb,
            closeActiveGamePanel: () => Kb,
            closeGamePanel: () => Hb,
            setActiveGameScreen: () => Pb,
            showCityInfoPanel: () => Qb,
            showEconomyPanel: () => qb,
            showFreeCameraScreen: () => Rb,
            showGamePanel: () => Vb,
            showLifePathDetail: () => tT,
            showLifePathList: () => eT,
            showMainScreen: () => Ab,
            showPauseScreen: () => Mb,
            showProgressionPanel: () => Yb,
            showTransportationOverviewPanel: () => Zb,
            toggleGamePanel: () => Gb,
            toggleInfoviewMenu: () => Wb,
            toggleLifePathPanel: () => Jb,
            toggleRadioPanel: () => nT,
            toggleTransportationOverviewPanel: () => sT
        });
        var l = {};
        n.r(l), n.d(l, {
            Button: () => kI,
            ConfirmationDialog: () => jI,
            DialogContext: () => iE,
            DialogRenderer: () => aE,
            DialogStack: () => sE,
            Dropdown: () => qI,
            DropdownItem: () => JI,
            DropdownToggle: () => XI,
            FloatingButton: () => FI,
            FormattedParagraphs: () => zf,
            FormattedText: () => Gf,
            Icon: () => Sy,
            MarkdownRenderer: () => Py,
            MarkupRenderer: () => Mf,
            MenuButton: () => DI,
            Panel: () => Iy,
            PanelFoldout: () => vy,
            PanelSection: () => iy,
            PanelSectionRow: () => Ty,
            Portal: () => Cy,
            Scrollable: () => ff,
            Tooltip: () => Tg
        });
        var c = {};
        n.r(c);
        var u = {};
        n.r(u), n.d(u, {
            focusEntity: () => Ry,
            focusedEntity$: () => My
        });
        var d = {};
        n.r(d), n.d(d, {
            addLike: () => Uy,
            chirpAdded$: () => Fy,
            chirps$: () => Dy,
            removeLike: () => By,
            selectLink: () => Gy
        });
        var m = {};
        n.r(m), n.d(m, {
            addKeyFrame: () => ij,
            availableCloudTargets$: () => pj,
            captureKey: () => ej,
            cinematicCameraSequenceAssets$: () => gj,
            deleteCinematicCameraSequence: () => mj,
            getControllerDelta: () => oj,
            getControllerPanDelta: () => lj,
            getControllerZoomDelta: () => rj,
            group: () => Vy,
            lastLoadedCinematicCameraSequence$: () => hj,
            loadCinematicCameraSequence: () => dj,
            loop$: () => zy,
            modifierAnimationCurveData$: () => _j,
            moveKeyFrame: () => nj,
            onAfterPlaybackDurationChange: () => Xy,
            playbackDuration$: () => Hy,
            playing$: () => $y,
            removeCameraTransformKey: () => tj,
            removeKeyFrame: () => sj,
            resetCinematicCameraSequence: () => aj,
            saveCinematicCameraSequence: () => uj,
            selectCloudTarget: () => xj,
            selectedCloudTarget$: () => fj,
            setPlaybackDuration: () => qy,
            setTimelinePosition: () => Qy,
            stopPlayback: () => Zy,
            timelineLength$: () => Wy,
            timelinePosition$: () => Ky,
            toggleCurveEditorFocus: () => cj,
            toggleLoop: () => Yy,
            togglePlayback: () => Jy,
            transformAnimationCurveData$: () => vj,
            useCinematicCameraBindings: () => bj
        });
        var h = {};
        n.r(h), n.d(h, {
            commercialDemand$: () => jj,
            commercialFactors$: () => Pj,
            happiness$: () => Mj,
            happinessFactors$: () => Rj,
            industrialDemand$: () => Sj,
            industrialFactors$: () => Lj,
            officeDemand$: () => Cj,
            officeFactors$: () => Aj,
            residentialHighDemand$: () => yj,
            residentialHighFactors$: () => Oj,
            residentialLowDemand$: () => Ej,
            residentialLowFactors$: () => Nj,
            residentialMediumDemand$: () => Ij,
            residentialMediumFactors$: () => wj
        });
        var g = {};
        n.r(g), n.d(g, {
            WeatherType: () => Dj,
            seasonNameId$: () => Fj,
            temperature$: () => Bj,
            weather$: () => Uj
        });
        var p = {};
        n.r(p), n.d(p, {
            expenseItems$: () => zj,
            expenseValues$: () => Yj,
            getItemValue: () => $j,
            incomeItems$: () => Kj,
            incomeValues$: () => Wj,
            totalExpenses$: () => Hj,
            totalIncome$: () => Vj
        });
        var f = {};
        n.r(f), n.d(f, {
            acceptLoanOffer: () => eS,
            currentLoan$: () => Qj,
            loanLimit$: () => Xj,
            loanOffer$: () => Zj,
            requestLoanOffer: () => Jj,
            resetLoanOffer: () => tS
        });
        var x = {};
        n.r(x), n.d(x, {
            maxProgress$: () => sS,
            resourceCategories$: () => iS,
            resourceData$: () => lS,
            resourceDetails$: () => aS,
            resources$: () => oS,
            services$: () => rS
        });
        var v = {};
        n.r(v), n.d(v, {
            resetService: () => gS,
            serviceDetails$: () => dS,
            services$: () => uS,
            setServiceBudget: () => mS,
            setServiceFee: () => hS
        });
        var _ = {};
        n.r(_), n.d(_, {
            eventMap$: () => fS,
            events$: () => xS,
            onCloseJournal: () => _S,
            onOpenJournal: () => vS
        });
        var b = {};
        n.r(b);
        var T = {};
        n.r(T), n.d(T, {
            LifePathItemType: () => TS,
            followCitizen: () => SS,
            followedCitizens$: () => ES,
            lifePathDetails$: () => IS,
            lifePathItems$: () => yS,
            maxFollowedCitizens$: () => jS,
            unfollowCitizen: () => CS
        });
        var E = {};
        n.r(E), n.d(E, {
            MapTileStatus: () => wS,
            availableWater$: () => AS,
            buildableLand$: () => LS,
            disableMapTileView: () => GS,
            mapTilePanelVisible$: () => OS,
            mapTileViewActive$: () => PS,
            permitCost$: () => US,
            permits$: () => FS,
            purchaseFlags$: () => DS,
            purchaseMapTiles: () => VS,
            purchasePrice$: () => RS,
            purchaseUpkeep$: () => kS,
            resources$: () => MS,
            setMapTileViewActive: () => BS
        });
        var I = {};
        n.r(I), n.d(I, {
            PhotoWidgetType: () => ZS,
            adjustments$: () => sC,
            cinematicCameraVisible$: () => JS,
            group: () => HS,
            orbitCameraActive$: () => YS,
            overlayHidden$: () => WS,
            resetCamera: () => KS,
            root: () => nC,
            selectTab: () => XS,
            selectedTab$: () => tC,
            setOverlayHidden: () => zS,
            tabs$: () => eC,
            takeScreenshot: () => qS,
            toggleCinematicCamera: () => QS,
            toggleOrbitCameraActive: () => $S
        });
        var y = {};
        n.r(y), n.d(y, {
            cityPolicies$: () => aC,
            setCityPolicy: () => rC,
            setPolicy: () => hC
        });
        var j = {};
        n.r(j), n.d(j, {
            CityModifierType: () => cC,
            LeisureType: () => dC,
            LocalModifierType: () => uC,
            PrefabEffectType: () => lC
        });
        var S = {};
        n.r(S), n.d(S, {
            CONSUMPTION_PROPERTY: () => pC,
            ELECTRICITY_PROPERTY: () => vC,
            POLLUTION_PROPERTY: () => fC,
            Pollution: () => gC,
            TRANSPORT_STOP_PROPERTY: () => TC,
            UPKEEPNUMBER2_PROPERTY: () => IC,
            UPKEEPNUMBER_PROPERTY: () => EC,
            Voltage: () => xC
        });
        var C = {};
        n.r(C), n.d(C, {
            AreaType: () => _C,
            PrefabRequirementType: () => bC
        });
        var N = {};
        n.r(N), n.d(N, {
            devPoints$: () => jC,
            nodeDetails$: () => wC,
            nodes$: () => NC,
            purchaseNode: () => LC,
            selectedDevTree$: () => OC,
            selectedNode$: () => PC,
            serviceDetails$: () => CC,
            services$: () => SC
        });
        var w = {};
        n.r(w), n.d(w, {
            isFeatureLocked: () => kC,
            lockedFeatures$: () => AC,
            useFeatureLocked: () => RC,
            useFeatureUnlocking: () => MC
        });
        var O = {};
        n.r(O), n.d(O, {
            MilestoneUnlockType: () => nN,
            achievedMilestone$: () => iN,
            achievedMilestoneXP$: () => aN,
            clearUnlockedMilestone: () => mN,
            defaultMilestoneDetails: () => sN,
            maxMilestoneReached$: () => cN,
            milestoneDetails$: () => hN,
            milestoneUnlocks$: () => gN,
            milestones$: () => uN,
            nextMilestoneXP$: () => oN,
            totalXP$: () => rN,
            unlockDetails$: () => pN,
            unlockedMilestone$: () => dN,
            xpMessageAdded$: () => lN
        });
        var P = {};
        n.r(P), n.d(P, {
            clearUnlockedSignatures: () => vN,
            unlockedSignatures$: () => xN
        });
        var L = {};
        n.r(L), n.d(L, {
            currentSegment$: () => LN,
            emergencyFocusable$: () => SN,
            emergencyMessage$: () => CN,
            emergencyMode$: () => jN,
            focusEmergency: () => HN,
            muted$: () => IN,
            networks$: () => ON,
            paused$: () => EN,
            playNext: () => VN,
            playPrevious: () => GN,
            radioEnabled$: () => bN,
            segmentChanged$: () => AN,
            selectNetwork: () => KN,
            selectStation: () => WN,
            selectedNetwork$: () => NN,
            selectedStation$: () => wN,
            setMuted: () => DN,
            setPaused: () => RN,
            setSkipAds: () => UN,
            setVolume: () => MN,
            skipAds$: () => yN,
            stations$: () => PN,
            toggleMuted: () => FN,
            togglePaused: () => kN,
            toggleSkipAds: () => BN,
            volume$: () => TN
        });
        var A = {};
        n.r(A), n.d(A, {
            DeveloperSubsectionType: () => aw,
            HouseholdSidebarVariant: () => yw,
            LINE_STOP: () => jw,
            LINE_VEHICLE: () => Sw,
            MailSectionType: () => iw,
            Pollution: () => sw,
            SectionType: () => nw,
            UpgradeType: () => ow,
            activeSelection$: () => uw,
            bottomSections$: () => gw,
            clearSelection: () => Iw,
            developerSection$: () => fw,
            householdSidebarSection$: () => vw,
            lineVisualizerSection$: () => xw,
            middleSections$: () => hw,
            selectEntity: () => Tw,
            selectedEntity$: () => rw,
            selectedInfoPosition$: () => dw,
            selectedRoute$: () => bw,
            selectedTrailerController$: () => lw,
            selectedUITag$: () => cw,
            setSelectedRoute: () => Ew,
            titleSection$: () => pw,
            tooltipTags$: () => _w,
            topSections$: () => mw,
            useGeneratedTooltipParagraphs: () => ww,
            useTooltipParagraph: () => Cw,
            useTooltipParagraphs: () => Nw
        });
        var M = {};
        n.r(M), n.d(M, {
            activeCategory$: () => Rw,
            activeGroup$: () => Mw,
            addStat: () => Kw,
            clearStats: () => zw,
            removeStat: () => Ww,
            sampleCount$: () => Aw,
            sampleRange$: () => Lw,
            selectedStatistics$: () => Gw,
            setSampleRange: () => Yw,
            stacked$: () => kw,
            statGroupsMap$: () => Uw,
            statLabels$: () => Fw,
            statUnlockingRequirements$: () => Vw,
            statisticsCategories$: () => Dw,
            statsData$: () => Bw,
            updatesPerDay$: () => Hw
        });
        var R = {};
        n.r(R), n.d(R, {
            areaResourceTaxRanges$: () => iO,
            areaResources$: () => aO,
            areaTaxEffects$: () => sO,
            areaTaxIncomes$: () => nO,
            areaTaxRates$: () => tO,
            areaTypes$: () => eO,
            maxTaxRate: () => Jw,
            minTaxRate: () => Zw,
            resourceTaxIncomes: () => rO,
            resourceTaxRates: () => oO,
            setAreaTaxRate: () => uO,
            setResourceTaxRate: () => dO,
            setTaxRate: () => cO,
            taxEffect: () => Xw,
            taxIncome: () => Qw,
            taxRate: () => qw,
            taxResourceInfos: () => lO
        });
        var k = {};
        n.r(k), n.d(k, {
            LightingState: () => hO,
            calculateDateFromDays: () => jO,
            calculateDateFromTicks: () => SO,
            calculateDateTimeFromTicks: () => CO,
            calculateMinutesSinceMidnightFromTicks: () => NO,
            calculateTimeFromMinutesSinceMidnight: () => yO,
            dateEquals: () => IO,
            day$: () => fO,
            lightingState$: () => xO,
            setSimulationPaused: () => TO,
            setSimulationSpeed: () => EO,
            simulationPaused$: () => vO,
            simulationPausedBarrier$: () => bO,
            simulationSpeed$: () => _O,
            ticks$: () => pO,
            timeSettings$: () => gO
        });
        var D = {};
        n.r(D), n.d(D, {
            AREA_TOOL: () => mP,
            BULLDOZE_TOOL: () => cP,
            DEFAULT_TOOL: () => uP,
            NET_TOOL: () => hP,
            OBJECT_TOOL: () => gP,
            ROUTE_TOOL: () => vP,
            SELECTION_TOOL: () => xP,
            TERRAIN_TOOL: () => fP,
            UPGRADE_TOOL: () => pP,
            ZONE_TOOL: () => dP,
            activeTool$: () => PO,
            allSnapMask$: () => RO,
            allowBrush$: () => _P,
            availableSnapMask$: () => AO,
            brushAngle$: () => CP,
            brushHeight$: () => yP,
            brushHeightMax$: () => SP,
            brushHeightMin$: () => jP,
            brushSize$: () => EP,
            brushSizeMax$: () => wP,
            brushSizeMin$: () => NP,
            brushStrength$: () => IP,
            brushes$: () => TP,
            bulldozeConfirmationRequested$: () => LO,
            changeElevation: () => eP,
            color$: () => $O,
            colorSupported$: () => YO,
            confirmBulldoze: () => JO,
            elevation$: () => FO,
            elevationDown: () => nP,
            elevationDownDisabled$: () => WO,
            elevationRange$: () => DO,
            elevationScroll: () => sP,
            elevationStep$: () => UO,
            elevationUp: () => tP,
            elevationUpDisabled$: () => zO,
            isEditor$: () => qO,
            parallelMode$: () => GO,
            parallelModeSupported$: () => BO,
            parallelOffset$: () => VO,
            selectBrush: () => OP,
            selectTool: () => QO,
            selectToolMode: () => ZO,
            selectedBrush$: () => bP,
            selectedSnapMask$: () => MO,
            setBrushAngle: () => AP,
            setBrushHeight: () => MP,
            setBrushSize: () => PP,
            setBrushStrength: () => LP,
            setColor: () => XO,
            setElevationStep: () => iP,
            setParallelOffset: () => rP,
            setSelectedSnapMask: () => aP,
            setUndergroundMode: () => lP,
            snapOptionNames$: () => kO,
            toggleParallelMode: () => oP,
            undergroundMode$: () => KO,
            undergroundModeSupported$: () => HO
        });
        var F = {};
        n.r(F), n.d(F, {
            AgeMask: () => DP,
            ToolbarItemType: () => kP,
            ageMask$: () => qP,
            assetCategories$: () => UP,
            assetPacks$: () => KP,
            assets$: () => BP,
            clearAssetSelection: () => nL,
            selectAsset: () => tL,
            selectAssetCategory: () => eL,
            selectAssetMenu: () => JP,
            selectedAsset$: () => $P,
            selectedAssetCategory$: () => YP,
            selectedAssetMenu$: () => zP,
            selectedAssetPacks$: () => WP,
            selectedThemes$: () => VP,
            setAgeMask: () => XP,
            setSelectedAssetPacks: () => ZP,
            setSelectedThemes: () => QP,
            themes$: () => GP,
            toggleToolOptions: () => sL,
            toolbarGroups$: () => FP,
            vegetationAges$: () => HP
        });
        var U = {};
        n.r(U), n.d(U, {
            cityName$: () => lL,
            money$: () => oL,
            moneyDelta$: () => rL,
            moneyTrendThresholds$: () => dL,
            population$: () => iL,
            populationDelta$: () => aL,
            populationTrendThresholds$: () => uL,
            setCityName: () => mL,
            unlimitedMoney$: () => cL
        });
        var B = {};
        n.r(B), n.d(B, {
            cargoTypes$: () => pL,
            deleteLine: () => bL,
            hideLine: () => jL,
            passengerTypes$: () => gL,
            renameLine: () => TL,
            resetVisibility: () => CL,
            selectLine: () => _L,
            selectedCargoType$: () => vL,
            selectedPassengerType$: () => xL,
            setLineActive: () => IL,
            setLineColor: () => EL,
            setLineSchedule: () => SL,
            setSelectedCargoType: () => OL,
            setSelectedPassengerType: () => wL,
            showLine: () => yL,
            toggleHighlight: () => NL,
            transportLines$: () => fL
        });
        var G = {};
        n.r(G), n.d(G, {
            clearUpgradeSelection: () => DL,
            selectUpgrade: () => kL,
            selectedUpgrade$: () => ML,
            upgradeDetails$: () => AL,
            upgrades$: () => LL,
            upgrading$: () => RL
        });
        var V = {};
        n.r(V), n.d(V, {
            budget: () => c,
            camera: () => u,
            chirper: () => d,
            cinematic: () => m,
            cityInfo: () => h,
            climate: () => g,
            devTree: () => N,
            economyBudget: () => p,
            event: () => _,
            feature: () => w,
            game: () => r,
            infoview: () => o,
            infoviewTypes: () => b,
            life: () => T,
            loan: () => f,
            map: () => E,
            milestone: () => O,
            photo: () => I,
            policy: () => y,
            prefab: () => a,
            prefabEffects: () => j,
            prefabProperties: () => S,
            prefabRequirements: () => C,
            production: () => x,
            radio: () => L,
            selectedInfo: () => A,
            service: () => v,
            signatureBuilding: () => P,
            statistics: () => M,
            taxation: () => R,
            time: () => k,
            tool: () => D,
            toolbar: () => F,
            toolbarBottom: () => U,
            transport: () => B,
            tutorial: () => i,
            upgrade: () => G
        });
        var H = {};
        n.r(H), n.d(H, {
            entityEquals: () => Ur,
            entityKey: () => Dr,
            formatLargeNumber: () => yu,
            isNullOrEmpty: () => Vr,
            parseEntityKey: () => Fr,
            shallowEqual: () => Kr,
            useCssLength: () => Vm,
            useFormattedLargeNumber: () => ju,
            useMemoizedValue: () => Yr,
            useRem: () => Gm
        });
        var K = {};
        n.r(K), n.d(K, {
            ActionHintLayout: () => Wx,
            ActiveFocusDiv: () => Ip,
            AutoNavigationScope: () => tp,
            BackConsumer: () => Dg,
            ControlIcon: () => jf,
            ControlIcons: () => If,
            EventInputProvider: () => yT,
            ExpandConsumer: () => Ug,
            FOCUS_AUTO: () => yg,
            FOCUS_DISABLED: () => Ig,
            FocusActivation: () => qu,
            FocusBoundary: () => Ah,
            FocusContext: () => Ju,
            FocusControllerBase: () => Sh,
            FocusDisabled: () => Tp,
            FocusKeyOverride: () => ip,
            FocusNode: () => Lh,
            FocusRoot: () => yp,
            FocusScope: () => ap,
            FocusSymbol: () => Eg,
            GamepadAxis: () => Kx,
            GamepadButton: () => Hx,
            GamepadPointerEventProvider: () => ST,
            InputActionBarrier: () => Cp,
            InputActionConsumer: () => Ag,
            InputActionHints: () => Gx,
            InputContext: () => Ng,
            InputControllerImpl: () => Pg,
            InputHint: () => Pf,
            InputStack: () => ET,
            KeyboardInputHint: () => Lf,
            MultiChildFocusController: () => Gg,
            NativeInputProvider: () => NT,
            NavigationDirection: () => Rg,
            NavigationScope: () => Qg,
            PassiveFocusDiv: () => Ep,
            PointerBarrier: () => dT,
            RootInputControllerImpl: () => Lg,
            SelectConsumer: () => kg,
            SelectableFocusBoundary: () => Np,
            defaultInputController: () => Cg,
            disabledFocusController: () => ed,
            focusAnchorBottom: () => $g,
            focusAnchorCenter: () => Wg,
            focusAnchorLeft: () => Yg,
            focusAnchorRight: () => qg,
            focusAnchorTop: () => zg,
            gamepadButtonFromString: () => qx,
            getClosestKey: () => Hg,
            getClosestKeyInDirection: () => Kg,
            getElementFocusPosition: () => Xg,
            inputActionNames$: () => fT,
            navActions: () => Sp,
            onInputActionPerformed$: () => xT,
            onInputActionReleased$: () => vT,
            refocusClosestKey: () => Jg,
            refocusClosestKeyIfNoFocus: () => Zg,
            setInputActionPriority: () => TT,
            transformNavigationInput: () => Vg,
            useElementFocusController: () => hp,
            useEntityFocusChangeListener: () => vp,
            useFocusCallback: () => Ph,
            useFocusChangeListener: () => xp,
            useFocused: () => wh,
            useFocusedRef: () => Oh,
            useGamepadType: () => zx,
            useInputControlIcon: () => wf,
            useInputController: () => Og,
            useKeyFocusController: () => np,
            useKeyboardLayout: () => Yx,
            useLayoutMap: () => $x,
            useMultiChildFocusController: () => Bg,
            usePassThroughFocusController: () => Ch,
            useRootFocusController: () => pp,
            useStringFocusChangeListener: () => _p,
            useUniqueFocusKey: () => jg
        });
        var W = {};
        n.r(W), n.d(W, {
            findModule: () => FL,
            getModule: () => UL
        });
        var z = n(624),
            Y = n(504);
        const $ = new Map;
        let q = {};
        const X = {
            get(e, t) {
                const n = $.get(e);
                if (n && n[t]) return n[t];
                throw `Module ${e}@${t} was not found.`
            },
            add(e, t) {
                if ($.has(e)) throw `Module ${e} was already registered. If you want to override the exports of this module use the override API`;
                $.set(e, t)
            },
            override(e, t, n) {
                const s = $.get(e);
                if (!s) throw `Module ${e} was not found.`;
                q[e] || (q[e] = {}), q[e][t] || (q[e][t] = s[t]), s[t] = n
            },
            extend(e, t, n) {
                const s = $.get(e);
                if (!s) throw `Module ${e} was not found.`;
                if (e.includes(".scss")) {
                    if (!n && "object" != typeof t) throw `Extending ${e} SCSS without callback requires passing single argument with scss module classes.`;
                    if (n) this.override(e, "classes", n(s.classes));
                    else {
                        const n = {
                            ...s.classes
                        };
                        for (const s of Object.keys(t)) n[s] || (n[s] = ""), n[s] += ` ${t[s]}`, this.override(e, "classes", n)
                    }
                } else {
                    if (!n || "function" != typeof n || "string" != typeof t) throw `Extending ${e} requires 2 arguments, name of extended export and extend callback taking current value and returning new`;
                    this.override(e, t, n(s[t]))
                }
            },
            append(e, t, n, s = void 0) {
                const i = "function" == typeof t,
                    a = "function" == typeof n;
                let o, r = i ? "game-ui/modding/modding-hook.tsx" : e,
                    l = i ? "ModdingHook" : t,
                    c = i ? e : void 0,
                    u = a ? s : n;
                i ? o = t : a && (o = n), this.extend(r, l, (e => {
                    const t = t => {
                        if (c && c !== t.name) return (0, z.jsx)(e, {
                            ...t
                        });
                        const {
                            children: n,
                            ...i
                        } = t || {};
                        if ("number" == typeof s && -1 !== u) {
                            const t = Y.Children.count(n);
                            let a = s < 0 ? t + (s + 1) : s;
                            return (0, z.jsxs)(e, {
                                ...i,
                                children: [Y.Children.map(n, ((e, t) => a === t || 0 === t && a < 0 ? (0, z.jsxs)(z.Fragment, {
                                    children: [(0, z.jsx)(o, {}), e]
                                }) : e)), a >= t && (0, z.jsx)(z.Fragment, {
                                    children: (0, z.jsx)(o, {})
                                })]
                            })
                        }
                        return (0, z.jsxs)(e, {
                            ...i,
                            children: [n, (0, z.jsx)(z.Fragment, {
                                children: (0, z.jsx)(o, {})
                            })]
                        })
                    };
                    return t.displayName = `Extended ${l}${i?`:${c}`:""}+`, t
                }))
            },
            registry: $,
            find(e) {
                const t = [];
                for (const [n, s] of $) {
                    const i = [];
                    for (const t in s)(e instanceof RegExp ? e.test(t) : t.includes(e)) && i.push(t);
                    i.length ? t.push([n, ...i]) : (e instanceof RegExp ? e.test(n) : n.includes(e)) && t.push([n, ...Object.keys(s)])
                }
                return t
            },
            reset() {
                for (const e of Object.keys(q))
                    for (const t of Object.keys(q[e])) this.override(e, t, q[e][t])
            }
        };
        var Q = n(352),
            Z = (n(580), n(104));

        function J() {}
        const ee = (() => {
            let e = 0;
            return () => e++
        })();

        function te(e) {
            return null == e
        }

        function ne(e) {
            if (Array.isArray && Array.isArray(e)) return !0;
            const t = Object.prototype.toString.call(e);
            return "[object" === t.slice(0, 7) && "Array]" === t.slice(-6)
        }

        function se(e) {
            return null !== e && "[object Object]" === Object.prototype.toString.call(e)
        }

        function ie(e) {
            return ("number" == typeof e || e instanceof Number) && isFinite(+e)
        }

        function ae(e, t) {
            return ie(e) ? e : t
        }

        function oe(e, t) {
            return void 0 === e ? t : e
        }
        const re = (e, t) => "string" == typeof e && e.endsWith("%") ? parseFloat(e) / 100 * t : +e;

        function le(e, t, n) {
            if (e && "function" == typeof e.call) return e.apply(n, t)
        }

        function ce(e, t, n, s) {
            let i, a, o;
            if (ne(e))
                if (a = e.length, s)
                    for (i = a - 1; i >= 0; i--) t.call(n, e[i], i);
                else
                    for (i = 0; i < a; i++) t.call(n, e[i], i);
            else if (se(e))
                for (o = Object.keys(e), a = o.length, i = 0; i < a; i++) t.call(n, e[o[i]], o[i])
        }

        function ue(e, t) {
            let n, s, i, a;
            if (!e || !t || e.length !== t.length) return !1;
            for (n = 0, s = e.length; n < s; ++n)
                if (i = e[n], a = t[n], i.datasetIndex !== a.datasetIndex || i.index !== a.index) return !1;
            return !0
        }

        function de(e) {
            if (ne(e)) return e.map(de);
            if (se(e)) {
                const t = Object.create(null),
                    n = Object.keys(e),
                    s = n.length;
                let i = 0;
                for (; i < s; ++i) t[n[i]] = de(e[n[i]]);
                return t
            }
            return e
        }

        function me(e) {
            return -1 === ["__proto__", "prototype", "constructor"].indexOf(e)
        }

        function he(e, t, n, s) {
            if (!me(e)) return;
            const i = t[e],
                a = n[e];
            se(i) && se(a) ? ge(i, a, s) : t[e] = de(a)
        }

        function ge(e, t, n) {
            const s = ne(t) ? t : [t],
                i = s.length;
            if (!se(e)) return e;
            const a = (n = n || {}).merger || he;
            let o;
            for (let t = 0; t < i; ++t) {
                if (o = s[t], !se(o)) continue;
                const i = Object.keys(o);
                for (let t = 0, s = i.length; t < s; ++t) a(i[t], e, o, n)
            }
            return e
        }

        function pe(e, t) {
            return ge(e, t, {
                merger: fe
            })
        }

        function fe(e, t, n) {
            if (!me(e)) return;
            const s = t[e],
                i = n[e];
            se(s) && se(i) ? pe(s, i) : Object.prototype.hasOwnProperty.call(t, e) || (t[e] = de(i))
        }
        const xe = {
            "": e => e,
            x: e => e.x,
            y: e => e.y
        };

        function ve(e, t) {
            const n = xe[t] || (xe[t] = function (e) {
                const t = function (e) {
                    const t = e.split("."),
                        n = [];
                    let s = "";
                    for (const e of t) s += e, s.endsWith("\\") ? s = s.slice(0, -1) + "." : (n.push(s), s = "");
                    return n
                }(e);
                return e => {
                    for (const n of t) {
                        if ("" === n) break;
                        e = e && e[n]
                    }
                    return e
                }
            }(t));
            return n(e)
        }

        function _e(e) {
            return e.charAt(0).toUpperCase() + e.slice(1)
        }
        const be = e => void 0 !== e,
            Te = e => "function" == typeof e,
            Ee = (e, t) => {
                if (e.size !== t.size) return !1;
                for (const n of e)
                    if (!t.has(n)) return !1;
                return !0
            };
        const Ie = Math.PI,
            ye = 2 * Ie,
            je = ye + Ie,
            Se = Number.POSITIVE_INFINITY,
            Ce = Ie / 180,
            Ne = Ie / 2,
            we = Ie / 4,
            Oe = 2 * Ie / 3,
            Pe = Math.log10,
            Le = Math.sign;

        function Ae(e, t, n) {
            return Math.abs(e - t) < n
        }

        function Me(e) {
            const t = Math.round(e);
            e = Ae(e, t, e / 1e3) ? t : e;
            const n = Math.pow(10, Math.floor(Pe(e))),
                s = e / n;
            return (s <= 1 ? 1 : s <= 2 ? 2 : s <= 5 ? 5 : 10) * n
        }

        function Re(e) {
            return !isNaN(parseFloat(e)) && isFinite(e)
        }

        function ke(e, t, n) {
            let s, i, a;
            for (s = 0, i = e.length; s < i; s++) a = e[s][n], isNaN(a) || (t.min = Math.min(t.min, a), t.max = Math.max(t.max, a))
        }

        function De(e) {
            return e * (Ie / 180)
        }

        function Fe(e) {
            return e * (180 / Ie)
        }

        function Ue(e) {
            if (!ie(e)) return;
            let t = 1,
                n = 0;
            for (; Math.round(e * t) / t !== e;) t *= 10, n++;
            return n
        }

        function Be(e, t) {
            const n = t.x - e.x,
                s = t.y - e.y,
                i = Math.sqrt(n * n + s * s);
            let a = Math.atan2(s, n);
            return a < -.5 * Ie && (a += ye), {
                angle: a,
                distance: i
            }
        }

        function Ge(e, t) {
            return Math.sqrt(Math.pow(t.x - e.x, 2) + Math.pow(t.y - e.y, 2))
        }

        function Ve(e, t) {
            return (e - t + je) % ye - Ie
        }

        function He(e) {
            return (e % ye + ye) % ye
        }

        function Ke(e, t, n, s) {
            const i = He(e),
                a = He(t),
                o = He(n),
                r = He(a - i),
                l = He(o - i),
                c = He(i - a),
                u = He(i - o);
            return i === a || i === o || s && a === o || r > l && c < u
        }

        function We(e, t, n) {
            return Math.max(t, Math.min(n, e))
        }

        function ze(e, t, n, s = 1e-6) {
            return e >= Math.min(t, n) - s && e <= Math.max(t, n) + s
        }

        function Ye(e, t, n) {
            n = n || (n => e[n] < t);
            let s, i = e.length - 1,
                a = 0;
            for (; i - a > 1;) s = a + i >> 1, n(s) ? a = s : i = s;
            return {
                lo: a,
                hi: i
            }
        }
        const $e = (e, t, n, s) => Ye(e, n, s ? s => {
                const i = e[s][t];
                return i < n || i === n && e[s + 1][t] === n
            } : s => e[s][t] < n),
            qe = (e, t, n) => Ye(e, n, (s => e[s][t] >= n));
        const Xe = ["push", "pop", "shift", "splice", "unshift"];

        function Qe(e, t) {
            const n = e._chartjs;
            if (!n) return;
            const s = n.listeners,
                i = s.indexOf(t); - 1 !== i && s.splice(i, 1), s.length > 0 || (Xe.forEach((t => {
                delete e[t]
            })), delete e._chartjs)
        }

        function Ze(e) {
            const t = new Set;
            let n, s;
            for (n = 0, s = e.length; n < s; ++n) t.add(e[n]);
            return t.size === s ? e : Array.from(t)
        }
        const Je = "undefined" == typeof window ? function (e) {
            return e()
        } : window.requestAnimationFrame;

        function et(e, t) {
            let n = !1;
            return function (...s) {
                n || (n = !0, Je.call(window, (() => {
                    n = !1, e.apply(t, s)
                })))
            }
        }
        const tt = e => "start" === e ? "left" : "end" === e ? "right" : "center",
            nt = (e, t, n) => "start" === e ? t : "end" === e ? n : (t + n) / 2;

        function st(e, t, n) {
            const s = t.length;
            let i = 0,
                a = s;
            if (e._sorted) {
                const {
                    iScale: o,
                    _parsed: r
                } = e, l = o.axis, {
                    min: c,
                    max: u,
                    minDefined: d,
                    maxDefined: m
                } = o.getUserBounds();
                d && (i = We(Math.min($e(r, o.axis, c).lo, n ? s : $e(t, l, o.getPixelForValue(c)).lo), 0, s - 1)), a = m ? We(Math.max($e(r, o.axis, u, !0).hi + 1, n ? 0 : $e(t, l, o.getPixelForValue(u), !0).hi + 1), i, s) - i : s - i
            }
            return {
                start: i,
                count: a
            }
        }

        function it(e) {
            const {
                xScale: t,
                yScale: n,
                _scaleRanges: s
            } = e, i = {
                xmin: t.min,
                xmax: t.max,
                ymin: n.min,
                ymax: n.max
            };
            if (!s) return e._scaleRanges = i, !0;
            const a = s.xmin !== t.min || s.xmax !== t.max || s.ymin !== n.min || s.ymax !== n.max;
            return Object.assign(s, i), a
        }
        const at = e => 0 === e || 1 === e,
            ot = (e, t, n) => -Math.pow(2, 10 * (e -= 1)) * Math.sin((e - t) * ye / n),
            rt = (e, t, n) => Math.pow(2, -10 * e) * Math.sin((e - t) * ye / n) + 1,
            lt = {
                linear: e => e,
                easeInQuad: e => e * e,
                easeOutQuad: e => -e * (e - 2),
                easeInOutQuad: e => (e /= .5) < 1 ? .5 * e * e : -.5 * (--e * (e - 2) - 1),
                easeInCubic: e => e * e * e,
                easeOutCubic: e => (e -= 1) * e * e + 1,
                easeInOutCubic: e => (e /= .5) < 1 ? .5 * e * e * e : .5 * ((e -= 2) * e * e + 2),
                easeInQuart: e => e * e * e * e,
                easeOutQuart: e => -((e -= 1) * e * e * e - 1),
                easeInOutQuart: e => (e /= .5) < 1 ? .5 * e * e * e * e : -.5 * ((e -= 2) * e * e * e - 2),
                easeInQuint: e => e * e * e * e * e,
                easeOutQuint: e => (e -= 1) * e * e * e * e + 1,
                easeInOutQuint: e => (e /= .5) < 1 ? .5 * e * e * e * e * e : .5 * ((e -= 2) * e * e * e * e + 2),
                easeInSine: e => 1 - Math.cos(e * Ne),
                easeOutSine: e => Math.sin(e * Ne),
                easeInOutSine: e => -.5 * (Math.cos(Ie * e) - 1),
                easeInExpo: e => 0 === e ? 0 : Math.pow(2, 10 * (e - 1)),
                easeOutExpo: e => 1 === e ? 1 : 1 - Math.pow(2, -10 * e),
                easeInOutExpo: e => at(e) ? e : e < .5 ? .5 * Math.pow(2, 10 * (2 * e - 1)) : .5 * (2 - Math.pow(2, -10 * (2 * e - 1))),
                easeInCirc: e => e >= 1 ? e : -(Math.sqrt(1 - e * e) - 1),
                easeOutCirc: e => Math.sqrt(1 - (e -= 1) * e),
                easeInOutCirc: e => (e /= .5) < 1 ? -.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1),
                easeInElastic: e => at(e) ? e : ot(e, .075, .3),
                easeOutElastic: e => at(e) ? e : rt(e, .075, .3),
                easeInOutElastic(e) {
                    const t = .1125;
                    return at(e) ? e : e < .5 ? .5 * ot(2 * e, t, .45) : .5 + .5 * rt(2 * e - 1, t, .45)
                },
                easeInBack(e) {
                    const t = 1.70158;
                    return e * e * ((t + 1) * e - t)
                },
                easeOutBack(e) {
                    const t = 1.70158;
                    return (e -= 1) * e * ((t + 1) * e + t) + 1
                },
                easeInOutBack(e) {
                    let t = 1.70158;
                    return (e /= .5) < 1 ? e * e * ((1 + (t *= 1.525)) * e - t) * .5 : .5 * ((e -= 2) * e * ((1 + (t *= 1.525)) * e + t) + 2)
                },
                easeInBounce: e => 1 - lt.easeOutBounce(1 - e),
                easeOutBounce(e) {
                    const t = 7.5625,
                        n = 2.75;
                    return e < 1 / n ? t * e * e : e < 2 / n ? t * (e -= 1.5 / n) * e + .75 : e < 2.5 / n ? t * (e -= 2.25 / n) * e + .9375 : t * (e -= 2.625 / n) * e + .984375
                },
                easeInOutBounce: e => e < .5 ? .5 * lt.easeInBounce(2 * e) : .5 * lt.easeOutBounce(2 * e - 1) + .5
            };
        var ct = lt;

        function ut(e) {
            return e + .5 | 0
        }
        const dt = (e, t, n) => Math.max(Math.min(e, n), t);

        function mt(e) {
            return dt(ut(2.55 * e), 0, 255)
        }

        function ht(e) {
            return dt(ut(255 * e), 0, 255)
        }

        function gt(e) {
            return dt(ut(e / 2.55) / 100, 0, 1)
        }

        function pt(e) {
            return dt(ut(100 * e), 0, 100)
        }
        const ft = {
                0: 0,
                1: 1,
                2: 2,
                3: 3,
                4: 4,
                5: 5,
                6: 6,
                7: 7,
                8: 8,
                9: 9,
                A: 10,
                B: 11,
                C: 12,
                D: 13,
                E: 14,
                F: 15,
                a: 10,
                b: 11,
                c: 12,
                d: 13,
                e: 14,
                f: 15
            },
            xt = [..."0123456789ABCDEF"],
            vt = e => xt[15 & e],
            _t = e => xt[(240 & e) >> 4] + xt[15 & e],
            bt = e => (240 & e) >> 4 == (15 & e);

        function Tt(e) {
            var t = (e => bt(e.r) && bt(e.g) && bt(e.b) && bt(e.a))(e) ? vt : _t;
            return e ? "#" + t(e.r) + t(e.g) + t(e.b) + ((e, t) => e < 255 ? t(e) : "")(e.a, t) : void 0
        }
        const Et = /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;

        function It(e, t, n) {
            const s = t * Math.min(n, 1 - n),
                i = (t, i = (t + e / 30) % 12) => n - s * Math.max(Math.min(i - 3, 9 - i, 1), -1);
            return [i(0), i(8), i(4)]
        }

        function yt(e, t, n) {
            const s = (s, i = (s + e / 60) % 6) => n - n * t * Math.max(Math.min(i, 4 - i, 1), 0);
            return [s(5), s(3), s(1)]
        }

        function jt(e, t, n) {
            const s = It(e, 1, .5);
            let i;
            for (t + n > 1 && (i = 1 / (t + n), t *= i, n *= i), i = 0; i < 3; i++) s[i] *= 1 - t - n, s[i] += t;
            return s
        }

        function St(e) {
            const t = e.r / 255,
                n = e.g / 255,
                s = e.b / 255,
                i = Math.max(t, n, s),
                a = Math.min(t, n, s),
                o = (i + a) / 2;
            let r, l, c;
            return i !== a && (c = i - a, l = o > .5 ? c / (2 - i - a) : c / (i + a), r = function (e, t, n, s, i) {
                return e === i ? (t - n) / s + (t < n ? 6 : 0) : t === i ? (n - e) / s + 2 : (e - t) / s + 4
            }(t, n, s, c, i), r = 60 * r + .5), [0 | r, l || 0, o]
        }

        function Ct(e, t, n, s) {
            return (Array.isArray(t) ? e(t[0], t[1], t[2]) : e(t, n, s)).map(ht)
        }

        function Nt(e, t, n) {
            return Ct(It, e, t, n)
        }

        function wt(e) {
            return (e % 360 + 360) % 360
        }

        function Ot(e) {
            const t = Et.exec(e);
            let n, s = 255;
            if (!t) return;
            t[5] !== n && (s = t[6] ? mt(+t[5]) : ht(+t[5]));
            const i = wt(+t[2]),
                a = +t[3] / 100,
                o = +t[4] / 100;
            return n = "hwb" === t[1] ? function (e, t, n) {
                return Ct(jt, e, t, n)
            }(i, a, o) : "hsv" === t[1] ? function (e, t, n) {
                return Ct(yt, e, t, n)
            }(i, a, o) : Nt(i, a, o), {
                r: n[0],
                g: n[1],
                b: n[2],
                a: s
            }
        }
        const Pt = {
                x: "dark",
                Z: "light",
                Y: "re",
                X: "blu",
                W: "gr",
                V: "medium",
                U: "slate",
                A: "ee",
                T: "ol",
                S: "or",
                B: "ra",
                C: "lateg",
                D: "ights",
                R: "in",
                Q: "turquois",
                E: "hi",
                P: "ro",
                O: "al",
                N: "le",
                M: "de",
                L: "yello",
                F: "en",
                K: "ch",
                G: "arks",
                H: "ea",
                I: "ightg",
                J: "wh"
            },
            Lt = {
                OiceXe: "f0f8ff",
                antiquewEte: "faebd7",
                aqua: "ffff",
                aquamarRe: "7fffd4",
                azuY: "f0ffff",
                beige: "f5f5dc",
                bisque: "ffe4c4",
                black: "0",
                blanKedOmond: "ffebcd",
                Xe: "ff",
                XeviTet: "8a2be2",
                bPwn: "a52a2a",
                burlywood: "deb887",
                caMtXe: "5f9ea0",
                KartYuse: "7fff00",
                KocTate: "d2691e",
                cSO: "ff7f50",
                cSnflowerXe: "6495ed",
                cSnsilk: "fff8dc",
                crimson: "dc143c",
                cyan: "ffff",
                xXe: "8b",
                xcyan: "8b8b",
                xgTMnPd: "b8860b",
                xWay: "a9a9a9",
                xgYF: "6400",
                xgYy: "a9a9a9",
                xkhaki: "bdb76b",
                xmagFta: "8b008b",
                xTivegYF: "556b2f",
                xSange: "ff8c00",
                xScEd: "9932cc",
                xYd: "8b0000",
                xsOmon: "e9967a",
                xsHgYF: "8fbc8f",
                xUXe: "483d8b",
                xUWay: "2f4f4f",
                xUgYy: "2f4f4f",
                xQe: "ced1",
                xviTet: "9400d3",
                dAppRk: "ff1493",
                dApskyXe: "bfff",
                dimWay: "696969",
                dimgYy: "696969",
                dodgerXe: "1e90ff",
                fiYbrick: "b22222",
                flSOwEte: "fffaf0",
                foYstWAn: "228b22",
                fuKsia: "ff00ff",
                gaRsbSo: "dcdcdc",
                ghostwEte: "f8f8ff",
                gTd: "ffd700",
                gTMnPd: "daa520",
                Way: "808080",
                gYF: "8000",
                gYFLw: "adff2f",
                gYy: "808080",
                honeyMw: "f0fff0",
                hotpRk: "ff69b4",
                RdianYd: "cd5c5c",
                Rdigo: "4b0082",
                ivSy: "fffff0",
                khaki: "f0e68c",
                lavFMr: "e6e6fa",
                lavFMrXsh: "fff0f5",
                lawngYF: "7cfc00",
                NmoncEffon: "fffacd",
                ZXe: "add8e6",
                ZcSO: "f08080",
                Zcyan: "e0ffff",
                ZgTMnPdLw: "fafad2",
                ZWay: "d3d3d3",
                ZgYF: "90ee90",
                ZgYy: "d3d3d3",
                ZpRk: "ffb6c1",
                ZsOmon: "ffa07a",
                ZsHgYF: "20b2aa",
                ZskyXe: "87cefa",
                ZUWay: "778899",
                ZUgYy: "778899",
                ZstAlXe: "b0c4de",
                ZLw: "ffffe0",
                lime: "ff00",
                limegYF: "32cd32",
                lRF: "faf0e6",
                magFta: "ff00ff",
                maPon: "800000",
                VaquamarRe: "66cdaa",
                VXe: "cd",
                VScEd: "ba55d3",
                VpurpN: "9370db",
                VsHgYF: "3cb371",
                VUXe: "7b68ee",
                VsprRggYF: "fa9a",
                VQe: "48d1cc",
                VviTetYd: "c71585",
                midnightXe: "191970",
                mRtcYam: "f5fffa",
                mistyPse: "ffe4e1",
                moccasR: "ffe4b5",
                navajowEte: "ffdead",
                navy: "80",
                Tdlace: "fdf5e6",
                Tive: "808000",
                TivedBb: "6b8e23",
                Sange: "ffa500",
                SangeYd: "ff4500",
                ScEd: "da70d6",
                pOegTMnPd: "eee8aa",
                pOegYF: "98fb98",
                pOeQe: "afeeee",
                pOeviTetYd: "db7093",
                papayawEp: "ffefd5",
                pHKpuff: "ffdab9",
                peru: "cd853f",
                pRk: "ffc0cb",
                plum: "dda0dd",
                powMrXe: "b0e0e6",
                purpN: "800080",
                YbeccapurpN: "663399",
                Yd: "ff0000",
                Psybrown: "bc8f8f",
                PyOXe: "4169e1",
                saddNbPwn: "8b4513",
                sOmon: "fa8072",
                sandybPwn: "f4a460",
                sHgYF: "2e8b57",
                sHshell: "fff5ee",
                siFna: "a0522d",
                silver: "c0c0c0",
                skyXe: "87ceeb",
                UXe: "6a5acd",
                UWay: "708090",
                UgYy: "708090",
                snow: "fffafa",
                sprRggYF: "ff7f",
                stAlXe: "4682b4",
                tan: "d2b48c",
                teO: "8080",
                tEstN: "d8bfd8",
                tomato: "ff6347",
                Qe: "40e0d0",
                viTet: "ee82ee",
                JHt: "f5deb3",
                wEte: "ffffff",
                wEtesmoke: "f5f5f5",
                Lw: "ffff00",
                LwgYF: "9acd32"
            };
        let At;

        function Mt(e) {
            At || (At = function () {
                const e = {},
                    t = Object.keys(Lt),
                    n = Object.keys(Pt);
                let s, i, a, o, r;
                for (s = 0; s < t.length; s++) {
                    for (o = r = t[s], i = 0; i < n.length; i++) a = n[i], r = r.replace(a, Pt[a]);
                    a = parseInt(Lt[o], 16), e[r] = [a >> 16 & 255, a >> 8 & 255, 255 & a]
                }
                return e
            }(), At.transparent = [0, 0, 0, 0]);
            const t = At[e.toLowerCase()];
            return t && {
                r: t[0],
                g: t[1],
                b: t[2],
                a: 4 === t.length ? t[3] : 255
            }
        }
        const Rt = /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
        const kt = e => e <= .0031308 ? 12.92 * e : 1.055 * Math.pow(e, 1 / 2.4) - .055,
            Dt = e => e <= .04045 ? e / 12.92 : Math.pow((e + .055) / 1.055, 2.4);

        function Ft(e, t, n) {
            if (e) {
                let s = St(e);
                s[t] = Math.max(0, Math.min(s[t] + s[t] * n, 0 === t ? 360 : 1)), s = Nt(s), e.r = s[0], e.g = s[1], e.b = s[2]
            }
        }

        function Ut(e, t) {
            return e ? Object.assign(t || {}, e) : e
        }

        function Bt(e) {
            var t = {
                r: 0,
                g: 0,
                b: 0,
                a: 255
            };
            return Array.isArray(e) ? e.length >= 3 && (t = {
                r: e[0],
                g: e[1],
                b: e[2],
                a: 255
            }, e.length > 3 && (t.a = ht(e[3]))) : (t = Ut(e, {
                r: 0,
                g: 0,
                b: 0,
                a: 1
            })).a = ht(t.a), t
        }

        function Gt(e) {
            return "r" === e.charAt(0) ? function (e) {
                const t = Rt.exec(e);
                let n, s, i, a = 255;
                if (t) {
                    if (t[7] !== n) {
                        const e = +t[7];
                        a = t[8] ? mt(e) : dt(255 * e, 0, 255)
                    }
                    return n = +t[1], s = +t[3], i = +t[5], n = 255 & (t[2] ? mt(n) : dt(n, 0, 255)), s = 255 & (t[4] ? mt(s) : dt(s, 0, 255)), i = 255 & (t[6] ? mt(i) : dt(i, 0, 255)), {
                        r: n,
                        g: s,
                        b: i,
                        a
                    }
                }
            }(e) : Ot(e)
        }
        class Vt {
            constructor(e) {
                if (e instanceof Vt) return e;
                const t = typeof e;
                let n;
                var s, i, a;
                "object" === t ? n = Bt(e) : "string" === t && (a = (s = e).length, "#" === s[0] && (4 === a || 5 === a ? i = {
                    r: 255 & 17 * ft[s[1]],
                    g: 255 & 17 * ft[s[2]],
                    b: 255 & 17 * ft[s[3]],
                    a: 5 === a ? 17 * ft[s[4]] : 255
                } : 7 !== a && 9 !== a || (i = {
                    r: ft[s[1]] << 4 | ft[s[2]],
                    g: ft[s[3]] << 4 | ft[s[4]],
                    b: ft[s[5]] << 4 | ft[s[6]],
                    a: 9 === a ? ft[s[7]] << 4 | ft[s[8]] : 255
                })), n = i || Mt(e) || Gt(e)), this._rgb = n, this._valid = !!n
            }
            get valid() {
                return this._valid
            }
            get rgb() {
                var e = Ut(this._rgb);
                return e && (e.a = gt(e.a)), e
            }
            set rgb(e) {
                this._rgb = Bt(e)
            }
            rgbString() {
                return this._valid ? (e = this._rgb) && (e.a < 255 ? `rgba(${e.r}, ${e.g}, ${e.b}, ${gt(e.a)})` : `rgb(${e.r}, ${e.g}, ${e.b})`) : void 0;
                var e
            }
            hexString() {
                return this._valid ? Tt(this._rgb) : void 0
            }
            hslString() {
                return this._valid ? function (e) {
                    if (!e) return;
                    const t = St(e),
                        n = t[0],
                        s = pt(t[1]),
                        i = pt(t[2]);
                    return e.a < 255 ? `hsla(${n}, ${s}%, ${i}%, ${gt(e.a)})` : `hsl(${n}, ${s}%, ${i}%)`
                }(this._rgb) : void 0
            }
            mix(e, t) {
                if (e) {
                    const n = this.rgb,
                        s = e.rgb;
                    let i;
                    const a = t === i ? .5 : t,
                        o = 2 * a - 1,
                        r = n.a - s.a,
                        l = ((o * r == -1 ? o : (o + r) / (1 + o * r)) + 1) / 2;
                    i = 1 - l, n.r = 255 & l * n.r + i * s.r + .5, n.g = 255 & l * n.g + i * s.g + .5, n.b = 255 & l * n.b + i * s.b + .5, n.a = a * n.a + (1 - a) * s.a, this.rgb = n
                }
                return this
            }
            interpolate(e, t) {
                return e && (this._rgb = function (e, t, n) {
                    const s = Dt(gt(e.r)),
                        i = Dt(gt(e.g)),
                        a = Dt(gt(e.b));
                    return {
                        r: ht(kt(s + n * (Dt(gt(t.r)) - s))),
                        g: ht(kt(i + n * (Dt(gt(t.g)) - i))),
                        b: ht(kt(a + n * (Dt(gt(t.b)) - a))),
                        a: e.a + n * (t.a - e.a)
                    }
                }(this._rgb, e._rgb, t)), this
            }
            clone() {
                return new Vt(this.rgb)
            }
            alpha(e) {
                return this._rgb.a = ht(e), this
            }
            clearer(e) {
                return this._rgb.a *= 1 - e, this
            }
            greyscale() {
                const e = this._rgb,
                    t = ut(.3 * e.r + .59 * e.g + .11 * e.b);
                return e.r = e.g = e.b = t, this
            }
            opaquer(e) {
                return this._rgb.a *= 1 + e, this
            }
            negate() {
                const e = this._rgb;
                return e.r = 255 - e.r, e.g = 255 - e.g, e.b = 255 - e.b, this
            }
            lighten(e) {
                return Ft(this._rgb, 2, e), this
            }
            darken(e) {
                return Ft(this._rgb, 2, -e), this
            }
            saturate(e) {
                return Ft(this._rgb, 1, e), this
            }
            desaturate(e) {
                return Ft(this._rgb, 1, -e), this
            }
            rotate(e) {
                return function (e, t) {
                    var n = St(e);
                    n[0] = wt(n[0] + t), n = Nt(n), e.r = n[0], e.g = n[1], e.b = n[2]
                }(this._rgb, e), this
            }
        }

        function Ht(e) {
            return new Vt(e)
        }

        function Kt(e) {
            if (e && "object" == typeof e) {
                const t = e.toString();
                return "[object CanvasPattern]" === t || "[object CanvasGradient]" === t
            }
            return !1
        }

        function Wt(e) {
            return Kt(e) ? e : Ht(e)
        }

        function zt(e) {
            return Kt(e) ? e : Ht(e).saturate(.5).darken(.1).hexString()
        }
        const Yt = ["x", "y", "borderWidth", "radius", "tension"],
            $t = ["color", "borderColor", "backgroundColor"];
        const qt = new Map;

        function Xt(e, t, n) {
            return function (e, t) {
                t = t || {};
                const n = e + JSON.stringify(t);
                let s = qt.get(n);
                return s || (s = new Intl.NumberFormat(e, t), qt.set(n, s)), s
            }(t, n).format(e)
        }
        const Qt = {
            values: e => ne(e) ? e : "" + e,
            numeric(e, t, n) {
                if (0 === e) return "0";
                const s = this.chart.options.locale;
                let i, a = e;
                if (n.length > 1) {
                    const t = Math.max(Math.abs(n[0].value), Math.abs(n[n.length - 1].value));
                    (t < 1e-4 || t > 1e15) && (i = "scientific"), a = function (e, t) {
                        let n = t.length > 3 ? t[2].value - t[1].value : t[1].value - t[0].value;
                        Math.abs(n) >= 1 && e !== Math.floor(e) && (n = e - Math.floor(e));
                        return n
                    }(e, n)
                }
                const o = Pe(Math.abs(a)),
                    r = Math.max(Math.min(-1 * Math.floor(o), 20), 0),
                    l = {
                        notation: i,
                        minimumFractionDigits: r,
                        maximumFractionDigits: r
                    };
                return Object.assign(l, this.options.ticks.format), Xt(e, s, l)
            },
            logarithmic(e, t, n) {
                if (0 === e) return "0";
                const s = n[t].significand || e / Math.pow(10, Math.floor(Pe(e)));
                return [1, 2, 3, 5, 10, 15].includes(s) || t > .8 * n.length ? Qt.numeric.call(this, e, t, n) : ""
            }
        };
        var Zt = {
            formatters: Qt
        };
        const Jt = Object.create(null),
            en = Object.create(null);

        function tn(e, t) {
            if (!t) return e;
            const n = t.split(".");
            for (let t = 0, s = n.length; t < s; ++t) {
                const s = n[t];
                e = e[s] || (e[s] = Object.create(null))
            }
            return e
        }

        function nn(e, t, n) {
            return "string" == typeof t ? ge(tn(e, t), n) : ge(tn(e, ""), t)
        }
        class sn {
            constructor(e, t) {
                this.animation = void 0, this.backgroundColor = "rgba(0,0,0,0.1)", this.borderColor = "rgba(0,0,0,0.1)", this.color = "#666", this.datasets = {}, this.devicePixelRatio = e => e.chart.platform.getDevicePixelRatio(), this.elements = {}, this.events = ["mousemove", "mouseout", "click", "touchstart", "touchmove"], this.font = {
                    family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
                    size: 12,
                    style: "normal",
                    lineHeight: 1.2,
                    weight: null
                }, this.hover = {}, this.hoverBackgroundColor = (e, t) => zt(t.backgroundColor), this.hoverBorderColor = (e, t) => zt(t.borderColor), this.hoverColor = (e, t) => zt(t.color), this.indexAxis = "x", this.interaction = {
                    mode: "nearest",
                    intersect: !0,
                    includeInvisible: !1
                }, this.maintainAspectRatio = !0, this.onHover = null, this.onClick = null, this.parsing = !0, this.plugins = {}, this.responsive = !0, this.scale = void 0, this.scales = {}, this.showLine = !0, this.drawActiveElementsOnTop = !0, this.describe(e), this.apply(t)
            }
            set(e, t) {
                return nn(this, e, t)
            }
            get(e) {
                return tn(this, e)
            }
            describe(e, t) {
                return nn(en, e, t)
            }
            override(e, t) {
                return nn(Jt, e, t)
            }
            route(e, t, n, s) {
                const i = tn(this, e),
                    a = tn(this, n),
                    o = "_" + t;
                Object.defineProperties(i, {
                    [o]: {
                        value: i[t],
                        writable: !0
                    },
                    [t]: {
                        enumerable: !0,
                        get() {
                            const e = this[o],
                                t = a[s];
                            return se(e) ? Object.assign({}, t, e) : oe(e, t)
                        },
                        set(e) {
                            this[o] = e
                        }
                    }
                })
            }
            apply(e) {
                e.forEach((e => e(this)))
            }
        }
        var an = new sn({
            _scriptable: e => !e.startsWith("on"),
            _indexable: e => "events" !== e,
            hover: {
                _fallback: "interaction"
            },
            interaction: {
                _scriptable: !1,
                _indexable: !1
            }
        }, [function (e) {
            e.set("animation", {
                delay: void 0,
                duration: 1e3,
                easing: "easeOutQuart",
                fn: void 0,
                from: void 0,
                loop: void 0,
                to: void 0,
                type: void 0
            }), e.describe("animation", {
                _fallback: !1,
                _indexable: !1,
                _scriptable: e => "onProgress" !== e && "onComplete" !== e && "fn" !== e
            }), e.set("animations", {
                colors: {
                    type: "color",
                    properties: $t
                },
                numbers: {
                    type: "number",
                    properties: Yt
                }
            }), e.describe("animations", {
                _fallback: "animation"
            }), e.set("transitions", {
                active: {
                    animation: {
                        duration: 400
                    }
                },
                resize: {
                    animation: {
                        duration: 0
                    }
                },
                show: {
                    animations: {
                        colors: {
                            from: "transparent"
                        },
                        visible: {
                            type: "boolean",
                            duration: 0
                        }
                    }
                },
                hide: {
                    animations: {
                        colors: {
                            to: "transparent"
                        },
                        visible: {
                            type: "boolean",
                            easing: "linear",
                            fn: e => 0 | e
                        }
                    }
                }
            })
        }, function (e) {
            e.set("layout", {
                autoPadding: !0,
                padding: {
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0
                }
            })
        }, function (e) {
            e.set("scale", {
                display: !0,
                offset: !1,
                reverse: !1,
                beginAtZero: !1,
                bounds: "ticks",
                grace: 0,
                grid: {
                    display: !0,
                    lineWidth: 1,
                    drawOnChartArea: !0,
                    drawTicks: !0,
                    tickLength: 8,
                    tickWidth: (e, t) => t.lineWidth,
                    tickColor: (e, t) => t.color,
                    offset: !1
                },
                border: {
                    display: !0,
                    dash: [],
                    dashOffset: 0,
                    width: 1
                },
                title: {
                    display: !1,
                    text: "",
                    padding: {
                        top: 4,
                        bottom: 4
                    }
                },
                ticks: {
                    minRotation: 0,
                    maxRotation: 50,
                    mirror: !1,
                    textStrokeWidth: 0,
                    textStrokeColor: "",
                    padding: 3,
                    display: !0,
                    autoSkip: !0,
                    autoSkipPadding: 3,
                    labelOffset: 0,
                    callback: Zt.formatters.values,
                    minor: {},
                    major: {},
                    align: "center",
                    crossAlign: "near",
                    showLabelBackdrop: !1,
                    backdropColor: "rgba(255, 255, 255, 0.75)",
                    backdropPadding: 2
                }
            }), e.route("scale.ticks", "color", "", "color"), e.route("scale.grid", "color", "", "borderColor"), e.route("scale.border", "color", "", "borderColor"), e.route("scale.title", "color", "", "color"), e.describe("scale", {
                _fallback: !1,
                _scriptable: e => !e.startsWith("before") && !e.startsWith("after") && "callback" !== e && "parser" !== e,
                _indexable: e => "borderDash" !== e && "tickBorderDash" !== e && "dash" !== e
            }), e.describe("scales", {
                _fallback: "scale"
            }), e.describe("scale.ticks", {
                _scriptable: e => "backdropPadding" !== e && "callback" !== e,
                _indexable: e => "backdropPadding" !== e
            })
        }]);

        function on(e, t, n, s, i) {
            let a = t[i];
            return a || (a = t[i] = e.measureText(i).width, n.push(i)), a > s && (s = a), s
        }

        function rn(e, t, n, s) {
            let i = (s = s || {}).data = s.data || {},
                a = s.garbageCollect = s.garbageCollect || [];
            s.font !== t && (i = s.data = {}, a = s.garbageCollect = [], s.font = t), e.save(), e.font = t;
            let o = 0;
            const r = n.length;
            let l, c, u, d, m;
            for (l = 0; l < r; l++)
                if (d = n[l], null != d && !0 !== ne(d)) o = on(e, i, a, o, d);
                else if (ne(d))
                for (c = 0, u = d.length; c < u; c++) m = d[c], null == m || ne(m) || (o = on(e, i, a, o, m));
            e.restore();
            const h = a.length / 2;
            if (h > n.length) {
                for (l = 0; l < h; l++) delete i[a[l]];
                a.splice(0, h)
            }
            return o
        }

        function ln(e, t, n) {
            const s = e.currentDevicePixelRatio,
                i = 0 !== n ? Math.max(n / 2, .5) : 0;
            return Math.round((t - i) * s) / s + i
        }

        function cn(e, t) {
            (t = t || e.getContext("2d")).save(), t.resetTransform(), t.clearRect(0, 0, e.width, e.height), t.restore()
        }

        function un(e, t, n, s) {
            dn(e, t, n, s, null)
        }

        function dn(e, t, n, s, i) {
            let a, o, r, l, c, u, d, m;
            const h = t.pointStyle,
                g = t.rotation,
                p = t.radius;
            let f = (g || 0) * Ce;
            if (h && "object" == typeof h && (a = h.toString(), "[object HTMLImageElement]" === a || "[object HTMLCanvasElement]" === a)) return e.save(), e.translate(n, s), e.rotate(f), e.drawImage(h, -h.width / 2, -h.height / 2, h.width, h.height), void e.restore();
            if (!(isNaN(p) || p <= 0)) {
                switch (e.beginPath(), h) {
                default:
                    i ? e.ellipse(n, s, i / 2, p, 0, 0, ye) : e.arc(n, s, p, 0, ye), e.closePath();
                    break;
                case "triangle":
                    u = i ? i / 2 : p, e.moveTo(n + Math.sin(f) * u, s - Math.cos(f) * p), f += Oe, e.lineTo(n + Math.sin(f) * u, s - Math.cos(f) * p), f += Oe, e.lineTo(n + Math.sin(f) * u, s - Math.cos(f) * p), e.closePath();
                    break;
                case "rectRounded":
                    c = .516 * p, l = p - c, o = Math.cos(f + we) * l, d = Math.cos(f + we) * (i ? i / 2 - c : l), r = Math.sin(f + we) * l, m = Math.sin(f + we) * (i ? i / 2 - c : l), e.arc(n - d, s - r, c, f - Ie, f - Ne), e.arc(n + m, s - o, c, f - Ne, f), e.arc(n + d, s + r, c, f, f + Ne), e.arc(n - m, s + o, c, f + Ne, f + Ie), e.closePath();
                    break;
                case "rect":
                    if (!g) {
                        l = Math.SQRT1_2 * p, u = i ? i / 2 : l, e.rect(n - u, s - l, 2 * u, 2 * l);
                        break
                    }
                    f += we;
                case "rectRot":
                    d = Math.cos(f) * (i ? i / 2 : p), o = Math.cos(f) * p, r = Math.sin(f) * p, m = Math.sin(f) * (i ? i / 2 : p), e.moveTo(n - d, s - r), e.lineTo(n + m, s - o), e.lineTo(n + d, s + r), e.lineTo(n - m, s + o), e.closePath();
                    break;
                case "crossRot":
                    f += we;
                case "cross":
                    d = Math.cos(f) * (i ? i / 2 : p), o = Math.cos(f) * p, r = Math.sin(f) * p, m = Math.sin(f) * (i ? i / 2 : p), e.moveTo(n - d, s - r), e.lineTo(n + d, s + r), e.moveTo(n + m, s - o), e.lineTo(n - m, s + o);
                    break;
                case "star":
                    d = Math.cos(f) * (i ? i / 2 : p), o = Math.cos(f) * p, r = Math.sin(f) * p, m = Math.sin(f) * (i ? i / 2 : p), e.moveTo(n - d, s - r), e.lineTo(n + d, s + r), e.moveTo(n + m, s - o), e.lineTo(n - m, s + o), f += we, d = Math.cos(f) * (i ? i / 2 : p), o = Math.cos(f) * p, r = Math.sin(f) * p, m = Math.sin(f) * (i ? i / 2 : p), e.moveTo(n - d, s - r), e.lineTo(n + d, s + r), e.moveTo(n + m, s - o), e.lineTo(n - m, s + o);
                    break;
                case "line":
                    o = i ? i / 2 : Math.cos(f) * p, r = Math.sin(f) * p, e.moveTo(n - o, s - r), e.lineTo(n + o, s + r);
                    break;
                case "dash":
                    e.moveTo(n, s), e.lineTo(n + Math.cos(f) * (i ? i / 2 : p), s + Math.sin(f) * p)
                }
                e.fill(), t.borderWidth > 0 && e.stroke()
            }
        }

        function mn(e, t, n) {
            return n = n || .5, !t || e && e.x > t.left - n && e.x < t.right + n && e.y > t.top - n && e.y < t.bottom + n
        }

        function hn(e, t) {
            e.save(), e.beginPath(), e.rect(t.left, t.top, t.right - t.left, t.bottom - t.top), e.clip()
        }

        function gn(e) {
            e.restore()
        }

        function pn(e, t, n, s, i) {
            if (!t) return e.lineTo(n.x, n.y);
            if ("middle" === i) {
                const s = (t.x + n.x) / 2;
                e.lineTo(s, t.y), e.lineTo(s, n.y)
            } else "after" === i != !!s ? e.lineTo(t.x, n.y) : e.lineTo(n.x, t.y);
            e.lineTo(n.x, n.y)
        }

        function fn(e, t, n, s) {
            if (!t) return e.lineTo(n.x, n.y);
            e.bezierCurveTo(s ? t.cp1x : t.cp2x, s ? t.cp1y : t.cp2y, s ? n.cp2x : n.cp1x, s ? n.cp2y : n.cp1y, n.x, n.y)
        }

        function xn(e, t, n, s, i, a = {}) {
            const o = ne(t) ? t : [t],
                r = a.strokeWidth > 0 && "" !== a.strokeColor;
            let l, c;
            for (e.save(), e.font = i.string, function (e, t) {
                    t.translation && e.translate(t.translation[0], t.translation[1]);
                    te(t.rotation) || e.rotate(t.rotation);
                    t.color && (e.fillStyle = t.color);
                    t.textAlign && (e.textAlign = t.textAlign);
                    t.textBaseline && (e.textBaseline = t.textBaseline)
                }(e, a), l = 0; l < o.length; ++l) c = o[l], a.backdrop && _n(e, a.backdrop), r && (a.strokeColor && (e.strokeStyle = a.strokeColor), te(a.strokeWidth) || (e.lineWidth = a.strokeWidth), e.strokeText(c, n, s, a.maxWidth)), e.fillText(c, n, s, a.maxWidth), vn(e, n, s, c, a), s += i.lineHeight;
            e.restore()
        }

        function vn(e, t, n, s, i) {
            if (i.strikethrough || i.underline) {
                const a = e.measureText(s),
                    o = t - a.actualBoundingBoxLeft,
                    r = t + a.actualBoundingBoxRight,
                    l = n - a.actualBoundingBoxAscent,
                    c = n + a.actualBoundingBoxDescent,
                    u = i.strikethrough ? (l + c) / 2 : c;
                e.strokeStyle = e.fillStyle, e.beginPath(), e.lineWidth = i.decorationWidth || 2, e.moveTo(o, u), e.lineTo(r, u), e.stroke()
            }
        }

        function _n(e, t) {
            const n = e.fillStyle;
            e.fillStyle = t.color, e.fillRect(t.left, t.top, t.width, t.height), e.fillStyle = n
        }

        function bn(e, t) {
            const {
                x: n,
                y: s,
                w: i,
                h: a,
                radius: o
            } = t;
            e.arc(n + o.topLeft, s + o.topLeft, o.topLeft, -Ne, Ie, !0), e.lineTo(n, s + a - o.bottomLeft), e.arc(n + o.bottomLeft, s + a - o.bottomLeft, o.bottomLeft, Ie, Ne, !0), e.lineTo(n + i - o.bottomRight, s + a), e.arc(n + i - o.bottomRight, s + a - o.bottomRight, o.bottomRight, Ne, 0, !0), e.lineTo(n + i, s + o.topRight), e.arc(n + i - o.topRight, s + o.topRight, o.topRight, 0, -Ne, !0), e.lineTo(n + o.topLeft, s)
        }
        const Tn = /^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/,
            En = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;

        function In(e, t) {
            const n = ("" + e).match(Tn);
            if (!n || "normal" === n[1]) return 1.2 * t;
            switch (e = +n[2], n[3]) {
            case "px":
                return e;
            case "%":
                e /= 100
            }
            return t * e
        }
        const yn = e => +e || 0;

        function jn(e, t) {
            const n = {},
                s = se(t),
                i = s ? Object.keys(t) : t,
                a = se(e) ? s ? n => oe(e[n], e[t[n]]) : t => e[t] : () => e;
            for (const e of i) n[e] = yn(a(e));
            return n
        }

        function Sn(e) {
            return jn(e, {
                top: "y",
                right: "x",
                bottom: "y",
                left: "x"
            })
        }

        function Cn(e) {
            return jn(e, ["topLeft", "topRight", "bottomLeft", "bottomRight"])
        }

        function Nn(e) {
            const t = Sn(e);
            return t.width = t.left + t.right, t.height = t.top + t.bottom, t
        }

        function wn(e, t) {
            e = e || {}, t = t || an.font;
            let n = oe(e.size, t.size);
            "string" == typeof n && (n = parseInt(n, 10));
            let s = oe(e.style, t.style);
            s && !("" + s).match(En) && (console.warn('Invalid font style specified: "' + s + '"'), s = void 0);
            const i = {
                family: oe(e.family, t.family),
                lineHeight: In(oe(e.lineHeight, t.lineHeight), n),
                size: n,
                style: s,
                weight: oe(e.weight, t.weight),
                string: ""
            };
            return i.string = function (e) {
                return !e || te(e.size) || te(e.family) ? null : (e.style ? e.style + " " : "") + (e.weight ? e.weight + " " : "") + e.size + "px " + e.family
            }(i), i
        }

        function On(e, t, n, s) {
            let i, a, o, r = !0;
            for (i = 0, a = e.length; i < a; ++i)
                if (o = e[i], void 0 !== o && (void 0 !== t && "function" == typeof o && (o = o(t), r = !1), void 0 !== n && ne(o) && (o = o[n % o.length], r = !1), void 0 !== o)) return s && !r && (s.cacheable = !1), o
        }

        function Pn(e, t) {
            return Object.assign(Object.create(e), t)
        }

        function Ln(e, t = [""], n = e, s, i = (() => e[0])) {
            be(s) || (s = Hn("_fallback", e));
            const a = {
                [Symbol.toStringTag]: "Object",
                _cacheable: !0,
                _scopes: e,
                _rootScopes: n,
                _fallback: s,
                _getTarget: i,
                override: i => Ln([i, ...e], t, n, s)
            };
            return new Proxy(a, {
                deleteProperty: (t, n) => (delete t[n], delete t._keys, delete e[0][n], !0),
                get: (n, s) => Dn(n, s, (() => function (e, t, n, s) {
                    let i;
                    for (const a of t)
                        if (i = Hn(Rn(a, e), n), be(i)) return kn(e, i) ? Gn(n, s, e, i) : i
                }(s, t, e, n))),
                getOwnPropertyDescriptor: (e, t) => Reflect.getOwnPropertyDescriptor(e._scopes[0], t),
                getPrototypeOf: () => Reflect.getPrototypeOf(e[0]),
                has: (e, t) => Kn(e).includes(t),
                ownKeys: e => Kn(e),
                set(e, t, n) {
                    const s = e._storage || (e._storage = i());
                    return e[t] = s[t] = n, delete e._keys, !0
                }
            })
        }

        function An(e, t, n, s) {
            const i = {
                _cacheable: !1,
                _proxy: e,
                _context: t,
                _subProxy: n,
                _stack: new Set,
                _descriptors: Mn(e, s),
                setContext: t => An(e, t, n, s),
                override: i => An(e.override(i), t, n, s)
            };
            return new Proxy(i, {
                deleteProperty: (t, n) => (delete t[n], delete e[n], !0),
                get: (e, t, n) => Dn(e, t, (() => function (e, t, n) {
                    const {
                        _proxy: s,
                        _context: i,
                        _subProxy: a,
                        _descriptors: o
                    } = e;
                    let r = s[t];
                    Te(r) && o.isScriptable(t) && (r = function (e, t, n, s) {
                        const {
                            _proxy: i,
                            _context: a,
                            _subProxy: o,
                            _stack: r
                        } = n;
                        if (r.has(e)) throw new Error("Recursion detected: " + Array.from(r).join("->") + "->" + e);
                        r.add(e), t = t(a, o || s), r.delete(e), kn(e, t) && (t = Gn(i._scopes, i, e, t));
                        return t
                    }(t, r, e, n));
                    ne(r) && r.length && (r = function (e, t, n, s) {
                        const {
                            _proxy: i,
                            _context: a,
                            _subProxy: o,
                            _descriptors: r
                        } = n;
                        if (be(a.index) && s(e)) t = t[a.index % t.length];
                        else if (se(t[0])) {
                            const n = t,
                                s = i._scopes.filter((e => e !== n));
                            t = [];
                            for (const l of n) {
                                const n = Gn(s, i, e, l);
                                t.push(An(n, a, o && o[e], r))
                            }
                        }
                        return t
                    }(t, r, e, o.isIndexable));
                    kn(t, r) && (r = An(r, i, a && a[t], o));
                    return r
                }(e, t, n))),
                getOwnPropertyDescriptor: (t, n) => t._descriptors.allKeys ? Reflect.has(e, n) ? {
                    enumerable: !0,
                    configurable: !0
                } : void 0 : Reflect.getOwnPropertyDescriptor(e, n),
                getPrototypeOf: () => Reflect.getPrototypeOf(e),
                has: (t, n) => Reflect.has(e, n),
                ownKeys: () => Reflect.ownKeys(e),
                set: (t, n, s) => (e[n] = s, delete t[n], !0)
            })
        }

        function Mn(e, t = {
            scriptable: !0,
            indexable: !0
        }) {
            const {
                _scriptable: n = t.scriptable,
                _indexable: s = t.indexable,
                _allKeys: i = t.allKeys
            } = e;
            return {
                allKeys: i,
                scriptable: n,
                indexable: s,
                isScriptable: Te(n) ? n : () => n,
                isIndexable: Te(s) ? s : () => s
            }
        }
        const Rn = (e, t) => e ? e + _e(t) : t,
            kn = (e, t) => se(t) && "adapters" !== e && (null === Object.getPrototypeOf(t) || t.constructor === Object);

        function Dn(e, t, n) {
            if (Object.prototype.hasOwnProperty.call(e, t)) return e[t];
            const s = n();
            return e[t] = s, s
        }

        function Fn(e, t, n) {
            return Te(e) ? e(t, n) : e
        }
        const Un = (e, t) => !0 === e ? t : "string" == typeof e ? ve(t, e) : void 0;

        function Bn(e, t, n, s, i) {
            for (const a of t) {
                const t = Un(n, a);
                if (t) {
                    e.add(t);
                    const a = Fn(t._fallback, n, i);
                    if (be(a) && a !== n && a !== s) return a
                } else if (!1 === t && be(s) && n !== s) return null
            }
            return !1
        }

        function Gn(e, t, n, s) {
            const i = t._rootScopes,
                a = Fn(t._fallback, n, s),
                o = [...e, ...i],
                r = new Set;
            r.add(s);
            let l = Vn(r, o, n, a || n, s);
            return null !== l && ((!be(a) || a === n || (l = Vn(r, o, a, l, s), null !== l)) && Ln(Array.from(r), [""], i, a, (() => function (e, t, n) {
                const s = e._getTarget();
                t in s || (s[t] = {});
                const i = s[t];
                if (ne(i) && se(n)) return n;
                return i || {}
            }(t, n, s))))
        }

        function Vn(e, t, n, s, i) {
            for (; n;) n = Bn(e, t, n, s, i);
            return n
        }

        function Hn(e, t) {
            for (const n of t) {
                if (!n) continue;
                const t = n[e];
                if (be(t)) return t
            }
        }

        function Kn(e) {
            let t = e._keys;
            return t || (t = e._keys = function (e) {
                const t = new Set;
                for (const n of e)
                    for (const e of Object.keys(n).filter((e => !e.startsWith("_")))) t.add(e);
                return Array.from(t)
            }(e._scopes)), t
        }

        function Wn(e, t, n, s) {
            const {
                iScale: i
            } = e, {
                key: a = "r"
            } = this._parsing, o = new Array(s);
            let r, l, c, u;
            for (r = 0, l = s; r < l; ++r) c = r + n, u = t[c], o[r] = {
                r: i.parse(ve(u, a), c)
            };
            return o
        }
        const zn = Number.EPSILON || 1e-14,
            Yn = (e, t) => t < e.length && !e[t].skip && e[t],
            $n = e => "x" === e ? "y" : "x";

        function qn(e, t, n, s) {
            const i = e.skip ? t : e,
                a = t,
                o = n.skip ? t : n,
                r = Ge(a, i),
                l = Ge(o, a);
            let c = r / (r + l),
                u = l / (r + l);
            c = isNaN(c) ? 0 : c, u = isNaN(u) ? 0 : u;
            const d = s * c,
                m = s * u;
            return {
                previous: {
                    x: a.x - d * (o.x - i.x),
                    y: a.y - d * (o.y - i.y)
                },
                next: {
                    x: a.x + m * (o.x - i.x),
                    y: a.y + m * (o.y - i.y)
                }
            }
        }

        function Xn(e, t = "x") {
            const n = $n(t),
                s = e.length,
                i = Array(s).fill(0),
                a = Array(s);
            let o, r, l, c = Yn(e, 0);
            for (o = 0; o < s; ++o)
                if (r = l, l = c, c = Yn(e, o + 1), l) {
                    if (c) {
                        const e = c[t] - l[t];
                        i[o] = 0 !== e ? (c[n] - l[n]) / e : 0
                    }
                    a[o] = r ? c ? Le(i[o - 1]) !== Le(i[o]) ? 0 : (i[o - 1] + i[o]) / 2 : i[o - 1] : i[o]
                }!
            function (e, t, n) {
                const s = e.length;
                let i, a, o, r, l, c = Yn(e, 0);
                for (let u = 0; u < s - 1; ++u) l = c, c = Yn(e, u + 1), l && c && (Ae(t[u], 0, zn) ? n[u] = n[u + 1] = 0 : (i = n[u] / t[u], a = n[u + 1] / t[u], r = Math.pow(i, 2) + Math.pow(a, 2), r <= 9 || (o = 3 / Math.sqrt(r), n[u] = i * o * t[u], n[u + 1] = a * o * t[u])))
            }(e, i, a),
            function (e, t, n = "x") {
                const s = $n(n),
                    i = e.length;
                let a, o, r, l = Yn(e, 0);
                for (let c = 0; c < i; ++c) {
                    if (o = r, r = l, l = Yn(e, c + 1), !r) continue;
                    const i = r[n],
                        u = r[s];
                    o && (a = (i - o[n]) / 3, r[`cp1${n}`] = i - a, r[`cp1${s}`] = u - a * t[c]), l && (a = (l[n] - i) / 3, r[`cp2${n}`] = i + a, r[`cp2${s}`] = u + a * t[c])
                }
            }(e, a, t)
        }

        function Qn(e, t, n) {
            return Math.max(Math.min(e, n), t)
        }

        function Zn(e, t, n, s, i) {
            let a, o, r, l;
            if (t.spanGaps && (e = e.filter((e => !e.skip))), "monotone" === t.cubicInterpolationMode) Xn(e, i);
            else {
                let n = s ? e[e.length - 1] : e[0];
                for (a = 0, o = e.length; a < o; ++a) r = e[a], l = qn(n, r, e[Math.min(a + 1, o - (s ? 0 : 1)) % o], t.tension), r.cp1x = l.previous.x, r.cp1y = l.previous.y, r.cp2x = l.next.x, r.cp2y = l.next.y, n = r
            }
            t.capBezierPoints && function (e, t) {
                let n, s, i, a, o, r = mn(e[0], t);
                for (n = 0, s = e.length; n < s; ++n) o = a, a = r, r = n < s - 1 && mn(e[n + 1], t), a && (i = e[n], o && (i.cp1x = Qn(i.cp1x, t.left, t.right), i.cp1y = Qn(i.cp1y, t.top, t.bottom)), r && (i.cp2x = Qn(i.cp2x, t.left, t.right), i.cp2y = Qn(i.cp2y, t.top, t.bottom)))
            }(e, n)
        }

        function Jn() {
            return "undefined" != typeof window && "undefined" != typeof document
        }

        function es(e) {
            let t = e.parentNode;
            return t && "[object ShadowRoot]" === t.toString() && (t = t.host), t
        }

        function ts(e, t, n) {
            let s;
            return "string" == typeof e ? (s = parseInt(e, 10), -1 !== e.indexOf("%") && (s = s / 100 * t.parentNode[n])) : s = e, s
        }
        const ns = e => e.ownerDocument.defaultView.getComputedStyle(e, null);
        const ss = ["top", "right", "bottom", "left"];

        function is(e, t, n) {
            const s = {};
            n = n ? "-" + n : "";
            for (let i = 0; i < 4; i++) {
                const a = ss[i];
                s[a] = parseFloat(e[t + "-" + a + n]) || 0
            }
            return s.width = s.left + s.right, s.height = s.top + s.bottom, s
        }
        const as = (e, t, n) => (e > 0 || t > 0) && (!n || !n.shadowRoot);

        function os(e, t) {
            if ("native" in e) return e;
            const {
                canvas: n,
                currentDevicePixelRatio: s
            } = t, i = ns(n), a = "border-box" === i.boxSizing, o = is(i, "padding"), r = is(i, "border", "width"), {
                x: l,
                y: c,
                box: u
            } = function (e, t) {
                const n = e.touches,
                    s = n && n.length ? n[0] : e,
                    {
                        offsetX: i,
                        offsetY: a
                    } = s;
                let o, r, l = !1;
                if (as(i, a, e.target)) o = i, r = a;
                else {
                    const e = t.getBoundingClientRect();
                    o = s.clientX - e.left, r = s.clientY - e.top, l = !0
                }
                return {
                    x: o,
                    y: r,
                    box: l
                }
            }(e, n), d = o.left + (u && r.left), m = o.top + (u && r.top);
            let {
                width: h,
                height: g
            } = t;
            return a && (h -= o.width + r.width, g -= o.height + r.height), {
                x: Math.round((l - d) / h * n.width / s),
                y: Math.round((c - m) / g * n.height / s)
            }
        }
        const rs = e => Math.round(10 * e) / 10;

        function ls(e, t, n, s) {
            const i = ns(e),
                a = is(i, "margin"),
                o = ts(i.maxWidth, e, "clientWidth") || Se,
                r = ts(i.maxHeight, e, "clientHeight") || Se,
                l = function (e, t, n) {
                    let s, i;
                    if (void 0 === t || void 0 === n) {
                        const a = es(e);
                        if (a) {
                            const e = a.getBoundingClientRect(),
                                o = ns(a),
                                r = is(o, "border", "width"),
                                l = is(o, "padding");
                            t = e.width - l.width - r.width, n = e.height - l.height - r.height, s = ts(o.maxWidth, a, "clientWidth"), i = ts(o.maxHeight, a, "clientHeight")
                        } else t = e.clientWidth, n = e.clientHeight
                    }
                    return {
                        width: t,
                        height: n,
                        maxWidth: s || Se,
                        maxHeight: i || Se
                    }
                }(e, t, n);
            let {
                width: c,
                height: u
            } = l;
            if ("content-box" === i.boxSizing) {
                const e = is(i, "border", "width"),
                    t = is(i, "padding");
                c -= t.width + e.width, u -= t.height + e.height
            }
            c = Math.max(0, c - a.width), u = Math.max(0, s ? Math.floor(c / s) : u - a.height), c = rs(Math.min(c, o, l.maxWidth)), u = rs(Math.min(u, r, l.maxHeight)), c && !u && (u = rs(c / 2));
            return (void 0 !== t || void 0 !== n) && s && l.height && u > l.height && (u = l.height, c = rs(Math.floor(u * s))), {
                width: c,
                height: u
            }
        }

        function cs(e, t, n) {
            const s = t || 1,
                i = Math.floor(e.height * s),
                a = Math.floor(e.width * s);
            e.height = i / s, e.width = a / s;
            const o = e.canvas;
            return o.style && (n || !o.style.height && !o.style.width) && (o.style.height = `${e.height}px`, o.style.width = `${e.width}px`), (e.currentDevicePixelRatio !== s || o.height !== i || o.width !== a) && (e.currentDevicePixelRatio = s, o.height = i, o.width = a, e.ctx.setTransform(s, 0, 0, s, 0, 0), !0)
        }
        const us = function () {
            let e = !1;
            try {
                const t = {
                    get passive() {
                        return e = !0, !1
                    }
                };
                window.addEventListener("test", null, t), window.removeEventListener("test", null, t)
            } catch (e) {}
            return e
        }();

        function ds(e, t) {
            const n = function (e, t) {
                    return ns(e).getPropertyValue(t)
                }(e, t),
                s = n && n.match(/^(\d+)(\.\d+)?px$/);
            return s ? +s[1] : void 0
        }

        function ms(e, t, n, s) {
            return {
                x: e.x + n * (t.x - e.x),
                y: e.y + n * (t.y - e.y)
            }
        }

        function hs(e, t, n, s) {
            return {
                x: e.x + n * (t.x - e.x),
                y: "middle" === s ? n < .5 ? e.y : t.y : "after" === s ? n < 1 ? e.y : t.y : n > 0 ? t.y : e.y
            }
        }

        function gs(e, t, n, s) {
            const i = {
                    x: e.cp2x,
                    y: e.cp2y
                },
                a = {
                    x: t.cp1x,
                    y: t.cp1y
                },
                o = ms(e, i, n),
                r = ms(i, a, n),
                l = ms(a, t, n),
                c = ms(o, r, n),
                u = ms(r, l, n);
            return ms(c, u, n)
        }

        function ps(e, t, n) {
            return e ? function (e, t) {
                return {
                    x: n => e + e + t - n,
                    setWidth(e) {
                        t = e
                    },
                    textAlign: e => "center" === e ? e : "right" === e ? "left" : "right",
                    xPlus: (e, t) => e - t,
                    leftForLtr: (e, t) => e - t
                }
            }(t, n) : {
                x: e => e,
                setWidth(e) {},
                textAlign: e => e,
                xPlus: (e, t) => e + t,
                leftForLtr: (e, t) => e
            }
        }

        function fs(e, t) {
            let n, s;
            "ltr" !== t && "rtl" !== t || (n = e.canvas.style, s = [n.getPropertyValue("direction"), n.getPropertyPriority("direction")], n.setProperty("direction", t, "important"), e.prevTextDirection = s)
        }

        function xs(e, t) {
            void 0 !== t && (delete e.prevTextDirection, e.canvas.style.setProperty("direction", t[0], t[1]))
        }

        function vs(e) {
            return "angle" === e ? {
                between: Ke,
                compare: Ve,
                normalize: He
            } : {
                between: ze,
                compare: (e, t) => e - t,
                normalize: e => e
            }
        }

        function _s({
            start: e,
            end: t,
            count: n,
            loop: s,
            style: i
        }) {
            return {
                start: e % n,
                end: t % n,
                loop: s && (t - e + 1) % n == 0,
                style: i
            }
        }

        function bs(e, t, n) {
            if (!n) return [e];
            const {
                property: s,
                start: i,
                end: a
            } = n, o = t.length, {
                compare: r,
                between: l,
                normalize: c
            } = vs(s), {
                start: u,
                end: d,
                loop: m,
                style: h
            } = function (e, t, n) {
                const {
                    property: s,
                    start: i,
                    end: a
                } = n, {
                    between: o,
                    normalize: r
                } = vs(s), l = t.length;
                let c, u, {
                    start: d,
                    end: m,
                    loop: h
                } = e;
                if (h) {
                    for (d += l, m += l, c = 0, u = l; c < u && o(r(t[d % l][s]), i, a); ++c) d--, m--;
                    d %= l, m %= l
                }
                return m < d && (m += l), {
                    start: d,
                    end: m,
                    loop: h,
                    style: e.style
                }
            }(e, t, n), g = [];
            let p, f, x, v = !1,
                _ = null;
            const b = () => v || l(i, x, p) && 0 !== r(i, x),
                T = () => !v || 0 === r(a, p) || l(a, x, p);
            for (let e = u, n = u; e <= d; ++e) f = t[e % o], f.skip || (p = c(f[s]), p !== x && (v = l(p, i, a), null === _ && b() && (_ = 0 === r(p, i) ? e : n), null !== _ && T() && (g.push(_s({
                start: _,
                end: e,
                loop: m,
                count: o,
                style: h
            })), _ = null), n = e, x = p));
            return null !== _ && g.push(_s({
                start: _,
                end: d,
                loop: m,
                count: o,
                style: h
            })), g
        }

        function Ts(e, t) {
            const n = [],
                s = e.segments;
            for (let i = 0; i < s.length; i++) {
                const a = bs(s[i], e.points, t);
                a.length && n.push(...a)
            }
            return n
        }

        function Es(e, t, n, s) {
            return s && s.setContext && n ? function (e, t, n, s) {
                const i = e._chart.getContext(),
                    a = Is(e.options),
                    {
                        _datasetIndex: o,
                        options: {
                            spanGaps: r
                        }
                    } = e,
                    l = n.length,
                    c = [];
                let u = a,
                    d = t[0].start,
                    m = d;

                function h(e, t, s, i) {
                    const a = r ? -1 : 1;
                    if (e !== t) {
                        for (e += l; n[e % l].skip;) e -= a;
                        for (; n[t % l].skip;) t += a;
                        e % l != t % l && (c.push({
                            start: e % l,
                            end: t % l,
                            loop: s,
                            style: i
                        }), u = i, d = t % l)
                    }
                }
                for (const e of t) {
                    d = r ? d : e.start;
                    let t, a = n[d % l];
                    for (m = d + 1; m <= e.end; m++) {
                        const r = n[m % l];
                        t = Is(s.setContext(Pn(i, {
                            type: "segment",
                            p0: a,
                            p1: r,
                            p0DataIndex: (m - 1) % l,
                            p1DataIndex: m % l,
                            datasetIndex: o
                        }))), ys(t, u) && h(d, m - 1, e.loop, u), a = r, u = t
                    }
                    d < m - 1 && h(d, m - 1, e.loop, u)
                }
                return c
            }(e, t, n, s) : t
        }

        function Is(e) {
            return {
                backgroundColor: e.backgroundColor,
                borderCapStyle: e.borderCapStyle,
                borderDash: e.borderDash,
                borderDashOffset: e.borderDashOffset,
                borderJoinStyle: e.borderJoinStyle,
                borderWidth: e.borderWidth,
                borderColor: e.borderColor
            }
        }

        function ys(e, t) {
            return t && JSON.stringify(e) !== JSON.stringify(t)
        }
        class js {
            constructor() {
                this._request = null, this._charts = new Map, this._running = !1, this._lastDate = void 0
            }
            _notify(e, t, n, s) {
                const i = t.listeners[s],
                    a = t.duration;
                i.forEach((s => s({
                    chart: e,
                    initial: t.initial,
                    numSteps: a,
                    currentStep: Math.min(n - t.start, a)
                })))
            }
            _refresh() {
                this._request || (this._running = !0, this._request = Je.call(window, (() => {
                    this._update(), this._request = null, this._running && this._refresh()
                })))
            }
            _update(e = Date.now()) {
                let t = 0;
                this._charts.forEach(((n, s) => {
                    if (!n.running || !n.items.length) return;
                    const i = n.items;
                    let a, o = i.length - 1,
                        r = !1;
                    for (; o >= 0; --o) a = i[o], a._active ? (a._total > n.duration && (n.duration = a._total), a.tick(e), r = !0) : (i[o] = i[i.length - 1], i.pop());
                    r && (s.draw(), this._notify(s, n, e, "progress")), i.length || (n.running = !1, this._notify(s, n, e, "complete"), n.initial = !1), t += i.length
                })), this._lastDate = e, 0 === t && (this._running = !1)
            }
            _getAnims(e) {
                const t = this._charts;
                let n = t.get(e);
                return n || (n = {
                    running: !1,
                    initial: !0,
                    items: [],
                    listeners: {
                        complete: [],
                        progress: []
                    }
                }, t.set(e, n)), n
            }
            listen(e, t, n) {
                this._getAnims(e).listeners[t].push(n)
            }
            add(e, t) {
                t && t.length && this._getAnims(e).items.push(...t)
            }
            has(e) {
                return this._getAnims(e).items.length > 0
            }
            start(e) {
                const t = this._charts.get(e);
                t && (t.running = !0, t.start = Date.now(), t.duration = t.items.reduce(((e, t) => Math.max(e, t._duration)), 0), this._refresh())
            }
            running(e) {
                if (!this._running) return !1;
                const t = this._charts.get(e);
                return !!(t && t.running && t.items.length)
            }
            stop(e) {
                const t = this._charts.get(e);
                if (!t || !t.items.length) return;
                const n = t.items;
                let s = n.length - 1;
                for (; s >= 0; --s) n[s].cancel();
                t.items = [], this._notify(e, t, Date.now(), "complete")
            }
            remove(e) {
                return this._charts.delete(e)
            }
        }
        var Ss = new js;
        const Cs = "transparent",
            Ns = {
                boolean: (e, t, n) => n > .5 ? t : e,
                color(e, t, n) {
                    const s = Wt(e || Cs),
                        i = s.valid && Wt(t || Cs);
                    return i && i.valid ? i.mix(s, n).hexString() : t
                },
                number: (e, t, n) => e + (t - e) * n
            };
        class ws {
            constructor(e, t, n, s) {
                const i = t[n];
                s = On([e.to, s, i, e.from]);
                const a = On([e.from, i, s]);
                this._active = !0, this._fn = e.fn || Ns[e.type || typeof a], this._easing = ct[e.easing] || ct.linear, this._start = Math.floor(Date.now() + (e.delay || 0)), this._duration = this._total = Math.floor(e.duration), this._loop = !!e.loop, this._target = t, this._prop = n, this._from = a, this._to = s, this._promises = void 0
            }
            active() {
                return this._active
            }
            update(e, t, n) {
                if (this._active) {
                    this._notify(!1);
                    const s = this._target[this._prop],
                        i = n - this._start,
                        a = this._duration - i;
                    this._start = n, this._duration = Math.floor(Math.max(a, e.duration)), this._total += i, this._loop = !!e.loop, this._to = On([e.to, t, s, e.from]), this._from = On([e.from, s, t])
                }
            }
            cancel() {
                this._active && (this.tick(Date.now()), this._active = !1, this._notify(!1))
            }
            tick(e) {
                const t = e - this._start,
                    n = this._duration,
                    s = this._prop,
                    i = this._from,
                    a = this._loop,
                    o = this._to;
                let r;
                if (this._active = i !== o && (a || t < n), !this._active) return this._target[s] = o, void this._notify(!0);
                t < 0 ? this._target[s] = i : (r = t / n % 2, r = a && r > 1 ? 2 - r : r, r = this._easing(Math.min(1, Math.max(0, r))), this._target[s] = this._fn(i, o, r))
            }
            wait() {
                const e = this._promises || (this._promises = []);
                return new Promise(((t, n) => {
                    e.push({
                        res: t,
                        rej: n
                    })
                }))
            }
            _notify(e) {
                const t = e ? "res" : "rej",
                    n = this._promises || [];
                for (let e = 0; e < n.length; e++) n[e][t]()
            }
        }
        class Os {
            constructor(e, t) {
                this._chart = e, this._properties = new Map, this.configure(t)
            }
            configure(e) {
                if (!se(e)) return;
                const t = Object.keys(an.animation),
                    n = this._properties;
                Object.getOwnPropertyNames(e).forEach((s => {
                    const i = e[s];
                    if (!se(i)) return;
                    const a = {};
                    for (const e of t) a[e] = i[e];
                    (ne(i.properties) && i.properties || [s]).forEach((e => {
                        e !== s && n.has(e) || n.set(e, a)
                    }))
                }))
            }
            _animateOptions(e, t) {
                const n = t.options,
                    s = function (e, t) {
                        if (!t) return;
                        let n = e.options;
                        if (!n) return void(e.options = t);
                        n.$shared && (e.options = n = Object.assign({}, n, {
                            $shared: !1,
                            $animations: {}
                        }));
                        return n
                    }(e, n);
                if (!s) return [];
                const i = this._createAnimations(s, n);
                return n.$shared && function (e, t) {
                    const n = [],
                        s = Object.keys(t);
                    for (let t = 0; t < s.length; t++) {
                        const i = e[s[t]];
                        i && i.active() && n.push(i.wait())
                    }
                    return Promise.all(n)
                }(e.options.$animations, n).then((() => {
                    e.options = n
                }), (() => {})), i
            }
            _createAnimations(e, t) {
                const n = this._properties,
                    s = [],
                    i = e.$animations || (e.$animations = {}),
                    a = Object.keys(t),
                    o = Date.now();
                let r;
                for (r = a.length - 1; r >= 0; --r) {
                    const l = a[r];
                    if ("$" === l.charAt(0)) continue;
                    if ("options" === l) {
                        s.push(...this._animateOptions(e, t));
                        continue
                    }
                    const c = t[l];
                    let u = i[l];
                    const d = n.get(l);
                    if (u) {
                        if (d && u.active()) {
                            u.update(d, c, o);
                            continue
                        }
                        u.cancel()
                    }
                    d && d.duration ? (i[l] = u = new ws(d, e, l, c), s.push(u)) : e[l] = c
                }
                return s
            }
            update(e, t) {
                if (0 === this._properties.size) return void Object.assign(e, t);
                const n = this._createAnimations(e, t);
                return n.length ? (Ss.add(this._chart, n), !0) : void 0
            }
        }

        function Ps(e, t) {
            const n = e && e.options || {},
                s = n.reverse,
                i = void 0 === n.min ? t : 0,
                a = void 0 === n.max ? t : 0;
            return {
                start: s ? a : i,
                end: s ? i : a
            }
        }

        function Ls(e, t) {
            const n = [],
                s = e._getSortedDatasetMetas(t);
            let i, a;
            for (i = 0, a = s.length; i < a; ++i) n.push(s[i].index);
            return n
        }

        function As(e, t, n, s = {}) {
            const i = e.keys,
                a = "single" === s.mode;
            let o, r, l, c;
            if (null !== t) {
                for (o = 0, r = i.length; o < r; ++o) {
                    if (l = +i[o], l === n) {
                        if (s.all) continue;
                        break
                    }
                    c = e.values[l], ie(c) && (a || 0 === t || Le(t) === Le(c)) && (t += c)
                }
                return t
            }
        }

        function Ms(e, t) {
            const n = e && e.options.stacked;
            return n || void 0 === n && void 0 !== t.stack
        }

        function Rs(e, t, n) {
            const s = e[t] || (e[t] = {});
            return s[n] || (s[n] = {})
        }

        function ks(e, t, n, s) {
            for (const i of t.getMatchingVisibleMetas(s).reverse()) {
                const t = e[i.index];
                if (n && t > 0 || !n && t < 0) return i.index
            }
            return null
        }

        function Ds(e, t) {
            const {
                chart: n,
                _cachedMeta: s
            } = e, i = n._stacks || (n._stacks = {}), {
                iScale: a,
                vScale: o,
                index: r
            } = s, l = a.axis, c = o.axis, u = function (e, t, n) {
                return `${e.id}.${t.id}.${n.stack||n.type}`
            }(a, o, s), d = t.length;
            let m;
            for (let e = 0; e < d; ++e) {
                const n = t[e],
                    {
                        [l]: a,
                        [c]: d
                    } = n;
                m = (n._stacks || (n._stacks = {}))[c] = Rs(i, u, a), m[r] = d, m._top = ks(m, o, !0, s.type), m._bottom = ks(m, o, !1, s.type)
            }
        }

        function Fs(e, t) {
            const n = e.scales;
            return Object.keys(n).filter((e => n[e].axis === t)).shift()
        }

        function Us(e, t) {
            const n = e.controller.index,
                s = e.vScale && e.vScale.axis;
            if (s) {
                t = t || e._parsed;
                for (const e of t) {
                    const t = e._stacks;
                    if (!t || void 0 === t[s] || void 0 === t[s][n]) return;
                    delete t[s][n]
                }
            }
        }
        const Bs = e => "reset" === e || "none" === e,
            Gs = (e, t) => t ? e : Object.assign({}, e);
        class Vs {
            static defaults = {};
            static datasetElementType = null;
            static dataElementType = null;
            constructor(e, t) {
                this.chart = e, this._ctx = e.ctx, this.index = t, this._cachedDataOpts = {}, this._cachedMeta = this.getMeta(), this._type = this._cachedMeta.type, this.options = void 0, this._parsing = !1, this._data = void 0, this._objectData = void 0, this._sharedOptions = void 0, this._drawStart = void 0, this._drawCount = void 0, this.enableOptionSharing = !1, this.supportsDecimation = !1, this.$context = void 0, this._syncList = [], this.datasetElementType = new.target.datasetElementType, this.dataElementType = new.target.dataElementType, this.initialize()
            }
            initialize() {
                const e = this._cachedMeta;
                this.configure(), this.linkScales(), e._stacked = Ms(e.vScale, e), this.addElements(), this.options.fill && !this.chart.isPluginEnabled("filler") && console.warn("Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options")
            }
            updateIndex(e) {
                this.index !== e && Us(this._cachedMeta), this.index = e
            }
            linkScales() {
                const e = this.chart,
                    t = this._cachedMeta,
                    n = this.getDataset(),
                    s = (e, t, n, s) => "x" === e ? t : "r" === e ? s : n,
                    i = t.xAxisID = oe(n.xAxisID, Fs(e, "x")),
                    a = t.yAxisID = oe(n.yAxisID, Fs(e, "y")),
                    o = t.rAxisID = oe(n.rAxisID, Fs(e, "r")),
                    r = t.indexAxis,
                    l = t.iAxisID = s(r, i, a, o),
                    c = t.vAxisID = s(r, a, i, o);
                t.xScale = this.getScaleForId(i), t.yScale = this.getScaleForId(a), t.rScale = this.getScaleForId(o), t.iScale = this.getScaleForId(l), t.vScale = this.getScaleForId(c)
            }
            getDataset() {
                return this.chart.data.datasets[this.index]
            }
            getMeta() {
                return this.chart.getDatasetMeta(this.index)
            }
            getScaleForId(e) {
                return this.chart.scales[e]
            }
            _getOtherScale(e) {
                const t = this._cachedMeta;
                return e === t.iScale ? t.vScale : t.iScale
            }
            reset() {
                this._update("reset")
            }
            _destroy() {
                const e = this._cachedMeta;
                this._data && Qe(this._data, this), e._stacked && Us(e)
            }
            _dataCheck() {
                const e = this.getDataset(),
                    t = e.data || (e.data = []),
                    n = this._data;
                if (se(t)) this._data = function (e) {
                    const t = Object.keys(e),
                        n = new Array(t.length);
                    let s, i, a;
                    for (s = 0, i = t.length; s < i; ++s) a = t[s], n[s] = {
                        x: a,
                        y: e[a]
                    };
                    return n
                }(t);
                else if (n !== t) {
                    if (n) {
                        Qe(n, this);
                        const e = this._cachedMeta;
                        Us(e), e._parsed = []
                    }
                    t && Object.isExtensible(t) && function (e, t) {
                        e._chartjs ? e._chartjs.listeners.push(t) : (Object.defineProperty(e, "_chartjs", {
                            configurable: !0,
                            enumerable: !1,
                            value: {
                                listeners: [t]
                            }
                        }), Xe.forEach((t => {
                            const n = "_onData" + _e(t),
                                s = e[t];
                            Object.defineProperty(e, t, {
                                configurable: !0,
                                enumerable: !1,
                                value(...t) {
                                    const i = s.apply(this, t);
                                    return e._chartjs.listeners.forEach((e => {
                                        "function" == typeof e[n] && e[n](...t)
                                    })), i
                                }
                            })
                        })))
                    }(t, this), this._syncList = [], this._data = t
                }
            }
            addElements() {
                const e = this._cachedMeta;
                this._dataCheck(), this.datasetElementType && (e.dataset = new this.datasetElementType)
            }
            buildOrUpdateElements(e) {
                const t = this._cachedMeta,
                    n = this.getDataset();
                let s = !1;
                this._dataCheck();
                const i = t._stacked;
                t._stacked = Ms(t.vScale, t), t.stack !== n.stack && (s = !0, Us(t), t.stack = n.stack), this._resyncElements(e), (s || i !== t._stacked) && Ds(this, t._parsed)
            }
            configure() {
                const e = this.chart.config,
                    t = e.datasetScopeKeys(this._type),
                    n = e.getOptionScopes(this.getDataset(), t, !0);
                this.options = e.createResolver(n, this.getContext()), this._parsing = this.options.parsing, this._cachedDataOpts = {}
            }
            parse(e, t) {
                const {
                    _cachedMeta: n,
                    _data: s
                } = this, {
                    iScale: i,
                    _stacked: a
                } = n, o = i.axis;
                let r, l, c, u = 0 === e && t === s.length || n._sorted,
                    d = e > 0 && n._parsed[e - 1];
                if (!1 === this._parsing) n._parsed = s, n._sorted = !0, c = s;
                else {
                    c = ne(s[e]) ? this.parseArrayData(n, s, e, t) : se(s[e]) ? this.parseObjectData(n, s, e, t) : this.parsePrimitiveData(n, s, e, t);
                    const i = () => null === l[o] || d && l[o] < d[o];
                    for (r = 0; r < t; ++r) n._parsed[r + e] = l = c[r], u && (i() && (u = !1), d = l);
                    n._sorted = u
                }
                a && Ds(this, c)
            }
            parsePrimitiveData(e, t, n, s) {
                const {
                    iScale: i,
                    vScale: a
                } = e, o = i.axis, r = a.axis, l = i.getLabels(), c = i === a, u = new Array(s);
                let d, m, h;
                for (d = 0, m = s; d < m; ++d) h = d + n, u[d] = {
                    [o]: c || i.parse(l[h], h),
                    [r]: a.parse(t[h], h)
                };
                return u
            }
            parseArrayData(e, t, n, s) {
                const {
                    xScale: i,
                    yScale: a
                } = e, o = new Array(s);
                let r, l, c, u;
                for (r = 0, l = s; r < l; ++r) c = r + n, u = t[c], o[r] = {
                    x: i.parse(u[0], c),
                    y: a.parse(u[1], c)
                };
                return o
            }
            parseObjectData(e, t, n, s) {
                const {
                    xScale: i,
                    yScale: a
                } = e, {
                    xAxisKey: o = "x",
                    yAxisKey: r = "y"
                } = this._parsing, l = new Array(s);
                let c, u, d, m;
                for (c = 0, u = s; c < u; ++c) d = c + n, m = t[d], l[c] = {
                    x: i.parse(ve(m, o), d),
                    y: a.parse(ve(m, r), d)
                };
                return l
            }
            getParsed(e) {
                return this._cachedMeta._parsed[e]
            }
            getDataElement(e) {
                return this._cachedMeta.data[e]
            }
            applyStack(e, t, n) {
                const s = this.chart,
                    i = this._cachedMeta,
                    a = t[e.axis];
                return As({
                    keys: Ls(s, !0),
                    values: t._stacks[e.axis]
                }, a, i.index, {
                    mode: n
                })
            }
            updateRangeFromParsed(e, t, n, s) {
                const i = n[t.axis];
                let a = null === i ? NaN : i;
                const o = s && n._stacks[t.axis];
                s && o && (s.values = o, a = As(s, i, this._cachedMeta.index)), e.min = Math.min(e.min, a), e.max = Math.max(e.max, a)
            }
            getMinMax(e, t) {
                const n = this._cachedMeta,
                    s = n._parsed,
                    i = n._sorted && e === n.iScale,
                    a = s.length,
                    o = this._getOtherScale(e),
                    r = ((e, t, n) => e && !t.hidden && t._stacked && {
                        keys: Ls(n, !0),
                        values: null
                    })(t, n, this.chart),
                    l = {
                        min: Number.POSITIVE_INFINITY,
                        max: Number.NEGATIVE_INFINITY
                    },
                    {
                        min: c,
                        max: u
                    } = function (e) {
                        const {
                            min: t,
                            max: n,
                            minDefined: s,
                            maxDefined: i
                        } = e.getUserBounds();
                        return {
                            min: s ? t : Number.NEGATIVE_INFINITY,
                            max: i ? n : Number.POSITIVE_INFINITY
                        }
                    }(o);
                let d, m;

                function h() {
                    m = s[d];
                    const t = m[o.axis];
                    return !ie(m[e.axis]) || c > t || u < t
                }
                for (d = 0; d < a && (h() || (this.updateRangeFromParsed(l, e, m, r), !i)); ++d);
                if (i)
                    for (d = a - 1; d >= 0; --d)
                        if (!h()) {
                            this.updateRangeFromParsed(l, e, m, r);
                            break
                        } return l
            }
            getAllParsedValues(e) {
                const t = this._cachedMeta._parsed,
                    n = [];
                let s, i, a;
                for (s = 0, i = t.length; s < i; ++s) a = t[s][e.axis], ie(a) && n.push(a);
                return n
            }
            getMaxOverflow() {
                return !1
            }
            getLabelAndValue(e) {
                const t = this._cachedMeta,
                    n = t.iScale,
                    s = t.vScale,
                    i = this.getParsed(e);
                return {
                    label: n ? "" + n.getLabelForValue(i[n.axis]) : "",
                    value: s ? "" + s.getLabelForValue(i[s.axis]) : ""
                }
            }
            _update(e) {
                const t = this._cachedMeta;
                this.update(e || "default"), t._clip = function (e) {
                    let t, n, s, i;
                    return se(e) ? (t = e.top, n = e.right, s = e.bottom, i = e.left) : t = n = s = i = e, {
                        top: t,
                        right: n,
                        bottom: s,
                        left: i,
                        disabled: !1 === e
                    }
                }(oe(this.options.clip, function (e, t, n) {
                    if (!1 === n) return !1;
                    const s = Ps(e, n),
                        i = Ps(t, n);
                    return {
                        top: i.end,
                        right: s.end,
                        bottom: i.start,
                        left: s.start
                    }
                }(t.xScale, t.yScale, this.getMaxOverflow())))
            }
            update(e) {}
            draw() {
                const e = this._ctx,
                    t = this.chart,
                    n = this._cachedMeta,
                    s = n.data || [],
                    i = t.chartArea,
                    a = [],
                    o = this._drawStart || 0,
                    r = this._drawCount || s.length - o,
                    l = this.options.drawActiveElementsOnTop;
                let c;
                for (n.dataset && n.dataset.draw(e, i, o, r), c = o; c < o + r; ++c) {
                    const t = s[c];
                    t.hidden || (t.active && l ? a.push(t) : t.draw(e, i))
                }
                for (c = 0; c < a.length; ++c) a[c].draw(e, i)
            }
            getStyle(e, t) {
                const n = t ? "active" : "default";
                return void 0 === e && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(n) : this.resolveDataElementOptions(e || 0, n)
            }
            getContext(e, t, n) {
                const s = this.getDataset();
                let i;
                if (e >= 0 && e < this._cachedMeta.data.length) {
                    const t = this._cachedMeta.data[e];
                    i = t.$context || (t.$context = function (e, t, n) {
                        return Pn(e, {
                            active: !1,
                            dataIndex: t,
                            parsed: void 0,
                            raw: void 0,
                            element: n,
                            index: t,
                            mode: "default",
                            type: "data"
                        })
                    }(this.getContext(), e, t)), i.parsed = this.getParsed(e), i.raw = s.data[e], i.index = i.dataIndex = e
                } else i = this.$context || (this.$context = function (e, t) {
                    return Pn(e, {
                        active: !1,
                        dataset: void 0,
                        datasetIndex: t,
                        index: t,
                        mode: "default",
                        type: "dataset"
                    })
                }(this.chart.getContext(), this.index)), i.dataset = s, i.index = i.datasetIndex = this.index;
                return i.active = !!t, i.mode = n, i
            }
            resolveDatasetElementOptions(e) {
                return this._resolveElementOptions(this.datasetElementType.id, e)
            }
            resolveDataElementOptions(e, t) {
                return this._resolveElementOptions(this.dataElementType.id, t, e)
            }
            _resolveElementOptions(e, t = "default", n) {
                const s = "active" === t,
                    i = this._cachedDataOpts,
                    a = e + "-" + t,
                    o = i[a],
                    r = this.enableOptionSharing && be(n);
                if (o) return Gs(o, r);
                const l = this.chart.config,
                    c = l.datasetElementScopeKeys(this._type, e),
                    u = s ? [`${e}Hover`, "hover", e, ""] : [e, ""],
                    d = l.getOptionScopes(this.getDataset(), c),
                    m = Object.keys(an.elements[e]),
                    h = l.resolveNamedOptions(d, m, (() => this.getContext(n, s)), u);
                return h.$shared && (h.$shared = r, i[a] = Object.freeze(Gs(h, r))), h
            }
            _resolveAnimations(e, t, n) {
                const s = this.chart,
                    i = this._cachedDataOpts,
                    a = `animation-${t}`,
                    o = i[a];
                if (o) return o;
                let r;
                if (!1 !== s.options.animation) {
                    const s = this.chart.config,
                        i = s.datasetAnimationScopeKeys(this._type, t),
                        a = s.getOptionScopes(this.getDataset(), i);
                    r = s.createResolver(a, this.getContext(e, n, t))
                }
                const l = new Os(s, r && r.animations);
                return r && r._cacheable && (i[a] = Object.freeze(l)), l
            }
            getSharedOptions(e) {
                if (e.$shared) return this._sharedOptions || (this._sharedOptions = Object.assign({}, e))
            }
            includeOptions(e, t) {
                return !t || Bs(e) || this.chart._animationsDisabled
            }
            _getSharedOptions(e, t) {
                const n = this.resolveDataElementOptions(e, t),
                    s = this._sharedOptions,
                    i = this.getSharedOptions(n),
                    a = this.includeOptions(t, i) || i !== s;
                return this.updateSharedOptions(i, t, n), {
                    sharedOptions: i,
                    includeOptions: a
                }
            }
            updateElement(e, t, n, s) {
                Bs(s) ? Object.assign(e, n) : this._resolveAnimations(t, s).update(e, n)
            }
            updateSharedOptions(e, t, n) {
                e && !Bs(t) && this._resolveAnimations(void 0, t).update(e, n)
            }
            _setStyle(e, t, n, s) {
                e.active = s;
                const i = this.getStyle(t, s);
                this._resolveAnimations(t, n, s).update(e, {
                    options: !s && this.getSharedOptions(i) || i
                })
            }
            removeHoverStyle(e, t, n) {
                this._setStyle(e, n, "active", !1)
            }
            setHoverStyle(e, t, n) {
                this._setStyle(e, n, "active", !0)
            }
            _removeDatasetHoverStyle() {
                const e = this._cachedMeta.dataset;
                e && this._setStyle(e, void 0, "active", !1)
            }
            _setDatasetHoverStyle() {
                const e = this._cachedMeta.dataset;
                e && this._setStyle(e, void 0, "active", !0)
            }
            _resyncElements(e) {
                const t = this._data,
                    n = this._cachedMeta.data;
                for (const [e, t, n] of this._syncList) this[e](t, n);
                this._syncList = [];
                const s = n.length,
                    i = t.length,
                    a = Math.min(i, s);
                a && this.parse(0, a), i > s ? this._insertElements(s, i - s, e) : i < s && this._removeElements(i, s - i)
            }
            _insertElements(e, t, n = !0) {
                const s = this._cachedMeta,
                    i = s.data,
                    a = e + t;
                let o;
                const r = e => {
                    for (e.length += t, o = e.length - 1; o >= a; o--) e[o] = e[o - t]
                };
                for (r(i), o = e; o < a; ++o) i[o] = new this.dataElementType;
                this._parsing && r(s._parsed), this.parse(e, t), n && this.updateElements(i, e, t, "reset")
            }
            updateElements(e, t, n, s) {}
            _removeElements(e, t) {
                const n = this._cachedMeta;
                if (this._parsing) {
                    const s = n._parsed.splice(e, t);
                    n._stacked && Us(n, s)
                }
                n.data.splice(e, t)
            }
            _sync(e) {
                if (this._parsing) this._syncList.push(e);
                else {
                    const [t, n, s] = e;
                    this[t](n, s)
                }
                this.chart._dataChanges.push([this.index, ...e])
            }
            _onDataPush() {
                const e = arguments.length;
                this._sync(["_insertElements", this.getDataset().data.length - e, e])
            }
            _onDataPop() {
                this._sync(["_removeElements", this._cachedMeta.data.length - 1, 1])
            }
            _onDataShift() {
                this._sync(["_removeElements", 0, 1])
            }
            _onDataSplice(e, t) {
                t && this._sync(["_removeElements", e, t]);
                const n = arguments.length - 2;
                n && this._sync(["_insertElements", e, n])
            }
            _onDataUnshift() {
                this._sync(["_insertElements", 0, arguments.length])
            }
        }

        function Hs(e) {
            const t = e.iScale,
                n = function (e, t) {
                    if (!e._cache.$bar) {
                        const n = e.getMatchingVisibleMetas(t);
                        let s = [];
                        for (let t = 0, i = n.length; t < i; t++) s = s.concat(n[t].controller.getAllParsedValues(e));
                        e._cache.$bar = Ze(s.sort(((e, t) => e - t)))
                    }
                    return e._cache.$bar
                }(t, e.type);
            let s, i, a, o, r = t._length;
            const l = () => {
                32767 !== a && -32768 !== a && (be(o) && (r = Math.min(r, Math.abs(a - o) || r)), o = a)
            };
            for (s = 0, i = n.length; s < i; ++s) a = t.getPixelForValue(n[s]), l();
            for (o = void 0, s = 0, i = t.ticks.length; s < i; ++s) a = t.getPixelForTick(s), l();
            return r
        }

        function Ks(e, t, n, s) {
            return ne(e) ? function (e, t, n, s) {
                const i = n.parse(e[0], s),
                    a = n.parse(e[1], s),
                    o = Math.min(i, a),
                    r = Math.max(i, a);
                let l = o,
                    c = r;
                Math.abs(o) > Math.abs(r) && (l = r, c = o), t[n.axis] = c, t._custom = {
                    barStart: l,
                    barEnd: c,
                    start: i,
                    end: a,
                    min: o,
                    max: r
                }
            }(e, t, n, s) : t[n.axis] = n.parse(e, s), t
        }

        function Ws(e, t, n, s) {
            const i = e.iScale,
                a = e.vScale,
                o = i.getLabels(),
                r = i === a,
                l = [];
            let c, u, d, m;
            for (c = n, u = n + s; c < u; ++c) m = t[c], d = {}, d[i.axis] = r || i.parse(o[c], c), l.push(Ks(m, d, a, c));
            return l
        }

        function zs(e) {
            return e && void 0 !== e.barStart && void 0 !== e.barEnd
        }

        function Ys(e, t, n, s) {
            let i = t.borderSkipped;
            const a = {};
            if (!i) return void(e.borderSkipped = a);
            if (!0 === i) return void(e.borderSkipped = {
                top: !0,
                right: !0,
                bottom: !0,
                left: !0
            });
            const {
                start: o,
                end: r,
                reverse: l,
                top: c,
                bottom: u
            } = function (e) {
                let t, n, s, i, a;
                return e.horizontal ? (t = e.base > e.x, n = "left", s = "right") : (t = e.base < e.y, n = "bottom", s = "top"), t ? (i = "end", a = "start") : (i = "start", a = "end"), {
                    start: n,
                    end: s,
                    reverse: t,
                    top: i,
                    bottom: a
                }
            }(e);
            "middle" === i && n && (e.enableBorderRadius = !0, (n._top || 0) === s ? i = c : (n._bottom || 0) === s ? i = u : (a[$s(u, o, r, l)] = !0, i = c)), a[$s(i, o, r, l)] = !0, e.borderSkipped = a
        }

        function $s(e, t, n, s) {
            var i, a, o;
            return s ? (o = n, e = qs(e = (i = e) === (a = t) ? o : i === o ? a : i, n, t)) : e = qs(e, t, n), e
        }

        function qs(e, t, n) {
            return "start" === e ? t : "end" === e ? n : e
        }

        function Xs(e, {
            inflateAmount: t
        }, n) {
            e.inflateAmount = "auto" === t ? 1 === n ? .33 : 0 : t
        }
        class Qs extends Vs {
            static id = "bar";
            static defaults = {
                datasetElementType: !1,
                dataElementType: "bar",
                categoryPercentage: .8,
                barPercentage: .9,
                grouped: !0,
                animations: {
                    numbers: {
                        type: "number",
                        properties: ["x", "y", "base", "width", "height"]
                    }
                }
            };
            static overrides = {
                scales: {
                    _index_: {
                        type: "category",
                        offset: !0,
                        grid: {
                            offset: !0
                        }
                    },
                    _value_: {
                        type: "linear",
                        beginAtZero: !0
                    }
                }
            };
            parsePrimitiveData(e, t, n, s) {
                return Ws(e, t, n, s)
            }
            parseArrayData(e, t, n, s) {
                return Ws(e, t, n, s)
            }
            parseObjectData(e, t, n, s) {
                const {
                    iScale: i,
                    vScale: a
                } = e, {
                    xAxisKey: o = "x",
                    yAxisKey: r = "y"
                } = this._parsing, l = "x" === i.axis ? o : r, c = "x" === a.axis ? o : r, u = [];
                let d, m, h, g;
                for (d = n, m = n + s; d < m; ++d) g = t[d], h = {}, h[i.axis] = i.parse(ve(g, l), d), u.push(Ks(ve(g, c), h, a, d));
                return u
            }
            updateRangeFromParsed(e, t, n, s) {
                super.updateRangeFromParsed(e, t, n, s);
                const i = n._custom;
                i && t === this._cachedMeta.vScale && (e.min = Math.min(e.min, i.min), e.max = Math.max(e.max, i.max))
            }
            getMaxOverflow() {
                return 0
            }
            getLabelAndValue(e) {
                const t = this._cachedMeta,
                    {
                        iScale: n,
                        vScale: s
                    } = t,
                    i = this.getParsed(e),
                    a = i._custom,
                    o = zs(a) ? "[" + a.start + ", " + a.end + "]" : "" + s.getLabelForValue(i[s.axis]);
                return {
                    label: "" + n.getLabelForValue(i[n.axis]),
                    value: o
                }
            }
            initialize() {
                this.enableOptionSharing = !0, super.initialize();
                this._cachedMeta.stack = this.getDataset().stack
            }
            update(e) {
                const t = this._cachedMeta;
                this.updateElements(t.data, 0, t.data.length, e)
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s,
                    {
                        index: a,
                        _cachedMeta: {
                            vScale: o
                        }
                    } = this,
                    r = o.getBasePixel(),
                    l = o.isHorizontal(),
                    c = this._getRuler(),
                    {
                        sharedOptions: u,
                        includeOptions: d
                    } = this._getSharedOptions(t, s);
                for (let m = t; m < t + n; m++) {
                    const t = this.getParsed(m),
                        n = i || te(t[o.axis]) ? {
                            base: r,
                            head: r
                        } : this._calculateBarValuePixels(m),
                        h = this._calculateBarIndexPixels(m, c),
                        g = (t._stacks || {})[o.axis],
                        p = {
                            horizontal: l,
                            base: n.base,
                            enableBorderRadius: !g || zs(t._custom) || a === g._top || a === g._bottom,
                            x: l ? n.head : h.center,
                            y: l ? h.center : n.head,
                            height: l ? h.size : Math.abs(n.size),
                            width: l ? Math.abs(n.size) : h.size
                        };
                    d && (p.options = u || this.resolveDataElementOptions(m, e[m].active ? "active" : s));
                    const f = p.options || e[m].options;
                    Ys(p, f, g, a), Xs(p, f, c.ratio), this.updateElement(e[m], m, p, s)
                }
            }
            _getStacks(e, t) {
                const {
                    iScale: n
                } = this._cachedMeta, s = n.getMatchingVisibleMetas(this._type).filter((e => e.controller.options.grouped)), i = n.options.stacked, a = [], o = e => {
                    const n = e.controller.getParsed(t),
                        s = n && n[e.vScale.axis];
                    if (te(s) || isNaN(s)) return !0
                };
                for (const n of s)
                    if ((void 0 === t || !o(n)) && ((!1 === i || -1 === a.indexOf(n.stack) || void 0 === i && void 0 === n.stack) && a.push(n.stack), n.index === e)) break;
                return a.length || a.push(void 0), a
            }
            _getStackCount(e) {
                return this._getStacks(void 0, e).length
            }
            _getStackIndex(e, t, n) {
                const s = this._getStacks(e, n),
                    i = void 0 !== t ? s.indexOf(t) : -1;
                return -1 === i ? s.length - 1 : i
            }
            _getRuler() {
                const e = this.options,
                    t = this._cachedMeta,
                    n = t.iScale,
                    s = [];
                let i, a;
                for (i = 0, a = t.data.length; i < a; ++i) s.push(n.getPixelForValue(this.getParsed(i)[n.axis], i));
                const o = e.barThickness;
                return {
                    min: o || Hs(t),
                    pixels: s,
                    start: n._startPixel,
                    end: n._endPixel,
                    stackCount: this._getStackCount(),
                    scale: n,
                    grouped: e.grouped,
                    ratio: o ? 1 : e.categoryPercentage * e.barPercentage
                }
            }
            _calculateBarValuePixels(e) {
                const {
                    _cachedMeta: {
                        vScale: t,
                        _stacked: n
                    },
                    options: {
                        base: s,
                        minBarLength: i
                    }
                } = this, a = s || 0, o = this.getParsed(e), r = o._custom, l = zs(r);
                let c, u, d = o[t.axis],
                    m = 0,
                    h = n ? this.applyStack(t, o, n) : d;
                h !== d && (m = h - d, h = d), l && (d = r.barStart, h = r.barEnd - r.barStart, 0 !== d && Le(d) !== Le(r.barEnd) && (m = 0), m += d);
                const g = te(s) || l ? m : s;
                let p = t.getPixelForValue(g);
                if (c = this.chart.getDataVisibility(e) ? t.getPixelForValue(m + h) : p, u = c - p, Math.abs(u) < i) {
                    u = function (e, t, n) {
                        return 0 !== e ? Le(e) : (t.isHorizontal() ? 1 : -1) * (t.min >= n ? 1 : -1)
                    }(u, t, a) * i, d === a && (p -= u / 2);
                    const e = t.getPixelForDecimal(0),
                        n = t.getPixelForDecimal(1),
                        s = Math.min(e, n),
                        o = Math.max(e, n);
                    p = Math.max(Math.min(p, o), s), c = p + u
                }
                if (p === t.getPixelForValue(a)) {
                    const e = Le(u) * t.getLineWidthForValue(a) / 2;
                    p += e, u -= e
                }
                return {
                    size: u,
                    base: p,
                    head: c,
                    center: c + u / 2
                }
            }
            _calculateBarIndexPixels(e, t) {
                const n = t.scale,
                    s = this.options,
                    i = s.skipNull,
                    a = oe(s.maxBarThickness, 1 / 0);
                let o, r;
                if (t.grouped) {
                    const n = i ? this._getStackCount(e) : t.stackCount,
                        l = "flex" === s.barThickness ? function (e, t, n, s) {
                            const i = t.pixels,
                                a = i[e];
                            let o = e > 0 ? i[e - 1] : null,
                                r = e < i.length - 1 ? i[e + 1] : null;
                            const l = n.categoryPercentage;
                            null === o && (o = a - (null === r ? t.end - t.start : r - a)), null === r && (r = a + a - o);
                            const c = a - (a - Math.min(o, r)) / 2 * l;
                            return {
                                chunk: Math.abs(r - o) / 2 * l / s,
                                ratio: n.barPercentage,
                                start: c
                            }
                        }(e, t, s, n) : function (e, t, n, s) {
                            const i = n.barThickness;
                            let a, o;
                            return te(i) ? (a = t.min * n.categoryPercentage, o = n.barPercentage) : (a = i * s, o = 1), {
                                chunk: a / s,
                                ratio: o,
                                start: t.pixels[e] - a / 2
                            }
                        }(e, t, s, n),
                        c = this._getStackIndex(this.index, this._cachedMeta.stack, i ? e : void 0);
                    o = l.start + l.chunk * c + l.chunk / 2, r = Math.min(a, l.chunk * l.ratio)
                } else o = n.getPixelForValue(this.getParsed(e)[n.axis], e), r = Math.min(a, t.min * t.ratio);
                return {
                    base: o - r / 2,
                    head: o + r / 2,
                    center: o,
                    size: r
                }
            }
            draw() {
                const e = this._cachedMeta,
                    t = e.vScale,
                    n = e.data,
                    s = n.length;
                let i = 0;
                for (; i < s; ++i) null !== this.getParsed(i)[t.axis] && n[i].draw(this._ctx)
            }
        }
        class Zs extends Vs {
            static id = "bubble";
            static defaults = {
                datasetElementType: !1,
                dataElementType: "point",
                animations: {
                    numbers: {
                        type: "number",
                        properties: ["x", "y", "borderWidth", "radius"]
                    }
                }
            };
            static overrides = {
                scales: {
                    x: {
                        type: "linear"
                    },
                    y: {
                        type: "linear"
                    }
                }
            };
            initialize() {
                this.enableOptionSharing = !0, super.initialize()
            }
            parsePrimitiveData(e, t, n, s) {
                const i = super.parsePrimitiveData(e, t, n, s);
                for (let e = 0; e < i.length; e++) i[e]._custom = this.resolveDataElementOptions(e + n).radius;
                return i
            }
            parseArrayData(e, t, n, s) {
                const i = super.parseArrayData(e, t, n, s);
                for (let e = 0; e < i.length; e++) {
                    const s = t[n + e];
                    i[e]._custom = oe(s[2], this.resolveDataElementOptions(e + n).radius)
                }
                return i
            }
            parseObjectData(e, t, n, s) {
                const i = super.parseObjectData(e, t, n, s);
                for (let e = 0; e < i.length; e++) {
                    const s = t[n + e];
                    i[e]._custom = oe(s && s.r && +s.r, this.resolveDataElementOptions(e + n).radius)
                }
                return i
            }
            getMaxOverflow() {
                const e = this._cachedMeta.data;
                let t = 0;
                for (let n = e.length - 1; n >= 0; --n) t = Math.max(t, e[n].size(this.resolveDataElementOptions(n)) / 2);
                return t > 0 && t
            }
            getLabelAndValue(e) {
                const t = this._cachedMeta,
                    n = this.chart.data.labels || [],
                    {
                        xScale: s,
                        yScale: i
                    } = t,
                    a = this.getParsed(e),
                    o = s.getLabelForValue(a.x),
                    r = i.getLabelForValue(a.y),
                    l = a._custom;
                return {
                    label: n[e] || "",
                    value: "(" + o + ", " + r + (l ? ", " + l : "") + ")"
                }
            }
            update(e) {
                const t = this._cachedMeta.data;
                this.updateElements(t, 0, t.length, e)
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s,
                    {
                        iScale: a,
                        vScale: o
                    } = this._cachedMeta,
                    {
                        sharedOptions: r,
                        includeOptions: l
                    } = this._getSharedOptions(t, s),
                    c = a.axis,
                    u = o.axis;
                for (let d = t; d < t + n; d++) {
                    const t = e[d],
                        n = !i && this.getParsed(d),
                        m = {},
                        h = m[c] = i ? a.getPixelForDecimal(.5) : a.getPixelForValue(n[c]),
                        g = m[u] = i ? o.getBasePixel() : o.getPixelForValue(n[u]);
                    m.skip = isNaN(h) || isNaN(g), l && (m.options = r || this.resolveDataElementOptions(d, t.active ? "active" : s), i && (m.options.radius = 0)), this.updateElement(t, d, m, s)
                }
            }
            resolveDataElementOptions(e, t) {
                const n = this.getParsed(e);
                let s = super.resolveDataElementOptions(e, t);
                s.$shared && (s = Object.assign({}, s, {
                    $shared: !1
                }));
                const i = s.radius;
                return "active" !== t && (s.radius = 0), s.radius += oe(n && n._custom, i), s
            }
        }
        class Js extends Vs {
            static id = "doughnut";
            static defaults = {
                datasetElementType: !1,
                dataElementType: "arc",
                animation: {
                    animateRotate: !0,
                    animateScale: !1
                },
                animations: {
                    numbers: {
                        type: "number",
                        properties: ["circumference", "endAngle", "innerRadius", "outerRadius", "startAngle", "x", "y", "offset", "borderWidth", "spacing"]
                    }
                },
                cutout: "50%",
                rotation: 0,
                circumference: 360,
                radius: "100%",
                spacing: 0,
                indexAxis: "r"
            };
            static descriptors = {
                _scriptable: e => "spacing" !== e,
                _indexable: e => "spacing" !== e
            };
            static overrides = {
                aspectRatio: 1,
                plugins: {
                    legend: {
                        labels: {
                            generateLabels(e) {
                                const t = e.data;
                                if (t.labels.length && t.datasets.length) {
                                    const {
                                        labels: {
                                            pointStyle: n,
                                            color: s
                                        }
                                    } = e.legend.options;
                                    return t.labels.map(((t, i) => {
                                        const a = e.getDatasetMeta(0).controller.getStyle(i);
                                        return {
                                            text: t,
                                            fillStyle: a.backgroundColor,
                                            strokeStyle: a.borderColor,
                                            fontColor: s,
                                            lineWidth: a.borderWidth,
                                            pointStyle: n,
                                            hidden: !e.getDataVisibility(i),
                                            index: i
                                        }
                                    }))
                                }
                                return []
                            }
                        },
                        onClick(e, t, n) {
                            n.chart.toggleDataVisibility(t.index), n.chart.update()
                        }
                    }
                }
            };
            constructor(e, t) {
                super(e, t), this.enableOptionSharing = !0, this.innerRadius = void 0, this.outerRadius = void 0, this.offsetX = void 0, this.offsetY = void 0
            }
            linkScales() {}
            parse(e, t) {
                const n = this.getDataset().data,
                    s = this._cachedMeta;
                if (!1 === this._parsing) s._parsed = n;
                else {
                    let i, a, o = e => +n[e];
                    if (se(n[e])) {
                        const {
                            key: e = "value"
                        } = this._parsing;
                        o = t => +ve(n[t], e)
                    }
                    for (i = e, a = e + t; i < a; ++i) s._parsed[i] = o(i)
                }
            }
            _getRotation() {
                return De(this.options.rotation - 90)
            }
            _getCircumference() {
                return De(this.options.circumference)
            }
            _getRotationExtents() {
                let e = ye,
                    t = -ye;
                for (let n = 0; n < this.chart.data.datasets.length; ++n)
                    if (this.chart.isDatasetVisible(n) && this.chart.getDatasetMeta(n).type === this._type) {
                        const s = this.chart.getDatasetMeta(n).controller,
                            i = s._getRotation(),
                            a = s._getCircumference();
                        e = Math.min(e, i), t = Math.max(t, i + a)
                    } return {
                    rotation: e,
                    circumference: t - e
                }
            }
            update(e) {
                const t = this.chart,
                    {
                        chartArea: n
                    } = t,
                    s = this._cachedMeta,
                    i = s.data,
                    a = this.getMaxBorderWidth() + this.getMaxOffset(i) + this.options.spacing,
                    o = Math.max((Math.min(n.width, n.height) - a) / 2, 0),
                    r = Math.min(((e, t) => "string" == typeof e && e.endsWith("%") ? parseFloat(e) / 100 : +e / t)(this.options.cutout, o), 1),
                    l = this._getRingWeight(this.index),
                    {
                        circumference: c,
                        rotation: u
                    } = this._getRotationExtents(),
                    {
                        ratioX: d,
                        ratioY: m,
                        offsetX: h,
                        offsetY: g
                    } = function (e, t, n) {
                        let s = 1,
                            i = 1,
                            a = 0,
                            o = 0;
                        if (t < ye) {
                            const r = e,
                                l = r + t,
                                c = Math.cos(r),
                                u = Math.sin(r),
                                d = Math.cos(l),
                                m = Math.sin(l),
                                h = (e, t, s) => Ke(e, r, l, !0) ? 1 : Math.max(t, t * n, s, s * n),
                                g = (e, t, s) => Ke(e, r, l, !0) ? -1 : Math.min(t, t * n, s, s * n),
                                p = h(0, c, d),
                                f = h(Ne, u, m),
                                x = g(Ie, c, d),
                                v = g(Ie + Ne, u, m);
                            s = (p - x) / 2, i = (f - v) / 2, a = -(p + x) / 2, o = -(f + v) / 2
                        }
                        return {
                            ratioX: s,
                            ratioY: i,
                            offsetX: a,
                            offsetY: o
                        }
                    }(u, c, r),
                    p = (n.width - a) / d,
                    f = (n.height - a) / m,
                    x = Math.max(Math.min(p, f) / 2, 0),
                    v = re(this.options.radius, x),
                    _ = (v - Math.max(v * r, 0)) / this._getVisibleDatasetWeightTotal();
                this.offsetX = h * v, this.offsetY = g * v, s.total = this.calculateTotal(), this.outerRadius = v - _ * this._getRingWeightOffset(this.index), this.innerRadius = Math.max(this.outerRadius - _ * l, 0), this.updateElements(i, 0, i.length, e)
            }
            _circumference(e, t) {
                const n = this.options,
                    s = this._cachedMeta,
                    i = this._getCircumference();
                return t && n.animation.animateRotate || !this.chart.getDataVisibility(e) || null === s._parsed[e] || s.data[e].hidden ? 0 : this.calculateCircumference(s._parsed[e] * i / ye)
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s,
                    a = this.chart,
                    o = a.chartArea,
                    r = a.options.animation,
                    l = (o.left + o.right) / 2,
                    c = (o.top + o.bottom) / 2,
                    u = i && r.animateScale,
                    d = u ? 0 : this.innerRadius,
                    m = u ? 0 : this.outerRadius,
                    {
                        sharedOptions: h,
                        includeOptions: g
                    } = this._getSharedOptions(t, s);
                let p, f = this._getRotation();
                for (p = 0; p < t; ++p) f += this._circumference(p, i);
                for (p = t; p < t + n; ++p) {
                    const t = this._circumference(p, i),
                        n = e[p],
                        a = {
                            x: l + this.offsetX,
                            y: c + this.offsetY,
                            startAngle: f,
                            endAngle: f + t,
                            circumference: t,
                            outerRadius: m,
                            innerRadius: d
                        };
                    g && (a.options = h || this.resolveDataElementOptions(p, n.active ? "active" : s)), f += t, this.updateElement(n, p, a, s)
                }
            }
            calculateTotal() {
                const e = this._cachedMeta,
                    t = e.data;
                let n, s = 0;
                for (n = 0; n < t.length; n++) {
                    const i = e._parsed[n];
                    null === i || isNaN(i) || !this.chart.getDataVisibility(n) || t[n].hidden || (s += Math.abs(i))
                }
                return s
            }
            calculateCircumference(e) {
                const t = this._cachedMeta.total;
                return t > 0 && !isNaN(e) ? ye * (Math.abs(e) / t) : 0
            }
            getLabelAndValue(e) {
                const t = this._cachedMeta,
                    n = this.chart,
                    s = n.data.labels || [],
                    i = Xt(t._parsed[e], n.options.locale);
                return {
                    label: s[e] || "",
                    value: i
                }
            }
            getMaxBorderWidth(e) {
                let t = 0;
                const n = this.chart;
                let s, i, a, o, r;
                if (!e)
                    for (s = 0, i = n.data.datasets.length; s < i; ++s)
                        if (n.isDatasetVisible(s)) {
                            a = n.getDatasetMeta(s), e = a.data, o = a.controller;
                            break
                        } if (!e) return 0;
                for (s = 0, i = e.length; s < i; ++s) r = o.resolveDataElementOptions(s), "inner" !== r.borderAlign && (t = Math.max(t, r.borderWidth || 0, r.hoverBorderWidth || 0));
                return t
            }
            getMaxOffset(e) {
                let t = 0;
                for (let n = 0, s = e.length; n < s; ++n) {
                    const e = this.resolveDataElementOptions(n);
                    t = Math.max(t, e.offset || 0, e.hoverOffset || 0)
                }
                return t
            }
            _getRingWeightOffset(e) {
                let t = 0;
                for (let n = 0; n < e; ++n) this.chart.isDatasetVisible(n) && (t += this._getRingWeight(n));
                return t
            }
            _getRingWeight(e) {
                return Math.max(oe(this.chart.data.datasets[e].weight, 1), 0)
            }
            _getVisibleDatasetWeightTotal() {
                return this._getRingWeightOffset(this.chart.data.datasets.length) || 1
            }
        }
        class ei extends Vs {
            static id = "line";
            static defaults = {
                datasetElementType: "line",
                dataElementType: "point",
                showLine: !0,
                spanGaps: !1
            };
            static overrides = {
                scales: {
                    _index_: {
                        type: "category"
                    },
                    _value_: {
                        type: "linear"
                    }
                }
            };
            initialize() {
                this.enableOptionSharing = !0, this.supportsDecimation = !0, super.initialize()
            }
            update(e) {
                const t = this._cachedMeta,
                    {
                        dataset: n,
                        data: s = [],
                        _dataset: i
                    } = t,
                    a = this.chart._animationsDisabled;
                let {
                    start: o,
                    count: r
                } = st(t, s, a);
                this._drawStart = o, this._drawCount = r, it(t) && (o = 0, r = s.length), n._chart = this.chart, n._datasetIndex = this.index, n._decimated = !!i._decimated, n.points = s;
                const l = this.resolveDatasetElementOptions(e);
                this.options.showLine || (l.borderWidth = 0), l.segment = this.options.segment, this.updateElement(n, void 0, {
                    animated: !a,
                    options: l
                }, e), this.updateElements(s, o, r, e)
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s,
                    {
                        iScale: a,
                        vScale: o,
                        _stacked: r,
                        _dataset: l
                    } = this._cachedMeta,
                    {
                        sharedOptions: c,
                        includeOptions: u
                    } = this._getSharedOptions(t, s),
                    d = a.axis,
                    m = o.axis,
                    {
                        spanGaps: h,
                        segment: g
                    } = this.options,
                    p = Re(h) ? h : Number.POSITIVE_INFINITY,
                    f = this.chart._animationsDisabled || i || "none" === s,
                    x = t + n,
                    v = e.length;
                let _ = t > 0 && this.getParsed(t - 1);
                for (let n = 0; n < v; ++n) {
                    const h = e[n],
                        v = f ? h : {};
                    if (n < t || n >= x) {
                        v.skip = !0;
                        continue
                    }
                    const b = this.getParsed(n),
                        T = te(b[m]),
                        E = v[d] = a.getPixelForValue(b[d], n),
                        I = v[m] = i || T ? o.getBasePixel() : o.getPixelForValue(r ? this.applyStack(o, b, r) : b[m], n);
                    v.skip = isNaN(E) || isNaN(I) || T, v.stop = n > 0 && Math.abs(b[d] - _[d]) > p, g && (v.parsed = b, v.raw = l.data[n]), u && (v.options = c || this.resolveDataElementOptions(n, h.active ? "active" : s)), f || this.updateElement(h, n, v, s), _ = b
                }
            }
            getMaxOverflow() {
                const e = this._cachedMeta,
                    t = e.dataset,
                    n = t.options && t.options.borderWidth || 0,
                    s = e.data || [];
                if (!s.length) return n;
                const i = s[0].size(this.resolveDataElementOptions(0)),
                    a = s[s.length - 1].size(this.resolveDataElementOptions(s.length - 1));
                return Math.max(n, i, a) / 2
            }
            draw() {
                const e = this._cachedMeta;
                e.dataset.updateControlPoints(this.chart.chartArea, e.iScale.axis), super.draw()
            }
        }
        class ti extends Vs {
            static id = "polarArea";
            static defaults = {
                dataElementType: "arc",
                animation: {
                    animateRotate: !0,
                    animateScale: !0
                },
                animations: {
                    numbers: {
                        type: "number",
                        properties: ["x", "y", "startAngle", "endAngle", "innerRadius", "outerRadius"]
                    }
                },
                indexAxis: "r",
                startAngle: 0
            };
            static overrides = {
                aspectRatio: 1,
                plugins: {
                    legend: {
                        labels: {
                            generateLabels(e) {
                                const t = e.data;
                                if (t.labels.length && t.datasets.length) {
                                    const {
                                        labels: {
                                            pointStyle: n,
                                            color: s
                                        }
                                    } = e.legend.options;
                                    return t.labels.map(((t, i) => {
                                        const a = e.getDatasetMeta(0).controller.getStyle(i);
                                        return {
                                            text: t,
                                            fillStyle: a.backgroundColor,
                                            strokeStyle: a.borderColor,
                                            fontColor: s,
                                            lineWidth: a.borderWidth,
                                            pointStyle: n,
                                            hidden: !e.getDataVisibility(i),
                                            index: i
                                        }
                                    }))
                                }
                                return []
                            }
                        },
                        onClick(e, t, n) {
                            n.chart.toggleDataVisibility(t.index), n.chart.update()
                        }
                    }
                },
                scales: {
                    r: {
                        type: "radialLinear",
                        angleLines: {
                            display: !1
                        },
                        beginAtZero: !0,
                        grid: {
                            circular: !0
                        },
                        pointLabels: {
                            display: !1
                        },
                        startAngle: 0
                    }
                }
            };
            constructor(e, t) {
                super(e, t), this.innerRadius = void 0, this.outerRadius = void 0
            }
            getLabelAndValue(e) {
                const t = this._cachedMeta,
                    n = this.chart,
                    s = n.data.labels || [],
                    i = Xt(t._parsed[e].r, n.options.locale);
                return {
                    label: s[e] || "",
                    value: i
                }
            }
            parseObjectData(e, t, n, s) {
                return Wn.bind(this)(e, t, n, s)
            }
            update(e) {
                const t = this._cachedMeta.data;
                this._updateRadius(), this.updateElements(t, 0, t.length, e)
            }
            getMinMax() {
                const e = this._cachedMeta,
                    t = {
                        min: Number.POSITIVE_INFINITY,
                        max: Number.NEGATIVE_INFINITY
                    };
                return e.data.forEach(((e, n) => {
                    const s = this.getParsed(n).r;
                    !isNaN(s) && this.chart.getDataVisibility(n) && (s < t.min && (t.min = s), s > t.max && (t.max = s))
                })), t
            }
            _updateRadius() {
                const e = this.chart,
                    t = e.chartArea,
                    n = e.options,
                    s = Math.min(t.right - t.left, t.bottom - t.top),
                    i = Math.max(s / 2, 0),
                    a = (i - Math.max(n.cutoutPercentage ? i / 100 * n.cutoutPercentage : 1, 0)) / e.getVisibleDatasetCount();
                this.outerRadius = i - a * this.index, this.innerRadius = this.outerRadius - a
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s,
                    a = this.chart,
                    o = a.options.animation,
                    r = this._cachedMeta.rScale,
                    l = r.xCenter,
                    c = r.yCenter,
                    u = r.getIndexAngle(0) - .5 * Ie;
                let d, m = u;
                const h = 360 / this.countVisibleElements();
                for (d = 0; d < t; ++d) m += this._computeAngle(d, s, h);
                for (d = t; d < t + n; d++) {
                    const t = e[d];
                    let n = m,
                        g = m + this._computeAngle(d, s, h),
                        p = a.getDataVisibility(d) ? r.getDistanceFromCenterForValue(this.getParsed(d).r) : 0;
                    m = g, i && (o.animateScale && (p = 0), o.animateRotate && (n = g = u));
                    const f = {
                        x: l,
                        y: c,
                        innerRadius: 0,
                        outerRadius: p,
                        startAngle: n,
                        endAngle: g,
                        options: this.resolveDataElementOptions(d, t.active ? "active" : s)
                    };
                    this.updateElement(t, d, f, s)
                }
            }
            countVisibleElements() {
                const e = this._cachedMeta;
                let t = 0;
                return e.data.forEach(((e, n) => {
                    !isNaN(this.getParsed(n).r) && this.chart.getDataVisibility(n) && t++
                })), t
            }
            _computeAngle(e, t, n) {
                return this.chart.getDataVisibility(e) ? De(this.resolveDataElementOptions(e, t).angle || n) : 0
            }
        }
        class ni extends Js {
            static id = "pie";
            static defaults = {
                cutout: 0,
                rotation: 0,
                circumference: 360,
                radius: "100%"
            }
        }
        class si extends Vs {
            static id = "radar";
            static defaults = {
                datasetElementType: "line",
                dataElementType: "point",
                indexAxis: "r",
                showLine: !0,
                elements: {
                    line: {
                        fill: "start"
                    }
                }
            };
            static overrides = {
                aspectRatio: 1,
                scales: {
                    r: {
                        type: "radialLinear"
                    }
                }
            };
            getLabelAndValue(e) {
                const t = this._cachedMeta.vScale,
                    n = this.getParsed(e);
                return {
                    label: t.getLabels()[e],
                    value: "" + t.getLabelForValue(n[t.axis])
                }
            }
            parseObjectData(e, t, n, s) {
                return Wn.bind(this)(e, t, n, s)
            }
            update(e) {
                const t = this._cachedMeta,
                    n = t.dataset,
                    s = t.data || [],
                    i = t.iScale.getLabels();
                if (n.points = s, "resize" !== e) {
                    const t = this.resolveDatasetElementOptions(e);
                    this.options.showLine || (t.borderWidth = 0);
                    const a = {
                        _loop: !0,
                        _fullLoop: i.length === s.length,
                        options: t
                    };
                    this.updateElement(n, void 0, a, e)
                }
                this.updateElements(s, 0, s.length, e)
            }
            updateElements(e, t, n, s) {
                const i = this._cachedMeta.rScale,
                    a = "reset" === s;
                for (let o = t; o < t + n; o++) {
                    const t = e[o],
                        n = this.resolveDataElementOptions(o, t.active ? "active" : s),
                        r = i.getPointPositionForValue(o, this.getParsed(o).r),
                        l = a ? i.xCenter : r.x,
                        c = a ? i.yCenter : r.y,
                        u = {
                            x: l,
                            y: c,
                            angle: r.angle,
                            skip: isNaN(l) || isNaN(c),
                            options: n
                        };
                    this.updateElement(t, o, u, s)
                }
            }
        }
        class ii extends Vs {
            static id = "scatter";
            static defaults = {
                datasetElementType: !1,
                dataElementType: "point",
                showLine: !1,
                fill: !1
            };
            static overrides = {
                interaction: {
                    mode: "point"
                },
                scales: {
                    x: {
                        type: "linear"
                    },
                    y: {
                        type: "linear"
                    }
                }
            };
            getLabelAndValue(e) {
                const t = this._cachedMeta,
                    n = this.chart.data.labels || [],
                    {
                        xScale: s,
                        yScale: i
                    } = t,
                    a = this.getParsed(e),
                    o = s.getLabelForValue(a.x),
                    r = i.getLabelForValue(a.y);
                return {
                    label: n[e] || "",
                    value: "(" + o + ", " + r + ")"
                }
            }
            update(e) {
                const t = this._cachedMeta,
                    {
                        data: n = []
                    } = t,
                    s = this.chart._animationsDisabled;
                let {
                    start: i,
                    count: a
                } = st(t, n, s);
                if (this._drawStart = i, this._drawCount = a, it(t) && (i = 0, a = n.length), this.options.showLine) {
                    const {
                        dataset: i,
                        _dataset: a
                    } = t;
                    i._chart = this.chart, i._datasetIndex = this.index, i._decimated = !!a._decimated, i.points = n;
                    const o = this.resolveDatasetElementOptions(e);
                    o.segment = this.options.segment, this.updateElement(i, void 0, {
                        animated: !s,
                        options: o
                    }, e)
                }
                this.updateElements(n, i, a, e)
            }
            addElements() {
                const {
                    showLine: e
                } = this.options;
                !this.datasetElementType && e && (this.datasetElementType = this.chart.registry.getElement("line")), super.addElements()
            }
            updateElements(e, t, n, s) {
                const i = "reset" === s,
                    {
                        iScale: a,
                        vScale: o,
                        _stacked: r,
                        _dataset: l
                    } = this._cachedMeta,
                    c = this.resolveDataElementOptions(t, s),
                    u = this.getSharedOptions(c),
                    d = this.includeOptions(s, u),
                    m = a.axis,
                    h = o.axis,
                    {
                        spanGaps: g,
                        segment: p
                    } = this.options,
                    f = Re(g) ? g : Number.POSITIVE_INFINITY,
                    x = this.chart._animationsDisabled || i || "none" === s;
                let v = t > 0 && this.getParsed(t - 1);
                for (let c = t; c < t + n; ++c) {
                    const t = e[c],
                        n = this.getParsed(c),
                        g = x ? t : {},
                        _ = te(n[h]),
                        b = g[m] = a.getPixelForValue(n[m], c),
                        T = g[h] = i || _ ? o.getBasePixel() : o.getPixelForValue(r ? this.applyStack(o, n, r) : n[h], c);
                    g.skip = isNaN(b) || isNaN(T) || _, g.stop = c > 0 && Math.abs(n[m] - v[m]) > f, p && (g.parsed = n, g.raw = l.data[c]), d && (g.options = u || this.resolveDataElementOptions(c, t.active ? "active" : s)), x || this.updateElement(t, c, g, s), v = n
                }
                this.updateSharedOptions(u, s, c)
            }
            getMaxOverflow() {
                const e = this._cachedMeta,
                    t = e.data || [];
                if (!this.options.showLine) {
                    let e = 0;
                    for (let n = t.length - 1; n >= 0; --n) e = Math.max(e, t[n].size(this.resolveDataElementOptions(n)) / 2);
                    return e > 0 && e
                }
                const n = e.dataset,
                    s = n.options && n.options.borderWidth || 0;
                if (!t.length) return s;
                const i = t[0].size(this.resolveDataElementOptions(0)),
                    a = t[t.length - 1].size(this.resolveDataElementOptions(t.length - 1));
                return Math.max(s, i, a) / 2
            }
        }
        var ai = Object.freeze({
            __proto__: null,
            BarController: Qs,
            BubbleController: Zs,
            DoughnutController: Js,
            LineController: ei,
            PolarAreaController: ti,
            PieController: ni,
            RadarController: si,
            ScatterController: ii
        });

        function oi() {
            throw new Error("This method is not implemented: Check that a complete date adapter is provided.")
        }
        class ri {
            static override(e) {
                Object.assign(ri.prototype, e)
            }
            constructor(e) {
                this.options = e || {}
            }
            init() {}
            formats() {
                return oi()
            }
            parse() {
                return oi()
            }
            format() {
                return oi()
            }
            add() {
                return oi()
            }
            diff() {
                return oi()
            }
            startOf() {
                return oi()
            }
            endOf() {
                return oi()
            }
        }
        var li = {
            _date: ri
        };

        function ci(e, t, n, s) {
            const {
                controller: i,
                data: a,
                _sorted: o
            } = e, r = i._cachedMeta.iScale;
            if (r && t === r.axis && "r" !== t && o && a.length) {
                const e = r._reversePixels ? qe : $e;
                if (!s) return e(a, t, n);
                if (i._sharedOptions) {
                    const s = a[0],
                        i = "function" == typeof s.getRange && s.getRange(t);
                    if (i) {
                        const s = e(a, t, n - i),
                            o = e(a, t, n + i);
                        return {
                            lo: s.lo,
                            hi: o.hi
                        }
                    }
                }
            }
            return {
                lo: 0,
                hi: a.length - 1
            }
        }

        function ui(e, t, n, s, i) {
            const a = e.getSortedVisibleDatasetMetas(),
                o = n[t];
            for (let e = 0, n = a.length; e < n; ++e) {
                const {
                    index: n,
                    data: r
                } = a[e], {
                    lo: l,
                    hi: c
                } = ci(a[e], t, o, i);
                for (let e = l; e <= c; ++e) {
                    const t = r[e];
                    t.skip || s(t, n, e)
                }
            }
        }

        function di(e, t, n, s, i) {
            const a = [];
            if (!i && !e.isPointInArea(t)) return a;
            return ui(e, n, t, (function (n, o, r) {
                (i || mn(n, e.chartArea, 0)) && n.inRange(t.x, t.y, s) && a.push({
                    element: n,
                    datasetIndex: o,
                    index: r
                })
            }), !0), a
        }

        function mi(e, t, n, s, i, a) {
            let o = [];
            const r = function (e) {
                const t = -1 !== e.indexOf("x"),
                    n = -1 !== e.indexOf("y");
                return function (e, s) {
                    const i = t ? Math.abs(e.x - s.x) : 0,
                        a = n ? Math.abs(e.y - s.y) : 0;
                    return Math.sqrt(Math.pow(i, 2) + Math.pow(a, 2))
                }
            }(n);
            let l = Number.POSITIVE_INFINITY;
            return ui(e, n, t, (function (n, c, u) {
                const d = n.inRange(t.x, t.y, i);
                if (s && !d) return;
                const m = n.getCenterPoint(i);
                if (!(!!a || e.isPointInArea(m)) && !d) return;
                const h = r(t, m);
                h < l ? (o = [{
                    element: n,
                    datasetIndex: c,
                    index: u
                }], l = h) : h === l && o.push({
                    element: n,
                    datasetIndex: c,
                    index: u
                })
            })), o
        }

        function hi(e, t, n, s, i, a) {
            return a || e.isPointInArea(t) ? "r" !== n || s ? mi(e, t, n, s, i, a) : function (e, t, n, s) {
                let i = [];
                return ui(e, n, t, (function (e, n, a) {
                    const {
                        startAngle: o,
                        endAngle: r
                    } = e.getProps(["startAngle", "endAngle"], s), {
                        angle: l
                    } = Be(e, {
                        x: t.x,
                        y: t.y
                    });
                    Ke(l, o, r) && i.push({
                        element: e,
                        datasetIndex: n,
                        index: a
                    })
                })), i
            }(e, t, n, i) : []
        }

        function gi(e, t, n, s, i) {
            const a = [],
                o = "x" === n ? "inXRange" : "inYRange";
            let r = !1;
            return ui(e, n, t, ((e, s, l) => {
                e[o](t[n], i) && (a.push({
                    element: e,
                    datasetIndex: s,
                    index: l
                }), r = r || e.inRange(t.x, t.y, i))
            })), s && !r ? [] : a
        }
        var pi = {
            evaluateInteractionItems: ui,
            modes: {
                index(e, t, n, s) {
                    const i = os(t, e),
                        a = n.axis || "x",
                        o = n.includeInvisible || !1,
                        r = n.intersect ? di(e, i, a, s, o) : hi(e, i, a, !1, s, o),
                        l = [];
                    return r.length ? (e.getSortedVisibleDatasetMetas().forEach((e => {
                        const t = r[0].index,
                            n = e.data[t];
                        n && !n.skip && l.push({
                            element: n,
                            datasetIndex: e.index,
                            index: t
                        })
                    })), l) : []
                },
                dataset(e, t, n, s) {
                    const i = os(t, e),
                        a = n.axis || "xy",
                        o = n.includeInvisible || !1;
                    let r = n.intersect ? di(e, i, a, s, o) : hi(e, i, a, !1, s, o);
                    if (r.length > 0) {
                        const t = r[0].datasetIndex,
                            n = e.getDatasetMeta(t).data;
                        r = [];
                        for (let e = 0; e < n.length; ++e) r.push({
                            element: n[e],
                            datasetIndex: t,
                            index: e
                        })
                    }
                    return r
                },
                point: (e, t, n, s) => di(e, os(t, e), n.axis || "xy", s, n.includeInvisible || !1),
                nearest(e, t, n, s) {
                    const i = os(t, e),
                        a = n.axis || "xy",
                        o = n.includeInvisible || !1;
                    return hi(e, i, a, n.intersect, s, o)
                },
                x: (e, t, n, s) => gi(e, os(t, e), "x", n.intersect, s),
                y: (e, t, n, s) => gi(e, os(t, e), "y", n.intersect, s)
            }
        };
        const fi = ["left", "top", "right", "bottom"];

        function xi(e, t) {
            return e.filter((e => e.pos === t))
        }

        function vi(e, t) {
            return e.filter((e => -1 === fi.indexOf(e.pos) && e.box.axis === t))
        }

        function _i(e, t) {
            return e.sort(((e, n) => {
                const s = t ? n : e,
                    i = t ? e : n;
                return s.weight === i.weight ? s.index - i.index : s.weight - i.weight
            }))
        }

        function bi(e, t) {
            const n = function (e) {
                    const t = {};
                    for (const n of e) {
                        const {
                            stack: e,
                            pos: s,
                            stackWeight: i
                        } = n;
                        if (!e || !fi.includes(s)) continue;
                        const a = t[e] || (t[e] = {
                            count: 0,
                            placed: 0,
                            weight: 0,
                            size: 0
                        });
                        a.count++, a.weight += i
                    }
                    return t
                }(e),
                {
                    vBoxMaxWidth: s,
                    hBoxMaxHeight: i
                } = t;
            let a, o, r;
            for (a = 0, o = e.length; a < o; ++a) {
                r = e[a];
                const {
                    fullSize: o
                } = r.box, l = n[r.stack], c = l && r.stackWeight / l.weight;
                r.horizontal ? (r.width = c ? c * s : o && t.availableWidth, r.height = i) : (r.width = s, r.height = c ? c * i : o && t.availableHeight)
            }
            return n
        }

        function Ti(e, t, n, s) {
            return Math.max(e[n], t[n]) + Math.max(e[s], t[s])
        }

        function Ei(e, t) {
            e.top = Math.max(e.top, t.top), e.left = Math.max(e.left, t.left), e.bottom = Math.max(e.bottom, t.bottom), e.right = Math.max(e.right, t.right)
        }

        function Ii(e, t, n, s) {
            const {
                pos: i,
                box: a
            } = n, o = e.maxPadding;
            if (!se(i)) {
                n.size && (e[i] -= n.size);
                const t = s[n.stack] || {
                    size: 0,
                    count: 1
                };
                t.size = Math.max(t.size, n.horizontal ? a.height : a.width), n.size = t.size / t.count, e[i] += n.size
            }
            a.getPadding && Ei(o, a.getPadding());
            const r = Math.max(0, t.outerWidth - Ti(o, e, "left", "right")),
                l = Math.max(0, t.outerHeight - Ti(o, e, "top", "bottom")),
                c = r !== e.w,
                u = l !== e.h;
            return e.w = r, e.h = l, n.horizontal ? {
                same: c,
                other: u
            } : {
                same: u,
                other: c
            }
        }

        function yi(e, t) {
            const n = t.maxPadding;

            function s(e) {
                const s = {
                    left: 0,
                    top: 0,
                    right: 0,
                    bottom: 0
                };
                return e.forEach((e => {
                    s[e] = Math.max(t[e], n[e])
                })), s
            }
            return s(e ? ["left", "right"] : ["top", "bottom"])
        }

        function ji(e, t, n, s) {
            const i = [];
            let a, o, r, l, c, u;
            for (a = 0, o = e.length, c = 0; a < o; ++a) {
                r = e[a], l = r.box, l.update(r.width || t.w, r.height || t.h, yi(r.horizontal, t));
                const {
                    same: o,
                    other: d
                } = Ii(t, n, r, s);
                c |= o && i.length, u = u || d, l.fullSize || i.push(r)
            }
            return c && ji(i, t, n, s) || u
        }

        function Si(e, t, n, s, i) {
            e.top = n, e.left = t, e.right = t + s, e.bottom = n + i, e.width = s, e.height = i
        }

        function Ci(e, t, n, s) {
            const i = n.padding;
            let {
                x: a,
                y: o
            } = t;
            for (const r of e) {
                const e = r.box,
                    l = s[r.stack] || {
                        count: 1,
                        placed: 0,
                        weight: 1
                    },
                    c = r.stackWeight / l.weight || 1;
                if (r.horizontal) {
                    const s = t.w * c,
                        a = l.size || e.height;
                    be(l.start) && (o = l.start), e.fullSize ? Si(e, i.left, o, n.outerWidth - i.right - i.left, a) : Si(e, t.left + l.placed, o, s, a), l.start = o, l.placed += s, o = e.bottom
                } else {
                    const s = t.h * c,
                        o = l.size || e.width;
                    be(l.start) && (a = l.start), e.fullSize ? Si(e, a, i.top, o, n.outerHeight - i.bottom - i.top) : Si(e, a, t.top + l.placed, o, s), l.start = a, l.placed += s, a = e.right
                }
            }
            t.x = a, t.y = o
        }
        var Ni = {
            addBox(e, t) {
                e.boxes || (e.boxes = []), t.fullSize = t.fullSize || !1, t.position = t.position || "top", t.weight = t.weight || 0, t._layers = t._layers || function () {
                    return [{
                        z: 0,
                        draw(e) {
                            t.draw(e)
                        }
                    }]
                }, e.boxes.push(t)
            },
            removeBox(e, t) {
                const n = e.boxes ? e.boxes.indexOf(t) : -1; - 1 !== n && e.boxes.splice(n, 1)
            },
            configure(e, t, n) {
                t.fullSize = n.fullSize, t.position = n.position, t.weight = n.weight
            },
            update(e, t, n, s) {
                if (!e) return;
                const i = Nn(e.options.layout.padding),
                    a = Math.max(t - i.width, 0),
                    o = Math.max(n - i.height, 0),
                    r = function (e) {
                        const t = function (e) {
                                const t = [];
                                let n, s, i, a, o, r;
                                for (n = 0, s = (e || []).length; n < s; ++n) i = e[n], ({
                                    position: a,
                                    options: {
                                        stack: o,
                                        stackWeight: r = 1
                                    }
                                } = i), t.push({
                                    index: n,
                                    box: i,
                                    pos: a,
                                    horizontal: i.isHorizontal(),
                                    weight: i.weight,
                                    stack: o && a + o,
                                    stackWeight: r
                                });
                                return t
                            }(e),
                            n = _i(t.filter((e => e.box.fullSize)), !0),
                            s = _i(xi(t, "left"), !0),
                            i = _i(xi(t, "right")),
                            a = _i(xi(t, "top"), !0),
                            o = _i(xi(t, "bottom")),
                            r = vi(t, "x"),
                            l = vi(t, "y");
                        return {
                            fullSize: n,
                            leftAndTop: s.concat(a),
                            rightAndBottom: i.concat(l).concat(o).concat(r),
                            chartArea: xi(t, "chartArea"),
                            vertical: s.concat(i).concat(l),
                            horizontal: a.concat(o).concat(r)
                        }
                    }(e.boxes),
                    l = r.vertical,
                    c = r.horizontal;
                ce(e.boxes, (e => {
                    "function" == typeof e.beforeLayout && e.beforeLayout()
                }));
                const u = l.reduce(((e, t) => t.box.options && !1 === t.box.options.display ? e : e + 1), 0) || 1,
                    d = Object.freeze({
                        outerWidth: t,
                        outerHeight: n,
                        padding: i,
                        availableWidth: a,
                        availableHeight: o,
                        vBoxMaxWidth: a / 2 / u,
                        hBoxMaxHeight: o / 2
                    }),
                    m = Object.assign({}, i);
                Ei(m, Nn(s));
                const h = Object.assign({
                        maxPadding: m,
                        w: a,
                        h: o,
                        x: i.left,
                        y: i.top
                    }, i),
                    g = bi(l.concat(c), d);
                ji(r.fullSize, h, d, g), ji(l, h, d, g), ji(c, h, d, g) && ji(l, h, d, g),
                    function (e) {
                        const t = e.maxPadding;

                        function n(n) {
                            const s = Math.max(t[n] - e[n], 0);
                            return e[n] += s, s
                        }
                        e.y += n("top"), e.x += n("left"), n("right"), n("bottom")
                    }(h), Ci(r.leftAndTop, h, d, g), h.x += h.w, h.y += h.h, Ci(r.rightAndBottom, h, d, g), e.chartArea = {
                        left: h.left,
                        top: h.top,
                        right: h.left + h.w,
                        bottom: h.top + h.h,
                        height: h.h,
                        width: h.w
                    }, ce(r.chartArea, (t => {
                        const n = t.box;
                        Object.assign(n, e.chartArea), n.update(h.w, h.h, {
                            left: 0,
                            top: 0,
                            right: 0,
                            bottom: 0
                        })
                    }))
            }
        };
        class wi {
            acquireContext(e, t) {}
            releaseContext(e) {
                return !1
            }
            addEventListener(e, t, n) {}
            removeEventListener(e, t, n) {}
            getDevicePixelRatio() {
                return 1
            }
            getMaximumSize(e, t, n, s) {
                return t = Math.max(0, t || e.width), n = n || e.height, {
                    width: t,
                    height: Math.max(0, s ? Math.floor(t / s) : n)
                }
            }
            isAttached(e) {
                return !0
            }
            updateConfig(e) {}
        }
        class Oi extends wi {
            acquireContext(e) {
                return e && e.getContext && e.getContext("2d") || null
            }
            updateConfig(e) {
                e.options.animation = !1
            }
        }
        const Pi = "$chartjs",
            Li = {
                touchstart: "mousedown",
                touchmove: "mousemove",
                touchend: "mouseup",
                pointerenter: "mouseenter",
                pointerdown: "mousedown",
                pointermove: "mousemove",
                pointerup: "mouseup",
                pointerleave: "mouseout",
                pointerout: "mouseout"
            },
            Ai = e => null === e || "" === e;
        const Mi = !!us && {
            passive: !0
        };

        function Ri(e, t, n) {
            e.canvas.removeEventListener(t, n, Mi)
        }

        function ki(e, t) {
            for (const n of e)
                if (n === t || n.contains(t)) return !0
        }

        function Di(e, t, n) {
            const s = e.canvas,
                i = new MutationObserver((e => {
                    let t = !1;
                    for (const n of e) t = t || ki(n.addedNodes, s), t = t && !ki(n.removedNodes, s);
                    t && n()
                }));
            return i.observe(document, {
                childList: !0,
                subtree: !0
            }), i
        }

        function Fi(e, t, n) {
            const s = e.canvas,
                i = new MutationObserver((e => {
                    let t = !1;
                    for (const n of e) t = t || ki(n.removedNodes, s), t = t && !ki(n.addedNodes, s);
                    t && n()
                }));
            return i.observe(document, {
                childList: !0,
                subtree: !0
            }), i
        }
        const Ui = new Map;
        let Bi = 0;

        function Gi() {
            const e = window.devicePixelRatio;
            e !== Bi && (Bi = e, Ui.forEach(((t, n) => {
                n.currentDevicePixelRatio !== e && t()
            })))
        }

        function Vi(e, t, n) {
            const s = e.canvas,
                i = s && es(s);
            if (!i) return;
            const a = et(((e, t) => {
                    const s = i.clientWidth;
                    n(e, t), s < i.clientWidth && n()
                }), window),
                o = new ResizeObserver((e => {
                    const t = e[0],
                        n = t.contentRect.width,
                        s = t.contentRect.height;
                    0 === n && 0 === s || a(n, s)
                }));
            return o.observe(i),
                function (e, t) {
                    Ui.size || window.addEventListener("resize", Gi), Ui.set(e, t)
                }(e, a), o
        }

        function Hi(e, t, n) {
            n && n.disconnect(), "resize" === t && function (e) {
                Ui.delete(e), Ui.size || window.removeEventListener("resize", Gi)
            }(e)
        }

        function Ki(e, t, n) {
            const s = e.canvas,
                i = et((t => {
                    null !== e.ctx && n(function (e, t) {
                        const n = Li[e.type] || e.type,
                            {
                                x: s,
                                y: i
                            } = os(e, t);
                        return {
                            type: n,
                            chart: t,
                            native: e,
                            x: void 0 !== s ? s : null,
                            y: void 0 !== i ? i : null
                        }
                    }(t, e))
                }), e);
            return function (e, t, n) {
                e.addEventListener(t, n, Mi)
            }(s, t, i), i
        }
        class Wi extends wi {
            acquireContext(e, t) {
                const n = e && e.getContext && e.getContext("2d");
                return n && n.canvas === e ? (function (e, t) {
                    const n = e.style,
                        s = e.getAttribute("height"),
                        i = e.getAttribute("width");
                    if (e[Pi] = {
                            initial: {
                                height: s,
                                width: i,
                                style: {
                                    display: n.display,
                                    height: n.height,
                                    width: n.width
                                }
                            }
                        }, n.display = n.display || "block", n.boxSizing = n.boxSizing || "border-box", Ai(i)) {
                        const t = ds(e, "width");
                        void 0 !== t && (e.width = t)
                    }
                    if (Ai(s))
                        if ("" === e.style.height) e.height = e.width / (t || 2);
                        else {
                            const t = ds(e, "height");
                            void 0 !== t && (e.height = t)
                        }
                }(e, t), n) : null
            }
            releaseContext(e) {
                const t = e.canvas;
                if (!t[Pi]) return !1;
                const n = t[Pi].initial;
                ["height", "width"].forEach((e => {
                    const s = n[e];
                    te(s) ? t.removeAttribute(e) : t.setAttribute(e, s)
                }));
                const s = n.style || {};
                return Object.keys(s).forEach((e => {
                    t.style[e] = s[e]
                })), t.width = t.width, delete t[Pi], !0
            }
            addEventListener(e, t, n) {
                this.removeEventListener(e, t);
                const s = e.$proxies || (e.$proxies = {}),
                    i = {
                        attach: Di,
                        detach: Fi,
                        resize: Vi
                    } [t] || Ki;
                s[t] = i(e, t, n)
            }
            removeEventListener(e, t) {
                const n = e.$proxies || (e.$proxies = {}),
                    s = n[t];
                if (!s) return;
                ({
                    attach: Hi,
                    detach: Hi,
                    resize: Hi
                } [t] || Ri)(e, t, s), n[t] = void 0
            }
            getDevicePixelRatio() {
                return window.devicePixelRatio
            }
            getMaximumSize(e, t, n, s) {
                return ls(e, t, n, s)
            }
            isAttached(e) {
                const t = es(e);
                return !(!t || !t.isConnected)
            }
        }

        function zi(e) {
            return !Jn() || "undefined" != typeof OffscreenCanvas && e instanceof OffscreenCanvas ? Oi : Wi
        }
        class Yi {
            static defaults = {};
            static defaultRoutes = void 0;
            active = !1;
            tooltipPosition(e) {
                const {
                    x: t,
                    y: n
                } = this.getProps(["x", "y"], e);
                return {
                    x: t,
                    y: n
                }
            }
            hasValue() {
                return Re(this.x) && Re(this.y)
            }
            getProps(e, t) {
                const n = this.$animations;
                if (!t || !n) return this;
                const s = {};
                return e.forEach((e => {
                    s[e] = n[e] && n[e].active() ? n[e]._to : this[e]
                })), s
            }
        }

        function $i(e, t) {
            const n = e.options.ticks,
                s = function (e) {
                    const t = e.options.offset,
                        n = e._tickSize(),
                        s = e._length / n + (t ? 0 : 1),
                        i = e._maxLength / n;
                    return Math.floor(Math.min(s, i))
                }(e),
                i = Math.min(n.maxTicksLimit || s, s),
                a = n.major.enabled ? function (e) {
                    const t = [];
                    let n, s;
                    for (n = 0, s = e.length; n < s; n++) e[n].major && t.push(n);
                    return t
                }(t) : [],
                o = a.length,
                r = a[0],
                l = a[o - 1],
                c = [];
            if (o > i) return function (e, t, n, s) {
                let i, a = 0,
                    o = n[0];
                for (s = Math.ceil(s), i = 0; i < e.length; i++) i === o && (t.push(e[i]), a++, o = n[a * s])
            }(t, c, a, o / i), c;
            const u = function (e, t, n) {
                const s = function (e) {
                        const t = e.length;
                        let n, s;
                        if (t < 2) return !1;
                        for (s = e[0], n = 1; n < t; ++n)
                            if (e[n] - e[n - 1] !== s) return !1;
                        return s
                    }(e),
                    i = t.length / n;
                if (!s) return Math.max(i, 1);
                const a = function (e) {
                    const t = [],
                        n = Math.sqrt(e);
                    let s;
                    for (s = 1; s < n; s++) e % s == 0 && (t.push(s), t.push(e / s));
                    return n === (0 | n) && t.push(n), t.sort(((e, t) => e - t)).pop(), t
                }(s);
                for (let e = 0, t = a.length - 1; e < t; e++) {
                    const t = a[e];
                    if (t > i) return t
                }
                return Math.max(i, 1)
            }(a, t, i);
            if (o > 0) {
                let e, n;
                const s = o > 1 ? Math.round((l - r) / (o - 1)) : null;
                for (qi(t, c, u, te(s) ? 0 : r - s, r), e = 0, n = o - 1; e < n; e++) qi(t, c, u, a[e], a[e + 1]);
                return qi(t, c, u, l, te(s) ? t.length : l + s), c
            }
            return qi(t, c, u), c
        }

        function qi(e, t, n, s, i) {
            const a = oe(s, 0),
                o = Math.min(oe(i, e.length), e.length);
            let r, l, c, u = 0;
            for (n = Math.ceil(n), i && (r = i - s, n = r / Math.floor(r / n)), c = a; c < 0;) u++, c = Math.round(a + u * n);
            for (l = Math.max(a, 0); l < o; l++) l === c && (t.push(e[l]), u++, c = Math.round(a + u * n))
        }
        const Xi = (e, t, n) => "top" === t || "left" === t ? e[t] + n : e[t] - n;

        function Qi(e, t) {
            const n = [],
                s = e.length / t,
                i = e.length;
            let a = 0;
            for (; a < i; a += s) n.push(e[Math.floor(a)]);
            return n
        }

        function Zi(e, t, n) {
            const s = e.ticks.length,
                i = Math.min(t, s - 1),
                a = e._startPixel,
                o = e._endPixel,
                r = 1e-6;
            let l, c = e.getPixelForTick(i);
            if (!(n && (l = 1 === s ? Math.max(c - a, o - c) : 0 === t ? (e.getPixelForTick(1) - c) / 2 : (c - e.getPixelForTick(i - 1)) / 2, c += i < t ? l : -l, c < a - r || c > o + r))) return c
        }

        function Ji(e) {
            return e.drawTicks ? e.tickLength : 0
        }

        function ea(e, t) {
            if (!e.display) return 0;
            const n = wn(e.font, t),
                s = Nn(e.padding);
            return (ne(e.text) ? e.text.length : 1) * n.lineHeight + s.height
        }

        function ta(e, t, n) {
            let s = tt(e);
            return (n && "right" !== t || !n && "right" === t) && (s = (e => "left" === e ? "right" : "right" === e ? "left" : e)(s)), s
        }
        class na extends Yi {
            constructor(e) {
                super(), this.id = e.id, this.type = e.type, this.options = void 0, this.ctx = e.ctx, this.chart = e.chart, this.top = void 0, this.bottom = void 0, this.left = void 0, this.right = void 0, this.width = void 0, this.height = void 0, this._margins = {
                    left: 0,
                    right: 0,
                    top: 0,
                    bottom: 0
                }, this.maxWidth = void 0, this.maxHeight = void 0, this.paddingTop = void 0, this.paddingBottom = void 0, this.paddingLeft = void 0, this.paddingRight = void 0, this.axis = void 0, this.labelRotation = void 0, this.min = void 0, this.max = void 0, this._range = void 0, this.ticks = [], this._gridLineItems = null, this._labelItems = null, this._labelSizes = null, this._length = 0, this._maxLength = 0, this._longestTextCache = {}, this._startPixel = void 0, this._endPixel = void 0, this._reversePixels = !1, this._userMax = void 0, this._userMin = void 0, this._suggestedMax = void 0, this._suggestedMin = void 0, this._ticksLength = 0, this._borderValue = 0, this._cache = {}, this._dataLimitsCached = !1, this.$context = void 0
            }
            init(e) {
                this.options = e.setContext(this.getContext()), this.axis = e.axis, this._userMin = this.parse(e.min), this._userMax = this.parse(e.max), this._suggestedMin = this.parse(e.suggestedMin), this._suggestedMax = this.parse(e.suggestedMax)
            }
            parse(e, t) {
                return e
            }
            getUserBounds() {
                let {
                    _userMin: e,
                    _userMax: t,
                    _suggestedMin: n,
                    _suggestedMax: s
                } = this;
                return e = ae(e, Number.POSITIVE_INFINITY), t = ae(t, Number.NEGATIVE_INFINITY), n = ae(n, Number.POSITIVE_INFINITY), s = ae(s, Number.NEGATIVE_INFINITY), {
                    min: ae(e, n),
                    max: ae(t, s),
                    minDefined: ie(e),
                    maxDefined: ie(t)
                }
            }
            getMinMax(e) {
                let t, {
                    min: n,
                    max: s,
                    minDefined: i,
                    maxDefined: a
                } = this.getUserBounds();
                if (i && a) return {
                    min: n,
                    max: s
                };
                const o = this.getMatchingVisibleMetas();
                for (let r = 0, l = o.length; r < l; ++r) t = o[r].controller.getMinMax(this, e), i || (n = Math.min(n, t.min)), a || (s = Math.max(s, t.max));
                return n = a && n > s ? s : n, s = i && n > s ? n : s, {
                    min: ae(n, ae(s, n)),
                    max: ae(s, ae(n, s))
                }
            }
            getPadding() {
                return {
                    left: this.paddingLeft || 0,
                    top: this.paddingTop || 0,
                    right: this.paddingRight || 0,
                    bottom: this.paddingBottom || 0
                }
            }
            getTicks() {
                return this.ticks
            }
            getLabels() {
                const e = this.chart.data;
                return this.options.labels || (this.isHorizontal() ? e.xLabels : e.yLabels) || e.labels || []
            }
            beforeLayout() {
                this._cache = {}, this._dataLimitsCached = !1
            }
            beforeUpdate() {
                le(this.options.beforeUpdate, [this])
            }
            update(e, t, n) {
                const {
                    beginAtZero: s,
                    grace: i,
                    ticks: a
                } = this.options, o = a.sampleSize;
                this.beforeUpdate(), this.maxWidth = e, this.maxHeight = t, this._margins = n = Object.assign({
                    left: 0,
                    right: 0,
                    top: 0,
                    bottom: 0
                }, n), this.ticks = null, this._labelSizes = null, this._gridLineItems = null, this._labelItems = null, this.beforeSetDimensions(), this.setDimensions(), this.afterSetDimensions(), this._maxLength = this.isHorizontal() ? this.width + n.left + n.right : this.height + n.top + n.bottom, this._dataLimitsCached || (this.beforeDataLimits(), this.determineDataLimits(), this.afterDataLimits(), this._range = function (e, t, n) {
                    const {
                        min: s,
                        max: i
                    } = e, a = re(t, (i - s) / 2), o = (e, t) => n && 0 === e ? 0 : e + t;
                    return {
                        min: o(s, -Math.abs(a)),
                        max: o(i, a)
                    }
                }(this, i, s), this._dataLimitsCached = !0), this.beforeBuildTicks(), this.ticks = this.buildTicks() || [], this.afterBuildTicks();
                const r = o < this.ticks.length;
                this._convertTicksToLabels(r ? Qi(this.ticks, o) : this.ticks), this.configure(), this.beforeCalculateLabelRotation(), this.calculateLabelRotation(), this.afterCalculateLabelRotation(), a.display && (a.autoSkip || "auto" === a.source) && (this.ticks = $i(this, this.ticks), this._labelSizes = null, this.afterAutoSkip()), r && this._convertTicksToLabels(this.ticks), this.beforeFit(), this.fit(), this.afterFit(), this.afterUpdate()
            }
            configure() {
                let e, t, n = this.options.reverse;
                this.isHorizontal() ? (e = this.left, t = this.right) : (e = this.top, t = this.bottom, n = !n), this._startPixel = e, this._endPixel = t, this._reversePixels = n, this._length = t - e, this._alignToPixels = this.options.alignToPixels
            }
            afterUpdate() {
                le(this.options.afterUpdate, [this])
            }
            beforeSetDimensions() {
                le(this.options.beforeSetDimensions, [this])
            }
            setDimensions() {
                this.isHorizontal() ? (this.width = this.maxWidth, this.left = 0, this.right = this.width) : (this.height = this.maxHeight, this.top = 0, this.bottom = this.height), this.paddingLeft = 0, this.paddingTop = 0, this.paddingRight = 0, this.paddingBottom = 0
            }
            afterSetDimensions() {
                le(this.options.afterSetDimensions, [this])
            }
            _callHooks(e) {
                this.chart.notifyPlugins(e, this.getContext()), le(this.options[e], [this])
            }
            beforeDataLimits() {
                this._callHooks("beforeDataLimits")
            }
            determineDataLimits() {}
            afterDataLimits() {
                this._callHooks("afterDataLimits")
            }
            beforeBuildTicks() {
                this._callHooks("beforeBuildTicks")
            }
            buildTicks() {
                return []
            }
            afterBuildTicks() {
                this._callHooks("afterBuildTicks")
            }
            beforeTickToLabelConversion() {
                le(this.options.beforeTickToLabelConversion, [this])
            }
            generateTickLabels(e) {
                const t = this.options.ticks;
                let n, s, i;
                for (n = 0, s = e.length; n < s; n++) i = e[n], i.label = le(t.callback, [i.value, n, e], this)
            }
            afterTickToLabelConversion() {
                le(this.options.afterTickToLabelConversion, [this])
            }
            beforeCalculateLabelRotation() {
                le(this.options.beforeCalculateLabelRotation, [this])
            }
            calculateLabelRotation() {
                const e = this.options,
                    t = e.ticks,
                    n = this.ticks.length,
                    s = t.minRotation || 0,
                    i = t.maxRotation;
                let a, o, r, l = s;
                if (!this._isVisible() || !t.display || s >= i || n <= 1 || !this.isHorizontal()) return void(this.labelRotation = s);
                const c = this._getLabelSizes(),
                    u = c.widest.width,
                    d = c.highest.height,
                    m = We(this.chart.width - u, 0, this.maxWidth);
                a = e.offset ? this.maxWidth / n : m / (n - 1), u + 6 > a && (a = m / (n - (e.offset ? .5 : 1)), o = this.maxHeight - Ji(e.grid) - t.padding - ea(e.title, this.chart.options.font), r = Math.sqrt(u * u + d * d), l = Fe(Math.min(Math.asin(We((c.highest.height + 6) / a, -1, 1)), Math.asin(We(o / r, -1, 1)) - Math.asin(We(d / r, -1, 1)))), l = Math.max(s, Math.min(i, l))), this.labelRotation = l
            }
            afterCalculateLabelRotation() {
                le(this.options.afterCalculateLabelRotation, [this])
            }
            afterAutoSkip() {}
            beforeFit() {
                le(this.options.beforeFit, [this])
            }
            fit() {
                const e = {
                        width: 0,
                        height: 0
                    },
                    {
                        chart: t,
                        options: {
                            ticks: n,
                            title: s,
                            grid: i
                        }
                    } = this,
                    a = this._isVisible(),
                    o = this.isHorizontal();
                if (a) {
                    const a = ea(s, t.options.font);
                    if (o ? (e.width = this.maxWidth, e.height = Ji(i) + a) : (e.height = this.maxHeight, e.width = Ji(i) + a), n.display && this.ticks.length) {
                        const {
                            first: t,
                            last: s,
                            widest: i,
                            highest: a
                        } = this._getLabelSizes(), r = 2 * n.padding, l = De(this.labelRotation), c = Math.cos(l), u = Math.sin(l);
                        if (o) {
                            const t = n.mirror ? 0 : u * i.width + c * a.height;
                            e.height = Math.min(this.maxHeight, e.height + t + r)
                        } else {
                            const t = n.mirror ? 0 : c * i.width + u * a.height;
                            e.width = Math.min(this.maxWidth, e.width + t + r)
                        }
                        this._calculatePadding(t, s, u, c)
                    }
                }
                this._handleMargins(), o ? (this.width = this._length = t.width - this._margins.left - this._margins.right, this.height = e.height) : (this.width = e.width, this.height = this._length = t.height - this._margins.top - this._margins.bottom)
            }
            _calculatePadding(e, t, n, s) {
                const {
                    ticks: {
                        align: i,
                        padding: a
                    },
                    position: o
                } = this.options, r = 0 !== this.labelRotation, l = "top" !== o && "x" === this.axis;
                if (this.isHorizontal()) {
                    const o = this.getPixelForTick(0) - this.left,
                        c = this.right - this.getPixelForTick(this.ticks.length - 1);
                    let u = 0,
                        d = 0;
                    r ? l ? (u = s * e.width, d = n * t.height) : (u = n * e.height, d = s * t.width) : "start" === i ? d = t.width : "end" === i ? u = e.width : "inner" !== i && (u = e.width / 2, d = t.width / 2), this.paddingLeft = Math.max((u - o + a) * this.width / (this.width - o), 0), this.paddingRight = Math.max((d - c + a) * this.width / (this.width - c), 0)
                } else {
                    let n = t.height / 2,
                        s = e.height / 2;
                    "start" === i ? (n = 0, s = e.height) : "end" === i && (n = t.height, s = 0), this.paddingTop = n + a, this.paddingBottom = s + a
                }
            }
            _handleMargins() {
                this._margins && (this._margins.left = Math.max(this.paddingLeft, this._margins.left), this._margins.top = Math.max(this.paddingTop, this._margins.top), this._margins.right = Math.max(this.paddingRight, this._margins.right), this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom))
            }
            afterFit() {
                le(this.options.afterFit, [this])
            }
            isHorizontal() {
                const {
                    axis: e,
                    position: t
                } = this.options;
                return "top" === t || "bottom" === t || "x" === e
            }
            isFullSize() {
                return this.options.fullSize
            }
            _convertTicksToLabels(e) {
                let t, n;
                for (this.beforeTickToLabelConversion(), this.generateTickLabels(e), t = 0, n = e.length; t < n; t++) te(e[t].label) && (e.splice(t, 1), n--, t--);
                this.afterTickToLabelConversion()
            }
            _getLabelSizes() {
                let e = this._labelSizes;
                if (!e) {
                    const t = this.options.ticks.sampleSize;
                    let n = this.ticks;
                    t < n.length && (n = Qi(n, t)), this._labelSizes = e = this._computeLabelSizes(n, n.length)
                }
                return e
            }
            _computeLabelSizes(e, t) {
                const {
                    ctx: n,
                    _longestTextCache: s
                } = this, i = [], a = [];
                let o, r, l, c, u, d, m, h, g, p, f, x = 0,
                    v = 0;
                for (o = 0; o < t; ++o) {
                    if (c = e[o].label, u = this._resolveTickFontOptions(o), n.font = d = u.string, m = s[d] = s[d] || {
                            data: {},
                            gc: []
                        }, h = u.lineHeight, g = p = 0, te(c) || ne(c)) {
                        if (ne(c))
                            for (r = 0, l = c.length; r < l; ++r) f = c[r], te(f) || ne(f) || (g = on(n, m.data, m.gc, g, f), p += h)
                    } else g = on(n, m.data, m.gc, g, c), p = h;
                    i.push(g), a.push(p), x = Math.max(g, x), v = Math.max(p, v)
                }! function (e, t) {
                    ce(e, (e => {
                        const n = e.gc,
                            s = n.length / 2;
                        let i;
                        if (s > t) {
                            for (i = 0; i < s; ++i) delete e.data[n[i]];
                            n.splice(0, s)
                        }
                    }))
                }(s, t);
                const _ = i.indexOf(x),
                    b = a.indexOf(v),
                    T = e => ({
                        width: i[e] || 0,
                        height: a[e] || 0
                    });
                return {
                    first: T(0),
                    last: T(t - 1),
                    widest: T(_),
                    highest: T(b),
                    widths: i,
                    heights: a
                }
            }
            getLabelForValue(e) {
                return e
            }
            getPixelForValue(e, t) {
                return NaN
            }
            getValueForPixel(e) {}
            getPixelForTick(e) {
                const t = this.ticks;
                return e < 0 || e > t.length - 1 ? null : this.getPixelForValue(t[e].value)
            }
            getPixelForDecimal(e) {
                this._reversePixels && (e = 1 - e);
                const t = this._startPixel + e * this._length;
                return function (e) {
                    return We(e, -32768, 32767)
                }(this._alignToPixels ? ln(this.chart, t, 0) : t)
            }
            getDecimalForPixel(e) {
                const t = (e - this._startPixel) / this._length;
                return this._reversePixels ? 1 - t : t
            }
            getBasePixel() {
                return this.getPixelForValue(this.getBaseValue())
            }
            getBaseValue() {
                const {
                    min: e,
                    max: t
                } = this;
                return e < 0 && t < 0 ? t : e > 0 && t > 0 ? e : 0
            }
            getContext(e) {
                const t = this.ticks || [];
                if (e >= 0 && e < t.length) {
                    const n = t[e];
                    return n.$context || (n.$context = function (e, t, n) {
                        return Pn(e, {
                            tick: n,
                            index: t,
                            type: "tick"
                        })
                    }(this.getContext(), e, n))
                }
                return this.$context || (this.$context = Pn(this.chart.getContext(), {
                    scale: this,
                    type: "scale"
                }))
            }
            _tickSize() {
                const e = this.options.ticks,
                    t = De(this.labelRotation),
                    n = Math.abs(Math.cos(t)),
                    s = Math.abs(Math.sin(t)),
                    i = this._getLabelSizes(),
                    a = e.autoSkipPadding || 0,
                    o = i ? i.widest.width + a : 0,
                    r = i ? i.highest.height + a : 0;
                return this.isHorizontal() ? r * n > o * s ? o / n : r / s : r * s < o * n ? r / n : o / s
            }
            _isVisible() {
                const e = this.options.display;
                return "auto" !== e ? !!e : this.getMatchingVisibleMetas().length > 0
            }
            _computeGridLineItems(e) {
                const t = this.axis,
                    n = this.chart,
                    s = this.options,
                    {
                        grid: i,
                        position: a,
                        border: o
                    } = s,
                    r = i.offset,
                    l = this.isHorizontal(),
                    c = this.ticks.length + (r ? 1 : 0),
                    u = Ji(i),
                    d = [],
                    m = o.setContext(this.getContext()),
                    h = m.display ? m.width : 0,
                    g = h / 2,
                    p = function (e) {
                        return ln(n, e, h)
                    };
                let f, x, v, _, b, T, E, I, y, j, S, C;
                if ("top" === a) f = p(this.bottom), T = this.bottom - u, I = f - g, j = p(e.top) + g, C = e.bottom;
                else if ("bottom" === a) f = p(this.top), j = e.top, C = p(e.bottom) - g, T = f + g, I = this.top + u;
                else if ("left" === a) f = p(this.right), b = this.right - u, E = f - g, y = p(e.left) + g, S = e.right;
                else if ("right" === a) f = p(this.left), y = e.left, S = p(e.right) - g, b = f + g, E = this.left + u;
                else if ("x" === t) {
                    if ("center" === a) f = p((e.top + e.bottom) / 2 + .5);
                    else if (se(a)) {
                        const e = Object.keys(a)[0],
                            t = a[e];
                        f = p(this.chart.scales[e].getPixelForValue(t))
                    }
                    j = e.top, C = e.bottom, T = f + g, I = T + u
                } else if ("y" === t) {
                    if ("center" === a) f = p((e.left + e.right) / 2);
                    else if (se(a)) {
                        const e = Object.keys(a)[0],
                            t = a[e];
                        f = p(this.chart.scales[e].getPixelForValue(t))
                    }
                    b = f - g, E = b - u, y = e.left, S = e.right
                }
                const N = oe(s.ticks.maxTicksLimit, c),
                    w = Math.max(1, Math.ceil(c / N));
                for (x = 0; x < c; x += w) {
                    const e = this.getContext(x),
                        t = i.setContext(e),
                        s = o.setContext(e),
                        a = t.lineWidth,
                        c = t.color,
                        u = s.dash || [],
                        m = s.dashOffset,
                        h = t.tickWidth,
                        g = t.tickColor,
                        p = t.tickBorderDash || [],
                        f = t.tickBorderDashOffset;
                    v = Zi(this, x, r), void 0 !== v && (_ = ln(n, v, a), l ? b = E = y = S = _ : T = I = j = C = _, d.push({
                        tx1: b,
                        ty1: T,
                        tx2: E,
                        ty2: I,
                        x1: y,
                        y1: j,
                        x2: S,
                        y2: C,
                        width: a,
                        color: c,
                        borderDash: u,
                        borderDashOffset: m,
                        tickWidth: h,
                        tickColor: g,
                        tickBorderDash: p,
                        tickBorderDashOffset: f
                    }))
                }
                return this._ticksLength = c, this._borderValue = f, d
            }
            _computeLabelItems(e) {
                const t = this.axis,
                    n = this.options,
                    {
                        position: s,
                        ticks: i
                    } = n,
                    a = this.isHorizontal(),
                    o = this.ticks,
                    {
                        align: r,
                        crossAlign: l,
                        padding: c,
                        mirror: u
                    } = i,
                    d = Ji(n.grid),
                    m = d + c,
                    h = u ? -c : m,
                    g = -De(this.labelRotation),
                    p = [];
                let f, x, v, _, b, T, E, I, y, j, S, C, N = "middle";
                if ("top" === s) T = this.bottom - h, E = this._getXAxisLabelAlignment();
                else if ("bottom" === s) T = this.top + h, E = this._getXAxisLabelAlignment();
                else if ("left" === s) {
                    const e = this._getYAxisLabelAlignment(d);
                    E = e.textAlign, b = e.x
                } else if ("right" === s) {
                    const e = this._getYAxisLabelAlignment(d);
                    E = e.textAlign, b = e.x
                } else if ("x" === t) {
                    if ("center" === s) T = (e.top + e.bottom) / 2 + m;
                    else if (se(s)) {
                        const e = Object.keys(s)[0],
                            t = s[e];
                        T = this.chart.scales[e].getPixelForValue(t) + m
                    }
                    E = this._getXAxisLabelAlignment()
                } else if ("y" === t) {
                    if ("center" === s) b = (e.left + e.right) / 2 - m;
                    else if (se(s)) {
                        const e = Object.keys(s)[0],
                            t = s[e];
                        b = this.chart.scales[e].getPixelForValue(t)
                    }
                    E = this._getYAxisLabelAlignment(d).textAlign
                }
                "y" === t && ("start" === r ? N = "top" : "end" === r && (N = "bottom"));
                const w = this._getLabelSizes();
                for (f = 0, x = o.length; f < x; ++f) {
                    v = o[f], _ = v.label;
                    const e = i.setContext(this.getContext(f));
                    I = this.getPixelForTick(f) + i.labelOffset, y = this._resolveTickFontOptions(f), j = y.lineHeight, S = ne(_) ? _.length : 1;
                    const t = S / 2,
                        n = e.color,
                        r = e.textStrokeColor,
                        c = e.textStrokeWidth;
                    let d, m = E;
                    if (a ? (b = I, "inner" === E && (m = f === x - 1 ? this.options.reverse ? "left" : "right" : 0 === f ? this.options.reverse ? "right" : "left" : "center"), C = "top" === s ? "near" === l || 0 !== g ? -S * j + j / 2 : "center" === l ? -w.highest.height / 2 - t * j + j : -w.highest.height + j / 2 : "near" === l || 0 !== g ? j / 2 : "center" === l ? w.highest.height / 2 - t * j : w.highest.height - S * j, u && (C *= -1), 0 === g || e.showLabelBackdrop || (b += j / 2 * Math.sin(g))) : (T = I, C = (1 - S) * j / 2), e.showLabelBackdrop) {
                        const t = Nn(e.backdropPadding),
                            n = w.heights[f],
                            s = w.widths[f];
                        let i = C - t.top,
                            a = 0 - t.left;
                        switch (N) {
                        case "middle":
                            i -= n / 2;
                            break;
                        case "bottom":
                            i -= n
                        }
                        switch (E) {
                        case "center":
                            a -= s / 2;
                            break;
                        case "right":
                            a -= s
                        }
                        d = {
                            left: a,
                            top: i,
                            width: s + t.width,
                            height: n + t.height,
                            color: e.backdropColor
                        }
                    }
                    p.push({
                        rotation: g,
                        label: _,
                        font: y,
                        color: n,
                        strokeColor: r,
                        strokeWidth: c,
                        textOffset: C,
                        textAlign: m,
                        textBaseline: N,
                        translation: [b, T],
                        backdrop: d
                    })
                }
                return p
            }
            _getXAxisLabelAlignment() {
                const {
                    position: e,
                    ticks: t
                } = this.options;
                if (-De(this.labelRotation)) return "top" === e ? "left" : "right";
                let n = "center";
                return "start" === t.align ? n = "left" : "end" === t.align ? n = "right" : "inner" === t.align && (n = "inner"), n
            }
            _getYAxisLabelAlignment(e) {
                const {
                    position: t,
                    ticks: {
                        crossAlign: n,
                        mirror: s,
                        padding: i
                    }
                } = this.options, a = e + i, o = this._getLabelSizes().widest.width;
                let r, l;
                return "left" === t ? s ? (l = this.right + i, "near" === n ? r = "left" : "center" === n ? (r = "center", l += o / 2) : (r = "right", l += o)) : (l = this.right - a, "near" === n ? r = "right" : "center" === n ? (r = "center", l -= o / 2) : (r = "left", l = this.left)) : "right" === t ? s ? (l = this.left + i, "near" === n ? r = "right" : "center" === n ? (r = "center", l -= o / 2) : (r = "left", l -= o)) : (l = this.left + a, "near" === n ? r = "left" : "center" === n ? (r = "center", l += o / 2) : (r = "right", l = this.right)) : r = "right", {
                    textAlign: r,
                    x: l
                }
            }
            _computeLabelArea() {
                if (this.options.ticks.mirror) return;
                const e = this.chart,
                    t = this.options.position;
                return "left" === t || "right" === t ? {
                    top: 0,
                    left: this.left,
                    bottom: e.height,
                    right: this.right
                } : "top" === t || "bottom" === t ? {
                    top: this.top,
                    left: 0,
                    bottom: this.bottom,
                    right: e.width
                } : void 0
            }
            drawBackground() {
                const {
                    ctx: e,
                    options: {
                        backgroundColor: t
                    },
                    left: n,
                    top: s,
                    width: i,
                    height: a
                } = this;
                t && (e.save(), e.fillStyle = t, e.fillRect(n, s, i, a), e.restore())
            }
            getLineWidthForValue(e) {
                const t = this.options.grid;
                if (!this._isVisible() || !t.display) return 0;
                const n = this.ticks.findIndex((t => t.value === e));
                if (n >= 0) {
                    return t.setContext(this.getContext(n)).lineWidth
                }
                return 0
            }
            drawGrid(e) {
                const t = this.options.grid,
                    n = this.ctx,
                    s = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(e));
                let i, a;
                const o = (e, t, s) => {
                    s.width && s.color && (n.save(), n.lineWidth = s.width, n.strokeStyle = s.color, n.setLineDash(s.borderDash || []), n.lineDashOffset = s.borderDashOffset, n.beginPath(), n.moveTo(e.x, e.y), n.lineTo(t.x, t.y), n.stroke(), n.restore())
                };
                if (t.display)
                    for (i = 0, a = s.length; i < a; ++i) {
                        const e = s[i];
                        t.drawOnChartArea && o({
                            x: e.x1,
                            y: e.y1
                        }, {
                            x: e.x2,
                            y: e.y2
                        }, e), t.drawTicks && o({
                            x: e.tx1,
                            y: e.ty1
                        }, {
                            x: e.tx2,
                            y: e.ty2
                        }, {
                            color: e.tickColor,
                            width: e.tickWidth,
                            borderDash: e.tickBorderDash,
                            borderDashOffset: e.tickBorderDashOffset
                        })
                    }
            }
            drawBorder() {
                const {
                    chart: e,
                    ctx: t,
                    options: {
                        border: n,
                        grid: s
                    }
                } = this, i = n.setContext(this.getContext()), a = n.display ? i.width : 0;
                if (!a) return;
                const o = s.setContext(this.getContext(0)).lineWidth,
                    r = this._borderValue;
                let l, c, u, d;
                this.isHorizontal() ? (l = ln(e, this.left, a) - a / 2, c = ln(e, this.right, o) + o / 2, u = d = r) : (u = ln(e, this.top, a) - a / 2, d = ln(e, this.bottom, o) + o / 2, l = c = r), t.save(), t.lineWidth = i.width, t.strokeStyle = i.color, t.beginPath(), t.moveTo(l, u), t.lineTo(c, d), t.stroke(), t.restore()
            }
            drawLabels(e) {
                if (!this.options.ticks.display) return;
                const t = this.ctx,
                    n = this._computeLabelArea();
                n && hn(t, n);
                const s = this._labelItems || (this._labelItems = this._computeLabelItems(e));
                let i, a;
                for (i = 0, a = s.length; i < a; ++i) {
                    const e = s[i],
                        n = e.font;
                    xn(t, e.label, 0, e.textOffset, n, e)
                }
                n && gn(t)
            }
            drawTitle() {
                const {
                    ctx: e,
                    options: {
                        position: t,
                        title: n,
                        reverse: s
                    }
                } = this;
                if (!n.display) return;
                const i = wn(n.font),
                    a = Nn(n.padding),
                    o = n.align;
                let r = i.lineHeight / 2;
                "bottom" === t || "center" === t || se(t) ? (r += a.bottom, ne(n.text) && (r += i.lineHeight * (n.text.length - 1))) : r += a.top;
                const {
                    titleX: l,
                    titleY: c,
                    maxWidth: u,
                    rotation: d
                } = function (e, t, n, s) {
                    const {
                        top: i,
                        left: a,
                        bottom: o,
                        right: r,
                        chart: l
                    } = e, {
                        chartArea: c,
                        scales: u
                    } = l;
                    let d, m, h, g = 0;
                    const p = o - i,
                        f = r - a;
                    if (e.isHorizontal()) {
                        if (m = nt(s, a, r), se(n)) {
                            const e = Object.keys(n)[0],
                                s = n[e];
                            h = u[e].getPixelForValue(s) + p - t
                        } else h = "center" === n ? (c.bottom + c.top) / 2 + p - t : Xi(e, n, t);
                        d = r - a
                    } else {
                        if (se(n)) {
                            const e = Object.keys(n)[0],
                                s = n[e];
                            m = u[e].getPixelForValue(s) - f + t
                        } else m = "center" === n ? (c.left + c.right) / 2 - f + t : Xi(e, n, t);
                        h = nt(s, o, i), g = "left" === n ? -Ne : Ne
                    }
                    return {
                        titleX: m,
                        titleY: h,
                        maxWidth: d,
                        rotation: g
                    }
                }(this, r, t, o);
                xn(e, n.text, 0, 0, i, {
                    color: n.color,
                    maxWidth: u,
                    rotation: d,
                    textAlign: ta(o, t, s),
                    textBaseline: "middle",
                    translation: [l, c]
                })
            }
            draw(e) {
                this._isVisible() && (this.drawBackground(), this.drawGrid(e), this.drawBorder(), this.drawTitle(), this.drawLabels(e))
            }
            _layers() {
                const e = this.options,
                    t = e.ticks && e.ticks.z || 0,
                    n = oe(e.grid && e.grid.z, -1),
                    s = oe(e.border && e.border.z, 0);
                return this._isVisible() && this.draw === na.prototype.draw ? [{
                    z: n,
                    draw: e => {
                        this.drawBackground(), this.drawGrid(e), this.drawTitle()
                    }
                }, {
                    z: s,
                    draw: () => {
                        this.drawBorder()
                    }
                }, {
                    z: t,
                    draw: e => {
                        this.drawLabels(e)
                    }
                }] : [{
                    z: t,
                    draw: e => {
                        this.draw(e)
                    }
                }]
            }
            getMatchingVisibleMetas(e) {
                const t = this.chart.getSortedVisibleDatasetMetas(),
                    n = this.axis + "AxisID",
                    s = [];
                let i, a;
                for (i = 0, a = t.length; i < a; ++i) {
                    const a = t[i];
                    a[n] !== this.id || e && a.type !== e || s.push(a)
                }
                return s
            }
            _resolveTickFontOptions(e) {
                return wn(this.options.ticks.setContext(this.getContext(e)).font)
            }
            _maxDigits() {
                const e = this._resolveTickFontOptions(0).lineHeight;
                return (this.isHorizontal() ? this.width : this.height) / e
            }
        }
        class sa {
            constructor(e, t, n) {
                this.type = e, this.scope = t, this.override = n, this.items = Object.create(null)
            }
            isForType(e) {
                return Object.prototype.isPrototypeOf.call(this.type.prototype, e.prototype)
            }
            register(e) {
                const t = Object.getPrototypeOf(e);
                let n;
                (function (e) {
                    return "id" in e && "defaults" in e
                })(t) && (n = this.register(t));
                const s = this.items,
                    i = e.id,
                    a = this.scope + "." + i;
                if (!i) throw new Error("class does not have id: " + e);
                return i in s || (s[i] = e, function (e, t, n) {
                    const s = ge(Object.create(null), [n ? an.get(n) : {}, an.get(t), e.defaults]);
                    an.set(t, s), e.defaultRoutes && function (e, t) {
                        Object.keys(t).forEach((n => {
                            const s = n.split("."),
                                i = s.pop(),
                                a = [e].concat(s).join("."),
                                o = t[n].split("."),
                                r = o.pop(),
                                l = o.join(".");
                            an.route(a, i, l, r)
                        }))
                    }(t, e.defaultRoutes);
                    e.descriptors && an.describe(t, e.descriptors)
                }(e, a, n), this.override && an.override(e.id, e.overrides)), a
            }
            get(e) {
                return this.items[e]
            }
            unregister(e) {
                const t = this.items,
                    n = e.id,
                    s = this.scope;
                n in t && delete t[n], s && n in an[s] && (delete an[s][n], this.override && delete Jt[n])
            }
        }
        class ia {
            constructor() {
                this.controllers = new sa(Vs, "datasets", !0), this.elements = new sa(Yi, "elements"), this.plugins = new sa(Object, "plugins"), this.scales = new sa(na, "scales"), this._typedRegistries = [this.controllers, this.scales, this.elements]
            }
            add(...e) {
                this._each("register", e)
            }
            remove(...e) {
                this._each("unregister", e)
            }
            addControllers(...e) {
                this._each("register", e, this.controllers)
            }
            addElements(...e) {
                this._each("register", e, this.elements)
            }
            addPlugins(...e) {
                this._each("register", e, this.plugins)
            }
            addScales(...e) {
                this._each("register", e, this.scales)
            }
            getController(e) {
                return this._get(e, this.controllers, "controller")
            }
            getElement(e) {
                return this._get(e, this.elements, "element")
            }
            getPlugin(e) {
                return this._get(e, this.plugins, "plugin")
            }
            getScale(e) {
                return this._get(e, this.scales, "scale")
            }
            removeControllers(...e) {
                this._each("unregister", e, this.controllers)
            }
            removeElements(...e) {
                this._each("unregister", e, this.elements)
            }
            removePlugins(...e) {
                this._each("unregister", e, this.plugins)
            }
            removeScales(...e) {
                this._each("unregister", e, this.scales)
            }
            _each(e, t, n) {
                [...t].forEach((t => {
                    const s = n || this._getRegistryForType(t);
                    n || s.isForType(t) || s === this.plugins && t.id ? this._exec(e, s, t) : ce(t, (t => {
                        const s = n || this._getRegistryForType(t);
                        this._exec(e, s, t)
                    }))
                }))
            }
            _exec(e, t, n) {
                const s = _e(e);
                le(n["before" + s], [], n), t[e](n), le(n["after" + s], [], n)
            }
            _getRegistryForType(e) {
                for (let t = 0; t < this._typedRegistries.length; t++) {
                    const n = this._typedRegistries[t];
                    if (n.isForType(e)) return n
                }
                return this.plugins
            }
            _get(e, t, n) {
                const s = t.get(e);
                if (void 0 === s) throw new Error('"' + e + '" is not a registered ' + n + ".");
                return s
            }
        }
        var aa = new ia;
        class oa {
            constructor() {
                this._init = []
            }
            notify(e, t, n, s) {
                "beforeInit" === t && (this._init = this._createDescriptors(e, !0), this._notify(this._init, e, "install"));
                const i = s ? this._descriptors(e).filter(s) : this._descriptors(e),
                    a = this._notify(i, e, t, n);
                return "afterDestroy" === t && (this._notify(i, e, "stop"), this._notify(this._init, e, "uninstall")), a
            }
            _notify(e, t, n, s) {
                s = s || {};
                for (const i of e) {
                    const e = i.plugin;
                    if (!1 === le(e[n], [t, s, i.options], e) && s.cancelable) return !1
                }
                return !0
            }
            invalidate() {
                te(this._cache) || (this._oldCache = this._cache, this._cache = void 0)
            }
            _descriptors(e) {
                if (this._cache) return this._cache;
                const t = this._cache = this._createDescriptors(e);
                return this._notifyStateChanges(e), t
            }
            _createDescriptors(e, t) {
                const n = e && e.config,
                    s = oe(n.options && n.options.plugins, {}),
                    i = function (e) {
                        const t = {},
                            n = [],
                            s = Object.keys(aa.plugins.items);
                        for (let e = 0; e < s.length; e++) n.push(aa.getPlugin(s[e]));
                        const i = e.plugins || [];
                        for (let e = 0; e < i.length; e++) {
                            const s = i[e]; - 1 === n.indexOf(s) && (n.push(s), t[s.id] = !0)
                        }
                        return {
                            plugins: n,
                            localIds: t
                        }
                    }(n);
                return !1 !== s || t ? function (e, {
                    plugins: t,
                    localIds: n
                }, s, i) {
                    const a = [],
                        o = e.getContext();
                    for (const r of t) {
                        const t = r.id,
                            l = ra(s[t], i);
                        null !== l && a.push({
                            plugin: r,
                            options: la(e.config, {
                                plugin: r,
                                local: n[t]
                            }, l, o)
                        })
                    }
                    return a
                }(e, i, s, t) : []
            }
            _notifyStateChanges(e) {
                const t = this._oldCache || [],
                    n = this._cache,
                    s = (e, t) => e.filter((e => !t.some((t => e.plugin.id === t.plugin.id))));
                this._notify(s(t, n), e, "stop"), this._notify(s(n, t), e, "start")
            }
        }

        function ra(e, t) {
            return t || !1 !== e ? !0 === e ? {} : e : null
        }

        function la(e, {
            plugin: t,
            local: n
        }, s, i) {
            const a = e.pluginScopeKeys(t),
                o = e.getOptionScopes(s, a);
            return n && t.defaults && o.push(t.defaults), e.createResolver(o, i, [""], {
                scriptable: !1,
                indexable: !1,
                allKeys: !0
            })
        }

        function ca(e, t) {
            const n = an.datasets[e] || {};
            return ((t.datasets || {})[e] || {}).indexAxis || t.indexAxis || n.indexAxis || "x"
        }

        function ua(e, t) {
            if ("x" === e || "y" === e || "r" === e) return e;
            var n;
            if (e = t.axis || ("top" === (n = t.position) || "bottom" === n ? "x" : "left" === n || "right" === n ? "y" : void 0) || e.length > 1 && ua(e[0].toLowerCase(), t)) return e;
            throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`)
        }

        function da(e) {
            const t = e.options || (e.options = {});
            t.plugins = oe(t.plugins, {}), t.scales = function (e, t) {
                const n = Jt[e.type] || {
                        scales: {}
                    },
                    s = t.scales || {},
                    i = ca(e.type, t),
                    a = Object.create(null);
                return Object.keys(s).forEach((e => {
                    const t = s[e];
                    if (!se(t)) return console.error(`Invalid scale configuration for scale: ${e}`);
                    if (t._proxy) return console.warn(`Ignoring resolver passed as options for scale: ${e}`);
                    const o = ua(e, t),
                        r = function (e, t) {
                            return e === t ? "_index_" : "_value_"
                        }(o, i),
                        l = n.scales || {};
                    a[e] = pe(Object.create(null), [{
                        axis: o
                    }, t, l[o], l[r]])
                })), e.data.datasets.forEach((n => {
                    const i = n.type || e.type,
                        o = n.indexAxis || ca(i, t),
                        r = (Jt[i] || {}).scales || {};
                    Object.keys(r).forEach((e => {
                        const t = function (e, t) {
                                let n = e;
                                return "_index_" === e ? n = t : "_value_" === e && (n = "x" === t ? "y" : "x"), n
                            }(e, o),
                            i = n[t + "AxisID"] || t;
                        a[i] = a[i] || Object.create(null), pe(a[i], [{
                            axis: t
                        }, s[i], r[e]])
                    }))
                })), Object.keys(a).forEach((e => {
                    const t = a[e];
                    pe(t, [an.scales[t.type], an.scale])
                })), a
            }(e, t)
        }

        function ma(e) {
            return (e = e || {}).datasets = e.datasets || [], e.labels = e.labels || [], e
        }
        const ha = new Map,
            ga = new Set;

        function pa(e, t) {
            let n = ha.get(e);
            return n || (n = t(), ha.set(e, n), ga.add(n)), n
        }
        const fa = (e, t, n) => {
            const s = ve(t, n);
            void 0 !== s && e.add(s)
        };
        class xa {
            constructor(e) {
                this._config = function (e) {
                    return (e = e || {}).data = ma(e.data), da(e), e
                }(e), this._scopeCache = new Map, this._resolverCache = new Map
            }
            get platform() {
                return this._config.platform
            }
            get type() {
                return this._config.type
            }
            set type(e) {
                this._config.type = e
            }
            get data() {
                return this._config.data
            }
            set data(e) {
                this._config.data = ma(e)
            }
            get options() {
                return this._config.options
            }
            set options(e) {
                this._config.options = e
            }
            get plugins() {
                return this._config.plugins
            }
            update() {
                const e = this._config;
                this.clearCache(), da(e)
            }
            clearCache() {
                this._scopeCache.clear(), this._resolverCache.clear()
            }
            datasetScopeKeys(e) {
                return pa(e, (() => [
                    [`datasets.${e}`, ""]
                ]))
            }
            datasetAnimationScopeKeys(e, t) {
                return pa(`${e}.transition.${t}`, (() => [
                    [`datasets.${e}.transitions.${t}`, `transitions.${t}`],
                    [`datasets.${e}`, ""]
                ]))
            }
            datasetElementScopeKeys(e, t) {
                return pa(`${e}-${t}`, (() => [
                    [`datasets.${e}.elements.${t}`, `datasets.${e}`, `elements.${t}`, ""]
                ]))
            }
            pluginScopeKeys(e) {
                const t = e.id;
                return pa(`${this.type}-plugin-${t}`, (() => [
                    [`plugins.${t}`, ...e.additionalOptionScopes || []]
                ]))
            }
            _cachedScopes(e, t) {
                const n = this._scopeCache;
                let s = n.get(e);
                return s && !t || (s = new Map, n.set(e, s)), s
            }
            getOptionScopes(e, t, n) {
                const {
                    options: s,
                    type: i
                } = this, a = this._cachedScopes(e, n), o = a.get(t);
                if (o) return o;
                const r = new Set;
                t.forEach((t => {
                    e && (r.add(e), t.forEach((t => fa(r, e, t)))), t.forEach((e => fa(r, s, e))), t.forEach((e => fa(r, Jt[i] || {}, e))), t.forEach((e => fa(r, an, e))), t.forEach((e => fa(r, en, e)))
                }));
                const l = Array.from(r);
                return 0 === l.length && l.push(Object.create(null)), ga.has(t) && a.set(t, l), l
            }
            chartOptionScopes() {
                const {
                    options: e,
                    type: t
                } = this;
                return [e, Jt[t] || {}, an.datasets[t] || {}, {
                    type: t
                }, an, en]
            }
            resolveNamedOptions(e, t, n, s = [""]) {
                const i = {
                        $shared: !0
                    },
                    {
                        resolver: a,
                        subPrefixes: o
                    } = va(this._resolverCache, e, s);
                let r = a;
                if (function (e, t) {
                        const {
                            isScriptable: n,
                            isIndexable: s
                        } = Mn(e);
                        for (const i of t) {
                            const t = n(i),
                                a = s(i),
                                o = (a || t) && e[i];
                            if (t && (Te(o) || _a(o)) || a && ne(o)) return !0
                        }
                        return !1
                    }(a, t)) {
                    i.$shared = !1;
                    r = An(a, n = Te(n) ? n() : n, this.createResolver(e, n, o))
                }
                for (const e of t) i[e] = r[e];
                return i
            }
            createResolver(e, t, n = [""], s) {
                const {
                    resolver: i
                } = va(this._resolverCache, e, n);
                return se(t) ? An(i, t, void 0, s) : i
            }
        }

        function va(e, t, n) {
            let s = e.get(t);
            s || (s = new Map, e.set(t, s));
            const i = n.join();
            let a = s.get(i);
            if (!a) {
                a = {
                    resolver: Ln(t, n),
                    subPrefixes: n.filter((e => !e.toLowerCase().includes("hover")))
                }, s.set(i, a)
            }
            return a
        }
        const _a = e => se(e) && Object.getOwnPropertyNames(e).reduce(((t, n) => t || Te(e[n])), !1);
        const ba = ["top", "bottom", "left", "right", "chartArea"];

        function Ta(e, t) {
            return "top" === e || "bottom" === e || -1 === ba.indexOf(e) && "x" === t
        }

        function Ea(e, t) {
            return function (n, s) {
                return n[e] === s[e] ? n[t] - s[t] : n[e] - s[e]
            }
        }

        function Ia(e) {
            const t = e.chart,
                n = t.options.animation;
            t.notifyPlugins("afterRender"), le(n && n.onComplete, [e], t)
        }

        function ya(e) {
            const t = e.chart,
                n = t.options.animation;
            le(n && n.onProgress, [e], t)
        }

        function ja(e) {
            return Jn() && "string" == typeof e ? e = document.getElementById(e) : e && e.length && (e = e[0]), e && e.canvas && (e = e.canvas), e
        }
        const Sa = {},
            Ca = e => {
                const t = ja(e);
                return Object.values(Sa).filter((e => e.canvas === t)).pop()
            };

        function Na(e, t, n) {
            const s = Object.keys(e);
            for (const i of s) {
                const s = +i;
                if (s >= t) {
                    const a = e[i];
                    delete e[i], (n > 0 || s > t) && (e[s + n] = a)
                }
            }
        }
        class wa {
            static defaults = an;
            static instances = Sa;
            static overrides = Jt;
            static registry = aa;
            static version = "4.0.1";
            static getChart = Ca;
            static register(...e) {
                aa.add(...e), Oa()
            }
            static unregister(...e) {
                aa.remove(...e), Oa()
            }
            constructor(e, t) {
                const n = this.config = new xa(t),
                    s = ja(e),
                    i = Ca(s);
                if (i) throw new Error("Canvas is already in use. Chart with ID '" + i.id + "' must be destroyed before the canvas with ID '" + i.canvas.id + "' can be reused.");
                const a = n.createResolver(n.chartOptionScopes(), this.getContext());
                this.platform = new(n.platform || zi(s)), this.platform.updateConfig(n);
                const o = this.platform.acquireContext(s, a.aspectRatio),
                    r = o && o.canvas,
                    l = r && r.height,
                    c = r && r.width;
                this.id = ee(), this.ctx = o, this.canvas = r, this.width = c, this.height = l, this._options = a, this._aspectRatio = this.aspectRatio, this._layers = [], this._metasets = [], this._stacks = void 0, this.boxes = [], this.currentDevicePixelRatio = void 0, this.chartArea = void 0, this._active = [], this._lastEvent = void 0, this._listeners = {}, this._responsiveListeners = void 0, this._sortedMetasets = [], this.scales = {}, this._plugins = new oa, this.$proxies = {}, this._hiddenIndices = {}, this.attached = !1, this._animationsDisabled = void 0, this.$context = void 0, this._doResize = function (e, t) {
                    let n;
                    return function (...s) {
                        return t ? (clearTimeout(n), n = setTimeout(e, t, s)) : e.apply(this, s), t
                    }
                }((e => this.update(e)), a.resizeDelay || 0), this._dataChanges = [], Sa[this.id] = this, o && r ? (Ss.listen(this, "complete", Ia), Ss.listen(this, "progress", ya), this._initialize(), this.attached && this.update()) : console.error("Failed to create chart: can't acquire context from the given item")
            }
            get aspectRatio() {
                const {
                    options: {
                        aspectRatio: e,
                        maintainAspectRatio: t
                    },
                    width: n,
                    height: s,
                    _aspectRatio: i
                } = this;
                return te(e) ? t && i ? i : s ? n / s : null : e
            }
            get data() {
                return this.config.data
            }
            set data(e) {
                this.config.data = e
            }
            get options() {
                return this._options
            }
            set options(e) {
                this.config.options = e
            }
            get registry() {
                return aa
            }
            _initialize() {
                return this.notifyPlugins("beforeInit"), this.options.responsive ? this.resize() : cs(this, this.options.devicePixelRatio), this.bindEvents(), this.notifyPlugins("afterInit"), this
            }
            clear() {
                return cn(this.canvas, this.ctx), this
            }
            stop() {
                return Ss.stop(this), this
            }
            resize(e, t) {
                Ss.running(this) ? this._resizeBeforeDraw = {
                    width: e,
                    height: t
                } : this._resize(e, t)
            }
            _resize(e, t) {
                const n = this.options,
                    s = this.canvas,
                    i = n.maintainAspectRatio && this.aspectRatio,
                    a = this.platform.getMaximumSize(s, e, t, i),
                    o = n.devicePixelRatio || this.platform.getDevicePixelRatio(),
                    r = this.width ? "resize" : "attach";
                this.width = a.width, this.height = a.height, this._aspectRatio = this.aspectRatio, cs(this, o, !0) && (this.notifyPlugins("resize", {
                    size: a
                }), le(n.onResize, [this, a], this), this.attached && this._doResize(r) && this.render())
            }
            ensureScalesHaveIDs() {
                ce(this.options.scales || {}, ((e, t) => {
                    e.id = t
                }))
            }
            buildOrUpdateScales() {
                const e = this.options,
                    t = e.scales,
                    n = this.scales,
                    s = Object.keys(n).reduce(((e, t) => (e[t] = !1, e)), {});
                let i = [];
                t && (i = i.concat(Object.keys(t).map((e => {
                    const n = t[e],
                        s = ua(e, n),
                        i = "r" === s,
                        a = "x" === s;
                    return {
                        options: n,
                        dposition: i ? "chartArea" : a ? "bottom" : "left",
                        dtype: i ? "radialLinear" : a ? "category" : "linear"
                    }
                })))), ce(i, (t => {
                    const i = t.options,
                        a = i.id,
                        o = ua(a, i),
                        r = oe(i.type, t.dtype);
                    void 0 !== i.position && Ta(i.position, o) === Ta(t.dposition) || (i.position = t.dposition), s[a] = !0;
                    let l = null;
                    if (a in n && n[a].type === r) l = n[a];
                    else {
                        l = new(aa.getScale(r))({
                            id: a,
                            type: r,
                            ctx: this.ctx,
                            chart: this
                        }), n[l.id] = l
                    }
                    l.init(i, e)
                })), ce(s, ((e, t) => {
                    e || delete n[t]
                })), ce(n, (e => {
                    Ni.configure(this, e, e.options), Ni.addBox(this, e)
                }))
            }
            _updateMetasets() {
                const e = this._metasets,
                    t = this.data.datasets.length,
                    n = e.length;
                if (e.sort(((e, t) => e.index - t.index)), n > t) {
                    for (let e = t; e < n; ++e) this._destroyDatasetMeta(e);
                    e.splice(t, n - t)
                }
                this._sortedMetasets = e.slice(0).sort(Ea("order", "index"))
            }
            _removeUnreferencedMetasets() {
                const {
                    _metasets: e,
                    data: {
                        datasets: t
                    }
                } = this;
                e.length > t.length && delete this._stacks, e.forEach(((e, n) => {
                    0 === t.filter((t => t === e._dataset)).length && this._destroyDatasetMeta(n)
                }))
            }
            buildOrUpdateControllers() {
                const e = [],
                    t = this.data.datasets;
                let n, s;
                for (this._removeUnreferencedMetasets(), n = 0, s = t.length; n < s; n++) {
                    const s = t[n];
                    let i = this.getDatasetMeta(n);
                    const a = s.type || this.config.type;
                    if (i.type && i.type !== a && (this._destroyDatasetMeta(n), i = this.getDatasetMeta(n)), i.type = a, i.indexAxis = s.indexAxis || ca(a, this.options), i.order = s.order || 0, i.index = n, i.label = "" + s.label, i.visible = this.isDatasetVisible(n), i.controller) i.controller.updateIndex(n), i.controller.linkScales();
                    else {
                        const t = aa.getController(a),
                            {
                                datasetElementType: s,
                                dataElementType: o
                            } = an.datasets[a];
                        Object.assign(t, {
                            dataElementType: aa.getElement(o),
                            datasetElementType: s && aa.getElement(s)
                        }), i.controller = new t(this, n), e.push(i.controller)
                    }
                }
                return this._updateMetasets(), e
            }
            _resetElements() {
                ce(this.data.datasets, ((e, t) => {
                    this.getDatasetMeta(t).controller.reset()
                }), this)
            }
            reset() {
                this._resetElements(), this.notifyPlugins("reset")
            }
            update(e) {
                const t = this.config;
                t.update();
                const n = this._options = t.createResolver(t.chartOptionScopes(), this.getContext()),
                    s = this._animationsDisabled = !n.animation;
                if (this._updateScales(), this._checkEventBindings(), this._updateHiddenIndices(), this._plugins.invalidate(), !1 === this.notifyPlugins("beforeUpdate", {
                        mode: e,
                        cancelable: !0
                    })) return;
                const i = this.buildOrUpdateControllers();
                this.notifyPlugins("beforeElementsUpdate");
                let a = 0;
                for (let e = 0, t = this.data.datasets.length; e < t; e++) {
                    const {
                        controller: t
                    } = this.getDatasetMeta(e), n = !s && -1 === i.indexOf(t);
                    t.buildOrUpdateElements(n), a = Math.max(+t.getMaxOverflow(), a)
                }
                a = this._minPadding = n.layout.autoPadding ? a : 0, this._updateLayout(a), s || ce(i, (e => {
                    e.reset()
                })), this._updateDatasets(e), this.notifyPlugins("afterUpdate", {
                    mode: e
                }), this._layers.sort(Ea("z", "_idx"));
                const {
                    _active: o,
                    _lastEvent: r
                } = this;
                r ? this._eventHandler(r, !0) : o.length && this._updateHoverStyles(o, o, !0), this.render()
            }
            _updateScales() {
                ce(this.scales, (e => {
                    Ni.removeBox(this, e)
                })), this.ensureScalesHaveIDs(), this.buildOrUpdateScales()
            }
            _checkEventBindings() {
                const e = this.options,
                    t = new Set(Object.keys(this._listeners)),
                    n = new Set(e.events);
                Ee(t, n) && !!this._responsiveListeners === e.responsive || (this.unbindEvents(), this.bindEvents())
            }
            _updateHiddenIndices() {
                const {
                    _hiddenIndices: e
                } = this, t = this._getUniformDataChanges() || [];
                for (const {
                        method: n,
                        start: s,
                        count: i
                    } of t) {
                    Na(e, s, "_removeElements" === n ? -i : i)
                }
            }
            _getUniformDataChanges() {
                const e = this._dataChanges;
                if (!e || !e.length) return;
                this._dataChanges = [];
                const t = this.data.datasets.length,
                    n = t => new Set(e.filter((e => e[0] === t)).map(((e, t) => t + "," + e.splice(1).join(",")))),
                    s = n(0);
                for (let e = 1; e < t; e++)
                    if (!Ee(s, n(e))) return;
                return Array.from(s).map((e => e.split(","))).map((e => ({
                    method: e[1],
                    start: +e[2],
                    count: +e[3]
                })))
            }
            _updateLayout(e) {
                if (!1 === this.notifyPlugins("beforeLayout", {
                        cancelable: !0
                    })) return;
                Ni.update(this, this.width, this.height, e);
                const t = this.chartArea,
                    n = t.width <= 0 || t.height <= 0;
                this._layers = [], ce(this.boxes, (e => {
                    n && "chartArea" === e.position || (e.configure && e.configure(), this._layers.push(...e._layers()))
                }), this), this._layers.forEach(((e, t) => {
                    e._idx = t
                })), this.notifyPlugins("afterLayout")
            }
            _updateDatasets(e) {
                if (!1 !== this.notifyPlugins("beforeDatasetsUpdate", {
                        mode: e,
                        cancelable: !0
                    })) {
                    for (let e = 0, t = this.data.datasets.length; e < t; ++e) this.getDatasetMeta(e).controller.configure();
                    for (let t = 0, n = this.data.datasets.length; t < n; ++t) this._updateDataset(t, Te(e) ? e({
                        datasetIndex: t
                    }) : e);
                    this.notifyPlugins("afterDatasetsUpdate", {
                        mode: e
                    })
                }
            }
            _updateDataset(e, t) {
                const n = this.getDatasetMeta(e),
                    s = {
                        meta: n,
                        index: e,
                        mode: t,
                        cancelable: !0
                    };
                !1 !== this.notifyPlugins("beforeDatasetUpdate", s) && (n.controller._update(t), s.cancelable = !1, this.notifyPlugins("afterDatasetUpdate", s))
            }
            render() {
                !1 !== this.notifyPlugins("beforeRender", {
                    cancelable: !0
                }) && (Ss.has(this) ? this.attached && !Ss.running(this) && Ss.start(this) : (this.draw(), Ia({
                    chart: this
                })))
            }
            draw() {
                let e;
                if (this._resizeBeforeDraw) {
                    const {
                        width: e,
                        height: t
                    } = this._resizeBeforeDraw;
                    this._resize(e, t), this._resizeBeforeDraw = null
                }
                if (this.clear(), this.width <= 0 || this.height <= 0) return;
                if (!1 === this.notifyPlugins("beforeDraw", {
                        cancelable: !0
                    })) return;
                const t = this._layers;
                for (e = 0; e < t.length && t[e].z <= 0; ++e) t[e].draw(this.chartArea);
                for (this._drawDatasets(); e < t.length; ++e) t[e].draw(this.chartArea);
                this.notifyPlugins("afterDraw")
            }
            _getSortedDatasetMetas(e) {
                const t = this._sortedMetasets,
                    n = [];
                let s, i;
                for (s = 0, i = t.length; s < i; ++s) {
                    const i = t[s];
                    e && !i.visible || n.push(i)
                }
                return n
            }
            getSortedVisibleDatasetMetas() {
                return this._getSortedDatasetMetas(!0)
            }
            _drawDatasets() {
                if (!1 === this.notifyPlugins("beforeDatasetsDraw", {
                        cancelable: !0
                    })) return;
                const e = this.getSortedVisibleDatasetMetas();
                for (let t = e.length - 1; t >= 0; --t) this._drawDataset(e[t]);
                this.notifyPlugins("afterDatasetsDraw")
            }
            _drawDataset(e) {
                const t = this.ctx,
                    n = e._clip,
                    s = !n.disabled,
                    i = function (e) {
                        const {
                            xScale: t,
                            yScale: n
                        } = e;
                        if (t && n) return {
                            left: t.left,
                            right: t.right,
                            top: n.top,
                            bottom: n.bottom
                        }
                    }(e) || this.chartArea,
                    a = {
                        meta: e,
                        index: e.index,
                        cancelable: !0
                    };
                !1 !== this.notifyPlugins("beforeDatasetDraw", a) && (s && hn(t, {
                    left: !1 === n.left ? 0 : i.left - n.left,
                    right: !1 === n.right ? this.width : i.right + n.right,
                    top: !1 === n.top ? 0 : i.top - n.top,
                    bottom: !1 === n.bottom ? this.height : i.bottom + n.bottom
                }), e.controller.draw(), s && gn(t), a.cancelable = !1, this.notifyPlugins("afterDatasetDraw", a))
            }
            isPointInArea(e) {
                return mn(e, this.chartArea, this._minPadding)
            }
            getElementsAtEventForMode(e, t, n, s) {
                const i = pi.modes[t];
                return "function" == typeof i ? i(this, e, n, s) : []
            }
            getDatasetMeta(e) {
                const t = this.data.datasets[e],
                    n = this._metasets;
                let s = n.filter((e => e && e._dataset === t)).pop();
                return s || (s = {
                    type: null,
                    data: [],
                    dataset: null,
                    controller: null,
                    hidden: null,
                    xAxisID: null,
                    yAxisID: null,
                    order: t && t.order || 0,
                    index: e,
                    _dataset: t,
                    _parsed: [],
                    _sorted: !1
                }, n.push(s)), s
            }
            getContext() {
                return this.$context || (this.$context = Pn(null, {
                    chart: this,
                    type: "chart"
                }))
            }
            getVisibleDatasetCount() {
                return this.getSortedVisibleDatasetMetas().length
            }
            isDatasetVisible(e) {
                const t = this.data.datasets[e];
                if (!t) return !1;
                const n = this.getDatasetMeta(e);
                return "boolean" == typeof n.hidden ? !n.hidden : !t.hidden
            }
            setDatasetVisibility(e, t) {
                this.getDatasetMeta(e).hidden = !t
            }
            toggleDataVisibility(e) {
                this._hiddenIndices[e] = !this._hiddenIndices[e]
            }
            getDataVisibility(e) {
                return !this._hiddenIndices[e]
            }
            _updateVisibility(e, t, n) {
                const s = n ? "show" : "hide",
                    i = this.getDatasetMeta(e),
                    a = i.controller._resolveAnimations(void 0, s);
                be(t) ? (i.data[t].hidden = !n, this.update()) : (this.setDatasetVisibility(e, n), a.update(i, {
                    visible: n
                }), this.update((t => t.datasetIndex === e ? s : void 0)))
            }
            hide(e, t) {
                this._updateVisibility(e, t, !1)
            }
            show(e, t) {
                this._updateVisibility(e, t, !0)
            }
            _destroyDatasetMeta(e) {
                const t = this._metasets[e];
                t && t.controller && t.controller._destroy(), delete this._metasets[e]
            }
            _stop() {
                let e, t;
                for (this.stop(), Ss.remove(this), e = 0, t = this.data.datasets.length; e < t; ++e) this._destroyDatasetMeta(e)
            }
            destroy() {
                this.notifyPlugins("beforeDestroy");
                const {
                    canvas: e,
                    ctx: t
                } = this;
                this._stop(), this.config.clearCache(), e && (this.unbindEvents(), cn(e, t), this.platform.releaseContext(t), this.canvas = null, this.ctx = null), delete Sa[this.id], this.notifyPlugins("afterDestroy")
            }
            toBase64Image(...e) {
                return this.canvas.toDataURL(...e)
            }
            bindEvents() {
                this.bindUserEvents(), this.options.responsive ? this.bindResponsiveEvents() : this.attached = !0
            }
            bindUserEvents() {
                const e = this._listeners,
                    t = this.platform,
                    n = (n, s) => {
                        t.addEventListener(this, n, s), e[n] = s
                    },
                    s = (e, t, n) => {
                        e.offsetX = t, e.offsetY = n, this._eventHandler(e)
                    };
                ce(this.options.events, (e => n(e, s)))
            }
            bindResponsiveEvents() {
                this._responsiveListeners || (this._responsiveListeners = {});
                const e = this._responsiveListeners,
                    t = this.platform,
                    n = (n, s) => {
                        t.addEventListener(this, n, s), e[n] = s
                    },
                    s = (n, s) => {
                        e[n] && (t.removeEventListener(this, n, s), delete e[n])
                    },
                    i = (e, t) => {
                        this.canvas && this.resize(e, t)
                    };
                let a;
                const o = () => {
                    s("attach", o), this.attached = !0, this.resize(), n("resize", i), n("detach", a)
                };
                a = () => {
                    this.attached = !1, s("resize", i), this._stop(), this._resize(0, 0), n("attach", o)
                }, t.isAttached(this.canvas) ? o() : a()
            }
            unbindEvents() {
                ce(this._listeners, ((e, t) => {
                    this.platform.removeEventListener(this, t, e)
                })), this._listeners = {}, ce(this._responsiveListeners, ((e, t) => {
                    this.platform.removeEventListener(this, t, e)
                })), this._responsiveListeners = void 0
            }
            updateHoverStyle(e, t, n) {
                const s = n ? "set" : "remove";
                let i, a, o, r;
                for ("dataset" === t && (i = this.getDatasetMeta(e[0].datasetIndex), i.controller["_" + s + "DatasetHoverStyle"]()), o = 0, r = e.length; o < r; ++o) {
                    a = e[o];
                    const t = a && this.getDatasetMeta(a.datasetIndex).controller;
                    t && t[s + "HoverStyle"](a.element, a.datasetIndex, a.index)
                }
            }
            getActiveElements() {
                return this._active || []
            }
            setActiveElements(e) {
                const t = this._active || [],
                    n = e.map((({
                        datasetIndex: e,
                        index: t
                    }) => {
                        const n = this.getDatasetMeta(e);
                        if (!n) throw new Error("No dataset found at index " + e);
                        return {
                            datasetIndex: e,
                            element: n.data[t],
                            index: t
                        }
                    }));
                !ue(n, t) && (this._active = n, this._lastEvent = null, this._updateHoverStyles(n, t))
            }
            notifyPlugins(e, t, n) {
                return this._plugins.notify(this, e, t, n)
            }
            isPluginEnabled(e) {
                return 1 === this._plugins._cache.filter((t => t.plugin.id === e)).length
            }
            _updateHoverStyles(e, t, n) {
                const s = this.options.hover,
                    i = (e, t) => e.filter((e => !t.some((t => e.datasetIndex === t.datasetIndex && e.index === t.index)))),
                    a = i(t, e),
                    o = n ? e : i(e, t);
                a.length && this.updateHoverStyle(a, s.mode, !1), o.length && s.mode && this.updateHoverStyle(o, s.mode, !0)
            }
            _eventHandler(e, t) {
                const n = {
                        event: e,
                        replay: t,
                        cancelable: !0,
                        inChartArea: this.isPointInArea(e)
                    },
                    s = t => (t.options.events || this.options.events).includes(e.native.type);
                if (!1 === this.notifyPlugins("beforeEvent", n, s)) return;
                const i = this._handleEvent(e, t, n.inChartArea);
                return n.cancelable = !1, this.notifyPlugins("afterEvent", n, s), (i || n.changed) && this.render(), this
            }
            _handleEvent(e, t, n) {
                const {
                    _active: s = [],
                    options: i
                } = this, a = t, o = this._getActiveElements(e, s, n, a), r = function (e) {
                    return "mouseup" === e.type || "click" === e.type || "contextmenu" === e.type
                }(e), l = function (e, t, n, s) {
                    return n && "mouseout" !== e.type ? s ? t : e : null
                }(e, this._lastEvent, n, r);
                n && (this._lastEvent = null, le(i.onHover, [e, o, this], this), r && le(i.onClick, [e, o, this], this));
                const c = !ue(o, s);
                return (c || t) && (this._active = o, this._updateHoverStyles(o, s, t)), this._lastEvent = l, c
            }
            _getActiveElements(e, t, n, s) {
                if ("mouseout" === e.type) return [];
                if (!n) return t;
                const i = this.options.hover;
                return this.getElementsAtEventForMode(e, i.mode, i, s)
            }
        }

        function Oa() {
            return ce(wa.instances, (e => e._plugins.invalidate()))
        }
        var Pa = wa;

        function La(e, t, n, s) {
            const i = function (e) {
                    return jn(e, ["outerStart", "outerEnd", "innerStart", "innerEnd"])
                }(e.options.borderRadius),
                a = (n - t) / 2,
                o = Math.min(a, s * t / 2),
                r = e => {
                    const t = (n - Math.min(a, e)) * s / 2;
                    return We(e, 0, Math.min(a, t))
                };
            return {
                outerStart: r(i.outerStart),
                outerEnd: r(i.outerEnd),
                innerStart: We(i.innerStart, 0, o),
                innerEnd: We(i.innerEnd, 0, o)
            }
        }

        function Aa(e, t, n, s) {
            return {
                x: n + e * Math.cos(t),
                y: s + e * Math.sin(t)
            }
        }

        function Ma(e, t, n, s, i, a) {
            const {
                x: o,
                y: r,
                startAngle: l,
                pixelMargin: c,
                innerRadius: u
            } = t, d = Math.max(t.outerRadius + s + n - c, 0), m = u > 0 ? u + s + n + c : 0;
            let h = 0;
            const g = i - l;
            if (s) {
                const e = ((u > 0 ? u - s : 0) + (d > 0 ? d - s : 0)) / 2;
                h = (g - (0 !== e ? g * e / (e + s) : g)) / 2
            }
            const p = (g - Math.max(.001, g * d - n / Ie) / d) / 2,
                f = l + p + h,
                x = i - p - h,
                {
                    outerStart: v,
                    outerEnd: _,
                    innerStart: b,
                    innerEnd: T
                } = La(t, m, d, x - f),
                E = d - v,
                I = d - _,
                y = f + v / E,
                j = x - _ / I,
                S = m + b,
                C = m + T,
                N = f + b / S,
                w = x - T / C;
            if (e.beginPath(), a) {
                const t = (y + j) / 2;
                if (e.arc(o, r, d, y, t), e.arc(o, r, d, t, j), _ > 0) {
                    const t = Aa(I, j, o, r);
                    e.arc(t.x, t.y, _, j, x + Ne)
                }
                const n = Aa(C, x, o, r);
                if (e.lineTo(n.x, n.y), T > 0) {
                    const t = Aa(C, w, o, r);
                    e.arc(t.x, t.y, T, x + Ne, w + Math.PI)
                }
                const s = (x - T / m + (f + b / m)) / 2;
                if (e.arc(o, r, m, x - T / m, s, !0), e.arc(o, r, m, s, f + b / m, !0), b > 0) {
                    const t = Aa(S, N, o, r);
                    e.arc(t.x, t.y, b, N + Math.PI, f - Ne)
                }
                const i = Aa(E, f, o, r);
                if (e.lineTo(i.x, i.y), v > 0) {
                    const t = Aa(E, y, o, r);
                    e.arc(t.x, t.y, v, f - Ne, y)
                }
            } else {
                e.moveTo(o, r);
                const t = Math.cos(y) * d + o,
                    n = Math.sin(y) * d + r;
                e.lineTo(t, n);
                const s = Math.cos(j) * d + o,
                    i = Math.sin(j) * d + r;
                e.lineTo(s, i)
            }
            e.closePath()
        }

        function Ra(e, t, n, s, i) {
            const {
                fullCircles: a,
                startAngle: o,
                circumference: r,
                options: l
            } = t, {
                borderWidth: c,
                borderJoinStyle: u
            } = l, d = "inner" === l.borderAlign;
            if (!c) return;
            d ? (e.lineWidth = 2 * c, e.lineJoin = u || "round") : (e.lineWidth = c, e.lineJoin = u || "bevel");
            let m = t.endAngle;
            if (a) {
                Ma(e, t, n, s, m, i);
                for (let t = 0; t < a; ++t) e.stroke();
                isNaN(r) || (m = o + (r % ye || ye))
            }
            d && function (e, t, n) {
                const {
                    startAngle: s,
                    pixelMargin: i,
                    x: a,
                    y: o,
                    outerRadius: r,
                    innerRadius: l
                } = t;
                let c = i / r;
                e.beginPath(), e.arc(a, o, r, s - c, n + c), l > i ? (c = i / l, e.arc(a, o, l, n + c, s - c, !0)) : e.arc(a, o, i, n + Ne, s - Ne), e.closePath(), e.clip()
            }(e, t, m), a || (Ma(e, t, n, s, m, i), e.stroke())
        }
        class ka extends Yi {
            static id = "arc";
            static defaults = {
                borderAlign: "center",
                borderColor: "#fff",
                borderJoinStyle: void 0,
                borderRadius: 0,
                borderWidth: 2,
                offset: 0,
                spacing: 0,
                angle: void 0,
                circular: !0
            };
            static defaultRoutes = {
                backgroundColor: "backgroundColor"
            };
            constructor(e) {
                super(), this.options = void 0, this.circumference = void 0, this.startAngle = void 0, this.endAngle = void 0, this.innerRadius = void 0, this.outerRadius = void 0, this.pixelMargin = 0, this.fullCircles = 0, e && Object.assign(this, e)
            }
            inRange(e, t, n) {
                const s = this.getProps(["x", "y"], n),
                    {
                        angle: i,
                        distance: a
                    } = Be(s, {
                        x: e,
                        y: t
                    }),
                    {
                        startAngle: o,
                        endAngle: r,
                        innerRadius: l,
                        outerRadius: c,
                        circumference: u
                    } = this.getProps(["startAngle", "endAngle", "innerRadius", "outerRadius", "circumference"], n),
                    d = this.options.spacing / 2,
                    m = oe(u, r - o) >= ye || Ke(i, o, r),
                    h = ze(a, l + d, c + d);
                return m && h
            }
            getCenterPoint(e) {
                const {
                    x: t,
                    y: n,
                    startAngle: s,
                    endAngle: i,
                    innerRadius: a,
                    outerRadius: o
                } = this.getProps(["x", "y", "startAngle", "endAngle", "innerRadius", "outerRadius", "circumference"], e), {
                    offset: r,
                    spacing: l
                } = this.options, c = (s + i) / 2, u = (a + o + l + r) / 2;
                return {
                    x: t + Math.cos(c) * u,
                    y: n + Math.sin(c) * u
                }
            }
            tooltipPosition(e) {
                return this.getCenterPoint(e)
            }
            draw(e) {
                const {
                    options: t,
                    circumference: n
                } = this, s = (t.offset || 0) / 4, i = (t.spacing || 0) / 2, a = t.circular;
                if (this.pixelMargin = "inner" === t.borderAlign ? .33 : 0, this.fullCircles = n > ye ? Math.floor(n / ye) : 0, 0 === n || this.innerRadius < 0 || this.outerRadius < 0) return;
                e.save();
                const o = (this.startAngle + this.endAngle) / 2;
                e.translate(Math.cos(o) * s, Math.sin(o) * s);
                const r = s * (1 - Math.sin(Math.min(Ie, n || 0)));
                e.fillStyle = t.backgroundColor, e.strokeStyle = t.borderColor,
                    function (e, t, n, s, i) {
                        const {
                            fullCircles: a,
                            startAngle: o,
                            circumference: r
                        } = t;
                        let l = t.endAngle;
                        if (a) {
                            Ma(e, t, n, s, l, i);
                            for (let t = 0; t < a; ++t) e.fill();
                            isNaN(r) || (l = o + (r % ye || ye))
                        }
                        Ma(e, t, n, s, l, i), e.fill()
                    }(e, this, r, i, a), Ra(e, this, r, i, a), e.restore()
            }
        }

        function Da(e, t, n = t) {
            e.lineCap = oe(n.borderCapStyle, t.borderCapStyle), e.setLineDash(oe(n.borderDash, t.borderDash)), e.lineDashOffset = oe(n.borderDashOffset, t.borderDashOffset), e.lineJoin = oe(n.borderJoinStyle, t.borderJoinStyle), e.lineWidth = oe(n.borderWidth, t.borderWidth), e.strokeStyle = oe(n.borderColor, t.borderColor)
        }

        function Fa(e, t, n) {
            e.lineTo(n.x, n.y)
        }

        function Ua(e, t, n = {}) {
            const s = e.length,
                {
                    start: i = 0,
                    end: a = s - 1
                } = n,
                {
                    start: o,
                    end: r
                } = t,
                l = Math.max(i, o),
                c = Math.min(a, r),
                u = i < o && a < o || i > r && a > r;
            return {
                count: s,
                start: l,
                loop: t.loop,
                ilen: c < l && !u ? s + c - l : c - l
            }
        }

        function Ba(e, t, n, s) {
            const {
                points: i,
                options: a
            } = t, {
                count: o,
                start: r,
                loop: l,
                ilen: c
            } = Ua(i, n, s), u = function (e) {
                return e.stepped ? pn : e.tension || "monotone" === e.cubicInterpolationMode ? fn : Fa
            }(a);
            let d, m, h, {
                move: g = !0,
                reverse: p
            } = s || {};
            for (d = 0; d <= c; ++d) m = i[(r + (p ? c - d : d)) % o], m.skip || (g ? (e.moveTo(m.x, m.y), g = !1) : u(e, h, m, p, a.stepped), h = m);
            return l && (m = i[(r + (p ? c : 0)) % o], u(e, h, m, p, a.stepped)), !!l
        }

        function Ga(e, t, n, s) {
            const i = t.points,
                {
                    count: a,
                    start: o,
                    ilen: r
                } = Ua(i, n, s),
                {
                    move: l = !0,
                    reverse: c
                } = s || {};
            let u, d, m, h, g, p, f = 0,
                x = 0;
            const v = e => (o + (c ? r - e : e)) % a,
                _ = () => {
                    h !== g && (e.lineTo(f, g), e.lineTo(f, h), e.lineTo(f, p))
                };
            for (l && (d = i[v(0)], e.moveTo(d.x, d.y)), u = 0; u <= r; ++u) {
                if (d = i[v(u)], d.skip) continue;
                const t = d.x,
                    n = d.y,
                    s = 0 | t;
                s === m ? (n < h ? h = n : n > g && (g = n), f = (x * f + t) / ++x) : (_(), e.lineTo(t, n), m = s, x = 0, h = g = n), p = n
            }
            _()
        }

        function Va(e) {
            const t = e.options,
                n = t.borderDash && t.borderDash.length;
            return !(e._decimated || e._loop || t.tension || "monotone" === t.cubicInterpolationMode || t.stepped || n) ? Ga : Ba
        }
        const Ha = "function" == typeof Path2D;

        function Ka(e, t, n, s) {
            Ha && !t.options.segment ? function (e, t, n, s) {
                let i = t._path;
                i || (i = t._path = new Path2D, t.path(i, n, s) && i.closePath()), Da(e, t.options), e.stroke(i)
            }(e, t, n, s) : function (e, t, n, s) {
                const {
                    segments: i,
                    options: a
                } = t, o = Va(t);
                for (const r of i) Da(e, a, r.style), e.beginPath(), o(e, t, r, {
                    start: n,
                    end: n + s - 1
                }) && e.closePath(), e.stroke()
            }(e, t, n, s)
        }
        class Wa extends Yi {
            static id = "line";
            static defaults = {
                borderCapStyle: "butt",
                borderDash: [],
                borderDashOffset: 0,
                borderJoinStyle: "miter",
                borderWidth: 3,
                capBezierPoints: !0,
                cubicInterpolationMode: "default",
                fill: !1,
                spanGaps: !1,
                stepped: !1,
                tension: 0
            };
            static defaultRoutes = {
                backgroundColor: "backgroundColor",
                borderColor: "borderColor"
            };
            static descriptors = {
                _scriptable: !0,
                _indexable: e => "borderDash" !== e && "fill" !== e
            };
            constructor(e) {
                super(), this.animated = !0, this.options = void 0, this._chart = void 0, this._loop = void 0, this._fullLoop = void 0, this._path = void 0, this._points = void 0, this._segments = void 0, this._decimated = !1, this._pointsUpdated = !1, this._datasetIndex = void 0, e && Object.assign(this, e)
            }
            updateControlPoints(e, t) {
                const n = this.options;
                if ((n.tension || "monotone" === n.cubicInterpolationMode) && !n.stepped && !this._pointsUpdated) {
                    const s = n.spanGaps ? this._loop : this._fullLoop;
                    Zn(this._points, n, e, s, t), this._pointsUpdated = !0
                }
            }
            set points(e) {
                this._points = e, delete this._segments, delete this._path, this._pointsUpdated = !1
            }
            get points() {
                return this._points
            }
            get segments() {
                return this._segments || (this._segments = function (e, t) {
                    const n = e.points,
                        s = e.options.spanGaps,
                        i = n.length;
                    if (!i) return [];
                    const a = !!e._loop,
                        {
                            start: o,
                            end: r
                        } = function (e, t, n, s) {
                            let i = 0,
                                a = t - 1;
                            if (n && !s)
                                for (; i < t && !e[i].skip;) i++;
                            for (; i < t && e[i].skip;) i++;
                            for (i %= t, n && (a += i); a > i && e[a % t].skip;) a--;
                            return a %= t, {
                                start: i,
                                end: a
                            }
                        }(n, i, a, s);
                    return Es(e, !0 === s ? [{
                        start: o,
                        end: r,
                        loop: a
                    }] : function (e, t, n, s) {
                        const i = e.length,
                            a = [];
                        let o, r = t,
                            l = e[t];
                        for (o = t + 1; o <= n; ++o) {
                            const n = e[o % i];
                            n.skip || n.stop ? l.skip || (s = !1, a.push({
                                start: t % i,
                                end: (o - 1) % i,
                                loop: s
                            }), t = r = n.stop ? o : null) : (r = o, l.skip && (t = o)), l = n
                        }
                        return null !== r && a.push({
                            start: t % i,
                            end: r % i,
                            loop: s
                        }), a
                    }(n, o, r < o ? r + i : r, !!e._fullLoop && 0 === o && r === i - 1), n, t)
                }(this, this.options.segment))
            }
            first() {
                const e = this.segments,
                    t = this.points;
                return e.length && t[e[0].start]
            }
            last() {
                const e = this.segments,
                    t = this.points,
                    n = e.length;
                return n && t[e[n - 1].end]
            }
            interpolate(e, t) {
                const n = this.options,
                    s = e[t],
                    i = this.points,
                    a = Ts(this, {
                        property: t,
                        start: s,
                        end: s
                    });
                if (!a.length) return;
                const o = [],
                    r = function (e) {
                        return e.stepped ? hs : e.tension || "monotone" === e.cubicInterpolationMode ? gs : ms
                    }(n);
                let l, c;
                for (l = 0, c = a.length; l < c; ++l) {
                    const {
                        start: c,
                        end: u
                    } = a[l], d = i[c], m = i[u];
                    if (d === m) {
                        o.push(d);
                        continue
                    }
                    const h = r(d, m, Math.abs((s - d[t]) / (m[t] - d[t])), n.stepped);
                    h[t] = e[t], o.push(h)
                }
                return 1 === o.length ? o[0] : o
            }
            pathSegment(e, t, n) {
                return Va(this)(e, this, t, n)
            }
            path(e, t, n) {
                const s = this.segments,
                    i = Va(this);
                let a = this._loop;
                t = t || 0, n = n || this.points.length - t;
                for (const o of s) a &= i(e, this, o, {
                    start: t,
                    end: t + n - 1
                });
                return !!a
            }
            draw(e, t, n, s) {
                const i = this.options || {};
                (this.points || []).length && i.borderWidth && (e.save(), Ka(e, this, n, s), e.restore()), this.animated && (this._pointsUpdated = !1, this._path = void 0)
            }
        }

        function za(e, t, n, s) {
            const i = e.options,
                {
                    [n]: a
                } = e.getProps([n], s);
            return Math.abs(t - a) < i.radius + i.hitRadius
        }
        class Ya extends Yi {
            static id = "point";
            static defaults = {
                borderWidth: 1,
                hitRadius: 1,
                hoverBorderWidth: 1,
                hoverRadius: 4,
                pointStyle: "circle",
                radius: 3,
                rotation: 0
            };
            static defaultRoutes = {
                backgroundColor: "backgroundColor",
                borderColor: "borderColor"
            };
            constructor(e) {
                super(), this.options = void 0, this.parsed = void 0, this.skip = void 0, this.stop = void 0, e && Object.assign(this, e)
            }
            inRange(e, t, n) {
                const s = this.options,
                    {
                        x: i,
                        y: a
                    } = this.getProps(["x", "y"], n);
                return Math.pow(e - i, 2) + Math.pow(t - a, 2) < Math.pow(s.hitRadius + s.radius, 2)
            }
            inXRange(e, t) {
                return za(this, e, "x", t)
            }
            inYRange(e, t) {
                return za(this, e, "y", t)
            }
            getCenterPoint(e) {
                const {
                    x: t,
                    y: n
                } = this.getProps(["x", "y"], e);
                return {
                    x: t,
                    y: n
                }
            }
            size(e) {
                let t = (e = e || this.options || {}).radius || 0;
                t = Math.max(t, t && e.hoverRadius || 0);
                return 2 * (t + (t && e.borderWidth || 0))
            }
            draw(e, t) {
                const n = this.options;
                this.skip || n.radius < .1 || !mn(this, t, this.size(n) / 2) || (e.strokeStyle = n.borderColor, e.lineWidth = n.borderWidth, e.fillStyle = n.backgroundColor, un(e, n, this.x, this.y))
            }
            getRange() {
                const e = this.options || {};
                return e.radius + e.hitRadius
            }
        }

        function $a(e, t) {
            const {
                x: n,
                y: s,
                base: i,
                width: a,
                height: o
            } = e.getProps(["x", "y", "base", "width", "height"], t);
            let r, l, c, u, d;
            return e.horizontal ? (d = o / 2, r = Math.min(n, i), l = Math.max(n, i), c = s - d, u = s + d) : (d = a / 2, r = n - d, l = n + d, c = Math.min(s, i), u = Math.max(s, i)), {
                left: r,
                top: c,
                right: l,
                bottom: u
            }
        }

        function qa(e, t, n, s) {
            return e ? 0 : We(t, n, s)
        }

        function Xa(e) {
            const t = $a(e),
                n = t.right - t.left,
                s = t.bottom - t.top,
                i = function (e, t, n) {
                    const s = e.options.borderWidth,
                        i = e.borderSkipped,
                        a = Sn(s);
                    return {
                        t: qa(i.top, a.top, 0, n),
                        r: qa(i.right, a.right, 0, t),
                        b: qa(i.bottom, a.bottom, 0, n),
                        l: qa(i.left, a.left, 0, t)
                    }
                }(e, n / 2, s / 2),
                a = function (e, t, n) {
                    const {
                        enableBorderRadius: s
                    } = e.getProps(["enableBorderRadius"]), i = e.options.borderRadius, a = Cn(i), o = Math.min(t, n), r = e.borderSkipped, l = s || se(i);
                    return {
                        topLeft: qa(!l || r.top || r.left, a.topLeft, 0, o),
                        topRight: qa(!l || r.top || r.right, a.topRight, 0, o),
                        bottomLeft: qa(!l || r.bottom || r.left, a.bottomLeft, 0, o),
                        bottomRight: qa(!l || r.bottom || r.right, a.bottomRight, 0, o)
                    }
                }(e, n / 2, s / 2);
            return {
                outer: {
                    x: t.left,
                    y: t.top,
                    w: n,
                    h: s,
                    radius: a
                },
                inner: {
                    x: t.left + i.l,
                    y: t.top + i.t,
                    w: n - i.l - i.r,
                    h: s - i.t - i.b,
                    radius: {
                        topLeft: Math.max(0, a.topLeft - Math.max(i.t, i.l)),
                        topRight: Math.max(0, a.topRight - Math.max(i.t, i.r)),
                        bottomLeft: Math.max(0, a.bottomLeft - Math.max(i.b, i.l)),
                        bottomRight: Math.max(0, a.bottomRight - Math.max(i.b, i.r))
                    }
                }
            }
        }

        function Qa(e, t, n, s) {
            const i = null === t,
                a = null === n,
                o = e && !(i && a) && $a(e, s);
            return o && (i || ze(t, o.left, o.right)) && (a || ze(n, o.top, o.bottom))
        }

        function Za(e, t) {
            e.rect(t.x, t.y, t.w, t.h)
        }

        function Ja(e, t, n = {}) {
            const s = e.x !== n.x ? -t : 0,
                i = e.y !== n.y ? -t : 0,
                a = (e.x + e.w !== n.x + n.w ? t : 0) - s,
                o = (e.y + e.h !== n.y + n.h ? t : 0) - i;
            return {
                x: e.x + s,
                y: e.y + i,
                w: e.w + a,
                h: e.h + o,
                radius: e.radius
            }
        }
        class eo extends Yi {
            static id = "bar";
            static defaults = {
                borderSkipped: "start",
                borderWidth: 0,
                borderRadius: 0,
                inflateAmount: "auto",
                pointStyle: void 0
            };
            static defaultRoutes = {
                backgroundColor: "backgroundColor",
                borderColor: "borderColor"
            };
            constructor(e) {
                super(), this.options = void 0, this.horizontal = void 0, this.base = void 0, this.width = void 0, this.height = void 0, this.inflateAmount = void 0, e && Object.assign(this, e)
            }
            draw(e) {
                const {
                    inflateAmount: t,
                    options: {
                        borderColor: n,
                        backgroundColor: s
                    }
                } = this, {
                    inner: i,
                    outer: a
                } = Xa(this), o = (r = a.radius).topLeft || r.topRight || r.bottomLeft || r.bottomRight ? bn : Za;
                var r;
                e.save(), a.w === i.w && a.h === i.h || (e.beginPath(), o(e, Ja(a, t, i)), e.clip(), o(e, Ja(i, -t, a)), e.fillStyle = n, e.fill("evenodd")), e.beginPath(), o(e, Ja(i, t)), e.fillStyle = s, e.fill(), e.restore()
            }
            inRange(e, t, n) {
                return Qa(this, e, t, n)
            }
            inXRange(e, t) {
                return Qa(this, e, null, t)
            }
            inYRange(e, t) {
                return Qa(this, null, e, t)
            }
            getCenterPoint(e) {
                const {
                    x: t,
                    y: n,
                    base: s,
                    horizontal: i
                } = this.getProps(["x", "y", "base", "horizontal"], e);
                return {
                    x: i ? (t + s) / 2 : t,
                    y: i ? n : (n + s) / 2
                }
            }
            getRange(e) {
                return "x" === e ? this.width / 2 : this.height / 2
            }
        }
        var to = Object.freeze({
            __proto__: null,
            ArcElement: ka,
            LineElement: Wa,
            PointElement: Ya,
            BarElement: eo
        });
        const no = ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
            so = no.map((e => e.replace("rgb(", "rgba(").replace(")", ", 0.5)")));

        function io(e) {
            return no[e % no.length]
        }

        function ao(e) {
            return so[e % so.length]
        }

        function oo(e) {
            return "doughnut" === e || "pie" === e ? function () {
                let e = 0;
                return t => {
                    t.backgroundColor = t.data.map((() => io(e++)))
                }
            }() : "polarArea" === e ? function () {
                let e = 0;
                return t => {
                    t.backgroundColor = t.data.map((() => ao(e++)))
                }
            }() : (e, t) => {
                e.borderColor = io(t), e.backgroundColor = ao(t)
            }
        }

        function ro(e) {
            let t;
            for (t in e)
                if (e[t].borderColor || e[t].backgroundColor) return !0;
            return !1
        }
        var lo = {
            id: "colors",
            defaults: {
                enabled: !0
            },
            beforeLayout(e, t, n) {
                if (!n.enabled) return;
                const {
                    type: s,
                    options: {
                        elements: i
                    },
                    data: {
                        datasets: a
                    }
                } = e.config;
                if (ro(a) || i && ro(i)) return;
                const o = oo(s);
                a.forEach(o)
            }
        };

        function co(e) {
            if (e._decimated) {
                const t = e._data;
                delete e._decimated, delete e._data, Object.defineProperty(e, "data", {
                    value: t
                })
            }
        }

        function uo(e) {
            e.data.datasets.forEach((e => {
                co(e)
            }))
        }
        var mo = {
            id: "decimation",
            defaults: {
                algorithm: "min-max",
                enabled: !1
            },
            beforeElementsUpdate: (e, t, n) => {
                if (!n.enabled) return void uo(e);
                const s = e.width;
                e.data.datasets.forEach(((t, i) => {
                    const {
                        _data: a,
                        indexAxis: o
                    } = t, r = e.getDatasetMeta(i), l = a || t.data;
                    if ("y" === On([o, e.options.indexAxis])) return;
                    if (!r.controller.supportsDecimation) return;
                    const c = e.scales[r.xAxisID];
                    if ("linear" !== c.type && "time" !== c.type) return;
                    if (e.options.parsing) return;
                    let {
                        start: u,
                        count: d
                    } = function (e, t) {
                        const n = t.length;
                        let s, i = 0;
                        const {
                            iScale: a
                        } = e, {
                            min: o,
                            max: r,
                            minDefined: l,
                            maxDefined: c
                        } = a.getUserBounds();
                        return l && (i = We($e(t, a.axis, o).lo, 0, n - 1)), s = c ? We($e(t, a.axis, r).hi + 1, i, n) - i : n - i, {
                            start: i,
                            count: s
                        }
                    }(r, l);
                    if (d <= (n.threshold || 4 * s)) return void co(t);
                    let m;
                    switch (te(a) && (t._data = l, delete t.data, Object.defineProperty(t, "data", {
                        configurable: !0,
                        enumerable: !0,
                        get: function () {
                            return this._decimated
                        },
                        set: function (e) {
                            this._data = e
                        }
                    })), n.algorithm) {
                    case "lttb":
                        m = function (e, t, n, s, i) {
                            const a = i.samples || s;
                            if (a >= n) return e.slice(t, t + n);
                            const o = [],
                                r = (n - 2) / (a - 2);
                            let l = 0;
                            const c = t + n - 1;
                            let u, d, m, h, g, p = t;
                            for (o[l++] = e[p], u = 0; u < a - 2; u++) {
                                let s, i = 0,
                                    a = 0;
                                const c = Math.floor((u + 1) * r) + 1 + t,
                                    f = Math.min(Math.floor((u + 2) * r) + 1, n) + t,
                                    x = f - c;
                                for (s = c; s < f; s++) i += e[s].x, a += e[s].y;
                                i /= x, a /= x;
                                const v = Math.floor(u * r) + 1 + t,
                                    _ = Math.min(Math.floor((u + 1) * r) + 1, n) + t,
                                    {
                                        x: b,
                                        y: T
                                    } = e[p];
                                for (m = h = -1, s = v; s < _; s++) h = .5 * Math.abs((b - i) * (e[s].y - T) - (b - e[s].x) * (a - T)), h > m && (m = h, d = e[s], g = s);
                                o[l++] = d, p = g
                            }
                            return o[l++] = e[c], o
                        }(l, u, d, s, n);
                        break;
                    case "min-max":
                        m = function (e, t, n, s) {
                            let i, a, o, r, l, c, u, d, m, h, g = 0,
                                p = 0;
                            const f = [],
                                x = t + n - 1,
                                v = e[t].x,
                                _ = e[x].x - v;
                            for (i = t; i < t + n; ++i) {
                                a = e[i], o = (a.x - v) / _ * s, r = a.y;
                                const t = 0 | o;
                                if (t === l) r < m ? (m = r, c = i) : r > h && (h = r, u = i), g = (p * g + a.x) / ++p;
                                else {
                                    const n = i - 1;
                                    if (!te(c) && !te(u)) {
                                        const t = Math.min(c, u),
                                            s = Math.max(c, u);
                                        t !== d && t !== n && f.push({
                                            ...e[t],
                                            x: g
                                        }), s !== d && s !== n && f.push({
                                            ...e[s],
                                            x: g
                                        })
                                    }
                                    i > 0 && n !== d && f.push(e[n]), f.push(a), l = t, p = 0, m = h = r, c = u = d = i
                                }
                            }
                            return f
                        }(l, u, d, s);
                        break;
                    default:
                        throw new Error(`Unsupported decimation algorithm '${n.algorithm}'`)
                    }
                    t._decimated = m
                }))
            },
            destroy(e) {
                uo(e)
            }
        };

        function ho(e, t, n, s) {
            if (s) return;
            let i = t[e],
                a = n[e];
            return "angle" === e && (i = He(i), a = He(a)), {
                property: e,
                start: i,
                end: a
            }
        }

        function go(e, t, n) {
            for (; t > e; t--) {
                const e = n[t];
                if (!isNaN(e.x) && !isNaN(e.y)) break
            }
            return t
        }

        function po(e, t, n, s) {
            return e && t ? s(e[n], t[n]) : e ? e[n] : t ? t[n] : 0
        }

        function fo(e, t) {
            let n = [],
                s = !1;
            return ne(e) ? (s = !0, n = e) : n = function (e, t) {
                const {
                    x: n = null,
                    y: s = null
                } = e || {}, i = t.points, a = [];
                return t.segments.forEach((({
                    start: e,
                    end: t
                }) => {
                    t = go(e, t, i);
                    const o = i[e],
                        r = i[t];
                    null !== s ? (a.push({
                        x: o.x,
                        y: s
                    }), a.push({
                        x: r.x,
                        y: s
                    })) : null !== n && (a.push({
                        x: n,
                        y: o.y
                    }), a.push({
                        x: n,
                        y: r.y
                    }))
                })), a
            }(e, t), n.length ? new Wa({
                points: n,
                options: {
                    tension: 0
                },
                _loop: s,
                _fullLoop: s
            }) : null
        }

        function xo(e) {
            return e && !1 !== e.fill
        }

        function vo(e, t, n) {
            let s = e[t].fill;
            const i = [t];
            let a;
            if (!n) return s;
            for (; !1 !== s && -1 === i.indexOf(s);) {
                if (!ie(s)) return s;
                if (a = e[s], !a) return !1;
                if (a.visible) return s;
                i.push(s), s = a.fill
            }
            return !1
        }

        function _o(e, t, n) {
            const s = function (e) {
                const t = e.options,
                    n = t.fill;
                let s = oe(n && n.target, n);
                void 0 === s && (s = !!t.backgroundColor);
                if (!1 === s || null === s) return !1;
                if (!0 === s) return "origin";
                return s
            }(e);
            if (se(s)) return !isNaN(s.value) && s;
            let i = parseFloat(s);
            return ie(i) && Math.floor(i) === i ? function (e, t, n, s) {
                "-" !== e && "+" !== e || (n = t + n);
                if (n === t || n < 0 || n >= s) return !1;
                return n
            }(s[0], t, i, n) : ["origin", "start", "end", "stack", "shape"].indexOf(s) >= 0 && s
        }

        function bo(e, t, n) {
            const s = [];
            for (let i = 0; i < n.length; i++) {
                const a = n[i],
                    {
                        first: o,
                        last: r,
                        point: l
                    } = To(a, t, "x");
                if (!(!l || o && r))
                    if (o) s.unshift(l);
                    else if (e.push(l), !r) break
            }
            e.push(...s)
        }

        function To(e, t, n) {
            const s = e.interpolate(t, n);
            if (!s) return {};
            const i = s[n],
                a = e.segments,
                o = e.points;
            let r = !1,
                l = !1;
            for (let e = 0; e < a.length; e++) {
                const t = a[e],
                    s = o[t.start][n],
                    c = o[t.end][n];
                if (ze(i, s, c)) {
                    r = i === s, l = i === c;
                    break
                }
            }
            return {
                first: r,
                last: l,
                point: s
            }
        }
        class Eo {
            constructor(e) {
                this.x = e.x, this.y = e.y, this.radius = e.radius
            }
            pathSegment(e, t, n) {
                const {
                    x: s,
                    y: i,
                    radius: a
                } = this;
                return t = t || {
                    start: 0,
                    end: ye
                }, e.arc(s, i, a, t.end, t.start, !0), !n.bounds
            }
            interpolate(e) {
                const {
                    x: t,
                    y: n,
                    radius: s
                } = this, i = e.angle;
                return {
                    x: t + Math.cos(i) * s,
                    y: n + Math.sin(i) * s,
                    angle: i
                }
            }
        }

        function Io(e) {
            const {
                chart: t,
                fill: n,
                line: s
            } = e;
            if (ie(n)) return function (e, t) {
                const n = e.getDatasetMeta(t),
                    s = n && e.isDatasetVisible(t);
                return s ? n.dataset : null
            }(t, n);
            if ("stack" === n) return function (e) {
                const {
                    scale: t,
                    index: n,
                    line: s
                } = e, i = [], a = s.segments, o = s.points, r = function (e, t) {
                    const n = [],
                        s = e.getMatchingVisibleMetas("line");
                    for (let e = 0; e < s.length; e++) {
                        const i = s[e];
                        if (i.index === t) break;
                        i.hidden || n.unshift(i.dataset)
                    }
                    return n
                }(t, n);
                r.push(fo({
                    x: null,
                    y: t.bottom
                }, s));
                for (let e = 0; e < a.length; e++) {
                    const t = a[e];
                    for (let e = t.start; e <= t.end; e++) bo(i, o[e], r)
                }
                return new Wa({
                    points: i,
                    options: {}
                })
            }(e);
            if ("shape" === n) return !0;
            const i = function (e) {
                const t = e.scale || {};
                if (t.getPointPositionForValue) return function (e) {
                    const {
                        scale: t,
                        fill: n
                    } = e, s = t.options, i = t.getLabels().length, a = s.reverse ? t.max : t.min, o = function (e, t, n) {
                        let s;
                        return s = "start" === e ? n : "end" === e ? t.options.reverse ? t.min : t.max : se(e) ? e.value : t.getBaseValue(), s
                    }(n, t, a), r = [];
                    if (s.grid.circular) {
                        const e = t.getPointPositionForValue(0, a);
                        return new Eo({
                            x: e.x,
                            y: e.y,
                            radius: t.getDistanceFromCenterForValue(o)
                        })
                    }
                    for (let e = 0; e < i; ++e) r.push(t.getPointPositionForValue(e, o));
                    return r
                }(e);
                return function (e) {
                    const {
                        scale: t = {},
                        fill: n
                    } = e, s = function (e, t) {
                        let n = null;
                        return "start" === e ? n = t.bottom : "end" === e ? n = t.top : se(e) ? n = t.getPixelForValue(e.value) : t.getBasePixel && (n = t.getBasePixel()), n
                    }(n, t);
                    if (ie(s)) {
                        const e = t.isHorizontal();
                        return {
                            x: e ? s : null,
                            y: e ? null : s
                        }
                    }
                    return null
                }(e)
            }(e);
            return i instanceof Eo ? i : fo(i, s)
        }

        function yo(e, t, n) {
            const s = Io(t),
                {
                    line: i,
                    scale: a,
                    axis: o
                } = t,
                r = i.options,
                l = r.fill,
                c = r.backgroundColor,
                {
                    above: u = c,
                    below: d = c
                } = l || {};
            s && i.points.length && (hn(e, n), function (e, t) {
                const {
                    line: n,
                    target: s,
                    above: i,
                    below: a,
                    area: o,
                    scale: r
                } = t, l = n._loop ? "angle" : t.axis;
                e.save(), "x" === l && a !== i && (jo(e, s, o.top), So(e, {
                    line: n,
                    target: s,
                    color: i,
                    scale: r,
                    property: l
                }), e.restore(), e.save(), jo(e, s, o.bottom));
                So(e, {
                    line: n,
                    target: s,
                    color: a,
                    scale: r,
                    property: l
                }), e.restore()
            }(e, {
                line: i,
                target: s,
                above: u,
                below: d,
                area: n,
                scale: a,
                axis: o
            }), gn(e))
        }

        function jo(e, t, n) {
            const {
                segments: s,
                points: i
            } = t;
            let a = !0,
                o = !1;
            e.beginPath();
            for (const r of s) {
                const {
                    start: s,
                    end: l
                } = r, c = i[s], u = i[go(s, l, i)];
                a ? (e.moveTo(c.x, c.y), a = !1) : (e.lineTo(c.x, n), e.lineTo(c.x, c.y)), o = !!t.pathSegment(e, r, {
                    move: o
                }), o ? e.closePath() : e.lineTo(u.x, n)
            }
            e.lineTo(t.first().x, n), e.closePath(), e.clip()
        }

        function So(e, t) {
            const {
                line: n,
                target: s,
                property: i,
                color: a,
                scale: o
            } = t, r = function (e, t, n) {
                const s = e.segments,
                    i = e.points,
                    a = t.points,
                    o = [];
                for (const e of s) {
                    let {
                        start: s,
                        end: r
                    } = e;
                    r = go(s, r, i);
                    const l = ho(n, i[s], i[r], e.loop);
                    if (!t.segments) {
                        o.push({
                            source: e,
                            target: l,
                            start: i[s],
                            end: i[r]
                        });
                        continue
                    }
                    const c = Ts(t, l);
                    for (const t of c) {
                        const s = ho(n, a[t.start], a[t.end], t.loop),
                            r = bs(e, i, s);
                        for (const e of r) o.push({
                            source: e,
                            target: t,
                            start: {
                                [n]: po(l, s, "start", Math.max)
                            },
                            end: {
                                [n]: po(l, s, "end", Math.min)
                            }
                        })
                    }
                }
                return o
            }(n, s, i);
            for (const {
                    source: t,
                    target: l,
                    start: c,
                    end: u
                } of r) {
                const {
                    style: {
                        backgroundColor: r = a
                    } = {}
                } = t, d = !0 !== s;
                e.save(), e.fillStyle = r, Co(e, o, d && ho(i, c, u)), e.beginPath();
                const m = !!n.pathSegment(e, t);
                let h;
                if (d) {
                    m ? e.closePath() : No(e, s, u, i);
                    const t = !!s.pathSegment(e, l, {
                        move: m,
                        reverse: !0
                    });
                    h = m && t, h || No(e, s, c, i)
                }
                e.closePath(), e.fill(h ? "evenodd" : "nonzero"), e.restore()
            }
        }

        function Co(e, t, n) {
            const {
                top: s,
                bottom: i
            } = t.chart.chartArea, {
                property: a,
                start: o,
                end: r
            } = n || {};
            "x" === a && (e.beginPath(), e.rect(o, s, r - o, i - s), e.clip())
        }

        function No(e, t, n, s) {
            const i = t.interpolate(n, s);
            i && e.lineTo(i.x, i.y)
        }
        var wo = {
            id: "filler",
            afterDatasetsUpdate(e, t, n) {
                const s = (e.data.datasets || []).length,
                    i = [];
                let a, o, r, l;
                for (o = 0; o < s; ++o) a = e.getDatasetMeta(o), r = a.dataset, l = null, r && r.options && r instanceof Wa && (l = {
                    visible: e.isDatasetVisible(o),
                    index: o,
                    fill: _o(r, o, s),
                    chart: e,
                    axis: a.controller.options.indexAxis,
                    scale: a.vScale,
                    line: r
                }), a.$filler = l, i.push(l);
                for (o = 0; o < s; ++o) l = i[o], l && !1 !== l.fill && (l.fill = vo(i, o, n.propagate))
            },
            beforeDraw(e, t, n) {
                const s = "beforeDraw" === n.drawTime,
                    i = e.getSortedVisibleDatasetMetas(),
                    a = e.chartArea;
                for (let t = i.length - 1; t >= 0; --t) {
                    const n = i[t].$filler;
                    n && (n.line.updateControlPoints(a, n.axis), s && n.fill && yo(e.ctx, n, a))
                }
            },
            beforeDatasetsDraw(e, t, n) {
                if ("beforeDatasetsDraw" !== n.drawTime) return;
                const s = e.getSortedVisibleDatasetMetas();
                for (let t = s.length - 1; t >= 0; --t) {
                    const n = s[t].$filler;
                    xo(n) && yo(e.ctx, n, e.chartArea)
                }
            },
            beforeDatasetDraw(e, t, n) {
                const s = t.meta.$filler;
                xo(s) && "beforeDatasetDraw" === n.drawTime && yo(e.ctx, s, e.chartArea)
            },
            defaults: {
                propagate: !0,
                drawTime: "beforeDatasetDraw"
            }
        };
        const Oo = (e, t) => {
            let {
                boxHeight: n = t,
                boxWidth: s = t
            } = e;
            return e.usePointStyle && (n = Math.min(n, t), s = e.pointStyleWidth || Math.min(s, t)), {
                boxWidth: s,
                boxHeight: n,
                itemHeight: Math.max(t, n)
            }
        };
        class Po extends Yi {
            constructor(e) {
                super(), this._added = !1, this.legendHitBoxes = [], this._hoveredItem = null, this.doughnutMode = !1, this.chart = e.chart, this.options = e.options, this.ctx = e.ctx, this.legendItems = void 0, this.columnSizes = void 0, this.lineWidths = void 0, this.maxHeight = void 0, this.maxWidth = void 0, this.top = void 0, this.bottom = void 0, this.left = void 0, this.right = void 0, this.height = void 0, this.width = void 0, this._margins = void 0, this.position = void 0, this.weight = void 0, this.fullSize = void 0
            }
            update(e, t, n) {
                this.maxWidth = e, this.maxHeight = t, this._margins = n, this.setDimensions(), this.buildLabels(), this.fit()
            }
            setDimensions() {
                this.isHorizontal() ? (this.width = this.maxWidth, this.left = this._margins.left, this.right = this.width) : (this.height = this.maxHeight, this.top = this._margins.top, this.bottom = this.height)
            }
            buildLabels() {
                const e = this.options.labels || {};
                let t = le(e.generateLabels, [this.chart], this) || [];
                e.filter && (t = t.filter((t => e.filter(t, this.chart.data)))), e.sort && (t = t.sort(((t, n) => e.sort(t, n, this.chart.data)))), this.options.reverse && t.reverse(), this.legendItems = t
            }
            fit() {
                const {
                    options: e,
                    ctx: t
                } = this;
                if (!e.display) return void(this.width = this.height = 0);
                const n = e.labels,
                    s = wn(n.font),
                    i = s.size,
                    a = this._computeTitleHeight(),
                    {
                        boxWidth: o,
                        itemHeight: r
                    } = Oo(n, i);
                let l, c;
                t.font = s.string, this.isHorizontal() ? (l = this.maxWidth, c = this._fitRows(a, i, o, r) + 10) : (c = this.maxHeight, l = this._fitCols(a, s, o, r) + 10), this.width = Math.min(l, e.maxWidth || this.maxWidth), this.height = Math.min(c, e.maxHeight || this.maxHeight)
            }
            _fitRows(e, t, n, s) {
                const {
                    ctx: i,
                    maxWidth: a,
                    options: {
                        labels: {
                            padding: o
                        }
                    }
                } = this, r = this.legendHitBoxes = [], l = this.lineWidths = [0], c = s + o;
                let u = e;
                i.textAlign = "left", i.textBaseline = "middle";
                let d = -1,
                    m = -c;
                return this.legendItems.forEach(((e, h) => {
                    const g = n + t / 2 + i.measureText(e.text).width;
                    (0 === h || l[l.length - 1] + g + 2 * o > a) && (u += c, l[l.length - (h > 0 ? 0 : 1)] = 0, m += c, d++), r[h] = {
                        left: 0,
                        top: m,
                        row: d,
                        width: g,
                        height: s
                    }, l[l.length - 1] += g + o
                })), u
            }
            _fitCols(e, t, n, s) {
                const {
                    ctx: i,
                    maxHeight: a,
                    options: {
                        labels: {
                            padding: o
                        }
                    }
                } = this, r = this.legendHitBoxes = [], l = this.columnSizes = [], c = a - e;
                let u = o,
                    d = 0,
                    m = 0,
                    h = 0,
                    g = 0;
                return this.legendItems.forEach(((e, a) => {
                    const {
                        itemWidth: p,
                        itemHeight: f
                    } = function (e, t, n, s, i) {
                        const a = function (e, t, n, s) {
                                let i = e.text;
                                i && "string" != typeof i && (i = i.reduce(((e, t) => e.length > t.length ? e : t)));
                                return t + n.size / 2 + s.measureText(i).width
                            }(s, e, t, n),
                            o = function (e, t, n) {
                                let s = e;
                                "string" != typeof t.text && (s = Lo(t, n));
                                return s
                            }(i, s, t.lineHeight);
                        return {
                            itemWidth: a,
                            itemHeight: o
                        }
                    }(n, t, i, e, s);
                    a > 0 && m + f + 2 * o > c && (u += d + o, l.push({
                        width: d,
                        height: m
                    }), h += d + o, g++, d = m = 0), r[a] = {
                        left: h,
                        top: m,
                        col: g,
                        width: p,
                        height: f
                    }, d = Math.max(d, p), m += f + o
                })), u += d, l.push({
                    width: d,
                    height: m
                }), u
            }
            adjustHitBoxes() {
                if (!this.options.display) return;
                const e = this._computeTitleHeight(),
                    {
                        legendHitBoxes: t,
                        options: {
                            align: n,
                            labels: {
                                padding: s
                            },
                            rtl: i
                        }
                    } = this,
                    a = ps(i, this.left, this.width);
                if (this.isHorizontal()) {
                    let i = 0,
                        o = nt(n, this.left + s, this.right - this.lineWidths[i]);
                    for (const r of t) i !== r.row && (i = r.row, o = nt(n, this.left + s, this.right - this.lineWidths[i])), r.top += this.top + e + s, r.left = a.leftForLtr(a.x(o), r.width), o += r.width + s
                } else {
                    let i = 0,
                        o = nt(n, this.top + e + s, this.bottom - this.columnSizes[i].height);
                    for (const r of t) r.col !== i && (i = r.col, o = nt(n, this.top + e + s, this.bottom - this.columnSizes[i].height)), r.top = o, r.left += this.left + s, r.left = a.leftForLtr(a.x(r.left), r.width), o += r.height + s
                }
            }
            isHorizontal() {
                return "top" === this.options.position || "bottom" === this.options.position
            }
            draw() {
                if (this.options.display) {
                    const e = this.ctx;
                    hn(e, this), this._draw(), gn(e)
                }
            }
            _draw() {
                const {
                    options: e,
                    columnSizes: t,
                    lineWidths: n,
                    ctx: s
                } = this, {
                    align: i,
                    labels: a
                } = e, o = an.color, r = ps(e.rtl, this.left, this.width), l = wn(a.font), {
                    padding: c
                } = a, u = l.size, d = u / 2;
                let m;
                this.drawTitle(), s.textAlign = r.textAlign("left"), s.textBaseline = "middle", s.lineWidth = .5, s.font = l.string;
                const {
                    boxWidth: h,
                    boxHeight: g,
                    itemHeight: p
                } = Oo(a, u), f = this.isHorizontal(), x = this._computeTitleHeight();
                m = f ? {
                    x: nt(i, this.left + c, this.right - n[0]),
                    y: this.top + c + x,
                    line: 0
                } : {
                    x: this.left + c,
                    y: nt(i, this.top + x + c, this.bottom - t[0].height),
                    line: 0
                }, fs(this.ctx, e.textDirection);
                const v = p + c;
                this.legendItems.forEach(((_, b) => {
                    s.strokeStyle = _.fontColor, s.fillStyle = _.fontColor;
                    const T = s.measureText(_.text).width,
                        E = r.textAlign(_.textAlign || (_.textAlign = a.textAlign)),
                        I = h + d + T;
                    let y = m.x,
                        j = m.y;
                    r.setWidth(this.width), f ? b > 0 && y + I + c > this.right && (j = m.y += v, m.line++, y = m.x = nt(i, this.left + c, this.right - n[m.line])) : b > 0 && j + v > this.bottom && (y = m.x = y + t[m.line].width + c, m.line++, j = m.y = nt(i, this.top + x + c, this.bottom - t[m.line].height));
                    if (function (e, t, n) {
                            if (isNaN(h) || h <= 0 || isNaN(g) || g < 0) return;
                            s.save();
                            const i = oe(n.lineWidth, 1);
                            if (s.fillStyle = oe(n.fillStyle, o), s.lineCap = oe(n.lineCap, "butt"), s.lineDashOffset = oe(n.lineDashOffset, 0), s.lineJoin = oe(n.lineJoin, "miter"), s.lineWidth = i, s.strokeStyle = oe(n.strokeStyle, o), s.setLineDash(oe(n.lineDash, [])), a.usePointStyle) {
                                const o = {
                                        radius: g * Math.SQRT2 / 2,
                                        pointStyle: n.pointStyle,
                                        rotation: n.rotation,
                                        borderWidth: i
                                    },
                                    l = r.xPlus(e, h / 2);
                                dn(s, o, l, t + d, a.pointStyleWidth && h)
                            } else {
                                const a = t + Math.max((u - g) / 2, 0),
                                    o = r.leftForLtr(e, h),
                                    l = Cn(n.borderRadius);
                                s.beginPath(), Object.values(l).some((e => 0 !== e)) ? bn(s, {
                                    x: o,
                                    y: a,
                                    w: h,
                                    h: g,
                                    radius: l
                                }) : s.rect(o, a, h, g), s.fill(), 0 !== i && s.stroke()
                            }
                            s.restore()
                        }(r.x(y), j, _), y = ((e, t, n, s) => e === (s ? "left" : "right") ? n : "center" === e ? (t + n) / 2 : t)(E, y + h + d, f ? y + I : this.right, e.rtl), function (e, t, n) {
                            xn(s, n.text, e, t + p / 2, l, {
                                strikethrough: n.hidden,
                                textAlign: r.textAlign(n.textAlign)
                            })
                        }(r.x(y), j, _), f) m.x += I + c;
                    else if ("string" != typeof _.text) {
                        const e = l.lineHeight;
                        m.y += Lo(_, e)
                    } else m.y += v
                })), xs(this.ctx, e.textDirection)
            }
            drawTitle() {
                const e = this.options,
                    t = e.title,
                    n = wn(t.font),
                    s = Nn(t.padding);
                if (!t.display) return;
                const i = ps(e.rtl, this.left, this.width),
                    a = this.ctx,
                    o = t.position,
                    r = n.size / 2,
                    l = s.top + r;
                let c, u = this.left,
                    d = this.width;
                if (this.isHorizontal()) d = Math.max(...this.lineWidths), c = this.top + l, u = nt(e.align, u, this.right - d);
                else {
                    const t = this.columnSizes.reduce(((e, t) => Math.max(e, t.height)), 0);
                    c = l + nt(e.align, this.top, this.bottom - t - e.labels.padding - this._computeTitleHeight())
                }
                const m = nt(o, u, u + d);
                a.textAlign = i.textAlign(tt(o)), a.textBaseline = "middle", a.strokeStyle = t.color, a.fillStyle = t.color, a.font = n.string, xn(a, t.text, m, c, n)
            }
            _computeTitleHeight() {
                const e = this.options.title,
                    t = wn(e.font),
                    n = Nn(e.padding);
                return e.display ? t.lineHeight + n.height : 0
            }
            _getLegendItemAt(e, t) {
                let n, s, i;
                if (ze(e, this.left, this.right) && ze(t, this.top, this.bottom))
                    for (i = this.legendHitBoxes, n = 0; n < i.length; ++n)
                        if (s = i[n], ze(e, s.left, s.left + s.width) && ze(t, s.top, s.top + s.height)) return this.legendItems[n];
                return null
            }
            handleEvent(e) {
                const t = this.options;
                if (! function (e, t) {
                        if (("mousemove" === e || "mouseout" === e) && (t.onHover || t.onLeave)) return !0;
                        if (t.onClick && ("click" === e || "mouseup" === e)) return !0;
                        return !1
                    }(e.type, t)) return;
                const n = this._getLegendItemAt(e.x, e.y);
                if ("mousemove" === e.type || "mouseout" === e.type) {
                    const a = this._hoveredItem,
                        o = (i = n, null !== (s = a) && null !== i && s.datasetIndex === i.datasetIndex && s.index === i.index);
                    a && !o && le(t.onLeave, [e, a, this], this), this._hoveredItem = n, n && !o && le(t.onHover, [e, n, this], this)
                } else n && le(t.onClick, [e, n, this], this);
                var s, i
            }
        }

        function Lo(e, t) {
            return t * (e.text ? e.text.length + .5 : 0)
        }
        var Ao = {
            id: "legend",
            _element: Po,
            start(e, t, n) {
                const s = e.legend = new Po({
                    ctx: e.ctx,
                    options: n,
                    chart: e
                });
                Ni.configure(e, s, n), Ni.addBox(e, s)
            },
            stop(e) {
                Ni.removeBox(e, e.legend), delete e.legend
            },
            beforeUpdate(e, t, n) {
                const s = e.legend;
                Ni.configure(e, s, n), s.options = n
            },
            afterUpdate(e) {
                const t = e.legend;
                t.buildLabels(), t.adjustHitBoxes()
            },
            afterEvent(e, t) {
                t.replay || e.legend.handleEvent(t.event)
            },
            defaults: {
                display: !0,
                position: "top",
                align: "center",
                fullSize: !0,
                reverse: !1,
                weight: 1e3,
                onClick(e, t, n) {
                    const s = t.datasetIndex,
                        i = n.chart;
                    i.isDatasetVisible(s) ? (i.hide(s), t.hidden = !0) : (i.show(s), t.hidden = !1)
                },
                onHover: null,
                onLeave: null,
                labels: {
                    color: e => e.chart.options.color,
                    boxWidth: 40,
                    padding: 10,
                    generateLabels(e) {
                        const t = e.data.datasets,
                            {
                                labels: {
                                    usePointStyle: n,
                                    pointStyle: s,
                                    textAlign: i,
                                    color: a,
                                    useBorderRadius: o,
                                    borderRadius: r
                                }
                            } = e.legend.options;
                        return e._getSortedDatasetMetas().map((e => {
                            const l = e.controller.getStyle(n ? 0 : void 0),
                                c = Nn(l.borderWidth);
                            return {
                                text: t[e.index].label,
                                fillStyle: l.backgroundColor,
                                fontColor: a,
                                hidden: !e.visible,
                                lineCap: l.borderCapStyle,
                                lineDash: l.borderDash,
                                lineDashOffset: l.borderDashOffset,
                                lineJoin: l.borderJoinStyle,
                                lineWidth: (c.width + c.height) / 4,
                                strokeStyle: l.borderColor,
                                pointStyle: s || l.pointStyle,
                                rotation: l.rotation,
                                textAlign: i || l.textAlign,
                                borderRadius: o && (r || l.borderRadius),
                                datasetIndex: e.index
                            }
                        }), this)
                    }
                },
                title: {
                    color: e => e.chart.options.color,
                    display: !1,
                    position: "center",
                    text: ""
                }
            },
            descriptors: {
                _scriptable: e => !e.startsWith("on"),
                labels: {
                    _scriptable: e => !["generateLabels", "filter", "sort"].includes(e)
                }
            }
        };
        class Mo extends Yi {
            constructor(e) {
                super(), this.chart = e.chart, this.options = e.options, this.ctx = e.ctx, this._padding = void 0, this.top = void 0, this.bottom = void 0, this.left = void 0, this.right = void 0, this.width = void 0, this.height = void 0, this.position = void 0, this.weight = void 0, this.fullSize = void 0
            }
            update(e, t) {
                const n = this.options;
                if (this.left = 0, this.top = 0, !n.display) return void(this.width = this.height = this.right = this.bottom = 0);
                this.width = this.right = e, this.height = this.bottom = t;
                const s = ne(n.text) ? n.text.length : 1;
                this._padding = Nn(n.padding);
                const i = s * wn(n.font).lineHeight + this._padding.height;
                this.isHorizontal() ? this.height = i : this.width = i
            }
            isHorizontal() {
                const e = this.options.position;
                return "top" === e || "bottom" === e
            }
            _drawArgs(e) {
                const {
                    top: t,
                    left: n,
                    bottom: s,
                    right: i,
                    options: a
                } = this, o = a.align;
                let r, l, c, u = 0;
                return this.isHorizontal() ? (l = nt(o, n, i), c = t + e, r = i - n) : ("left" === a.position ? (l = n + e, c = nt(o, s, t), u = -.5 * Ie) : (l = i - e, c = nt(o, t, s), u = .5 * Ie), r = s - t), {
                    titleX: l,
                    titleY: c,
                    maxWidth: r,
                    rotation: u
                }
            }
            draw() {
                const e = this.ctx,
                    t = this.options;
                if (!t.display) return;
                const n = wn(t.font),
                    s = n.lineHeight / 2 + this._padding.top,
                    {
                        titleX: i,
                        titleY: a,
                        maxWidth: o,
                        rotation: r
                    } = this._drawArgs(s);
                xn(e, t.text, 0, 0, n, {
                    color: t.color,
                    maxWidth: o,
                    rotation: r,
                    textAlign: tt(t.align),
                    textBaseline: "middle",
                    translation: [i, a]
                })
            }
        }
        var Ro = {
            id: "title",
            _element: Mo,
            start(e, t, n) {
                ! function (e, t) {
                    const n = new Mo({
                        ctx: e.ctx,
                        options: t,
                        chart: e
                    });
                    Ni.configure(e, n, t), Ni.addBox(e, n), e.titleBlock = n
                }(e, n)
            },
            stop(e) {
                const t = e.titleBlock;
                Ni.removeBox(e, t), delete e.titleBlock
            },
            beforeUpdate(e, t, n) {
                const s = e.titleBlock;
                Ni.configure(e, s, n), s.options = n
            },
            defaults: {
                align: "center",
                display: !1,
                font: {
                    weight: "bold"
                },
                fullSize: !0,
                padding: 10,
                position: "top",
                text: "",
                weight: 2e3
            },
            defaultRoutes: {
                color: "color"
            },
            descriptors: {
                _scriptable: !0,
                _indexable: !1
            }
        };
        const ko = new WeakMap;
        var Do = {
            id: "subtitle",
            start(e, t, n) {
                const s = new Mo({
                    ctx: e.ctx,
                    options: n,
                    chart: e
                });
                Ni.configure(e, s, n), Ni.addBox(e, s), ko.set(e, s)
            },
            stop(e) {
                Ni.removeBox(e, ko.get(e)), ko.delete(e)
            },
            beforeUpdate(e, t, n) {
                const s = ko.get(e);
                Ni.configure(e, s, n), s.options = n
            },
            defaults: {
                align: "center",
                display: !1,
                font: {
                    weight: "normal"
                },
                fullSize: !0,
                padding: 0,
                position: "top",
                text: "",
                weight: 1500
            },
            defaultRoutes: {
                color: "color"
            },
            descriptors: {
                _scriptable: !0,
                _indexable: !1
            }
        };
        const Fo = {
            average(e) {
                if (!e.length) return !1;
                let t, n, s = 0,
                    i = 0,
                    a = 0;
                for (t = 0, n = e.length; t < n; ++t) {
                    const n = e[t].element;
                    if (n && n.hasValue()) {
                        const e = n.tooltipPosition();
                        s += e.x, i += e.y, ++a
                    }
                }
                return {
                    x: s / a,
                    y: i / a
                }
            },
            nearest(e, t) {
                if (!e.length) return !1;
                let n, s, i, a = t.x,
                    o = t.y,
                    r = Number.POSITIVE_INFINITY;
                for (n = 0, s = e.length; n < s; ++n) {
                    const s = e[n].element;
                    if (s && s.hasValue()) {
                        const e = Ge(t, s.getCenterPoint());
                        e < r && (r = e, i = s)
                    }
                }
                if (i) {
                    const e = i.tooltipPosition();
                    a = e.x, o = e.y
                }
                return {
                    x: a,
                    y: o
                }
            }
        };

        function Uo(e, t) {
            return t && (ne(t) ? Array.prototype.push.apply(e, t) : e.push(t)), e
        }

        function Bo(e) {
            return ("string" == typeof e || e instanceof String) && e.indexOf("\n") > -1 ? e.split("\n") : e
        }

        function Go(e, t) {
            const {
                element: n,
                datasetIndex: s,
                index: i
            } = t, a = e.getDatasetMeta(s).controller, {
                label: o,
                value: r
            } = a.getLabelAndValue(i);
            return {
                chart: e,
                label: o,
                parsed: a.getParsed(i),
                raw: e.data.datasets[s].data[i],
                formattedValue: r,
                dataset: a.getDataset(),
                dataIndex: i,
                datasetIndex: s,
                element: n
            }
        }

        function Vo(e, t) {
            const n = e.chart.ctx,
                {
                    body: s,
                    footer: i,
                    title: a
                } = e,
                {
                    boxWidth: o,
                    boxHeight: r
                } = t,
                l = wn(t.bodyFont),
                c = wn(t.titleFont),
                u = wn(t.footerFont),
                d = a.length,
                m = i.length,
                h = s.length,
                g = Nn(t.padding);
            let p = g.height,
                f = 0,
                x = s.reduce(((e, t) => e + t.before.length + t.lines.length + t.after.length), 0);
            if (x += e.beforeBody.length + e.afterBody.length, d && (p += d * c.lineHeight + (d - 1) * t.titleSpacing + t.titleMarginBottom), x) {
                p += h * (t.displayColors ? Math.max(r, l.lineHeight) : l.lineHeight) + (x - h) * l.lineHeight + (x - 1) * t.bodySpacing
            }
            m && (p += t.footerMarginTop + m * u.lineHeight + (m - 1) * t.footerSpacing);
            let v = 0;
            const _ = function (e) {
                f = Math.max(f, n.measureText(e).width + v)
            };
            return n.save(), n.font = c.string, ce(e.title, _), n.font = l.string, ce(e.beforeBody.concat(e.afterBody), _), v = t.displayColors ? o + 2 + t.boxPadding : 0, ce(s, (e => {
                ce(e.before, _), ce(e.lines, _), ce(e.after, _)
            })), v = 0, n.font = u.string, ce(e.footer, _), n.restore(), f += g.width, {
                width: f,
                height: p
            }
        }

        function Ho(e, t, n, s) {
            const {
                x: i,
                width: a
            } = n, {
                width: o,
                chartArea: {
                    left: r,
                    right: l
                }
            } = e;
            let c = "center";
            return "center" === s ? c = i <= (r + l) / 2 ? "left" : "right" : i <= a / 2 ? c = "left" : i >= o - a / 2 && (c = "right"),
                function (e, t, n, s) {
                    const {
                        x: i,
                        width: a
                    } = s, o = n.caretSize + n.caretPadding;
                    return "left" === e && i + a + o > t.width || "right" === e && i - a - o < 0 || void 0
                }(c, e, t, n) && (c = "center"), c
        }

        function Ko(e, t, n) {
            const s = n.yAlign || t.yAlign || function (e, t) {
                const {
                    y: n,
                    height: s
                } = t;
                return n < s / 2 ? "top" : n > e.height - s / 2 ? "bottom" : "center"
            }(e, n);
            return {
                xAlign: n.xAlign || t.xAlign || Ho(e, t, n, s),
                yAlign: s
            }
        }

        function Wo(e, t, n, s) {
            const {
                caretSize: i,
                caretPadding: a,
                cornerRadius: o
            } = e, {
                xAlign: r,
                yAlign: l
            } = n, c = i + a, {
                topLeft: u,
                topRight: d,
                bottomLeft: m,
                bottomRight: h
            } = Cn(o);
            let g = function (e, t) {
                let {
                    x: n,
                    width: s
                } = e;
                return "right" === t ? n -= s : "center" === t && (n -= s / 2), n
            }(t, r);
            const p = function (e, t, n) {
                let {
                    y: s,
                    height: i
                } = e;
                return "top" === t ? s += n : s -= "bottom" === t ? i + n : i / 2, s
            }(t, l, c);
            return "center" === l ? "left" === r ? g += c : "right" === r && (g -= c) : "left" === r ? g -= Math.max(u, m) + i : "right" === r && (g += Math.max(d, h) + i), {
                x: We(g, 0, s.width - t.width),
                y: We(p, 0, s.height - t.height)
            }
        }

        function zo(e, t, n) {
            const s = Nn(n.padding);
            return "center" === t ? e.x + e.width / 2 : "right" === t ? e.x + e.width - s.right : e.x + s.left
        }

        function Yo(e) {
            return Uo([], Bo(e))
        }

        function $o(e, t) {
            const n = t && t.dataset && t.dataset.tooltip && t.dataset.tooltip.callbacks;
            return n ? e.override(n) : e
        }
        const qo = {
            beforeTitle: J,
            title(e) {
                if (e.length > 0) {
                    const t = e[0],
                        n = t.chart.data.labels,
                        s = n ? n.length : 0;
                    if (this && this.options && "dataset" === this.options.mode) return t.dataset.label || "";
                    if (t.label) return t.label;
                    if (s > 0 && t.dataIndex < s) return n[t.dataIndex]
                }
                return ""
            },
            afterTitle: J,
            beforeBody: J,
            beforeLabel: J,
            label(e) {
                if (this && this.options && "dataset" === this.options.mode) return e.label + ": " + e.formattedValue || e.formattedValue;
                let t = e.dataset.label || "";
                t && (t += ": ");
                const n = e.formattedValue;
                return te(n) || (t += n), t
            },
            labelColor(e) {
                const t = e.chart.getDatasetMeta(e.datasetIndex).controller.getStyle(e.dataIndex);
                return {
                    borderColor: t.borderColor,
                    backgroundColor: t.backgroundColor,
                    borderWidth: t.borderWidth,
                    borderDash: t.borderDash,
                    borderDashOffset: t.borderDashOffset,
                    borderRadius: 0
                }
            },
            labelTextColor() {
                return this.options.bodyColor
            },
            labelPointStyle(e) {
                const t = e.chart.getDatasetMeta(e.datasetIndex).controller.getStyle(e.dataIndex);
                return {
                    pointStyle: t.pointStyle,
                    rotation: t.rotation
                }
            },
            afterLabel: J,
            afterBody: J,
            beforeFooter: J,
            footer: J,
            afterFooter: J
        };

        function Xo(e, t, n, s) {
            const i = e[t].call(n, s);
            return void 0 === i ? qo[t].call(n, s) : i
        }
        class Qo extends Yi {
            static positioners = Fo;
            constructor(e) {
                super(), this.opacity = 0, this._active = [], this._eventPosition = void 0, this._size = void 0, this._cachedAnimations = void 0, this._tooltipItems = [], this.$animations = void 0, this.$context = void 0, this.chart = e.chart, this.options = e.options, this.dataPoints = void 0, this.title = void 0, this.beforeBody = void 0, this.body = void 0, this.afterBody = void 0, this.footer = void 0, this.xAlign = void 0, this.yAlign = void 0, this.x = void 0, this.y = void 0, this.height = void 0, this.width = void 0, this.caretX = void 0, this.caretY = void 0, this.labelColors = void 0, this.labelPointStyles = void 0, this.labelTextColors = void 0
            }
            initialize(e) {
                this.options = e, this._cachedAnimations = void 0, this.$context = void 0
            }
            _resolveAnimations() {
                const e = this._cachedAnimations;
                if (e) return e;
                const t = this.chart,
                    n = this.options.setContext(this.getContext()),
                    s = n.enabled && t.options.animation && n.animations,
                    i = new Os(this.chart, s);
                return s._cacheable && (this._cachedAnimations = Object.freeze(i)), i
            }
            getContext() {
                return this.$context || (this.$context = (e = this.chart.getContext(), t = this, n = this._tooltipItems, Pn(e, {
                    tooltip: t,
                    tooltipItems: n,
                    type: "tooltip"
                })));
                var e, t, n
            }
            getTitle(e, t) {
                const {
                    callbacks: n
                } = t, s = Xo(n, "beforeTitle", this, e), i = Xo(n, "title", this, e), a = Xo(n, "afterTitle", this, e);
                let o = [];
                return o = Uo(o, Bo(s)), o = Uo(o, Bo(i)), o = Uo(o, Bo(a)), o
            }
            getBeforeBody(e, t) {
                return Yo(Xo(t.callbacks, "beforeBody", this, e))
            }
            getBody(e, t) {
                const {
                    callbacks: n
                } = t, s = [];
                return ce(e, (e => {
                    const t = {
                            before: [],
                            lines: [],
                            after: []
                        },
                        i = $o(n, e);
                    Uo(t.before, Bo(Xo(i, "beforeLabel", this, e))), Uo(t.lines, Xo(i, "label", this, e)), Uo(t.after, Bo(Xo(i, "afterLabel", this, e))), s.push(t)
                })), s
            }
            getAfterBody(e, t) {
                return Yo(Xo(t.callbacks, "afterBody", this, e))
            }
            getFooter(e, t) {
                const {
                    callbacks: n
                } = t, s = Xo(n, "beforeFooter", this, e), i = Xo(n, "footer", this, e), a = Xo(n, "afterFooter", this, e);
                let o = [];
                return o = Uo(o, Bo(s)), o = Uo(o, Bo(i)), o = Uo(o, Bo(a)), o
            }
            _createItems(e) {
                const t = this._active,
                    n = this.chart.data,
                    s = [],
                    i = [],
                    a = [];
                let o, r, l = [];
                for (o = 0, r = t.length; o < r; ++o) l.push(Go(this.chart, t[o]));
                return e.filter && (l = l.filter(((t, s, i) => e.filter(t, s, i, n)))), e.itemSort && (l = l.sort(((t, s) => e.itemSort(t, s, n)))), ce(l, (t => {
                    const n = $o(e.callbacks, t);
                    s.push(Xo(n, "labelColor", this, t)), i.push(Xo(n, "labelPointStyle", this, t)), a.push(Xo(n, "labelTextColor", this, t))
                })), this.labelColors = s, this.labelPointStyles = i, this.labelTextColors = a, this.dataPoints = l, l
            }
            update(e, t) {
                const n = this.options.setContext(this.getContext()),
                    s = this._active;
                let i, a = [];
                if (s.length) {
                    const e = Fo[n.position].call(this, s, this._eventPosition);
                    a = this._createItems(n), this.title = this.getTitle(a, n), this.beforeBody = this.getBeforeBody(a, n), this.body = this.getBody(a, n), this.afterBody = this.getAfterBody(a, n), this.footer = this.getFooter(a, n);
                    const t = this._size = Vo(this, n),
                        o = Object.assign({}, e, t),
                        r = Ko(this.chart, n, o),
                        l = Wo(n, o, r, this.chart);
                    this.xAlign = r.xAlign, this.yAlign = r.yAlign, i = {
                        opacity: 1,
                        x: l.x,
                        y: l.y,
                        width: t.width,
                        height: t.height,
                        caretX: e.x,
                        caretY: e.y
                    }
                } else 0 !== this.opacity && (i = {
                    opacity: 0
                });
                this._tooltipItems = a, this.$context = void 0, i && this._resolveAnimations().update(this, i), e && n.external && n.external.call(this, {
                    chart: this.chart,
                    tooltip: this,
                    replay: t
                })
            }
            drawCaret(e, t, n, s) {
                const i = this.getCaretPosition(e, n, s);
                t.lineTo(i.x1, i.y1), t.lineTo(i.x2, i.y2), t.lineTo(i.x3, i.y3)
            }
            getCaretPosition(e, t, n) {
                const {
                    xAlign: s,
                    yAlign: i
                } = this, {
                    caretSize: a,
                    cornerRadius: o
                } = n, {
                    topLeft: r,
                    topRight: l,
                    bottomLeft: c,
                    bottomRight: u
                } = Cn(o), {
                    x: d,
                    y: m
                } = e, {
                    width: h,
                    height: g
                } = t;
                let p, f, x, v, _, b;
                return "center" === i ? (_ = m + g / 2, "left" === s ? (p = d, f = p - a, v = _ + a, b = _ - a) : (p = d + h, f = p + a, v = _ - a, b = _ + a), x = p) : (f = "left" === s ? d + Math.max(r, c) + a : "right" === s ? d + h - Math.max(l, u) - a : this.caretX, "top" === i ? (v = m, _ = v - a, p = f - a, x = f + a) : (v = m + g, _ = v + a, p = f + a, x = f - a), b = v), {
                    x1: p,
                    x2: f,
                    x3: x,
                    y1: v,
                    y2: _,
                    y3: b
                }
            }
            drawTitle(e, t, n) {
                const s = this.title,
                    i = s.length;
                let a, o, r;
                if (i) {
                    const l = ps(n.rtl, this.x, this.width);
                    for (e.x = zo(this, n.titleAlign, n), t.textAlign = l.textAlign(n.titleAlign), t.textBaseline = "middle", a = wn(n.titleFont), o = n.titleSpacing, t.fillStyle = n.titleColor, t.font = a.string, r = 0; r < i; ++r) t.fillText(s[r], l.x(e.x), e.y + a.lineHeight / 2), e.y += a.lineHeight + o, r + 1 === i && (e.y += n.titleMarginBottom - o)
                }
            }
            _drawColorBox(e, t, n, s, i) {
                const a = this.labelColors[n],
                    o = this.labelPointStyles[n],
                    {
                        boxHeight: r,
                        boxWidth: l,
                        boxPadding: c
                    } = i,
                    u = wn(i.bodyFont),
                    d = zo(this, "left", i),
                    m = s.x(d),
                    h = r < u.lineHeight ? (u.lineHeight - r) / 2 : 0,
                    g = t.y + h;
                if (i.usePointStyle) {
                    const t = {
                            radius: Math.min(l, r) / 2,
                            pointStyle: o.pointStyle,
                            rotation: o.rotation,
                            borderWidth: 1
                        },
                        n = s.leftForLtr(m, l) + l / 2,
                        c = g + r / 2;
                    e.strokeStyle = i.multiKeyBackground, e.fillStyle = i.multiKeyBackground, un(e, t, n, c), e.strokeStyle = a.borderColor, e.fillStyle = a.backgroundColor, un(e, t, n, c)
                } else {
                    e.lineWidth = se(a.borderWidth) ? Math.max(...Object.values(a.borderWidth)) : a.borderWidth || 1, e.strokeStyle = a.borderColor, e.setLineDash(a.borderDash || []), e.lineDashOffset = a.borderDashOffset || 0;
                    const t = s.leftForLtr(m, l - c),
                        n = s.leftForLtr(s.xPlus(m, 1), l - c - 2),
                        o = Cn(a.borderRadius);
                    Object.values(o).some((e => 0 !== e)) ? (e.beginPath(), e.fillStyle = i.multiKeyBackground, bn(e, {
                        x: t,
                        y: g,
                        w: l,
                        h: r,
                        radius: o
                    }), e.fill(), e.stroke(), e.fillStyle = a.backgroundColor, e.beginPath(), bn(e, {
                        x: n,
                        y: g + 1,
                        w: l - 2,
                        h: r - 2,
                        radius: o
                    }), e.fill()) : (e.fillStyle = i.multiKeyBackground, e.fillRect(t, g, l, r), e.strokeRect(t, g, l, r), e.fillStyle = a.backgroundColor, e.fillRect(n, g + 1, l - 2, r - 2))
                }
                e.fillStyle = this.labelTextColors[n]
            }
            drawBody(e, t, n) {
                const {
                    body: s
                } = this, {
                    bodySpacing: i,
                    bodyAlign: a,
                    displayColors: o,
                    boxHeight: r,
                    boxWidth: l,
                    boxPadding: c
                } = n, u = wn(n.bodyFont);
                let d = u.lineHeight,
                    m = 0;
                const h = ps(n.rtl, this.x, this.width),
                    g = function (n) {
                        t.fillText(n, h.x(e.x + m), e.y + d / 2), e.y += d + i
                    },
                    p = h.textAlign(a);
                let f, x, v, _, b, T, E;
                for (t.textAlign = a, t.textBaseline = "middle", t.font = u.string, e.x = zo(this, p, n), t.fillStyle = n.bodyColor, ce(this.beforeBody, g), m = o && "right" !== p ? "center" === a ? l / 2 + c : l + 2 + c : 0, _ = 0, T = s.length; _ < T; ++_) {
                    for (f = s[_], x = this.labelTextColors[_], t.fillStyle = x, ce(f.before, g), v = f.lines, o && v.length && (this._drawColorBox(t, e, _, h, n), d = Math.max(u.lineHeight, r)), b = 0, E = v.length; b < E; ++b) g(v[b]), d = u.lineHeight;
                    ce(f.after, g)
                }
                m = 0, d = u.lineHeight, ce(this.afterBody, g), e.y -= i
            }
            drawFooter(e, t, n) {
                const s = this.footer,
                    i = s.length;
                let a, o;
                if (i) {
                    const r = ps(n.rtl, this.x, this.width);
                    for (e.x = zo(this, n.footerAlign, n), e.y += n.footerMarginTop, t.textAlign = r.textAlign(n.footerAlign), t.textBaseline = "middle", a = wn(n.footerFont), t.fillStyle = n.footerColor, t.font = a.string, o = 0; o < i; ++o) t.fillText(s[o], r.x(e.x), e.y + a.lineHeight / 2), e.y += a.lineHeight + n.footerSpacing
                }
            }
            drawBackground(e, t, n, s) {
                const {
                    xAlign: i,
                    yAlign: a
                } = this, {
                    x: o,
                    y: r
                } = e, {
                    width: l,
                    height: c
                } = n, {
                    topLeft: u,
                    topRight: d,
                    bottomLeft: m,
                    bottomRight: h
                } = Cn(s.cornerRadius);
                t.fillStyle = s.backgroundColor, t.strokeStyle = s.borderColor, t.lineWidth = s.borderWidth, t.beginPath(), t.moveTo(o + u, r), "top" === a && this.drawCaret(e, t, n, s), t.lineTo(o + l - d, r), t.quadraticCurveTo(o + l, r, o + l, r + d), "center" === a && "right" === i && this.drawCaret(e, t, n, s), t.lineTo(o + l, r + c - h), t.quadraticCurveTo(o + l, r + c, o + l - h, r + c), "bottom" === a && this.drawCaret(e, t, n, s), t.lineTo(o + m, r + c), t.quadraticCurveTo(o, r + c, o, r + c - m), "center" === a && "left" === i && this.drawCaret(e, t, n, s), t.lineTo(o, r + u), t.quadraticCurveTo(o, r, o + u, r), t.closePath(), t.fill(), s.borderWidth > 0 && t.stroke()
            }
            _updateAnimationTarget(e) {
                const t = this.chart,
                    n = this.$animations,
                    s = n && n.x,
                    i = n && n.y;
                if (s || i) {
                    const n = Fo[e.position].call(this, this._active, this._eventPosition);
                    if (!n) return;
                    const a = this._size = Vo(this, e),
                        o = Object.assign({}, n, this._size),
                        r = Ko(t, e, o),
                        l = Wo(e, o, r, t);
                    s._to === l.x && i._to === l.y || (this.xAlign = r.xAlign, this.yAlign = r.yAlign, this.width = a.width, this.height = a.height, this.caretX = n.x, this.caretY = n.y, this._resolveAnimations().update(this, l))
                }
            }
            _willRender() {
                return !!this.opacity
            }
            draw(e) {
                const t = this.options.setContext(this.getContext());
                let n = this.opacity;
                if (!n) return;
                this._updateAnimationTarget(t);
                const s = {
                        width: this.width,
                        height: this.height
                    },
                    i = {
                        x: this.x,
                        y: this.y
                    };
                n = Math.abs(n) < .001 ? 0 : n;
                const a = Nn(t.padding),
                    o = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;
                t.enabled && o && (e.save(), e.globalAlpha = n, this.drawBackground(i, e, s, t), fs(e, t.textDirection), i.y += a.top, this.drawTitle(i, e, t), this.drawBody(i, e, t), this.drawFooter(i, e, t), xs(e, t.textDirection), e.restore())
            }
            getActiveElements() {
                return this._active || []
            }
            setActiveElements(e, t) {
                const n = this._active,
                    s = e.map((({
                        datasetIndex: e,
                        index: t
                    }) => {
                        const n = this.chart.getDatasetMeta(e);
                        if (!n) throw new Error("Cannot find a dataset at index " + e);
                        return {
                            datasetIndex: e,
                            element: n.data[t],
                            index: t
                        }
                    })),
                    i = !ue(n, s),
                    a = this._positionChanged(s, t);
                (i || a) && (this._active = s, this._eventPosition = t, this._ignoreReplayEvents = !0, this.update(!0))
            }
            handleEvent(e, t, n = !0) {
                if (t && this._ignoreReplayEvents) return !1;
                this._ignoreReplayEvents = !1;
                const s = this.options,
                    i = this._active || [],
                    a = this._getActiveElements(e, i, t, n),
                    o = this._positionChanged(a, e),
                    r = t || !ue(a, i) || o;
                return r && (this._active = a, (s.enabled || s.external) && (this._eventPosition = {
                    x: e.x,
                    y: e.y
                }, this.update(!0, t))), r
            }
            _getActiveElements(e, t, n, s) {
                const i = this.options;
                if ("mouseout" === e.type) return [];
                if (!s) return t;
                const a = this.chart.getElementsAtEventForMode(e, i.mode, i, n);
                return i.reverse && a.reverse(), a
            }
            _positionChanged(e, t) {
                const {
                    caretX: n,
                    caretY: s,
                    options: i
                } = this, a = Fo[i.position].call(this, e, t);
                return !1 !== a && (n !== a.x || s !== a.y)
            }
        }
        var Zo = {
                id: "tooltip",
                _element: Qo,
                positioners: Fo,
                afterInit(e, t, n) {
                    n && (e.tooltip = new Qo({
                        chart: e,
                        options: n
                    }))
                },
                beforeUpdate(e, t, n) {
                    e.tooltip && e.tooltip.initialize(n)
                },
                reset(e, t, n) {
                    e.tooltip && e.tooltip.initialize(n)
                },
                afterDraw(e) {
                    const t = e.tooltip;
                    if (t && t._willRender()) {
                        const n = {
                            tooltip: t
                        };
                        if (!1 === e.notifyPlugins("beforeTooltipDraw", {
                                ...n,
                                cancelable: !0
                            })) return;
                        t.draw(e.ctx), e.notifyPlugins("afterTooltipDraw", n)
                    }
                },
                afterEvent(e, t) {
                    if (e.tooltip) {
                        const n = t.replay;
                        e.tooltip.handleEvent(t.event, n, t.inChartArea) && (t.changed = !0)
                    }
                },
                defaults: {
                    enabled: !0,
                    external: null,
                    position: "average",
                    backgroundColor: "rgba(0,0,0,0.8)",
                    titleColor: "#fff",
                    titleFont: {
                        weight: "bold"
                    },
                    titleSpacing: 2,
                    titleMarginBottom: 6,
                    titleAlign: "left",
                    bodyColor: "#fff",
                    bodySpacing: 2,
                    bodyFont: {},
                    bodyAlign: "left",
                    footerColor: "#fff",
                    footerSpacing: 2,
                    footerMarginTop: 6,
                    footerFont: {
                        weight: "bold"
                    },
                    footerAlign: "left",
                    padding: 6,
                    caretPadding: 2,
                    caretSize: 5,
                    cornerRadius: 6,
                    boxHeight: (e, t) => t.bodyFont.size,
                    boxWidth: (e, t) => t.bodyFont.size,
                    multiKeyBackground: "#fff",
                    displayColors: !0,
                    boxPadding: 0,
                    borderColor: "rgba(0,0,0,0)",
                    borderWidth: 0,
                    animation: {
                        duration: 400,
                        easing: "easeOutQuart"
                    },
                    animations: {
                        numbers: {
                            type: "number",
                            properties: ["x", "y", "width", "height", "caretX", "caretY"]
                        },
                        opacity: {
                            easing: "linear",
                            duration: 200
                        }
                    },
                    callbacks: qo
                },
                defaultRoutes: {
                    bodyFont: "font",
                    footerFont: "font",
                    titleFont: "font"
                },
                descriptors: {
                    _scriptable: e => "filter" !== e && "itemSort" !== e && "external" !== e,
                    _indexable: !1,
                    callbacks: {
                        _scriptable: !1,
                        _indexable: !1
                    },
                    animation: {
                        _fallback: !1
                    },
                    animations: {
                        _fallback: "animation"
                    }
                },
                additionalOptionScopes: ["interaction"]
            },
            Jo = Object.freeze({
                __proto__: null,
                Colors: lo,
                Decimation: mo,
                Filler: wo,
                Legend: Ao,
                SubTitle: Do,
                Title: Ro,
                Tooltip: Zo
            });

        function er(e, t, n, s) {
            const i = e.indexOf(t);
            if (-1 === i) return ((e, t, n, s) => ("string" == typeof t ? (n = e.push(t) - 1, s.unshift({
                index: n,
                label: t
            })) : isNaN(t) && (n = null), n))(e, t, n, s);
            return i !== e.lastIndexOf(t) ? n : i
        }

        function tr(e) {
            const t = this.getLabels();
            return e >= 0 && e < t.length ? t[e] : e
        }
        class nr extends na {
            static id = "category";
            static defaults = {
                ticks: {
                    callback: tr
                }
            };
            constructor(e) {
                super(e), this._startValue = void 0, this._valueRange = 0, this._addedLabels = []
            }
            init(e) {
                const t = this._addedLabels;
                if (t.length) {
                    const e = this.getLabels();
                    for (const {
                            index: n,
                            label: s
                        } of t) e[n] === s && e.splice(n, 1);
                    this._addedLabels = []
                }
                super.init(e)
            }
            parse(e, t) {
                if (te(e)) return null;
                const n = this.getLabels();
                return ((e, t) => null === e ? null : We(Math.round(e), 0, t))(t = isFinite(t) && n[t] === e ? t : er(n, e, oe(t, e), this._addedLabels), n.length - 1)
            }
            determineDataLimits() {
                const {
                    minDefined: e,
                    maxDefined: t
                } = this.getUserBounds();
                let {
                    min: n,
                    max: s
                } = this.getMinMax(!0);
                "ticks" === this.options.bounds && (e || (n = 0), t || (s = this.getLabels().length - 1)), this.min = n, this.max = s
            }
            buildTicks() {
                const e = this.min,
                    t = this.max,
                    n = this.options.offset,
                    s = [];
                let i = this.getLabels();
                i = 0 === e && t === i.length - 1 ? i : i.slice(e, t + 1), this._valueRange = Math.max(i.length - (n ? 0 : 1), 1), this._startValue = this.min - (n ? .5 : 0);
                for (let n = e; n <= t; n++) s.push({
                    value: n
                });
                return s
            }
            getLabelForValue(e) {
                return tr.call(this, e)
            }
            configure() {
                super.configure(), this.isHorizontal() || (this._reversePixels = !this._reversePixels)
            }
            getPixelForValue(e) {
                return "number" != typeof e && (e = this.parse(e)), null === e ? NaN : this.getPixelForDecimal((e - this._startValue) / this._valueRange)
            }
            getPixelForTick(e) {
                const t = this.ticks;
                return e < 0 || e > t.length - 1 ? null : this.getPixelForValue(t[e].value)
            }
            getValueForPixel(e) {
                return Math.round(this._startValue + this.getDecimalForPixel(e) * this._valueRange)
            }
            getBasePixel() {
                return this.bottom
            }
        }

        function sr(e, t) {
            const n = [],
                {
                    bounds: s,
                    step: i,
                    min: a,
                    max: o,
                    precision: r,
                    count: l,
                    maxTicks: c,
                    maxDigits: u,
                    includeBounds: d
                } = e,
                m = i || 1,
                h = c - 1,
                {
                    min: g,
                    max: p
                } = t,
                f = !te(a),
                x = !te(o),
                v = !te(l),
                _ = (p - g) / (u + 1);
            let b, T, E, I, y = Me((p - g) / h / m) * m;
            if (y < 1e-14 && !f && !x) return [{
                value: g
            }, {
                value: p
            }];
            I = Math.ceil(p / y) - Math.floor(g / y), I > h && (y = Me(I * y / h / m) * m), te(r) || (b = Math.pow(10, r), y = Math.ceil(y * b) / b), "ticks" === s ? (T = Math.floor(g / y) * y, E = Math.ceil(p / y) * y) : (T = g, E = p), f && x && i && function (e, t) {
                const n = Math.round(e);
                return n - t <= e && n + t >= e
            }((o - a) / i, y / 1e3) ? (I = Math.round(Math.min((o - a) / y, c)), y = (o - a) / I, T = a, E = o) : v ? (T = f ? a : T, E = x ? o : E, I = l - 1, y = (E - T) / I) : (I = (E - T) / y, I = Ae(I, Math.round(I), y / 1e3) ? Math.round(I) : Math.ceil(I));
            const j = Math.max(Ue(y), Ue(T));
            b = Math.pow(10, te(r) ? j : r), T = Math.round(T * b) / b, E = Math.round(E * b) / b;
            let S = 0;
            for (f && (d && T !== a ? (n.push({
                    value: a
                }), T < a && S++, Ae(Math.round((T + S * y) * b) / b, a, ir(a, _, e)) && S++) : T < a && S++); S < I; ++S) n.push({
                value: Math.round((T + S * y) * b) / b
            });
            return x && d && E !== o ? n.length && Ae(n[n.length - 1].value, o, ir(o, _, e)) ? n[n.length - 1].value = o : n.push({
                value: o
            }) : x && E !== o || n.push({
                value: E
            }), n
        }

        function ir(e, t, {
            horizontal: n,
            minRotation: s
        }) {
            const i = De(s),
                a = (n ? Math.sin(i) : Math.cos(i)) || .001,
                o = .75 * t * ("" + e).length;
            return Math.min(t / a, o)
        }
        class ar extends na {
            constructor(e) {
                super(e), this.start = void 0, this.end = void 0, this._startValue = void 0, this._endValue = void 0, this._valueRange = 0
            }
            parse(e, t) {
                return te(e) || ("number" == typeof e || e instanceof Number) && !isFinite(+e) ? null : +e
            }
            handleTickRangeOptions() {
                const {
                    beginAtZero: e
                } = this.options, {
                    minDefined: t,
                    maxDefined: n
                } = this.getUserBounds();
                let {
                    min: s,
                    max: i
                } = this;
                const a = e => s = t ? s : e,
                    o = e => i = n ? i : e;
                if (e) {
                    const e = Le(s),
                        t = Le(i);
                    e < 0 && t < 0 ? o(0) : e > 0 && t > 0 && a(0)
                }
                if (s === i) {
                    let t = 0 === i ? 1 : Math.abs(.05 * i);
                    o(i + t), e || a(s - t)
                }
                this.min = s, this.max = i
            }
            getTickLimit() {
                const e = this.options.ticks;
                let t, {
                    maxTicksLimit: n,
                    stepSize: s
                } = e;
                return s ? (t = Math.ceil(this.max / s) - Math.floor(this.min / s) + 1, t > 1e3 && (console.warn(`scales.${this.id}.ticks.stepSize: ${s} would result generating up to ${t} ticks. Limiting to 1000.`), t = 1e3)) : (t = this.computeTickLimit(), n = n || 11), n && (t = Math.min(n, t)), t
            }
            computeTickLimit() {
                return Number.POSITIVE_INFINITY
            }
            buildTicks() {
                const e = this.options,
                    t = e.ticks;
                let n = this.getTickLimit();
                n = Math.max(2, n);
                const s = sr({
                    maxTicks: n,
                    bounds: e.bounds,
                    min: e.min,
                    max: e.max,
                    precision: t.precision,
                    step: t.stepSize,
                    count: t.count,
                    maxDigits: this._maxDigits(),
                    horizontal: this.isHorizontal(),
                    minRotation: t.minRotation || 0,
                    includeBounds: !1 !== t.includeBounds
                }, this._range || this);
                return "ticks" === e.bounds && ke(s, this, "value"), e.reverse ? (s.reverse(), this.start = this.max, this.end = this.min) : (this.start = this.min, this.end = this.max), s
            }
            configure() {
                const e = this.ticks;
                let t = this.min,
                    n = this.max;
                if (super.configure(), this.options.offset && e.length) {
                    const s = (n - t) / Math.max(e.length - 1, 1) / 2;
                    t -= s, n += s
                }
                this._startValue = t, this._endValue = n, this._valueRange = n - t
            }
            getLabelForValue(e) {
                return Xt(e, this.chart.options.locale, this.options.ticks.format)
            }
        }
        class or extends ar {
            static id = "linear";
            static defaults = {
                ticks: {
                    callback: Zt.formatters.numeric
                }
            };
            determineDataLimits() {
                const {
                    min: e,
                    max: t
                } = this.getMinMax(!0);
                this.min = ie(e) ? e : 0, this.max = ie(t) ? t : 1, this.handleTickRangeOptions()
            }
            computeTickLimit() {
                const e = this.isHorizontal(),
                    t = e ? this.width : this.height,
                    n = De(this.options.ticks.minRotation),
                    s = (e ? Math.sin(n) : Math.cos(n)) || .001,
                    i = this._resolveTickFontOptions(0);
                return Math.ceil(t / Math.min(40, i.lineHeight / s))
            }
            getPixelForValue(e) {
                return null === e ? NaN : this.getPixelForDecimal((e - this._startValue) / this._valueRange)
            }
            getValueForPixel(e) {
                return this._startValue + this.getDecimalForPixel(e) * this._valueRange
            }
        }
        const rr = e => Math.floor(Pe(e)),
            lr = (e, t) => Math.pow(10, rr(e) + t);

        function cr(e) {
            return 1 === e / Math.pow(10, rr(e))
        }

        function ur(e, t, n) {
            const s = Math.pow(10, n),
                i = Math.floor(e / s);
            return Math.ceil(t / s) - i
        }

        function dr(e, {
            min: t,
            max: n
        }) {
            t = ae(e.min, t);
            const s = [],
                i = rr(t);
            let a = function (e, t) {
                    let n = rr(t - e);
                    for (; ur(e, t, n) > 10;) n++;
                    for (; ur(e, t, n) < 10;) n--;
                    return Math.min(n, rr(e))
                }(t, n),
                o = a < 0 ? Math.pow(10, Math.abs(a)) : 1;
            const r = Math.pow(10, a),
                l = i > a ? Math.pow(10, i) : 0,
                c = Math.round((t - l) * o) / o,
                u = Math.floor((t - l) / r / 10) * r * 10;
            let d = Math.floor((c - u) / Math.pow(10, a)),
                m = ae(e.min, Math.round((l + u + d * Math.pow(10, a)) * o) / o);
            for (; m < n;) s.push({
                value: m,
                major: cr(m),
                significand: d
            }), d >= 10 ? d = d < 15 ? 15 : 20 : d++, d >= 20 && (a++, d = 2, o = a >= 0 ? 1 : o), m = Math.round((l + u + d * Math.pow(10, a)) * o) / o;
            const h = ae(e.max, m);
            return s.push({
                value: h,
                major: cr(h),
                significand: d
            }), s
        }
        class mr extends na {
            static id = "logarithmic";
            static defaults = {
                ticks: {
                    callback: Zt.formatters.logarithmic,
                    major: {
                        enabled: !0
                    }
                }
            };
            constructor(e) {
                super(e), this.start = void 0, this.end = void 0, this._startValue = void 0, this._valueRange = 0
            }
            parse(e, t) {
                const n = ar.prototype.parse.apply(this, [e, t]);
                if (0 !== n) return ie(n) && n > 0 ? n : null;
                this._zero = !0
            }
            determineDataLimits() {
                const {
                    min: e,
                    max: t
                } = this.getMinMax(!0);
                this.min = ie(e) ? Math.max(0, e) : null, this.max = ie(t) ? Math.max(0, t) : null, this.options.beginAtZero && (this._zero = !0), this._zero && this.min !== this._suggestedMin && !ie(this._userMin) && (this.min = e === lr(this.min, 0) ? lr(this.min, -1) : lr(this.min, 0)), this.handleTickRangeOptions()
            }
            handleTickRangeOptions() {
                const {
                    minDefined: e,
                    maxDefined: t
                } = this.getUserBounds();
                let n = this.min,
                    s = this.max;
                const i = t => n = e ? n : t,
                    a = e => s = t ? s : e;
                n === s && (n <= 0 ? (i(1), a(10)) : (i(lr(n, -1)), a(lr(s, 1)))), n <= 0 && i(lr(s, -1)), s <= 0 && a(lr(n, 1)), this.min = n, this.max = s
            }
            buildTicks() {
                const e = this.options,
                    t = dr({
                        min: this._userMin,
                        max: this._userMax
                    }, this);
                return "ticks" === e.bounds && ke(t, this, "value"), e.reverse ? (t.reverse(), this.start = this.max, this.end = this.min) : (this.start = this.min, this.end = this.max), t
            }
            getLabelForValue(e) {
                return void 0 === e ? "0" : Xt(e, this.chart.options.locale, this.options.ticks.format)
            }
            configure() {
                const e = this.min;
                super.configure(), this._startValue = Pe(e), this._valueRange = Pe(this.max) - Pe(e)
            }
            getPixelForValue(e) {
                return void 0 !== e && 0 !== e || (e = this.min), null === e || isNaN(e) ? NaN : this.getPixelForDecimal(e === this.min ? 0 : (Pe(e) - this._startValue) / this._valueRange)
            }
            getValueForPixel(e) {
                const t = this.getDecimalForPixel(e);
                return Math.pow(10, this._startValue + t * this._valueRange)
            }
        }

        function hr(e) {
            const t = e.ticks;
            if (t.display && e.display) {
                const e = Nn(t.backdropPadding);
                return oe(t.font && t.font.size, an.font.size) + e.height
            }
            return 0
        }

        function gr(e, t, n, s, i) {
            return e === s || e === i ? {
                start: t - n / 2,
                end: t + n / 2
            } : e < s || e > i ? {
                start: t - n,
                end: t
            } : {
                start: t,
                end: t + n
            }
        }

        function pr(e) {
            const t = {
                    l: e.left + e._padding.left,
                    r: e.right - e._padding.right,
                    t: e.top + e._padding.top,
                    b: e.bottom - e._padding.bottom
                },
                n = Object.assign({}, t),
                s = [],
                i = [],
                a = e._pointLabels.length,
                o = e.options.pointLabels,
                r = o.centerPointLabels ? Ie / a : 0;
            for (let d = 0; d < a; d++) {
                const a = o.setContext(e.getPointLabelContext(d));
                i[d] = a.padding;
                const m = e.getPointPosition(d, e.drawingArea + i[d], r),
                    h = wn(a.font),
                    g = (l = e.ctx, c = h, u = ne(u = e._pointLabels[d]) ? u : [u], {
                        w: rn(l, c.string, u),
                        h: u.length * c.lineHeight
                    });
                s[d] = g;
                const p = He(e.getIndexAngle(d) + r),
                    f = Math.round(Fe(p));
                fr(n, t, p, gr(f, m.x, g.w, 0, 180), gr(f, m.y, g.h, 90, 270))
            }
            var l, c, u;
            e.setCenterPoint(t.l - n.l, n.r - t.r, t.t - n.t, n.b - t.b), e._pointLabelItems = function (e, t, n) {
                const s = [],
                    i = e._pointLabels.length,
                    a = e.options,
                    o = hr(a) / 2,
                    r = e.drawingArea,
                    l = a.pointLabels.centerPointLabels ? Ie / i : 0;
                for (let a = 0; a < i; a++) {
                    const i = e.getPointPosition(a, r + o + n[a], l),
                        c = Math.round(Fe(He(i.angle + Ne))),
                        u = t[a],
                        d = _r(i.y, u.h, c),
                        m = xr(c),
                        h = vr(i.x, u.w, m);
                    s.push({
                        x: i.x,
                        y: d,
                        textAlign: m,
                        left: h,
                        top: d,
                        right: h + u.w,
                        bottom: d + u.h
                    })
                }
                return s
            }(e, s, i)
        }

        function fr(e, t, n, s, i) {
            const a = Math.abs(Math.sin(n)),
                o = Math.abs(Math.cos(n));
            let r = 0,
                l = 0;
            s.start < t.l ? (r = (t.l - s.start) / a, e.l = Math.min(e.l, t.l - r)) : s.end > t.r && (r = (s.end - t.r) / a, e.r = Math.max(e.r, t.r + r)), i.start < t.t ? (l = (t.t - i.start) / o, e.t = Math.min(e.t, t.t - l)) : i.end > t.b && (l = (i.end - t.b) / o, e.b = Math.max(e.b, t.b + l))
        }

        function xr(e) {
            return 0 === e || 180 === e ? "center" : e < 180 ? "left" : "right"
        }

        function vr(e, t, n) {
            return "right" === n ? e -= t : "center" === n && (e -= t / 2), e
        }

        function _r(e, t, n) {
            return 90 === n || 270 === n ? e -= t / 2 : (n > 270 || n < 90) && (e -= t), e
        }

        function br(e, t, n, s) {
            const {
                ctx: i
            } = e;
            if (n) i.arc(e.xCenter, e.yCenter, t, 0, ye);
            else {
                let n = e.getPointPosition(0, t);
                i.moveTo(n.x, n.y);
                for (let a = 1; a < s; a++) n = e.getPointPosition(a, t), i.lineTo(n.x, n.y)
            }
        }
        class Tr extends ar {
            static id = "radialLinear";
            static defaults = {
                display: !0,
                animate: !0,
                position: "chartArea",
                angleLines: {
                    display: !0,
                    lineWidth: 1,
                    borderDash: [],
                    borderDashOffset: 0
                },
                grid: {
                    circular: !1
                },
                startAngle: 0,
                ticks: {
                    showLabelBackdrop: !0,
                    callback: Zt.formatters.numeric
                },
                pointLabels: {
                    backdropColor: void 0,
                    backdropPadding: 2,
                    display: !0,
                    font: {
                        size: 10
                    },
                    callback: e => e,
                    padding: 5,
                    centerPointLabels: !1
                }
            };
            static defaultRoutes = {
                "angleLines.color": "borderColor",
                "pointLabels.color": "color",
                "ticks.color": "color"
            };
            static descriptors = {
                angleLines: {
                    _fallback: "grid"
                }
            };
            constructor(e) {
                super(e), this.xCenter = void 0, this.yCenter = void 0, this.drawingArea = void 0, this._pointLabels = [], this._pointLabelItems = []
            }
            setDimensions() {
                const e = this._padding = Nn(hr(this.options) / 2),
                    t = this.width = this.maxWidth - e.width,
                    n = this.height = this.maxHeight - e.height;
                this.xCenter = Math.floor(this.left + t / 2 + e.left), this.yCenter = Math.floor(this.top + n / 2 + e.top), this.drawingArea = Math.floor(Math.min(t, n) / 2)
            }
            determineDataLimits() {
                const {
                    min: e,
                    max: t
                } = this.getMinMax(!1);
                this.min = ie(e) && !isNaN(e) ? e : 0, this.max = ie(t) && !isNaN(t) ? t : 0, this.handleTickRangeOptions()
            }
            computeTickLimit() {
                return Math.ceil(this.drawingArea / hr(this.options))
            }
            generateTickLabels(e) {
                ar.prototype.generateTickLabels.call(this, e), this._pointLabels = this.getLabels().map(((e, t) => {
                    const n = le(this.options.pointLabels.callback, [e, t], this);
                    return n || 0 === n ? n : ""
                })).filter(((e, t) => this.chart.getDataVisibility(t)))
            }
            fit() {
                const e = this.options;
                e.display && e.pointLabels.display ? pr(this) : this.setCenterPoint(0, 0, 0, 0)
            }
            setCenterPoint(e, t, n, s) {
                this.xCenter += Math.floor((e - t) / 2), this.yCenter += Math.floor((n - s) / 2), this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(e, t, n, s))
            }
            getIndexAngle(e) {
                return He(e * (ye / (this._pointLabels.length || 1)) + De(this.options.startAngle || 0))
            }
            getDistanceFromCenterForValue(e) {
                if (te(e)) return NaN;
                const t = this.drawingArea / (this.max - this.min);
                return this.options.reverse ? (this.max - e) * t : (e - this.min) * t
            }
            getValueForDistanceFromCenter(e) {
                if (te(e)) return NaN;
                const t = e / (this.drawingArea / (this.max - this.min));
                return this.options.reverse ? this.max - t : this.min + t
            }
            getPointLabelContext(e) {
                const t = this._pointLabels || [];
                if (e >= 0 && e < t.length) {
                    const n = t[e];
                    return function (e, t, n) {
                        return Pn(e, {
                            label: n,
                            index: t,
                            type: "pointLabel"
                        })
                    }(this.getContext(), e, n)
                }
            }
            getPointPosition(e, t, n = 0) {
                const s = this.getIndexAngle(e) - Ne + n;
                return {
                    x: Math.cos(s) * t + this.xCenter,
                    y: Math.sin(s) * t + this.yCenter,
                    angle: s
                }
            }
            getPointPositionForValue(e, t) {
                return this.getPointPosition(e, this.getDistanceFromCenterForValue(t))
            }
            getBasePosition(e) {
                return this.getPointPositionForValue(e || 0, this.getBaseValue())
            }
            getPointLabelPosition(e) {
                const {
                    left: t,
                    top: n,
                    right: s,
                    bottom: i
                } = this._pointLabelItems[e];
                return {
                    left: t,
                    top: n,
                    right: s,
                    bottom: i
                }
            }
            drawBackground() {
                const {
                    backgroundColor: e,
                    grid: {
                        circular: t
                    }
                } = this.options;
                if (e) {
                    const n = this.ctx;
                    n.save(), n.beginPath(), br(this, this.getDistanceFromCenterForValue(this._endValue), t, this._pointLabels.length), n.closePath(), n.fillStyle = e, n.fill(), n.restore()
                }
            }
            drawGrid() {
                const e = this.ctx,
                    t = this.options,
                    {
                        angleLines: n,
                        grid: s,
                        border: i
                    } = t,
                    a = this._pointLabels.length;
                let o, r, l;
                if (t.pointLabels.display && function (e, t) {
                        const {
                            ctx: n,
                            options: {
                                pointLabels: s
                            }
                        } = e;
                        for (let i = t - 1; i >= 0; i--) {
                            const t = s.setContext(e.getPointLabelContext(i)),
                                a = wn(t.font),
                                {
                                    x: o,
                                    y: r,
                                    textAlign: l,
                                    left: c,
                                    top: u,
                                    right: d,
                                    bottom: m
                                } = e._pointLabelItems[i],
                                {
                                    backdropColor: h
                                } = t;
                            if (!te(h)) {
                                const e = Cn(t.borderRadius),
                                    s = Nn(t.backdropPadding);
                                n.fillStyle = h;
                                const i = c - s.left,
                                    a = u - s.top,
                                    o = d - c + s.width,
                                    r = m - u + s.height;
                                Object.values(e).some((e => 0 !== e)) ? (n.beginPath(), bn(n, {
                                    x: i,
                                    y: a,
                                    w: o,
                                    h: r,
                                    radius: e
                                }), n.fill()) : n.fillRect(i, a, o, r)
                            }
                            xn(n, e._pointLabels[i], o, r + a.lineHeight / 2, a, {
                                color: t.color,
                                textAlign: l,
                                textBaseline: "middle"
                            })
                        }
                    }(this, a), s.display && this.ticks.forEach(((e, t) => {
                        if (0 !== t) {
                            r = this.getDistanceFromCenterForValue(e.value);
                            const n = this.getContext(t),
                                o = s.setContext(n),
                                l = i.setContext(n);
                            ! function (e, t, n, s, i) {
                                const a = e.ctx,
                                    o = t.circular,
                                    {
                                        color: r,
                                        lineWidth: l
                                    } = t;
                                !o && !s || !r || !l || n < 0 || (a.save(), a.strokeStyle = r, a.lineWidth = l, a.setLineDash(i.dash), a.lineDashOffset = i.dashOffset, a.beginPath(), br(e, n, o, s), a.closePath(), a.stroke(), a.restore())
                            }(this, o, r, a, l)
                        }
                    })), n.display) {
                    for (e.save(), o = a - 1; o >= 0; o--) {
                        const s = n.setContext(this.getPointLabelContext(o)),
                            {
                                color: i,
                                lineWidth: a
                            } = s;
                        a && i && (e.lineWidth = a, e.strokeStyle = i, e.setLineDash(s.borderDash), e.lineDashOffset = s.borderDashOffset, r = this.getDistanceFromCenterForValue(t.ticks.reverse ? this.min : this.max), l = this.getPointPosition(o, r), e.beginPath(), e.moveTo(this.xCenter, this.yCenter), e.lineTo(l.x, l.y), e.stroke())
                    }
                    e.restore()
                }
            }
            drawBorder() {}
            drawLabels() {
                const e = this.ctx,
                    t = this.options,
                    n = t.ticks;
                if (!n.display) return;
                const s = this.getIndexAngle(0);
                let i, a;
                e.save(), e.translate(this.xCenter, this.yCenter), e.rotate(s), e.textAlign = "center", e.textBaseline = "middle", this.ticks.forEach(((s, o) => {
                    if (0 === o && !t.reverse) return;
                    const r = n.setContext(this.getContext(o)),
                        l = wn(r.font);
                    if (i = this.getDistanceFromCenterForValue(this.ticks[o].value), r.showLabelBackdrop) {
                        e.font = l.string, a = e.measureText(s.label).width, e.fillStyle = r.backdropColor;
                        const t = Nn(r.backdropPadding);
                        e.fillRect(-a / 2 - t.left, -i - l.size / 2 - t.top, a + t.width, l.size + t.height)
                    }
                    xn(e, s.label, 0, -i, l, {
                        color: r.color
                    })
                })), e.restore()
            }
            drawTitle() {}
        }
        const Er = {
                millisecond: {
                    common: !0,
                    size: 1,
                    steps: 1e3
                },
                second: {
                    common: !0,
                    size: 1e3,
                    steps: 60
                },
                minute: {
                    common: !0,
                    size: 6e4,
                    steps: 60
                },
                hour: {
                    common: !0,
                    size: 36e5,
                    steps: 24
                },
                day: {
                    common: !0,
                    size: 864e5,
                    steps: 30
                },
                week: {
                    common: !1,
                    size: 6048e5,
                    steps: 4
                },
                month: {
                    common: !0,
                    size: 2628e6,
                    steps: 12
                },
                quarter: {
                    common: !1,
                    size: 7884e6,
                    steps: 4
                },
                year: {
                    common: !0,
                    size: 3154e7
                }
            },
            Ir = Object.keys(Er);

        function yr(e, t) {
            return e - t
        }

        function jr(e, t) {
            if (te(t)) return null;
            const n = e._adapter,
                {
                    parser: s,
                    round: i,
                    isoWeekday: a
                } = e._parseOpts;
            let o = t;
            return "function" == typeof s && (o = s(o)), ie(o) || (o = "string" == typeof s ? n.parse(o, s) : n.parse(o)), null === o ? null : (i && (o = "week" !== i || !Re(a) && !0 !== a ? n.startOf(o, i) : n.startOf(o, "isoWeek", a)), +o)
        }

        function Sr(e, t, n, s) {
            const i = Ir.length;
            for (let a = Ir.indexOf(e); a < i - 1; ++a) {
                const e = Er[Ir[a]],
                    i = e.steps ? e.steps : Number.MAX_SAFE_INTEGER;
                if (e.common && Math.ceil((n - t) / (i * e.size)) <= s) return Ir[a]
            }
            return Ir[i - 1]
        }

        function Cr(e, t, n) {
            if (n) {
                if (n.length) {
                    const {
                        lo: s,
                        hi: i
                    } = Ye(n, t);
                    e[n[s] >= t ? n[s] : n[i]] = !0
                }
            } else e[t] = !0
        }

        function Nr(e, t, n) {
            const s = [],
                i = {},
                a = t.length;
            let o, r;
            for (o = 0; o < a; ++o) r = t[o], i[r] = o, s.push({
                value: r,
                major: !1
            });
            return 0 !== a && n ? function (e, t, n, s) {
                const i = e._adapter,
                    a = +i.startOf(t[0].value, s),
                    o = t[t.length - 1].value;
                let r, l;
                for (r = a; r <= o; r = +i.add(r, 1, s)) l = n[r], l >= 0 && (t[l].major = !0);
                return t
            }(e, s, i, n) : s
        }
        class wr extends na {
            static id = "time";
            static defaults = {
                bounds: "data",
                adapters: {},
                time: {
                    parser: !1,
                    unit: !1,
                    round: !1,
                    isoWeekday: !1,
                    minUnit: "millisecond",
                    displayFormats: {}
                },
                ticks: {
                    source: "auto",
                    callback: !1,
                    major: {
                        enabled: !1
                    }
                }
            };
            constructor(e) {
                super(e), this._cache = {
                    data: [],
                    labels: [],
                    all: []
                }, this._unit = "day", this._majorUnit = void 0, this._offsets = {}, this._normalized = !1, this._parseOpts = void 0
            }
            init(e, t = {}) {
                const n = e.time || (e.time = {}),
                    s = this._adapter = new li._date(e.adapters.date);
                s.init(t), pe(n.displayFormats, s.formats()), this._parseOpts = {
                    parser: n.parser,
                    round: n.round,
                    isoWeekday: n.isoWeekday
                }, super.init(e), this._normalized = t.normalized
            }
            parse(e, t) {
                return void 0 === e ? null : jr(this, e)
            }
            beforeLayout() {
                super.beforeLayout(), this._cache = {
                    data: [],
                    labels: [],
                    all: []
                }
            }
            determineDataLimits() {
                const e = this.options,
                    t = this._adapter,
                    n = e.time.unit || "day";
                let {
                    min: s,
                    max: i,
                    minDefined: a,
                    maxDefined: o
                } = this.getUserBounds();

                function r(e) {
                    a || isNaN(e.min) || (s = Math.min(s, e.min)), o || isNaN(e.max) || (i = Math.max(i, e.max))
                }
                a && o || (r(this._getLabelBounds()), "ticks" === e.bounds && "labels" === e.ticks.source || r(this.getMinMax(!1))), s = ie(s) && !isNaN(s) ? s : +t.startOf(Date.now(), n), i = ie(i) && !isNaN(i) ? i : +t.endOf(Date.now(), n) + 1, this.min = Math.min(s, i - 1), this.max = Math.max(s + 1, i)
            }
            _getLabelBounds() {
                const e = this.getLabelTimestamps();
                let t = Number.POSITIVE_INFINITY,
                    n = Number.NEGATIVE_INFINITY;
                return e.length && (t = e[0], n = e[e.length - 1]), {
                    min: t,
                    max: n
                }
            }
            buildTicks() {
                const e = this.options,
                    t = e.time,
                    n = e.ticks,
                    s = "labels" === n.source ? this.getLabelTimestamps() : this._generate();
                "ticks" === e.bounds && s.length && (this.min = this._userMin || s[0], this.max = this._userMax || s[s.length - 1]);
                const i = this.min,
                    a = function (e, t, n) {
                        let s = 0,
                            i = e.length;
                        for (; s < i && e[s] < t;) s++;
                        for (; i > s && e[i - 1] > n;) i--;
                        return s > 0 || i < e.length ? e.slice(s, i) : e
                    }(s, i, this.max);
                return this._unit = t.unit || (n.autoSkip ? Sr(t.minUnit, this.min, this.max, this._getLabelCapacity(i)) : function (e, t, n, s, i) {
                    for (let a = Ir.length - 1; a >= Ir.indexOf(n); a--) {
                        const n = Ir[a];
                        if (Er[n].common && e._adapter.diff(i, s, n) >= t - 1) return n
                    }
                    return Ir[n ? Ir.indexOf(n) : 0]
                }(this, a.length, t.minUnit, this.min, this.max)), this._majorUnit = n.major.enabled && "year" !== this._unit ? function (e) {
                    for (let t = Ir.indexOf(e) + 1, n = Ir.length; t < n; ++t)
                        if (Er[Ir[t]].common) return Ir[t]
                }(this._unit) : void 0, this.initOffsets(s), e.reverse && a.reverse(), Nr(this, a, this._majorUnit)
            }
            afterAutoSkip() {
                this.options.offsetAfterAutoskip && this.initOffsets(this.ticks.map((e => +e.value)))
            }
            initOffsets(e = []) {
                let t, n, s = 0,
                    i = 0;
                this.options.offset && e.length && (t = this.getDecimalForValue(e[0]), s = 1 === e.length ? 1 - t : (this.getDecimalForValue(e[1]) - t) / 2, n = this.getDecimalForValue(e[e.length - 1]), i = 1 === e.length ? n : (n - this.getDecimalForValue(e[e.length - 2])) / 2);
                const a = e.length < 3 ? .5 : .25;
                s = We(s, 0, a), i = We(i, 0, a), this._offsets = {
                    start: s,
                    end: i,
                    factor: 1 / (s + 1 + i)
                }
            }
            _generate() {
                const e = this._adapter,
                    t = this.min,
                    n = this.max,
                    s = this.options,
                    i = s.time,
                    a = i.unit || Sr(i.minUnit, t, n, this._getLabelCapacity(t)),
                    o = oe(s.ticks.stepSize, 1),
                    r = "week" === a && i.isoWeekday,
                    l = Re(r) || !0 === r,
                    c = {};
                let u, d, m = t;
                if (l && (m = +e.startOf(m, "isoWeek", r)), m = +e.startOf(m, l ? "day" : a), e.diff(n, t, a) > 1e5 * o) throw new Error(t + " and " + n + " are too far apart with stepSize of " + o + " " + a);
                const h = "data" === s.ticks.source && this.getDataTimestamps();
                for (u = m, d = 0; u < n; u = +e.add(u, o, a), d++) Cr(c, u, h);
                return u !== n && "ticks" !== s.bounds && 1 !== d || Cr(c, u, h), Object.keys(c).sort(((e, t) => e - t)).map((e => +e))
            }
            getLabelForValue(e) {
                const t = this._adapter,
                    n = this.options.time;
                return n.tooltipFormat ? t.format(e, n.tooltipFormat) : t.format(e, n.displayFormats.datetime)
            }
            _tickFormatFunction(e, t, n, s) {
                const i = this.options,
                    a = i.ticks.callback;
                if (a) return le(a, [e, t, n], this);
                const o = i.time.displayFormats,
                    r = this._unit,
                    l = this._majorUnit,
                    c = r && o[r],
                    u = l && o[l],
                    d = n[t],
                    m = l && u && d && d.major;
                return this._adapter.format(e, s || (m ? u : c))
            }
            generateTickLabels(e) {
                let t, n, s;
                for (t = 0, n = e.length; t < n; ++t) s = e[t], s.label = this._tickFormatFunction(s.value, t, e)
            }
            getDecimalForValue(e) {
                return null === e ? NaN : (e - this.min) / (this.max - this.min)
            }
            getPixelForValue(e) {
                const t = this._offsets,
                    n = this.getDecimalForValue(e);
                return this.getPixelForDecimal((t.start + n) * t.factor)
            }
            getValueForPixel(e) {
                const t = this._offsets,
                    n = this.getDecimalForPixel(e) / t.factor - t.end;
                return this.min + n * (this.max - this.min)
            }
            _getLabelSize(e) {
                const t = this.options.ticks,
                    n = this.ctx.measureText(e).width,
                    s = De(this.isHorizontal() ? t.maxRotation : t.minRotation),
                    i = Math.cos(s),
                    a = Math.sin(s),
                    o = this._resolveTickFontOptions(0).size;
                return {
                    w: n * i + o * a,
                    h: n * a + o * i
                }
            }
            _getLabelCapacity(e) {
                const t = this.options.time,
                    n = t.displayFormats,
                    s = n[t.unit] || n.millisecond,
                    i = this._tickFormatFunction(e, 0, Nr(this, [e], this._majorUnit), s),
                    a = this._getLabelSize(i),
                    o = Math.floor(this.isHorizontal() ? this.width / a.w : this.height / a.h) - 1;
                return o > 0 ? o : 1
            }
            getDataTimestamps() {
                let e, t, n = this._cache.data || [];
                if (n.length) return n;
                const s = this.getMatchingVisibleMetas();
                if (this._normalized && s.length) return this._cache.data = s[0].controller.getAllParsedValues(this);
                for (e = 0, t = s.length; e < t; ++e) n = n.concat(s[e].controller.getAllParsedValues(this));
                return this._cache.data = this.normalize(n)
            }
            getLabelTimestamps() {
                const e = this._cache.labels || [];
                let t, n;
                if (e.length) return e;
                const s = this.getLabels();
                for (t = 0, n = s.length; t < n; ++t) e.push(jr(this, s[t]));
                return this._cache.labels = this._normalized ? e : this.normalize(e)
            }
            normalize(e) {
                return Ze(e.sort(yr))
            }
        }

        function Or(e, t, n) {
            let s, i, a, o, r = 0,
                l = e.length - 1;
            n ? (t >= e[r].pos && t <= e[l].pos && ({
                lo: r,
                hi: l
            } = $e(e, "pos", t)), ({
                pos: s,
                time: a
            } = e[r]), ({
                pos: i,
                time: o
            } = e[l])) : (t >= e[r].time && t <= e[l].time && ({
                lo: r,
                hi: l
            } = $e(e, "time", t)), ({
                time: s,
                pos: a
            } = e[r]), ({
                time: i,
                pos: o
            } = e[l]));
            const c = i - s;
            return c ? a + (o - a) * (t - s) / c : a
        }
        var Pr = class extends wr {
                static id = "timeseries";
                static defaults = wr.defaults;
                constructor(e) {
                    super(e), this._table = [], this._minPos = void 0, this._tableRange = void 0
                }
                initOffsets() {
                    const e = this._getTimestampsForTable(),
                        t = this._table = this.buildLookupTable(e);
                    this._minPos = Or(t, this.min), this._tableRange = Or(t, this.max) - this._minPos, super.initOffsets(e)
                }
                buildLookupTable(e) {
                    const {
                        min: t,
                        max: n
                    } = this, s = [], i = [];
                    let a, o, r, l, c;
                    for (a = 0, o = e.length; a < o; ++a) l = e[a], l >= t && l <= n && s.push(l);
                    if (s.length < 2) return [{
                        time: t,
                        pos: 0
                    }, {
                        time: n,
                        pos: 1
                    }];
                    for (a = 0, o = s.length; a < o; ++a) c = s[a + 1], r = s[a - 1], l = s[a], Math.round((c + r) / 2) !== l && i.push({
                        time: l,
                        pos: a / (o - 1)
                    });
                    return i
                }
                _getTimestampsForTable() {
                    let e = this._cache.all || [];
                    if (e.length) return e;
                    const t = this.getDataTimestamps(),
                        n = this.getLabelTimestamps();
                    return e = t.length && n.length ? this.normalize(t.concat(n)) : t.length ? t : n, e = this._cache.all = e, e
                }
                getDecimalForValue(e) {
                    return (Or(this._table, e) - this._minPos) / this._tableRange
                }
                getValueForPixel(e) {
                    const t = this._offsets,
                        n = this.getDecimalForPixel(e) / t.factor - t.end;
                    return Or(this._table, n * this._tableRange + this._minPos, !0)
                }
            },
            Lr = Object.freeze({
                __proto__: null,
                CategoryScale: nr,
                LinearScale: or,
                LogarithmicScale: mr,
                RadialLinearScale: Tr,
                TimeScale: wr,
                TimeSeriesScale: Pr
            });
        const Ar = [ai, to, Jo, Lr];
        var Mr = n(611),
            Rr = n.n(Mr);

        function kr(e, t) {
            return e === t
        }

        function Dr({
            index: e,
            version: t
        }) {
            return `${e.toFixed(0)}:${t.toFixed(0)}`
        }

        function Fr(e) {
            if ("string" != typeof e) return;
            const t = e.split(":");
            if (2 !== t.length) return;
            const n = parseInt(t[0]),
                s = parseInt(t[1]);
            return isNaN(n) || isNaN(s) ? void 0 : {
                index: n,
                version: s
            }
        }

        function Ur(e, t) {
            return e === t || null != e && null != t && e.index === t.index && e.version === t.version
        }

        function Br(e, t) {
            if (e === t) return !0;
            if (null == e || null == t || e.length !== t.length) return !1;
            for (let n = 0; n < e.length; n++)
                if (!Ur(e[n], t[n])) return !1;
            return !0
        }

        function Gr(e, t) {
            if (e === t) return !0;
            if (null == e || null == t || e.length !== t.length) return !1;
            for (let n = 0; n < e.length; n++) {
                let s = !1;
                for (let i = 0; i < t.length; i++)
                    if (Ur(e[n], t[i])) {
                        s = !0;
                        break
                    } if (!s) return !1
            }
            return !0
        }

        function Vr(e) {
            return null == e || 0 === e.trim().length
        }
        const Hr = Object.prototype.hasOwnProperty;

        function Kr(e, t, n = 1) {
            if (Object.is(e, t)) return !0;
            if (n <= 0 || "object" != typeof e && !Array.isArray(e) || null === e || "object" != typeof t && !Array.isArray(t) || null === t) return !1;
            if (Array.isArray(e)) {
                if (!Array.isArray(t)) return !1;
                if (e.length !== t.length) return !1;
                for (let s = 0; s < e.length; s++)
                    if (!Kr(e[s], t[s], n - 1)) return !1;
                return !0
            }
            const s = Object.keys(e),
                i = Object.keys(t);
            if (s.length !== i.length) return !1;
            for (let i = 0; i < s.length; i++)
                if (!Hr.call(t, s[i]) || !Kr(e[s[i]], t[s[i]], n - 1)) return !1;
            return !0
        }

        function Wr(e) {
            if ("object" == typeof e && null != e) {
                const t = e.length || 0 === e.length ? [] : {};
                for (const n of Object.keys(e).sort(((e, t) => e.localeCompare(t)))) t[n] = Wr(e[n]);
                return JSON.stringify(t)
            }
            return e
        }

        function zr(e) {
            if ("object" == typeof e && null != e) {
                const t = e.length || 0 === e.length ? [] : {};
                for (const n of Object.keys(e).sort(((e, t) => e.localeCompare(t)))) "__Type" !== n && (t[n] = Wr(e[n]));
                return JSON.stringify(t)
            }
            return e
        }

        function Yr(e, t) {
            const n = (0, Y.useRef)(e);
            return t(e, n.current) || (n.current = e), n.current
        }

        function $r(e, t, n) {
            return new ul(`${e}.${t}`, n)
        }

        function qr(e) {
            return new dl(e)
        }

        function Xr(e, t, n = zr) {
            return new ml(`${e}.${t}`, n, !1)
        }

        function Qr(e, t, n = zr) {
            return new ml(`${e}.${t}`, n, !0)
        }

        function Zr(e, t) {
            return new fl(`${e}.${t}`)
        }

        function Jr(e, t) {
            const n = `${e}.${t}`;
            return () => Rr().trigger(n)
        }

        function el(e, t) {
            const n = `${e}.${t}`;
            return (...e) => Rr().trigger(n, ...e)
        }

        function tl(e, t, ...n) {
            Rr().trigger(`${e}.${t}`, ...n)
        }

        function nl(e, t, ...n) {
            return Rr().call(`${e}.${t}`, ...n)
        }

        function sl(e) {
            const t = (0, Y.useMemo)((() => e.subscribe()), [e]),
                [n, s] = (0, Y.useState)(t.value),
                i = (0, Y.useRef)(n);
            return (0, Y.useEffect)((() => {
                const e = e => {
                    if (Array.isArray(e) && Array.isArray(i.current) && !i.current.length && !e.length) return;
                    let t = e;
                    "number" == typeof e && e && (t = Math.floor(1e6 * e) / 1e6);
                    let n = !1;
                    n = "object" == typeof t && "object" == typeof i.current ? !Kr(i.current, t, 10) : t !== i.current, n && (i.current = t, s(t))
                };
                return e(t.value), t.setChangeListener(e), () => t.dispose()
            }), [t]), n
        }

        function il(e, t, n) {
            const s = (0, Y.useMemo)((() => e.subscribe()), [e]),
                [i, a] = (0, Y.useReducer)(t, t(n, s.value)),
                o = (0, Y.useRef)(s.value),
                r = (0, Y.useRef)(i);
            return (0, Y.useEffect)((() => {
                const e = e => {
                    if (Array.isArray(e) && Array.isArray(o.current) && !o.current.length && !e.length) return;
                    let n = !1;
                    if (n = "object" == typeof e && "object" == typeof o.current ? !Kr(o.current, e, 10) : e !== o.current, n) {
                        const n = t(r.current, e);
                        o.current = e, r.current = n, a(e)
                    }
                };
                return e(s.value), s.setChangeListener(e), () => s.dispose()
            }), [s, t]), i
        }

        function al(e) {
            const t = (0, Y.useRef)(e.value);
            return (0, Y.useEffect)((() => {
                const n = e.subscribe((e => t.current = e));
                return n.dispose
            })), t
        }

        function ol(e, t, n = 1) {
            return (0, Y.useEffect)((() => {
                let s = e.value;
                return e.subscribe((e => {
                    Kr(e, s, n) || (t(e, s), s = e)
                })).dispose
            }), [e, n, t]), e.value
        }

        function rl(e, t, n) {
            const s = (0, Y.useMemo)((() => e.subscribe(t)), [e, t]);
            return (0, Y.useEffect)((() => {
                s.setChangeListener(n)
            }), [n, s]), (0, Y.useEffect)((() => s.dispose), [s]), s.value
        }

        function ll(e, t) {
            const n = (0, Y.useMemo)((() => t && e.subscribe(t)), [e, t]),
                [s, i] = (0, Y.useState)(n?.value),
                a = (0, Y.useRef)(s);
            return (0, Y.useEffect)((() => {
                if (n) {
                    const e = e => {
                        if (Array.isArray(e) && Array.isArray(a.current) && !a.current.length && !e.length) return;
                        let t = e;
                        "number" == typeof e && e && (t = Math.floor(1e6 * e) / 1e6);
                        let n = !1;
                        n = "object" == typeof t && "object" == typeof a.current ? !Kr(a.current, t, 10) : t !== a.current, n && (a.current = t, i(t))
                    };
                    return i(n.value), n.setChangeListener(e), () => n.dispose()
                }
            }), [n]), s
        }

        function cl(e, t) {
            const n = (0, Y.useMemo)((() => t.map((t => e.subscribe(t)))), [e, t]),
                [s, i] = (0, Y.useState)([...n.map((e => e.value))]),
                a = (0, Y.useCallback)((() => {
                    i([...n.map((e => e.value))])
                }), [n]);
            return (0, Y.useEffect)((() => (i([...n.map((e => e.value))]), n.map((e => e.setChangeListener(a))), () => {
                n.map((e => e.dispose()))
            })), [n, a]), s
        }
        X.add("game-ui/common/utils/equality.ts", {
            get defaultEqualityComparer() {
                return kr
            },
            set defaultEqualityComparer(e) {
                kr = e
            },
            get entityKey() {
                return Dr
            },
            set entityKey(e) {
                Dr = e
            },
            get parseEntityKey() {
                return Fr
            },
            set parseEntityKey(e) {
                Fr = e
            },
            get entityEquals() {
                return Ur
            },
            set entityEquals(e) {
                Ur = e
            },
            get entityArrayEquals() {
                return Br
            },
            set entityArrayEquals(e) {
                Br = e
            },
            get entityArrayUnorderedEquals() {
                return Gr
            },
            set entityArrayUnorderedEquals(e) {
                Gr = e
            },
            get isNullOrEmpty() {
                return Vr
            },
            set isNullOrEmpty(e) {
                Vr = e
            },
            get shallowEqual() {
                return Kr
            },
            set shallowEqual(e) {
                Kr = e
            },
            get stringifySorted() {
                return Wr
            },
            set stringifySorted(e) {
                Wr = e
            },
            get stringifySortedIgnoreBindingType() {
                return zr
            },
            set stringifySortedIgnoreBindingType(e) {
                zr = e
            },
            get useMemoizedValue() {
                return Yr
            },
            set useMemoizedValue(e) {
                Yr = e
            }
        });
        class ul {
            constructor(e, t) {
                this.fallbackValue = t, this.listeners = [], this.connections = null, this.disposed = !1, this._value = void 0, this.subscribe = e => {
                    if (this.disposed) throw new Error("cannot subscribe to a disposed binding!");
                    this.connect();
                    const t = new hl(e);
                    this.listeners.push(t);
                    const n = this;
                    return {
                        get value() {
                            return n.getValueUnsafe()
                        },
                        setChangeListener: t.set,
                        dispose() {
                            const e = n.listeners.indexOf(t); - 1 !== e && (n.listeners.splice(e, 1), 0 === n.listeners.length && n.disconnect())
                        }
                    }
                }, this.dispose = () => {
                    this.disposed = !0, this.listeners.splice(0, this.listeners.length), this.disconnect()
                }, this.onUpdate = e => {
                    if (e !== this._value) {
                        this._value = e;
                        for (const t of this.listeners) t.call(e)
                    }
                }, this.onPatch = (e, t) => {
                    if (0 === e.length) this.onUpdate(t);
                    else {
                        if (!pl(this._value)) throw new Error(`cannot patch object of type ${null!=this._value?typeof this._value:this._value}!`); {
                            const n = gl(this._value);
                            let s = n;
                            for (let t = 0; t < e.length - 1; t++) {
                                const n = e[t],
                                    i = s[n];
                                if (!pl(i)) throw new Error(`'${e.slice(0,t+1).join("->")}' is not a container`);
                                s[n] = gl(i), s = s[n]
                            }
                            s[e[e.length - 1]] = t, this.onUpdate(n)
                        }
                    }
                }, this.subscribeTrigger = `${e}.subscribe`, this.unsubscribeTrigger = `${e}.unsubscribe`, this.updateTrigger = `${e}.update`, this.patchTrigger = `${e}.patch`, this._value = t
            }
            get value() {
                if (null != this.connections) return this.getValueUnsafe(); {
                    this.connect();
                    const e = this.getValueUnsafe();
                    return this.disconnect(), e
                }
            }
            connect() {
                if (null == this.connections && (this.connections = [Rr().on(this.updateTrigger, this.onUpdate), Rr().on(this.patchTrigger, this.onPatch)], Rr().trigger(this.subscribeTrigger), void 0 === this._value)) throw new Error(`'${this.updateTrigger}' was not called after subscribe!\nDid you forget to add the binding on the C# side?`)
            }
            disconnect() {
                if (null != this.connections) {
                    for (const e of this.connections) e.clear();
                    this.connections = null, Rr().trigger(this.unsubscribeTrigger), this._value = this.fallbackValue
                }
            }
            getValueUnsafe() {
                if (void 0 === this._value) throw new Error(`'${this.updateTrigger}' was not called before getValueUnsafe!`);
                return this._value
            }
        }
        class dl {
            listeners = [];
            disposed = !1;
            constructor(e) {
                this._value = e
            }
            get registered() {
                return !0
            }
            get value() {
                return this._value
            }
            subscribe = e => {
                if (this.disposed) throw new Error("cannot subscribe to a disposed binding!");
                const t = new hl(e);
                this.listeners.push(t);
                const n = this;
                return {
                    get value() {
                        return n._value
                    },
                    setChangeListener: t.set,
                    dispose() {
                        const e = n.listeners.indexOf(t); - 1 !== e && n.listeners.splice(e, 1)
                    }
                }
            };
            dispose = () => {
                this.disposed = !0, this.listeners.splice(0, this.listeners.length)
            };
            update = e => {
                if (e !== this._value) {
                    this._value = e;
                    for (const t of this.listeners) t.call(e)
                }
            }
        }
        class ml {
            constructor(e, t, n = !1) {
                this.keyStringifier = t, this.keepAlive = n, this.entries = new Map, this.updateConnection = null, this.disposed = !1, this.getValue = e => {
                    const t = this.getConnection(e);
                    if (null != t) return this.getValueUnsafe(t);
                    const n = this.connect(e),
                        s = this.getValueUnsafe(n);
                    return this.disconnect(e), s
                }, this.subscribe = (e, t) => {
                    if (this.disposed) throw new Error("cannot subscribe to a disposed binding!");
                    const n = this.connect(e),
                        s = new hl(t);
                    n.listeners.push(s);
                    const i = this;
                    return {
                        get value() {
                            return i.getValueUnsafe(n)
                        },
                        setChangeListener: s.set,
                        dispose() {
                            const t = n.listeners.indexOf(s); - 1 !== t && (n.listeners.splice(t, 1), 0 !== n.listeners.length || i.keepAlive || i.disconnect(e))
                        }
                    }
                }, this.dispose = () => {
                    this.disposed = !0, this.disconnectAll()
                }, this.onUpdate = (e, t) => {
                    const n = this.getConnection(e);
                    if (null != n) {
                        if (t !== n.value) {
                            n.value = t;
                            for (const e of n.listeners) e.call(t)
                        }
                    } else console.warn(`'${this.updateTrigger}' was called on already unsubscribed key!`)
                }, this.subscribeTrigger = `${e}.subscribeMapEntry`, this.unsubscribeTrigger = `${e}.unsubscribeMapEntry`, this.updateTrigger = `${e}.updateMapEntry`
            }
            getConnection(e) {
                const t = this.keyStringifier(e);
                return this.entries.get(t)
            }
            connect(e) {
                const t = this.keyStringifier(e);
                let n = this.entries.get(t);
                if (null != n) return n;
                if (null == this.updateConnection && (this.updateConnection = Rr().on(this.updateTrigger, this.onUpdate)), n = {
                        key: e,
                        value: void 0,
                        listeners: []
                    }, this.entries.set(t, n), Rr().trigger(this.subscribeTrigger, e), void 0 === n.value) throw new Error(`'${this.updateTrigger}' was not called after subscribing the key '${t}'!\nDid you forget to add the binding on the C# side?`);
                return n
            }
            disconnectAll() {
                for (const e of this.entries.values()) Rr().trigger(this.unsubscribeTrigger, e.key, !1);
                this.entries.clear(), null != this.updateConnection && (this.updateConnection.clear(), this.updateConnection = null)
            }
            disconnect(e) {
                const t = this.keyStringifier(e);
                null != this.entries.get(t) && (this.entries.delete(t), 0 === this.entries.size && null != this.updateConnection && (this.updateConnection.clear(), this.updateConnection = null), Rr().trigger(this.unsubscribeTrigger, e, this.keepAlive))
            }
            getValueUnsafe(e) {
                if (void 0 === e.value) throw new Error(`'${this.updateTrigger}' was not called before getValueUnsafe!`);
                return e.value
            }
        }
        class hl {
            constructor(e) {
                this.listener = e, this.set = e => {
                    this.listener = e
                }, this.call = e => {
                    null != this.listener && this.listener(e)
                }
            }
        }

        function gl(e) {
            return Array.isArray(e) ? [...e] : {
                ...e
            }
        }

        function pl(e) {
            return null != e && "object" == typeof e
        }
        class fl {
            listeners = [];
            updateConnection = null;
            disposed = !1;
            constructor(e) {
                this.subscribeTrigger = `${e}.subscribe`, this.unsubscribeTrigger = `${e}.unsubscribe`, this.updateTrigger = `${e}.update`
            }
            subscribe = e => {
                if (this.disposed) throw new Error("cannot subscribe to a disposed binding!");
                return this.listeners.includes(e) || this.listeners.push(e), this.subscribeValue(), {
                    dispose: () => {
                        const t = this.listeners.indexOf(e); - 1 !== t && (this.listeners.splice(t, 1), 0 === this.listeners.length && this.unsubscribeValue())
                    }
                }
            };
            dispose = () => {
                this.disposed = !0, this.listeners.splice(0, this.listeners.length), this.unsubscribeValue()
            };
            subscribeValue() {
                null == this.updateConnection && (this.updateConnection = Rr().on(this.updateTrigger, this.onUpdate), Rr().trigger(this.subscribeTrigger))
            }
            unsubscribeValue() {
                null != this.updateConnection && (this.updateConnection.clear(), this.updateConnection = null, Rr().trigger(this.unsubscribeTrigger))
            }
            onUpdate = e => {
                for (const t of this.listeners) t(e)
            }
        }
        X.add("game-ui/common/data-binding/binding.ts", {
            get bindValue() {
                return $r
            },
            set bindValue(e) {
                $r = e
            },
            get bindLocalValue() {
                return qr
            },
            set bindLocalValue(e) {
                qr = e
            },
            get bindMap() {
                return Xr
            },
            set bindMap(e) {
                Xr = e
            },
            get bindMapPersistent() {
                return Qr
            },
            set bindMapPersistent(e) {
                Qr = e
            },
            get bindEvent() {
                return Zr
            },
            set bindEvent(e) {
                Zr = e
            },
            get bindTrigger() {
                return Jr
            },
            set bindTrigger(e) {
                Jr = e
            },
            get bindTriggerWithArgs() {
                return el
            },
            set bindTriggerWithArgs(e) {
                el = e
            },
            get trigger() {
                return tl
            },
            set trigger(e) {
                tl = e
            },
            get call() {
                return nl
            },
            set call(e) {
                nl = e
            },
            get useValue() {
                return sl
            },
            set useValue(e) {
                sl = e
            },
            get useReducedValue() {
                return il
            },
            set useReducedValue(e) {
                il = e
            },
            get useValueRef() {
                return al
            },
            set useValueRef(e) {
                al = e
            },
            get useValueOnChange() {
                return ol
            },
            set useValueOnChange(e) {
                ol = e
            },
            get useMapValueOnChange() {
                return rl
            },
            set useMapValueOnChange(e) {
                rl = e
            },
            get useMapValue() {
                return ll
            },
            set useMapValue(e) {
                ll = e
            },
            get useMapValues() {
                return cl
            },
            set useMapValues(e) {
                cl = e
            }
        }), X.add("game-ui/api/index.ts", {});
        const xl = /{([^{}]+)}/g;

        function vl(e, t) {
            return e.replace(xl, ((e, n) => {
                const s = t[n];
                return void 0 !== s ? s : e
            }))
        }
        var _l;
        X.add("game-ui/common/utils/substitute.ts", {
                get substitute() {
                    return vl
                },
                set substitute(e) {
                    vl = e
                }
            }),
            function (e) {
                e.ButtonWithConfirmation = "Game.UI.Menu.ButtonWithConfirmation", e.InputBindingField = "Game.UI.Menu.InputBindingField", e.ScreenResolutionDropdownField = "Game.UI.Menu.ScreenResolutionDropdownField", e.DropdownField = "Game.UI.Widgets.DropdownField", e.ModdingToolchainDependency = "Game.UI.Menu.ModdingToolchainDependency", e.DirectoryPickerField = "Game.UI.Widgets.DirectoryPickerField"
            }(_l || (_l = {}));
        const bl = "options";
        var Tl, El, Il, yl, jl = $r(bl, "pages"),
            Sl = $r(bl, "children"),
            Cl = $r(bl, "activePage"),
            Nl = $r(bl, "activeSection"),
            wl = $r(bl, "displayConfirmationVisible"),
            Ol = $r(bl, "displayConfirmationTime"),
            Pl = $r(bl, "interfaceStyle"),
            Ll = $r(bl, "interfaceTransparency"),
            Al = $r(bl, "interfaceScaling", !0),
            Ml = $r(bl, "textScale"),
            Rl = $r(bl, "unlockHighlightsEnabled"),
            kl = $r(bl, "chirperPopupsEnabled"),
            Dl = $r(bl, "inputHintsType"),
            Fl = $r(bl, "keyboardLayout"),
            Ul = $r(bl, "shortcutHints"),
            Bl = $r(bl, "layoutMap"),
            Gl = ($r(bl, "radioVolume"), $r(bl, "unitSettings"));

        function Vl({
            group: e,
            path: t
        }) {
            tl(e, "rebindInput", t)
        }

        function Hl({
            group: e,
            path: t
        }) {
            tl(e, "unsetInputBinding", t)
        }

        function Kl({
            group: e,
            path: t
        }) {
            tl(e, "resetInputBinding", t)
        }

        function Wl(e, t, n = !1) {
            tl(bl, "selectPage", e, t, n)
        }

        function zl(e, t) {
            tl(bl, "filteredWidgets", e, t || null)
        }! function (e) {
            e[e.AutoDetect = 0] = "AutoDetect", e[e.International = 1] = "International"
        }(Tl || (Tl = {})),
        function (e) {
            e[e.Idle = 0] = "Idle", e[e.Downloading = 1] = "Downloading", e[e.Installing = 2] = "Installing", e[e.WaitingForLicense = 3] = "WaitingForLicense", e[e.WaitingForClose = 4] = "WaitingForClose", e[e.Updating = 5] = "Updating", e[e.Uninstalling = 6] = "Uninstalling", e[e.NotEnoughSpaceError = 7] = "NotEnoughSpaceError", e[e.DownloadError = 8] = "DownloadError", e[e.InstallError = 9] = "InstallError", e[e.GetLicenseError = 10] = "GetLicenseError", e[e.CloseError = 11] = "CloseError", e[e.DeployError = 12] = "DeployError", e[e.UnistallError = 13] = "UnistallError"
        }(El || (El = {})),
        function (e) {
            e[e.Install = 0] = "Install", e[e.Uninstall = 1] = "Uninstall", e[e.Update = 2] = "Update", e[e.Repair = 3] = "Repair", e[e.Cancel = 4] = "Cancel"
        }(Il || (Il = {})),
        function (e) {
            e[e.Unknown = -1] = "Unknown", e[e.Installed = 0] = "Installed", e[e.NotInstalled = 1] = "NotInstalled", e[e.Outdated = 2] = "Outdated", e[e.Installing = 3] = "Installing", e[e.Downloading = 4] = "Downloading", e[e.Removing = 5] = "Removing", e[e.Queued = 6] = "Queued"
        }(yl || (yl = {}));
        var Yl, $l, ql, Xl, Ql = Jr(bl, "confirmDisplay"),
            Zl = Jr(bl, "revertDisplay"),
            Jl = $r(bl, "directoryBrowser", []),
            ec = $r(bl, "directoryBrowserActive", !1),
            tc = Jr(bl, "cancelDirectoryBrowser"),
            nc = el(bl, "onOptionsPageClosed");
        ! function (e) {
            e[e.TwentyFourHours = 0] = "TwentyFourHours", e[e.TwelveHours = 1] = "TwelveHours"
        }(Yl || (Yl = {})),
        function (e) {
            e[e.Celsius = 0] = "Celsius", e[e.Fahrenheit = 1] = "Fahrenheit", e[e.Kelvin = 2] = "Kelvin"
        }($l || ($l = {})),
        function (e) {
            e[e.Metric = 0] = "Metric", e[e.Freedom = 1] = "Freedom"
        }(ql || (ql = {})),
        function (e) {
            e[e.None = 0] = "None", e[e.WithBuiltIn = 1] = "WithBuiltIn", e[e.WithNotBuiltIn = 2] = "WithNotBuiltIn"
        }(Xl || (Xl = {}));
        var sc = {
            timeFormat: Yl.TwentyFourHours,
            temperatureUnit: $l.Celsius,
            unitSystem: ql.Metric
        };
        X.add("game-ui/menu/data-binding/options-bindings.ts", {
            get OptionsWidgetType() {
                return _l
            },
            set OptionsWidgetType(e) {
                _l = e
            },
            get pages() {
                return pages
            },
            set pages(e) {
                pages = e
            },
            get optionsWidgets() {
                return optionsWidgets
            },
            set optionsWidgets(e) {
                optionsWidgets = e
            },
            get selectedPage() {
                return selectedPage
            },
            set selectedPage(e) {
                selectedPage = e
            },
            get selectedSection() {
                return selectedSection
            },
            set selectedSection(e) {
                selectedSection = e
            },
            get displayConfirmationVisible() {
                return displayConfirmationVisible
            },
            set displayConfirmationVisible(e) {
                displayConfirmationVisible = e
            },
            get displayConfirmationTime() {
                return displayConfirmationTime
            },
            set displayConfirmationTime(e) {
                displayConfirmationTime = e
            },
            get interfaceStyle() {
                return interfaceStyle
            },
            set interfaceStyle(e) {
                interfaceStyle = e
            },
            get interfaceTransparency() {
                return interfaceTransparency
            },
            set interfaceTransparency(e) {
                interfaceTransparency = e
            },
            get interfaceScaling() {
                return interfaceScaling
            },
            set interfaceScaling(e) {
                interfaceScaling = e
            },
            get textScale() {
                return textScale
            },
            set textScale(e) {
                textScale = e
            },
            get unlockHighlightsEnabled() {
                return unlockHighlightsEnabled
            },
            set unlockHighlightsEnabled(e) {
                unlockHighlightsEnabled = e
            },
            get chirperPopupsEnabled() {
                return chirperPopupsEnabled
            },
            set chirperPopupsEnabled(e) {
                chirperPopupsEnabled = e
            },
            get inputHintsType() {
                return inputHintsType
            },
            set inputHintsType(e) {
                inputHintsType = e
            },
            get keyboardLayout() {
                return keyboardLayout
            },
            set keyboardLayout(e) {
                keyboardLayout = e
            },
            get shortcutHints() {
                return shortcutHints
            },
            set shortcutHints(e) {
                shortcutHints = e
            },
            get layoutMap() {
                return layoutMap
            },
            set layoutMap(e) {
                layoutMap = e
            },
            get radioVolume() {
                return radioVolume
            },
            set radioVolume(e) {
                radioVolume = e
            },
            get unitSettings() {
                return unitSettings
            },
            set unitSettings(e) {
                unitSettings = e
            },
            get rebindInput() {
                return Vl
            },
            set rebindInput(e) {
                Vl = e
            },
            get unsetInputBinding() {
                return Hl
            },
            set unsetInputBinding(e) {
                Hl = e
            },
            get resetInputBinding() {
                return Kl
            },
            set resetInputBinding(e) {
                Kl = e
            },
            get selectPage() {
                return Wl
            },
            set selectPage(e) {
                Wl = e
            },
            get filteredWidgets() {
                return zl
            },
            set filteredWidgets(e) {
                zl = e
            },
            get KeyboardLayout() {
                return Tl
            },
            set KeyboardLayout(e) {
                Tl = e
            },
            get ModdingToolchainStatus() {
                return El
            },
            set ModdingToolchainStatus(e) {
                El = e
            },
            get ModdingToolchainButtonState() {
                return Il
            },
            set ModdingToolchainButtonState(e) {
                Il = e
            },
            get ModdingToolchainDependencyState() {
                return yl
            },
            set ModdingToolchainDependencyState(e) {
                yl = e
            },
            get confirmDisplay() {
                return Ql
            },
            set confirmDisplay(e) {
                Ql = e
            },
            get revertDisplay() {
                return Zl
            },
            set revertDisplay(e) {
                Zl = e
            },
            get directoryBrowser() {
                return directoryBrowser
            },
            set directoryBrowser(e) {
                directoryBrowser = e
            },
            get directoryBrowserActive() {
                return directoryBrowserActive
            },
            set directoryBrowserActive(e) {
                directoryBrowserActive = e
            },
            get cancelDirectoryBrowser() {
                return tc
            },
            set cancelDirectoryBrowser(e) {
                tc = e
            },
            get onOptionsPageClosed() {
                return nc
            },
            set onOptionsPageClosed(e) {
                nc = e
            },
            get TimeFormat() {
                return Yl
            },
            set TimeFormat(e) {
                Yl = e
            },
            get TemperatureUnit() {
                return $l
            },
            set TemperatureUnit(e) {
                $l = e
            },
            get UnitSystem() {
                return ql
            },
            set UnitSystem(e) {
                ql = e
            },
            get BindingConflict() {
                return Xl
            },
            set BindingConflict(e) {
                Xl = e
            },
            get defaultUnitSettings() {
                return sc
            },
            set defaultUnitSettings(e) {
                sc = e
            }
        });
        var ic = (0, Y.createContext)({
            translate: () => null,
            unitSettings: sc
        });

        function ac() {
            const e = (0, Y.useContext)(ic),
                t = (0, Y.useRef)(!0);
            return t.current = !0, (0, Y.useMemo)((() => {
                const n = new Map;
                return {
                    translate: (s, i) => {
                        let a = n.get(s);
                        return void 0 === a && (t.current && (t.current = !1, n.clear()), a = e.translate(s, i), n.set(s, a)), a
                    },
                    unitSettings: e.unitSettings
                }
            }), [e])
        }

        function oc(e) {
            const t = ac(),
                n = Yr(e, lc);
            return (0, Y.useMemo)((() => rc(t, n)), [t, n])
        }

        function rc(e, t, n) {
            return null == t ? "" : (0, Y.isValidElement)(t) ? cc(t.type) ? t.type.renderString(e, t.props) : function (e) {
                return e.type === Y.Fragment
            }(t) ? Y.Children.toArray(t.props.children).map((t => rc(e, t, n))).join(n) : `[${s=t.type,s.displayName??s.name??String(s)}/]` : String(t);
            var s
        }

        function lc(e, t) {
            return (0, Y.isValidElement)(e) && (0, Y.isValidElement)(t) && cc(e.type) && cc(t.type) ? e.type.propsAreEqual(e.props, t.props) : Object.is(e, t)
        }

        function cc(e) {
            return "function" == typeof e.renderString && "function" == typeof e.propsAreEqual
        }

        function uc(e, t, n) {
            const s = e => {
                const n = ac(),
                    s = (0, Y.useMemo)((() => t(n, e)), [n, e]);
                return (0, z.jsx)(z.Fragment, {
                    children: s
                })
            };
            return Object.assign((0, Y.memo)(s, n), {
                displayName: e,
                renderString: t,
                propsAreEqual: n
            })
        }
        X.add("game-ui/common/localization/localization.tsx", {
            get LocalizationContext() {
                return ic
            },
            set LocalizationContext(e) {
                ic = e
            },
            get useCachedLocalization() {
                return ac
            },
            set useCachedLocalization(e) {
                ac = e
            }
        }), X.add("game-ui/common/localization/loc-component.tsx", {
            get useTranslation() {
                return oc
            },
            set useTranslation(e) {
                oc = e
            },
            get renderLocElement() {
                return rc
            },
            set renderLocElement(e) {
                rc = e
            },
            get areLocElementsEqual() {
                return lc
            },
            set areLocElementsEqual(e) {
                lc = e
            },
            get createLocComponent() {
                return uc
            },
            set createLocComponent(e) {
                uc = e
            }
        });
        const dc = "l10n";
        var mc;
        ! function (e) {
            e[e.None = 0] = "None", e[e.Id = 1] = "Id", e[e.Fallback = 2] = "Fallback"
        }(mc || (mc = {}));
        var hc, gc = $r(dc, "locales"),
            pc = $r(dc, "debugMode", mc.None),
            fc = Zr(dc, "activeDictionaryChanged"),
            xc = Xr(dc, "indexCounts");

        function vc(e) {
            tl(dc, "selectLocale", e)
        }

        function _c(e) {
            return {
                __Type: hc.String,
                id: e,
                value: null,
                args: null
            }
        }

        function bc(e) {
            return {
                __Type: hc.String,
                id: null,
                value: e,
                args: null
            }
        }! function (e) {
            e.Bounds = "Game.UI.Localization.LocalizedBounds", e.Fraction = "Game.UI.Localization.LocalizedFraction", e.Number = "Game.UI.Localization.LocalizedNumber", e.String = "Game.UI.Localization.LocalizedString"
        }(hc || (hc = {})), X.add("game-ui/common/localization/localization-bindings.ts", {
            get LocalizationDebugMode() {
                return mc
            },
            set LocalizationDebugMode(e) {
                mc = e
            },
            get locales() {
                return locales
            },
            set locales(e) {
                locales = e
            },
            get debugMode() {
                return debugMode
            },
            set debugMode(e) {
                debugMode = e
            },
            get activeDictionaryChanged() {
                return activeDictionaryChanged
            },
            set activeDictionaryChanged(e) {
                activeDictionaryChanged = e
            },
            get indexCounts() {
                return indexCounts
            },
            set indexCounts(e) {
                indexCounts = e
            },
            get selectLocale() {
                return vc
            },
            set selectLocale(e) {
                vc = e
            },
            get LocElementType() {
                return hc
            },
            set LocElementType(e) {
                hc = e
            },
            get locStrId() {
                return _c
            },
            set locStrId(e) {
                _c = e
            },
            get locStrValue() {
                return bc
            },
            set locStrValue(e) {
                bc = e
            }
        });
        var Tc = uc("LocalizedString", ((e, {
            id: t,
            fallback: n,
            showIdOnFail: s,
            args: i
        }) => Ec(e, t, n, i, s)), ((e, t) => e.id === t.id && e.fallback === t.fallback && function (e, t) {
            if (Object.is(e, t)) return !0;
            if (null == e || null == t) return e === t;
            const n = Object.keys(e),
                s = Object.keys(t);
            if (n.length !== s.length) return !1;
            return n.every((n => Object.prototype.hasOwnProperty.call(t, n) && lc(e[n], t[n])))
        }(e.args, t.args)));

        function Ec(e, t, n, s, i) {
            const a = (null != t ? e.translate(t, n) : n) || (i && t ? t : "");
            if (null != s) {
                const t = function (e, t) {
                    return Object.fromEntries(Object.entries(t).map((([t, n]) => [t, rc(e, n)])))
                }(e, s);
                return vl(a, t)
            }
            return a
        }

        function Ic(e, t, n) {
            return !!Object.is(t, n) || e.every((e => lc(t[e], n[e])))
        }

        function yc(e) {
            const t = Object.entries(e).map((([e, t]) => [e, jc(e, t)]));
            return Object.fromEntries(t)
        }

        function jc(e, t) {
            const n = Object.entries(t).map((([t, n]) => {
                const s = `${e}.${t}`;
                return [t, uc(s, n.create(s), n.propsAreEqual.bind(n))]
            }));
            return Object.fromEntries(n)
        }
        X.add("game-ui/common/localization/localized-string.tsx", {
            get LocalizedString() {
                return Tc
            },
            set LocalizedString(e) {
                Tc = e
            },
            get renderLocalizedString() {
                return Ec
            },
            set renderLocalizedString(e) {
                Ec = e
            },
            get areArgsEqual() {
                return Ic
            },
            set areArgsEqual(e) {
                Ic = e
            }
        });
        class Sc {
            constructor(...e) {
                this.argNames = e
            }
            create(e) {
                return (t, {
                    fallback: n,
                    showIdOnFail: s,
                    ...i
                }) => Ec(t, e, n, i, s)
            }
            propsAreEqual(e, t) {
                return void 0 !== e && void 0 !== t ? Ic(this.argNames, e, t) : e === t
            }
        }
        class Cc {
            constructor(...e) {
                this.argNames = e
            }
            create(e) {
                return (t, {
                    hash: n,
                    fallback: s,
                    showIdOnFail: i,
                    ...a
                }) => Ec(t, `${e}[${n}]`, s, a, i)
            }
            propsAreEqual(e, t) {
                return e.hash === t.hash && Ic(this.argNames, e, t)
            }
        }
        class Nc {
            constructor(...e) {
                this.argNames = e
            }
            create(e) {
                return (t, {
                    index: n,
                    fallback: s,
                    showIdOnFail: i,
                    ...a
                }) => Ec(t, `${e}:${n}`, s, a, i)
            }
            propsAreEqual(e, t) {
                return e.index === t.index && Ic(this.argNames, e, t)
            }
        }
        class wc {
            constructor(...e) {
                this.argNames = e
            }
            create(e) {
                return (t, {
                    hash: n,
                    index: s,
                    fallback: i,
                    showIdOnFail: a,
                    ...o
                }) => Ec(t, `${e}[${n}]:${s}`, i, o, a)
            }
            propsAreEqual(e, t) {
                return e.hash === t.hash && e.index === t.index && Ic(this.argNames, e, t)
            }
        }
        X.add("game-ui/common/localization/loc-dictionary.tsx", {
            get createLocDictionary() {
                return yc
            },
            set createLocDictionary(e) {
                yc = e
            }
        });
        var Oc, Pc = yc({
            Achievements: {
                DESCRIPTION: new Cc,
                TITLE: new Cc
            },
            AirPollutionInfoPanel: {
                AVERAGE_AIR_POLLUTION: new Sc
            },
            AnimationCurve: {
                TIME_LABEL: new Sc,
                VALUE_LABEL: new Sc
            },
            Assets: {
                ADDRESS_NAME_FORMAT: new Sc("NUMBER", "ROAD"),
                ALLEY_NAME: new Nc,
                ANIMAL_NAME_DOG: new Nc,
                BIOME: new Cc,
                BRIDGE_NAME: new Nc,
                CITIZEN_NAME_FEMALE: new Nc,
                CITIZEN_NAME_FORMAT: new Sc("FIRST_NAME", "LAST_NAME"),
                CITIZEN_NAME_MALE: new Nc,
                CITIZEN_SURNAME_FEMALE: new Nc,
                CITIZEN_SURNAME_HOUSEHOLD: new Nc,
                CITIZEN_SURNAME_MALE: new Nc,
                CITY_NAME: new Nc,
                CLIMATE: new Cc,
                DAM_NAME: new Nc,
                DESCRIPTION: new Cc,
                DISTRICT_NAME: new Nc,
                DISTRICT_NAME_NEW: new Sc,
                HIGHWAY_NAME: new Nc,
                NAME: new Cc,
                NAMED_ADDRESS_NAME_FORMAT: new Sc("NAME", "NUMBER", "ROAD"),
                ROUTE_NAME: new Cc("NUMBER"),
                STREET_NAME: new Nc,
                SUB_SERVICE_DESCRIPTION: new Cc,
                THEME: new Cc,
                UPGRADE_DESCRIPTION: new Cc,
                UPGRADE_NAME: new Cc
            },
            Budget: {
                TOOLTIP_DESCRIPTION: new Cc,
                TOOLTIP_DESCRIPTION_TAX: new Cc,
                TOOLTIP_DESCRIPTION_TAX_RATE: new Sc,
                TOOLTIP_TITLE: new Cc,
                TOOLTIP_TITLE_TAX: new Cc,
                TOOLTIP_TITLE_TAX_RATE: new Sc,
                TOOLTIP_UPKEEPS_PIECHART: new Sc
            },
            Chirper: {
                AIR_POLLUTION_HIGH: new Nc,
                AIR_POLLUTION_NEGATIVE: new Nc,
                AURORA_BOREALIS: new Nc,
                BIRTH_RATE_DOWN: new Nc,
                BIRTH_RATE_UP: new Nc,
                BRAND: new wc,
                BRAND_RENTED_AGRICULTURE: new Nc("LINK_1"),
                BRAND_RENTED_BANK: new Nc("LINK_1"),
                BRAND_RENTED_BAR: new Nc("LINK_1"),
                BRAND_RENTED_FACTORY: new Nc("LINK_1"),
                BRAND_RENTED_FORESTRY: new Nc("LINK_1"),
                BRAND_RENTED_GAS_STATION: new Nc("LINK_1"),
                BRAND_RENTED_HOTEL: new Nc("LINK_1"),
                BRAND_RENTED_MINE: new Nc("LINK_1"),
                BRAND_RENTED_OFFICE: new Nc("LINK_1"),
                BRAND_RENTED_OIL: new Nc("LINK_1"),
                BRAND_RENTED_RESTAURANT: new Nc("LINK_1"),
                BRAND_RENTED_STORE: new Nc("LINK_1"),
                BRAND_RENTED_WAREHOUSE: new Nc("LINK_1"),
                CITY_SERVICE_EDUCATION_EXPORT: new Nc,
                CITY_SERVICE_EDUCATION_IMPORT: new Nc,
                CITY_SERVICE_ELECTRICITY_EXPORT: new Nc,
                CITY_SERVICE_ELECTRICITY_IMPORT: new Nc,
                CITY_SERVICE_FIRE_RESCUE_EXPORT: new Nc,
                CITY_SERVICE_FIRE_RESCUE_IMPORT: new Nc,
                CITY_SERVICE_GARBAGE_IMPORT: new Nc,
                CITY_SERVICE_HEALTHCARE_EXPORT: new Nc,
                CITY_SERVICE_HEALTHCARE_IMPORT: new Nc,
                CITY_SERVICE_POLICE_EXPORT: new Nc,
                CITY_SERVICE_POLICE_IMPORT: new Nc,
                CITY_SERVICE_POST_EXPORT: new Nc,
                CITY_SERVICE_POST_IMPORT: new Nc,
                CITY_SERVICE_WATER_SEWAGE_EXPORT: new Nc,
                CITY_SERVICE_WATER_SEWAGE_IMPORT: new Nc,
                COMMERCIAL_LEVEL_DOWN: new Nc,
                COMMERCIAL_LEVEL_UP: new Nc,
                CRIME_NEGATIVE: new Nc,
                CRIME_RATE_HIGH: new Nc,
                DIRTY_WATER: new Nc,
                ELECTRICITY_BLACKOUTS: new Nc,
                FIRST_POWER_PLANT: new Nc("LINK_TARGET_0"),
                GARBAGE_PILING_UP: new Nc,
                GOOD_EDUCATION_SERVICE: new Nc,
                GOOD_WELFARE_SERVICE_COVERAGE: new Nc,
                GROUND_POLLUTION_NEGATIVE: new Nc,
                HIGHEST_TEMP_15: new Nc,
                HIGHEST_TEMP_NEG_15: new Nc,
                HIGH_DEATH_RATE: new Nc,
                HOUSING_SHORTAGE: new Nc,
                INDUSTRIAL_LEVEL_DOWN: new Nc,
                INDUSTRIAL_LEVEL_UP: new Nc,
                LEISURE_TIME_NEGATIVE: new Nc,
                LEISURE_TIME_POSITIVE: new Nc,
                LOWEST_TEMP_15: new Nc,
                LOWEST_TEMP_20: new Nc,
                LOW_DEATH_RATE: new Nc,
                LOW_HEALTH: new Nc,
                LOW_NUMBER_OF_WORKERS: new Nc,
                LOW_WELLBEING: new Nc,
                MOSTLY_CLOUDY_WEATHER: new Nc,
                MOSTLY_RAINY_WEATHER: new Nc,
                MOSTLY_SNOWY_WEATHER: new Nc,
                MOSTLY_STORMY_WEATHER: new Nc,
                MOSTLY_SUNNY_WEATHER: new Nc,
                NOISE_POLLUTION: new Nc,
                NOISE_POLLUTION_NEGATIVE: new Nc,
                NO_ELECTRICITY: new Nc,
                NO_WATER: new Nc,
                NO_WATER_SERVICE: new Nc,
                OFFICE_LEVEL_DOWN: new Nc,
                OFFICE_LEVEL_UP: new Nc,
                OPENING_MESSAGE: new Sc,
                PANEL_TITLE: new Sc,
                PARK_COVERAGE: new Nc,
                POLICE_CRIME_RATE_HIGH: new Nc,
                POLICIES: new wc,
                POLICIES_SERVICE: new wc,
                POOR_EDUCATION_SERVICE: new Nc,
                RELIABLE_ELECTRICITY_SUPPLY: new Nc,
                RELIABLE_HEALTHCARE: new Nc,
                RELIABLE_INTERNET_SERVICE: new Nc,
                RELIABLE_POST_SERVICE: new Nc,
                RESIDENTIAL_LEVEL_DOWN: new Nc,
                RESIDENTIAL_LEVEL_UP: new Nc,
                SERVICES_CITIZEN: new wc,
                SERVICES_COMMUNICATIONS: new wc,
                SERVICES_ELECTRICITY: new wc,
                SERVICES_GARBAGE: new wc,
                SERVICES_ROADS: new wc,
                SERVICES_TRANSPORTATION: new wc,
                SERVICES_WATER: new wc,
                SEWAGE_NEGATIVE: new Nc,
                SMALL_HOME: new Nc,
                STORAGES_FILLING_UP: new Nc,
                TEMPERATURE_COLDER: new Nc,
                TOURISM_DOWN_20: new Nc,
                TOURISM_UP_20: new Nc,
                TRAFFIC_ACCIDENT_NEARBY: new Nc,
                TRAFFIC_JAMS: new Nc,
                UNCONNECTED_CITY: new Nc,
                UNEMPLOYMENT_RATE_HIGH: new Nc,
                UNPAID_LOAN: new Nc,
                UNRELIABLE_ELECTRICITY_SUPPLY: new Nc,
                UNRELIABLE_HEALTHCARE: new Nc,
                UNRELIABLE_INTERNET_SERVICE: new Nc,
                UNRELIABLE_POST_SERVICE: new Nc,
                VALENTINE_DAY: new Nc,
                WATER_NEGATIVE_SERVICE_COVERAGE: new Nc,
                WATER_POLLUTION_NEGATIVE: new Nc
            },
            CinematicCamera: {
                CAPTURE: new Sc,
                DELETE_DISCLAIMER: new Sc("NAME"),
                DELETE_KEY: new Sc,
                DELETE_TOOLTIP: new Sc,
                FOCAL_LENGTH: new Sc,
                HIDE_UI: new Sc,
                KEY_FORMAT: new Sc("KEY"),
                LOAD: new Sc,
                LOAD_TOOLTIP: new Sc,
                LOOP: new Sc,
                NEW_SEQUENCE_PLACEHOLDER: new Sc,
                OVERRIDE_DISCLAIMER: new Sc("NAME"),
                PLAYBACK_DURATION: new Sc,
                RESET_TOOLTIP: new Sc,
                SAVE: new Sc,
                SAVE_LOAD_TOOLTIP: new Sc,
                SAVE_TOOLTIP: new Sc,
                SEGMENT_DURATION: new Sc,
                SIMULATION_SPEED: new Sc,
                TITLE: new Sc,
                UNSAVED_DISCLAIMER: new Sc
            },
            CityInfoPanel: {
                DEMAND_DESCRIPTION: new Cc,
                DEMAND_FACTOR: new Cc,
                DEMAND_FACTOR_NEGATIVE: new Cc,
                DEMAND_FACTOR_POSITIVE: new Cc,
                DEMAND_TITLE: new Cc,
                HAPPINESS: new Sc,
                TAB: new Cc,
                TITLE: new Sc,
                TOOLTIP_DESCRIPTION_DEMAND: new Cc,
                TOOLTIP_HAPPINESS_DESCRIPTION: new Sc,
                TOOLTIP_HAPPINESS_TITLE: new Sc,
                TOOLTIP_POLICIES_DESCRIPTION: new Sc,
                TOOLTIP_POLICIES_TITLE: new Sc,
                TOOLTIP_TITLE_DEMAND: new Cc
            },
            Climate: {
                SEASON: new Cc
            },
            Common: {
                ACTION: new Cc,
                BOUNDS_CELSIUS: new Sc("MIN", "MAX"),
                BOUNDS_FAHRENHEIT: new Sc("MIN", "MAX"),
                BOUNDS_KELVIN: new Sc("MIN", "MAX"),
                BOUNDS_KILOWATT: new Sc("MIN", "MAX"),
                BOUNDS_MEGAWATT: new Sc("MIN", "MAX"),
                BOUNDS_PERCENT: new Sc("MIN", "MAX"),
                BOUNDS_TEMPERATURE: new Sc("MIN", "MAX"),
                CANCEL: new Sc,
                CLEAR_SEARCH_TOOLTIP: new Sc,
                CLOSE: new Sc,
                CONFIRMATION: new Sc,
                CONTINUE: new Sc,
                DATE_TIME_FORMAT: new Sc("MONTH", "YEAR", "HOUR", "MINUTE"),
                DECIMAL_SEPARATOR: new Sc,
                DELETE_TOOLTIP: new Sc,
                DIALOG_ACTION: new Cc,
                DIALOG_ACTION_INPUT: new Cc,
                DIALOG_MESSAGE: new Cc,
                DIALOG_MESSAGE_INPUT: new Sc,
                DIALOG_MESSAGE_MODDING: new Cc("MODNAME"),
                DIALOG_TITLE: new Cc,
                DIALOG_TITLE_INPUT: new Sc,
                DIALOG_TITLE_MODDING: new Cc,
                DISABLE: new Sc,
                DLC_TITLE: new Cc,
                DONT_SHOW_AGAIN: new Sc,
                ENABLE: new Sc,
                ERROR: new Sc,
                ERROR_DIALOG_CONTINUE: new Sc,
                ERROR_DIALOG_COPY_DETAILS: new Sc,
                ERROR_DIALOG_QUIT_GAME: new Sc,
                ERROR_DIALOG_SAVE_CONTINUE: new Sc,
                ERROR_DIALOG_SAVE_QUIT_GAME: new Sc,
                ERROR_DIALOG_TITLE: new Sc,
                EXIT_DIALOG_TEXT: new Sc,
                EXIT_DIALOG_TITLE: new Sc,
                EXIT_TO_DESKTOP: new Sc,
                EXIT_TO_MENU: new Sc,
                FOCUS: new Sc,
                FRACTION_BODIES_PER_MONTH: new Sc("VALUE", "TOTAL"),
                FRACTION_CUBIC_METER: new Sc("VALUE", "TOTAL"),
                FRACTION_CUBIC_METER_PER_MONTH: new Sc("VALUE", "TOTAL"),
                FRACTION_GALLON: new Sc("VALUE", "TOTAL"),
                FRACTION_GALLON_PER_MONTH: new Sc("VALUE", "TOTAL"),
                FRACTION_INTEGER: new Sc("VALUE", "TOTAL"),
                FRACTION_INTEGER_PER_MONTH: new Sc("VALUE", "TOTAL"),
                FRACTION_KG: new Sc("VALUE", "TOTAL"),
                FRACTION_KG_PER_MONTH: new Sc("VALUE", "TOTAL"),
                FRACTION_KILOWATT: new Sc("VALUE", "TOTAL"),
                FRACTION_KILOWATT_HOURS: new Sc("VALUE", "TOTAL"),
                FRACTION_MEGAWATT: new Sc("VALUE", "TOTAL"),
                FRACTION_MEGAWATT_HOURS: new Sc("VALUE", "TOTAL"),
                FRACTION_POUND: new Sc("VALUE", "TOTAL"),
                FRACTION_POUND_PER_MONTH: new Sc("VALUE", "TOTAL"),
                FRACTION_SHORT_TON: new Sc("VALUE", "TOTAL"),
                FRACTION_SHORT_TON_PER_MONTH: new Sc("VALUE", "TOTAL"),
                FRACTION_TON: new Sc("VALUE", "TOTAL"),
                FRACTION_TON_PER_MONTH: new Sc("VALUE", "TOTAL"),
                FRACTION_XP: new Sc("VALUE", "TOTAL"),
                GO_BACK_TOOLTIP: new Sc,
                HAPPINESS_FACTORS: new Sc,
                HAPPINESS_FACTOR_NEGATIVE: new Cc,
                HAPPINESS_FACTOR_POSITIVE: new Cc,
                INFORMATION: new Sc,
                INFOVIEW_MENU_TOGGLE_TOOLTIP: new Sc,
                LANGUAGE_NAME: new Sc,
                LOCKED: new Sc,
                MEDIUM_DATE_FORMAT: new Sc("MONTH", "YEAR"),
                MONTH: new Nc,
                MONTH_SHORT: new Nc,
                NO: new Sc,
                NONE: new Sc,
                OK: new Sc,
                PAUSE_MENU_TOGGLE_TOOLTIP: new Sc,
                SAVEABILITY_REASON: new Cc,
                SELECT: new Sc,
                SUBMIT: new Sc,
                THOUSANDS_SEPARATOR: new Sc,
                TIMESTAMP_FORMAT: new Sc,
                TIMESTAMP_FORMAT_12: new Sc,
                TIME_FORMAT: new Sc("HOUR", "MINUTE"),
                TIME_FORMAT_12: new Sc("HOUR", "MINUTE", "PERIOD"),
                TIME_PERIOD_AM: new Sc,
                TIME_PERIOD_PM: new Sc,
                UNLOCKED: new Sc,
                VALUE_ACRE: new Sc("SIGN", "VALUE"),
                VALUE_ANGLE: new Sc("SIGN", "VALUE"),
                VALUE_BYTE: new Sc("SIGN", "VALUE"),
                VALUE_CELSIUS: new Sc("SIGN", "VALUE"),
                VALUE_CUBIC_METER: new Sc("SIGN", "VALUE"),
                VALUE_CUBIC_METER_PER_MONTH: new Sc("SIGN", "VALUE"),
                VALUE_FAHRENHEIT: new Sc("SIGN", "VALUE"),
                VALUE_FOOT: new Sc("SIGN", "VALUE"),
                VALUE_GALLON: new Sc("SIGN", "VALUE"),
                VALUE_GALLON_PER_MONTH: new Sc("SIGN", "VALUE"),
                VALUE_GIGABIT_PER_SECOND: new Sc("SIGN", "VALUE"),
                VALUE_GIGABYTE: new Sc("SIGN", "VALUE"),
                VALUE_KELVIN: new Sc("SIGN", "VALUE"),
                VALUE_KG_PER_MONTH: new Sc("SIGN", "VALUE"),
                VALUE_KILOBYTE: new Sc("SIGN", "VALUE"),
                VALUE_KILOGRAM: new Sc("SIGN", "VALUE"),
                VALUE_KILOMETER: new Sc("SIGN", "VALUE"),
                VALUE_KILOTON: new Sc("SIGN", "VALUE"),
                VALUE_KILOWATT: new Sc("SIGN", "VALUE"),
                VALUE_MEGABYTE: new Sc("SIGN", "VALUE"),
                VALUE_MEGAWATT: new Sc("SIGN", "VALUE"),
                VALUE_MEGAWATT_HOURS: new Sc("SIGN", "VALUE"),
                VALUE_METER: new Sc("SIGN", "VALUE"),
                VALUE_MILE: new Sc("SIGN", "VALUE"),
                VALUE_MILLION: new Sc("SIGN", "VALUE"),
                VALUE_MONEY: new Sc("SIGN", "VALUE"),
                VALUE_MONEY_PER_CELL: new Sc("SIGN", "VALUE"),
                VALUE_MONEY_PER_HOUR: new Sc("SIGN", "VALUE"),
                VALUE_MONEY_PER_KILOMETER: new Sc("SIGN", "VALUE"),
                VALUE_MONEY_PER_KILOMETER_PER_MONTH: new Sc("SIGN", "VALUE"),
                VALUE_MONEY_PER_MILE: new Sc("SIGN", "VALUE"),
                VALUE_MONEY_PER_MILE_PER_MONTH: new Sc("SIGN", "VALUE"),
                VALUE_MONEY_PER_MONTH: new Sc("SIGN", "VALUE"),
                VALUE_MONTH: new Sc("VALUE"),
                VALUE_MONTHS: new Sc("VALUE"),
                VALUE_PERCENT: new Sc("SIGN", "VALUE"),
                VALUE_PER_HOUR: new Sc("SIGN", "VALUE"),
                VALUE_PER_MONTH: new Sc("SIGN", "VALUE"),
                VALUE_PER_SQUARE_METER: new Sc("SIGN", "VALUE"),
                VALUE_POUND: new Sc("SIGN", "VALUE"),
                VALUE_POUND_PER_MONTH: new Sc("SIGN", "VALUE"),
                VALUE_SHORT_KILOTON: new Sc("SIGN", "VALUE"),
                VALUE_SHORT_TON: new Sc("SIGN", "VALUE"),
                VALUE_SHORT_TON_PER_CELL: new Sc("SIGN", "VALUE"),
                VALUE_SHORT_TON_PER_MONTH: new Sc("SIGN", "VALUE"),
                VALUE_SQUARE_FOOT: new Sc("SIGN", "VALUE"),
                VALUE_SQUARE_KILOMETER: new Sc("SIGN", "VALUE"),
                VALUE_SQUARE_METER: new Sc("SIGN", "VALUE"),
                VALUE_TEMPERATURE: new Sc("SIGN", "VALUE"),
                VALUE_TERABYTE: new Sc("SIGN", "VALUE"),
                VALUE_THOUSAND: new Sc("SIGN", "VALUE"),
                VALUE_TON: new Sc("SIGN", "VALUE"),
                VALUE_TON_PER_CELL: new Sc("SIGN", "VALUE"),
                VALUE_TON_PER_MONTH: new Sc("SIGN", "VALUE"),
                VALUE_XP: new Sc("SIGN", "VALUE"),
                VALUE_YARD: new Sc("SIGN", "VALUE"),
                VALUE_YEAR: new Sc("VALUE"),
                VALUE_YEARS: new Sc("VALUE"),
                WARNING: new Sc,
                YES: new Sc
            },
            CompanyInfoPanel: {
                COMMERCIAL_PROFITABILITY: new Sc,
                INDUSTRIAL_PROFITABILITY: new Sc,
                OFFICE_PROFITABILITY: new Sc
            },
            DisasterInfoPanel: {
                CAPACITY: new Sc,
                EVACUATED: new Sc,
                SHELTER_AVAILABILITY: new Sc
            },
            EconomyPanel: {
                BUDGET_BALANCE_LABEL: new Cc,
                BUDGET_ITEM: new Cc,
                BUDGET_ITEM_DESCRIPTION: new Cc,
                BUDGET_LOANS_BUTTON_ACCEPT: new Sc,
                BUDGET_LOANS_LABEL_AMOUNT: new Sc,
                BUDGET_LOANS_LABEL_CURRENT_INTEREST: new Sc,
                BUDGET_LOANS_LABEL_DAILY_INTEREST: new Sc,
                BUDGET_LOANS_LABEL_DAILY_PAYMENT: new Sc,
                BUDGET_LOANS_LABEL_DAYS_REMAINING: new Sc,
                BUDGET_LOANS_LABEL_GET_MORE: new Sc,
                BUDGET_LOANS_LABEL_NEW_LOAN: new Sc,
                BUDGET_LOANS_LABEL_PAY_BACK: new Sc,
                BUDGET_SUB_ITEM: new Cc,
                BUDGET_TITLE_LOANS: new Sc,
                EXPENSES_SECTION_TITLE: new Sc,
                INCOME_SECTION_TITLE: new Sc,
                LOAN_CHART_BUDGET_WARNING: new Sc,
                LOAN_CHART_BUDGET_WARNING_MODIFIED: new Sc,
                LOAN_CHART_DEFICIT: new Sc("TOTAL"),
                LOAN_CHART_LEGEND_EXPENSES: new Sc,
                LOAN_CHART_LEGEND_INCOME: new Sc,
                LOAN_CHART_LEGEND_LOAN_INTEREST: new Sc,
                LOAN_CHART_RELATIVE_COST: new Sc("RELATIVE_LOAN_COST"),
                LOAN_CHART_REMAINING_SURPLUS: new Sc("TOTAL"),
                LOAN_CHART_SURPLUS: new Sc("TOTAL"),
                LOAN_FORM_ACCEPT: new Sc,
                LOAN_FORM_LESS_LABEL: new Sc,
                LOAN_FORM_LIMIT: new Sc("LOAN_LIMIT"),
                LOAN_FORM_MORE_LABEL: new Sc,
                LOAN_FORM_RESET: new Sc,
                LOAN_PAGE_DESCRIPTION: new Sc,
                LOAN_PAGE_TITLE: new Sc,
                LOAN_TABLE_AMOUNT: new Sc,
                LOAN_TABLE_INTEREST_RATE: new Sc,
                LOAN_TABLE_MONTHLY_COST: new Sc,
                MONTHLY_BALANCE: new Sc,
                PRODUCTION_LABEL_EXPORT: new Sc,
                PRODUCTION_LABEL_IMPORT: new Sc,
                PRODUCTION_LABEL_INTERNAL: new Sc,
                PRODUCTION_LABEL_TOTAL: new Sc,
                PRODUCTION_PAGE_DEFICIT: new Sc,
                PRODUCTION_PAGE_EXPORT: new Sc,
                PRODUCTION_PAGE_IMPORT: new Sc,
                PRODUCTION_PAGE_PRODUCTION: new Sc,
                PRODUCTION_PAGE_PRODUCTIONLINK: new Cc,
                PRODUCTION_PAGE_SURPLUS: new Sc,
                PRODUCTION_TAB_IMMATERIAL: new Sc,
                PRODUCTION_TAB_MATERIAL: new Sc,
                PRODUCTION_TOOLTIP_COMMERCIAL_CONSUMPTION: new Sc,
                PRODUCTION_TOOLTIP_COMMERCIAL_WEALTH: new Sc,
                PRODUCTION_TOOLTIP_INDUSTRIAL_CONSUMPTION: new Sc,
                PRODUCTION_TOOLTIP_INDUSTRIAL_PRODUCTION: new Sc,
                PRODUCTION_TOOLTIP_INDUSTRIAL_WEALTH: new Sc,
                PRODUCTION_TOOLTIP_OFFICE_CONSUMPTION: new Sc,
                PRODUCTION_TOOLTIP_OFFICE_WEALTH: new Sc,
                RESOURCE_CATEGORY: new Cc,
                SERVICES_BUILDING_EMPLOYMENT_LABEL: new Sc,
                SERVICES_FEES_LABEL_DAILY_EXPENSES: new Sc,
                SERVICES_FEES_LABEL_DAILY_INCOME: new Sc,
                SERVICES_FEES_LABEL_EXPORT: new Sc,
                SERVICES_FEES_LABEL_FEES: new Sc,
                SERVICES_FEES_LABEL_IMPORT: new Sc,
                SERVICES_FEES_LABEL_SERVICE_FEE: new Sc,
                SERVICES_LABEL_TOTAL: new Sc,
                SERVICES_LABEL_UPKEEP: new Sc,
                SERVICES_LABEL_WAGES: new Sc,
                SERVICES_RESOURCE_FEE_CONSUMPTION: new Cc,
                SERVICES_RESOURCE_FEE_DESCRIPTION: new Cc,
                SERVICES_RESOURCE_FEE_EFFICIENCY: new Sc,
                SERVICES_RESOURCE_FEE_HAPPINESS: new Sc,
                SERVICES_RESOURCE_FEE_LABEL: new Cc,
                SERVICES_RESOURCE_LABEL: new Cc,
                SERVICES_TITLE_BUDGET: new Sc,
                SERVICES_TITLE_BUDGETS: new Sc,
                SERVICES_TITLE_BUILDINGS: new Sc,
                SERVICES_TITLE_EXPENSES: new Sc,
                SERVICES_TITLE_IMPORT_BUDGET: new Sc,
                SERVICES_TITLE_INCOME: new Sc,
                SERVICES_TITLE_INFO: new Sc,
                SERVICES_TITLE_QUALITY: new Sc,
                SERVICE_BUDGET_EFFICIENCY: new Sc,
                SERVICE_BUDGET_SLIDER_DESCRIPTION: new Cc,
                SERVICE_BUDGET_SLIDER_TITLE: new Cc,
                SERVICE_DESCRIPTION: new Cc,
                SERVICE_EXPORT_REVENUE_DESCRIPTION: new Sc,
                SERVICE_FEES_REVENUE_DESCRIPTION: new Sc,
                SERVICE_IMPORT_EXPENSE_DESCRIPTION: new Sc,
                SERVICE_UPKEEP_EXPENSE_DESCRIPTION: new Sc,
                TAB: new Cc,
                TAXATION_COMMERCIAL_TITLE: new Sc,
                TAXATION_INDUSTRIAL_TITLE: new Sc,
                TAXATION_OFFICE_TITLE: new Sc,
                TAXATION_RESIDENTIAL_LABEL_JOBLEVEL: new Sc,
                TAXATION_RESIDENTIAL_SLIDER_JOBLEVEL: new Nc,
                TAXATION_RESIDENTIAL_TITLE: new Sc,
                TAXATION_TAX_GROUP: new Cc,
                TAX_AREA_COLUMN_TITLE: new Sc,
                TAX_AREA_DESCRIPTION: new Cc,
                TAX_AREA_TITLE: new Cc,
                TAX_INCOME_ESTIMATE_TITLE: new Sc,
                TAX_INCOME_TOTAL_TITLE: new Sc,
                TAX_RANGE: new Sc("MIN", "MAX"),
                TAX_RATE_TITLE: new Sc,
                TITLE: new Sc
            },
            Editor: {
                ACTIVE_TOOLTIP: new Sc,
                ADD_COMPONENT: new Sc,
                ADD_COMPONENT_NAMED: new Sc("NAME"),
                ADD_FAVORITE: new Sc,
                ADD_TRANSLATION: new Sc,
                ASSETS: new Sc,
                ASSET_CATEGORY_TITLE: new Cc,
                ASSET_DESCRIPTION: new Sc,
                ASSET_NAME: new Sc,
                BACK_TO_EDITOR: new Sc,
                BETA_BANNER: new Sc,
                BORDER_RIVER_WATER_SOURCES: new Sc,
                BORDER_SEA_WATER_SOURCES: new Sc,
                CAMERA_ANGLE: new Sc,
                CAMERA_ANGLE_TOOLTIP: new Sc,
                CAMERA_PIVOT: new Sc,
                CAMERA_PIVOT_TOOLTIP: new Sc,
                CAMERA_STARTING_POSITION: new Sc,
                CAMERA_STARTING_POSITION_TOOLTIP: new Sc,
                CAMERA_ZOOM: new Sc,
                CAMERA_ZOOM_TOOLTIP: new Sc,
                CAPTURE_CAMERA_POSITION: new Sc,
                CAPTURE_CAMERA_POSITION_TOOLTIP: new Sc,
                CHANGE_PREFAB_TYPE: new Sc,
                CHECKLIST: new Sc,
                CHECKLIST_AIR_CONNECTION: new Sc,
                CHECKLIST_AIR_CONNECTION_TOOLTIP: new Sc,
                CHECKLIST_ELECTRICITY_CONNECTION: new Sc,
                CHECKLIST_ELECTRICITY_CONNECTION_TOOLTIP: new Sc,
                CHECKLIST_FERTILE: new Sc,
                CHECKLIST_FERTILE_TOOLTIP: new Sc,
                CHECKLIST_FOREST: new Sc,
                CHECKLIST_FOREST_TOOLTIP: new Sc,
                CHECKLIST_NAME: new Sc,
                CHECKLIST_NAME_TOOLTIP: new Sc,
                CHECKLIST_OIL: new Sc,
                CHECKLIST_OIL_TOOLTIP: new Sc,
                CHECKLIST_OPTIONAL: new Sc,
                CHECKLIST_OPTIONAL_TOOLTIP: new Sc,
                CHECKLIST_ORE: new Sc,
                CHECKLIST_ORE_TOOLTIP: new Sc,
                CHECKLIST_REQUIRED: new Sc,
                CHECKLIST_REQUIRED_TOOLTIP: new Sc,
                CHECKLIST_ROAD_CONNECTION: new Sc,
                CHECKLIST_ROAD_CONNECTION_TOOLTIP: new Sc,
                CHECKLIST_STARTING_TILES: new Sc,
                CHECKLIST_STARTING_TILES_TOOLTIP: new Sc,
                CHECKLIST_TOOLTIP: new Sc,
                CHECKLIST_TRAIN_CONNECTION: new Sc,
                CHECKLIST_TRAIN_CONNECTION_TOOLTIP: new Sc,
                CHECKLIST_WATER: new Sc,
                CHECKLIST_WATER_TOOLTIP: new Sc,
                CLEAR: new Sc,
                CLEAR_ALL: new Sc,
                CLEAR_RESOURCE: new Cc,
                CLEAR_RESOURCE_TOOLTIP: new Cc,
                CLIMATE: new Sc,
                CLIMATE_DEFAULT_WEATHER: new Sc,
                CLIMATE_DEFAULT_WEATHERS: new Sc,
                CLIMATE_FREEZING_TEMPERATURE: new Sc,
                CLIMATE_LATITUDE: new Sc,
                CLIMATE_LOAD_PREFAB: new Sc,
                CLIMATE_LOAD_PREFAB_TOOLTIP: new Sc,
                CLIMATE_LONGITUDE: new Sc,
                CLIMATE_SEASONS: new Sc,
                CLIMATE_SETTINGS: new Sc,
                CLIMATE_SETTINGS_TOOLTIP: new Sc,
                CLIMATE_TOOLTIP: new Sc,
                CLIMATE_WIND_DIRECTION: new Sc,
                CLIMATE_WIND_DIRECTION_TOOLTIP: new Sc,
                CLIMATE_WIND_SETTINGS: new Sc,
                CLIMATE_WIND_SETTINGS_TOOLTIP: new Sc,
                CLOUDINESS: new Sc,
                COMPONENT_TYPES: new Sc,
                CONSTANT_LEVEL_WATER_SOURCES: new Sc,
                CONSTANT_RATE_WATER_SOURCES: new Sc,
                CREATE_CUSTOM_CLIMATE: new Sc,
                CREATE_CUSTOM_CLIMATE_PROMPT: new Sc,
                CREATE_NEW_PREFAB: new Sc,
                CURRENT_YEAR_AS_DEFAULT: new Sc,
                CURRENT_YEAR_AS_DEFAULT_TOOLTIP: new Sc,
                DELETE_COMPONENT: new Sc,
                DRIVES: new Sc,
                DUPLICATE_TEMPLATE: new Sc,
                DUPLICATE_TEMPLATE_TOOLTIP: new Sc,
                ELEMENT_COUNT: new Sc("COUNT"),
                EXPORT_HEIGHTMAP: new Sc,
                EXPORT_HEIGHTMAP_TOOLTIP: new Sc,
                EXPORT_WORLDMAP: new Sc,
                EXPORT_WORLDMAP_TOOLTIP: new Sc,
                FILE_NAME: new Sc,
                FILTERS: new Sc,
                FLOOD_HEIGHT: new Sc,
                FLOOD_HEIGHT_TOOLTIP: new Sc,
                HEIGHT: new Sc,
                HEIGHTMAPS: new Sc,
                HEIGHTMAPS_TOOLTIP: new Sc,
                HEIGHT_OFFSET: new Sc,
                HEIGHT_SCALE: new Sc,
                HEIGHT_SCALE_TOOLTIP: new Sc,
                HEIGHT_TOOLTIP: new Sc,
                IMPORT: new Sc,
                IMPORTING: new Sc,
                IMPORT_HEIGHTMAP: new Sc,
                IMPORT_HEIGHTMAP_TOOLTIP: new Sc,
                IMPORT_RESOURCE: new Cc,
                IMPORT_RESOURCE_TOOLTIP: new Cc,
                IMPORT_WORLDMAP: new Sc,
                IMPORT_WORLDMAP_TOOLTIP: new Sc,
                INCORRECT_HEIGHTMAP_MESSAGE: new Sc("WIDTH", "HEIGHT"),
                INCORRECT_HEIGHTMAP_TITLE: new Sc,
                INSTALOD_LABEL: new Sc,
                LIST_ADD_ITEM: new Sc,
                LIST_COUNT: new Sc("COUNT"),
                LIST_ITEM_COLLAPSE: new Sc,
                LIST_ITEM_DELETE: new Sc,
                LIST_ITEM_DUPLICATE: new Sc,
                LIST_ITEM_EXPAND: new Sc,
                LIST_ITEM_MOVE_DOWN: new Sc,
                LIST_ITEM_MOVE_UP: new Sc,
                LIST_PAGE_COUNT: new Sc("PAGE", "PAGE_COUNT", "COUNT"),
                LOAD: new Sc,
                LOAD_MAP: new Sc,
                LOAD_MAP_TOOLTIP: new Sc,
                LOCALIZED_DESCRIPTION: new Sc,
                LOCALIZED_NAME: new Sc,
                LOCATE: new Sc,
                LOCATE_TOOLTIP: new Sc,
                MAP: new Sc,
                MAP_DESCRIPTION: new Sc,
                MAP_DESCRIPTION_TOOLTIP: new Sc,
                MAP_NAME: new Sc,
                MAP_NAME_AS_DEFAULT: new Sc,
                MAP_NAME_AS_DEFAULT_TOOLTIP: new Sc,
                MAP_NAME_TOOLTIP: new Sc,
                MAP_OFFSET: new Sc,
                MAP_SETTINGS: new Sc,
                MAP_SIZE: new Sc,
                MAP_TOOLTIP: new Sc,
                MATERIALS: new Sc,
                NEW_MAP: new Sc,
                NEXT_PAGE: new Sc,
                NONE_VALUE: new Sc,
                OBJECTCONTAINER: new Sc,
                OPEN_DIRECTORY: new Sc,
                PAGE_FORMAT: new Sc("CURRENT", "TOTAL"),
                POLLUTION: new Sc,
                POLLUTION_TOOLTIP: new Sc,
                POSITION: new Sc,
                POSITION_TOOLTIP: new Sc,
                PREFAB_TYPES: new Sc,
                PREVIEW: new Sc,
                PREVIEW_TOOLTIP: new Sc,
                PREVIOUS_PAGE: new Sc,
                PROCESSING: new Sc,
                PROJECT_ROOT: new Sc,
                PROJECT_ROOT_TOOLTIP: new Sc,
                RADIUS: new Sc,
                RADIUS_TOOLTIP: new Sc,
                REMOVE_FAVORITE: new Sc,
                REMOVE_WORLDMAP: new Sc,
                REMOVE_WORLDMAP_TOOLTIP: new Sc,
                RESET_CLOUDINESS: new Sc,
                RESET_TIME_OF_DAY: new Sc,
                RESET_TIME_OF_YEAR: new Sc,
                RESOURCES: new Sc,
                RESOURCES_TOOLTIP: new Sc,
                RESOURCE_TEXTURE_LABEL: new Sc,
                RESOURCE_TOOLS: new Sc,
                SAVE: new Sc,
                SAVE_ASSET: new Sc,
                SAVE_MAP: new Sc,
                SAVE_MAP_SHARE: new Sc,
                SAVE_MAP_TOOLTIP: new Sc,
                SAVE_SHARE: new Sc,
                SEARCH_PLACEHOLDER: new Sc,
                SELECTED_ASSETS: new Sc,
                SELECTED_ASSETS_TOOLTIP: new Sc,
                SELECT_DIRECTORY: new Sc,
                SELECT_NOTHING_EVERYTHING: new Sc,
                SELECT_STARTING_TILES: new Sc,
                SELECT_TEMPLATE: new Sc,
                SHARE_ASSET: new Sc,
                STARTING_MONTH: new Sc,
                STARTING_TIME: new Sc,
                STARTING_YEAR: new Sc,
                STARTING_YEAR_TOOLTIP: new Sc,
                STOP_SELECTING_STARTING_TILES: new Sc,
                TERRAIN_TOOLS: new Sc,
                TERRAIN_TOOLS_TOOLTIP: new Sc,
                THEME: new Sc,
                THEME_TOOLTIP: new Sc,
                THUMBNAIL: new Sc,
                THUMBNAIL_TOOLTIP: new Sc,
                TIME_OF_DAY: new Sc,
                TIME_OF_YEAR: new Sc,
                TOOL: new Cc,
                TOOLTIP: new Cc,
                UNIQUE_MAP_ID: new Sc,
                WATER: new Sc,
                WATER_RATE: new Sc,
                WATER_RATE_TOOLTIP: new Sc,
                WATER_SETTINGS: new Sc,
                WATER_SETTINGS_TOOLTIP: new Sc,
                WATER_SIMULATION_SPEED: new Sc,
                WATER_SIMULATION_SPEED_TOOLTIP: new Sc,
                WATER_TOOLTIP: new Sc,
                WIDGETS: new Cc,
                WORKSPACE: new Sc,
                WORLD_OFFSET: new Sc,
                WORLD_SIZE: new Sc
            },
            EditorTutorials: {
                DESCRIPTION: new Cc,
                TITLE: new Cc,
                TODO_INTRO: new Sc
            },
            EducationInfoPanel: {
                AVAILABILITY: new Cc,
                EDUCATION_DISTRIBUTION: new Sc,
                EDUCATION_LEVEL: new Cc,
                ELIGIBLE: new Sc,
                LEVEL: new Cc,
                STUDENTS: new Cc,
                STUDENT_COUNT: new Sc
            },
            ElectricityInfoPanel: {
                BATTERY_CHARGE: new Sc,
                ELECTRICITY_AVAILABILITY: new Sc,
                ELECTRICITY_EXPORT: new Sc,
                ELECTRICITY_IMPORT: new Sc,
                ELECTRICITY_TRADE: new Sc,
                ELECTRICITY_TRANSMISSION: new Sc,
                ELECTRICITY_TRANSMITTED: new Sc,
                TEMPERATURE_EFFECT: new Sc
            },
            EventJournal: {
                EFFECT: new Cc,
                EVENT_TITLE: new Cc,
                OPENING_MESSAGE: new Sc,
                PANEL_TITLE: new Sc
            },
            FireAndRescueInfoPanel: {
                AVERAGE_FIRE_HAZARD: new Sc
            },
            GameListScreen: {
                BIOME_LABEL: new Sc,
                BUILDABLE_AREA_LABEL: new Sc,
                CITY_DETAILS_SECTION: new Sc,
                CLIMATE_LABEL: new Sc,
                CONFIRM_OVERWRITE_MESSAGE: new Sc,
                CONFIRM_UNSAVED_MESSAGE: new Sc,
                CONNECTIONS_LABEL: new Sc,
                EQUATOR: new Sc,
                GAME_OPTION: new Cc,
                GAME_OPTIONS_SECTION: new Sc,
                GAME_OPTION_DESCRIPTION: new Cc,
                HEMISPHERE_N: new Sc,
                HEMISPHERE_S: new Sc,
                INVALID_NAME_MESSAGE: new Sc,
                LAST_MODIFIED_LABEL: new Sc,
                LATITUDE_LABEL: new Sc,
                LOAD_GAME_BUTTON: new Sc,
                LOAD_GAME_SCREEN_TITLE: new Sc,
                MAP_DETAILS_SECTION: new Sc,
                MAP_FILTER: new Cc,
                MAP_LABEL: new Sc,
                MONEY_LABEL: new Sc,
                NEW_GAME_SCREEN_TITLE: new Sc,
                POPULATION_LABEL: new Sc,
                RESOURCES_LABEL: new Sc,
                SAVE_GAME_BUTTON: new Sc,
                SAVE_GAME_SCREEN_TITLE: new Sc,
                SAVE_NAME_LABEL: new Sc,
                START_GAME_BUTTON: new Sc,
                THEME_LABEL: new Sc,
                TUTORIAL_OPTIONS: new Sc,
                WATER_AVAILABILITY_LABEL: new Sc,
                XP_LABEL: new Sc
            },
            GarbageInfoPanel: {
                GARBAGE_RATE: new Sc,
                LANDFILL_AVAILABILITY: new Sc,
                PROCESSING_STATUS: new Sc,
                STORED_GARBAGE: new Sc
            },
            GroundPollutionInfoPanel: {
                AVERAGE_GROUND_POLLUTION: new Sc
            },
            HealthcareInfoPanel: {
                AVERAGE_HEALTH: new Sc,
                CEMETERY_AVAILABILITY: new Sc,
                CREMATORIUM_AVAILABILITY: new Sc,
                DEATH_RATE: new Sc,
                HEALTHCARE_AVAILABILITY: new Sc,
                N_A: new Sc,
                OCCUPIED: new Sc,
                PATIENTS: new Sc,
                PROCESSING_RATE: new Sc,
                SICK_OR_INJURED: new Sc
            },
            ISO: {
                COUNTRY: new Cc
            },
            InfoPanels: {
                CAPACITY: new Sc,
                CONSUMPTION: new Sc,
                OUTPUT: new Sc,
                PROCESSING: new Sc,
                PRODUCTION: new Sc,
                STORED: new Sc
            },
            Infoviews: {
                AVAILABILITY: new Sc,
                AVERAGE_AIR_POLLUTION_TOOLTIP: new Sc,
                AVERAGE_COMMERCIAL_PROFIT_TOOLTIP: new Sc,
                AVERAGE_FIRE_HAZARD_TOOLTIP: new Sc,
                AVERAGE_GROUND_POLLUTION_TOOLTIP: new Sc,
                AVERAGE_INDUSTRIAL_PROFIT_TOOLTIP: new Sc,
                AVERAGE_LAND_VALUE_TOOLTIP: new Sc,
                AVERAGE_NOISE_POLLUTION_TOOLTIP: new Sc,
                AVERAGE_OFFICE_PROFIT_TOOLTIP: new Sc,
                AVERAGE_WATER_POLLUTION_TOOLTIP: new Sc,
                BATTERY_CHARGE_TOOLTIP: new Sc,
                CEMETERY_AVAILABILITY_TOOLTIP: new Sc,
                CITY_ATTRACTIVENESS_TOOLTIP: new Sc,
                CLOSE_INFO_VIEW: new Sc,
                COLLEGE_AVAILABILITY_TOOLTIP: new Sc,
                COMMERCIAL_LEVEL_TOOLTIP: new Sc,
                CREMATORIUM_AVAILABILITY_TOOLTIP: new Sc,
                CRIME_PROBABILITY_TOOLTIP: new Sc,
                EDUCATION_DISTRIBUTION_TOOLTIP: new Sc,
                ELECTRICITY_AVAILABILITY_TOOLTIP: new Sc,
                ELECTRICITY_TRADE_TOOLTIP: new Sc,
                ELECTRICITY_TRANSMISSION_TOOLTIP: new Sc,
                ELEMENTARY_SCHOOL_AVAILABILITY_TOOLTIP: new Sc,
                EXPORT_DISTRIBUTION_TOOLTIP: new Sc,
                FERTILE_LAND_RESOURCE_TOOLTIP: new Sc,
                GARBAGE_PROCESSING_STATUS_TOOLTIP: new Sc,
                HAPPINESS_FACTORS_TOOLTIP: new Sc,
                HEALTHCARE_AVAILABILITY_TOOLTIP: new Sc,
                HIGH_SCHOOL_AVAILABILITY_TOOLTIP: new Sc,
                IMPORT_DISTRIBUTION_TOOLTIP: new Sc,
                INDUSTRIAL_LEVEL_TOOLTIP: new Sc,
                INFOMODE: new Cc,
                INFOMODE_TOOLTIP: new Cc,
                INFOMODE_TYPE: new Cc,
                INFOVIEW: new Cc,
                JAIL_AVAILABILITY_TOOLTIP: new Sc,
                LABEL: new Cc,
                LABEL_VALUE_FORMAT: new Sc("LABEL", "VALUE"),
                LANDFILL_AVAILABILITY_TOOLTIP: new Sc,
                MAIL_SERVICE_AVAILABILITY_TOOLTIP: new Sc,
                MAP_LEGEND: new Sc,
                OFFICE_LEVEL_TOOLTIP: new Sc,
                OIL_RESOURCE_TOOLTIP: new Sc,
                ORE_RESOURCE_TOOLTIP: new Sc,
                PARKING_AVAILABILITY_TOOLTIP: new Sc,
                POPULATION_DISTRIBUTION_TOOLTIP: new Sc,
                POPULATION_STATISTICS_TOOLTIP: new Sc,
                PRISON_AVAILABILITY_TOOLTIP: new Sc,
                REMOVE_USER_INFOVIEW_BUTTON_TOOLTIP: new Sc,
                RESIDENTIAL_LEVEL_TOOLTIP: new Sc,
                SEWAGE_TRADE_TOOLTIP: new Sc,
                SEWAGE_TREATMENT_TOOLTIP: new Sc,
                SHELTER_AVAILABILITY_TOOLTIP: new Sc,
                TITLE_INFOVIEWS: new Sc,
                TRAFFIC_FLOW: new Sc,
                UNIVERSITY_AVAILABILITY_TOOLTIP: new Sc,
                USER_INFOMODE_SELECTOR_TOOLTIP: new Sc,
                WATER_AVAILABILITY_TOOLTIP: new Sc,
                WATER_STORAGE_TOOLTIP: new Sc,
                WATER_TRADE_TOOLTIP: new Sc,
                WOOD_RESOURCE_TOOLTIP: new Sc,
                WORKPLACE_DISTRIBUTION_TOOLTIP: new Sc
            },
            LandValueInfoPanel: {
                AVERAGE_LAND_VALUE: new Sc
            },
            LevelInfoPanel: {
                COMMERCIAL: new Sc,
                INDUSTRIAL: new Sc,
                LEVEL1: new Sc,
                LEVEL2: new Sc,
                LEVEL3: new Sc,
                LEVEL4: new Sc,
                LEVEL5: new Sc,
                OFFICE: new Sc,
                RESIDENTIAL: new Sc
            },
            LifePath: {
                BACK_BUTTON_TOOLTIP: new Sc,
                CITIZEN_BECAME_UNEMPLOYED: new Nc("LINK_1"),
                CITIZEN_BIRTH: new Sc,
                CITIZEN_COMMITED_ROBBERY: new Nc,
                CITIZEN_DIED: new Nc,
                CITIZEN_FAILED_SCHOOL: new Nc("LINK_1"),
                CITIZEN_GOT_ARRESTED: new Nc,
                CITIZEN_GOT_INJURED: new Nc,
                CITIZEN_GOT_INJURED_BY_EVENT: new Nc("LINK_1"),
                CITIZEN_GOT_IN_DANGER_BY_EVENT: new Nc("LINK_1"),
                CITIZEN_GOT_SICK: new Nc,
                CITIZEN_GOT_SICK_BY_EVENT: new Nc("LINK_1"),
                CITIZEN_GOT_TRAPPED: new Nc,
                CITIZEN_GOT_TRAPPED_BY_EVENT: new Nc("LINK_1"),
                CITIZEN_GRADUATED: new Nc("LINK_1"),
                CITIZEN_IN_DANGER: new Nc,
                CITIZEN_LOST_FAMILY_MEMBER: new Nc("LINK_1"),
                CITIZEN_MADE_BABY_COUPLE: new Nc("LINK_1", "LINK_2"),
                CITIZEN_MADE_BABY_SINGLE: new Nc("LINK_1"),
                CITIZEN_MOVED_HOUSE: new Nc("LINK_1"),
                CITIZEN_MOVED_OUT_OF_CITY: new Nc("LINK_1"),
                CITIZEN_PARTNERED_UP: new Nc("LINK_1"),
                CITIZEN_SENTENCED_TO_PRISON: new Nc,
                CITIZEN_SEPARATED: new Nc("LINK_1"),
                CITIZEN_STARTED_SCHOOL: new Nc("LINK_1"),
                CITIZEN_STARTED_WORKING: new Nc("LINK_1"),
                DETAIL_PANEL_TITLE: new Sc("NAME"),
                LIST_PANEL_TITLE: new Sc,
                MAX_EXCEEDED_WARNING: new Sc,
                OCCUPATION: new Sc("OCCUPATION", "WORKPLACE_LINK", "WORKPLACE_NAME"),
                OPENING_MESSAGE: new Sc,
                TOURIST_LEFT_CITY: new Nc("LINK_1"),
                UNFOLLOW_BUTTON_TOOLTIP: new Sc
            },
            Loading: {
                HINTMESSAGE: new Nc,
                LOADING_TITLE: new Sc
            },
            Main: {
                TOOLTIP_DESCRIPTION_ADVISOR: new Sc,
                TOOLTIP_DESCRIPTION_CAMERA_MODES: new Sc,
                TOOLTIP_DESCRIPTION_CHIRPER: new Sc,
                TOOLTIP_DESCRIPTION_CINEMATIC_CAMERA: new Sc,
                TOOLTIP_DESCRIPTION_CITY_ECONOMY: new Sc,
                TOOLTIP_DESCRIPTION_CITY_INFO: new Sc,
                TOOLTIP_DESCRIPTION_CITY_NAME: new Sc,
                TOOLTIP_DESCRIPTION_CITY_STATISTICS: new Sc,
                TOOLTIP_DESCRIPTION_CURRENT_MILESTONE: new Sc,
                TOOLTIP_DESCRIPTION_DATE: new Sc,
                TOOLTIP_DESCRIPTION_DEMAND: new Sc,
                TOOLTIP_DESCRIPTION_ELEVATION_LOWER: new Sc,
                TOOLTIP_DESCRIPTION_ELEVATION_RAISE: new Sc,
                TOOLTIP_DESCRIPTION_EVENT_JOURNAL: new Sc,
                TOOLTIP_DESCRIPTION_FOLLOWED_CITIZENS: new Sc,
                TOOLTIP_DESCRIPTION_FREE_CAMERA: new Sc,
                TOOLTIP_DESCRIPTION_GAME_SPEED: new Sc,
                TOOLTIP_DESCRIPTION_INFO_VIEWS: new Sc,
                TOOLTIP_DESCRIPTION_LINES_OVERVIEW: new Sc,
                TOOLTIP_DESCRIPTION_MAP_TILES: new Sc,
                TOOLTIP_DESCRIPTION_MAX_MILESTONE: new Sc,
                TOOLTIP_DESCRIPTION_MONEY: new Sc,
                TOOLTIP_DESCRIPTION_NOTIFICATIONS: new Sc,
                TOOLTIP_DESCRIPTION_PAUSE: new Sc,
                TOOLTIP_DESCRIPTION_PAUSE_MENU: new Sc,
                TOOLTIP_DESCRIPTION_PHOTO_MODE: new Sc,
                TOOLTIP_DESCRIPTION_PLAY: new Sc,
                TOOLTIP_DESCRIPTION_POPULATION: new Sc,
                TOOLTIP_DESCRIPTION_PROGRESSION: new Sc,
                TOOLTIP_DESCRIPTION_RADIO: new Sc,
                TOOLTIP_DESCRIPTION_UNDERGROUND: new Sc,
                TOOLTIP_DESCRIPTION_UNLIMITED_MONEY: new Sc,
                TOOLTIP_DESCRIPTION_WEATHER: new Sc,
                TOOLTIP_DESCRIPTION_XP: new Sc,
                TOOLTIP_TITLE_ADVISOR: new Sc,
                TOOLTIP_TITLE_CAMERA_MODES: new Sc,
                TOOLTIP_TITLE_CHIRPER: new Sc,
                TOOLTIP_TITLE_CINEMATIC_CAMERA: new Sc,
                TOOLTIP_TITLE_CITY_ECONOMY: new Sc,
                TOOLTIP_TITLE_CITY_INFO: new Sc,
                TOOLTIP_TITLE_CITY_NAME: new Sc,
                TOOLTIP_TITLE_CITY_STATISTICS: new Sc,
                TOOLTIP_TITLE_CURRENT_MILESTONE: new Sc,
                TOOLTIP_TITLE_DATE: new Sc,
                TOOLTIP_TITLE_DEMAND: new Sc,
                TOOLTIP_TITLE_ELEVATION_LOWER: new Sc,
                TOOLTIP_TITLE_ELEVATION_RAISE: new Sc,
                TOOLTIP_TITLE_EVENT_JOURNAL: new Sc,
                TOOLTIP_TITLE_FOLLOWED_CITIZENS: new Sc,
                TOOLTIP_TITLE_FREE_CAMERA: new Sc,
                TOOLTIP_TITLE_GAME_SPEED: new Sc,
                TOOLTIP_TITLE_INFO_VIEWS: new Sc,
                TOOLTIP_TITLE_LINES_OVERVIEW: new Sc,
                TOOLTIP_TITLE_MAP_TILES: new Sc,
                TOOLTIP_TITLE_MONEY: new Sc,
                TOOLTIP_TITLE_NOTIFICATIONS: new Sc,
                TOOLTIP_TITLE_PAUSE: new Sc,
                TOOLTIP_TITLE_PAUSE_MENU: new Sc,
                TOOLTIP_TITLE_PHOTO_MODE: new Sc,
                TOOLTIP_TITLE_PLAY: new Sc,
                TOOLTIP_TITLE_POPULATION: new Sc,
                TOOLTIP_TITLE_PROGRESSION: new Sc,
                TOOLTIP_TITLE_RADIO: new Sc,
                TOOLTIP_TITLE_UNDERGROUND: new Sc,
                TOOLTIP_TITLE_WEATHER: new Sc,
                TOOLTIP_TITLE_XP: new Sc
            },
            MapTilePurchase: {
                AVAILABLE_EXPANSION_PERMITS: new Sc("VALUE"),
                AVAILABLE_WATER: new Sc,
                BUILDABLE_AREA: new Sc,
                COST: new Sc,
                PERMITS_USED: new Sc,
                PURCHASE_STATUS: new Cc,
                PURCHASE_STATUS_TOOLTIP: new Cc,
                RESOURCE: new Cc,
                RESOURCES: new Sc,
                TILE_UPKEEP: new Sc,
                TITLE: new Sc,
                TOOLTIP_COST: new Sc,
                TOOLTIP_RESOURCE: new Cc,
                TOOLTIP_TILES: new Sc,
                TOOLTIP_TITLE_COST: new Sc,
                TOOLTIP_TITLE_RESOURCE: new Cc,
                TOOLTIP_TITLE_TILES: new Sc
            },
            Maps: {
                MAP_DESCRIPTION: new Cc,
                MAP_TITLE: new Cc,
                OUTSIDE_CONNECTIONS: new Cc,
                RESOURCE: new Cc
            },
            Menu: {
                ACHIEVEMENTS_WARNING_GAME_OPTIONS: new Sc,
                ACHIEVEMENTS_WARNING_GAME_OPTIONS_PS: new Sc,
                ACHIEVEMENTS_WARNING_MODS: new Sc,
                ACHIEVEMENTS_WARNING_MODS_PS: new Sc,
                ACHIEVEMENTS_WARNING_PAST_MODS: new Sc,
                ACHIEVEMENTS_WARNING_PAST_MODS_PS: new Sc,
                ACHIEVEMENTS_WARNING_PAST_OPTIONS: new Sc,
                ACHIEVEMENTS_WARNING_PAST_OPTIONS_PS: new Sc,
                APPLICATION_QUIT_MESSAGE: new Sc,
                ASSET_ADD_EXTERNAL_LINK: new Sc,
                ASSET_ADD_LINK: new Sc,
                ASSET_ADD_PREVIEW_SCREENSHOT: new Sc,
                ASSET_CHANGELOG: new Sc,
                ASSET_COMPLETE: new Sc,
                ASSET_COPY_ID: new Sc,
                ASSET_ERROR_DESCRIPTION: new Sc,
                ASSET_ERROR_EMPTY_CHANGELOG: new Sc,
                ASSET_ERROR_LINK: new Sc,
                ASSET_ERROR_NAME: new Sc,
                ASSET_ERROR_VERSION: new Sc,
                ASSET_EXISTING: new Sc,
                ASSET_EXISTING_ID: new Sc,
                ASSET_EXTERNAL_LINKS: new Sc,
                ASSET_EXTERNAL_LINK_TYPE: new Cc,
                ASSET_EXTERNAL_LINK_URL: new Sc,
                ASSET_FAILURE: new Sc,
                ASSET_FORUM_LINK: new Sc("INDEX"),
                ASSET_FORUM_LINKS: new Sc,
                ASSET_FORUM_LINK_LABEL: new Sc,
                ASSET_LONG_DESCRIPTION: new Sc,
                ASSET_NAME: new Sc,
                ASSET_PREPARING: new Sc,
                ASSET_PREVIEW_SCREENSHOTS: new Sc,
                ASSET_REMOVE_PREVIEW_SCREENSHOT: new Sc,
                ASSET_SCREENSHOT_EMPTY_SUBTITLE: new Sc,
                ASSET_SCREENSHOT_EMPTY_TITLE: new Sc,
                ASSET_SHORT_DESCRIPTION: new Sc,
                ASSET_SUBMITTING: new Sc,
                ASSET_TYPE: new Cc,
                ASSET_UPDATE_EXISTING: new Sc,
                ASSET_UPLOAD: new Sc,
                ASSET_UPLOAD_ID: new Sc("ID"),
                ASSET_VERSION: new Sc,
                BACK: new Sc,
                BETA_LABEL: new Sc,
                BINARY_PACK_ASSETS: new Sc,
                BINARY_PACK_ASSETS_TOOLTIP: new Sc,
                CITY_NAME_LABEL: new Sc,
                CLOUD_TARGET: new Cc,
                CLOUD_TARGET_LABEL: new Sc,
                CONFIRM_DELETE_SAVE_WARNING: new Sc,
                CONTINUE_GAME: new Sc,
                CREDITS: new Sc,
                DLC_TAB: new Sc,
                EDITOR: new Sc,
                EMPTY_SLOT: new Sc,
                EXIT_APPLICATION: new Sc,
                EXIT_GAME: new Sc,
                GDKCLOUD_SAVE: new Sc,
                LOAD_GAME: new Sc,
                LOAD_GAME_BUTTON: new Sc,
                MAP_OPTIONS: new Sc,
                MODS_TAB: new Sc,
                NAME_FIELD_PLACEHOLDER: new Sc,
                NEWS_PANEL_TITLE: new Sc,
                NEW_GAME: new Sc,
                NOTIFICATIONS_OPENING_MESSAGE: new Sc,
                NOTIFICATIONS_TITLE: new Sc,
                NOTIFICATION_DESCRIPTION: new Cc("LOADED", "TOTAL"),
                NOTIFICATION_TITLE: new Cc,
                OPTIONS: new Sc,
                PARADOXCLOUD_SAVE: new Sc,
                PARADOXMODS_SAVE: new Sc,
                PDX_MODS: new Sc,
                RANDOM_CITY_NAME_BUTTON_TOOLTIP: new Sc,
                READONLY_SAVE: new Sc,
                RESUME_GAME: new Sc,
                SAVE_CITY_SIZE_WARNING: new Sc,
                SAVE_GAME: new Sc,
                SAVE_LIST: new Sc,
                SAVE_OPTIONS: new Sc,
                SAVE_ORDERING: new Cc,
                SAVE_ORDERING_LABEL: new Sc,
                SELECT_MAP_BUTTON: new Sc,
                SIMULATION_DATE_LABEL: new Sc,
                START_GAME_BUTTON: new Sc,
                STEAMCLOUD_SAVE: new Sc,
                SWITCH_USER: new Sc,
                UNLIMITED_MONEY_LABEL: new Sc
            },
            NaturalResourcesInfoPanel: {
                AVAILABLE: new Sc,
                FERTILITY: new Sc,
                FOREST: new Sc,
                OIL: new Sc,
                ORE: new Sc,
                RATE: new Sc,
                RENEWAL_RATE: new Sc
            },
            NoisePollutionInfoPanel: {
                AVERAGE_NOISE_POLLUTION: new Sc
            },
            Notifications: {
                DESCRIPTION: new Cc,
                TITLE: new Cc
            },
            Options: {
                ANTIALIASINGMETHOD: new Cc,
                AUTORELOADMODE: new Cc,
                AUTOSAVECOUNT: new Cc,
                AUTOSAVEINTERVAL: new Cc,
                BATCH_SWAP_BINDINGS: new Sc,
                BATCH_SWAP_GROUP_BLOCK_RESOLUTION: new Sc("CONTROL"),
                BATCH_SWAP_GROUP_NO_RESOLUTION: new Sc("CONTROL"),
                BATCH_SWAP_GROUP_PROMT: new Sc,
                BATCH_SWAP_GROUP_RESET_PROMT: new Sc,
                BATCH_SWAP_GROUP_RESOLUTION: new Sc("CONTROL"),
                BINDING_CONFLICT_BUILTIN_WITH_BUILTIN_TOOLTIP: new Sc,
                BINDING_CONFLICT_MOD_WITH_BUILTIN_TOOLTIP: new Sc,
                BINDING_CONFLICT_MOD_WITH_MOD_TOOLTIP: new Sc,
                CANNOT_BE_REBOUND: new Sc,
                CONFLICT_BUILTIN_BINDING_TOOLTIP: new Sc,
                CONFLICT_MODS_BINDING_TOOLTIP: new Sc,
                CURSORMODE: new Cc,
                DEPTHOFFIELDMODE: new Cc,
                DEPTHOFFIELDRESOLUTION: new Cc,
                DESCRIPTION_BOX_TITLE: new Sc,
                DISPLAYMODE: new Cc,
                DISPLAY_MODE: new Cc,
                DISPLAY_SETTINGS_CONFIRM: new Sc,
                DISPLAY_SETTINGS_PROMPT: new Sc,
                DISPLAY_SETTINGS_REVERT: new Sc("TIME"),
                DLSSQUALITY: new Cc,
                DYNRESUPSCALEFILTER: new Cc,
                ERROR_TOOLCHAIN: new Sc,
                ERROR_TOOLCHAIN_DEPENDENCY_DOWNLOAD: new Sc("DEPENDENCY_NAME"),
                ERROR_TOOLCHAIN_DEPENDENCY_DOWNLOAD_DETAILS: new Sc("DEPENDENCY_NAME", "DETAILS"),
                ERROR_TOOLCHAIN_DEPENDENCY_INSTALL: new Sc("DEPENDENCY_NAME"),
                ERROR_TOOLCHAIN_DEPENDENCY_INSTALL_DETAILS: new Sc("DEPENDENCY_NAME", "DETAILS"),
                ERROR_TOOLCHAIN_DEPENDENCY_UNINSTALL: new Sc("DEPENDENCY_NAME"),
                ERROR_TOOLCHAIN_DEPENDENCY_UNINSTALL_DETAILS: new Sc("DEPENDENCY_NAME", "DETAILS"),
                ERROR_TOOLCHAIN_INSTALL_UNKNOWN: new Sc,
                ERROR_TOOLCHAIN_NO_SPACE: new Sc,
                ERROR_TOOLCHAIN_NO_SPACE_DETAILS: new Sc("DETAILS"),
                ERROR_TOOLCHAIN_UNINSTALL_UNKNOWN: new Sc,
                FILTERMODE: new Cc,
                FORMAT: new Cc("SIGN", "VALUE"),
                FPSMODE: new Cc,
                FSR2QUALITY: new Cc,
                GROUP: new Cc,
                INPUTHINTSTYPE: new Cc,
                INPUT_CONFLICT_BATCH_NO_RESOLUTION: new Sc("CONTROL", "BINDING"),
                INPUT_CONFLICT_BATCH_RESOLUTION: new Sc("CONTROL", "BINDING"),
                INPUT_CONFLICT_FORMAT: new Sc("MAP", "TITLE"),
                INPUT_CONFLICT_NO_RESOLUTION: new Sc("CONTROL", "BINDING"),
                INPUT_CONFLICT_PROMPT: new Sc("CONTROL", "BINDING"),
                INPUT_CONFLICT_TITLE: new Sc,
                INPUT_CONTROL: new Cc,
                INPUT_CONTROL_NA: new Sc,
                INPUT_CONTROL_PS: new Cc,
                INPUT_CONTROL_SHORT: new Cc,
                INPUT_CONTROL_SHORT_PS: new Cc,
                INPUT_CONTROL_SHORT_XBOX: new Cc,
                INPUT_CONTROL_UNSET: new Sc,
                INPUT_CONTROL_XBOX: new Cc,
                INPUT_MAP: new Cc,
                INPUT_MODIFIER_SEPARATOR: new Sc,
                INPUT_REBIND_PROMPT: new Cc,
                INPUT_REBIND_PROMPT_NEW: new Cc("SHIFT", "CTRL", "ALT", "LSP", "RSP"),
                INPUT_REBIND_PROMPT_NEW_PS: new Cc("LSP", "RSP"),
                INPUT_REBIND_PROMPT_NEW_XBOX: new Cc("LSP", "RSP"),
                INPUT_REBIND_PROMPT_NO_MODIFIERS: new Cc,
                INPUT_REBIND_PROMPT_NO_MODIFIERS_PS: new Cc,
                INPUT_REBIND_PROMPT_NO_MODIFIERS_XBOX: new Cc,
                INPUT_REBIND_PROMPT_PS: new Cc,
                INPUT_REBIND_PROMPT_XBOX: new Cc,
                INPUT_REBIND_TITLE: new Sc("BINDING"),
                INTERFACE_STYLE: new Cc,
                KEYBOARDLAYOUT: new Cc,
                LEVEL: new Cc,
                MOD_TOOLCHAIN_STATUS: new Cc,
                MSAASAMPLES: new Cc,
                OPTION: new Cc,
                OPTION_DESCRIPTION: new Cc,
                PERFORMANCEPREFERENCE: new Cc,
                RESET_BINDING_TOOLTIP: new Sc,
                SCREEN_RESOLUTION_FORMAT: new Sc("WIDTH", "HEIGHT", "REFRESH_RATE"),
                SCREEN_TITLE: new Sc,
                SEARCH: new Cc,
                SECTION: new Cc,
                SKINNING: new Cc,
                SMAAQUALITYLEVEL: new Cc,
                STATE_TOOLCHAIN: new Cc("VERSION"),
                SWAP_BINDINGS: new Sc,
                TAB: new Cc,
                TAB_PS: new Cc,
                TEMPERATUREUNIT: new Cc,
                TIMEFORMAT: new Cc,
                UNITSYSTEM: new Cc,
                UNSET_BINDINGS: new Sc,
                UNSET_BINDING_TOOLTIP: new Sc,
                WARNING: new Cc,
                WARN_TOOLCHAIN_DEPENDENCY_UNINSTALL: new Sc("DEPENDENCY_NAME"),
                WARN_TOOLCHAIN_DOTNET_UNINSTALL: new Sc("DOTNET_VERSION"),
                WARN_TOOLCHAIN_INSTALL: new Sc("UNITY_VERSION", "HOST"),
                WARN_TOOLCHAIN_INSTALL_DOTNET: new Sc("DOTNET_VERSION", "HOST"),
                WARN_TOOLCHAIN_INSTALL_MOD_PROJECT: new Sc,
                WARN_TOOLCHAIN_INSTALL_NEW: new Sc,
                WARN_TOOLCHAIN_INSTALL_NODEJS: new Sc("NODEJS_VERSION", "HOST"),
                WARN_TOOLCHAIN_INSTALL_PROJECT_TEMPLATE: new Sc,
                WARN_TOOLCHAIN_INSTALL_UNITY: new Sc("UNITY_VERSION", "HOST"),
                WARN_TOOLCHAIN_INSTALL_UNITY_LICENSE: new Sc,
                WARN_TOOLCHAIN_MIN_VERSION: new Sc("MIN_VERSION"),
                WARN_TOOLCHAIN_NODEJS_UNINSTALL: new Sc("NODEJS_VERSION"),
                WARN_TOOLCHAIN_UNINSTALL: new Sc("UNITY_VERSION"),
                WARN_TOOLCHAIN_UNINSTALL_NEW: new Sc,
                WARN_TOOLCHAIN_UNITY_LICENSE_RETURN: new Sc,
                WARN_TOOLCHAIN_UNITY_UNINSTALL: new Sc("UNITY_VERSION")
            },
            OutsideConnectionsInfoPanel: {
                TOP_EXPORTS: new Sc,
                TOP_IMPORTS: new Sc
            },
            Overlay: {
                BACK_ACTION: new Sc,
                CHANGE_USER_ACTION: new Sc,
                CONTROLLER_DISCONNECTED: new Sc,
                CONTROLLER_DISCONNECTED_PS: new Sc,
                CONTROLLER_PAIRING_CHANGED: new Sc,
                CONTROLLER_PAIRING_CHANGED_PS: new Sc,
                CORRUPT_SAVE_DATA: new Sc,
                DELETED_ITEMS: new Sc,
                ENGAGEMENT_PROMPT_GAMEPAD: new Sc,
                ENGAGEMENT_PROMPT_KEYBOARD: new Sc,
                PLEASE_LOG_IN: new Sc,
                PLEASE_WAIT: new Sc,
                PRESS_ANY_KEY_ACTION: new Sc,
                PROCEED_ACTION: new Sc,
                QUIT_ACTION: new Sc,
                START_GAME_ACTION: new Sc,
                SWITCH_USER: new Sc,
                USER_LOGGED_OUT: new Sc,
                VALIDATION: new Sc
            },
            Paradox: {
                ACCOUNT_LINK_CONFIRMATION_TEXT: new Cc,
                ACCOUNT_LINK_OVERWRITE_TITLE: new Sc,
                ACCOUNT_LINK_PROMPT: new Sc,
                ACCOUNT_LINK_PROMPT_SHORT: new Cc,
                ACCOUNT_LINK_PROMPT_TEXT: new Cc,
                ACCOUNT_LINK_PROMPT_TITLE: new Sc,
                ADDITIONAL_ASSETS: new Sc,
                ADDITIONAL_TAGS: new Sc,
                ADD_ASSET: new Sc,
                ADD_TAG: new Sc,
                BIRTH_DATE_DAY_FIELD_LABEL: new Sc,
                BIRTH_DATE_FIELD_LABEL: new Sc,
                BIRTH_DATE_MONTH_FIELD_LABEL: new Sc,
                BIRTH_DATE_YEAR_FIELD_LABEL: new Sc,
                CONSENT: new Sc,
                COUNTRY_FIELD_LABEL: new Sc,
                EMAIL_FIELD_LABEL: new Sc,
                ERROR: new Cc,
                EXISTING_PREVIEWS_ERROR: new Sc,
                FORGOT_PASSWORD_LINK: new Sc,
                LINK_ACCOUNT_BUTTON: new Sc,
                LOADING: new Sc,
                LOGIN_BUTTON: new Sc,
                LOGIN_FORM_TITLE: new Sc,
                LOGIN_FROM_REGISTRATION_LINK: new Sc,
                LOGIN_INCENTIVE: new Sc,
                LOGOUT_BUTTON: new Sc,
                MARKETING_PERMISSION_TOGGLE_LABEL: new Sc,
                MODS_NEED_INTERNET: new Sc,
                NOT_LOGGED_IN: new Sc,
                NO_INTERNET_CONNECTION: new Sc,
                NO_SOCIAL_PROFILE: new Sc,
                OPEN_PROFILE_PAGE: new Sc,
                PARADOX_ACCOUNT: new Sc,
                PASSWORD_FIELD_LABEL: new Sc,
                PASSWORD_RESET_CONFIRMATION_TEXT: new Sc("EMAIL"),
                PDX_ACCOUNT_LINK_OVERWRITE_PROMPT_TEXT: new Cc,
                PDX_MODS_BUTTON: new Sc,
                PDX_PLATFORM_ACCOUNT_LINK_OVERWRITE_PROMPT_TEXT: new Cc,
                PLATFORM_ACCOUNT_LINK_OVERWRITE_PROMPT_TEXT: new Cc,
                PRIVACY_POLICY: new Sc,
                PS_MODS_DISCLAIMER: new Sc,
                PS_MODS_EXIT_DISABLE_MODS: new Sc,
                PS_MODS_EXIT_DISCLAIMER: new Sc,
                PS_MODS_EXIT_GO_BACK: new Sc,
                PS_MODS_EXIT_KEEP_MODS: new Sc,
                PS_NOT_SIGNED_INTO_PSN: new Sc,
                REGISTRATION_CONFIRMATION_TEXT: new Sc,
                REGISTRATION_CONFIRMATION_TITLE: new Sc,
                REGISTRATION_FORM_TITLE: new Sc,
                REGISTRATION_FROM_LOGIN_LINK: new Sc,
                REGISTRATION_HINT: new Sc,
                REMEMBER_ME_TOGGLE_LABEL: new Sc,
                RETRIEVING_DATA: new Sc,
                SDK_DISABLED: new Sc,
                SKIP_BUTTON: new Sc,
                SUBMIT_REGISTRATION_BUTTON: new Sc,
                TERMS_OF_USE: new Sc,
                TERMS_PRIVACY_NOTICE: new Sc,
                UGC_DISABLED: new Sc,
                UNKNOWN_ERROR: new Sc,
                UNLINK_ACCOUNT_BUTTON: new Sc
            },
            PhotoMode: {
                CAPTURE_PROPERTY_TOOLTIP: new Sc,
                CLOUDEROSIONNOISE: new Cc,
                DEPTHOFFIELDMODE: new Cc,
                ENABLE_PROPERTY_TOOLTIP: new Sc,
                ENVIRONMENT_DISCLAIMER: new Sc,
                FILMGRAINLOOKUP: new Cc,
                GATEFITMODE: new Cc,
                HIDE_UI: new Sc,
                PROPERTY_LIMIT_MAX: new Sc,
                PROPERTY_LIMIT_MIN: new Sc,
                PROPERTY_TITLE: new Cc,
                PROPERTY_TOOLTIP: new Cc,
                RESET_PROPERTY_TOOLTIP: new Sc,
                SENSORTYPE: new Cc,
                TAB: new Cc,
                TAKE_PHOTO: new Sc,
                TITLE: new Sc,
                TOGGLE_FIRST_PERSON_MODE: new Sc,
                TOGGLE_ORBIT_MODE: new Sc
            },
            PoliceInfoPanel: {
                ARRESTED_CRIMINALS: new Sc,
                AVERAGE_CRIME_PROBABILITY: new Sc,
                CRIME_SUCCESS_RATE: new Sc,
                CURRENT_NUMBER_OF_CRIMINALS: new Sc,
                IN_JAIL: new Sc,
                IN_PRISON: new Sc,
                JAIL_AVAILABILITY: new Sc,
                NUMBER_OF_CRIMES_PER_MONTH: new Sc,
                PRISONERS: new Sc,
                PRISON_AVAILABILITY: new Sc
            },
            Policy: {
                DESCRIPTION: new Cc,
                TITLE: new Cc
            },
            PopulationInfoPanel: {
                ADULTS: new Sc,
                AGE_DISTRIBUTION: new Sc,
                BIRTH_RATE: new Sc,
                CHILDREN: new Sc,
                DEATH_RATE: new Sc,
                EMPLOYED: new Sc,
                JOBS: new Sc,
                MOVED_AWAY: new Sc,
                MOVED_IN: new Sc,
                POPULATION: new Sc,
                SENIORS: new Sc,
                TEENS: new Sc,
                UNEMPLOYMENT: new Sc
            },
            PostInfoPanel: {
                COLLECTED_MAIL: new Sc,
                DELIVERED_MAIL: new Sc,
                MAIL_RATE: new Sc,
                MAIL_SERVICE_AVAILABILITY: new Sc
            },
            Progression: {
                AVAILABLE_DEV_POINTS: new Sc("VALUE"),
                BUILDING_UNLOCK_EVENT_PANEL_TITLE: new Sc,
                BUILD_LATER_BUTTON: new Sc,
                BUILD_NOW_BUTTON: new Sc,
                DEVELOPMENT_POINTS_FIELD_LABEL: new Sc,
                DEV_TREE_UNLOCK_BADGE: new Sc,
                HAPPINESS_REQUIREMENT: new Sc("VALUE"),
                INCLUDES_LABEL: new Sc,
                LOAN_LIMIT: new Sc,
                MAP_TILES_FIELD_LABEL: new Sc,
                MAX_MILESTONE_FIELD_LABEL: new Sc,
                MILESTONE_DESCRIPTION: new Nc,
                MILESTONE_DETAIL_SUBTITLE: new Sc("INDEX"),
                MILESTONE_NAME: new Nc,
                MILESTONE_PROGRESS: new Sc("CURRENT", "TARGET"),
                MILESTONE_REWARDS_LABEL: new Sc,
                MILESTONE_UNLOCK_PANEL_TITLE_PRIMARY: new Sc("INDEX"),
                MILESTONE_UNLOCK_PANEL_TITLE_SECONDARY: new Sc,
                MILESTONE_UNLOCK_REQUIREMENT: new Sc("INDEX", "NAME"),
                MILESTONE_VICTORY_CONFIRM_NEW_GAME: new Sc,
                MILESTONE_VICTORY_CONTINUE: new Sc,
                MILESTONE_VICTORY_DESCRIPTION_LONG: new Sc,
                MILESTONE_VICTORY_DESCRIPTION_SHORT: new Sc,
                MILESTONE_VICTORY_START_NEW: new Sc,
                MILESTONE_VICTORY_TITLE: new Sc,
                NODE_DESCRIPTION: new Cc,
                NODE_DEV_POINTS_REQUIREMENT: new Sc,
                NODE_LOCKED: new Sc,
                NODE_MILESTONE_REQUIREMENT: new Sc("INDEX"),
                NODE_NAME: new Cc,
                NODE_PARENT_REQUIREMENT: new Sc,
                NODE_UNLOCKED: new Sc,
                NODE_UNLOCK_REQUIREMENT: new Sc("NAME"),
                OBJECT_BUILT_REQUIREMENT: new Cc("CURRENT", "TARGET"),
                PANEL_TITLE: new Sc,
                POINTS_LABEL: new Sc("POINTS"),
                POPULATION_REQUIREMENT: new Sc("VALUE"),
                PROCESSING_REQUIREMENT: new Sc("RESOURCE", "CURRENT", "TARGET"),
                PROGRESSION_PANEL_BUTTON: new Sc,
                PURCHASE_BUTTON_AVAILABLE: new Sc,
                PURCHASE_BUTTON_LOCKED: new Sc,
                PURCHASE_BUTTON_MILESTONE: new Sc("MILESTONE"),
                PURCHASE_BUTTON_POINTS: new Sc,
                PURCHASE_BUTTON_UNLOCKED: new Sc,
                PURCHASE_COST: new Sc("COST"),
                RADIO_MAST_REQUIREMENT: new Sc("CURRENT", "TARGET"),
                REQUIREMENT: new Sc,
                REQUIREMENTS: new Sc,
                REQUIRES_ALL: new Sc,
                REQUIRES_ANY: new Sc,
                REWARD_FIELD_LABEL: new Sc,
                STRICT_OBJECT_BUILT_REQUIREMENT: new Sc("NAME", "CURRENT", "TARGET"),
                TAB_TITLE: new Cc,
                TOOLTIP_DESCRIPTION_EXPANSION_PERMITS: new Sc,
                TOOLTIP_DESCRIPTION_MONEY: new Sc,
                TOOLTIP_DESCRIPTION_POINTS: new Sc,
                TOOLTIP_DESCRIPTION_POINTS_COST: new Sc,
                TOOLTIP_DESCRIPTION_TAB: new Cc,
                TOOLTIP_TITLE_EXPANSION_PERMITS: new Sc,
                TOOLTIP_TITLE_MONEY: new Sc,
                TOOLTIP_TITLE_POINTS: new Sc,
                TOOLTIP_TITLE_POINTS_COST: new Sc,
                TOOLTIP_TITLE_TAB: new Cc,
                TUTORIAL_REQUIREMENT: new Sc,
                UNLOCK_NODE_BUTTON: new Sc,
                XP_REASON: new Cc,
                ZONE_BUILT_REQUIREMENT_CELLS: new Sc("ZONE", "CURRENT", "TARGET"),
                ZONE_BUILT_REQUIREMENT_CELLS_LEVEL: new Sc("LEVEL", "ZONE", "CURRENT", "TARGET"),
                ZONE_BUILT_REQUIREMENT_COUNT: new Sc("ZONE", "CURRENT", "TARGET"),
                ZONE_BUILT_REQUIREMENT_COUNT_LEVEL: new Sc("LEVEL", "ZONE", "CURRENT", "TARGET")
            },
            Properties: {
                ADJUST_HAPPINESS_MODIFIER_EFFECT: new Sc("DELTA", "TYPE", "TARGET"),
                ADJUST_HAPPINESS_MODIFIER_TARGET: new Cc,
                ADJUST_HAPPINESS_MODIFIER_TYPE: new Cc,
                AMBULANCE_COUNT: new Sc,
                ATTRACTION_EFFECT: new Sc("VALUE"),
                ATTRACTIVENESS: new Sc,
                BATTERY_CAPACITY: new Sc,
                BATTERY_POWER_OUTPUT: new Sc,
                CARGO_CAPACITY: new Sc,
                CITY_MODIFIER: new Cc,
                CITY_MODIFIER_EFFECT: new Sc("DELTA", "TYPE"),
                COMFORT: new Sc,
                CONSTRUCTION_COST: new Sc,
                DECEASED_PROCESSING_CAPACITY: new Sc,
                DECEASED_STORAGE: new Sc,
                ELECTRICITY_CONSUMPTION: new Sc,
                EVACUATION_BUS_COUNT: new Sc,
                FIRE_ENGINE_COUNT: new Sc,
                FIRE_HELICOPTER_COUNT: new Sc,
                GARBAGE_ACCUMULATION: new Sc,
                GARBAGE_PROCESSING_CAPACITY: new Sc,
                GARBAGE_STORAGE: new Sc,
                GARBAGE_TRUCK_COUNT: new Sc,
                HEARSE_COUNT: new Sc,
                JAIL_CAPACITY: new Sc,
                LEISURE_PROVIDER_EFFECT: new Sc("EFFICIENCY", "TYPE"),
                LEISURE_TYPE: new Cc,
                LOCAL_MODIFIER: new Cc,
                LOCAL_MODIFIER_EFFECT: new Sc("DELTA", "TYPE", "RADIUS"),
                MAIL_BOX_CAPACITY: new Sc,
                MAIL_SORTING_RATE: new Sc,
                MAIL_STORAGE_CAPACITY: new Sc,
                MAINTENANCE_VEHICLES: new Sc,
                MAP_RESOURCE: new Cc,
                MAX_UPKEEP: new Sc,
                MEDICAL_HELICOPTER_COUNT: new Sc,
                NETWORK_CAPACITY: new Sc,
                NETWORK_RANGE: new Sc,
                PATIENT_CAPACITY: new Sc,
                PATROL_CAR_COUNT: new Sc,
                POLICE_HELICOPTER_COUNT: new Sc,
                POST_TRUCK_COUNT: new Sc,
                POST_VAN_COUNT: new Sc,
                POWER_LINE_CAPACITY: new Sc,
                POWER_PLANT_OUTPUT: new Sc,
                POWER_VOLTAGE_FORMAT: new Sc("VALUE", "VOLTAGE"),
                PRISON_VAN_COUNT: new Sc,
                REQUIRED_RESOURCE: new Sc,
                RESOURCE_CONSUMPTION: new Sc,
                SEWAGE_CAPACITY: new Sc,
                SEWAGE_PIPE_CAPACITY: new Sc,
                SEWAGE_PURIFICATION_RATE: new Sc,
                SHELTER_CAPACITY: new Sc,
                STUDENT_CAPACITY: new Sc,
                TRANSFORMER_CAPACITY: new Sc,
                TRANSFORMER_INPUT: new Sc,
                TRANSFORMER_OUTPUT: new Sc,
                TRANSPORT_STOP_COUNT: new Cc,
                TRANSPORT_VEHICLE_COUNT: new Sc,
                UPKEEP: new Sc,
                VOLTAGE: new Nc,
                WATER_CAPACITY: new Sc,
                WATER_CONSUMPTION: new Sc,
                WATER_PIPES: new Sc,
                WATER_PIPE_CAPACITY: new Sc,
                WATER_PIPE_TYPE: new Cc,
                WATER_PURIFICATION_RATE: new Sc,
                WATER_STORAGE: new Sc
            },
            Radio: {
                ADS_BUTTON_TOOLTIP: new Sc,
                EMERGENCY_MESSAGE: new Cc,
                FOCUS_EMERGENCY: new Sc,
                MUTE: new Sc,
                NETWORK_DESCRIPTION: new Cc,
                NETWORK_TITLE: new Cc,
                NEXT_BUTTON_TOOLTIP: new Sc,
                PANEL_TITLE: new Sc,
                PAUSE_BUTTON_TOOLTIP: new Sc,
                PLAY_BUTTON_TOOLTIP: new Sc,
                PREVIOUS_BUTTON_TOOLTIP: new Sc,
                PROGRAM_TITLE: new Sc,
                UNMUTE: new Sc,
                VOLUME_BUTTON_TOOLTIP: new Sc
            },
            Resources: {
                TITLE: new Cc
            },
            RoadsInfoPanel: {
                PARKED_CARS: new Sc,
                PARKING_AVAILABILITY: new Sc,
                PARKING_INCOME: new Sc,
                TRAFFIC_FLOW: new Sc
            },
            SelectedInfoPanel: {
                ACTIVE_VEHICLES: new Sc,
                ADVISER: new Sc,
                AIR_POLLUTION: new Sc,
                ALL_IS_WELL: new Sc,
                ANIMAL_TITLE: new Cc,
                ANIMAL_TYPE: new Cc,
                ATTRACTIVENESS: new Sc,
                ATTRACTIVENESS_BASE: new Sc,
                ATTRACTIVENESS_FACTORS: new Cc,
                AVERAGE_HOUSEHOLD_WEALTH: new Sc,
                BATTERY_STATE_CHARGING: new Sc,
                BATTERY_STATE_DISCHARGING: new Sc,
                BATTERY_STATE_IDLE: new Sc,
                BEGIN_EMPTYING: new Sc,
                BUILDING_FOR_RENT: new Sc,
                CARGO_TITLE: new Cc,
                CARGO_TOOLTIP: new Sc,
                CARGO_TRANSPORT_ROUTE: new Sc,
                CARGO_TRANSPORT_VEHICLE_TITLE: new Sc,
                CITIZEN_AGE: new Cc,
                CITIZEN_AGE_FEMALE: new Cc,
                CITIZEN_AGE_MALE: new Cc,
                CITIZEN_AGE_TITLE: new Sc,
                CITIZEN_CONDITION: new Sc,
                CITIZEN_CONDITION_DESCRIPTION: new Cc,
                CITIZEN_CONDITION_TITLE: new Cc,
                CITIZEN_CONDITION_TITLE_FEMALE: new Cc,
                CITIZEN_CONDITION_TITLE_MALE: new Cc,
                CITIZEN_DESTINATION: new Cc,
                CITIZEN_EDUCATION: new Cc,
                CITIZEN_EDUCATION_FEMALE: new Cc,
                CITIZEN_EDUCATION_MALE: new Cc,
                CITIZEN_EDUCATION_TITLE: new Sc,
                CITIZEN_HAPPINESS: new Sc,
                CITIZEN_HAPPINESS_DESCRIPTION: new Cc,
                CITIZEN_HAPPINESS_TITLE: new Cc,
                CITIZEN_HAPPINESS_TITLE_FEMALE: new Cc,
                CITIZEN_HAPPINESS_TITLE_MALE: new Cc,
                CITIZEN_HOUSEHOLD: new Sc,
                CITIZEN_JOB_LEVEL: new Cc,
                CITIZEN_JOB_TITLE: new Sc,
                CITIZEN_OCCUPATION: new Cc,
                CITIZEN_OCCUPATION_FEMALE: new Cc,
                CITIZEN_OCCUPATION_MALE: new Cc,
                CITIZEN_OCCUPATION_TITLE: new Sc,
                CITIZEN_RESIDENCE: new Cc,
                CITIZEN_SCHOOL_TITLE: new Nc,
                CITIZEN_STATE: new Cc,
                CITIZEN_STATE_FEMALE: new Cc,
                CITIZEN_STATE_MALE: new Cc,
                CITIZEN_TYPE: new Cc,
                CITIZEN_TYPE_FEMALE: new Cc,
                CITIZEN_TYPE_MALE: new Cc,
                CITIZEN_WEALTH: new Cc,
                CITIZEN_WEALTH_FEMALE: new Cc,
                CITIZEN_WEALTH_MALE: new Cc,
                CITIZEN_WEALTH_TITLE: new Sc,
                CITIZEN_WORKPLACE: new Cc,
                CLOSE: new Sc,
                COLOR: new Sc,
                COMPANY: new Sc,
                COMPANY_EXTRACTED: new Cc,
                COMPANY_PRODUCES: new Sc,
                COMPANY_PROFITABILITY_TITLE: new Cc,
                COMPANY_REQUIRES: new Sc,
                COMPANY_ROOMS: new Sc,
                COMPANY_SELLS: new Sc,
                COMPANY_STORES: new Sc,
                CONFIRM_DELETE_WARNING: new Sc,
                CREATE_DISTRICT: new Sc,
                DEACTIVATE_UPGRADE: new Sc,
                DEATHCARE_BODIES: new Sc,
                DEATHCARE_PROCESSING_SPEED: new Sc,
                DEATHCARE_TITLE: new Sc,
                DEATHCARE_VEHICLES: new Cc,
                DEATHCARE_VEHICLE_DEAD: new Sc,
                DEATHCARE_VEHICLE_TITLE: new Sc,
                DELETE: new Sc,
                DELIVERY_VEHICLE_TITLE: new Cc,
                DESTINATION: new Sc,
                DESTROYED: new Sc,
                DESTROYED_DESCRIPTION: new Cc,
                DESTROYED_STATUS: new Cc,
                DESTROYED_TREE: new Sc,
                DESTROYED_TREE_DESCRIPTION: new Cc,
                DETAILS: new Sc,
                DEVELOPER_INFO_TITLE: new Sc,
                DISPATCHED_VEHICLES: new Sc,
                DRIVER: new Sc,
                DURATION_GREATER_YEAR: new Sc,
                EDUCATED: new Sc,
                EDUCATION: new Sc,
                EDUCATION_DROPOUT_RATE: new Sc,
                EDUCATION_GRADUATION_TIME: new Sc,
                EDUCATION_LEVELS: new Cc,
                EDUCATION_NO_GRADUATIONS: new Sc,
                EDUCATION_STUDENTS: new Sc,
                EFFICIENCY: new Sc,
                EFFICIENCY_FACTORS: new Cc,
                ELECTRICITY_BATTERY_CAPACITY: new Sc,
                ELECTRICITY_BATTERY_CHARGE: new Sc,
                ELECTRICITY_BATTERY_FLOW: new Sc,
                ELECTRICITY_BATTERY_STATE: new Sc,
                ELECTRICITY_POWER_PRODUCTION: new Sc,
                ELECTRICITY_POWER_USAGE: new Sc,
                ELECTRICITY_TITLE: new Sc,
                ELECTRICITY_TRANSFORMER_CAPACITY: new Sc,
                EMPLOYEES: new Sc,
                EMPLOYEE_COUNT: new Sc("AMOUNT"),
                EMPTY_IN: new Sc("DURATION"),
                EXPENSES: new Sc,
                EXTENSIONS: new Sc,
                FIRE_TITLE: new Sc,
                FIRE_VEHICLES: new Cc,
                FIRE_VEHICLE_TITLE: new Cc,
                FOCUS: new Sc,
                FOCUS_UPGRADE: new Sc,
                FOLLOW_CITIZEN: new Sc,
                FULL_IN: new Sc("DURATION"),
                GARBAGE_MANAGEMENT_PROCESSING_SPEED: new Sc,
                GARBAGE_MANAGEMENT_STORAGE_LABEL: new Cc,
                GARBAGE_MANAGEMENT_STORED_GARBAGE: new Sc,
                GARBAGE_MANAGEMENT_TITLE: new Sc,
                GARBAGE_MANAGEMENT_VEHICLES: new Cc,
                GARBAGE_VEHICLE_TITLE: new Cc,
                GRAVES_IN_USE: new Sc,
                GROUND_POLLUTION: new Sc,
                HEALTHCARE_PATIENTS: new Sc,
                HEALTHCARE_TITLE: new Sc,
                HEALTHCARE_VEHICLES: new Cc,
                HEALTHCARE_VEHICLE_PATIENT: new Sc,
                HEALTHCARE_VEHICLE_TITLE: new Cc,
                HIGHTLY_EDUCATED: new Sc,
                HOUSEHOLDS: new Sc,
                HOUSEHOLD_MEMBERS: new Sc,
                LEVEL: new Sc,
                LEVEL_MAX: new Sc,
                LEVEL_PROGRESS: new Sc,
                LINE: new Sc,
                LINES: new Sc,
                LINE_USAGE: new Sc,
                LINE_VISUALIZER_LENGTH: new Sc,
                LINE_VISUALIZER_STOPS: new Sc,
                LINE_VISUALIZER_TITLE: new Sc,
                LINE_VISUALIZER_VEHICLES: new Sc,
                LOAD_TITLE: new Cc,
                LOCAL_SERVICES_NONE_ASSIGNED: new Sc,
                LOCAL_SERVICES_TITLE: new Sc,
                LOT_TOOL_TOOLTIP: new Sc,
                MAIL_PROCESSING_SPEED: new Sc,
                MAIL_SORTING_SPEED: new Sc,
                MAIL_STORED_MAIL: new Cc,
                MAIL_TITLE: new Sc,
                MAIL_VEHICLES: new Cc,
                MAINTENANCED_VEHICLES: new Sc,
                MAINTENANCE_VEHICLE_TITLE: new Sc,
                MAIN_BUILDING: new Sc,
                MAX_FOLLOWED_CITIZENS_REACHED: new Sc,
                NEXT_STOP: new Sc,
                NOISE_POLLUTION: new Sc,
                NOTIFICATIONS: new Sc,
                NO_ACTIVE_POLICIES: new Sc,
                OPEN_POSITIONS: new Sc,
                OPERATING_DISTRICTS: new Sc,
                ORIGIN: new Sc,
                OUTSIDE_CONNECTION: new Sc,
                OUT_OF_SERVICE: new Sc,
                OWNED_BY: new Sc,
                PARKING_FEE: new Sc,
                PARKING_PARKED: new Sc,
                PARKING_TITLE: new Sc,
                PARK_MAINTENANCE: new Sc,
                PARK_TITLE: new Sc,
                PASSENGERS: new Cc,
                PASSENGERS_TITLE: new Sc,
                PASSENGERS_TOOLTIP: new Sc,
                POLICE_PRISONERS: new Sc,
                POLICE_TITLE: new Sc,
                POLICE_VEHICLES: new Cc,
                POLICE_VEHICLE_CRIMINAL: new Sc,
                POLICE_VEHICLE_TITLE: new Cc,
                POLICIES: new Sc,
                POLLUTION: new Sc,
                POLLUTION_LEVELS: new Nc,
                POLLUTION_LEVELS_AIR: new Sc,
                POLLUTION_LEVELS_GROUND: new Sc,
                POLLUTION_LEVELS_NOISE: new Sc,
                POORLY_EDUCATED: new Sc,
                POST_VEHICLE_TITLE: new Sc,
                PRISON_PRISONERS: new Sc,
                PRISON_TITLE: new Sc,
                PRISON_VEHICLES: new Cc,
                PRIVATE_VEHICLE_TITLE: new Cc,
                PRODUCTION: new Sc,
                PUBLIC_TRANSPORT_LINE: new Sc,
                PUBLIC_TRANSPORT_VEHICLE_TITLE: new Cc,
                REACTIVATE_UPGRADE: new Sc,
                REBUILD: new Sc,
                RELOCATE: new Sc,
                RELOCATE_UPGRADE: new Sc,
                REMOVE_OPERATING_DISTRICT: new Sc,
                REMOVE_UPGRADE: new Sc,
                RESIDENTS: new Sc,
                RESOURCE: new Cc,
                ROAD_CONDITION: new Sc,
                ROAD_CONDITION_FORMAT: new Sc("WORST", "BEST", "AVG"),
                ROAD_LENGTH: new Sc,
                ROAD_TRAFFIC_FLOW: new Sc,
                ROAD_TRAFFIC_VOLUME: new Sc,
                ROAD_UPKEEP: new Sc,
                ROUTE: new Sc,
                SCHEDULE: new Sc,
                SCHEDULE_CONTINUOUS_TOOLTIP: new Cc,
                SCHEDULE_DAY_TOOLTIP: new Cc,
                SCHEDULE_NIGHT_TOOLTIP: new Cc,
                SELECT_OPERATING_DISTRICT: new Sc,
                SELECT_UPGRADE: new Sc,
                SELECT_VEHICLE: new Sc,
                SELECT_VEHICLE_SECONDARY: new Cc,
                SEWAGE_OUTLET_USAGE: new Sc,
                SEWAGE_PROCESSING_CAPACITY: new Sc,
                SEWAGE_PURIFICATION_RATE: new Sc,
                SEWAGE_STORAGE: new Sc,
                SEWAGE_TITLE: new Sc,
                SHELTER_OCCUPANTS: new Sc,
                SHELTER_TITLE: new Sc,
                SHELTER_VEHICLES: new Cc,
                STOP_EMPTYING: new Sc,
                SUB_BUILDINGS: new Sc,
                TICKET_PRICE: new Sc,
                TICKET_PRICE_FREE: new Sc,
                TOOLTIP: new Cc,
                TOOLTIP_TITLE: new Cc,
                TRAFFIC_ACCIDENT: new Sc,
                UNDER_CONSTRUCTION: new Sc,
                UNEDUCATED: new Sc,
                UNFOCUS: new Sc,
                UNFOCUS_UPGRADE: new Sc,
                UNFOLLOW_CITIZEN: new Sc,
                UPGRADE: new Sc,
                UPGRADES: new Sc,
                UPGRADE_ALREADY_BUILT: new Sc,
                UPGRADE_LOCKED: new Sc,
                UPGRADE_LOCKED_LABEL: new Sc,
                UPGRADE_NO_MONEY_LABEL: new Sc,
                UPGRADE_PURCHASED_LABEL: new Sc,
                UPGRADE_TYPE: new Cc,
                UPGRADE_TYPE_LABEL: new Cc,
                UPKEEP: new Sc,
                UPKEEPFORMAT: new Sc("RESOURCE", "AMOUNT"),
                UPKEEP_MAINTENANCE: new Sc("BUILDING"),
                UPKEEP_MAINTENANCE_COMBINED: new Sc("BUILDING", "AMOUNT"),
                UPKEEP_MAINTENANCE_INACTIVE: new Sc("BUILDING"),
                UPKEEP_MAINTENANCE_INACTIVE_COMBINED: new Sc("BUILDING", "AMOUNT"),
                UPKEEP_TOTAL: new Sc,
                VEHICLES: new Cc,
                VEHICLE_COUNT: new Sc,
                VEHICLE_STATE: new Sc,
                VEHICLE_STATES: new Cc,
                WAGES: new Sc,
                WAITING_PASSENGERS: new Sc,
                WAREHOUSE_STORAGE: new Sc,
                WATER_OUTPUT: new Sc,
                WATER_PUMPING_CAPACITY: new Sc,
                WATER_PUMP_POLLUTION: new Sc,
                WATER_PUMP_USAGE: new Sc,
                WATER_STORAGE: new Sc,
                WATER_STORAGE_CHANGE: new Sc("TIME", "CHANGE"),
                WATER_STORAGE_FULL_IN: new Sc,
                WATER_STORAGE_LASTS: new Sc,
                WATER_TITLE: new Sc,
                WELL_EDUCATED: new Sc,
                WORKPLACES: new Sc,
                WORKPLACE_COUNT: new Sc("AMOUNT"),
                WORK_SHIFT: new Sc
            },
            Services: {
                DESCRIPTION: new Cc,
                NAME: new Cc
            },
            Statistics: {
                PANEL_TITLE: new Sc,
                STATISTIC: new Cc
            },
            StatisticsPanel: {
                STAT_TITLE: new Cc,
                TIME_SCALE: new Nc,
                TIME_SCALE_NOW: new Sc,
                TIME_SCALE_TITLE: new Sc
            },
            SubServices: {
                NAME: new Cc
            },
            ToolOptions: {
                COLOR_TITLE: new Cc,
                COLOR_TOOLTIP: new Cc,
                TOOLTIP: new Cc,
                TOOLTIP_CHANGE_BRUSH: new Sc,
                TOOLTIP_DECREASE_BRUSH_HEIGHT: new Sc,
                TOOLTIP_DECREASE_BRUSH_SIZE: new Sc,
                TOOLTIP_DECREASE_BRUSH_STRENGTH: new Sc,
                TOOLTIP_DECREASE_ELEVATION: new Sc,
                TOOLTIP_DESCRIPTION: new Cc,
                TOOLTIP_ELEVATION_STEP: new Sc,
                TOOLTIP_INCREASE_BRUSH_HEIGHT: new Sc,
                TOOLTIP_INCREASE_BRUSH_SIZE: new Sc,
                TOOLTIP_INCREASE_BRUSH_STRENGTH: new Sc,
                TOOLTIP_INCREASE_ELEVATION: new Sc,
                TOOLTIP_ROTATE_BRUSH_CLOCKWISE: new Sc,
                TOOLTIP_ROTATE_BRUSH_COUNTER_CLOCKWISE: new Sc,
                TOOLTIP_SNAP_ALL: new Sc,
                TOOLTIP_TITLE: new Cc
            },
            Toolbar: {
                ASSET_ALREADY_BUILT: new Sc,
                ASSET_PACKS_PANEL_TITLE: new Sc,
                BRUSH: new Sc,
                BRUSH_ANGLE: new Sc,
                BRUSH_HEIGHT: new Sc,
                BRUSH_SIZE: new Sc,
                BRUSH_STRENGTH: new Sc,
                CALENDAR_PANEL_TOGGLE_TOOLTIP: new Sc,
                CHIRPER_PANEL_TOGGLE_TOOLTIP: new Sc,
                CITY_INFO_PANEL_TOGGLE_TOOLTIP: new Sc,
                CITY_NAME_FIELD_TOOLTIP: new Sc,
                CONTOUR_LINES_TITLE: new Sc,
                CURRENT_TREND: new Sc,
                DECREASE_PARALLEL_OFFSET: new Sc,
                ECONOMY_PANEL_TOGGLE_TOOLTIP: new Sc,
                ELEVATION_TITLE: new Sc,
                INCREASE_PARALLEL_OFFSET: new Sc,
                JOURNAL_PANEL_TOGGLE_TOOLTIP: new Sc,
                LIFEPATH_PANEL_TOGGLE_TOOLTIP: new Sc,
                MAP_TILE_PURCHASE_TOGGLE_TOOLTIP: new Sc,
                MONEY_FIELD_TOOLTIP: new Sc,
                PARALLEL_MODE_TITLE: new Sc,
                PARALLEL_OFFSET_TITLE: new Sc,
                PARALLEL_ROAD_TITLE: new Sc,
                PAUSE_BUTTON_TOOLTIP: new Sc,
                PHOTO_MODE_TOGGLE_TOOLTIP: new Sc,
                PLAY_BUTTON_TOOLTIP: new Sc,
                POPULATION_FIELD_TOOLTIP: new Sc,
                PROGRESSION_PANEL_TOGGLE_TOOLTIP: new Sc,
                SIMULATION_PAUSED: new Sc,
                SNAPPING_TITLE: new Sc,
                SPEED_BUTTON_TOOLTIP: new Sc,
                STATISTICS_PANEL_TOGGLE_TOOLTIP: new Sc,
                THEME_PANEL_TITLE: new Sc,
                TOGGLE_PARALLEL_MODE: new Sc,
                TOGGLE_UNDERGROUND_MODE: new Sc,
                TOOL_MODE_TITLE: new Sc,
                TOOL_OPTIONS_PANEL_TITLE: new Sc,
                UNDERGROUND_MODE_TITLE: new Sc,
                VEGETATION_AGE_PANEL_TITLE: new Sc,
                XP_MESSAGE: new Sc("XP", "REASON"),
                XP_PROGRESS: new Sc("CURRENT", "NEXT")
            },
            Tools: {
                BATTERY_CHARGE: new Sc,
                BATTERY_FLOW: new Sc,
                CONFIRM_BULLDOZE_WARNING: new Sc,
                CONSTRUCTION_COST_LABEL: new Sc,
                ELECTRICITY_CONSUMPTION_LABEL: new Sc,
                ELECTRICITY_FLOW_LABEL: new Sc,
                ELECTRICITY_PRODUCTION_LABEL: new Sc,
                EXTRACTOR_CLIMATE_REQUIRED_AVAILABLE: new Sc,
                EXTRACTOR_CLIMATE_REQUIRED_UNAVAILABLE: new Sc,
                EXTRACTOR_MAP_FEATURE_REQUIRED_AVAILABLE: new Sc,
                EXTRACTOR_MAP_FEATURE_REQUIRED_MISSING: new Sc,
                EXTRACTOR_PRODUCTION_DEFICIT: new Sc,
                EXTRACTOR_PRODUCTION_SURPLUS: new Sc,
                GROUNDWATER_VOLUME: new Sc,
                GROUND_WATER_RESERVOIR_USAGE: new Sc,
                INFO: new Cc,
                MOVING_OBJECT: new Sc("OBJECT"),
                REFUND_AMOUNT_LABEL: new Sc,
                RESOURCES_LABEL: new Sc,
                SELECTING_DISTRICTS: new Sc,
                SEWAGE_CONSUMPTION_LABEL: new Sc,
                SEWAGE_FLOW_LABEL: new Sc,
                STORAGECAPACITY_LABEL: new Sc,
                TOOL_MODE: new Cc,
                WARNING: new Cc,
                WATER_CONSUMPTION_LABEL: new Sc,
                WATER_FLOW_LABEL: new Sc,
                WATER_OUTPUT_LABEL: new Sc,
                WATER_REFRESH_RATE_LABEL: new Sc
            },
            TourismInfoPanel: {
                ATTRACTIVENESS: new Sc,
                AVERAGE_HOTEL_PRICE: new Sc,
                TOURISM_RATE: new Sc,
                WEATHER_EFFECT: new Sc
            },
            Transport: {
                LEGEND_ACTIVE: new Sc,
                LEGEND_ACTIVITY: new Sc,
                LEGEND_CARGO: new Sc,
                LEGEND_COLOR: new Sc,
                LEGEND_DELETE: new Sc,
                LEGEND_FOCUS: new Sc,
                LEGEND_LENGTH: new Sc,
                LEGEND_NAME: new Sc,
                LEGEND_PASSENGERS: new Cc,
                LEGEND_SHOW: new Sc,
                LEGEND_STOPS: new Cc,
                LEGEND_USAGE: new Sc,
                LEGEND_VEHICLES: new Cc,
                LEGEND_VISIBLE: new Sc,
                LINES: new Cc,
                LINES_OVERVIEW_BUTTON: new Sc,
                LINES_OVERVIEW_TITLE: new Sc,
                NO_LINES: new Sc,
                NO_ROUTES: new Sc,
                ROUTES: new Cc,
                TAB: new Cc,
                TOOLTIP_ACTIVE: new Cc,
                TOOLTIP_COLOR: new Cc,
                TOOLTIP_DELETE: new Cc,
                TOOLTIP_DETAILS: new Cc,
                TOOLTIP_SCHEDULE: new Cc,
                TOOLTIP_VISIBLE: new Cc
            },
            TransportInfoPanel: {
                CARGO_LABEL: new Sc,
                CARGO_TRANSPORT_TITLE: new Sc,
                CITIZENS: new Sc,
                LINES: new Sc,
                PUBLIC_TRANSPORT_TITLE: new Sc,
                ROUTES_LABEL: new Sc,
                SUMMARY_TOOLTIP_CARGO: new Cc,
                SUMMARY_TOOLTIP_PUBLICTRANSPORT: new Cc,
                TOTAL: new Sc,
                TOURISTS: new Sc
            },
            Tutorials: {
                ADVISOR_TITLE: new Sc,
                BEFORE_STARTING: new Sc,
                BEFORE_STARTING_CONFIRM: new Sc,
                BEGIN_WITH_TUTORIALS: new Sc,
                BUTTON_TOOLTIP_DONE: new Sc,
                BUTTON_TOOLTIP_NEXT: new Sc,
                BUTTON_TOOLTIP_PREVIOUS: new Sc,
                DESCRIPTION: new Cc,
                DISABLE_CONFIRMATION_TEXT: new Sc,
                DISABLE_CONFIRMATION_TEXT_GAMEPAD: new Sc,
                ENABLE_TUTORIALS_CONFIRM: new Sc,
                HINTS_TITLE: new Sc,
                INTRO: new Sc,
                INTRO_SUBTITLE: new Sc,
                INTRO_TITLE: new Sc,
                LIST_REMINDER_DESCRIPTION: new Sc,
                LIST_REMINDER_TITLE: new Sc,
                TASKS: new Sc,
                TITLE: new Cc,
                TODO_INTRO: new Sc,
                TODO_INTRO_CONFIRM: new Sc,
                TODO_OUTRO: new Sc,
                TODO_OUTRO_CONTINUE: new Sc,
                TODO_OUTRO_GAMEPAD: new Sc,
                TODO_OUTRO_NEW_CITY: new Sc,
                TRIGGER: new Cc
            },
            UpgradesMenu: {
                TITLE: new Sc
            },
            VirtualKeyboard: {
                TITLE: new Cc
            },
            WaterInfoPanel: {
                SEWAGE_TRADE: new Sc,
                SEWAGE_TREATMENT: new Sc,
                STORMWATER_TREATMENT: new Sc,
                WATER_AVAILABILITY: new Sc,
                WATER_EXPORT: new Sc,
                WATER_IMPORT: new Sc,
                WATER_STORAGE: new Sc,
                WATER_TRADE: new Sc
            },
            WaterPollutionInfoPanel: {
                AVERAGE_WATER_POLLUTION: new Sc
            },
            WhatsNew: {
                BEACH_PROPERTIES_P1_DESCRIPTION: new Sc,
                BEACH_PROPERTIES_P1_HEADER: new Sc,
                BEACH_PROPERTIES_P1_TITLE: new Sc,
                BEACH_PROPERTIES_P2_DESCRIPTION: new Sc,
                BEACH_PROPERTIES_P2_HEADER: new Sc,
                BEACH_PROPERTIES_P2_TITLE: new Sc,
                BEACH_PROPERTIES_P3_DESCRIPTION: new Sc,
                BEACH_PROPERTIES_P3_HEADER: new Sc,
                BEACH_PROPERTIES_P3_TITLE: new Sc,
                WHATS_NEW: new Sc
            },
            WorkplacesInfoPanel: {
                AVAILABILITY: new Sc,
                WORKERS: new Sc,
                WORKPLACES: new Sc,
                WORKPLACE_DISTRIBUTION: new Sc
            },
            ZoningFactors: {
                NEGATIVE: new Cc,
                PANEL_TITLE: new Sc,
                POSITIVE: new Cc
            }
        });

        function Lc(e) {
            return 9 * e / 5 + 32
        }

        function Ac(e) {
            return e + 273.16
        }

        function Mc(e) {
            return 264.172 * e
        }

        function Rc(e) {
            return e / .45359237
        }

        function kc(e) {
            return e / 907.18474
        }

        function Dc(e) {
            return e / .9144
        }

        function Fc(e) {
            return e / 1.609344
        }

        function Uc(e) {
            return e / .092903
        }

        function Bc(e) {
            return e / 4046.873
        }
        X.add("game-ui/common/localization/loc.generated.ts", {
                get Loc() {
                    return Pc
                },
                set Loc(e) {
                    Pc = e
                }
            }),
            function (e) {
                e.Integer = "integer", e.IntegerRounded = "integerRounded", e.IntegerPerMonth = "integerPerMonth", e.IntegerPerHour = "integerPerHour", e.FloatSingleFraction = "floatSingleFraction", e.FloatTwoFractions = "floatTwoFractions", e.FloatThreeFractions = "floatThreeFractions", e.Percentage = "percentage", e.PercentageSingleFraction = "percentageSingleFraction", e.Angle = "angle", e.Length = "length", e.Area = "area", e.Volume = "volume", e.VolumePerMonth = "volumePerMonth", e.Weight = "weight", e.WeightPerCell = "weightPerCell", e.WeightPerMonth = "weightPerMonth", e.Power = "power", e.Energy = "energy", e.DataRate = "dataRate", e.DataBytes = "dataBytes", e.DataMegabytes = "dataMegabytes", e.Money = "money", e.MoneyPerCell = "moneyPerCell", e.MoneyPerMonth = "moneyPerMonth", e.MoneyPerHour = "moneyPerHour", e.MoneyPerDistance = "moneyPerDistance", e.MoneyPerDistancePerMonth = "moneyPerDistancePerMonth", e.BodiesPerMonth = "bodiesPerMonth", e.XP = "xp", e.Temperature = "temperature", e.NetElevation = "netElevation", e.ScreenFrequency = "screenFrequency", e.Custom = "custom"
            }(Oc || (Oc = {})), X.add("game-ui/common/localization/unit.ts", {
                get Unit() {
                    return Oc
                },
                set Unit(e) {
                    Oc = e
                }
            }), X.add("game-ui/common/localization/units-us-customary.ts", {
                get fahrenheit() {
                    return Lc
                },
                set fahrenheit(e) {
                    Lc = e
                },
                get kelvin() {
                    return Ac
                },
                set kelvin(e) {
                    Ac = e
                },
                get gallons() {
                    return Mc
                },
                set gallons(e) {
                    Mc = e
                },
                get pounds() {
                    return Rc
                },
                set pounds(e) {
                    Rc = e
                },
                get shortTons() {
                    return kc
                },
                set shortTons(e) {
                    kc = e
                },
                get yards() {
                    return Dc
                },
                set yards(e) {
                    Dc = e
                },
                get miles() {
                    return Fc
                },
                set miles(e) {
                    Fc = e
                },
                get squareFeet() {
                    return Uc
                },
                set squareFeet(e) {
                    Uc = e
                },
                get acres() {
                    return Bc
                },
                set acres(e) {
                    Bc = e
                }
            });
        var Gc = uc("LocalizedNumber", ((e, {
                value: t,
                unit: n = Oc.Integer,
                signed: s = !1
            }) => Wc(n)(e, t, s)), ((e, t) => e.value === t.value && e.unit === t.unit && e.signed === t.signed)),
            Vc = uc("LocalizedNumber", ((e, {
                value: t,
                unit: n = Oc.Integer,
                signed: s = !1,
                unitFormat: i,
                fractionDigits: a,
                separateThousands: o,
                maxValueWithFraction: r
            }) => Wc(n)(e, t, s, i, a, o, r)), ((e, t) => e.value === t.value && e.unit === t.unit && e.signed === t.signed));
        const Hc = uc("DefaultFormat", ((e, t) => rc(e, t.SIGN) + rc(e, t.VALUE)), (() => !0));

        function Kc(e, t) {
            const n = ac();
            return (0, Y.useMemo)((() => {
                const s = Wc(e);
                return e => s(n, e, t)
            }), [n, t, e])
        }

        function Wc(e) {
            return zc[e] ?? ((t, n) => `${n} <${e}>`)
        }
        const zc = {
            [Oc.Custom]: (e, t, n, s, i, a, o) => 0 === i ? void 0 !== s ? qc(e, t, s, n, a) : Yc(e, t, n, a) : void 0 !== s ? Jc(e, t, s, n, i, a, !0, o) : Xc(e, t, n, i, a, !0, o),
            [Oc.Integer]: (e, t, n) => Yc(e, t, n, !0),
            [Oc.IntegerRounded]: (e, t, n) => Math.abs(t) < 1e3 ? Yc(e, t, n, !0) : Math.abs(t) < 1e6 ? Jc(e, t / 1e3, Pc.Common.VALUE_THOUSAND, n, 1) : Jc(e, t / 1e6, Pc.Common.VALUE_MILLION, n, 1),
            [Oc.IntegerPerMonth]: (e, t, n) => qc(e, t, Pc.Common.VALUE_PER_MONTH, n),
            [Oc.IntegerPerHour]: (e, t, n) => qc(e, t, Pc.Common.VALUE_PER_HOUR, n),
            [Oc.FloatSingleFraction]: (e, t, n) => Xc(e, t, n, 1),
            [Oc.FloatTwoFractions]: (e, t, n) => Xc(e, t, n, 2),
            [Oc.FloatThreeFractions]: (e, t, n) => Xc(e, t, n, 3),
            [Oc.ScreenFrequency]: (e, t, n) => Xc(e, t, n, 3, !1, !0, 1e3),
            [Oc.Percentage]: (e, t, n) => qc(e, t, Pc.Common.VALUE_PERCENT, n, !1),
            [Oc.PercentageSingleFraction]: (e, t, n) => Jc(e, t, Pc.Common.VALUE_PERCENT, n, 1, !1),
            [Oc.Length]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? Math.abs(t) < 1e3 ? qc(e, t, Pc.Common.VALUE_METER, n) : Jc(e, t / 1e3, Pc.Common.VALUE_KILOMETER, n, 1) : Math.abs(t) < 1609 ? qc(e, Dc(t), Pc.Common.VALUE_YARD, n) : Jc(e, Fc(t / 1e3), Pc.Common.VALUE_MILE, n, 1),
            [Oc.NetElevation]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? Jc(e, t, Pc.Common.VALUE_METER, n, 2) : Jc(e, 3 * t, Pc.Common.VALUE_FOOT, n, 2),
            [Oc.Area]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? Math.abs(t) < 1e5 ? qc(e, t, Pc.Common.VALUE_SQUARE_METER, n) : Jc(e, t / 1e6, Pc.Common.VALUE_SQUARE_KILOMETER, n, 1) : Math.abs(t) < 1e5 ? qc(e, Uc(t), Pc.Common.VALUE_SQUARE_FOOT, n) : Jc(e, Bc(t), Pc.Common.VALUE_ACRE, n, 1),
            [Oc.Volume]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? Jc(e, t, Pc.Common.VALUE_CUBIC_METER, n, 1) : qc(e, Mc(t), Pc.Common.VALUE_GALLON, n),
            [Oc.VolumePerMonth]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? Jc(e, t, Pc.Common.VALUE_CUBIC_METER_PER_MONTH, n, 1) : Jc(e, Mc(t), Pc.Common.VALUE_GALLON_PER_MONTH, n, 1),
            [Oc.Weight]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? Math.abs(t) < 100 ? qc(e, t, Pc.Common.VALUE_KILOGRAM, n) : Math.abs(t) < 1e7 ? Jc(e, t / 1e3, Pc.Common.VALUE_TON, n, 1) : Jc(e, t / 1e6, Pc.Common.VALUE_KILOTON, n, 1) : Math.abs(t) < 100 ? qc(e, Rc(t), Pc.Common.VALUE_POUND, n) : Math.abs(t) < 9071847.4 ? Jc(e, kc(t), Pc.Common.VALUE_SHORT_TON, n, 1) : Jc(e, kc(t) / 1e6, Pc.Common.VALUE_SHORT_KILOTON, n, 1),
            [Oc.WeightPerCell]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? Jc(e, t / 1e3, Pc.Common.VALUE_TON_PER_CELL, n, 1) : Jc(e, kc(t), Pc.Common.VALUE_SHORT_TON_PER_CELL, n, 1),
            [Oc.WeightPerMonth]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? Math.abs(t) < 100 ? Jc(e, t, Pc.Common.VALUE_KG_PER_MONTH, n, 1) : Jc(e, t / 1e3, Pc.Common.VALUE_TON_PER_MONTH, n, 1) : Math.abs(t) < 100 ? Jc(e, Rc(t), Pc.Common.VALUE_POUND_PER_MONTH, n, 1) : Jc(e, kc(t), Pc.Common.VALUE_SHORT_TON_PER_MONTH, n, 1),
            [Oc.Power]: (e, t, n) => Math.abs(t) < 1e4 ? Jc(e, t / 10, Pc.Common.VALUE_KILOWATT, n, 1) : Jc(e, t / 1e4, Pc.Common.VALUE_MEGAWATT, n, 2),
            [Oc.Energy]: (e, t, n) => Jc(e, t / 1e4, Pc.Common.VALUE_MEGAWATT_HOURS, n, 1),
            [Oc.DataRate]: (e, t, n) => Jc(e, t, Pc.Common.VALUE_GIGABIT_PER_SECOND, n, 1),
            [Oc.DataBytes]: (e, t, n) => nu(e, t, eu, n, 1),
            [Oc.DataMegabytes]: (e, t, n) => nu(e, 1024 * t * 1024, tu, n, 1),
            [Oc.Money]: (e, t, n) => qc(e, t, Pc.Common.VALUE_MONEY, n),
            [Oc.MoneyPerCell]: (e, t, n) => Jc(e, t, Pc.Common.VALUE_MONEY_PER_CELL, n, 1),
            [Oc.MoneyPerMonth]: (e, t, n) => qc(e, t, Pc.Common.VALUE_MONEY_PER_MONTH, n),
            [Oc.MoneyPerHour]: (e, t, n) => qc(e, t, Pc.Common.VALUE_MONEY_PER_HOUR, n),
            [Oc.MoneyPerDistance]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? qc(e, t, Pc.Common.VALUE_MONEY_PER_KILOMETER, n) : qc(e, t / 1.6, Pc.Common.VALUE_MONEY_PER_MILE, n),
            [Oc.MoneyPerDistancePerMonth]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? qc(e, t, Pc.Common.VALUE_MONEY_PER_KILOMETER_PER_MONTH, n) : qc(e, t / 1.6, Pc.Common.VALUE_MONEY_PER_MILE_PER_MONTH, n),
            [Oc.XP]: (e, t, n) => qc(e, t, Pc.Common.VALUE_XP, n),
            [Oc.Temperature]: (e, t, n) => {
                switch (e.unitSettings.temperatureUnit) {
                case $l.Celsius:
                    return qc(e, t, Pc.Common.VALUE_CELSIUS, n);
                case $l.Fahrenheit:
                    return qc(e, Lc(t), Pc.Common.VALUE_FAHRENHEIT, n);
                case $l.Kelvin:
                    return qc(e, Ac(t), Pc.Common.VALUE_KELVIN, n)
                }
            },
            [Oc.Angle]: (e, t, n) => Jc(e, t, Pc.Common.VALUE_ANGLE, n, 1)
        };

        function Yc(e, t, n = !1, s = !0) {
            return qc(e, t, Hc, n, s)
        }
        const $c = /\B(?=(\d{3})+(?!\d))/g;

        function qc(e, t, n, s = !1, i = !0) {
            let a = Math.abs(t).toFixed(0);
            var o = su(Math.sign(t) * Number.parseInt(a), s);
            if (i) {
                const t = Pc.Common.THOUSANDS_SEPARATOR.renderString(e, {});
                a = a.replace($c, t)
            }
            return n.renderString(e, {
                SIGN: o,
                VALUE: a
            })
        }

        function Xc(e, t, n = !1, s = 1, i = !0, a = !0, o = 100) {
            return Jc(e, t, Hc, n, s, i, a, o)
        }
        const Qc = /\.0+$|(\.\d*?[1-9])0+$/g,
            Zc = /\B(?=(?<!\.\d*)(\d{3})+(?!\d))/g;

        function Jc(e, t, n, s = !1, i = 1, a = !0, o = !0, r = 100) {
            let l, c = Math.abs(t);
            if (c < r) {
                const e = Math.pow(10, -i);
                0 !== c && c < e && (c = e), l = c.toFixed(i), o && (l = l.replace(Qc, "$1"))
            } else l = c.toFixed(0);
            const u = su(Math.sign(t) * Number.parseFloat(l), s);
            if (a) {
                const t = Pc.Common.THOUSANDS_SEPARATOR.renderString(e, {});
                l = l.replace(Zc, t)
            }
            const d = Pc.Common.DECIMAL_SEPARATOR.renderString(e, {});
            return l = l.replace(".", d), n.renderString(e, {
                SIGN: u,
                VALUE: l
            })
        }
        const eu = [
                [0, Pc.Common.VALUE_BYTE],
                [1, Pc.Common.VALUE_KILOBYTE],
                [2, Pc.Common.VALUE_MEGABYTE],
                [3, Pc.Common.VALUE_GIGABYTE],
                [4, Pc.Common.VALUE_TERABYTE]
            ],
            tu = [
                [2, Pc.Common.VALUE_MEGABYTE],
                [3, Pc.Common.VALUE_GIGABYTE],
                [4, Pc.Common.VALUE_TERABYTE]
            ];

        function nu(e, t, n, s = !1, i = 1, a = !0, o = !0) {
            let r = n[n.length - 1][1],
                l = t / Math.pow(1024, n[n.length - 1][0]);
            for (let e = 0; e < n.length; ++e) {
                const s = Math.pow(1024, n[e][0]);
                if (Math.abs(t) < 512 * s) {
                    r = n[e][1], l = t / s;
                    break
                }
            }
            return Jc(e, l, r, s, i, a, o)
        }

        function su(e, t) {
            return e < 0 ? "-" : e > 0 ? t ? "+" : "" : t ? "±" : ""
        }
        var iu = (e, t, n = Oc.Integer, s) => Wc(n)(e, t, s);
        X.add("game-ui/common/localization/localized-number.tsx", {
            get LocalizedNumber() {
                return Gc
            },
            set LocalizedNumber(e) {
                Gc = e
            },
            get CustomLocalizedNumber() {
                return Vc
            },
            set CustomLocalizedNumber(e) {
                Vc = e
            },
            get useNumberFormat() {
                return Kc
            },
            set useNumberFormat(e) {
                Kc = e
            },
            get formatInteger() {
                return Yc
            },
            set formatInteger(e) {
                Yc = e
            },
            get formatFloat() {
                return Xc
            },
            set formatFloat(e) {
                Xc = e
            },
            get sign() {
                return su
            },
            set sign(e) {
                su = e
            },
            get renderFormattedNumber() {
                return iu
            },
            set renderFormattedNumber(e) {
                iu = e
            }
        });
        var au = uc("LocalizedBounds", ((e, {
            min: t,
            max: n,
            unit: s = Oc.Integer
        }) => t !== n ? function (e) {
            return ou[e] ?? ((t, n, s) => `${n}–${s} <${e}>`)
        }(s)(e, t, n) : Gc.renderString(e, {
            value: n,
            unit: s
        })), ((e, t) => e.min === t.min && e.max === t.max && e.unit === t.unit));
        const ou = {
            [Oc.Power]: (e, t, n) => Math.abs(n) < 1e4 ? lu(e, t / 10, n / 10, Pc.Common.BOUNDS_KILOWATT, 1) : lu(e, t / 1e4, n / 1e4, Pc.Common.BOUNDS_MEGAWATT, 1),
            [Oc.PercentageSingleFraction]: (e, t, n) => lu(e, t, n, Pc.Common.BOUNDS_PERCENT, 1),
            [Oc.Temperature]: (e, t, n) => {
                switch (e.unitSettings.temperatureUnit) {
                case $l.Celsius:
                    return ru(e, t, n, Pc.Common.BOUNDS_CELSIUS);
                case $l.Fahrenheit:
                    return ru(e, Lc(t), Lc(n), Pc.Common.BOUNDS_FAHRENHEIT);
                case $l.Kelvin:
                    return ru(e, Ac(t), Ac(n), Pc.Common.BOUNDS_KELVIN)
                }
            }
        };

        function ru(e, t, n, s, i = !0) {
            return s.renderString(e, {
                MIN: Yc(e, t, !1, i),
                MAX: Yc(e, n, !1, i)
            })
        }

        function lu(e, t, n, s, i = 1, a = !0, o = !0) {
            return s.renderString(e, {
                MIN: Xc(e, t, !1, i, a, o),
                MAX: Xc(e, n, !1, i, a, o)
            })
        }
        X.add("game-ui/common/localization/localized-bounds.tsx", {
            get LocalizedBounds() {
                return au
            },
            set LocalizedBounds(e) {
                au = e
            }
        });
        var cu = uc("LocalizedFraction", ((e, {
            value: t,
            total: n,
            unit: s = Oc.Integer
        }) => function (e) {
            return uu[e] ?? ((t, n, s) => `${n} / ${s} <${e}>`)
        }(s)(e, t, n)), ((e, t) => e.value === t.value && e.total === t.total && e.unit === t.unit));
        const uu = {
            [Oc.Volume]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? mu(e, t, n, Pc.Common.FRACTION_CUBIC_METER, 1) : mu(e, Mc(t), Mc(n), Pc.Common.FRACTION_GALLON, 1),
            [Oc.VolumePerMonth]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? mu(e, t, n, Pc.Common.FRACTION_CUBIC_METER_PER_MONTH, 1) : mu(e, Mc(t), Mc(n), Pc.Common.FRACTION_GALLON_PER_MONTH, 1),
            [Oc.Weight]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? Math.abs(n) < 100 ? du(e, t, n, Pc.Common.FRACTION_KG) : mu(e, t / 1e3, n / 1e3, Pc.Common.FRACTION_TON, 2) : Math.abs(n) < 100 ? du(e, Rc(t), Rc(n), Pc.Common.FRACTION_POUND) : mu(e, kc(t), kc(n), Pc.Common.FRACTION_SHORT_TON, 2),
            [Oc.WeightPerMonth]: (e, t, n) => e.unitSettings.unitSystem === ql.Metric ? Math.abs(n) < 100 ? du(e, t, n, Pc.Common.FRACTION_KG_PER_MONTH) : mu(e, t / 1e3, n / 1e3, Pc.Common.FRACTION_TON_PER_MONTH, 2) : Math.abs(n) < 100 ? du(e, Rc(t), Rc(n), Pc.Common.FRACTION_POUND_PER_MONTH) : mu(e, kc(t), kc(n), Pc.Common.FRACTION_SHORT_TON_PER_MONTH, 2),
            [Oc.Power]: (e, t, n) => Math.abs(n) < 1e4 ? mu(e, t / 10, n / 10, Pc.Common.FRACTION_KILOWATT, 1) : mu(e, t / 1e4, n / 1e4, Pc.Common.FRACTION_MEGAWATT, 2),
            [Oc.Energy]: (e, t, n) => Math.abs(n) < 1e4 ? mu(e, t / 10, n / 10, Pc.Common.FRACTION_KILOWATT_HOURS, 1) : mu(e, t / 1e4, n / 1e4, Pc.Common.FRACTION_MEGAWATT_HOURS, 2),
            [Oc.BodiesPerMonth]: (e, t, n) => du(e, t, n, Pc.Common.FRACTION_BODIES_PER_MONTH),
            [Oc.XP]: (e, t, n) => du(e, t, n, Pc.Common.FRACTION_XP),
            [Oc.Integer]: (e, t, n) => du(e, t, n, Pc.Common.FRACTION_INTEGER),
            [Oc.IntegerPerMonth]: (e, t, n) => du(e, t, n, Pc.Common.FRACTION_INTEGER_PER_MONTH)
        };

        function du(e, t, n, s, i = !0) {
            return s.renderString(e, {
                VALUE: Yc(e, t, !1, i),
                TOTAL: Yc(e, n, !1, i)
            })
        }

        function mu(e, t, n, s, i = 1, a = !0, o = !0) {
            return s.renderString(e, {
                VALUE: Xc(e, t, !1, i, a, o),
                TOTAL: Xc(e, n, !1, i, a, o)
            })
        }
        X.add("game-ui/common/localization/localized-fraction.tsx", {
            get LocalizedFraction() {
                return cu
            },
            set LocalizedFraction(e) {
                cu = e
            }
        });
        var hu = "​",
            gu = uc("Localized", ((e, {
                value: t,
                transformer: n
            }) => {
                const s = pu(e, t);
                return n ? n(s) : s
            }), ((e, t) => fu(e.value, t.value) && e.transformer === t.transformer));

        function pu(e, t) {
            switch (t.__Type) {
            case hc.Bounds:
                return au.renderString(e, t);
            case hc.Fraction:
                return cu.renderString(e, t);
            case hc.Number:
                return Gc.renderString(e, t);
            case hc.String:
                return xu(e, t.id, t.value, t.args);
            default:
                return "<INVALID TYPE>"
            }
        }

        function fu(e, t) {
            if (e.__Type !== t.__Type) return !1;
            switch (e.__Type) {
            case hc.Bounds:
                return au.propsAreEqual(e, t);
            case hc.Fraction:
                return cu.propsAreEqual(e, t);
            case hc.Number:
                return Gc.propsAreEqual(e, t);
            case hc.String:
                return function (e, t) {
                    return e.id === t.id && e.value === t.value && function (e, t) {
                        if (Object.is(e, t)) return !0;
                        if (null == e || null == t) return e === t;
                        const n = Object.keys(e),
                            s = Object.keys(t);
                        if (n.length !== s.length) return !1;
                        return n.every((n => Object.prototype.hasOwnProperty.call(t, n) && fu(e[n], t[n])))
                    }(e.args, t.args)
                }(e, t);
            default:
                return !0
            }
        }

        function xu(e, t, n, s) {
            const i = null != t ? e.translate(t, n) ?? t : n ?? "";
            if (null != s) {
                const t = function (e, t) {
                    return Object.fromEntries(Object.entries(t).map((([t, n]) => [t, pu(e, n)])))
                }(e, s);
                return vl(i, t)
            }
            return i
        }

        function vu(e) {
            return null == e ? "" : e.replace(/\B([A-Z])/g, " $1").replace(/^([a-z])/g, ((e, t) => t.toUpperCase()))
        }

        function _u(e) {
            return null == e ? "" : e.replace(/\B([A-Z])/g, " $1").toUpperCase()
        }

        function bu(e) {
            return e.toFixed(0)
        }

        function Tu(e, t) {
            return e.toFixed(0).padStart(t, "0").substr(0, t)
        }

        function Eu(e) {
            return null == e || 0 === e.length ? "" : 1 === e.length ? e.toUpperCase() : e.charAt(0).toUpperCase() + e.slice(1)
        }
        X.add("game-ui/common/localization/localized.tsx", {
            get ZERO_WIDTH_SPACE() {
                return hu
            },
            set ZERO_WIDTH_SPACE(e) {
                hu = e
            },
            get Localized() {
                return gu
            },
            set Localized(e) {
                gu = e
            },
            get renderLocalized() {
                return pu
            },
            set renderLocalized(e) {
                pu = e
            },
            get renderStringElement() {
                return xu
            },
            set renderStringElement(e) {
                xu = e
            }
        });
        const Iu = ["{VALUE}k", "{VALUE}m", "{VALUE}b"];

        function yu(e) {
            if (Math.abs(Math.round(e)) < 1e3) return e.toFixed(0);
            for (let t = 0; t < Iu.length; ++t) {
                const n = 1e3 * Math.pow(10, 3 * t);
                if (Math.round(Math.abs(e) / n) < 1e3) return vl(Iu[t], {
                    VALUE: (e / n).toFixed(0)
                })
            }
            const t = Math.pow(10, 3 * Iu.length);
            return vl(Iu[Iu.length - 1], {
                VALUE: (e / t).toFixed(0)
            })
        }

        function ju(e) {
            return (0, Y.useMemo)((() => yu(e)), [e])
        }
        X.add("game-ui/common/utils/format.ts", {
            get makePretty() {
                return vu
            },
            set makePretty(e) {
                vu = e
            },
            get makePrettyUppercase() {
                return _u
            },
            set makePrettyUppercase(e) {
                _u = e
            },
            get formatInteger() {
                return bu
            },
            set formatInteger(e) {
                bu = e
            },
            get formatFixedLengthInt() {
                return Tu
            },
            set formatFixedLengthInt(e) {
                Tu = e
            },
            get capitalize() {
                return Eu
            },
            set capitalize(e) {
                Eu = e
            },
            get formatLargeNumber() {
                return yu
            },
            set formatLargeNumber(e) {
                yu = e
            },
            get useFormattedLargeNumber() {
                return ju
            },
            set useFormattedLargeNumber(e) {
                ju = e
            }
        });
        var Su = uc("LocalizedDate", ((e, {
            value: t
        }) => Nu(e, t)), ((e, t) => e.value.month === t.value.month && e.value.year === t.value.year));

        function Cu() {
            const e = ac();
            return (0, Y.useCallback)((t => Nu(e, t)), [e])
        }

        function Nu(e, {
            year: t,
            month: n
        }) {
            return Pc.Common.MEDIUM_DATE_FORMAT.renderString(e, {
                MONTH: Mu(e, n),
                YEAR: t.toFixed()
            })
        }
        var wu = uc("LocalizedTime", ((e, {
            value: t
        }) => Pu(e, t)), ((e, t) => e.value.hour === t.value.hour && e.value.minute === t.value.minute));

        function Ou() {
            const e = ac();
            return (0, Y.useCallback)((t => Pu(e, t)), [e])
        }

        function Pu(e, {
            hour: t,
            minute: n
        }) {
            return e.unitSettings.timeFormat === Yl.TwentyFourHours ? Pc.Common.TIME_FORMAT.renderString(e, {
                HOUR: Tu(t, 2),
                MINUTE: Tu(n, 2)
            }) : Pc.Common.TIME_FORMAT_12.renderString(e, {
                HOUR: Tu(t % 12 || 12, 2),
                MINUTE: Tu(n, 2),
                PERIOD: Du(e, t)
            })
        }
        var Lu = uc("LocalizedDateTime", ((e, {
            value: t
        }) => Au(e, t)), ((e, t) => e.value.month === t.value.month && e.value.year === t.value.year && e.value.hour === t.value.hour && e.value.minute === t.value.minute));

        function Au(e, t) {
            return `${Nu(e,t)} ${Pu(e,t)}`
        }

        function Mu(e, t) {
            return Pc.Common.MONTH_SHORT.renderString(e, {
                index: t
            })
        }
        var Ru = uc("LocalizedTimestamp", ((e, {
            value: t
        }) => function (e, t) {
            const n = e.unitSettings.timeFormat === Yl.TwentyFourHours ? Pc.Common.TIMESTAMP_FORMAT.renderString(e, {}) : Pc.Common.TIMESTAMP_FORMAT_12.renderString(e, {});
            return n.replace(ku, (n => {
                const s = new Date(t);
                switch (n) {
                case "yyyy":
                    return bu(s.getFullYear());
                case "MM":
                    return Tu(s.getMonth() + 1, 2);
                case "M":
                    return bu(s.getMonth() + 1);
                case "dd":
                    return Tu(s.getDate(), 2);
                case "d":
                    return bu(s.getDate());
                case "HH":
                    return Tu(s.getHours(), 2);
                case "H":
                    return bu(s.getHours());
                case "hh":
                    return Tu(s.getHours() % 12 || 12, 2);
                case "h":
                    return bu(s.getHours() % 12 || 12);
                case "mm":
                    return Tu(s.getMinutes(), 2);
                case "aa":
                    return Du(e, s.getHours());
                default:
                    return n
                }
            }))
        }(e, t)), ((e, t) => e.value === t.value));
        const ku = /(yyyy|MM|M|dd|d|HH|H|hh|h|mm|aa)/g;

        function Du(e, t) {
            return t < 12 ? Pc.Common.TIME_PERIOD_AM.renderString(e, {}) : Pc.Common.TIME_PERIOD_PM.renderString(e, {})
        }
        X.add("game-ui/common/localization/localized-date.tsx", {
            get LocalizedDate() {
                return Su
            },
            set LocalizedDate(e) {
                Su = e
            },
            get useDateFormat() {
                return Cu
            },
            set useDateFormat(e) {
                Cu = e
            },
            get formatDate() {
                return Nu
            },
            set formatDate(e) {
                Nu = e
            },
            get LocalizedTime() {
                return wu
            },
            set LocalizedTime(e) {
                wu = e
            },
            get useTimeFormat() {
                return Ou
            },
            set useTimeFormat(e) {
                Ou = e
            },
            get LocalizedDateTime() {
                return Lu
            },
            set LocalizedDateTime(e) {
                Lu = e
            },
            get formatDateTime() {
                return Au
            },
            set formatDateTime(e) {
                Au = e
            },
            get LocalizedTimestamp() {
                return Ru
            },
            set LocalizedTimestamp(e) {
                Ru = e
            }
        });
        var Fu, Uu = uc("LocalizedDuration", ((e, {
            value: t,
            daysPerYear: n,
            maxMonths: s = n
        }) => {
            const i = Math.round(t);
            if (i >= s) {
                const s = Math.round(t / n);
                return 1 !== s ? Pc.Common.VALUE_YEARS.renderString(e, {
                    VALUE: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.Integer
                    })
                }) : Pc.Common.VALUE_YEAR.renderString(e, {
                    VALUE: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.Integer
                    })
                })
            }
            if (i > 1) return Pc.Common.VALUE_MONTHS.renderString(e, {
                VALUE: (0, z.jsx)(Gc, {
                    value: t,
                    unit: Oc.Integer
                })
            });
            if (t > 23.5 / 24) return Pc.Common.VALUE_MONTH.renderString(e, {
                VALUE: (0, z.jsx)(Gc, {
                    value: t,
                    unit: Oc.Integer
                })
            }); {
                const n = Math.floor(24 * t),
                    s = Math.floor(60 * (24 * t - n));
                return Pc.Common.TIME_FORMAT.renderString(e, {
                    HOUR: Tu(n, 2),
                    MINUTE: Tu(s, 2)
                })
            }
        }), ((e, t) => e.value === t.value && e.daysPerYear === t.daysPerYear));

        function Bu(e) {
            return e.__Type
        }

        function Gu(e, t) {
            return null != e && ("string" == typeof e.__Type && e.__Type.match(new RegExp("^" + t + ",?")))
        }

        function Vu(e, t) {
            return {
                ...e,
                __Type: t
            }
        }

        function Hu(e) {
            return Gu(e, Fu.Formatted)
        }
        X.add("game-ui/common/localization/localized-duration.tsx", {
                get LocalizedDuration() {
                    return Uu
                },
                set LocalizedDuration(e) {
                    Uu = e
                }
            }), X.add("game-ui/common/data-binding/binding-utils.ts", {
                get getType() {
                    return Bu
                },
                set getType(e) {
                    Bu = e
                },
                get isBindingType() {
                    return Gu
                },
                set isBindingType(e) {
                    Gu = e
                },
                get typed() {
                    return Vu
                },
                set typed(e) {
                    Vu = e
                }
            }),
            function (e) {
                e.Custom = "names.CustomName", e.Localized = "names.LocalizedName", e.Formatted = "names.FormattedName"
            }(Fu || (Fu = {}));
        var Ku = (0, Y.memo)((function ({
            value: e
        }) {
            const t = Wu(e);
            return (0, z.jsx)(z.Fragment, {
                children: t
            })
        }), ((e, t) => Kr(e, t, 3)));

        function Wu(e) {
            const t = zu();
            return (0, Y.useMemo)((() => t(e)), [e, t])
        }

        function zu() {
            const e = ac();
            return (0, Y.useCallback)((t => {
                if (null != t) {
                    if (function (e) {
                            return Gu(e, Fu.Custom)
                        }(t)) return t.name;
                    if (Hu(t) || function (e) {
                            return Gu(e, Fu.Localized)
                        }(t)) {
                        const n = e.translate(t.nameId);
                        if (null != n) {
                            if (Hu(t)) {
                                const s = null != t.nameArgs ? function (e, t) {
                                    return Object.entries(t).reduce(((t, [n, s]) => (t[n] = e.translate(s) ?? s, t)), {})
                                }(e, t.nameArgs) : null;
                                if (null != s) return vl(n, s)
                            }
                            return n
                        }
                        return t.nameId
                    }
                }
                return ""
            }), [e])
        }

        function Yu(e, t) {
            return Kr(e, t, 2)
        }
        X.add("game-ui/common/localization/localized-entity-name.tsx", {
            get LocalizedEntityName() {
                return Ku
            },
            set LocalizedEntityName(e) {
                Ku = e
            },
            get useLocalizedName() {
                return Wu
            },
            set useLocalizedName(e) {
                Wu = e
            },
            get useNameFormat() {
                return zu
            },
            set useNameFormat(e) {
                zu = e
            },
            get nameEquals() {
                return Yu
            },
            set nameEquals(e) {
                Yu = e
            }
        });
        var $u = uc("LocalizedPercentage", ((e, {
            value: t,
            max: n
        }) => Gc.renderString(e, {
            value: t > 0 && n > 0 ? Math.max(1, 100 * t / n) : 0,
            unit: Oc.Percentage
        })), ((e, t) => e.value === t.value && e.max === t.max));
        X.add("game-ui/common/localization/localized-percentage.tsx", {
            get LocalizedPercentage() {
                return $u
            },
            set LocalizedPercentage(e) {
                $u = e
            }
        }), X.add("game-ui/common/localization/index.ts", {});
        var qu, Xu, Qu = n(80),
            Zu = n.n(Qu);
        ! function (e) {
            e.Always = "always", e.AnyChildren = "anyChildren", e.FocusedChild = "focusedChild"
        }(qu || (qu = {})),
        function (e) {
            e.Center = "center", e.Bounds = "bounds"
        }(Xu || (Xu = {}));
        var Ju = (0, Y.createContext)({
                isChildFocused: () => !0,
                registerChild: () => {},
                unregisterChild: () => {},
                attachCallback: e => e(!0, null),
                detachCallback: e => e(!1, null),
                attachTo: () => {},
                detach: () => {},
                getBounds: () => null,
                getFocusedBounds: () => null,
                debugTrace: () => "<-- ROOT",
                deepDebugTrace: () => "ROOT"
            }),
            ed = {
                isChildFocused: () => !1,
                registerChild: () => {},
                unregisterChild: () => {},
                attachCallback: () => {},
                detachCallback: () => {},
                attachTo: () => {},
                detach: () => {},
                getBounds: () => null,
                getFocusedBounds: () => null,
                debugTrace: () => "<-- DISABLED",
                deepDebugTrace: () => "ROOT"
            };
        X.add("game-ui/common/focus/controller/focus-controller.ts", {
            get FocusActivation() {
                return qu
            },
            set FocusActivation(e) {
                qu = e
            },
            get FocusLimits() {
                return Xu
            },
            set FocusLimits(e) {
                Xu = e
            },
            get FocusContext() {
                return Ju
            },
            set FocusContext(e) {
                Ju = e
            },
            get disabledFocusController() {
                return ed
            },
            set disabledFocusController(e) {
                ed = e
            }
        });
        var td, nd = {
            entries: () => [],
            has: () => !1,
            get: () => {},
            register: () => {},
            unregister: () => {},
            attachCallback: () => {},
            detachCallback: () => {}
        };

        function sd() {
            return Y.createContext(nd)
        }

        function id(e, t) {
            const n = (0, Y.useContext)(e),
                s = (0, Y.useRef)(null);
            return (0, Y.useCallback)((e => {
                e !== s.current && (null != s.current && n.unregister(t, s.current), null != e && n.register(t, e), s.current = e)
            }), [t, n])
        }

        function ad(e, t) {
            const n = (0, Y.useContext)(e),
                [s, i] = (0, Y.useState)(n.get(t));
            return (0, Y.useEffect)((() => {
                i(n.get(t));
                const e = {
                    onRegister: (e, n) => {
                        e === t && i(n)
                    },
                    onUnregister: (e, n) => {
                        e === t && i(void 0)
                    }
                };
                return n.attachCallback(e), () => n.detachCallback(e)
            }), [t, n]), s
        }
        class od {
            _elements = new Map;
            _callbacks = [];
            has(e) {
                return this._elements.has(e)
            }
            get(e) {
                return this._elements.get(e)
            }
            entries() {
                return this._elements
            }
            register(e, t) {
                if (this._elements.has(e)) console.warn(`Duplicate element '${String(e)}' registered!`);
                else {
                    this._elements.set(e, t);
                    for (const n of this._callbacks) n.onRegister(e, t)
                }
            }
            unregister(e, t) {
                if (this._elements.get(e) === t) {
                    this._elements.delete(e);
                    for (const n of this._callbacks) n.onUnregister(e, t)
                }
            }
            attachCallback(e) {
                this._callbacks.includes(e) ? console.warn("Element registry callback already attached!") : this._callbacks.push(e)
            }
            detachCallback(e) {
                const t = this._callbacks.indexOf(e); - 1 !== t ? this._callbacks.splice(t, 1) : console.warn("Element registry callback not attached!")
            }
        }
        X.add("game-ui/common/utils/element-registry.tsx", {
                get defaultRegistry() {
                    return nd
                },
                set defaultRegistry(e) {
                    nd = e
                },
                get createElementRegistryContext() {
                    return sd
                },
                set createElementRegistryContext(e) {
                    sd = e
                },
                get useRegisteredElementRef() {
                    return id
                },
                set useRegisteredElementRef(e) {
                    id = e
                },
                get useRegisteredElement() {
                    return ad
                },
                set useRegisteredElement(e) {
                    ad = e
                }
            }),
            function (e) {
                e[e.in = 0] = "in", e[e.enter = 1] = "enter", e[e.exit = 2] = "exit"
            }(td || (td = {}));
        var rd = {
                state: td.in,
                onMount: () => {},
                onUnmount: () => {}
            },
            ld = Y.createContext(rd),
            cd = Y.createContext(!1);
        X.add("game-ui/common/animations/transition-context.tsx", {
            get TransitionState() {
                return td
            },
            set TransitionState(e) {
                td = e
            },
            get defaultContext() {
                return rd
            },
            set defaultContext(e) {
                rd = e
            },
            get TransitionContext() {
                return ld
            },
            set TransitionContext(e) {
                ld = e
            },
            get ExitTransitionActive() {
                return cd
            },
            set ExitTransitionActive(e) {
                cd = e
            }
        });
        var ud = ({
            skipInitial: e = !0,
            children: t
        }) => {
            const n = (0, Y.useRef)(e);
            (0, Y.useEffect)((() => () => {
                n.current = !1
            }), [t]);
            const s = (0, Y.useMemo)((() => {
                    const e = new od;
                    return e.attachCallback({
                        onRegister: () => {},
                        onUnregister: e => {
                            o((t => {
                                const n = md(t, e);
                                return Kr(n, t) ? t : n
                            }))
                        }
                    }), e
                }), []),
                i = (0, Y.useRef)(null),
                [a, o] = (0, Y.useState)((() => function (e) {
                    const t = new Array(Y.Children.count(e));
                    return Y.Children.forEach(e, ((e, n) => {
                        t[n] = e
                    })), t
                }(t)));
            (0, Y.useEffect)((() => {
                const e = function (e) {
                    const t = new Set;
                    return Y.Children.forEach(e, (e => {
                        const n = hd(e);
                        null != n && t.add(n)
                    })), t
                }(t);
                if (null != i.current) {
                    o((n => function (e, t, n) {
                        const s = new Map;
                        let i = [];
                        Y.Children.forEach(e, (e => {
                            const t = hd(e);
                            null != t && (n.has(t) ? (s.set(t, i), i = []) : i.push(e))
                        }));
                        const a = [];
                        return Y.Children.forEach(t, (e => {
                            const t = hd(e);
                            if (null != t) {
                                const e = s.get(t);
                                e && a.push(...e)
                            }
                            a.push(e)
                        })), a.push(...i), a
                    }(n, t, e)));
                    for (const t of i.current.values())
                        if (!e.has(t)) {
                            const e = s.get(t);
                            e ? e(td.exit) : o((e => md(e, t)))
                        } for (const t of e.values())
                        if (!i.current.has(t)) {
                            const e = s.get(t);
                            e && e(td.enter)
                        }
                }
                i.current = e
            }), [t, s]);
            const r = (0, Y.useContext)(cd);
            return (0, z.jsx)(ld.Provider, {
                value: rd,
                children: a.map((e => {
                    const t = hd(e);
                    if (null != t) {
                        const a = !i.current || i.current.has(t);
                        return (0, z.jsx)(dd, {
                            transitionKey: t,
                            exiting: r || !a,
                            transitionRegistry: s,
                            skipInitialRef: n,
                            children: e
                        }, t)
                    }
                    return e
                }))
            })
        };
        const dd = ({
            transitionKey: e,
            transitionRegistry: t,
            skipInitialRef: n,
            exiting: s,
            children: i
        }) => {
            const [a, o] = (0, Y.useState)(null == e || n.current ? td.in : td.enter), r = (0, Y.useCallback)((() => {
                null != e && t.register(e, o)
            }), [e, t]), l = (0, Y.useCallback)((() => {
                null != e && t.unregister(e, o)
            }), [e, t]), c = (0, Y.useMemo)((() => ({
                state: a,
                onMount: r,
                onUnmount: l
            })), [r, l, a]), u = (0, Y.useContext)(Ju);
            return (0, z.jsx)(ld.Provider, {
                value: c,
                children: (0, z.jsx)(cd.Provider, {
                    value: s,
                    children: (0, z.jsx)(Ju.Provider, {
                        value: s ? ed : u,
                        children: i
                    })
                })
            })
        };

        function md(e, t) {
            return e.filter((e => hd(e) !== t))
        }

        function hd(e) {
            return null !== e && "object" == typeof e ? e.key : null
        }

        function gd(e, t) {
            return (0, Y.useCallback)((n => {
                pd(e, n), pd(t, n)
            }), [e, t])
        }

        function pd(e, t) {
            "function" == typeof e ? e(t) : null != e && (e.current = t)
        }
        X.add("game-ui/common/animations/transition-group-coordinator.tsx", {
            get TransitionGroupCoordinator() {
                return ud
            },
            set TransitionGroupCoordinator(e) {
                ud = e
            }
        }), X.add("game-ui/common/hooks/use-merged-ref.tsx", {
            get useMergedRef() {
                return gd
            },
            set useMergedRef(e) {
                gd = e
            },
            get setRef() {
                return pd
            },
            set setRef(e) {
                pd = e
            }
        });
        var fd = (0, Y.createContext)(null),
            xd = ({
                children: e
            }) => {
                const t = (0, Y.useContext)(fd);
                let n = !1;
                const s = gd(e.ref, t?.ref),
                    i = t?.ref ? (n = !0) && s : e.ref;
                let a;
                (t?.style || e.props.style) && (t?.style && e.props.style ? (n = !0, a = {
                    ...t?.style,
                    ...e.props.style
                }) : e.props.style ? a = e.props.style : (n = !0, a = t?.style));
                const o = t?.className ? (n = !0) && Zu()(e.props.className, t?.className) : e.props.className,
                    r = n ? {
                        ...e.props,
                        className: o,
                        style: a,
                        ref: i
                    } : void 0;
                return (0, z.jsx)(fd.Provider, {
                    value: null,
                    children: n ? (0, Y.cloneElement)(e, r) : e
                })
            },
            vd = (0, Y.memo)((0, Y.forwardRef)((function ({
                style: e,
                className: t,
                children: n
            }, s) {
                const i = (0, Y.useContext)(fd),
                    a = (0, Y.useMemo)((() => {
                        let a;
                        return (i?.style || e) && (a = i?.style && e ? {
                            ...i?.style,
                            ...e
                        } : e || i?.style), {
                            ref: e => {
                                pd(n.ref, e), pd(s, e), null != i?.ref && i.ref(e)
                            },
                            style: a,
                            className: Zu()(i?.className, t)
                        }
                    }), [n.ref, t, i, s, e]);
                return (0, z.jsx)(fd.Provider, {
                    value: a,
                    children: (o = n, "object" != typeof o || "function" != typeof o.type ? (0, z.jsx)(xd, {
                        children: n
                    }) : n)
                });
                var o
            })), (({
                style: e,
                ...t
            }, {
                style: n,
                ...s
            }) => Kr(t, s) && Kr(e, n)));
        X.add("game-ui/common/dom-node/dom-node.tsx", {
            get DOMNodeContext() {
                return fd
            },
            set DOMNodeContext(e) {
                fd = e
            },
            get DOMNodeProvider() {
                return xd
            },
            set DOMNodeProvider(e) {
                xd = e
            },
            get DOMNodeModifier() {
                return vd
            },
            set DOMNodeModifier(e) {
                vd = e
            }
        });
        var _d = -2147483648,
            bd = 2147483647,
            Td = 4294967295,
            Ed = -3402823e32,
            Id = 3402823e32,
            yd = {
                x: Ed,
                y: Ed
            },
            jd = {
                x: Id,
                y: Id
            },
            Sd = {
                x: Ed,
                y: Ed,
                z: Ed
            },
            Cd = {
                x: Id,
                y: Id,
                z: Id
            },
            Nd = {
                x: Ed,
                y: Ed,
                z: Ed,
                w: Ed
            },
            wd = {
                x: Id,
                y: Id,
                z: Id,
                w: Id
            };

        function Od(e, t, n) {
            return e <= t ? t : e >= n ? n : e
        }

        function Pd(e, t, n) {
            return e + (t - e) * n
        }

        function Ld(e, t) {
            const n = Math.pow(10, t);
            return Math.round((e + Number.EPSILON) * n) / n
        }
        var Ad = {
                x: 0,
                y: 0
            },
            Md = {
                x: -1,
                y: 0
            },
            Rd = {
                x: 0,
                y: 1
            },
            kd = {
                x: 1,
                y: 0
            },
            Dd = {
                x: 0,
                y: -1
            };

        function Fd(e, t) {
            return e.x === t.x && e.y === t.y
        }

        function Ud(e, t, n) {
            return {
                x: Od(e.x, t, n),
                y: Od(e.y, t, n)
            }
        }

        function Bd(e) {
            const t = Kd(e);
            return 0 === t ? Ad : {
                x: e.x / t,
                y: e.y / t
            }
        }

        function Gd(e, t) {
            return {
                x: e.x - t.x,
                y: e.y - t.y
            }
        }

        function Vd(e, t, n) {
            return {
                x: e.x + (t.x - e.x) * n,
                y: e.y + (t.y - e.y) * n
            }
        }

        function Hd(e) {
            return {
                x: Math.trunc(e.x),
                y: Math.trunc(e.y)
            }
        }

        function Kd(e) {
            return Math.sqrt(Wd(e))
        }

        function Wd(e) {
            return e.x * e.x + e.y * e.y
        }

        function zd({
            x: e,
            y: t
        }, n) {
            return `(${Ld(e,n)}, ${Ld(t,n)})`
        }

        function Yd({
            clientX: e,
            clientY: t
        }) {
            return {
                x: e,
                y: t
            }
        }
        var $d = {
            x: 0,
            y: 0,
            z: 0
        };

        function qd(e, t) {
            return e.x === t.x && e.y === t.y && e.z === t.z
        }

        function Xd({
            x: e,
            y: t,
            z: n
        }, s) {
            return `(${Ld(e,s)}, ${Ld(t,s)}, ${Ld(n,s)})`
        }
        var Qd = {
            x: 0,
            y: 0,
            z: 0,
            w: 0
        };

        function Zd(e, t) {
            return e.x === t.x && e.y === t.y && e.z === t.z && e.w === t.w
        }

        function Jd({
            x: e,
            y: t,
            z: n,
            w: s
        }, i) {
            return `(${Ld(e,i)}, ${Ld(t,i)}, ${Ld(n,i)}, ${Ld(s,i)})`
        }
        var em = {
            min: 0,
            max: 0
        };

        function tm(e, t) {
            return e.min === t.min && e.max === t.max
        }
        var nm = {
            min: Ad,
            max: Ad
        };

        function sm(e, t) {
            return Fd(e.min, t.min) && Fd(e.max, t.max)
        }
        var im = {
            min: $d,
            max: $d
        };

        function am(e, t) {
            return qd(e.min, t.min) && qd(e.max, t.max)
        }
        var om = [0, 0];

        function rm(e, t) {
            return e[0] === t[0] && e[1] === t[1]
        }

        function lm(e) {
            return BigInt(e[1]) << 32n | BigInt(e[0])
        }

        function cm(e) {
            return [Number(0xffffffff n & e), Number(e >> 32n & 0xffffffff n)]
        }

        function um(e) {
            return {
                x: e.offsetWidth,
                y: e.offsetHeight
            }
        }

        function dm(e) {
            return {
                x: e.clientWidth,
                y: e.clientHeight
            }
        }

        function mm(e) {
            return {
                x: e.scrollWidth,
                y: e.scrollHeight
            }
        }

        function hm(e, t = um, n = !0) {
            const [s, i] = (0, Y.useState)(null), a = (0, Y.useCallback)((() => {
                if (null != e.current) {
                    const n = t(e.current);
                    i((e => null != e && Fd(n, e) ? e : n))
                } else i(null)
            }), [e, t]);
            return fm(a, n), (0, Y.useEffect)((() => {
                if (n) {
                    let e = window.requestAnimationFrame((() => {
                        e = window.requestAnimationFrame((() => {
                            e = 0, a()
                        })), a()
                    }));
                    return () => window.cancelAnimationFrame(e)
                }
                i(null)
            }), [n, a]), s
        }

        function gm(e, t = !0) {
            const [n, s] = (0, Y.useState)(null), i = (0, Y.useCallback)((() => {
                if (null != e.current) {
                    const t = e.current.getBoundingClientRect();
                    s((e => {
                        return null != e && (n = t, s = e, Math.abs(n.top - s.top) < .1 && Math.abs(n.bottom - s.bottom) < .1 && Math.abs(n.left - s.left) < .1 && Math.abs(n.right - s.right) < .1 && Math.abs(n.width - s.width) < .1 && Math.abs(n.height - s.height) < .1) ? e : t;
                        var n, s
                    }))
                } else s(null)
            }), [e]);
            return fm(i, t), (0, Y.useEffect)((() => {
                if (t) {
                    let e = window.requestAnimationFrame((() => {
                        e = window.requestAnimationFrame((() => {
                            e = 0, i()
                        })), i()
                    }));
                    return () => {
                        window.cancelAnimationFrame(e)
                    }
                }
                s(null)
            }), [t, i]), n
        }
        X.add("game-ui/common/math.ts", {
            get INT_MIN_VALUE() {
                return _d
            },
            set INT_MIN_VALUE(e) {
                _d = e
            },
            get INT_MAX_VALUE() {
                return bd
            },
            set INT_MAX_VALUE(e) {
                bd = e
            },
            get UINT_MAX_VALUE() {
                return Td
            },
            set UINT_MAX_VALUE(e) {
                Td = e
            },
            get FLOAT_MIN_VALUE() {
                return Ed
            },
            set FLOAT_MIN_VALUE(e) {
                Ed = e
            },
            get FLOAT_MAX_VALUE() {
                return Id
            },
            set FLOAT_MAX_VALUE(e) {
                Id = e
            },
            get FLOAT2_MIN_VALUE() {
                return yd
            },
            set FLOAT2_MIN_VALUE(e) {
                yd = e
            },
            get FLOAT2_MAX_VALUE() {
                return jd
            },
            set FLOAT2_MAX_VALUE(e) {
                jd = e
            },
            get FLOAT3_MIN_VALUE() {
                return Sd
            },
            set FLOAT3_MIN_VALUE(e) {
                Sd = e
            },
            get FLOAT3_MAX_VALUE() {
                return Cd
            },
            set FLOAT3_MAX_VALUE(e) {
                Cd = e
            },
            get FLOAT4_MIN_VALUE() {
                return Nd
            },
            set FLOAT4_MIN_VALUE(e) {
                Nd = e
            },
            get FLOAT4_MAX_VALUE() {
                return wd
            },
            set FLOAT4_MAX_VALUE(e) {
                wd = e
            },
            get clamp() {
                return Od
            },
            set clamp(e) {
                Od = e
            },
            get lerp() {
                return Pd
            },
            set lerp(e) {
                Pd = e
            },
            get roundDecimal() {
                return Ld
            },
            set roundDecimal(e) {
                Ld = e
            },
            get zero2() {
                return Ad
            },
            set zero2(e) {
                Ad = e
            },
            get left() {
                return Md
            },
            set left(e) {
                Md = e
            },
            get up() {
                return Rd
            },
            set up(e) {
                Rd = e
            },
            get right() {
                return kd
            },
            set right(e) {
                kd = e
            },
            get down() {
                return Dd
            },
            set down(e) {
                Dd = e
            },
            get number2Equals() {
                return Fd
            },
            set number2Equals(e) {
                Fd = e
            },
            get clamp2() {
                return Ud
            },
            set clamp2(e) {
                Ud = e
            },
            get normalize2() {
                return Bd
            },
            set normalize2(e) {
                Bd = e
            },
            get difference2() {
                return Gd
            },
            set difference2(e) {
                Gd = e
            },
            get lerp2() {
                return Vd
            },
            set lerp2(e) {
                Vd = e
            },
            get trunc2() {
                return Hd
            },
            set trunc2(e) {
                Hd = e
            },
            get distance2() {
                return Kd
            },
            set distance2(e) {
                Kd = e
            },
            get distanceSqr2() {
                return Wd
            },
            set distanceSqr2(e) {
                Wd = e
            },
            get formatNumber2() {
                return zd
            },
            set formatNumber2(e) {
                zd = e
            },
            get fromMouseEvent() {
                return Yd
            },
            set fromMouseEvent(e) {
                Yd = e
            },
            get zero3() {
                return $d
            },
            set zero3(e) {
                $d = e
            },
            get number3Equals() {
                return qd
            },
            set number3Equals(e) {
                qd = e
            },
            get formatNumber3() {
                return Xd
            },
            set formatNumber3(e) {
                Xd = e
            },
            get zero4() {
                return Qd
            },
            set zero4(e) {
                Qd = e
            },
            get number4Equals() {
                return Zd
            },
            set number4Equals(e) {
                Zd = e
            },
            get formatNumber4() {
                return Jd
            },
            set formatNumber4(e) {
                Jd = e
            },
            get zeroBounds1() {
                return em
            },
            set zeroBounds1(e) {
                em = e
            },
            get bounds1Equals() {
                return tm
            },
            set bounds1Equals(e) {
                tm = e
            },
            get zeroBounds2() {
                return nm
            },
            set zeroBounds2(e) {
                nm = e
            },
            get bounds2Equals() {
                return sm
            },
            set bounds2Equals(e) {
                sm = e
            },
            get zeroBounds3() {
                return im
            },
            set zeroBounds3(e) {
                im = e
            },
            get bounds3Equals() {
                return am
            },
            set bounds3Equals(e) {
                am = e
            },
            get zeroLong() {
                return om
            },
            set zeroLong(e) {
                om = e
            },
            get longEquals() {
                return rm
            },
            set longEquals(e) {
                rm = e
            },
            get longToBigInt() {
                return lm
            },
            set longToBigInt(e) {
                lm = e
            },
            get bigIntToLong() {
                return cm
            },
            set bigIntToLong(e) {
                cm = e
            }
        });
        const pm = ["top", "right", "bottom", "left", "width", "height", "size", "weight"];

        function fm(e, t = !0) {
            const n = (0, Y.useRef)(!1);
            (0, Y.useEffect)((() => {
                if (t) {
                    n.current = !0;
                    let t = 0;
                    const s = () => {
                            n.current && 0 === t && (t = window.requestAnimationFrame((() => {
                                t = window.requestAnimationFrame((() => {
                                    t = 0, e()
                                }))
                            })))
                        },
                        i = new MutationObserver(s);
                    i.observe(document, {
                        attributes: !0,
                        childList: !0,
                        characterData: !0,
                        subtree: !0
                    });
                    const a = e => {
                        if (!(e.target instanceof HTMLElement)) return;
                        const t = window.getComputedStyle(e.target).transitionProperty;
                        pm.some((e => t.includes(e))) && s()
                    };
                    document.addEventListener("transitionend", a);
                    const o = () => {
                        n.current && (window.cancelAnimationFrame(t), t = window.requestAnimationFrame((() => {
                            t = window.requestAnimationFrame((() => {
                                t = 0, e()
                            }))
                        })))
                    };
                    return window.addEventListener("resize", o), () => {
                        n.current = !1, i.disconnect(), document.removeEventListener("transitionend", a), window.removeEventListener("resize", o), window.cancelAnimationFrame(t)
                    }
                }
            }), [t, e])
        }
        X.add("game-ui/common/hooks/resize-events.tsx", {
            get OFFSET_SIZE() {
                return um
            },
            set OFFSET_SIZE(e) {
                um = e
            },
            get CLIENT_SIZE() {
                return dm
            },
            set CLIENT_SIZE(e) {
                dm = e
            },
            get SCROLL_SIZE() {
                return mm
            },
            set SCROLL_SIZE(e) {
                mm = e
            },
            get useElementSize() {
                return hm
            },
            set useElementSize(e) {
                hm = e
            },
            get useElementRect() {
                return gm
            },
            set useElementRect(e) {
                gm = e
            },
            get useResizeEventListener() {
                return fm
            },
            set useResizeEventListener(e) {
                fm = e
            }
        });
        const xm = "input";
        var vm, _m;
        ! function (e) {
            e[e.keyboardAndMouse = 0] = "keyboardAndMouse", e[e.gamepad = 1] = "gamepad"
        }(vm || (vm = {})),
        function (e) {
            e[e.Xbox = 0] = "Xbox", e[e.PS = 1] = "PS"
        }(_m || (_m = {}));
        var bm = $r(xm, "mouseOverUI", !0),
            Tm = $r(xm, "hideCursor", !0),
            Em = $r(xm, "controlScheme", vm.gamepad),
            Im = $r(xm, "scrollSensitivity", 1),
            ym = $r(xm, "gamepadPointerPosition"),
            jm = $r(xm, "cameraMoving", !1),
            Sm = Zr(xm, "toolActionPerformed"),
            Cm = Zr(xm, "cameraBarrier"),
            Nm = Zr(xm, "toolBarrier"),
            wm = $r(xm, "activeHints"),
            Om = Qr(xm, "hints"),
            Pm = el(xm, "onInputHintPerformed"),
            Lm = Xr(xm, "tutorialHints"),
            Am = ($r(xm, "gamepadType"), el(xm, "setActiveTextFieldRect")),
            Mm = $r(xm, "useTextFieldInputBarrier");

        function Rm(e) {
            tl(xm, "onGamepadPointerEvent", e)
        }

        function km() {
            return sl(Em) === vm.keyboardAndMouse
        }

        function Dm() {
            return sl(Em) === vm.gamepad
        }
        let Fm;
        X.add("game-ui/common/data-binding/input-bindings.ts", {
            get ControlScheme() {
                return vm
            },
            set ControlScheme(e) {
                vm = e
            },
            get GamepadType() {
                return _m
            },
            set GamepadType(e) {
                _m = e
            },
            get mouseOverUI() {
                return mouseOverUI
            },
            set mouseOverUI(e) {
                mouseOverUI = e
            },
            get hideCursor() {
                return hideCursor
            },
            set hideCursor(e) {
                hideCursor = e
            },
            get controlScheme() {
                return controlScheme
            },
            set controlScheme(e) {
                controlScheme = e
            },
            get scrollSensitivity() {
                return scrollSensitivity
            },
            set scrollSensitivity(e) {
                scrollSensitivity = e
            },
            get gamepadPointerPosition() {
                return gamepadPointerPosition
            },
            set gamepadPointerPosition(e) {
                gamepadPointerPosition = e
            },
            get cameraMoving() {
                return cameraMoving
            },
            set cameraMoving(e) {
                cameraMoving = e
            },
            get toolActionPerformed() {
                return toolActionPerformed
            },
            set toolActionPerformed(e) {
                toolActionPerformed = e
            },
            get cameraBarrier() {
                return cameraBarrier
            },
            set cameraBarrier(e) {
                cameraBarrier = e
            },
            get toolBarrier() {
                return toolBarrier
            },
            set toolBarrier(e) {
                toolBarrier = e
            },
            get activeInputHints() {
                return activeInputHints
            },
            set activeInputHints(e) {
                activeInputHints = e
            },
            get inputHints() {
                return inputHints
            },
            set inputHints(e) {
                inputHints = e
            },
            get onInputHintPerformed() {
                return Pm
            },
            set onInputHintPerformed(e) {
                Pm = e
            },
            get tutorialHints() {
                return tutorialHints
            },
            set tutorialHints(e) {
                tutorialHints = e
            },
            get gamepadType() {
                return gamepadType
            },
            set gamepadType(e) {
                gamepadType = e
            },
            get setActiveTextFieldRect() {
                return Am
            },
            set setActiveTextFieldRect(e) {
                Am = e
            },
            get requireTextFieldInputBarrier() {
                return requireTextFieldInputBarrier
            },
            set requireTextFieldInputBarrier(e) {
                requireTextFieldInputBarrier = e
            },
            get onGamepadPointerEvent() {
                return Rm
            },
            set onGamepadPointerEvent(e) {
                Rm = e
            }
        }), X.add("game-ui/common/hooks/use-control-scheme.tsx", {
            get useKeyboardAndMouseActive() {
                return km
            },
            set useKeyboardAndMouseActive(e) {
                km = e
            },
            get useGamepadActive() {
                return Dm
            },
            set useGamepadActive(e) {
                Dm = e
            }
        });
        const Um = function (e = !0) {
            const [t, n] = (0, Y.useState)((() => (Fm || (Fm = {
                x: window.innerWidth,
                y: window.innerHeight
            }), Fm)));
            return (0, Y.useEffect)((() => {
                if (e) {
                    const e = () => {
                        const e = {
                            x: window.innerWidth,
                            y: window.innerHeight
                        };
                        Fm = e, n((t => Fd(e, t) ? t : e))
                    };
                    return e(), window.addEventListener("resize", e), () => window.removeEventListener("resize", e)
                }
            }), [e, n]), t
        };
        X.add("game-ui/common/hooks/use-window-size.ts", {});
        var Bm = () => window.innerHeight > .5625 * window.innerWidth ? window.innerWidth / 1920 : window.innerHeight / 1080;

        function Gm() {
            const e = Um();
            return sl(Al) ? e.y > .5625 * e.x ? e.x / 1920 : e.y / 1080 : 1
        }

        function Vm(e) {
            const t = Gm();
            if (e.endsWith("rem")) return parseFloat(e.substring(0, e.length - 3)) * t;
            if (e.endsWith("px")) return parseFloat(e.substring(0, e.length - 2));
            throw Error(`Unsupport length syntax: ${e}`)
        }
        const Hm = Gm;
        X.add("game-ui/common/hooks/use-rem.ts", {
            get getRem() {
                return Bm
            },
            set getRem(e) {
                Bm = e
            },
            get useRem() {
                return Gm
            },
            set useRem(e) {
                Gm = e
            },
            get useCssLength() {
                return Vm
            },
            set useCssLength(e) {
                Vm = e
            }
        });
        var Km = (0, Y.createContext)(document.body),
            Wm = ({
                children: e
            }) => {
                const t = (0, Y.useContext)(Km),
                    [n, s] = (0, Y.useState)(null);
                return (0, z.jsx)(Km.Provider, {
                    value: n ?? t,
                    children: (0, z.jsx)(vd, {
                        ref: s,
                        children: e
                    })
                })
            };
        const zm = ({
            children: e,
            container: t
        }) => {
            const n = Ym();
            return Z.createPortal(e, t ?? n)
        };

        function Ym() {
            return (0, Y.useContext)(Km)
        }
        X.add("game-ui/common/portal/portal.tsx", {
            get PortalContainerProvider() {
                return Wm
            },
            set PortalContainerProvider(e) {
                Wm = e
            },
            get Portal() {
                return zm
            },
            set Portal(e) {
                zm = e
            },
            get usePortalContainer() {
                return Ym
            },
            set usePortalContainer(e) {
                Ym = e
            }
        });

        function $m(e, t = 300, n = 0) {
            const [s, i] = (0, Y.useState)(), a = (0, Y.useRef)(-1), o = (0, Y.useRef)(n);
            return (0, Y.useEffect)((() => (-1 !== a.current && clearTimeout(a.current), s !== e && (t && o.current <= 0 ? a.current = setTimeout((() => {
                i(e), a.current = -1
            }), t) : (i(e), o.current--)), () => {
                clearTimeout(a.current)
            })), [s, e, t]), s
        }
        X.add("game-ui/common/utils/debounce.ts", {
            get useDebouncedValue() {
                return $m
            },
            set useDebouncedValue(e) {
                $m = e
            }
        });
        class qm {
            _callback = null;
            complete() {
                this._callback = null
            }
            cancel() {
                this._callback && (this._callback(), this._callback = null)
            }
            onCancel(e) {
                this._callback && this._callback(), this._callback = e
            }
        }

        function Xm() {
            const e = (0, Y.useMemo)((() => new qm), []);
            return (0, Y.useEffect)((() => () => e.cancel()), [e]), e
        }
        X.add("game-ui/common/utils/cancel-token.ts", {
            get useCancelToken() {
                return Xm
            },
            set useCancelToken(e) {
                Xm = e
            }
        });
        const Qm = /,\s?/,
            Zm = /,(?![^(]*\))\s?/;

        function Jm(e) {
            if (!(e instanceof Element)) return 0;
            const t = window.getComputedStyle(e),
                n = t.transitionDuration.split(Qm),
                s = t.transitionDelay.split(Qm);
            if (n.length <= 1 && s.length <= 1) return ah(ih(n, 0)) + ah(ih(s, 0));
            let i = 0;
            const a = Math.max(n.length, s.length);
            for (let e = 0; e < a; e++) {
                const t = ah(ih(n, e)),
                    a = ah(ih(s, e));
                i = Math.max(i, t + a)
            }
            return i
        }

        function eh(e, t) {
            if (!(e instanceof Element)) return null;
            const n = window.getComputedStyle(e),
                s = n.transitionProperty.split(Qm),
                i = n.transitionDuration.split(Qm),
                a = n.transitionDelay.split(Qm),
                o = n.transitionTimingFunction.split(Zm),
                r = s.indexOf(t);
            if (-1 === r) return null;
            const l = oh(ih(o, r));
            return null == l ? null : {
                duration: ah(ih(i, r)),
                delay: ah(ih(a, r)),
                timingFunction: l
            }
        }
        const th = {};

        function nh(e, t, n) {
            if (!(e instanceof Element)) return th;
            const s = window.getComputedStyle(e),
                i = s.transitionProperty.split(Qm),
                a = s.transitionDuration.split(Qm),
                o = s.transitionDelay.split(Qm),
                r = s.transitionTimingFunction.split(/,(?![^(]*\))\s?/),
                l = i.indexOf(t);
            return -1 === l ? th : {
                transitionProperty: s.transitionProperty,
                transitionDuration: i.map(((e, t) => t === l ? n.duration + "ms" : ih(a, t) ?? "0ms")).join(", "),
                transitionDelay: i.map(((e, t) => t === l ? n.delay + "ms" : ih(o, t) ?? "0ms")).join(", "),
                transitionTimingFunction: i.map(((e, t) => t === l ? lh(n.timingFunction) : ih(r, t) ?? "ease")).join(", ")
            }
        }

        function sh(e, t) {
            if (t < e.delay) return {
                ...e,
                delay: e.delay - t
            };
            if (e.duration > 0 || t < e.delay + e.duration) {
                const n = (t - e.delay) / e.duration;
                return {
                    delay: 0,
                    duration: (1 - n) * e.duration,
                    timingFunction: rh(e.timingFunction, n)
                }
            }
            return {
                ...e,
                duration: 0,
                delay: 0
            }
        }

        function ih(e, t) {
            return 1 === e.length ? e[0] : e.length > t ? e[t] : void 0
        }

        function ah(e) {
            if (null == e) return 0;
            if (e.endsWith("ms")) {
                const t = parseFloat(e.substr(0, e.length - 2));
                return isNaN(t) ? 0 : t
            }
            if (e.endsWith("s")) {
                const t = 1e3 * parseFloat(e.substr(0, e.length - 1));
                return isNaN(t) ? 0 : t
            } {
                const t = parseFloat(e);
                return isNaN(t) ? 0 : t
            }
        }

        function oh(e) {
            if (null == e) return null;
            if ("linear" === e) return [0, 0, 1, 1];
            if ("ease" === e) return [.25, .1, .25, 1];
            if ("ease-in" === e) return [.42, 0, 1, 1];
            if ("ease-out" === e) return [0, 0, .58, 1];
            if ("ease-in-out" === e) return [.42, 0, .58, 1];
            const t = e.match(/^cubic-bezier\((-?[0-9]*\.?[0-9]*),\s?(-?[0-9]*\.?[0-9]*),\s?(-?[0-9]*\.?[0-9]*),\s?(-?[0-9]*\.?[0-9]*)\)$/);
            return null != t ? [parseFloat(t[1]), parseFloat(t[2]), parseFloat(t[3]), parseFloat(t[4])] : null
        }

        function rh([e, t, n, s], i) {
            const a = {
                    x: n,
                    y: s
                },
                o = Vd({
                    x: e,
                    y: t
                }, a, i),
                r = Vd(a, {
                    x: 1,
                    y: 1
                }, i),
                l = Vd(o, r, i);
            return [l.x, l.y, r.x, r.y]
        }

        function lh([e, t, n, s]) {
            return `cubic-bezier(${e}, ${t}, ${n}, ${s})`
        }

        function ch(e, t) {
            return new Promise(((n, s) => {
                const i = window.setTimeout((() => {
                    t.complete(), n(!0)
                }), e);
                t.onCancel((() => {
                    window.clearTimeout(i), n(!1)
                }))
            }))
        }

        function uh(e) {
            return new Promise(((t, n) => {
                const s = window.requestAnimationFrame((n => {
                    e.complete(), t(!0)
                }));
                e.onCancel((() => {
                    window.cancelAnimationFrame(s), t(!1)
                }))
            }))
        }
        X.add("game-ui/common/utils/css-transitions.ts", {
            get getCssTransitionTime() {
                return Jm
            },
            set getCssTransitionTime(e) {
                Jm = e
            },
            get getCssTransition() {
                return eh
            },
            set getCssTransition(e) {
                eh = e
            },
            get getModifiedTransitionStyles() {
                return nh
            },
            set getModifiedTransitionStyles(e) {
                nh = e
            },
            get splitCssTransition() {
                return sh
            },
            set splitCssTransition(e) {
                sh = e
            },
            get parseBezier() {
                return oh
            },
            set parseBezier(e) {
                oh = e
            },
            get splitBezier() {
                return rh
            },
            set splitBezier(e) {
                rh = e
            },
            get formatBezier() {
                return lh
            },
            set formatBezier(e) {
                lh = e
            }
        }), X.add("game-ui/common/utils/promise.ts", {
            get delay() {
                return ch
            },
            set delay(e) {
                ch = e
            },
            get nextFrame() {
                return uh
            },
            set nextFrame(e) {
                uh = e
            }
        });
        var dh = {},
            mh = ({
                styles: e,
                enterDuration: t,
                exitDuration: n,
                children: s
            }) => {
                const i = e ?? dh,
                    {
                        state: a,
                        onMount: o,
                        onUnmount: r
                    } = (0, Y.useContext)(ld),
                    l = (0, Y.useRef)(null),
                    c = gd(s.ref, l),
                    u = (0, Y.useRef)(!1),
                    [d, m] = (0, Y.useState)(function (e, t) {
                        switch (e) {
                        case td.enter:
                            return t.enter;
                        case td.exit:
                            return t.exit;
                        default:
                            return null
                        }
                    }(a, i)),
                    h = (0, Y.useCallback)((e => {
                        u.current && m(e)
                    }), []),
                    g = (0, Y.useRef)(d);
                return g.current = d, (0, Y.useEffect)((() => (u.current || (u.current = !0, o()), () => {
                    u.current && (u.current = !1, r())
                })), [o, r]), (0, Y.useEffect)((() => {
                    const e = new qm;
                    return (async () => {
                        if (a === td.enter) {
                            if (h(i.enter), !await uh(e)) return;
                            if (!await uh(e)) return;
                            if (h(i.enterActive), !await uh(e)) return;
                            const n = t ?? Jm(l.current);
                            if (!await ch(n, e)) return;
                            h(null)
                        } else if (a === td.exit) {
                            if (null == g.current) {
                                if (h(i.exit), !await uh(e)) return;
                                if (!await uh(e)) return
                            }
                            if (h((e => e === i.exit ? i.exitActive : null)), !await uh(e)) return;
                            const t = n ?? Jm(l.current);
                            if (!await ch(t, e)) return;
                            u.current && (u.current = !1, r())
                        }
                    })(), () => {
                        e.cancel(), h(null), u.current && (u.current = !1, r())
                    }
                }), [t, n, r, a, i.enter, i.enterActive, i.exit, i.exitActive, h]), (0, z.jsx)(ld.Provider, {
                    value: rd,
                    children: Y.cloneElement(s, {
                        ...s.props,
                        ref: c,
                        className: Zu()(s.props.className, i.base, d)
                    })
                })
            };
        X.add("game-ui/common/animations/class-name-transition.tsx", {
            get emptyStyles() {
                return dh
            },
            set emptyStyles(e) {
                dh = e
            },
            get ClassNameTransition() {
                return mh
            },
            set ClassNameTransition(e) {
                mh = e
            }
        });
        let hh = {
            balloon: "balloon_H23",
            up: "up_ehW",
            start: "start_wu1",
            down: "down_ztr",
            center: "center_hug",
            end: "end_EKq",
            left: "left_LHd",
            right: "right_JdH",
            bounds: "bounds__AO",
            container: "container_jfe",
            arrow: "arrow_Xfn",
            content: "content_JQV"
        };
        X.add("game-ui/common/balloon/balloon.module.scss", {
            get classes() {
                return hh
            },
            set classes(e) {
                Object.assign(hh, e)
            }
        });
        const gh = hh;
        let ph = {
            balloon: "balloon_DNs balloon_H23",
            base: "base_uUu",
            enter: "enter_ZTs",
            "enter-active": "enter-active_bJR",
            enterActive: "enter-active_bJR",
            "exit-active": "exit-active_AqC",
            exitActive: "exit-active_AqC",
            container: "container_sGN container_jfe",
            arrow: "arrow_tFt arrow_Xfn",
            content: "content_HM0 content_JQV"
        };
        X.add("game-ui/common/balloon/themes/default-balloon.module.scss", {
            get classes() {
                return ph
            },
            set classes(e) {
                Object.assign(ph, e)
            }
        });
        const fh = ph;
        var xh = (0, Y.forwardRef)((function ({
            direction: e,
            alignment: t,
            theme: n = fh,
            className: s,
            style: i,
            children: a
        }, o) {
            const r = (0, Y.useMemo)((() => ({
                ...gh,
                ...n
            })), [n]);
            return (0, z.jsx)(mh, {
                styles: r,
                children: (0, z.jsx)("div", {
                    ref: o,
                    style: i,
                    className: Zu()(r.balloon, null != e && r[e], null != t && r[t], s),
                    children: (0, z.jsxs)("div", {
                        className: r.bounds,
                        children: [(0, z.jsx)("div", {
                            className: r.container,
                            children: (0, z.jsx)("div", {
                                className: r.arrow
                            })
                        }), (0, z.jsx)("div", {
                            className: r.content,
                            children: a
                        })]
                    })
                })
            })
        }));
        X.add("game-ui/common/balloon/balloon.tsx", {
            get Balloon() {
                return xh
            },
            set Balloon(e) {
                xh = e
            }
        });
        let vh = {
            "anchored-balloon": "anchored-balloon_AYp",
            anchoredBalloon: "anchored-balloon_AYp",
            hidden: "hidden_W0n",
            up: "up_el0",
            down: "down_Xl7",
            left: "left_SI8",
            right: "right_RQp"
        };
        X.add("game-ui/common/balloon/anchored-balloon.module.scss", {
            get classes() {
                return vh
            },
            set classes(e) {
                Object.assign(vh, e)
            }
        });
        const _h = vh;
        var bh = (0, Y.memo)((function ({
            visible: e,
            direction: t = "up",
            alignment: n = "center",
            theme: s,
            content: i,
            balloonKey: a = "anchored-balloon",
            className: o,
            children: r,
            anchorElRef: l
        }) {
            const c = Dm(),
                u = $m(e),
                d = Hm(),
                m = (0, Y.useRef)(null),
                h = (0, Y.useRef)(null),
                g = Um(u),
                p = gm(l || m, u),
                f = hm(h, um, u),
                x = (0, Y.useMemo)((() => {
                    let e = 0;
                    return c && (e = 56 * d), u && p && f ? function (e, t, n, s, i, a) {
                        let o = s,
                            r = i,
                            l = Eh(e, t, o, r),
                            c = l.y < 0,
                            u = l.y + t.y > n.y,
                            d = l.x < 0,
                            m = l.x + t.x > n.x;
                        if (!(c || u || d || m)) return {
                            direction: o,
                            alignment: r,
                            style: jh(l, o, a)
                        };
                        r = "left" === o || "right" === o ? Th(r, c, u) : Th(r, d, m);
                        "up" === o ? c && (o = "down") : "down" === o ? u && (o = "up") : "left" === o ? d && (o = "right") : "right" === o && m && (o = "left");
                        if (l = Eh(e, t, o, r), c = l.y < 0, u = l.y + t.y > n.y, d = l.x < 0, m = l.x + t.x > n.x, !(c || u || d || m)) return {
                            direction: o,
                            alignment: r,
                            style: jh(l, o, a)
                        };
                        r = "left" === o || "right" === o ? Th(r, c, u) : Th(r, d, m);
                        return l = Eh(e, t, o, r), {
                            direction: o,
                            alignment: r,
                            style: jh(l, o, a)
                        }
                    }(p, f, g, t, n, e) : null
                }), [c, u, p, f, g, t, n, d]),
                v = !1 !== i?.props?.children;
            return (0, z.jsxs)(z.Fragment, {
                children: [l ? r : (0, z.jsx)(vd, {
                    ref: m,
                    children: r
                }), (0, z.jsx)(ud, {
                    children: u && v && (0, z.jsx)(zm, {
                        children: (0, z.jsx)(xh, {
                            ref: h,
                            direction: x?.direction,
                            alignment: x?.alignment,
                            theme: s,
                            className: Zu()(o, _h.anchoredBalloon, null == x && _h.hidden, null != x && _h[x.direction]),
                            style: x?.style,
                            children: i
                        }, a)
                    }, "balloon")
                })]
            })
        }));

        function Th(e, t, n) {
            if (t) {
                if ("start" === e) return "center";
                if ("center" === e) return "end"
            } else if (n) {
                if ("center" === e) return "start";
                if ("end" === e) return "center"
            }
            return e
        }

        function Eh(e, t, n, s) {
            return "up" === n ? {
                x: Ih(e, t, s),
                y: e.top - t.y
            } : "down" === n ? {
                x: Ih(e, t, s),
                y: e.bottom
            } : "left" === n ? {
                x: e.left - t.x,
                y: yh(e, t, s)
            } : "right" === n ? {
                x: e.right,
                y: yh(e, t, s)
            } : Ad
        }

        function Ih(e, t, n) {
            return "start" === n ? (e.left + e.right) / 2 - t.x : "end" === n ? (e.left + e.right) / 2 : (e.left + e.right - t.x) / 2
        }

        function yh(e, t, n) {
            return "start" === n ? (e.top + e.bottom) / 2 - t.y : "end" === n ? (e.top + e.bottom) / 2 : (e.top + e.bottom - t.y) / 2
        }

        function jh(e, t, n) {
            let s = 0;
            return ["left", "right"].includes(t) && e.y < n && (s = -1 * (e.y - n)), {
                left: `${e.x.toFixed(0)}px`,
                top: `${e.y.toFixed(0)}px`,
                "--posX": `${e.x.toFixed(0)}px`,
                "--posY": `${e.y.toFixed(0)}px`,
                "--offsetY": s ? `${s}px` : "0px"
            }
        }
        X.add("game-ui/common/balloon/anchored-balloon.tsx", {
            get AnchoredBalloon() {
                return bh
            },
            set AnchoredBalloon(e) {
                bh = e
            }
        });
        class Sh {
            constructor(e = !0) {
                this.propagateCurrent = e, this._parentController = null, this._enabled = !1, this._focusKey = null, this._lastFocused = !1, this.callbacks = [], this.isChildFocused = e => this.focused && this.isChildFocusedImpl(e), this.attachCallback = e => {
                    this.callbacks.includes(e) ? console.error(`${this.constructor.name}: Focus callback already attached to controller!\n${this.debugTrace()}`) : (this.callbacks.push(e), this._lastFocused && e(!0, this.propagateCurrent ? this : null))
                }, this.detachCallback = e => {
                    const t = this.callbacks.indexOf(e); - 1 !== t ? (this.callbacks.splice(t, 1), this._lastFocused && e(!1, this.propagateCurrent ? this : null)) : console.error(`${this.constructor.name}: Focus callback not attached to controller!\n${this.debugTrace()}`)
                }, this.updateChildren = e => {
                    if (this._lastFocused)
                        for (const t of this.callbacks) t(!0, e)
                }, this.onFocusUpdate = (e, t) => {
                    const n = e && this.focused;
                    if (n !== this._lastFocused) {
                        this._lastFocused = n;
                        for (const e of this.callbacks) e(this._lastFocused, this.propagateCurrent ? t : null);
                        n && this.onFocusEnterImpl(t)
                    }
                }
            }
            get focused() {
                return this._enabled && null != this._parentController && null != this._focusKey && this._parentController.isChildFocused(this._focusKey)
            }
            attachTo(e) {
                null == this._parentController ? (this._parentController = e, this._tryAttach()) : console.error(`${this.constructor.name}: The controller has already been attached to a parent!\n${this.debugTrace()}`)
            }
            detach() {
                null != this._parentController ? (this._tryDetach(), this._parentController = null) : console.error(`${this.constructor.name}: The controller is not attached to parent!\n${this.debugTrace()}`)
            }
            get enabled() {
                return this._enabled
            }
            set enabled(e) {
                e !== this._enabled && (this._tryDetach(), this._enabled = e, this._tryAttach())
            }
            get focusKey() {
                return this._focusKey
            }
            set focusKey(e) {
                e !== this._focusKey && (this._tryDetach(), this._focusKey = e, this._tryAttach())
            }
            onFocusEnterImpl(e) {}
            _tryAttach() {
                this._enabled && null != this._parentController && null != this._focusKey && (this._parentController.registerChild(this._focusKey, this), this._parentController.attachCallback(this.onFocusUpdate))
            }
            _tryDetach() {
                this._enabled && null != this._parentController && null != this._focusKey && (this._parentController.detachCallback(this.onFocusUpdate), this._parentController.unregisterChild(this._focusKey))
            }
            debugTrace() {
                let e = `<-- ${this.debugName}`;
                return null != this._parentController && (e += "\n", e += this._parentController.debugTrace()), e
            }
            deepDebugTrace() {
                let e = `--> ${this.debugName}`;
                return null != this.debugFocusedChild && (e += "\n", e += this.debugFocusedChild.deepDebugTrace()), e
            }
            get debugName() {
                return this._focusKey?.toString() ?? "<no-key>"
            }
        }

        function Ch(e, t = !0, n = !0) {
            const s = (0, Y.useMemo)((() => new Nh), []);
            return s.debugName = e, s.childFocused = n, s.enabled = t, s
        }
        X.add("game-ui/common/focus/controller/focus-controller-base.ts", {});
        class Nh extends Sh {
            childElement = null;
            _childFocused = !1;
            get enabled() {
                return super.enabled
            }
            set enabled(e) {
                super.enabled = e
            }
            get childFocused() {
                return this._childFocused
            }
            set childFocused(e) {
                e !== this._childFocused && (this._childFocused = e, this.updateChildren(this))
            }
            _debugName = "PassThroughFocusController";
            get debugName() {
                return this._debugName
            }
            set debugName(e) {
                this._debugName = e
            }
            isChildFocusedImpl = e => this._childFocused && e === this.focusKey;
            registerChild = (e, t) => {
                null == this.focusKey ? (this.childElement = t, this.focusKey = e) : console.error(`Cannot register second focus key '${e}'! PassThroughFocusControllers can only host a single child.\nRegistered key: ${this.focusKey}\n${this.debugTrace()}`)
            };
            unregisterChild = e => {
                this.focusKey === e ? (this.focusKey = null, this.childElement = null) : console.error(`Attempted to unregister mismatching focus key '${e}' from a PassThroughFocusController!\nRegistered key: ${this.focusKey}\n${this.debugTrace()})`)
            };
            getBounds = () => this.childElement?.getBounds() ?? null;
            getFocusedBounds() {
                return this.childElement?.getFocusedBounds() ?? null
            }
            get debugFocusedChild() {
                return this.childElement
            }
        }

        function wh(e) {
            const [t, n] = (0, Y.useState)(!1);
            return (0, Y.useEffect)((() => (e.attachCallback(n), () => e.detachCallback(n))), [e]), t
        }

        function Oh(e) {
            const t = (0, Y.useRef)(!1);
            return (0, Y.useEffect)((() => {
                const n = e => {
                    t.current = e
                };
                return e.attachCallback(n), () => e.detachCallback(n)
            }), [e]), t
        }

        function Ph(e, t) {
            (0, Y.useEffect)((() => {
                if (null != t) return e.attachCallback(t), () => e.detachCallback(t)
            }), [t, e])
        }
        X.add("game-ui/common/focus/controller/pass-through-focus-controller.tsx", {
            get usePassThroughFocusController() {
                return Ch
            },
            set usePassThroughFocusController(e) {
                Ch = e
            }
        }), X.add("game-ui/common/focus/focus-hooks.tsx", {
            get useFocused() {
                return wh
            },
            set useFocused(e) {
                wh = e
            },
            get useFocusedRef() {
                return Oh
            },
            set useFocusedRef(e) {
                Oh = e
            },
            get useFocusCallback() {
                return Ph
            },
            set useFocusCallback(e) {
                Ph = e
            }
        });
        var Lh = ({
            controller: e,
            children: t
        }) => {
            const n = (0, Y.useContext)(Ju);
            return (0, Y.useEffect)((() => {
                e.attachTo(n)
            }), [e, n]), (0, Y.useLayoutEffect)((() => () => e.detach()), [e, n]), (0, z.jsx)(Ju.Provider, {
                value: e,
                children: t
            })
        };
        X.add("game-ui/common/focus/focus-node.tsx", {
            get FocusNode() {
                return Lh
            },
            set FocusNode(e) {
                Lh = e
            }
        });
        var Ah = ({
            disabled: e,
            children: t,
            onFocusChange: n
        }) => {
            const s = Ch("FocusBoundary", !e);
            return Ph(s, n), (0, z.jsx)(Lh, {
                controller: s,
                children: t
            })
        };
        X.add("game-ui/common/focus/focus-boundary.tsx", {
            get FocusBoundary() {
                return Ah
            },
            set FocusBoundary(e) {
                Ah = e
            }
        });
        const Mh = "tutorials";
        var Rh = $r(Mh, "tutorialsEnabled"),
            kh = $r(Mh, "introActive"),
            Dh = $r(Mh, "activeList"),
            Fh = $r(Mh, "next"),
            Uh = $r(Mh, "pending"),
            Bh = $r(Mh, "categories"),
            Gh = Xr(Mh, "groups"),
            Vh = qr(!1),
            Hh = e => {
                Vh.update(e)
            },
            Kh = Xr(Mh, "tutorials"),
            Wh = $r(Mh, "activeTutorial"),
            zh = $r(Mh, "activeTutorialPhase"),
            Yh = $r(Mh, "listIntroActive"),
            $h = $r(Mh, "listOutroActive"),
            qh = el(Mh, "activateTutorial"),
            Xh = el(Mh, "activateTutorialPhase"),
            Qh = el(Mh, "forceTutorial"),
            Zh = e => Hh(void 0 !== e ? e : !Vh.value),
            Jh = Jr(Mh, "completeActiveTutorialPhase"),
            eg = Jr(Mh, "completeActiveTutorial"),
            tg = el(Mh, "completeIntro"),
            ng = Jr(Mh, "completeListIntro"),
            sg = Jr(Mh, "completeListOutro"),
            ig = el(Mh, "setTutorialTagActive"),
            ag = el(Mh, "activateTutorialTrigger"),
            og = (e, t = !0) => {
                (0, Y.useEffect)((() => {
                    if (e && t) return ig(e, !0), () => {
                        ig(e, !1)
                    }
                }), [t, e])
            },
            rg = (e, t = !0) => {
                (0, Y.useEffect)((() => {
                    e && t && ag(e)
                }), [e, t])
            };

        function lg(e, t = !0) {
            (0, Y.useEffect)((() => {
                if (e && t) return ag(e), ig(e, !0), () => {
                    ig(e, !1)
                }
            }), [t, e])
        }
        var cg, ug, dg, mg = qr(!1);

        function hg(e) {
            mg.update("boolean" == typeof e ? e : !mg.value)
        }! function (e) {
            e[e.Tutorial = 0] = "Tutorial", e[e.Group = 1] = "Group"
        }(cg || (cg = {})),
        function (e) {
            e[e.KeyboardAndMouse = 1] = "KeyboardAndMouse", e[e.Gamepad = 2] = "Gamepad", e[e.All = 3] = "All"
        }(ug || (ug = {})),
        function (e) {
            e[e.Balloon = 0] = "Balloon", e[e.Card = 1] = "Card", e[e.CenterCard = 2] = "CenterCard"
        }(dg || (dg = {})), X.add("game-ui/game/data-binding/tutorial-bindings.ts", {
            get tutorialsEnabled() {
                return tutorialsEnabled
            },
            set tutorialsEnabled(e) {
                tutorialsEnabled = e
            },
            get tutorialIntroActive() {
                return tutorialIntroActive
            },
            set tutorialIntroActive(e) {
                tutorialIntroActive = e
            },
            get activeTutorialList() {
                return activeTutorialList
            },
            set activeTutorialList(e) {
                activeTutorialList = e
            },
            get nextTutorial() {
                return nextTutorial
            },
            set nextTutorial(e) {
                nextTutorial = e
            },
            get tutorialPending() {
                return tutorialPending
            },
            set tutorialPending(e) {
                tutorialPending = e
            },
            get tutorialCategories() {
                return tutorialCategories
            },
            set tutorialCategories(e) {
                tutorialCategories = e
            },
            get tutorialGroups() {
                return tutorialGroups
            },
            set tutorialGroups(e) {
                tutorialGroups = e
            },
            get tutorialListFocused() {
                return tutorialListFocused
            },
            set tutorialListFocused(e) {
                tutorialListFocused = e
            },
            get setTutorialListFocused() {
                return Hh
            },
            set setTutorialListFocused(e) {
                Hh = e
            },
            get tutorials() {
                return tutorials
            },
            set tutorials(e) {
                tutorials = e
            },
            get activeTutorial() {
                return activeTutorial
            },
            set activeTutorial(e) {
                activeTutorial = e
            },
            get activeTutorialPhase() {
                return activeTutorialPhase
            },
            set activeTutorialPhase(e) {
                activeTutorialPhase = e
            },
            get listIntroActive() {
                return listIntroActive
            },
            set listIntroActive(e) {
                listIntroActive = e
            },
            get listOutroActive() {
                return listOutroActive
            },
            set listOutroActive(e) {
                listOutroActive = e
            },
            get activateTutorial() {
                return qh
            },
            set activateTutorial(e) {
                qh = e
            },
            get activateTutorialPhase() {
                return Xh
            },
            set activateTutorialPhase(e) {
                Xh = e
            },
            get forceTutorial() {
                return Qh
            },
            set forceTutorial(e) {
                Qh = e
            },
            get toggleTutorialListFocus() {
                return Zh
            },
            set toggleTutorialListFocus(e) {
                Zh = e
            },
            get completeActiveTutorialPhase() {
                return Jh
            },
            set completeActiveTutorialPhase(e) {
                Jh = e
            },
            get completeActiveTutorial() {
                return eg
            },
            set completeActiveTutorial(e) {
                eg = e
            },
            get completeIntro() {
                return tg
            },
            set completeIntro(e) {
                tg = e
            },
            get completeListIntro() {
                return ng
            },
            set completeListIntro(e) {
                ng = e
            },
            get completeListOutro() {
                return sg
            },
            set completeListOutro(e) {
                sg = e
            },
            get activateTutorialTag() {
                return ig
            },
            set activateTutorialTag(e) {
                ig = e
            },
            get triggerTutorialTag() {
                return ag
            },
            set triggerTutorialTag(e) {
                ag = e
            },
            get useTutorialTagActivation() {
                return og
            },
            set useTutorialTagActivation(e) {
                og = e
            },
            get useTutorialTagTrigger() {
                return rg
            },
            set useTutorialTagTrigger(e) {
                rg = e
            },
            get useTutorialTag() {
                return lg
            },
            set useTutorialTag(e) {
                lg = e
            },
            get advisorPanelVisible() {
                return advisorPanelVisible
            },
            set advisorPanelVisible(e) {
                advisorPanelVisible = e
            },
            get toggleAdvisorPanel() {
                return hg
            },
            set toggleAdvisorPanel(e) {
                hg = e
            },
            get AdvisorItemType() {
                return cg
            },
            set AdvisorItemType(e) {
                cg = e
            },
            get TutorialControlScheme() {
                return ug
            },
            set TutorialControlScheme(e) {
                ug = e
            },
            get TutorialPhaseType() {
                return dg
            },
            set TutorialPhaseType(e) {
                dg = e
            }
        });
        X.add("game-ui/game/components/tutorials/tutorial-target/tutorial-target-manager.ts", {});
        const gg = new class {
            activeBlinkTags = new Array;
            activeBalloonTags = new Array;
            mountedBlinkComponents = new Map;
            mountedBalloonComponents = new Map;
            blinkTagsDirty = !0;
            balloonTagsDirty = !0;
            activateTags(e, t) {
                this.activeBlinkTags.length = 0, this.activeBalloonTags.length = 0, null !== e && e.forEach((e => this.activeBlinkTags.push(e.map((e => e.toLowerCase()))))), null !== t && t.forEach((e => this.activeBalloonTags.push(e.toLowerCase()))), this.refreshBlinkTags(), this.refreshBalloonTags()
            }
            mountBlinkListener(e, t) {
                this.mountedBlinkComponents.set(e.toLowerCase(), t), this.blinkTagsDirty = !0
            }
            mountBalloonListener(e, t, n, s) {
                this.mountedBalloonComponents.set(e.toLowerCase(), [t, n, s]), this.balloonTagsDirty = !0
            }
            unmountBlinkListener(e) {
                this.mountedBlinkComponents.delete(e.toLowerCase()), this.blinkTagsDirty = !0
            }
            unmountBalloonListener(e) {
                this.mountedBalloonComponents.delete(e.toLowerCase()), this.balloonTagsDirty = !0
            }
            refreshBlinkTags() {
                const e = this.FindTopBlinkTags();
                this.mountedBlinkComponents.forEach(((t, n) => t(null != e && void 0 !== e.find((e => e.split("|").map((e => e.trim())).includes(n)))))), this.blinkTagsDirty = !1
            }
            refreshBalloonTags() {
                const [e, t] = this.FindTopBalloonTag();
                this.mountedBalloonComponents.forEach((([n, s, i], a) => {
                    let o = !1;
                    const r = e?.split("|").map((e => e.trim()));
                    if (void 0 !== r) {
                        const e = r.indexOf(a);
                        if (e > 0) {
                            let t = !0;
                            for (let n = e - 1; n >= 0; n--) this.mountedBalloonComponents.has(r[n]) && (t = !1);
                            o = t
                        } else o = 0 === e
                    }
                    n(o), s(o && e !== this.activeBalloonTags[0]), i(t)
                })), this.balloonTagsDirty = !1
            }
            isBlinkTagsDirty() {
                return this.blinkTagsDirty
            }
            isBalloonTagsDirty() {
                return this.balloonTagsDirty
            }
            FindTopBlinkTags() {
                for (let e = 0; e < this.activeBlinkTags.length; ++e)
                    for (let t = 0; t < this.activeBlinkTags[e].length; t++)
                        if (this.mountedBlinkComponents.has(this.activeBlinkTags[e][t])) return this.activeBlinkTags[e];
                return null
            }
            FindTopBalloonTag() {
                for (let e = 0; e < this.activeBalloonTags.length; ++e) {
                    const t = this.activeBalloonTags[e].split("|").map((e => e.trim()));
                    for (let n = 0; n < t.length; n++)
                        if (this.mountedBalloonComponents.has(t[n])) return [this.activeBalloonTags[e], e]
                }
                return [null, -1]
            }
        };
        var pg = Y.createContext(gg),
            fg = Y.createContext(!1),
            xg = ({
                children: e
            }) => {
                const t = sl(zh),
                    n = (0, Y.useMemo)((() => null != t && t.type === dg.Balloon ? t.balloonTargets.map((e => e.uiTag)) : null), [t]),
                    s = t?.trigger?.active ? t.trigger.blinkTags : null;
                return vg(s, n), (0, z.jsx)(pg.Provider, {
                    value: gg,
                    children: e
                })
            };
        const vg = (e, t) => {
            const n = (0, Y.useContext)(pg);
            (0, Y.useEffect)((() => (n.activateTags(e, t), () => n.activateTags(null, null))), [n, e, t]), (0, Y.useEffect)((() => {
                let e = 0;
                const t = () => {
                    n.isBalloonTagsDirty() && n.refreshBalloonTags(), n.isBlinkTagsDirty() && n.refreshBlinkTags(), e = window.requestAnimationFrame(t)
                };
                return t(), () => window.cancelAnimationFrame(e)
            }), [n])
        };
        X.add("game-ui/game/components/tutorials/tutorial-target/tutorial-context.tsx", {
            get TutorialContext() {
                return pg
            },
            set TutorialContext(e) {
                pg = e
            },
            get TooltipDisableContext() {
                return fg
            },
            set TooltipDisableContext(e) {
                fg = e
            },
            get TutorialTargetProvider() {
                return xg
            },
            set TutorialTargetProvider(e) {
                xg = e
            }
        });
        let _g = {
            balloon: "balloon_qJY balloon_H23",
            enter: "enter_ZTk",
            "enter-active": "enter-active_AJs",
            enterActive: "enter-active_AJs",
            "exit-active": "exit-active_RfZ",
            exitActive: "exit-active_RfZ",
            container: "container_zgM container_jfe",
            arrow: "arrow_SVb arrow_Xfn",
            content: "content_A82 content_JQV"
        };
        X.add("game-ui/common/tooltip/tooltip.module.scss", {
            get classes() {
                return _g
            },
            set classes(e) {
                Object.assign(_g, e)
            }
        });
        const bg = _g;
        var Tg = ({
            tooltip: e,
            forceVisible: t,
            disabled: n,
            theme: s = bg,
            direction: i,
            alignment: a,
            className: o,
            children: r,
            anchorElRef: l
        }) => {
            const [c, u] = (0, Y.useState)(!1), d = (0, Y.useCallback)((() => u(!0)), []), m = (0, Y.useCallback)((() => u(!1)), []), h = (0, Y.useCallback)((() => u(!1)), []), [g, p] = (0, Y.useState)(!1), f = (0, Y.useCallback)((e => p(e)), []), x = Dm();
            (0, Y.useEffect)((() => {
                if (x && g) {
                    const e = jm.subscribe((e => {
                        e && p(!1)
                    }));
                    return () => e.dispose()
                }
            }), [x, g]);
            const v = (0, Y.useRef)(null),
                _ = (0, Y.useCallback)((e => {
                    v.current !== e && (null != v.current && (v.current.removeEventListener("mouseover", d), v.current.removeEventListener("mouseleave", m), v.current.removeEventListener("mousedown", h)), null != e && (e.addEventListener("mouseover", d), e.addEventListener("mouseleave", m), e.addEventListener("mousedown", h)), v.current = e)
                }), [h, m, d]),
                b = !!e && Y.Children.count(r) > 0,
                T = (0, Y.useContext)(fg);
            return (0, z.jsx)(z.Fragment, {
                children: (0, z.jsx)(Ah, {
                    onFocusChange: f,
                    children: (0, z.jsx)(bh, {
                        visible: (x && g || t || c) && b && !n && !T,
                        direction: i,
                        alignment: a,
                        theme: s,
                        content: e,
                        className: o,
                        anchorElRef: l,
                        children: (0, z.jsx)(vd, {
                            ref: _,
                            children: r
                        })
                    })
                })
            })
        };
        X.add("game-ui/common/tooltip/tooltip.tsx", {
            get Tooltip() {
                return Tg
            },
            set Tooltip(e) {
                Tg = e
            }
        });
        class Eg {
            constructor(e) {
                this.debugName = e, this.r = Math.floor(1e6 * Math.random())
            }
            toString() {
                return `${this.debugName}:${this.r}`
            }
        }
        var Ig = new Eg("FOCUS_DISABLED"),
            yg = new Eg("FOCUS_AUTO");

        function jg(e, t) {
            return (0, Y.useMemo)((() => e === Ig ? null : e === yg ? new Eg(t) : e), [e, t])
        }
        X.add("game-ui/common/focus/focus-key.ts", {
            get FOCUS_DISABLED() {
                return Ig
            },
            set FOCUS_DISABLED(e) {
                Ig = e
            },
            get FOCUS_AUTO() {
                return yg
            },
            set FOCUS_AUTO(e) {
                yg = e
            },
            get useUniqueFocusKey() {
                return jg
            },
            set useUniqueFocusKey(e) {
                jg = e
            }
        });
        var Sg, Cg = {
                attachChild: () => {},
                detachChild: () => {},
                transformStack: () => {},
                setDirty: () => {}
            },
            Ng = Y.createContext(Cg),
            wg = Y.createContext(Cg);

        function Og(e, t) {
            const n = (0, Y.useContext)(e === Sg.AlwaysActive ? wg : Ng),
                s = (0, Y.useMemo)((() => new Pg), []);
            return (0, Y.useEffect)((() => {
                s.transformer = t
            }), [s, t]), (0, Y.useEffect)((() => {
                if (e !== Sg.Disabled) return s.attachTo(n), () => s.detach()
            }), [e, s, n]), s
        }! function (e) {
            e[e.Disabled = 0] = "Disabled", e[e.ActiveOnFocus = 1] = "ActiveOnFocus", e[e.AlwaysActive = 2] = "AlwaysActive"
        }(Sg || (Sg = {}));
        class Pg {
            _parent = null;
            _child = null;
            _transformer = null;
            get transformer() {
                return this._transformer
            }
            set transformer(e) {
                this._transformer !== e && (this._transformer = e, this.setDirty())
            }
            attachTo(e) {
                this._parent = e, this._parent.attachChild(this)
            }
            detach() {
                null != this._parent ? (this._parent.detachChild(this), this._parent = null) : console.error("The input controller is not attached to parent!")
            }
            attachChild(e) {
                this._child !== e && (this._child = e, this.setDirty())
            }
            detachChild(e) {
                this._child === e && (this._child = null, this.setDirty())
            }
            transformStack(e) {
                null != this._transformer && this._transformer(e), null != this._child && this._child.transformStack(e)
            }
            setDirty() {
                null != this._parent && this._parent.setDirty()
            }
        }
        class Lg {
            constructor(e, t) {
                this.stack = e, this.onStackChanged = t, this._child = [], this._udpateHandle = null
            }
            attachChild(e) {
                this._child.indexOf(e) < 0 && (this._child.push(e), this.setDirty())
            }
            detachChild(e) {
                const t = this._child.indexOf(e);
                t >= 0 && (this._child.splice(t, 1), this.setDirty())
            }
            transformStack() {}
            setDirty() {
                this._udpateHandle && cancelAnimationFrame(this._udpateHandle), this._udpateHandle = requestAnimationFrame((() => {
                    this.stack.clear();
                    for (let e = 0; e < this._child.length; e += 1) this._child[e].transformStack(this.stack);
                    this.onStackChanged(), this._udpateHandle = null
                }))
            }
        }
        X.add("game-ui/common/input-events/input-controller.ts", {
            get defaultInputController() {
                return Cg
            },
            set defaultInputController(e) {
                Cg = e
            },
            get InputContext() {
                return Ng
            },
            set InputContext(e) {
                Ng = e
            },
            get InputRootContext() {
                return wg
            },
            set InputRootContext(e) {
                wg = e
            },
            get InputControllerState() {
                return Sg
            },
            set InputControllerState(e) {
                Sg = e
            },
            get useInputController() {
                return Og
            },
            set useInputController(e) {
                Og = e
            }
        });
        var Ag = Y.memo((function ({
            actions: e,
            disabled: t,
            ignoreFocusState: n = !1,
            children: s
        }) {
            const i = Ch("InputActionConsumer"),
                a = wh(i),
                o = (0, Y.useCallback)((t => {
                    if (null != e) {
                        const n = Object.entries(e);
                        for (let e = n.length - 1; e >= 0; e--) {
                            const [s, i] = n[e];
                            null != i && t.push(s, i)
                        }
                    }
                }), [e]),
                r = Og(n ? Sg.AlwaysActive : a ? Sg.ActiveOnFocus : Sg.Disabled, t ? null : o);
            return n ? (0, z.jsx)(z.Fragment, {
                children: s
            }) : (0, z.jsx)(Lh, {
                controller: i,
                children: (0, z.jsx)(Ng.Provider, {
                    value: r,
                    children: s
                })
            })
        }), ((e, t) => {
            const {
                actions: n,
                ...s
            } = e, {
                actions: i,
                ...a
            } = t;
            return Kr(s, a) && Kr(e.actions, t.actions)
        }));
        const Mg = ({
            disabled: e,
            children: t,
            action: n,
            onAction: s
        }) => {
            const i = (0, Y.useMemo)((() => ({
                [n]: s
            })), [n, s]);
            return (0, z.jsx)(Ag, {
                actions: i,
                disabled: e,
                children: t
            })
        };
        var Rg, kg = ({
                action: e = "Select",
                ...t
            }) => (0, z.jsx)(Mg, {
                action: e,
                ...t
            }),
            Dg = ({
                action: e = "Back",
                ...t
            }) => (0, z.jsx)(Mg, {
                action: e,
                ...t
            }),
            Fg = ({
                action: e = "Close",
                ...t
            }) => (0, z.jsx)(Mg, {
                action: e,
                ...t
            }),
            Ug = ({
                expanded: e,
                expandable: t,
                disabled: n,
                children: s,
                onAction: i
            }) => {
                const a = (0, Y.useMemo)((() => ({
                    [e ? "Collapse Group" : "Expand Group"]: t ? i : null
                })), [t, e, i]);
                return (0, z.jsx)(Ag, {
                    actions: a,
                    disabled: n,
                    children: s
                })
            };

        function Bg(e, t, n) {
            return (0, Y.useMemo)((() => new Gg(e, t, n)), [e, t, n])
        }
        X.add("game-ui/common/input-events/input-action-consumer.tsx", {
            get InputActionConsumer() {
                return Ag
            },
            set InputActionConsumer(e) {
                Ag = e
            },
            get SelectConsumer() {
                return kg
            },
            set SelectConsumer(e) {
                kg = e
            },
            get BackConsumer() {
                return Dg
            },
            set BackConsumer(e) {
                Dg = e
            },
            get CloseConsumer() {
                return Fg
            },
            set CloseConsumer(e) {
                Fg = e
            },
            get ExpandConsumer() {
                return Ug
            },
            set ExpandConsumer(e) {
                Ug = e
            }
        });
        class Gg extends Sh {
            constructor(e, t, n) {
                super(), this.activation = t, this.limits = n, this.children = new Map, this._focusedChildKey = null, this.onRefocus = null, this.isChildFocusedImpl = e => e === this._focusedChildKey && this.children.has(this._focusedChildKey), this.registerChild = (e, t) => {
                    this.children.has(e) ? console.error(`The focus key '${String(e)}' has already been registered in this MultiChildFocusController!\n${this.debugTrace()}`) : (this.children.set(e, t), this.enabled || (this.activation === qu.FocusedChild ? this.enabled = this._focusedChildKey === e : this.activation === qu.AnyChildren && (this.enabled = !0)), !this.onRefocus || !this.focused || null != this._focusedChildKey && this.children.has(this._focusedChildKey) || this.onRefocus(null))
                }, this.unregisterChild = e => {
                    const t = this.children.get(e);
                    null != t ? (this.enabled && (this.activation === qu.FocusedChild ? this.enabled = this._focusedChildKey !== e : this.activation === qu.AnyChildren && (this.enabled = this.children.size > 1)), this.children.delete(e), this.onRefocus && this.focused && e === this.focusedChildKey && this.onRefocus(t)) : console.error(`Attempted to unregister mismatching focus key '${String(e)}' from a MultiChildFocusController!\n${this.debugTrace()}`)
                }, this.enabled = t === qu.Always, this.focusKey = e
            }
            get focusedChildKey() {
                return this._focusedChildKey
            }
            set focusedChildKey(e) {
                if (e === this._focusedChildKey) return;
                const t = null != this._focusedChildKey ? this.children.get(this._focusedChildKey) : void 0,
                    n = null != e && this.children.has(e);
                n || (this.enabled = this.activation !== qu.FocusedChild), this._focusedChildKey = e, n ? this.enabled ? this.updateChildren(t ?? null) : this.enabled = !0 : (null != this.onRefocus && this.onRefocus(t ?? null), null != t && this.updateChildren(t ?? null))
            }
            has(e) {
                return this.children.has(e)
            }
            get(e) {
                return this.children.get(e)
            }
            entries() {
                return this.children
            }
            getBounds() {
                let e = 0,
                    t = 0,
                    n = 0,
                    s = 0,
                    i = !1;
                for (const a of this.children.values()) {
                    const o = a.getBounds();
                    null != o && (i ? (e = Math.min(o.left, e), t = Math.min(o.top, t), n = Math.max(o.right, n), s = Math.max(o.bottom, s)) : (e = o.left, t = o.top, n = o.right, s = o.bottom, i = !0))
                }
                return i ? {
                    left: e,
                    top: t,
                    right: n,
                    bottom: s,
                    width: n - e,
                    height: s - t
                } : null
            }
            getFocusedBounds() {
                if (null != this._focusedChildKey) {
                    const e = this.children.get(this._focusedChildKey);
                    if (null != e) return e.getFocusedBounds()
                }
                return null
            }
            onFocusEnterImpl(e) {
                null != this.onRefocus && this.onRefocus(e)
            }
            get debugFocusedChild() {
                return null != this._focusedChildKey ? this.children.get(this._focusedChildKey) ?? null : null
            }
        }

        function Vg(e, t) {
            switch (t) {
            case Rg.Horizontal:
                return Math.abs(e.x) > Math.abs(e.y) ? {
                    x: Math.sign(e.x),
                    y: 0
                } : Ad;
            case Rg.Vertical:
                return Math.abs(e.y) > Math.abs(e.x) ? {
                    x: 0,
                    y: Math.sign(e.y)
                } : Ad;
            case Rg.Both:
                return Bd(e);
            default:
                return Ad
            }
        }

        function Hg(e, t, n) {
            let s = Number.MAX_VALUE,
                i = null;
            for (const [a, o] of e.entries()) {
                const r = o.getBounds();
                if (null == r) continue;
                let l = 0,
                    c = 0;
                switch (e.limits) {
                case Xu.Center: {
                    const e = Xg(r, n);
                    if (null == e) continue;
                    l = e.x - t.x, c = e.y - t.y;
                    break
                }
                case Xu.Bounds:
                    l = t.x < r.left ? r.left - t.x : r.left <= t.x && t.x <= r.right ? 0 : t.x - r.right, c = t.y < r.top ? r.top - t.y : r.top <= t.y && t.y <= r.bottom ? 0 : t.y - r.bottom
                }
                const u = l * l + c * c;
                u < s && (s = u, i = a)
            }
            return i
        }

        function Kg(e, t, n, s, i) {
            let a = null,
                o = Number.MAX_VALUE;
            const r = {
                    x: .5 + .5 * n.x,
                    y: .5 - .5 * n.y
                },
                l = t.getFocusedBounds(),
                c = Xg(l, r);
            if (l && c)
                for (const [t, r] of e.entries()) {
                    if (t === i) continue;
                    const u = r.getBounds();
                    if (null == u) continue;
                    const d = Xg(u, s);
                    if (null == d) continue;
                    const m = d.x - c.x,
                        h = d.y - c.y;
                    if (m * n.x - h * n.y <= 0) continue;
                    let g = 0,
                        p = 0;
                    switch (e.limits) {
                    case Xu.Center: {
                        const e = {
                            x: Od(c.x, u.left, u.right),
                            y: Od(c.y, u.top, u.bottom)
                        };
                        g = e.x - c.x, p = e.y - c.y;
                        break
                    }
                    case Xu.Bounds:
                        g = u.right <= l.left ? l.left - u.right : u.right >= l.left && u.right <= l.right || u.left >= l.left && u.left <= l.right ? 0 : l.right - u.left, g = u.bottom <= l.top ? l.top - u.bottom : u.bottom >= l.top && u.bottom <= l.bottom || u.top >= l.top && u.top <= l.bottom ? 0 : l.bottom - u.top
                    }
                    const f = g * n.x - p * n.y,
                        x = p * n.x + g * n.y,
                        v = 1 * f + 5 * Math.abs(x);
                    v < o && (a = t, o = v)
                }
            return a
        }
        X.add("game-ui/common/focus/controller/multi-child-focus-controller.tsx", {
                get useMultiChildFocusController() {
                    return Bg
                },
                set useMultiChildFocusController(e) {
                    Bg = e
                }
            }),
            function (e) {
                e.Horizontal = "horizontal", e.Vertical = "vertical", e.Both = "both", e.None = "none"
            }(Rg || (Rg = {}));
        var Wg = {
                x: .5,
                y: .5
            },
            zg = {
                x: .5,
                y: 0
            },
            Yg = {
                x: 0,
                y: .5
            },
            $g = {
                x: .5,
                y: 1
            },
            qg = {
                x: 1,
                y: .5
            };

        function Xg(e, t) {
            return null != e ? {
                x: e.left * (1 - t.x) + e.right * t.x,
                y: e.top * (1 - t.y) + e.bottom * t.y
            } : null
        }
        X.add("game-ui/common/focus/navigation.ts", {
            get NavigationDirection() {
                return Rg
            },
            set NavigationDirection(e) {
                Rg = e
            },
            get transformNavigationInput() {
                return Vg
            },
            set transformNavigationInput(e) {
                Vg = e
            },
            get getClosestKey() {
                return Hg
            },
            set getClosestKey(e) {
                Hg = e
            },
            get getClosestKeyInDirection() {
                return Kg
            },
            set getClosestKeyInDirection(e) {
                Kg = e
            },
            get focusAnchorCenter() {
                return Wg
            },
            set focusAnchorCenter(e) {
                Wg = e
            },
            get focusAnchorTop() {
                return zg
            },
            set focusAnchorTop(e) {
                zg = e
            },
            get focusAnchorLeft() {
                return Yg
            },
            set focusAnchorLeft(e) {
                Yg = e
            },
            get focusAnchorBottom() {
                return $g
            },
            set focusAnchorBottom(e) {
                $g = e
            },
            get focusAnchorRight() {
                return qg
            },
            set focusAnchorRight(e) {
                qg = e
            },
            get getElementFocusPosition() {
                return Xg
            },
            set getElementFocusPosition(e) {
                Xg = e
            }
        });
        var Qg = ({
                focusKey: e = yg,
                debugName: t = "NavigationScope",
                focused: n,
                direction: s = Rg.Both,
                activation: i = qu.AnyChildren,
                limits: a = Xu.Center,
                children: o,
                onChange: r,
                onRefocus: l,
                allowFocusExit: c = !0,
                allowLooping: u = !1
            }) => {
                const d = Bg(jg(e, t), i, a);
                (0, Y.useEffect)((() => {
                    d.focusedChildKey = n
                }), [d, n]), (0, Y.useEffect)((() => {
                    if (null != l) return !d.focused || null != d.focusedChildKey && d.has(d.focusedChildKey) || r(l(d, null)), d.onRefocus = e => {
                        r(l(d, e))
                    }, () => {
                        d.onRefocus = null
                    }
                }), [d, r, l]);
                const m = (0, Y.useCallback)((e => {
                        const t = null !== d.focusedChildKey && d.get(d.focusedChildKey);
                        let n = null;
                        if ((null === d.focusedChildKey || !t) && (n = Hg(d, Ad, Wg), null !== n)) return r(n), !0;
                        if (t && (n = Kg(d, t, e, Wg, d.focusedChildKey || void 0), null !== n)) return r(n), !0;
                        if (u && d.children.size > 1) {
                            const t = [...d.children.keys()];
                            if (e.x > 0 || e.y < 0 ? n = t[0] : (e.x < 0 || e.y > 0) && (n = t[d.children.size - 1]), null !== n) return r(n), !0
                        }
                        return !c
                    }), [c, u, d, r]),
                    h = s === Rg.Both || s === Rg.Horizontal,
                    g = s === Rg.Both || s === Rg.Vertical,
                    p = (0, Y.useMemo)((() => ({
                        "Move Horizontal": h ? e => m({
                            x: e,
                            y: 0
                        }) : null,
                        "Move Vertical": g ? e => m({
                            x: 0,
                            y: e
                        }) : null
                    })), [h, g, m]);
                return (0, z.jsx)(Ag, {
                    actions: p,
                    children: (0, z.jsx)(Lh, {
                        controller: d,
                        children: o
                    })
                })
            },
            Zg = (e, t) => null != e.focusedChildKey && e.has(e.focusedChildKey) ? e.focusedChildKey : Jg(e, t),
            Jg = (e, t) => {
                if (null == t && null != e.focusedChildKey && e.has(e.focusedChildKey)) return e.focusedChildKey;
                let n = Ad;
                null != t && (n = Xg(t.getFocusedBounds(), Wg) ?? Ad);
                return Hg(e, n, Wg)
            },
            ep = (e, t) => null == t && null != e.focusedChildKey && e.has(e.focusedChildKey) ? e.focusedChildKey : Hg(e, Ad, Wg);
        X.add("game-ui/common/focus/navigation-scope.tsx", {
            get NavigationScope() {
                return Qg
            },
            set NavigationScope(e) {
                Qg = e
            },
            get refocusClosestKeyIfNoFocus() {
                return Zg
            },
            set refocusClosestKeyIfNoFocus(e) {
                Zg = e
            },
            get refocusClosestKey() {
                return Jg
            },
            set refocusClosestKey(e) {
                Jg = e
            },
            get refocusTopLeft() {
                return ep
            },
            set refocusTopLeft(e) {
                ep = e
            }
        });
        var tp = ({
            focusKey: e = yg,
            initialFocused: t,
            direction: n,
            activation: s,
            limits: i,
            children: a,
            onChange: o,
            onRefocus: r = Jg,
            allowFocusExit: l = !0,
            forceFocus: c,
            debugName: u = "AutoNavigationScope",
            allowLooping: d = !1
        }) => {
            const [m, h] = (0, Y.useState)(t ?? null), g = (0, Y.useCallback)((e => {
                h(e), o && o(e)
            }), [o]);
            return (0, z.jsx)(Qg, {
                focusKey: e,
                focused: c ?? m,
                direction: n,
                activation: s,
                limits: i,
                debugName: u,
                onChange: g,
                onRefocus: r,
                allowFocusExit: l,
                allowLooping: d,
                children: a
            })
        };

        function np(e) {
            return (0, Y.useMemo)((() => new sp(e)), [e])
        }
        X.add("game-ui/common/focus/auto-navigation-scope.tsx", {
            get AutoNavigationScope() {
                return tp
            },
            set AutoNavigationScope(e) {
                tp = e
            }
        });
        class sp extends Sh {
            childFocusKey = null;
            childElement = null;
            constructor(e) {
                super(), this.focusKey = e
            }
            isChildFocusedImpl = e => e === this.childFocusKey;
            registerChild = (e, t) => {
                null == this.childFocusKey ? (this.childFocusKey = e, this.childElement = t, this.enabled = !0) : console.error(`Cannot register second focus key '${e}'! KeyFocusControllers can only host a single child.\nRegistered key: ${this.childFocusKey}\n${this.debugTrace()}`)
            };
            unregisterChild = e => {
                this.childFocusKey === e ? (this.enabled = !1, this.childFocusKey = null, this.childElement = null) : console.error(`Attempted to unregister mismatching focus key '${e}' from a KeyFocusController!\nRegistered key: ${this.childFocusKey}\n${this.debugTrace()}`)
            };
            getBounds = () => this.childElement?.getBounds() ?? null;
            getFocusedBounds() {
                return this.childElement?.getFocusedBounds() ?? null
            }
            get debugFocusedChild() {
                return this.childElement
            }
        }
        X.add("game-ui/common/focus/controller/key-focus-controller.tsx", {
            get useKeyFocusController() {
                return np
            },
            set useKeyFocusController(e) {
                np = e
            }
        });
        var ip = ({
            focusKey: e = yg,
            children: t
        }) => {
            const n = np(jg(e, "FocusKeyOverride"));
            return (0, z.jsx)(Lh, {
                controller: n,
                children: t
            })
        };
        X.add("game-ui/common/focus/focus-key-override.tsx", {
            get FocusKeyOverride() {
                return ip
            },
            set FocusKeyOverride(e) {
                ip = e
            }
        });
        var ap = ({
            focusKey: e = yg,
            debugName: t = "FocusScope",
            focused: n,
            activation: s = qu.FocusedChild,
            limits: i = Xu.Center,
            children: a
        }) => {
            const o = Bg(jg(e, t), s, i);
            return (0, Y.useEffect)((() => {
                o.focusedChildKey = n
            }), [o, n]), (0, z.jsx)(Lh, {
                controller: o,
                children: a
            })
        };
        X.add("game-ui/common/focus/focus-scope.tsx", {
            get FocusScope() {
                return ap
            },
            set FocusScope(e) {
                ap = e
            }
        });
        const op = "audio";
        var rp;

        function lp(e, t) {
            const n = "number" == typeof t ? t : 1;
            null != e && n && requestAnimationFrame((() => tl(op, "playSound", e, n)))
        }! function (e) {
            e.selectItem = "select-item", e.dragSlider = "drag-slider", e.hoverItem = "hover-item", e.expandPanel = "expand-panel", e.grabSlider = "grabSlider", e.selectDropdown = "select-dropdown", e.selectToggle = "select-toggle", e.focusInputField = "focus-input-field", e.signatureBuildingEvent = "signature-building-event", e.bulldoze = "bulldoze", e.bulldozeEnd = "bulldoze-end", e.relocateBuilding = "relocate-building", e.mapTilePurchaseMode = "map-tile-purchase-mode", e.mapTilePurchaseModeEnd = "map-tile-purchase-mode-end", e.xpEvent = "xp-event", e.milestoneEvent = "milestone-event", e.economy = "economy", e.chirpEvent = "chirp-event", e.likeChirp = "like-chirp", e.chirper = "chirper", e.purchase = "purchase", e.enableBuilding = "enable-building", e.disableBuilding = "disable-building", e.pauseSimulation = "pause-simulation", e.resumeSimulation = "resume-simulation", e.simulationSpeed1 = "simulation-speed-1", e.simulationSpeed2 = "simulation-speed-2", e.simulationSpeed3 = "simulation-speed-3", e.togglePolicy = "toggle-policy", e.takeLoan = "take-loan", e.removeItem = "remove-item", e.toggleInfoMode = "toggle-info-mode", e.takePhoto = "take-photo", e.tutorialTriggerCompleteEvent = "tutorial-trigger-complete-event", e.selectRadioNetwork = "select-radio-network", e.selectRadioStation = "select-radio-station", e.generateRandomName = "generate-random-name", e.decreaseElevation = "decrease-elevation", e.increaseElevation = "increase-elevation", e.selectPreviousItem = "select-previous-item", e.selectNextItem = "select-next-item", e.openPanel = "open-panel", e.closePanel = "close-panel", e.openMenu = "open-menu", e.closeMenu = "close-menu"
        }(rp || (rp = {})), X.add("game-ui/common/data-binding/audio-bindings.ts", {
            get UISound() {
                return rp
            },
            set UISound(e) {
                rp = e
            },
            get playUISound() {
                return lp
            },
            set playUISound(e) {
                lp = e
            }
        });
        var cp = {
                enter: rp.openPanel,
                exit: rp.closePanel
            },
            up = {
                enter: rp.openMenu,
                exit: rp.closeMenu
            };

        function dp(e) {
            const {
                state: t
            } = (0, Y.useContext)(ld);
            (0, Y.useEffect)((() => {
                t === td.enter ? lp(e?.enter) : t === td.exit && lp(e?.exit)
            }), [t, e?.enter, e?.exit])
        }
        X.add("game-ui/common/animations/transition-sounds.tsx", {
            get panelTransitionSounds() {
                return cp
            },
            set panelTransitionSounds(e) {
                cp = e
            },
            get menuTransitionSounds() {
                return up
            },
            set menuTransitionSounds(e) {
                up = e
            },
            get useTransitionSounds() {
                return dp
            },
            set useTransitionSounds(e) {
                dp = e
            }
        });
        var mp = Y.createContext({
            scrollTo: () => {},
            scrollBy: () => {},
            smoothScrollTo: () => {},
            scrollIntoView: () => {},
            updateThumbs: () => {}
        });

        function hp(e, t, n = qu.Always, s = !1) {
            const i = (0, Y.useCallback)((() => t.current?.getBoundingClientRect() || null), [t]),
                a = (0, Y.useMemo)((() => new gp(e, i, n, s)), [e, i, n, s]),
                o = (0, Y.useContext)(mp),
                r = al(Em);
            return Ph(a, (0, Y.useCallback)((e => {
                e && r.current === vm.gamepad && null != t.current && o.scrollIntoView(t.current)
            }), [r, t, o])), a
        }
        X.add("game-ui/common/scrolling/scrollable-context.ts", {
            get ScrollableContext() {
                return mp
            },
            set ScrollableContext(e) {
                mp = e
            }
        });
        class gp extends Sh {
            constructor(e, t, n, s) {
                super(), this.getBounds = t, this.activation = n, this.allowChildren = s, this.childFocusKey = null, this.childElement = null, this.isChildFocusedImpl = e => e === this.childFocusKey, this.registerChild = (e, t) => {
                    this.allowChildren ? null == this.childFocusKey ? (this.childFocusKey = e, this.childElement = t, this.activation !== qu.Always && (this.enabled = !0)) : console.error(`Cannot register second child '${e}'. This focus node can only host a single child!\nRegistered key: ${this.childFocusKey}\n${this.debugTrace()}`) : console.error(`${this.focusKey}: Cannot register child '${e}'. Children are not allowed in this focus node!`)
                }, this.unregisterChild = e => {
                    this.childFocusKey === e ? (this.childFocusKey = null, this.childElement = null, this.activation !== qu.Always && (this.enabled = !1)) : console.error(`Attempted to unregister mismatching focus key '${e}'!\nRegistered key: ${this.childFocusKey}\n${this.debugTrace()}`)
                }, this.enabled = this.activation === qu.Always, this.focusKey = e
            }
            getFocusedBounds() {
                return this.childElement?.getFocusedBounds() ?? this.getBounds()
            }
            get debugFocusedChild() {
                return this.childElement
            }
        }

        function pp() {
            return (0, Y.useMemo)((() => new fp), [])
        }
        X.add("game-ui/common/focus/controller/element-focus-context.tsx", {
            get useElementFocusController() {
                return hp
            },
            set useElementFocusController(e) {
                hp = e
            }
        });
        class fp extends Sh {
            childElement = null;
            constructor() {
                super(!1), this.enabled = !0
            }
            get debugName() {
                return "<root>"
            }
            isChildFocusedImpl = e => e === this.focusKey;
            registerChild = (e, t) => {
                null == this.focusKey ? (this.focusKey = e, this.childElement = t) : console.error(`Cannot register second focus key '${e}'! RootFocusControllers can only host a single child.\nRegistered key: ${this.focusKey}\n${this.debugTrace()}`)
            };
            unregisterChild = e => {
                this.focusKey === e ? (this.focusKey = null, this.childElement = null) : console.error(`Attempted to unregister mismatching focus key '${e}' from a RootFocusController!\nRegistered key: ${this.focusKey}\n${this.debugTrace()})`)
            };
            getBounds = () => null;
            getFocusedBounds() {
                return null
            }
            get debugFocusedChild() {
                return this.childElement
            }
        }

        function xp(e, t) {
            return (0, Y.useCallback)((n => {
                if (null == n) return;
                const s = e(n);
                null != s && t(s)
            }), [e, t])
        }

        function vp(e) {
            return xp(Fr, e)
        }

        function _p(e) {
            return xp(bp, e)
        }

        function bp(e) {
            return "string" == typeof e ? e : null
        }
        X.add("game-ui/common/focus/controller/root-focus-controller.tsx", {
            get useRootFocusController() {
                return pp
            },
            set useRootFocusController(e) {
                pp = e
            }
        }), X.add("game-ui/common/focus/focus-change-listener.tsx", {
            get useFocusChangeListener() {
                return xp
            },
            set useFocusChangeListener(e) {
                xp = e
            },
            get useEntityFocusChangeListener() {
                return vp
            },
            set useEntityFocusChangeListener(e) {
                vp = e
            },
            get useStringFocusChangeListener() {
                return _p
            },
            set useStringFocusChangeListener(e) {
                _p = e
            }
        });
        var Tp = ({
            disabled: e = !0,
            children: t
        }) => {
            const n = (0, Y.useContext)(Ju);
            return (0, z.jsx)(Ju.Provider, {
                value: e ? ed : n,
                children: t
            })
        };
        X.add("game-ui/common/focus/focus-disabled.tsx", {
            get FocusDisabled() {
                return Tp
            },
            set FocusDisabled(e) {
                Tp = e
            }
        });
        var Ep = Y.forwardRef((function ({
                className: e,
                focusSound: t,
                children: n,
                onFocusChange: s,
                ...i
            }, a) {
                const o = Ch("PassiveFocusDiv");
                Ph(o, s);
                const r = wh(o),
                    l = Dm();
                return (0, Y.useEffect)((() => {
                    r && l && lp(t)
                }), [t, r, l]), (0, z.jsx)(Lh, {
                    controller: o,
                    children: (0, z.jsx)(xd, {
                        children: (0, z.jsx)("div", {
                            ...i,
                            ref: a,
                            className: Zu()(e, r && l && "focused"),
                            children: n
                        })
                    })
                })
            })),
            Ip = Y.forwardRef((function ({
                focusKey: e = yg,
                debugName: t = "ActiveFocusDiv",
                activation: n = qu.Always,
                focusSound: s,
                className: i,
                children: a,
                onFocusChange: o,
                ...r
            }, l) {
                const c = (0, Y.useRef)(null),
                    u = gd(l, c),
                    d = hp(jg(e, t), c, n, !0);
                Ph(d, o);
                const m = wh(d),
                    h = Dm();
                return (0, Y.useEffect)((() => {
                    m && h && lp(s)
                }), [s, m, h]), (0, z.jsx)(Lh, {
                    controller: d,
                    children: (0, z.jsx)(xd, {
                        children: (0, z.jsx)("div", {
                            ...r,
                            ref: u,
                            className: Zu()(i, m && h && "focused"),
                            children: a
                        })
                    })
                })
            }));
        X.add("game-ui/common/focus/focus-div.tsx", {
            get PassiveFocusDiv() {
                return Ep
            },
            set PassiveFocusDiv(e) {
                Ep = e
            },
            get ActiveFocusDiv() {
                return Ip
            },
            set ActiveFocusDiv(e) {
                Ip = e
            }
        });
        var yp = ({
            children: e
        }) => {
            const t = pp();
            return (0, z.jsx)(Lh, {
                controller: t,
                children: e
            })
        };
        X.add("game-ui/common/focus/focus-root.tsx", {
            get FocusRoot() {
                return yp
            },
            set FocusRoot(e) {
                yp = e
            }
        });
        const jp = ["Debug UI"];
        var Sp = ["Move Horizontal", "Move Vertical", "Select", "Back", "Switch Tab"],
            Cp = Y.memo((function ({
                includes: e,
                excludes: t = jp,
                disabled: n,
                children: s
            }) {
                const i = Ch("InputActionBarrier"),
                    a = wh(i),
                    o = (0, Y.useCallback)((n => {
                        null != e ? n.removeWhere((t => e.includes(t))) : null != t ? n.removeWhere((e => !t.includes(e))) : n.clear()
                    }), [e, t]),
                    r = Og(a ? Sg.ActiveOnFocus : Sg.Disabled, n ? null : o);
                return (0, z.jsx)(Lh, {
                    controller: i,
                    children: (0, z.jsx)(Ng.Provider, {
                        value: r,
                        children: s
                    })
                })
            }), ((e, t) => Kr(e, t) && Kr(e.includes, t.includes) && Kr(e.excludes, t.excludes)));
        X.add("game-ui/common/input-events/input-action-barrier.tsx", {
            get navActions() {
                return Sp
            },
            set navActions(e) {
                Sp = e
            },
            get InputActionBarrier() {
                return Cp
            },
            set InputActionBarrier(e) {
                Cp = e
            }
        });
        var Np = ({
            onSelectedStateChanged: e,
            children: t
        }) => {
            const [n, s] = (0, Y.useState)(!1), i = Ch("SelectableFocusBoundary", !0, n);
            Ph(i, (0, Y.useCallback)((t => {
                t || (s(!1), e && e(!1))
            }), [e]));
            const a = (0, Y.useMemo)((() => ({
                Select: n ? null : () => {
                    s(!0), e && e(!0)
                },
                Back: n ? () => {
                    s(!1), e && e(!1)
                } : null
            })), [n, e]);
            return (0, z.jsx)(Cp, {
                includes: Sp,
                disabled: !n,
                children: (0, z.jsx)(Ag, {
                    actions: a,
                    children: (0, z.jsx)(Lh, {
                        controller: i,
                        children: t
                    })
                })
            })
        };

        function wp(e) {
            const [t, n] = (0, Y.useState)(e), s = (0, Y.useContext)(cd);
            return (0, Y.useEffect)((() => {
                if (!s) {
                    const t = window.requestAnimationFrame((() => {
                        s || n(e)
                    }));
                    return () => window.cancelAnimationFrame(t)
                }
            }), [s, e]), t
        }
        X.add("game-ui/common/focus/selectable-focus-boundary.tsx", {
            get SelectableFocusBoundary() {
                return Np
            },
            set SelectableFocusBoundary(e) {
                Np = e
            }
        }), X.add("game-ui/common/focus/index.ts", {});
        var Op = ({
            children: e
        }) => {
            const t = wp(e);
            return (0, z.jsx)(z.Fragment, {
                children: t
            })
        };
        X.add("game-ui/common/animations/use-exit-transition-lock.tsx", {
            get useExitTransitionLock() {
                return wp
            },
            set useExitTransitionLock(e) {
                wp = e
            },
            get ExitTransitionLock() {
                return Op
            },
            set ExitTransitionLock(e) {
                Op = e
            }
        });
        const Pp = "user";
        var Lp = $r(Pp, "switchPromptVisible"),
            Ap = $r(Pp, "avatar"),
            Mp = $r(Pp, "userID"),
            Rp = $r(Pp, "switchUserHintOverload");

        function kp() {
            tl(Pp, "switchUser")
        }

        function Dp(e, t, n) {
            if (!e.current) return;
            const s = window.getComputedStyle(e.current).getPropertyValue(t),
                i = window.getComputedStyle(e.current).getPropertyValue(n);
            s && "none" !== s && i && (e.current.style.animation = "", window.requestAnimationFrame((() => window.requestAnimationFrame((() => {
                e.current && (e.current.style.animationName = s, e.current.style.animationDuration = i)
            })))))
        }
        X.add("game-ui/common/data-binding/user-bindings.ts", {
            get switchPromptVisible() {
                return switchPromptVisible
            },
            set switchPromptVisible(e) {
                switchPromptVisible = e
            },
            get avatar() {
                return avatar
            },
            set avatar(e) {
                avatar = e
            },
            get userID() {
                return userID
            },
            set userID(e) {
                userID = e
            },
            get switchUserHintOverload() {
                return switchUserHintOverload
            },
            set switchUserHintOverload(e) {
                switchUserHintOverload = e
            },
            get switchUser() {
                return kp
            },
            set switchUser(e) {
                kp = e
            }
        }), X.add("game-ui/common/utils/animation.ts", {
            get playCssAnimation() {
                return Dp
            },
            set playCssAnimation(e) {
                Dp = e
            }
        });
        let Fp = {
            button: "button_d0d",
            hint: "hint_GfT"
        };
        X.add("game-ui/common/input/button/themes/default-button.module.scss", {
            get classes() {
                return Fp
            },
            set classes(e) {
                Object.assign(Fp, e)
            }
        });
        const Up = Fp;
        var Bp = {
                select: rp.selectItem,
                hover: rp.hoverItem,
                focus: rp.hoverItem
            },
            Gp = (0, Y.forwardRef)((function ({
                focusKey: e,
                debugName: t = "Button",
                selected: n,
                disabled: s,
                theme: i,
                sounds: a = Bp,
                selectAction: o = "Select",
                selectSound: r,
                className: l,
                tooltipLabel: c,
                disableHint: u = !1,
                onClick: d,
                onMouseEnter: m,
                onSelect: h,
                children: g,
                as: p = "button",
                hintAction: f = "Select",
                forceHint: x,
                shortcut: v,
                allowFocusableChildren: _,
                ...b
            }, T) {
                const [E, I] = (0, Y.useState)(!1), y = (0, Y.useRef)(null), j = gd(T, y), S = hp(jg(e ?? (s ? Ig : yg), t), y, void 0, _), C = wh(S), N = Dm(), w = (0, Y.useMemo)((() => void 0 !== r ? {
                    ...a,
                    select: r
                } : a), [r, a]);
                (0, Y.useEffect)((() => {
                    if (y.current) {
                        const e = y.current?.firstElementChild || y.current,
                            t = e.scrollWidth > e.clientWidth;
                        I(t)
                    }
                }), [y, c]);
                const O = (0, Y.useMemo)((() => null != h ? {
                        [o]: () => {
                            Dp(y, "--selectAnimation", "--selectDuration"), lp(w?.select), h()
                        }
                    } : null), [h, o, w?.select]),
                    P = (0, Y.useMemo)((() => null != h && v ? {
                        [v]: () => {
                            s || lp(w?.select), h && h()
                        }
                    } : null), [s, w?.select, h, v]),
                    L = (0, Y.useCallback)((e => {
                        (h || d) && (s || lp(w?.select), h && h(), d && d(e), e.stopPropagation())
                    }), [s, d, h, w?.select]),
                    A = (0, Y.useCallback)((e => {
                        s || lp(w?.hover), m && m(e)
                    }), [s, w?.hover, m]);
                (0, Y.useEffect)((() => {
                    C && N && lp(w?.focus)
                }), [C, N, w?.focus]);
                const M = p,
                    R = !s && (x || C) && !u;
                let k = (0, z.jsx)(xd, {
                    children: (0, z.jsxs)(M, {
                        ...b,
                        ref: j,
                        disabled: s,
                        className: Zu()(i?.button, n && "selected", C && N && "focused", l),
                        onClick: L,
                        onMouseEnter: A,
                        children: [(0, z.jsx)(Pf, {
                            action: f,
                            active: R,
                            className: i?.hint || Up.hint
                        }), g]
                    })
                });
                return E && c && (k = (0, z.jsx)(Tg, {
                    tooltip: c,
                    children: k
                })), k = (0, z.jsx)(Lh, {
                    controller: S,
                    children: k
                }), O && (k = (0, z.jsx)(Ag, {
                    actions: O,
                    disabled: s,
                    children: k
                })), P && (k = (0, z.jsx)(Ag, {
                    actions: P,
                    disabled: s,
                    ignoreFocusState: !0,
                    children: k
                })), k
            }));
        X.add("game-ui/common/input/button/button.tsx", {
            get defaultButtonSounds() {
                return Bp
            },
            set defaultButtonSounds(e) {
                Bp = e
            },
            get Button() {
                return Gp
            },
            set Button(e) {
                Gp = e
            }
        });
        class Vp {
            constructor(e) {
                this.time = e, this.refCount = 0
            }
        }
        var Hp = new Map;

        function Kp(e, t = !0) {
            const [n, s] = (0, Y.useState)(0);
            return (0, Y.useEffect)((() => {
                if (t) {
                    const t = performance.now(),
                        n = Hp.get(e) ?? new Vp(t);
                    return 0 === n.refCount && Hp.set(e, n), n.refCount++, s(Math.min(n.time - t, 0)), () => {
                        n.refCount--, 0 === n.refCount && Hp.delete(e)
                    }
                }
            }), [t, e]), n + "ms"
        }
        X.add("game-ui/common/animations/animation-sync.tsx", {
            get AnimationSyncCache() {
                return Hp
            },
            set AnimationSyncCache(e) {
                Hp = e
            },
            get useAnimationSyncDelay() {
                return Kp
            },
            set useAnimationSyncDelay(e) {
                Kp = e
            }
        });
        let Wp = {
            balloon: "balloon_YD_ balloon_DNs balloon_H23",
            base: "base_CfJ",
            enter: "enter_ek6",
            "exit-active": "exit-active_s_4",
            exitActive: "exit-active_s_4",
            "enter-active": "enter-active_QVu",
            enterActive: "enter-active_QVu",
            exit: "exit_RYd",
            container: "container_p5S container_sGN container_jfe",
            arrow: "arrow_WhB arrow_tFt arrow_Xfn",
            content: "content_Bye content_HM0 content_JQV"
        };
        X.add("game-ui/common/balloon/themes/tutorial-balloon.module.scss", {
            get classes() {
                return Wp
            },
            set classes(e) {
                Object.assign(Wp, e)
            }
        });
        const zp = Wp;
        let Yp = {
            "fixed-ratio-image": "fixed-ratio-image_XTW",
            fixedRatioImage: "fixed-ratio-image_XTW",
            ratio: "ratio_xCj",
            image: "image_EBv"
        };
        X.add("game-ui/common/image/fixed-ratio-image.module.scss", {
            get classes() {
                return Yp
            },
            set classes(e) {
                Object.assign(Yp, e)
            }
        });
        const $p = Yp;
        var qp = ({
                src: e,
                className: t,
                onError: n,
                ...s
            }) => (0, z.jsxs)("div", {
                ...s,
                className: Zu()($p.fixedRatioImage, t),
                children: [(0, z.jsx)("div", {
                    className: $p.ratio
                }), (0, z.jsx)("img", {
                    src: e,
                    className: $p.image,
                    onError: n
                })]
            }),
            Xp = ({
                src: e,
                className: t,
                onImageError: n,
                ...s
            }) => (0, z.jsxs)(Gp, {
                ...s,
                className: Zu()($p.fixedRatioImage, t),
                children: [(0, z.jsx)("div", {
                    className: $p.ratio
                }), (0, z.jsx)("img", {
                    src: e,
                    className: $p.image,
                    onError: n
                })]
            });
        X.add("game-ui/common/image/fixed-ratio-image.tsx", {
            get FixedRatioImage() {
                return qp
            },
            set FixedRatioImage(e) {
                qp = e
            },
            get FixedRatioImageButton() {
                return Xp
            },
            set FixedRatioImageButton(e) {
                Xp = e
            }
        });
        const Qp = e => e.currentTarget.src = "Media/Placeholder.svg";
        X.add("game-ui/common/image/missing-icon-handler.ts", {});
        let Zp = {
            "tinted-icon": "tinted-icon_iKo",
            tintedIcon: "tinted-icon_iKo"
        };
        X.add("game-ui/common/image/tinted-icon.module.scss", {
            get classes() {
                return Zp
            },
            set classes(e) {
                Object.assign(Zp, e)
            }
        });
        const Jp = Zp;
        var ef = Y.forwardRef((function ({
            src: e,
            className: t,
            style: n,
            ...s
        }, i) {
            return (0, z.jsx)("div", {
                ...s,
                ref: i,
                className: Zu()(e && Jp.tintedIcon, t),
                style: {
                    ...n,
                    maskImage: e ? `url(${e})` : void 0
                }
            })
        }));
        X.add("game-ui/common/image/tinted-icon.tsx", {
            get TintedIcon() {
                return ef
            },
            set TintedIcon(e) {
                ef = e
            }
        });
        let tf = {
            button: "button_M6C",
            icon: "icon_PhD"
        };
        X.add("game-ui/common/input/button/icon-button.module.scss", {
            get classes() {
                return tf
            },
            set classes(e) {
                Object.assign(tf, e)
            }
        });
        const nf = tf;
        var sf = Y.forwardRef((function ({
            src: e,
            tinted: t,
            theme: n,
            className: s,
            children: i,
            ...a
        }, o) {
            const r = (0, Y.useMemo)((() => n ? {
                ...nf,
                ...n
            } : nf), [n]);
            return (0, z.jsxs)(Gp, {
                ref: o,
                ...a,
                className: Zu()(r.button, s),
                theme: r,
                children: [t ? (0, z.jsx)(ef, {
                    src: e,
                    className: r.icon
                }) : (0, z.jsx)("img", {
                    src: e,
                    className: r.icon,
                    onError: Qp
                }), i]
            })
        }));
        X.add("game-ui/common/input/button/icon-button.tsx", {
            get IconButton() {
                return sf
            },
            set IconButton(e) {
                sf = e
            }
        });
        let af = {
            button: "button_bvQ"
        };
        X.add("game-ui/common/input/button/themes/round-highlight-button.module.scss", {
            get classes() {
                return af
            },
            set classes(e) {
                Object.assign(af, e)
            }
        });
        const of = af;
        var rf = n(4),
            lf = n.n(rf);

        function cf(e, t, n, s, i, a) {
            const o = Hm();
            (0, Y.useEffect)((() => {
                let r, l, c = a?.current || 0,
                    u = !1;
                if (window.cancelAnimationFrame(c), !e || !t.current || !i) return;
                const d = m => {
                    if (!e || !t.current || !i) return;
                    void 0 === r && (r = m);
                    if (m - r < i.delay) return c = window.requestAnimationFrame(d), void(void 0 !== a && (a.current = c));
                    void 0 === l && (l = m);
                    const h = (m - l) / 1e3,
                        g = Math.round(i.speed * h * o),
                        p = "Vertical" === n ? t.current.scrollHeight - t.current.offsetHeight : t.current.scrollWidth - t.current.offsetWidth;
                    if (p < i.minOverflow * o) return t.current.scrollTop = 0, void s();
                    const f = u ? p - g : g;
                    "Vertical" === n ? f !== t.current.scrollTop && (t.current.scrollTop = f, s()) : f !== t.current.scrollLeft && (t.current.scrollLeft = f, s()), !u && f < p || u && f > 0 ? (c = window.requestAnimationFrame(d), void 0 !== a && (a.current = c)) : i.repeat && (u = !u, r = void 0, l = void 0, c = window.requestAnimationFrame(d), void 0 !== a && (a.current = c))
                };
                return c = window.requestAnimationFrame(d), void 0 !== a && (a.current = c), () => window.cancelAnimationFrame(c)
            }), [a, t, n, e, s, o, i])
        }

        function uf(e, t, n) {
            const [s, i] = (0, Y.useState)(!1), [a, o] = (0, Y.useState)(), r = (0, Y.useCallback)((t => {
                e(t) && (o(t.currentTarget), t.preventDefault(), i(!0))
            }), [e, o]), l = (0, Y.useCallback)((e => {
                e.preventDefault(), t({
                    clientX: e.clientX,
                    clientY: e.clientY,
                    currentTarget: a
                })
            }), [t, a]), c = (0, Y.useCallback)((e => {
                e.preventDefault(), i(!1), n({
                    clientX: e.clientX,
                    clientY: e.clientY,
                    currentTarget: a
                })
            }), [n, a]);
            return (0, Y.useEffect)((() => {
                if (s) return document.addEventListener("mousemove", l), document.addEventListener("mouseup", c), () => {
                    document.removeEventListener("mousemove", l), document.removeEventListener("mouseup", c)
                }
            }), [s, l, c]), [s, r]
        }
        X.add("game-ui/common/hooks/use-auto-scroll.tsx", {
            get useAutoScroll() {
                return cf
            },
            set useAutoScroll(e) {
                cf = e
            }
        }), X.add("game-ui/common/hooks/use-mouse-drag-events.tsx", {
            get useMouseDragEvents() {
                return uf
            },
            set useMouseDragEvents(e) {
                uf = e
            }
        });
        let df = {
            scrollable: "scrollable_DXr",
            viewport: "viewport_bY2",
            content: "content_gqa",
            x: "x_TNK",
            y: "y_SMM",
            "track-visible-y": "track-visible-y_RCA",
            trackVisibleY: "track-visible-y_RCA",
            track: "track_e3O",
            "track-visible-x": "track-visible-x_qNT",
            trackVisibleX: "track-visible-x_qNT",
            thumb: "thumb_Cib",
            pressed: "pressed_iMJ",
            "bottom-padding": "bottom-padding_JS3",
            bottomPadding: "bottom-padding_JS3",
            "hint-item": "hint-item__j0",
            hintItem: "hint-item__j0"
        };
        X.add("game-ui/common/scrolling/scrollable.module.scss", {
            get classes() {
                return df
            },
            set classes(e) {
                Object.assign(df, e)
            }
        });
        const mf = df,
            hf = lf()(.445, .05, .55, .95),
            gf = {
                speed: 20,
                delay: 3e3,
                repeat: !0,
                minOverflow: 8
            };
        var pf, ff = (0, Y.forwardRef)((function ({
                horizontal: e = !1,
                vertical: t = !0,
                trackVisibility: n = "scrollable",
                overshootX: s = .05,
                overshootY: i = .05,
                smooth: a = !0,
                controller: o,
                className: r,
                style: l,
                children: c,
                onScroll: u,
                onOverflowX: d,
                onOverflowY: m,
                autoScroll: h = !1,
                autoScrollSettings: g = gf
            }, p) {
                const [f, x] = (0, Y.useState)(h), [v, _] = (0, Y.useState)(!1), [b, T] = (0, Y.useState)(!1), E = (0, Y.useRef)(null), I = gd(p, E), y = (0, Y.useRef)(null), j = (0, Y.useRef)(null), S = (0, Y.useRef)(null), C = (0, Y.useRef)(null), N = (0, Y.useCallback)((() => {
                    if (!E.current || !y.current || !j.current) return;
                    const e = E.current.offsetWidth,
                        t = E.current.scrollWidth,
                        n = Od(E.current.scrollLeft, 0, t - e),
                        s = y.current.offsetWidth;
                    if (0 === e || 0 === t || 0 === s) return;
                    const i = t - 1 > e;
                    if (_(i), d && d(i), i) {
                        const i = Od(s * e / t, Math.min(20, s / 2), s),
                            a = n / (t - e) * (s - i);
                        j.current.style.width = `${i}px`, j.current.style.left = `${a}px`
                    }
                }), [d]), w = (0, Y.useCallback)((() => {
                    if (!E.current || !S.current || !C.current) return;
                    const e = E.current.offsetHeight,
                        t = E.current.scrollHeight,
                        n = Od(E.current.scrollTop, 0, t - e),
                        s = S.current.offsetHeight;
                    if (0 === e || 0 === t || 0 === s) return;
                    const i = t - 1 > e;
                    if (T(i), m && m(i), i) {
                        const i = Od(s * e / t, Math.min(20, s / 2), s),
                            a = n / (t - e) * (s - i);
                        C.current.style.height = `${i}px`, C.current.style.top = `${a}px`
                    }
                }), [m]), O = (0, Y.useCallback)((() => {
                    e && N(), t && w()
                }), [e, N, w, t]), P = (0, Y.useCallback)((() => {
                    x(!1)
                }), []), L = (0, Y.useCallback)((() => {
                    x(!0)
                }), []), A = sl(Im);
                (0, Y.useEffect)((() => {
                    const e = E.current;
                    if (null === e) return;
                    const t = t => {
                        t.preventDefault(), e.scrollLeft += t.deltaX * A, e.scrollTop += t.deltaY * A, u && u(), O()
                    };
                    return e?.addEventListener("wheel", t), () => e?.removeEventListener("wheel", t)
                }), [A, u, O]);
                const M = (0, Y.useRef)(0),
                    R = (0, Y.useRef)(0),
                    k = (0, Y.useCallback)((({
                        clientX: e
                    }) => {
                        if (x(!1), !j.current) return !1;
                        const {
                            width: t,
                            left: n
                        } = j.current.getBoundingClientRect();
                        return 0 !== t && (M.current = (e - n) / t, !0)
                    }), []),
                    D = (0, Y.useCallback)((({
                        clientY: e
                    }) => {
                        if (x(!1), !C.current) return !1;
                        const {
                            height: t,
                            top: n
                        } = C.current.getBoundingClientRect();
                        return 0 !== t && (R.current = (e - n) / t, !0)
                    }), []),
                    F = (0, Y.useCallback)((({
                        clientX: e
                    }) => {
                        if (!E.current || !y.current || !j.current) return;
                        const t = E.current.offsetWidth,
                            n = E.current.scrollWidth,
                            s = y.current.getBoundingClientRect(),
                            i = j.current.getBoundingClientRect();
                        if (0 === t || 0 === n || 0 === s.width) return;
                        const a = s.width - i.width;
                        if (0 === a) return;
                        const o = E.current.scrollLeft,
                            r = Od((e - s.left - i.width * M.current) / a, 0, 1) * (n - t);
                        o !== r && (E.current.scrollLeft = r, u && u(), N())
                    }), [u, N]),
                    U = (0, Y.useCallback)((({
                        clientY: e
                    }) => {
                        if (!E.current || !S.current || !C.current) return;
                        const t = E.current.offsetHeight,
                            n = E.current.scrollHeight,
                            s = S.current.getBoundingClientRect(),
                            i = C.current.getBoundingClientRect();
                        if (0 === t || 0 === n || 0 === s.height) return;
                        const a = s.height - i.height;
                        if (0 === a) return;
                        const o = E.current.scrollTop,
                            r = Od((e - s.top - i.height * R.current) / a, 0, 1) * (n - t);
                        o !== r && (E.current.scrollTop = r, u && u(), w())
                    }), [u, w]),
                    B = (0, Y.useCallback)((() => {
                        x(!0)
                    }), []),
                    [G, V] = uf(k, F, B),
                    [H, K] = uf(D, U, B);
                fm(O), (0, Y.useEffect)((() => {
                    let e = window.requestAnimationFrame((() => {
                        e = window.requestAnimationFrame((() => {
                            e = 0, O()
                        }))
                    }));
                    return () => {
                        window.cancelAnimationFrame(e)
                    }
                }), [O]);
                const W = (0, Y.useRef)(0),
                    $ = (0, Y.useCallback)(((e, t) => {
                        E.current && (window.cancelAnimationFrame(W.current), e = Od(e, 0, E.current.scrollWidth - E.current.offsetWidth), t = Od(t, 0, E.current.scrollHeight - E.current.offsetHeight), e === E.current.scrollLeft && t === E.current.scrollTop || (E.current.scrollLeft = e, E.current.scrollTop = t, u && u()), O())
                    }), [u, O]),
                    q = (0, Y.useCallback)(((e, t) => {
                        if (!E.current) return;
                        window.cancelAnimationFrame(W.current);
                        const n = performance.now(),
                            s = E.current.scrollLeft,
                            i = E.current.scrollTop,
                            a = o => {
                                if (!E.current) return;
                                const r = (o - n) / 175;
                                if (r < 1) {
                                    const n = hf(r),
                                        o = Od(Math.round(s + (e - s) * n), 0, E.current.scrollWidth - E.current.offsetWidth),
                                        l = Od(Math.round(i + (t - i) * n), 0, E.current.scrollHeight - E.current.offsetHeight);
                                    l === i && o === s || u && u(), E.current.scrollLeft = o, E.current.scrollTop = l, O(), W.current = window.requestAnimationFrame(a)
                                } else E.current.scrollLeft = e, E.current.scrollTop = t, O()
                            };
                        W.current = window.requestAnimationFrame(a)
                    }), [u, O]);
                (0, Y.useEffect)((() => () => window.cancelAnimationFrame(W.current)), []);
                const X = (0, Y.useMemo)((() => ({
                    updateThumbs: () => {
                        W.current = window.requestAnimationFrame((() => {
                            W.current = window.requestAnimationFrame(O)
                        }))
                    },
                    scrollTo: (e, t) => {
                        $(e, t)
                    },
                    scrollBy: (e, t) => {
                        E.current && $(E.current.scrollLeft + e, E.current.scrollTop + t)
                    },
                    smoothScrollTo: (e, t) => {
                        q(e, t)
                    },
                    scrollIntoView: n => {
                        if (!E.current) return;
                        const o = E.current.getBoundingClientRect(),
                            r = n.getBoundingClientRect();
                        let l = E.current.scrollLeft,
                            c = E.current.scrollTop;
                        if (e) {
                            const e = o.width * s;
                            r.left < o.left + e ? l = Math.floor(E.current.scrollLeft + r.left - o.left - e) : r.right > o.right - e && (l = Math.ceil(E.current.scrollLeft + r.right - o.right + e)), l = Od(l, 0, Math.ceil(E.current.scrollWidth - o.width))
                        }
                        if (t) {
                            const e = o.height * i;
                            r.top < o.top + e ? c = Math.floor(E.current.scrollTop + r.top - o.top - e) : r.bottom > o.bottom - e && (c = Math.ceil(E.current.scrollTop + r.bottom - o.bottom + e)), c = Od(c, 0, Math.ceil(E.current.scrollHeight - o.height))
                        }
                        l === E.current.scrollLeft && c === E.current.scrollTop || (a ? q(l, c) : $(l, c))
                    }
                })), [O, $, q, e, t, s, i, a]);
                return (0, Y.useEffect)((() => {
                    if (o) return o._attachCallback(X), () => o._detachCallback(X)
                }), [o, X]), (0, Y.useEffect)((() => x(h)), [h]), cf(h && f, E, t ? "Vertical" : "Horizontal", O, g, W), (0, z.jsxs)("div", {
                    className: Zu()(mf.scrollable, e && mf.x, t && mf.y, e && (v || "always" === n) && mf.trackVisibleX, t && (b || "always" === n) && mf.trackVisibleY, r),
                    style: l,
                    onMouseEnter: P,
                    onMouseLeave: L,
                    children: [(0, z.jsx)("div", {
                        ref: I,
                        className: mf.content,
                        onMouseOver: O,
                        children: (0, z.jsxs)(mp.Provider, {
                            value: X,
                            children: [c, null != c && (0, z.jsx)("div", {
                                className: mf.bottomPadding
                            })]
                        })
                    }), e && (0, z.jsx)("div", {
                        ref: y,
                        className: Zu()(mf.track, mf.x),
                        children: (0, z.jsx)("div", {
                            ref: j,
                            className: Zu()(mf.thumb, mf.x, G && mf.pressed),
                            onMouseDown: V
                        })
                    }), t && (0, z.jsx)("div", {
                        ref: S,
                        className: Zu()(mf.track, mf.y),
                        children: (0, z.jsx)("div", {
                            ref: C,
                            className: Zu()(mf.thumb, mf.y, H && mf.pressed),
                            onMouseDown: K
                        })
                    })]
                })
            })),
            xf = (0, Y.forwardRef)((function ({
                children: e,
                hintClassName: t,
                labelClassName: n,
                focusableItems: s,
                ...i
            }, a) {
                const [o, r] = (0, Y.useState)(!1), [l, c] = (0, Y.useState)(!1), u = (0, Y.useCallback)((e => {
                    r(e), c(!1)
                }), []), [d, m] = (0, Y.useState)(!1), h = Dm(), g = (0, Y.useMemo)((() => ({
                    Select: o && !l ? () => c(!0) : null,
                    Back: l ? () => c(!1) : null
                })), [l, o]), p = d || !!s && (l || o);
                return (0, z.jsxs)(z.Fragment, {
                    children: [s ? (0, z.jsx)(Cp, {
                        includes: ["Select", "Back"],
                        excludes: ["Scroll Vertical"],
                        disabled: !l,
                        children: (0, z.jsx)(Ag, {
                            actions: g,
                            children: (0, z.jsx)(Ip, {
                                onFocusChange: u,
                                children: (0, z.jsx)(ff, {
                                    ...i,
                                    ref: a,
                                    onOverflowY: m,
                                    className: Zu()(i.className, h && o ? "focused" : void 0),
                                    children: (0, z.jsx)(Tp, {
                                        disabled: !l,
                                        children: e
                                    })
                                })
                            })
                        })
                    }) : (0, z.jsx)(ff, {
                        ref: a,
                        onOverflowY: m,
                        ...i,
                        children: e
                    }), p && (0, z.jsxs)("div", {
                        className: t,
                        children: [(0, z.jsx)(Pf, {
                            action: "Scroll Vertical",
                            active: d,
                            showLabel: !0
                        }), (0, z.jsx)(Pf, {
                            action: "Select",
                            active: !!s && o && !l,
                            showLabel: !0
                        }), (0, z.jsx)(Pf, {
                            action: "Back",
                            active: !!s && l,
                            showLabel: !0
                        })]
                    })]
                })
            }));

        function vf(e, t = 1) {
            const n = (0, Y.useRef)(e);
            return Kr(e, n.current, t) || (n.current = e), n.current
        }

        function _f(e, t, n = void 0) {
            const s = sl(Em),
                i = vf(e ? {
                    action: e,
                    controlScheme: n ?? s
                } : void 0, 2),
                a = ll(Om, i);
            return (0, Y.useMemo)((() => t ? a : void 0), [t, a])
        }
        X.add("game-ui/common/scrolling/scrollable.tsx", {
                get Scrollable() {
                    return ff
                },
                set Scrollable(e) {
                    ff = e
                },
                get ScrollableWithHint() {
                    return xf
                },
                set ScrollableWithHint(e) {
                    xf = e
                }
            }), X.add("game-ui/common/hooks/use-shallow-memoize.tsx", {
                get useShallowMemoize() {
                    return vf
                },
                set useShallowMemoize(e) {
                    vf = e
                }
            }), X.add("game-ui/common/input-events/action-hints/use-input-hint-data.tsx", {
                get useInputHintData() {
                    return _f
                },
                set useInputHintData(e) {
                    _f = e
                }
            }),
            function (e) {
                e[e.FallbackToLong = 1] = "FallbackToLong", e[e.FallbackToControl = 2] = "FallbackToControl"
            }(pf || (pf = {}));
        var bf = uc("LocalizedInputPath", ((e, {
            binding: t,
            modifiers: n,
            short: s,
            gamepadType: i,
            keyboardLayout: a,
            layoutMap: o
        }) => {
            if ("" !== t.name) {
                const r = Pc.Options.INPUT_MODIFIER_SEPARATOR.renderString(e, {
                    fallback: " + "
                });
                return [...n, t].map((t => {
                    "Keyboard" === t.device && a === Tl.AutoDetect && o && o[t.name] && (t = o[t.name]);
                    const n = `${t.device}.${t.name}`,
                        r = (s ? Pc.Options.INPUT_CONTROL_SHORT : Pc.Options.INPUT_CONTROL).renderString(e, {
                            hash: n,
                            fallback: s === pf.FallbackToLong ? Pc.Options.INPUT_CONTROL.renderString(e, {
                                hash: n,
                                fallback: t.displayName ?? t.name
                            }) : t.displayName ?? t.name
                        });
                    if ("Gamepad" === t.device) {
                        if (i === _m.PS) return (s ? Pc.Options.INPUT_CONTROL_SHORT_PS : Pc.Options.INPUT_CONTROL_PS).renderString(e, {
                            hash: n,
                            fallback: s === pf.FallbackToLong ? Pc.Options.INPUT_CONTROL_PS.renderString(e, {
                                hash: n,
                                fallback: r
                            }) : r
                        });
                        if (i === _m.Xbox) return (s ? Pc.Options.INPUT_CONTROL_SHORT_XBOX : Pc.Options.INPUT_CONTROL_XBOX).renderString(e, {
                            hash: n,
                            fallback: s === pf.FallbackToLong ? Pc.Options.INPUT_CONTROL_XBOX.renderString(e, {
                                hash: n,
                                fallback: r
                            }) : r
                        })
                    }
                    return r
                })).join(r)
            }
            return Pc.Options.INPUT_CONTROL_NA.renderString(e, {
                fallback: ""
            })
        }), ((e, t) => Kr(e, t)));
        X.add("game-ui/common/localization/localized-input-path.tsx", {
            get ShortInputPathOption() {
                return pf
            },
            set ShortInputPathOption(e) {
                pf = e
            },
            get LocalizedInputPath() {
                return bf
            },
            set LocalizedInputPath(e) {
                bf = e
            }
        });
        let Tf = {
            hint: "hint_vdu",
            binding: "binding_dc_",
            modifier: "modifier_iDc",
            label: "label_dTg",
            icon: "icon_B1q",
            button: "button_ehL",
            small: "small_P1I",
            xsmall: "xsmall_vkV",
            "button-text": "button-text_fw1",
            buttonText: "button-text_fw1",
            "left-tab": "left-tab_Hvf",
            leftTab: "left-tab_Hvf",
            "right-tab": "right-tab_QsA",
            rightTab: "right-tab_QsA"
        };
        X.add("game-ui/common/input-events/action-hints/input-hint/input-hint.module.scss", {
            get classes() {
                return Tf
            },
            set classes(e) {
                Object.assign(Tf, e)
            }
        });
        const Ef = Tf;
        var If = ({
                modifiers: e,
                bindings: t,
                showName: n,
                shortName: s,
                theme: i,
                className: a,
                children: o
            }) => {
                const r = zx(),
                    l = Yx(),
                    c = $x(),
                    u = (0, Y.useMemo)((() => ({
                        ...Ef,
                        ...i
                    })), [i]);
                return (0, z.jsxs)("span", {
                    className: Zu()(u.hint, a),
                    children: [e.map(((n, i) => (0, z.jsx)(jf, {
                        binding: n,
                        modifier: !0,
                        shortName: s,
                        theme: u
                    }, `${e} ${t} ${i}`))), t.map(((n, i) => (0, z.jsx)(jf, {
                        binding: n,
                        modifier: !1,
                        shortName: s,
                        theme: u
                    }, `${e} ${t} ${i}`))), n && (0, z.jsx)("span", {
                        className: Zu()(u.label),
                        children: (0, z.jsx)(bf, {
                            binding: t[0],
                            modifiers: e,
                            short: s,
                            gamepadType: r,
                            keyboardLayout: l,
                            layoutMap: c
                        })
                    }), o]
                })
            },
            yf = ({
                ...e
            }) => (0, z.jsx)(Tg, {
                tooltip: (0, z.jsx)(bf, {
                    binding: e.bindings[0],
                    modifiers: e.modifiers
                }),
                children: (0, z.jsx)("span", {
                    children: (0, z.jsx)(If, {
                        ...e
                    })
                })
            }),
            jf = ({
                binding: e,
                modifier: t,
                shortName: n,
                theme: s
            }) => {
                const i = wf(e);
                return (0, z.jsx)("span", {
                    className: t ? Ef.modifier : Ef.binding,
                    children: null != i ? (0, z.jsx)("img", {
                        src: i,
                        className: s?.icon
                    }) : (0, z.jsx)(Sf, {
                        binding: e,
                        shortName: n,
                        className: s?.button
                    })
                })
            };
        const Sf = ({
                binding: e,
                shortName: t,
                className: n
            }) => {
                const s = Yx(),
                    i = $x();
                return (0, z.jsx)("span", {
                    className: Zu()(Ef.buttonText, n),
                    children: (0, z.jsx)(bf, {
                        binding: e,
                        modifiers: [],
                        short: t,
                        keyboardLayout: s,
                        layoutMap: i
                    })
                })
            },
            Cf = {
                [_m.Xbox]: {
                    leftStick: "Media/Gamepad/Xbox/LeftStick.svg",
                    "leftStick/x": "Media/Gamepad/Xbox/LstickX.svg",
                    "leftStick/y": "Media/Gamepad/Xbox/LstickY.svg",
                    "leftStick/up": "Media/Gamepad/Xbox/LstickUp.svg",
                    "leftStick/down": "Media/Gamepad/Xbox/LstickDown.svg",
                    "leftStick/left": "Media/Gamepad/Xbox/LstickLeft.svg",
                    "leftStick/right": "Media/Gamepad/Xbox/LstickRight.svg",
                    rightStick: "Media/Gamepad/Xbox/RightStick.svg",
                    "rightStick/x": "Media/Gamepad/Xbox/RstickX.svg",
                    "rightStick/y": "Media/Gamepad/Xbox/RstickY.svg",
                    "rightStick/up": "Media/Gamepad/Xbox/RstickUp.svg",
                    "rightStick/down": "Media/Gamepad/Xbox/RstickDown.svg",
                    "rightStick/left": "Media/Gamepad/Xbox/RstickLeft.svg",
                    "rightStick/right": "Media/Gamepad/Xbox/RstickRight.svg",
                    dpad: "Media/Gamepad/Xbox/Dpad.svg",
                    "dpad/x": "Media/Gamepad/Xbox/DpadX.svg",
                    "dpad/y": "Media/Gamepad/Xbox/DpadY.svg",
                    "dpad/up": "Media/Gamepad/Xbox/DpadUp.svg",
                    "dpad/down": "Media/Gamepad/Xbox/DpadDown.svg",
                    "dpad/left": "Media/Gamepad/Xbox/DpadLeft.svg",
                    "dpad/right": "Media/Gamepad/Xbox/DpadRight.svg",
                    buttonNorth: "Media/Gamepad/Xbox/North.svg",
                    buttonSouth: "Media/Gamepad/Xbox/South.svg",
                    buttonWest: "Media/Gamepad/Xbox/West.svg",
                    buttonEast: "Media/Gamepad/Xbox/East.svg",
                    leftShoulder: "Media/Gamepad/Xbox/LeftShoulder.svg",
                    rightShoulder: "Media/Gamepad/Xbox/RightShoulder.svg",
                    leftTrigger: "Media/Gamepad/Xbox/LeftTrigger.svg",
                    rightTrigger: "Media/Gamepad/Xbox/RightTrigger.svg",
                    start: "Media/Gamepad/Xbox/Start.svg",
                    select: "Media/Gamepad/Xbox/Select.svg",
                    leftStickPress: "Media/Gamepad/Xbox/LstickPress.svg",
                    rightStickPress: "Media/Gamepad/Xbox/RstickPress.svg"
                },
                [_m.PS]: {
                    leftStick: "Media/Gamepad/PS/PS_Lstick.svg",
                    "leftStick/x": "Media/Gamepad/PS/PS_LstickX.svg",
                    "leftStick/y": "Media/Gamepad/PS/PS_LstickY.svg",
                    "leftStick/up": "Media/Gamepad/PS/PS_LstickUp.svg",
                    "leftStick/down": "Media/Gamepad/PS/PS_LstickDown.svg",
                    "leftStick/left": "Media/Gamepad/PS/PS_LstickLeft.svg",
                    "leftStick/right": "Media/Gamepad/PS/PS_LstickRight.svg",
                    rightStick: "Media/Gamepad/PS/PS_Rstick.svg",
                    "rightStick/x": "Media/Gamepad/PS/PS_RstickX.svg",
                    "rightStick/y": "Media/Gamepad/PS/PS_RstickY.svg",
                    "rightStick/up": "Media/Gamepad/PS/PS_RstickUp.svg",
                    "rightStick/down": "Media/Gamepad/PS/PS_RstickDown.svg",
                    "rightStick/left": "Media/Gamepad/PS/PS_RstickLeft.svg",
                    "rightStick/right": "Media/Gamepad/PS/PS_RstickRight.svg",
                    dpad: "Media/Gamepad/PS/PS_Dpad.svg",
                    "dpad/x": "Media/Gamepad/PS/PS_DpadX.svg",
                    "dpad/y": "Media/Gamepad/PS/PS_DpadY.svg",
                    "dpad/up": "Media/Gamepad/PS/PS_DpadUp.svg",
                    "dpad/down": "Media/Gamepad/PS/PS_DpadDown.svg",
                    "dpad/left": "Media/Gamepad/PS/PS_DpadLeft.svg",
                    "dpad/right": "Media/Gamepad/PS/PS_DpadRight.svg",
                    buttonNorth: "Media/Gamepad/PS/PS_triangle.svg",
                    buttonSouth: "Media/Gamepad/PS/PS_X.svg",
                    buttonWest: "Media/Gamepad/PS/PS_square.svg",
                    buttonEast: "Media/Gamepad/PS/PS_O.svg",
                    leftShoulder: "Media/Gamepad/PS/PS_L1.svg",
                    rightShoulder: "Media/Gamepad/PS/PS_R1.svg",
                    leftTrigger: "Media/Gamepad/PS/PS_L2.svg",
                    rightTrigger: "Media/Gamepad/PS/PS_R2.svg",
                    start: "Media/Gamepad/PS/PS_Options.svg",
                    select: "Media/Gamepad/PS/PS_Create.svg",
                    leftStickPress: "Media/Gamepad/PS/PS_LStickPress.svg",
                    rightStickPress: "Media/Gamepad/PS/PS_RStickPress.svg",
                    touchpadButton: "Media/Gamepad/PS/PS_Touchpad.svg"
                }
            },
            Nf = {
                leftButton: "Media/Mouse/LMB.svg",
                rightButton: "Media/Mouse/RMB.svg",
                middleButton: "Media/Mouse/MMB.svg",
                backButton: "Media/Mouse/Backward.svg",
                forwardButton: "Media/Mouse/Forward.svg",
                "scroll/y": "Media/Mouse/Scrollwheel.svg"
            };

        function wf(e) {
            const t = zx();
            return (0, Y.useMemo)((() => {
                switch (e.device) {
                case "Gamepad":
                    return Cf[t][e.name] || null;
                case "Mouse":
                    return Nf[e.name] || null;
                default:
                    return null
                }
            }), [e.device, e.name, t])
        }
        X.add("game-ui/common/input-events/action-hints/input-hint/control-icons.tsx", {
            get ControlIcons() {
                return If
            },
            set ControlIcons(e) {
                If = e
            },
            get ControlIconsWithTooltip() {
                return yf
            },
            set ControlIconsWithTooltip(e) {
                yf = e
            },
            get ControlIcon() {
                return jf
            },
            set ControlIcon(e) {
                jf = e
            },
            get useInputControlIcon() {
                return wf
            },
            set useInputControlIcon(e) {
                wf = e
            }
        });
        var Of = ({
            action: e,
            bindingIndex: t,
            active: n = !0,
            shortName: s,
            controlScheme: i,
            theme: a,
            showLabel: o,
            className: r
        }) => {
            const l = _f(e, n, i);
            return l && l.items[0] ? (0, z.jsx)(If, {
                bindings: void 0 !== t ? [l?.items[0].bindings[t]] : l?.items[0].bindings,
                modifiers: l?.items[0].modifiers,
                shortName: s,
                theme: a,
                className: r,
                children: o && (0, z.jsx)("span", {
                    className: a?.label || Ef.label,
                    children: (0, z.jsx)(Pc.Common.ACTION, {
                        hash: l.name,
                        showIdOnFail: !0
                    })
                })
            }) : null
        };
        const Pf = ({
            action: e,
            active: t = !0,
            controlScheme: n = vm.gamepad,
            ...s
        }) => {
            const i = Em.value;
            return t && e && i === n ? (0, z.jsx)(Of, {
                action: e,
                controlScheme: n,
                ...s
            }) : null
        };
        var Lf = e => (0, z.jsx)(Pf, {
            ...e,
            controlScheme: vm.keyboardAndMouse
        });
        X.add("game-ui/common/input-events/action-hints/input-hint/input-hint.tsx", {
            get InputHint() {
                return Pf
            },
            set InputHint(e) {
                Pf = e
            },
            get KeyboardInputHint() {
                return Lf
            },
            set KeyboardInputHint(e) {
                Lf = e
            }
        });
        const Af = /\s/;
        class Mf {
            constructor(e) {
                this.linkRenderer = e
            }
            render(e) {
                const t = [];
                let n, s = 0,
                    i = -1,
                    a = -1,
                    o = Ff.None;
                for (let r = 0; r < e.length; r++)
                    if (n !== r - 1) switch (e[r]) {
                    case "\\":
                        if ("*" === e[r + 1]) continue;
                        n = r - 1, e = e.slice(0, r) + e.slice(r + 1), r -= 1;
                        break;
                    case "-":
                        0 === r && " " === e[r + 1] && (o = Ff.ListItem);
                        break;
                    case "<":
                        -1 === a && (i = r, a = -1);
                        break;
                    case "|":
                        -1 !== i && -1 === a && (a = r);
                        break;
                    case ">":
                        if (-1 !== i) {
                            s < i && t.push(Rf(e, s, i, null));
                            const n = e.substring(i + 1, -1 !== a ? a : r),
                                o = r < e.length - 1 && Af.test(e[r + 1]) ? e[r + 1] : null,
                                l = Rf(e, -1 !== a ? a + 1 : i + 1, r, o),
                                c = null != this.linkRenderer ? this.linkRenderer(n, l, i) : void 0;
                            void 0 !== c ? t.push((0, z.jsxs)("span", {
                                children: [c, o]
                            }, i)) : t.push((0, z.jsx)(Hf, {
                                linkData: n,
                                children: l
                            }, i)), s = r + 1, i = -1, a = -1
                        }
                    } else n = void 0;
                return s < e.length && t.push(Rf(e, s, e.length, null)), {
                    node: t,
                    style: o,
                    images: []
                }
            }
        }

        function Rf(e, t, n, s) {
            const i = [];
            let a, o = t,
                r = !1,
                l = -1;
            for (let c = t; c < n; c++)
                if (a !== c - 1) switch (e[c]) {
                case "\\":
                    if ("*" !== e[c + 1]) continue;
                    a = c - 1, e = e.slice(0, c) + e.slice(c + 1), c -= 1, n -= 1;
                    break;
                case "*":
                    if (r)
                        if (-1 === l) l = c - 1, r = !1;
                        else {
                            o < l && i.push(e.substring(o, l));
                            let t = e.substring(l + 2, c - 1);
                            c < n - 1 ? Af.test(e[c + 1]) && (t += e[c + 1]) : null != s && (t += s), i.push((0, z.jsx)("b", {
                                children: t
                            }, l)), o = c + 1, l = -1, r = !1
                        }
                    else r = !0;
                    break;
                default:
                    r = !1
                } else a = void 0;
            if (o < n) {
                let t = e.substring(o, n);
                null != s && (t += s), i.push(t)
            }
            return i
        }
        X.add("game-ui/common/text/renderers/markup-renderer.tsx", {});
        let kf = {
            h1: "h1_YPD",
            h2: "h2_TYz",
            h3: "h3__p1",
            h4: "h4_Gmc",
            h5: "h5_QKx",
            h6: "h6__nd",
            link: "link_jpN",
            p: "p_CKq",
            "list-item": "list-item_xk2",
            listItem: "list-item_xk2",
            hint: "hint_dM0"
        };
        X.add("game-ui/common/text/formatted-text.module.scss", {
            get classes() {
                return kf
            },
            set classes(e) {
                Object.assign(kf, e)
            }
        });
        const Df = kf;
        var Ff;
        ! function (e) {
            e[e.None = 0] = "None", e[e.Heading1 = 1] = "Heading1", e[e.Heading2 = 2] = "Heading2", e[e.Heading3 = 3] = "Heading3", e[e.Heading4 = 4] = "Heading4", e[e.Heading5 = 5] = "Heading5", e[e.Heading6 = 6] = "Heading6", e[e.ListItem = 7] = "ListItem"
        }(Ff || (Ff = {}));
        var Uf = (0, Y.createContext)({
            theme: Df,
            onLinkSelect: void 0
        });
        const Bf = new Mf;
        var Gf = ({
            focusKey: e,
            text: t = "",
            theme: n,
            renderer: s = Bf,
            className: i,
            onLinkSelect: a,
            ...o
        }) => {
            const r = (0, Y.useMemo)((() => ({
                    ...Df,
                    ...n
                })), [n]),
                l = (0, Y.useMemo)((() => ({
                    theme: r,
                    onLinkSelect: a
                })), [a, r]),
                c = oc(t),
                u = (0, Y.useMemo)((() => s.render(c)), [s, c]);
            return "string" == typeof t && t.includes("<inputAction:") && (i = `action-hint ${i||""}`), (0, z.jsx)(tp, {
                focusKey: e,
                children: (0, z.jsx)(Uf.Provider, {
                    value: l,
                    children: (0, z.jsx)("p", {
                        ...o,
                        className: Zu()(Vf(r, u.style), i),
                        cohinline: "cohinline",
                        children: u.node
                    })
                })
            })
        };

        function Vf(e, t) {
            switch (t) {
            case Ff.None:
                return e.p;
            case Ff.Heading1:
                return e.h1;
            case Ff.Heading2:
                return e.h2;
            case Ff.Heading3:
                return e.h3;
            case Ff.Heading4:
                return e.h4;
            case Ff.Heading5:
                return e.h5;
            case Ff.Heading6:
                return e.h6;
            case Ff.ListItem:
                return e.listItem;
            default:
                return
            }
        }
        var Hf = ({
            linkData: e,
            disableHint: t = !1,
            children: n
        }) => {
            const [s, i] = (0, Y.useState)(!1), a = (0, Y.useContext)(Uf), o = (0, Y.useCallback)((() => {
                a.onLinkSelect && a.onLinkSelect(e)
            }), [a, e]);
            return "" !== e ? (0, z.jsx)(Ah, {
                onFocusChange: i,
                children: (0, z.jsxs)(Gp, {
                    disableHint: !0,
                    className: a.theme.link,
                    onSelect: o,
                    children: [(0, z.jsx)(Pf, {
                        action: "Select",
                        active: !t && s,
                        className: Df.hint
                    }), n]
                })
            }) : (0, z.jsx)(z.Fragment, {
                children: n
            })
        };
        X.add("game-ui/common/text/formatted-text.tsx", {
            get ParagraphStyle() {
                return Ff
            },
            set ParagraphStyle(e) {
                Ff = e
            },
            get FormattedTextContext() {
                return Uf
            },
            set FormattedTextContext(e) {
                Uf = e
            },
            get FormattedText() {
                return Gf
            },
            set FormattedText(e) {
                Gf = e
            },
            get Link() {
                return Hf
            },
            set Link(e) {
                Hf = e
            }
        });
        let Kf = {
            paragraphs: "paragraphs_nbD"
        };
        X.add("game-ui/common/text/formatted-paragraphs.module.scss", {
            get classes() {
                return Kf
            },
            set classes(e) {
                Object.assign(Kf, e)
            }
        });
        const Wf = Kf;
        var zf = ({
            focusKey: e,
            text: t,
            theme: n,
            renderer: s,
            className: i,
            children: a,
            onLinkSelect: o,
            maxLineLength: r,
            splitLineLength: l,
            ...c
        }) => {
            const u = (0, Y.useMemo)((() => ({
                    ...Wf,
                    ...n
                })), [n]),
                d = function (e, t = !0, n, s) {
                    const i = ac();
                    return (0, Y.useMemo)((() => Y.Children.toArray(e).flatMap((e => Xf(rc(i, e, "\n"), t, !1, n, s)))), [e, i, n, s, t])
                }(Y.Children.count(a) > 0 ? a : t, !0, r, l);
            return (0, z.jsx)("div", {
                ...c,
                className: Zu()(u.paragraphs, i),
                children: (0, z.jsx)(tp, {
                    focusKey: e,
                    children: d.map(((e, t) => (0, z.jsx)(Gf, {
                        text: e,
                        theme: u,
                        renderer: s,
                        onLinkSelect: o
                    }, t)))
                })
            })
        };
        const Yf = 150,
            $f = (e, t) => {
                let n = e;
                const s = [];
                do {
                    const e = n.substring(0, t).lastIndexOf(" "); - 1 === e ? (s.push(n.substring(0, t)), n = n.substring(t)) : (s.push(n.substring(0, e)), n = n.substring(e))
                } while (n.length > t);
                return n.length > 0 && s.push(n), s
            };
        var qf = /\r\n|\r|\n/;

        function Xf(e, t = !0, n = !1, s, i) {
            let a = e.split(qf);
            t && (a = a.filter(((e, t, s) => "" !== e.trim() || n && "" === s[t + 1]?.trim())));
            const o = [];
            return a.forEach((e => void 0 !== s && e.length > s ? o.push(...$f(e, i ?? Yf)) : o.push(e))), o
        }
        X.add("game-ui/common/text/formatted-paragraphs.tsx", {
            get FormattedParagraphs() {
                return zf
            },
            set FormattedParagraphs(e) {
                zf = e
            },
            get splitParagraphs() {
                return Xf
            },
            set splitParagraphs(e) {
                Xf = e
            }
        });
        let Qf = {
            button: "button_wte",
            label: "label_qmW",
            hint: "hint_AlC",
            icon: "icon_Mm0 icon_B1q"
        };
        X.add("game-ui/game/components/tutorials/tutorial-input-hints/tutorial-input-hint.module.scss", {
            get classes() {
                return Qf
            },
            set classes(e) {
                Object.assign(Qf, e)
            }
        });
        const Zf = Qf,
            Jf = "inputAction:";
        var ex = new Mf(((e, t, n) => {
            if (e.startsWith(Jf)) {
                const t = e.substring(12).trim(),
                    [s, i] = function (e) {
                        if (e.endsWith("]")) {
                            const t = e.lastIndexOf("[");
                            if (t < e.length - 1) {
                                const n = parseInt(e.substring(t + 1, e.length - 1));
                                return isNaN(n) ? [e, void 0] : [e.substring(0, t), n]
                            }
                        }
                        return [e, void 0]
                    }(t);
                return (0, z.jsx)(tx, {
                    linkData: s,
                    bindingIndex: i
                }, n)
            }
        }));

        function tx({
            linkData: e,
            bindingIndex: t
        }) {
            const n = sl(Em),
                s = (0, Y.useMemo)((() => {
                    const s = [];
                    for (let t = e.indexOf("/"); t >= 0; t = e.indexOf("/", t + 1)) s.push(t);
                    return s.length >= 1 ? {
                        map: e.substring(0, s[0]),
                        action: e.substring(s[0] + 1),
                        controlScheme: n,
                        index: t ?? -1
                    } : {
                        map: "",
                        action: "",
                        controlScheme: n,
                        index: t ?? -1
                    }
                }), [n, t, e]),
                i = ll(Lm, s);
            return (0, z.jsx)(z.Fragment, {
                children: i.map(((t, n) => (0, z.jsx)(yf, {
                    bindings: t.items[0].bindings,
                    modifiers: t.items[0].modifiers,
                    theme: Zf,
                    shortName: pf.FallbackToControl,
                    showName: "Mouse" === t.items[0].bindings[0].device
                }, e + n)))
            })
        }

        function nx(e) {
            e.stopPropagation()
        }
        X.add("game-ui/game/components/tutorials/tutorial-input-hints/tutorial-input-hint.tsx", {
            get tutorialTextRenderer() {
                return ex
            },
            set tutorialTextRenderer(e) {
                ex = e
            }
        }), X.add("game-ui/common/utils/cancel-click.ts", {
            get cancelClick() {
                return nx
            },
            set cancelClick(e) {
                nx = e
            }
        });
        var sx = Y.forwardRef((function ({
            focusKey: e,
            debugName: t = "Toggle",
            checked: n,
            disabled: s = !1,
            style: i,
            toggleSound: a = rp.selectToggle,
            className: o,
            children: r,
            onChange: l,
            onMouseOver: c,
            onMouseLeave: u
        }, d) {
            const m = (0, Y.useCallback)((() => {
                    l && (lp(a), l(!n))
                }), [n, l, a]),
                h = (0, Y.useCallback)((e => {
                    m(), l && !s && nx(e)
                }), [s, m, l]),
                g = (0, Y.useRef)(null),
                p = gd(d, g),
                f = hp(jg(e ?? (s ? Ig : yg), t), g),
                x = wh(f),
                v = Dm();
            return (0, z.jsx)(kg, {
                onAction: s ? void 0 : m,
                children: (0, z.jsx)(Lh, {
                    controller: f,
                    children: (0, z.jsx)("div", {
                        ref: p,
                        onClick: s ? void 0 : h,
                        onMouseOver: c,
                        onMouseLeave: u,
                        style: i,
                        className: Zu()(o, n ? "checked" : "unchecked", s && "disabled", x && v && "focused"),
                        children: r
                    })
                })
            })
        }));
        X.add("game-ui/common/input/toggle/toggle.tsx", {
            get Toggle() {
                return sx
            },
            set Toggle(e) {
                sx = e
            }
        });
        let ix = {
            toggle: "toggle_cca item-mouse-states_Fmi",
            checkmark: "checkmark_NXV"
        };
        X.add("game-ui/common/input/toggle/checkbox/checkbox.module.scss", {
            get classes() {
                return ix
            },
            set classes(e) {
                Object.assign(ix, e)
            }
        });
        const ax = ix;
        var ox = ({
            checked: e,
            disabled: t,
            theme: n,
            className: s,
            ...i
        }) => {
            const a = (0, Y.useMemo)((() => ({
                ...ax,
                ...n
            })), [n]);
            return (0, z.jsx)(sx, {
                ...i,
                checked: e,
                disabled: t,
                className: Zu()(a.toggle, s),
                children: (0, z.jsx)("div", {
                    className: Zu()(a.checkmark, e && "checked", t && "disabled")
                })
            })
        };
        X.add("game-ui/common/input/toggle/checkbox/checkbox.tsx", {
            get Checkbox() {
                return ox
            },
            set Checkbox(e) {
                ox = e
            }
        });
        let rx = {
            "trigger-item": "trigger-item_rd_",
            triggerItem: "trigger-item_rd_",
            completed: "completed_V8G",
            checkbox: "checkbox_Y9N",
            label: "label_vR9"
        };
        X.add("game-ui/game/components/tutorials/tutorial-layout/trigger-item/trigger-item.module.scss", {
            get classes() {
                return rx
            },
            set classes(e) {
                Object.assign(rx, e)
            }
        });
        const lx = rx;
        var cx = ({
            trigger: e
        }) => ((0, Y.useEffect)((() => {
            e.completed && lp(rp.tutorialTriggerCompleteEvent)
        }), [e.completed]), (0, z.jsxs)("div", {
            className: Zu()(lx.triggerItem, e.completed && lx.completed),
            children: [(0, z.jsx)(ox, {
                checked: e.completed || e.preCompleted,
                className: lx.checkbox,
                focusKey: Ig
            }), (0, z.jsx)(zf, {
                renderer: ex,
                className: lx.label,
                children: (0, z.jsx)(Pc.Tutorials.TRIGGER, {
                    hash: e.name
                })
            })]
        }));
        X.add("game-ui/game/components/tutorials/tutorial-layout/trigger-item/trigger-item.tsx", {
            get TriggerItem() {
                return cx
            },
            set TriggerItem(e) {
                cx = e
            }
        });
        let ux = {
            "tutorial-layout": "tutorial-layout_iuN",
            tutorialLayout: "tutorial-layout_iuN",
            image: "image_NyN",
            columns: "columns_ITy",
            "icon-column": "icon-column_K_S",
            iconColumn: "icon-column_K_S",
            "content-column": "content-column_ygV",
            contentColumn: "content-column_ygV",
            top: "top_4SL",
            icon: "icon_Qax",
            content: "content_p9h",
            scrollable: "scrollable_ErH",
            title: "title_JUj",
            "close-button": "close-button_K6M",
            closeButton: "close-button_K6M",
            description: "description_Dj3",
            rows: "rows_vbh",
            row: "row_yh5",
            triggers: "triggers_Da1 row_yh5",
            bottom: "bottom_oC7 row_yh5",
            pages: "pages_kqp",
            "center-card": "center-card_JWz",
            centerCard: "center-card_JWz",
            hints: "hints_jKY",
            "hints-next-only": "hints-next-only_inP",
            hintsNextOnly: "hints-next-only_inP",
            "hints-prev-only": "hints-prev-only_YuG",
            hintsPrevOnly: "hints-prev-only_YuG",
            "pages-only": "pages-only_q3k",
            pagesOnly: "pages-only_q3k",
            hint: "hint_Elc",
            hintButton: "hintButton_j5t",
            "hints-next": "hints-next_E81",
            hintsNext: "hints-next_E81",
            "hints-prev": "hints-prev_YHO",
            hintsPrev: "hints-prev_YHO"
        };
        X.add("game-ui/game/components/tutorials/tutorial-layout/tutorial-layout.module.scss", {
            get classes() {
                return ux
            },
            set classes(e) {
                Object.assign(ux, e)
            }
        });
        const dx = ux;

        function mx(e) {
            return (0, Y.useMemo)((() => ({
                ...dx,
                ...e
            })), [e])
        }

        function hx(e, t) {
            return !e.mandatory || t.trigger?.preCompleted || null == t.trigger || e.advisorActivation || t.completed
        }

        function gx(e, t) {
            return px(e, t) > 0
        }

        function px(e, t) {
            return e.phases.findIndex((e => Ur(e.entity, t.entity)))
        }

        function fx() {
            const e = Wh.value,
                t = zh.value;
            if (null != e && null != t) {
                const n = px(e, t),
                    [s, i] = xx(e, n);
                if (s > 0) Xh(e.entity, e.phases[n - 1].entity);
                else if (n > 0) {
                    const t = e.phases.findIndex((e => e.trigger?.phaseBranching));
                    t >= 0 && Xh(e.entity, e.phases[t].entity)
                }
            }
        }

        function xx(e, t) {
            const n = e.phases.length,
                s = e.phases.findIndex((e => e?.trigger?.phaseBranching));
            if (s < 0) return [t, n];
            if (t <= s) return [t, s + 1];
            let i = -1,
                a = -1;
            for (let i = s + 1; i < n; i++) {
                const s = e.phases[i];
                if ((s?.forcesCompletion || i === n - 1) && i >= t) {
                    a = i;
                    break
                }
            }
            for (let a = n - 1; a > s; a--) {
                const n = e.phases[a];
                if (n?.isBranch && a <= t) {
                    i = a;
                    break
                }
            }
            return [t - i, a - i + 1]
        }

        function vx() {
            const e = sl(Rh),
                t = sl(Wh),
                n = null !== sl(Dh);
            return (0, Y.useMemo)((() => !(n || t?.mandatory && e)), [t?.mandatory, n, e])
        }
        X.add("game-ui/game/components/tutorials/tutorial-layout/tutorial-theme.tsx", {
            get useTutorialTheme() {
                return mx
            },
            set useTutorialTheme(e) {
                mx = e
            }
        }), X.add("game-ui/game/components/tutorials/tutorial-layout/tutorial-utils.ts", {
            get tutorialSkipAvailable() {
                return hx
            },
            set tutorialSkipAvailable(e) {
                hx = e
            },
            get previousTutorialPhaseAvailable() {
                return gx
            },
            set previousTutorialPhaseAvailable(e) {
                gx = e
            },
            get activatePreviousTutorialPhase() {
                return fx
            },
            set activatePreviousTutorialPhase(e) {
                fx = e
            },
            get getBranchIndices() {
                return xx
            },
            set getBranchIndices(e) {
                xx = e
            },
            get useAdvisorPanelAvailable() {
                return vx
            },
            set useAdvisorPanelAvailable(e) {
                vx = e
            }
        });
        let _x = {
            item: "item_Lji",
            button: "button_iQJ item_Lji",
            animate: "animate_fHa",
            blink: "blink_HHL",
            none: "none_bxA",
            icon: "icon_G81",
            pages: "pages_Lzi item_Lji",
            label: "label_FEJ",
            divider: "divider_bFc",
            "divider-gamepad": "divider-gamepad_bWe",
            dividerGamepad: "divider-gamepad_bWe"
        };
        X.add("game-ui/game/components/tutorials/tutorial-layout/tutorial-action-button.module.scss", {
            get classes() {
                return _x
            },
            set classes(e) {
                Object.assign(_x, e)
            }
        });
        const bx = _x;
        var Tx = ({
            tutorial: e,
            phase: t,
            pagesVisible: n,
            theme: s,
            localization: i,
            closeable: a = !1,
            scrollable: o = !1,
            disableTooltips: r = !1,
            className: l
        }) => {
            const c = e.phases.findIndex((e => Ur(e.entity, t.entity))),
                [u, d] = (0, Y.useMemo)((() => xx(e, c)), [c, e]),
                m = hx(e, t),
                h = c > 0,
                g = i || Pc.Tutorials,
                p = oc((0, z.jsx)(g.DESCRIPTION, {
                    hash: t.name
                })),
                f = !e.completed && !e.advisorActivation,
                x = t.descriptionVisible ? p : null,
                v = function (e) {
                    const t = zx();
                    return t !== _m.PS || Vr(e.overrideImagePS) ? t !== _m.Xbox || Vr(e.overrideImageXbox) ? e.image : e.overrideImageXbox : e.overrideImagePS
                }(t);
            return (0, z.jsx)(Ex, {
                theme: s,
                image: v,
                icon: t.icon,
                title: t.titleVisible ? (0, z.jsx)(g.TITLE, {
                    hash: t.name
                }) : void 0,
                description: t.descriptionVisible ? x : null,
                onClose: a ? eg : void 0,
                scrollable: o,
                trigger: t.trigger,
                pagesVisible: n,
                phaseIndex: u,
                phaseCount: d,
                nextVisible: m,
                previousVisible: h,
                onActivatePreviousPhase: fx,
                onActivateNextPhase: Jh,
                animateButton: f,
                className: l,
                disableTooltips: r,
                isCenterCard: t.type === dg.CenterCard
            })
        };
        var Ex = ({
            theme: e = dx,
            className: t,
            image: n,
            icon: s,
            title: i,
            autoScroll: a = !0,
            description: o,
            onClose: r,
            scrollable: l,
            trigger: c,
            pagesVisible: u,
            phaseIndex: d = 0,
            phaseCount: m = 1,
            nextVisible: h,
            previousVisible: g,
            onActivatePreviousPhase: p,
            onActivateNextPhase: f,
            animateButton: x,
            disableTooltips: v,
            isCenterCard: _
        }) => {
            const b = mx(e),
                T = u && -1 !== d && m > 1,
                E = d + 1 === m,
                I = Dm(),
                y = i || o ? (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsxs)("div", {
                        className: b.top,
                        children: [i && (0, z.jsx)("div", {
                            className: b.title,
                            children: i
                        }), !I && r && (0, z.jsx)(sf, {
                            tinted: !0,
                            focusKey: Ig,
                            src: "Media/Glyphs/Close.svg",
                            theme: of ,
                            className: b.closeButton,
                            onSelect: r
                        })]
                    }), o && (0, z.jsx)("div", {
                        className: b.description,
                        children: (0, z.jsx)(zf, {
                            renderer: ex,
                            children: o
                        })
                    })]
                }) : void 0;
            return (0, z.jsxs)("div", {
                className: Zu()(b.tutorialLayout, t),
                children: [n && (0, z.jsx)(qp, {
                    src: n,
                    className: b.image
                }), (s || y) && (0, z.jsxs)("div", {
                    className: b.columns,
                    children: [s && (0, z.jsx)("div", {
                        className: b.iconColumn,
                        children: (0, z.jsx)("img", {
                            src: s,
                            className: b.icon
                        })
                    }), (0, z.jsx)("div", {
                        className: b.contentColumn,
                        children: l ? (0, z.jsx)(ff, {
                            autoScroll: a,
                            className: b.scrollable,
                            children: y
                        }) : (0, z.jsx)("div", {
                            className: b.content,
                            children: y
                        })
                    })]
                }), (c?.displayUI || g || h || T) && (0, z.jsxs)("div", {
                    className: b.rows,
                    children: [c?.displayUI && (0, z.jsx)("div", {
                        className: b.triggers,
                        children: (0, z.jsx)(cx, {
                            trigger: c
                        })
                    }), (g || h || T) && (I ? (0, z.jsx)(Ix, {
                        theme: b,
                        nextVisible: h,
                        previousVisible: g,
                        pagesVisible: T,
                        isCenterCard: _,
                        phaseIndex: d,
                        phaseCount: m,
                        animateButton: x,
                        lastPhase: E
                    }) : g || h ? (0, z.jsxs)("div", {
                        className: b.bottom,
                        children: [g && (0, z.jsxs)(z.Fragment, {
                            children: [(0, z.jsx)(Tg, {
                                tooltip: !v && (0, z.jsx)(Pc.Tutorials.BUTTON_TOOLTIP_PREVIOUS, {}),
                                children: (0, z.jsx)(sf, {
                                    tinted: !0,
                                    focusKey: Ig,
                                    src: "Media/Glyphs/FilledArrowLeft.svg",
                                    theme: bx,
                                    onSelect: p
                                })
                            }), (T || h) && (0, z.jsx)("div", {
                                className: bx.divider
                            })]
                        }), T && (0, z.jsx)("div", {
                            className: bx.pages,
                            children: (0, z.jsx)("div", {
                                className: bx.label,
                                children: (0, z.jsx)(cu, {
                                    value: d + 1,
                                    total: m
                                })
                            })
                        }), h && (0, z.jsxs)(z.Fragment, {
                            children: [T && (0, z.jsx)("div", {
                                className: bx.divider
                            }), (0, z.jsx)(Tg, {
                                tooltip: v ? void 0 : E ? (0, z.jsx)(Pc.Tutorials.BUTTON_TOOLTIP_DONE, {}) : (0, z.jsx)(Pc.Tutorials.BUTTON_TOOLTIP_NEXT, {}),
                                children: (0, z.jsx)(sf, {
                                    tinted: !0,
                                    focusKey: Ig,
                                    src: E ? "Media/Glyphs/Checkmark.svg" : "Media/Glyphs/FilledArrowRight.svg",
                                    theme: bx,
                                    className: Zu()(x && bx.animate),
                                    onSelect: f
                                })
                            })]
                        })]
                    }) : T && (0, z.jsx)("div", {
                        className: b.bottom,
                        children: (0, z.jsx)("div", {
                            className: b.pages,
                            children: (0, z.jsx)(cu, {
                                value: d + 1,
                                total: m
                            })
                        })
                    }))]
                })]
            })
        };
        const Ix = ({
            theme: e,
            previousVisible: t,
            nextVisible: n,
            pagesVisible: s,
            isCenterCard: i,
            phaseIndex: a,
            phaseCount: o,
            lastPhase: r,
            animateButton: l
        }) => {
            const c = !t && n,
                u = t && !n,
                d = !t && !n && s;
            return (0, z.jsxs)("div", {
                className: Zu()(e.hints, {
                    [dx.centerCard]: i,
                    [dx.hintsNextOnly]: c,
                    [dx.hintsPrevOnly]: u,
                    [dx.pagesOnly]: d
                }),
                children: [t && (0, z.jsxs)("div", {
                    className: Zu()(e.hint, dx.hintsPrev),
                    children: [(0, z.jsxs)("div", {
                        className: e.hintButton,
                        children: [(0, z.jsx)(sf, {
                            tinted: !0,
                            focusKey: Ig,
                            src: "Media/Glyphs/FilledArrowLeft.svg",
                            theme: bx
                        }), (0, z.jsx)("div", {
                            className: Zu()(bx.divider, bx.dividerGamepad)
                        })]
                    }), (0, z.jsx)(Gx, {
                        specifiedActions: ["Previous Tutorial Phase"]
                    })]
                }), s && (0, z.jsx)("div", {
                    className: e.pages,
                    children: (0, z.jsx)("div", {
                        children: (0, z.jsx)(cu, {
                            value: a + 1,
                            total: o
                        })
                    })
                }), n && (0, z.jsxs)("div", {
                    className: Zu()(e.hint, dx.hintsNext),
                    children: [(0, z.jsx)(Gx, {
                        specifiedActions: [r ? "Finish Tutorial" : "Continue Tutorial"]
                    }), (0, z.jsxs)("div", {
                        className: e.hintButton,
                        children: [(0, z.jsx)("div", {
                            className: Zu()(bx.divider, bx.dividerGamepad)
                        }), (0, z.jsx)(sf, {
                            tinted: !0,
                            focusKey: Ig,
                            src: r ? "Media/Glyphs/Checkmark.svg" : "Media/Glyphs/FilledArrowRight.svg",
                            theme: bx,
                            className: Zu()(l && bx.animate)
                        })]
                    })]
                })]
            })
        };
        X.add("game-ui/game/components/tutorials/tutorial-layout/tutorial-layout.tsx", {
            get TutorialLayout() {
                return Tx
            },
            set TutorialLayout(e) {
                Tx = e
            },
            get TutorialPhaseLayoutImpl() {
                return Ex
            },
            set TutorialPhaseLayoutImpl(e) {
                Ex = e
            }
        });
        let yx = {
            container: "container_RSa",
            image: "image_GQL image_NyN",
            "tutorial-balloon": "tutorial-balloon_PYE",
            tutorialBalloon: "tutorial-balloon_PYE"
        };
        X.add("game-ui/game/components/tutorials/tutorial-balloon/tutorial-balloon.module.scss", {
            get classes() {
                return yx
            },
            set classes(e) {
                Object.assign(yx, e)
            }
        });
        const jx = yx;
        var Sx = ({
            tutorial: e,
            phase: t,
            localization: n,
            direction: s,
            alignment: i,
            children: a
        }) => {
            const o = Dm(),
                r = null != e && null != t && (0, z.jsx)(Tx, {
                    tutorial: e,
                    phase: t,
                    localization: n,
                    pagesVisible: !0,
                    theme: jx,
                    closeable: e.completed || e.advisorActivation || !e.mandatory,
                    disableTooltips: o
                });
            return (0, z.jsx)(bh, {
                balloonKey: t?.name,
                theme: zp,
                visible: null != e,
                content: (0, z.jsx)(Op, {
                    children: r
                }),
                direction: s,
                alignment: i,
                className: jx.tutorialBalloon,
                children: a
            })
        };
        X.add("game-ui/game/components/tutorials/tutorial-balloon/tutorial-balloon.tsx", {
            get TutorialBalloon() {
                return Sx
            },
            set TutorialBalloon(e) {
                Sx = e
            }
        });
        let Cx = {
            "tutorial-blink-active": "tutorial-blink-active_s4x",
            tutorialBlinkActive: "tutorial-blink-active_s4x",
            "tutorial-blink": "tutorial-blink_EvY",
            tutorialBlink: "tutorial-blink_EvY"
        };
        X.add("game-ui/game/components/tutorials/tutorial-target/tutorial-target.module.scss", {
            get classes() {
                return Cx
            },
            set classes(e) {
                Object.assign(Cx, e)
            }
        });
        const Nx = Cx;
        var wx = ({
            uiTag: e,
            active: t = !0,
            disableBlinking: n = !1,
            editor: s = !1,
            children: i
        }) => {
            if (!Y.isValidElement(i)) throw new Error("TutorialGuideTarget requires a single child react element!");
            const a = sl(Wh),
                o = sl(zh),
                r = Ox(e, t),
                [l, c, u] = Px(e, t),
                d = !n && (r || c),
                m = Kp(Nx.tutorialBlink, d),
                h = s ? Pc.EditorTutorials : Pc.Tutorials,
                g = l ? a : null,
                p = l ? o : null,
                f = l && u >= 0 ? o?.balloonTargets[u]?.direction : void 0,
                x = l && u >= 0 ? o?.balloonTargets[u]?.alignment : void 0,
                v = l,
                _ = d ? {
                    animationDelay: m
                } : void 0,
                b = d ? Nx.tutorialBlinkActive : void 0;
            return (0, z.jsx)(fg.Provider, {
                value: v,
                children: (0, z.jsx)(Sx, {
                    tutorial: g,
                    phase: p,
                    direction: f,
                    alignment: x,
                    localization: h,
                    children: (0, z.jsx)(vd, {
                        style: _,
                        className: b,
                        children: i
                    })
                })
            })
        };
        const Ox = (e, t = !0) => {
                const [n, s] = (0, Y.useState)(!1), i = (0, Y.useContext)(pg);
                return (0, Y.useEffect)((() => {
                    if (void 0 !== e && "" !== e && t) return i.mountBlinkListener(e, s), () => i.unmountBlinkListener(e);
                    s(!1)
                }), [i, e, t]), n
            },
            Px = (e, t) => {
                const [n, s] = (0, Y.useState)(!1), [i, a] = (0, Y.useState)(!1), [o, r] = (0, Y.useState)(-1), l = (0, Y.useContext)(pg);
                return (0, Y.useEffect)((() => {
                    if (void 0 !== e && "" !== e && t) return l.mountBalloonListener(e, s, a, r), () => l.unmountBalloonListener(e);
                    s(!1)
                }), [l, e, t]), [n, i, o]
            };
        X.add("game-ui/game/components/tutorials/tutorial-target/tutorial-target.tsx", {
            get TutorialTarget() {
                return wx
            },
            set TutorialTarget(e) {
                wx = e
            }
        });
        var Lx = Vu({
            index: 0,
            version: 0
        }, "Unity.Entities.Entity");
        X.add("game-ui/common/data-binding/common-types.ts", {
            get nullEntity() {
                return Lx
            },
            set nullEntity(e) {
                Lx = e
            }
        });
        const Ax = "prefabs";
        var Mx = $r(Ax, "themes"),
            Rx = Xr(Ax, "prefabDetails"),
            kx = $r(Ax, "manualUITags"),
            Dx = {
                entity: Lx,
                name: "",
                uiTag: "",
                icon: "Media/Placeholder.svg",
                dlc: null,
                preview: null,
                titleId: "",
                descriptionId: null,
                locked: !1,
                uniquePlaced: !1,
                constructionCost: null,
                effects: [],
                properties: [],
                requirements: {
                    requireAny: [],
                    requireAll: []
                }
            };
        X.add("game-ui/game/data-binding/prefab/prefab-bindings.ts", {
            get themes() {
                return themes
            },
            set themes(e) {
                themes = e
            },
            get prefabDetails() {
                return prefabDetails
            },
            set prefabDetails(e) {
                prefabDetails = e
            },
            get manualUITags() {
                return manualUITags
            },
            set manualUITags(e) {
                manualUITags = e
            },
            get emptyPrefabDetails() {
                return Dx
            },
            set emptyPrefabDetails(e) {
                Dx = e
            }
        });
        let Fx = {
            "action-guide": "action-guide_eqv",
            actionGuide: "action-guide_eqv",
            fadeIn: "fadeIn_d4x",
            item: "item_p05",
            "item-clickable": "item-clickable_sKM item-mouse-states_Fmi",
            itemClickable: "item-clickable_sKM item-mouse-states_Fmi",
            "button-text": "button-text_U4q",
            buttonText: "button-text_U4q",
            small: "small__oP",
            xsmall: "xsmall_EJz",
            label: "label_MOA"
        };
        X.add("game-ui/common/input-events/action-hints/action-hints.module.scss", {
            get classes() {
                return Fx
            },
            set classes(e) {
                Object.assign(Fx, e)
            }
        });
        const Ux = Fx;
        var Bx = ["Previous Tutorial Phase", "Continue Tutorial", "Finish Tutorial", "Start Next Tutorial", "Switch Tab", "Tool Options", "Info View", "Advisor", "Select", "Change Slider Value", "Close", "Back", "Default Tool", "Purchase Map Tile"],
            Gx = (0, Y.forwardRef)((function ({
                disabled: e,
                specifiedActions: t,
                excludedActions: n,
                className: s,
                buttonAs: i,
                labels: a = !0,
                delay: o = 0,
                delayIgnoreCounter: r = 0
            }, l) {
                const c = gd((0, Y.useRef)(null), l),
                    u = wp(sl(wm)),
                    d = $m((0, Y.useMemo)((() => u.filter((e => e.name && e.show && (!t || t.includes(e.name)) && !n?.includes(e.name)))), [n, u, t]), o, r);
                return (0, z.jsx)("div", {
                    className: Zu()(Ux.actionGuide, s),
                    ref: c,
                    children: e ? null : d?.map(((e, t) => (0, z.jsx)(Vx, {
                        buttonAs: i,
                        hint: e,
                        label: a,
                        onSelect: Pm
                    }, t)))
                })
            }));
        const Vx = ({
            hint: e,
            label: t,
            buttonAs: n,
            onSelect: s
        }) => {
            const i = sl(Rp),
                a = (0, Y.useCallback)((() => {
                    s && s(e.name)
                }), [e.name, s]);
            let o = e.name;
            if ("Switch User" === o) o = i || e.name;
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.actionHints + "+" + e.name,
                children: (0, z.jsxs)(Wx, {
                    className: Ux.item,
                    onSelect: a,
                    as: n,
                    children: [e.items.length ? e.items.map(((e, t) => (0, z.jsx)(If, {
                        modifiers: e.modifiers,
                        bindings: e.bindings
                    }, t))) : (0, z.jsx)("span", {
                        className: Zu()(Ux.buttonText, Ux.xsmall),
                        children: (0, z.jsx)(Pc.Options.INPUT_CONTROL_NA, {})
                    }), t ? (0, z.jsx)("div", {
                        className: Ux.label,
                        children: (0, z.jsx)(Pc.Common.ACTION, {
                            hash: o,
                            showIdOnFail: !0
                        })
                    }) : null]
                })
            })
        };
        var Hx, Kx, Wx = ({
            children: e,
            className: t,
            ...n
        }) => (0, z.jsx)(Gp, {
            className: Zu()(Ux.item, t, !n.disabled && Ux.itemClickable),
            focusKey: Ig,
            ...n,
            children: e
        });

        function zx() {
            return sl(Dl)
        }

        function Yx() {
            return sl(Fl)
        }

        function $x() {
            return sl(Bl)
        }

        function qx(e) {
            return Hx[e]
        }

        function Xx(e = !1) {
            (0, Y.useEffect)((() => {
                if (!e) {
                    const e = () => {},
                        t = Cm.subscribe(e);
                    return () => t?.dispose()
                }
            }), [e])
        }

        function Qx(e = !1) {
            (0, Y.useEffect)((() => {
                if (!e) {
                    const e = () => {},
                        t = Nm.subscribe(e);
                    return () => t?.dispose()
                }
            }), [e])
        }
        X.add("game-ui/common/input-events/action-hints/action-hints.tsx", {
                get ExcludedTopPanelActionHints() {
                    return Bx
                },
                set ExcludedTopPanelActionHints(e) {
                    Bx = e
                },
                get InputActionHints() {
                    return Gx
                },
                set InputActionHints(e) {
                    Gx = e
                },
                get ActionHintLayout() {
                    return Wx
                },
                set ActionHintLayout(e) {
                    Wx = e
                },
                get useGamepadType() {
                    return zx
                },
                set useGamepadType(e) {
                    zx = e
                },
                get useKeyboardLayout() {
                    return Yx
                },
                set useKeyboardLayout(e) {
                    Yx = e
                },
                get useLayoutMap() {
                    return $x
                },
                set useLayoutMap(e) {
                    $x = e
                }
            }),
            function (e) {
                e[e.buttonSouth = 0] = "buttonSouth", e[e.buttonEast = 1] = "buttonEast", e[e.buttonWest = 2] = "buttonWest", e[e.buttonNorth = 3] = "buttonNorth", e[e.leftShoulder = 4] = "leftShoulder", e[e.rightShoulder = 5] = "rightShoulder", e[e.leftTrigger = 6] = "leftTrigger", e[e.rightTrigger = 7] = "rightTrigger", e[e.select = 8] = "select", e[e.start = 9] = "start", e[e.leftStickPress = 10] = "leftStickPress", e[e.rightStickPress = 11] = "rightStickPress", e[e.up = 12] = "up", e[e.down = 13] = "down", e[e.left = 14] = "left", e[e.right = 15] = "right"
            }(Hx || (Hx = {})),
            function (e) {
                e[e.leftStickX = 0] = "leftStickX", e[e.leftStickY = 1] = "leftStickY", e[e.RightStickX = 2] = "RightStickX", e[e.RightStickY = 3] = "RightStickY"
            }(Kx || (Kx = {})), X.add("game-ui/common/input-events/devices/gamepad.ts", {
                get GamepadButton() {
                    return Hx
                },
                set GamepadButton(e) {
                    Hx = e
                },
                get gamepadButtonFromString() {
                    return qx
                },
                set gamepadButtonFromString(e) {
                    qx = e
                },
                get GamepadAxis() {
                    return Kx
                },
                set GamepadAxis(e) {
                    Kx = e
                }
            }), X.add("game-ui/common/hooks/use-camera-action-barrier.tsx", {
                get useCameraActionBarrier() {
                    return Xx
                },
                set useCameraActionBarrier(e) {
                    Xx = e
                }
            });
        var Zx = ({
            children: e,
            ifFocused: t = !0,
            ifGamepad: n = !1
        }) => {
            const s = Dm(),
                i = wh((0, Y.useContext)(Ju));
            let a = !1;
            return t && !i && (a = !0), n && !s && (a = !0), Qx(a), (0, z.jsx)(z.Fragment, {
                children: e
            })
        };

        function Jx(e, t) {
            return t > 0 ? e.positive : t < 0 ? e.negative : void 0
        }

        function ev(e) {
            nv(document.documentElement, e)
        }

        function tv(e) {
            nv(document.body, e)
        }

        function nv(e, t) {
            (0, Y.useEffect)((() => {
                if (null != t) {
                    const n = t.split(" ");
                    return e.classList.add(...n), () => {
                        e.classList.remove(...n)
                    }
                }
            }), [e, t])
        }
        X.add("game-ui/common/hooks/use-tool-action-barrier.tsx", {
            get useToolActionBarrier() {
                return Qx
            },
            set useToolActionBarrier(e) {
                Qx = e
            },
            get ToolActionBarrier() {
                return Zx
            },
            set ToolActionBarrier(e) {
                Zx = e
            }
        }), X.add("game-ui/common/utils/class-name.tsx", {
            get signStyle() {
                return Jx
            },
            set signStyle(e) {
                Jx = e
            },
            get useRootClassName() {
                return ev
            },
            set useRootClassName(e) {
                ev = e
            },
            get useBodyClassName() {
                return tv
            },
            set useBodyClassName(e) {
                tv = e
            }
        });
        var sv = $r("infoviews", "infoviews"),
            iv = $r("infoviews", "activeInfoview");

        function av() {
            Hb(kb.InfoviewMenu), rv()
        }

        function ov(e) {
            tl("infoviews", "setActiveInfoview", e)
        }

        function rv() {
            ov(Lx)
        }

        function lv(e, t, n) {
            tl("infoviews", "setInfomodeActive", e, t, n)
        }
        var cv = $r("electricityInfo", "electricityConsumption"),
            uv = $r("electricityInfo", "electricityProduction"),
            dv = $r("electricityInfo", "electricityTransmitted"),
            mv = $r("electricityInfo", "electricityExport"),
            hv = $r("electricityInfo", "electricityImport"),
            gv = $r("electricityInfo", "electricityAvailability"),
            pv = $r("electricityInfo", "electricityTransmission"),
            fv = $r("electricityInfo", "electricityTrade"),
            xv = $r("electricityInfo", "batteryCharge"),
            vv = $r("waterInfo", "waterCapacity"),
            _v = $r("waterInfo", "waterConsumption"),
            bv = $r("waterInfo", "sewageCapacity"),
            Tv = $r("waterInfo", "sewageConsumption"),
            Ev = $r("waterInfo", "waterExport"),
            Iv = $r("waterInfo", "waterImport"),
            yv = $r("waterInfo", "sewageExport"),
            jv = $r("waterInfo", "sewageAvailability"),
            Sv = $r("waterInfo", "waterAvailability"),
            Cv = $r("waterInfo", "waterTrade"),
            Nv = $r("educationInfo", "elementaryEligible"),
            wv = $r("educationInfo", "highSchoolEligible"),
            Ov = $r("educationInfo", "collegeEligible"),
            Pv = $r("educationInfo", "universityEligible"),
            Lv = $r("educationInfo", "elementaryCapacity"),
            Av = $r("educationInfo", "highSchoolCapacity"),
            Mv = $r("educationInfo", "collegeCapacity"),
            Rv = $r("educationInfo", "universityCapacity"),
            kv = $r("educationInfo", "educationData"),
            Dv = $r("educationInfo", "elementaryStudentCount"),
            Fv = $r("educationInfo", "highSchoolStudentCount"),
            Uv = $r("educationInfo", "collegeStudentCount"),
            Bv = $r("educationInfo", "universityStudentCount"),
            Gv = $r("educationInfo", "elementaryAvailability"),
            Vv = $r("educationInfo", "highSchoolAvailability"),
            Hv = $r("educationInfo", "collegeAvailability"),
            Kv = $r("educationInfo", "universityAvailability"),
            Wv = $r("transportInfo", "summaries"),
            zv = $r("healthcareInfo", "averageHealth"),
            Yv = $r("healthcareInfo", "cemeteryUse"),
            $v = $r("healthcareInfo", "cemeteryCapacity"),
            qv = $r("healthcareInfo", "deathRate"),
            Xv = $r("healthcareInfo", "processingRate"),
            Qv = $r("healthcareInfo", "sickCount"),
            Zv = $r("healthcareInfo", "patientCount"),
            Jv = $r("healthcareInfo", "patientCapacity"),
            e_ = $r("healthcareInfo", "healthcareAvailability"),
            t_ = $r("healthcareInfo", "deathcareAvailability"),
            n_ = $r("healthcareInfo", "cemeteryAvailability"),
            s_ = $r("garbageInfo", "processingRate"),
            i_ = $r("garbageInfo", "capacity"),
            a_ = $r("garbageInfo", "processingAvailability"),
            o_ = $r("garbageInfo", "landfillAvailability"),
            r_ = $r("garbageInfo", "productionRate"),
            l_ = $r("garbageInfo", "storedGarbage"),
            c_ = $r("roadsInfo", "parkingCapacity"),
            u_ = $r("roadsInfo", "parkingIncome"),
            d_ = $r("roadsInfo", "parkedCars"),
            m_ = $r("roadsInfo", "parkingAvailability"),
            h_ = $r("trafficInfo", "trafficFlow"),
            g_ = $r("pollutionInfo", "averageGroundPollution"),
            p_ = $r("pollutionInfo", "averageAirPollution"),
            f_ = $r("pollutionInfo", "averageWaterPollution"),
            x_ = $r("pollutionInfo", "averageNoisePollution"),
            v_ = $r("fireAndRescueInfo", "averageFireHazard"),
            __ = $r("policeInfo", "averageCrimeProbability"),
            b_ = $r("policeInfo", "jailAvailability"),
            T_ = $r("policeInfo", "prisonAvailability"),
            E_ = $r("policeInfo", "crimeProducers"),
            I_ = $r("policeInfo", "crimeProbability"),
            y_ = $r("policeInfo", "jailCapacity"),
            j_ = $r("policeInfo", "arrestedCriminals"),
            S_ = $r("policeInfo", "inJail"),
            C_ = $r("policeInfo", "prisonCapacity"),
            N_ = $r("policeInfo", "prisoners"),
            w_ = $r("policeInfo", "inPrison"),
            O_ = $r("policeInfo", "criminals"),
            P_ = $r("policeInfo", "crimePerMonth"),
            L_ = $r("policeInfo", "escapedRate"),
            A_ = $r("landValueInfo", "averageLandValue"),
            M_ = $r("levelInfo", "residential"),
            R_ = $r("levelInfo", "commercial"),
            k_ = $r("levelInfo", "industrial"),
            D_ = $r("levelInfo", "office"),
            F_ = $r("disasterInfo", "shelteredCount"),
            U_ = $r("disasterInfo", "shelterCapacity"),
            B_ = $r("disasterInfo", "shelterAvailability"),
            G_ = $r("tourismInfo", "attractiveness"),
            V_ = $r("tourismInfo", "averageHotelPrice"),
            H_ = $r("tourismInfo", "tourismRate"),
            K_ = $r("tourismInfo", "weatherEffect"),
            W_ = $r("postInfo", "mailProductionRate"),
            z_ = $r("postInfo", "collectedMail"),
            Y_ = $r("postInfo", "deliveredMail"),
            $_ = $r("postInfo", "postServiceAvailability"),
            q_ = $r("populationInfo", "population"),
            X_ = $r("populationInfo", "employed"),
            Q_ = $r("populationInfo", "jobs"),
            Z_ = $r("populationInfo", "unemployment"),
            J_ = $r("populationInfo", "birthRate"),
            eb = $r("populationInfo", "movedIn"),
            tb = $r("populationInfo", "movedAway"),
            nb = $r("populationInfo", "ageData"),
            sb = $r("companyInfoview", "commercialProfitability"),
            ib = $r("companyInfoview", "industrialProfitability"),
            ab = $r("companyInfoview", "officeProfitability"),
            ob = $r("outsideInfo", "topImportNames"),
            rb = $r("outsideInfo", "topImportColors"),
            lb = $r("outsideInfo", "topImportData"),
            cb = $r("outsideInfo", "topExportNames"),
            ub = $r("outsideInfo", "topExportColors"),
            db = $r("outsideInfo", "topExportData"),
            mb = $r("naturalResourceInfo", "availableOil"),
            hb = $r("naturalResourceInfo", "availableOre"),
            gb = $r("naturalResourceInfo", "availableForest"),
            pb = $r("naturalResourceInfo", "availableFertility"),
            fb = $r("naturalResourceInfo", "oilExtractionRate"),
            xb = $r("naturalResourceInfo", "oreExtractionRate"),
            vb = $r("naturalResourceInfo", "forestExtractionRate"),
            _b = $r("naturalResourceInfo", "fertilityExtractionRate"),
            bb = $r("naturalResourceInfo", "forestRenewalRate"),
            Tb = $r("naturalResourceInfo", "fertilityRenewalRate"),
            Eb = $r("workplaces", "workplacesData"),
            Ib = $r("workplaces", "employeesData"),
            yb = $r("workplaces", "workplaces"),
            jb = $r("workplaces", "employees");

        function Sb(e) {
            const t = sl(iv),
                n = sl(sv),
                s = (0, Y.useMemo)((() => n.find((t => t.id === e))), [e, n]),
                i = (0, Y.useMemo)((() => !!s && Ur(s.entity, t?.entity)), [t?.entity, s]),
                a = (0, Y.useMemo)((() => !s || s.locked), [s]),
                o = (0, Y.useCallback)((() => {
                    s && ov(i ? Lx : s.entity)
                }), [s, i]);
            if (!a && s) return o
        }
        X.add("game-ui/game/data-binding/infoview-bindings.ts", {
            get infoviews() {
                return infoviews
            },
            set infoviews(e) {
                infoviews = e
            },
            get activeInfoview() {
                return activeInfoview
            },
            set activeInfoview(e) {
                activeInfoview = e
            },
            get closeInfoviewMenu() {
                return av
            },
            set closeInfoviewMenu(e) {
                av = e
            },
            get setActiveInfoview() {
                return ov
            },
            set setActiveInfoview(e) {
                ov = e
            },
            get clearActiveInfoview() {
                return rv
            },
            set clearActiveInfoview(e) {
                rv = e
            },
            get setInfomodeActive() {
                return lv
            },
            set setInfomodeActive(e) {
                lv = e
            },
            get electricityConsumption() {
                return electricityConsumption
            },
            set electricityConsumption(e) {
                electricityConsumption = e
            },
            get electricityProduction() {
                return electricityProduction
            },
            set electricityProduction(e) {
                electricityProduction = e
            },
            get electricityTransmitted() {
                return electricityTransmitted
            },
            set electricityTransmitted(e) {
                electricityTransmitted = e
            },
            get electricityExport() {
                return electricityExport
            },
            set electricityExport(e) {
                electricityExport = e
            },
            get electricityImport() {
                return electricityImport
            },
            set electricityImport(e) {
                electricityImport = e
            },
            get electricityAvailability() {
                return electricityAvailability
            },
            set electricityAvailability(e) {
                electricityAvailability = e
            },
            get electricityTransmission() {
                return electricityTransmission
            },
            set electricityTransmission(e) {
                electricityTransmission = e
            },
            get electricityTrade() {
                return electricityTrade
            },
            set electricityTrade(e) {
                electricityTrade = e
            },
            get batteryCharge() {
                return batteryCharge
            },
            set batteryCharge(e) {
                batteryCharge = e
            },
            get waterCapacity() {
                return waterCapacity
            },
            set waterCapacity(e) {
                waterCapacity = e
            },
            get waterConsumption() {
                return waterConsumption
            },
            set waterConsumption(e) {
                waterConsumption = e
            },
            get sewageCapacity() {
                return sewageCapacity
            },
            set sewageCapacity(e) {
                sewageCapacity = e
            },
            get sewageConsumption() {
                return sewageConsumption
            },
            set sewageConsumption(e) {
                sewageConsumption = e
            },
            get waterExport() {
                return waterExport
            },
            set waterExport(e) {
                waterExport = e
            },
            get waterImport() {
                return waterImport
            },
            set waterImport(e) {
                waterImport = e
            },
            get sewageExport() {
                return sewageExport
            },
            set sewageExport(e) {
                sewageExport = e
            },
            get sewageAvailability() {
                return sewageAvailability
            },
            set sewageAvailability(e) {
                sewageAvailability = e
            },
            get waterAvailability() {
                return waterAvailability
            },
            set waterAvailability(e) {
                waterAvailability = e
            },
            get waterTrade() {
                return waterTrade
            },
            set waterTrade(e) {
                waterTrade = e
            },
            get elementaryEligible() {
                return elementaryEligible
            },
            set elementaryEligible(e) {
                elementaryEligible = e
            },
            get highSchoolEligible() {
                return highSchoolEligible
            },
            set highSchoolEligible(e) {
                highSchoolEligible = e
            },
            get collegeEligible() {
                return collegeEligible
            },
            set collegeEligible(e) {
                collegeEligible = e
            },
            get universityEligible() {
                return universityEligible
            },
            set universityEligible(e) {
                universityEligible = e
            },
            get elementaryCapacity() {
                return elementaryCapacity
            },
            set elementaryCapacity(e) {
                elementaryCapacity = e
            },
            get highSchoolCapacity() {
                return highSchoolCapacity
            },
            set highSchoolCapacity(e) {
                highSchoolCapacity = e
            },
            get collegeCapacity() {
                return collegeCapacity
            },
            set collegeCapacity(e) {
                collegeCapacity = e
            },
            get universityCapacity() {
                return universityCapacity
            },
            set universityCapacity(e) {
                universityCapacity = e
            },
            get educationData() {
                return educationData
            },
            set educationData(e) {
                educationData = e
            },
            get elementaryStudents() {
                return elementaryStudents
            },
            set elementaryStudents(e) {
                elementaryStudents = e
            },
            get highSchoolStudents() {
                return highSchoolStudents
            },
            set highSchoolStudents(e) {
                highSchoolStudents = e
            },
            get collegeStudents() {
                return collegeStudents
            },
            set collegeStudents(e) {
                collegeStudents = e
            },
            get universityStudents() {
                return universityStudents
            },
            set universityStudents(e) {
                universityStudents = e
            },
            get elementaryAvailability() {
                return elementaryAvailability
            },
            set elementaryAvailability(e) {
                elementaryAvailability = e
            },
            get highSchoolAvailability() {
                return highSchoolAvailability
            },
            set highSchoolAvailability(e) {
                highSchoolAvailability = e
            },
            get collegeAvailability() {
                return collegeAvailability
            },
            set collegeAvailability(e) {
                collegeAvailability = e
            },
            get universityAvailability() {
                return universityAvailability
            },
            set universityAvailability(e) {
                universityAvailability = e
            },
            get transportSummaries() {
                return transportSummaries
            },
            set transportSummaries(e) {
                transportSummaries = e
            },
            get averageHealth() {
                return averageHealth
            },
            set averageHealth(e) {
                averageHealth = e
            },
            get cemeteryUse() {
                return cemeteryUse
            },
            set cemeteryUse(e) {
                cemeteryUse = e
            },
            get cemeteryCapacity() {
                return cemeteryCapacity
            },
            set cemeteryCapacity(e) {
                cemeteryCapacity = e
            },
            get deathRate() {
                return deathRate
            },
            set deathRate(e) {
                deathRate = e
            },
            get processingRate() {
                return processingRate
            },
            set processingRate(e) {
                processingRate = e
            },
            get sickCount() {
                return sickCount
            },
            set sickCount(e) {
                sickCount = e
            },
            get patientCount() {
                return patientCount
            },
            set patientCount(e) {
                patientCount = e
            },
            get patientCapacity() {
                return patientCapacity
            },
            set patientCapacity(e) {
                patientCapacity = e
            },
            get healthcareAvailability() {
                return healthcareAvailability
            },
            set healthcareAvailability(e) {
                healthcareAvailability = e
            },
            get deathcareAvailability() {
                return deathcareAvailability
            },
            set deathcareAvailability(e) {
                deathcareAvailability = e
            },
            get cemeteryAvailability() {
                return cemeteryAvailability
            },
            set cemeteryAvailability(e) {
                cemeteryAvailability = e
            },
            get garbageProcessingRate() {
                return garbageProcessingRate
            },
            set garbageProcessingRate(e) {
                garbageProcessingRate = e
            },
            get landfillCapacity() {
                return landfillCapacity
            },
            set landfillCapacity(e) {
                landfillCapacity = e
            },
            get processingAvailability() {
                return processingAvailability
            },
            set processingAvailability(e) {
                processingAvailability = e
            },
            get landfillAvailability() {
                return landfillAvailability
            },
            set landfillAvailability(e) {
                landfillAvailability = e
            },
            get garbageProductionRate() {
                return garbageProductionRate
            },
            set garbageProductionRate(e) {
                garbageProductionRate = e
            },
            get storedGarbage() {
                return storedGarbage
            },
            set storedGarbage(e) {
                storedGarbage = e
            },
            get parkingCapacity() {
                return parkingCapacity
            },
            set parkingCapacity(e) {
                parkingCapacity = e
            },
            get parkingIncome() {
                return parkingIncome
            },
            set parkingIncome(e) {
                parkingIncome = e
            },
            get parkedCars() {
                return parkedCars
            },
            set parkedCars(e) {
                parkedCars = e
            },
            get parkingAvailability() {
                return parkingAvailability
            },
            set parkingAvailability(e) {
                parkingAvailability = e
            },
            get trafficFlow() {
                return trafficFlow
            },
            set trafficFlow(e) {
                trafficFlow = e
            },
            get averageGroundPollution() {
                return averageGroundPollution
            },
            set averageGroundPollution(e) {
                averageGroundPollution = e
            },
            get averageAirPollution() {
                return averageAirPollution
            },
            set averageAirPollution(e) {
                averageAirPollution = e
            },
            get averageWaterPollution() {
                return averageWaterPollution
            },
            set averageWaterPollution(e) {
                averageWaterPollution = e
            },
            get averageNoisePollution() {
                return averageNoisePollution
            },
            set averageNoisePollution(e) {
                averageNoisePollution = e
            },
            get averageFireHazard() {
                return averageFireHazard
            },
            set averageFireHazard(e) {
                averageFireHazard = e
            },
            get averageCrimeProbability() {
                return averageCrimeProbability
            },
            set averageCrimeProbability(e) {
                averageCrimeProbability = e
            },
            get jailAvailability() {
                return jailAvailability
            },
            set jailAvailability(e) {
                jailAvailability = e
            },
            get prisonAvailability() {
                return prisonAvailability
            },
            set prisonAvailability(e) {
                prisonAvailability = e
            },
            get crimeProducers() {
                return crimeProducers
            },
            set crimeProducers(e) {
                crimeProducers = e
            },
            get crimeProbability() {
                return crimeProbability
            },
            set crimeProbability(e) {
                crimeProbability = e
            },
            get jailCapacity() {
                return jailCapacity
            },
            set jailCapacity(e) {
                jailCapacity = e
            },
            get arrestedCriminals() {
                return arrestedCriminals
            },
            set arrestedCriminals(e) {
                arrestedCriminals = e
            },
            get inJail() {
                return inJail
            },
            set inJail(e) {
                inJail = e
            },
            get prisonCapacity() {
                return prisonCapacity
            },
            set prisonCapacity(e) {
                prisonCapacity = e
            },
            get prisoners() {
                return prisoners
            },
            set prisoners(e) {
                prisoners = e
            },
            get inPrison() {
                return inPrison
            },
            set inPrison(e) {
                inPrison = e
            },
            get criminals() {
                return criminals
            },
            set criminals(e) {
                criminals = e
            },
            get crimePerMonth() {
                return crimePerMonth
            },
            set crimePerMonth(e) {
                crimePerMonth = e
            },
            get escapedRate() {
                return escapedRate
            },
            set escapedRate(e) {
                escapedRate = e
            },
            get averageLandValue() {
                return averageLandValue
            },
            set averageLandValue(e) {
                averageLandValue = e
            },
            get residentialLevels() {
                return residentialLevels
            },
            set residentialLevels(e) {
                residentialLevels = e
            },
            get commercialLevels() {
                return commercialLevels
            },
            set commercialLevels(e) {
                commercialLevels = e
            },
            get industrialLevels() {
                return industrialLevels
            },
            set industrialLevels(e) {
                industrialLevels = e
            },
            get officeLevels() {
                return officeLevels
            },
            set officeLevels(e) {
                officeLevels = e
            },
            get shelteredCount() {
                return shelteredCount
            },
            set shelteredCount(e) {
                shelteredCount = e
            },
            get shelterCapacity() {
                return shelterCapacity
            },
            set shelterCapacity(e) {
                shelterCapacity = e
            },
            get shelterAvailability() {
                return shelterAvailability
            },
            set shelterAvailability(e) {
                shelterAvailability = e
            },
            get attractiveness() {
                return attractiveness
            },
            set attractiveness(e) {
                attractiveness = e
            },
            get averageHotelPrice() {
                return averageHotelPrice
            },
            set averageHotelPrice(e) {
                averageHotelPrice = e
            },
            get tourismRate() {
                return tourismRate
            },
            set tourismRate(e) {
                tourismRate = e
            },
            get weatherEffect() {
                return weatherEffect
            },
            set weatherEffect(e) {
                weatherEffect = e
            },
            get mailProductionRate() {
                return mailProductionRate
            },
            set mailProductionRate(e) {
                mailProductionRate = e
            },
            get collectedMail() {
                return collectedMail
            },
            set collectedMail(e) {
                collectedMail = e
            },
            get deliveredMail() {
                return deliveredMail
            },
            set deliveredMail(e) {
                deliveredMail = e
            },
            get postServiceAvailability() {
                return postServiceAvailability
            },
            set postServiceAvailability(e) {
                postServiceAvailability = e
            },
            get population() {
                return population
            },
            set population(e) {
                population = e
            },
            get employed() {
                return employed
            },
            set employed(e) {
                employed = e
            },
            get jobs() {
                return jobs
            },
            set jobs(e) {
                jobs = e
            },
            get unemployment() {
                return unemployment
            },
            set unemployment(e) {
                unemployment = e
            },
            get birthRate() {
                return birthRate
            },
            set birthRate(e) {
                birthRate = e
            },
            get movedIn() {
                return movedIn
            },
            set movedIn(e) {
                movedIn = e
            },
            get movedAway() {
                return movedAway
            },
            set movedAway(e) {
                movedAway = e
            },
            get ageData() {
                return ageData
            },
            set ageData(e) {
                ageData = e
            },
            get commercialProfitability() {
                return commercialProfitability
            },
            set commercialProfitability(e) {
                commercialProfitability = e
            },
            get industrialProfitability() {
                return industrialProfitability
            },
            set industrialProfitability(e) {
                industrialProfitability = e
            },
            get officeProfitability() {
                return officeProfitability
            },
            set officeProfitability(e) {
                officeProfitability = e
            },
            get topImportNames() {
                return topImportNames
            },
            set topImportNames(e) {
                topImportNames = e
            },
            get topImportColors() {
                return topImportColors
            },
            set topImportColors(e) {
                topImportColors = e
            },
            get topImportData() {
                return topImportData
            },
            set topImportData(e) {
                topImportData = e
            },
            get topExportNames() {
                return topExportNames
            },
            set topExportNames(e) {
                topExportNames = e
            },
            get topExportColors() {
                return topExportColors
            },
            set topExportColors(e) {
                topExportColors = e
            },
            get topExportData() {
                return topExportData
            },
            set topExportData(e) {
                topExportData = e
            },
            get availableOil() {
                return availableOil
            },
            set availableOil(e) {
                availableOil = e
            },
            get availableOre() {
                return availableOre
            },
            set availableOre(e) {
                availableOre = e
            },
            get availableForest() {
                return availableForest
            },
            set availableForest(e) {
                availableForest = e
            },
            get availableFertility() {
                return availableFertility
            },
            set availableFertility(e) {
                availableFertility = e
            },
            get oilExtractionRate() {
                return oilExtractionRate
            },
            set oilExtractionRate(e) {
                oilExtractionRate = e
            },
            get oreExtractionRate() {
                return oreExtractionRate
            },
            set oreExtractionRate(e) {
                oreExtractionRate = e
            },
            get forestExtractionRate() {
                return forestExtractionRate
            },
            set forestExtractionRate(e) {
                forestExtractionRate = e
            },
            get fertilityExtractionRate() {
                return fertilityExtractionRate
            },
            set fertilityExtractionRate(e) {
                fertilityExtractionRate = e
            },
            get forestRenewalRate() {
                return forestRenewalRate
            },
            set forestRenewalRate(e) {
                forestRenewalRate = e
            },
            get fertilityRenewalRate() {
                return fertilityRenewalRate
            },
            set fertilityRenewalRate(e) {
                fertilityRenewalRate = e
            },
            get workplacesData() {
                return workplacesData
            },
            set workplacesData(e) {
                workplacesData = e
            },
            get employeesData() {
                return employeesData
            },
            set employeesData(e) {
                employeesData = e
            },
            get worksplaces() {
                return worksplaces
            },
            set worksplaces(e) {
                worksplaces = e
            },
            get workers() {
                return workers
            },
            set workers(e) {
                workers = e
            },
            get useInfoviewToggle() {
                return Sb
            },
            set useInfoviewToggle(e) {
                Sb = e
            }
        });
        const Cb = "game";
        var Nb;
        ! function (e) {
            e[e.main = 0] = "main", e[e.freeCamera = 1] = "freeCamera", e[e.pauseMenu = 10] = "pauseMenu", e[e.saveGame = 11] = "saveGame", e[e.newGame = 12] = "newGame", e[e.loadGame = 13] = "loadGame", e[e.options = 14] = "options"
        }(Nb || (Nb = {}));
        var wb, Ob = $r(Cb, "activeScreen"),
            Pb = el(Cb, "setActiveScreen"),
            Lb = $r(Cb, "canUseSaveSystem");

        function Ab() {
            Pb(Nb.main)
        }

        function Mb() {
            Pb(Nb.pauseMenu)
        }

        function Rb() {
            Pb(Nb.freeCamera)
        }! function (e) {
            e[e.Undefined = 0] = "Undefined", e[e.Left = 1] = "Left", e[e.Center = 2] = "Center", e[e.Right = 3] = "Right"
        }(wb || (wb = {}));
        var kb, Db, Fb = $r(Cb, "activePanel"),
            Ub = $r(Cb, "blockingPanelActive"),
            Bb = $r(Cb, "activePanelPosition"),
            Gb = el(Cb, "togglePanel"),
            Vb = el(Cb, "showPanel"),
            Hb = el(Cb, "closePanel"),
            Kb = Jr(Cb, "closeActivePanel");

        function Wb() {
            Gu(Fb.value, kb.InfoviewMenu) ? (rv(), Hb(kb.InfoviewMenu)) : Vb(kb.InfoviewMenu)
        }! function (e) {
            e.InfoviewMenu = "Game.UI.InGame.InfoviewMenu", e.Progression = "Game.UI.InGame.ProgressionPanel", e.Economy = "Game.UI.InGame.EconomyPanel", e.CityInfo = "Game.UI.InGame.CityInfoPanel", e.Statistics = "Game.UI.InGame.StatisticsPanel", e.TransportationOverview = "Game.UI.InGame.TransportationOverviewPanel", e.Chirper = "Game.UI.InGame.ChirperPanel", e.LifePath = "Game.UI.InGame.LifePathPanel", e.Journal = "Game.UI.InGame.JournalPanel", e.Radio = "Game.UI.InGame.RadioPanel", e.PhotoMode = "Game.UI.InGame.PhotoModePanel", e.CinematicCamera = "Game.UI.InGame.CinematicCameraPanel", e.Notifications = "Game.UI.InGame.NotificationsPanel"
        }(kb || (kb = {})),
        function (e) {
            e[e.Development = 0] = "Development", e[e.Milestones = 1] = "Milestones", e[e.Achievements = 2] = "Achievements"
        }(Db || (Db = {}));
        var zb, Yb = el(Cb, "showProgressionPanel");
        ! function (e) {
            e[e.Budget = 0] = "Budget", e[e.Loan = 1] = "Loan", e[e.Taxation = 2] = "Taxation", e[e.Services = 3] = "Services", e[e.Production = 4] = "Production"
        }(zb || (zb = {}));
        var $b, qb = el(Cb, "showEconomyPanel");
        ! function (e) {
            e[e.Demand = 0] = "Demand", e[e.Policies = 1] = "Policies"
        }($b || ($b = {}));
        var Xb, Qb = el(Cb, "showCityInfoPanel"),
            Zb = el(Cb, "showTransportationOverviewPanel");

        function Jb() {
            Gb(kb.LifePath)
        }

        function eT() {
            Vb(kb.LifePath)
        }! function (e) {
            e[e.PublicTransport = 0] = "PublicTransport", e[e.Cargo = 1] = "Cargo"
        }(Xb || (Xb = {}));
        var tT = el(Cb, "showLifePathDetail");

        function nT() {
            Gb(kb.Radio)
        }

        function sT() {
            Gb(kb.TransportationOverview)
        }
        X.add("game-ui/game/data-binding/game-bindings.ts", {
            get GameScreen() {
                return Nb
            },
            set GameScreen(e) {
                Nb = e
            },
            get activeGameScreen() {
                return activeGameScreen
            },
            set activeGameScreen(e) {
                activeGameScreen = e
            },
            get setActiveGameScreen() {
                return Pb
            },
            set setActiveGameScreen(e) {
                Pb = e
            },
            get canUseSaveSystem() {
                return canUseSaveSystem
            },
            set canUseSaveSystem(e) {
                canUseSaveSystem = e
            },
            get showMainScreen() {
                return Ab
            },
            set showMainScreen(e) {
                Ab = e
            },
            get showPauseScreen() {
                return Mb
            },
            set showPauseScreen(e) {
                Mb = e
            },
            get showFreeCameraScreen() {
                return Rb
            },
            set showFreeCameraScreen(e) {
                Rb = e
            },
            get LayoutPosition() {
                return wb
            },
            set LayoutPosition(e) {
                wb = e
            },
            get activeGamePanel() {
                return activeGamePanel
            },
            set activeGamePanel(e) {
                activeGamePanel = e
            },
            get blockingPanelActive() {
                return blockingPanelActive
            },
            set blockingPanelActive(e) {
                blockingPanelActive = e
            },
            get activePanelPosition() {
                return activePanelPosition
            },
            set activePanelPosition(e) {
                activePanelPosition = e
            },
            get toggleGamePanel() {
                return Gb
            },
            set toggleGamePanel(e) {
                Gb = e
            },
            get showGamePanel() {
                return Vb
            },
            set showGamePanel(e) {
                Vb = e
            },
            get closeGamePanel() {
                return Hb
            },
            set closeGamePanel(e) {
                Hb = e
            },
            get closeActiveGamePanel() {
                return Kb
            },
            set closeActiveGamePanel(e) {
                Kb = e
            },
            get GamePanelType() {
                return kb
            },
            set GamePanelType(e) {
                kb = e
            },
            get toggleInfoviewMenu() {
                return Wb
            },
            set toggleInfoviewMenu(e) {
                Wb = e
            },
            get ProgressionPanelTab() {
                return Db
            },
            set ProgressionPanelTab(e) {
                Db = e
            },
            get showProgressionPanel() {
                return Yb
            },
            set showProgressionPanel(e) {
                Yb = e
            },
            get EconomyPanelTab() {
                return zb
            },
            set EconomyPanelTab(e) {
                zb = e
            },
            get showEconomyPanel() {
                return qb
            },
            set showEconomyPanel(e) {
                qb = e
            },
            get CityInfoPanelTab() {
                return $b
            },
            set CityInfoPanelTab(e) {
                $b = e
            },
            get showCityInfoPanel() {
                return Qb
            },
            set showCityInfoPanel(e) {
                Qb = e
            },
            get showTransportationOverviewPanel() {
                return Zb
            },
            set showTransportationOverviewPanel(e) {
                Zb = e
            },
            get TransportationOverviewPanelTab() {
                return Xb
            },
            set TransportationOverviewPanelTab(e) {
                Xb = e
            },
            get toggleLifePathPanel() {
                return Jb
            },
            set toggleLifePathPanel(e) {
                Jb = e
            },
            get showLifePathList() {
                return eT
            },
            set showLifePathList(e) {
                eT = e
            },
            get showLifePathDetail() {
                return tT
            },
            set showLifePathDetail(e) {
                tT = e
            },
            get toggleRadioPanel() {
                return nT
            },
            set toggleRadioPanel(e) {
                nT = e
            },
            get toggleTransportationOverviewPanel() {
                return sT
            },
            set toggleTransportationOverviewPanel(e) {
                sT = e
            }
        });
        let iT = {
            "panel-backdrop": "panel-backdrop_HbC",
            panelBackdrop: "panel-backdrop_HbC",
            "backdrop-visible": "backdrop-visible_GA6",
            backdropVisible: "backdrop-visible_GA6"
        };
        X.add("game-ui/common/panel/panel-backdrop.module.scss", {
            get classes() {
                return iT
            },
            set classes(e) {
                Object.assign(iT, e)
            }
        });
        const aT = iT;
        var oT = ({
            className: e,
            children: t,
            onMouseDown: n
        }) => {
            const s = sl(Ob);
            Qx(), Xx(s === Nb.freeCamera), tv(aT.backdropVisible);
            const i = (0, Y.useCallback)((e => {
                e.target === e.currentTarget && n && n()
            }), [n]);
            return (0, z.jsx)(rT.Provider, {
                value: !0,
                children: (0, z.jsx)("div", {
                    className: Zu()(aT.panelBackdrop, e),
                    onMouseDown: i,
                    children: t
                })
            })
        };
        const rT = Y.createContext(!1);
        var lT = () => {
            const e = (0, Y.useContext)(rT);
            return (0, Y.useMemo)((() => {
                if (e) return {
                    zIndex: 1e4
                }
            }), [e])
        };
        X.add("game-ui/common/panel/panel-backdrop.tsx", {
            get PanelBackdrop() {
                return oT
            },
            set PanelBackdrop(e) {
                oT = e
            },
            get usePanelBackdropStyle() {
                return lT
            },
            set usePanelBackdropStyle(e) {
                lT = e
            }
        });
        let cT = {
            "pointer-barrier": "pointer-barrier_etG",
            pointerBarrier: "pointer-barrier_etG"
        };
        X.add("game-ui/common/input-events/pointer-barrier/pointer-barrier.module.scss", {
            get classes() {
                return cT
            },
            set classes(e) {
                Object.assign(cT, e)
            }
        });
        const uT = cT;
        var dT = ({
            onClick: e
        }) => {
            const t = lT();
            return (0, z.jsx)(zm, {
                children: (0, z.jsx)("div", {
                    className: uT.pointerBarrier,
                    onClick: e,
                    style: t
                })
            })
        };
        X.add("game-ui/common/input-events/pointer-barrier/pointer-barrier.tsx", {
            get PointerBarrier() {
                return dT
            },
            set PointerBarrier(e) {
                dT = e
            }
        });
        let mT = {
            "input-stack-debug-display": "input-stack-debug-display_lFP",
            inputStackDebugDisplay: "input-stack-debug-display_lFP"
        };
        X.add("game-ui/common/input-events/debug/input-stack-debug-display.module.scss", {
            get classes() {
                return mT
            },
            set classes(e) {
                Object.assign(mT, e)
            }
        });
        const hT = mT;
        var gT = ({
            actions: e
        }) => (0, z.jsx)("div", {
            className: hT.inputStackDebugDisplay,
            children: e
        });
        X.add("game-ui/common/input-events/debug/input-stack-debug-display.tsx", {
            get InputStackDebugDisplay() {
                return gT
            },
            set InputStackDebugDisplay(e) {
                gT = e
            }
        });
        const pT = "input";
        var fT = $r(pT, "actionNames"),
            xT = Zr(pT, "onActionPerformed"),
            vT = Zr(pT, "onActionReleased"),
            _T = Zr(pT, "onActionsRefreshed");
        const bT = new Map;

        function TT(e, t, n) {
            (n || bT.get(e) !== t) && (tl(pT, "setActionPriority", e, t), bT.set(e, t))
        }
        X.add("game-ui/common/input-events/input-bindings.ts", {
            get inputActionNames() {
                return inputActionNames
            },
            set inputActionNames(e) {
                inputActionNames = e
            },
            get onInputActionPerformed() {
                return onInputActionPerformed
            },
            set onInputActionPerformed(e) {
                onInputActionPerformed = e
            },
            get onInputActionReleased() {
                return onInputActionReleased
            },
            set onInputActionReleased(e) {
                onInputActionReleased = e
            },
            get onInputActionsRefreshed() {
                return onInputActionsRefreshed
            },
            set onInputActionsRefreshed(e) {
                onInputActionsRefreshed = e
            },
            get setInputActionPriority() {
                return TT
            },
            set setInputActionPriority(e) {
                TT = e
            }
        });
        class ET {
            _items = [];
            contains(e) {
                return -1 !== this.indexOf(e)
            }
            indexOf(e) {
                return this._items.findIndex((t => t.action === e))
            }
            push(e, t) {
                this._items = [...this._items, new IT(e, t)]
            }
            removeWhere(e) {
                this._items = this._items.filter((t => !e(t.action)))
            }
            clear() {
                this._items = []
            }
            dispatchInputEvent(e, t) {
                for (let n = this._items.length - 1; n >= 0; n--) {
                    const s = this._items[n];
                    if (s.action === e) {
                        if (!1 !== s.callback(t)) return !0
                    }
                }
                return !1
            }
            debugPrint() {
                console.log(`Input Stack:\n${this._items.map((e=>e.action)).join("\n")}`)
            }
        }
        class IT {
            constructor(e, t) {
                this.action = e, this.callback = t
            }
        }
        X.add("game-ui/common/input-events/input-stack.tsx", {});
        var yT = ({
            children: e
        }) => {
            const t = (0, Y.useMemo)((() => new ET), []),
                n = sl(fT),
                s = (0, Y.useRef)(n);
            s.current = n;
            const [i, a] = (0, Y.useState)([]), o = (0, Y.useCallback)((e => {
                const n = s.current;
                for (let s = 0; s < n.length; s++) TT(n[s], t.indexOf(n[s]), e)
            }), [t]);
            (0, Y.useEffect)((() => {
                o(!1)
            }), [n, o]);
            const r = (0, Y.useMemo)((() => new Lg(t, (() => o(!1)))), [t, o]);
            return (0, Y.useEffect)((() => {
                const e = xT.subscribe((e => {
                    t.dispatchInputEvent(e.action, e.value)
                }));
                return () => e.dispose()
            }), [t]), (0, Y.useEffect)((() => {
                const e = vT.subscribe((e => {
                    t.dispatchInputEvent(e.action, e.value)
                }));
                return () => e.dispose()
            }), [t]), (0, Y.useEffect)((() => {
                const e = _T.subscribe((() => {
                    o(!0)
                }));
                return () => e.dispose()
            }), [o]), (0, z.jsx)(wg.Provider, {
                value: r,
                children: (0, z.jsxs)(Ng.Provider, {
                    value: r,
                    children: [e, false]
                })
            })
        };

        function jT(e, t = !0) {
            (0, Y.useEffect)((() => {
                if (t) {
                    let t = 0;
                    const n = () => {
                        e(), t = window.requestAnimationFrame(n)
                    };
                    return t = window.requestAnimationFrame(n), () => window.cancelAnimationFrame(t)
                }
            }), [e, t])
        }
        X.add("game-ui/common/input-events/providers/event-input-provider.tsx", {
            get EventInputProvider() {
                return yT
            },
            set EventInputProvider(e) {
                yT = e
            }
        }), X.add("game-ui/common/utils/use-loop.ts", {
            get useLoop() {
                return jT
            },
            set useLoop(e) {
                jT = e
            }
        });
        var ST = ({
            children: e
        }) => {
            const t = Dm(),
                n = sl(ym),
                s = (0, Y.useRef)(!1);
            return jT((0, Y.useCallback)((() => {
                const e = document.elementFromPoint(n.x, n.y) !== document.body;
                e !== s.current && (Rm(e), s.current = e)
            }), [n.x, n.y]), t), (0, z.jsx)(z.Fragment, {
                children: e
            })
        };
        X.add("game-ui/common/input-events/providers/gamepad-pointer-event-provider.tsx", {
            get GamepadPointerEventProvider() {
                return ST
            },
            set GamepadPointerEventProvider(e) {
                ST = e
            }
        });
        var CT;
        ! function (e) {
            e[e.buttonSouth = 0] = "buttonSouth", e[e.buttonEast = 1] = "buttonEast", e[e.buttonWest = 2] = "buttonWest", e[e.buttonNorth = 3] = "buttonNorth", e[e.leftShoulder = 4] = "leftShoulder", e[e.rightShoulder = 5] = "rightShoulder", e[e.leftTrigger = 6] = "leftTrigger", e[e.rightTrigger = 7] = "rightTrigger", e[e.select = 8] = "select", e[e.start = 9] = "start", e[e.leftStickPress = 10] = "leftStickPress", e[e.rightStickPress = 11] = "rightStickPress", e[e.up = 12] = "up", e[e.down = 13] = "down", e[e.left = 14] = "left", e[e.right = 15] = "right"
        }(CT || (CT = {}));
        var NT = ({
            children: e
        }) => {
            const t = (0, Y.useMemo)((() => new ET), []);
            (0, Y.useEffect)((() => {
                const e = LT(CT.buttonSouth, !1),
                    n = LT(CT.buttonEast, !1),
                    s = LT(CT.buttonNorth, !1),
                    i = LT(CT.leftShoulder, !1),
                    a = LT(CT.rightShoulder, !1),
                    o = LT(CT.select, !1),
                    r = LT(CT.start, !1),
                    l = LT(CT.up, !0),
                    c = LT(CT.down, !0),
                    u = LT(CT.left, !0),
                    d = LT(CT.right, !0);
                let m;
                const h = g => {
                        try {
                            1 === e(g) && wT(t, [{
                                action: "Select",
                                value: null
                            }, {
                                action: "Save Game",
                                value: null
                            }]), 1 === n(g) && t.dispatchInputEvent("Back", null);
                            const m = s(g);
                            1 === m ? t.dispatchInputEvent("Debug Multiplier", 1) : -1 === m && t.dispatchInputEvent("Debug Multiplier", 0), 1 === i(g) && wT(t, [{
                                action: "Switch Tab",
                                value: -1
                            }, {
                                action: "Switch Ordering",
                                value: -1
                            }]), 1 === a(g) && wT(t, [{
                                action: "Switch Tab",
                                value: 1
                            }, {
                                action: "Switch Ordering",
                                value: 1
                            }]), 1 === o(g) && t.dispatchInputEvent("Debug UI", null), 1 === r(g) && wT(t, [{
                                action: "Pause Menu",
                                value: null
                            }, {
                                action: "Start Game",
                                value: null
                            }, {
                                action: "Load Game",
                                value: null
                            }]), 1 === l(g) && t.dispatchInputEvent("Move Vertical", 1), 1 === c(g) && t.dispatchInputEvent("Move Vertical", -1), 1 === u(g) && wT(t, [{
                                action: "Move Horizontal",
                                value: -1
                            }, {
                                action: "Debug Change Field",
                                value: -1
                            }, {
                                action: "Change Slider Value",
                                value: -1
                            }]), 1 === d(g) && wT(t, [{
                                action: "Move Horizontal",
                                value: 1
                            }, {
                                action: "Debug Change Field",
                                value: 1
                            }, {
                                action: "Change Slider Value",
                                value: 1
                            }])
                        } catch (e) {
                            console.error(e)
                        }
                        m = window.requestAnimationFrame(h)
                    },
                    g = e => {
                        27 === e.keyCode ? wT(t, [{
                            action: "Back",
                            value: null
                        }, {
                            action: "Pause Menu",
                            value: null
                        }]) : 9 === e.keyCode ? t.dispatchInputEvent("Debug UI", null) : 16 === e.keyCode ? t.dispatchInputEvent("Debug Multiplier", 1) : 32 === e.keyCode ? wT(t, [{
                            action: "Pause Simulation",
                            value: null
                        }, {
                            action: "Resume Simulation",
                            value: null
                        }]) : 66 === e.keyCode && t.dispatchInputEvent("Bulldozer", null)
                    },
                    p = e => {
                        16 === e.keyCode && t.dispatchInputEvent("Debug Multiplier", 0)
                    };
                return m = window.requestAnimationFrame(h), window.addEventListener("keydown", g), window.addEventListener("keyup", p), () => {
                    window.cancelAnimationFrame(m), window.removeEventListener("keydown", g), window.removeEventListener("keyup", p)
                }
            }), [t]);
            const [n, s] = (0, Y.useState)([]), i = (0, Y.useCallback)((() => {
                s(t._items.map((e => e.action)))
            }), [t]), a = (0, Y.useMemo)((() => new Lg(t, i)), [t, i]);
            return (0, z.jsx)(wg.Provider, {
                value: a,
                children: (0, z.jsxs)(Ng.Provider, {
                    value: a,
                    children: [e, (0, z.jsx)(gT, {
                        actions: n
                    })]
                })
            })
        };

        function wT(e, t) {
            let n = -1,
                s = Number.MAX_SAFE_INTEGER;
            for (let i = 0; i < t.length; i++) {
                const a = e.indexOf(t[i].action); - 1 !== a && a < s && (n = i, s = a)
            }
            if (-1 !== n) {
                const s = t[n];
                return e.dispatchInputEvent(s.action, s.value)
            }
            return !1
        }
        const OT = 500,
            PT = 100;

        function LT(e, t) {
            let n = !1,
                s = 0;
            return i => {
                const a = navigator.getGamepads();
                if (a.length > 0 && null != a[0] && a[0].buttons.length > e) {
                    if (a[0].buttons[e].pressed) {
                        if (!n) return n = !0, s = i + OT, 1;
                        if (t) {
                            const e = i - s;
                            if (e > 0) return e < OT ? s += PT : s = i + PT, 1
                        }
                    } else if (n) return n = !1, -1
                }
                return 0
            }
        }

        function AT(e) {
            for (const t of Object.values(e)) {
                (new Image).src = t.replaceAll('"', "")
            }
            return e
        }

        function MT(e) {
            const t = vf(e, 1);
            return (0, Y.useMemo)((() => AT(t)), [t])
        }
        X.add("game-ui/common/input-events/providers/native-input-provider.tsx", {
            get NativeInputProvider() {
                return NT
            },
            set NativeInputProvider(e) {
                NT = e
            }
        }), X.add("game-ui/common/input-events/index.ts", {}), X.add("game-ui/common/image/preload.ts", {
            get preloadImages() {
                return AT
            },
            set preloadImages(e) {
                AT = e
            },
            get usePreloadedImages() {
                return MT
            },
            set usePreloadedImages(e) {
                MT = e
            }
        });
        let RT = {
            closeIcon: '"Media/Glyphs/Close.svg"',
            toggleIcon: '"Media/Glyphs/ThickStrokeArrowRight.svg"',
            toggleIconExpanded: '"Media/Glyphs/ThickStrokeArrowDown.svg"',
            panel: "panel_YqS",
            header: "header_Bpo child-opacity-transition_nkS",
            content: "content_AD7 child-opacity-transition_nkS",
            footer: "footer_pD5 child-opacity-transition_nkS",
            "title-bar": "title-bar_PF4",
            titleBar: "title-bar_PF4",
            title: "title_zQN",
            icon: "icon_OVK",
            "icon-space": "icon-space_h_f",
            iconSpace: "icon-space_h_f",
            "close-button": "close-button_wKK",
            closeButton: "close-button_wKK",
            toggle: "toggle_Q44",
            "close-hint": "close-hint_IPP",
            closeHint: "close-hint_IPP"
        };
        X.add("game-ui/common/panel/panel.module.scss", {
            get classes() {
                return RT
            },
            set classes(e) {
                Object.assign(RT, e)
            }
        });
        const kT = RT;
        AT([kT.closeIcon, kT.toggleIcon, kT.toggleIconExpanded]);
        var DT = Y.createContext({
                theme: kT
            }),
            FT = Y.createContext({
                expanded: !0,
                toggleExpanded: () => {},
                theme: kT
            });

        function UT(e) {
            return (0, Y.useMemo)((() => ({
                ...kT,
                ...e
            })), [e])
        }
        X.add("game-ui/common/panel/panel-context.ts", {
            get PanelContext() {
                return DT
            },
            set PanelContext(e) {
                DT = e
            },
            get CollapsiblePanelContext() {
                return FT
            },
            set CollapsiblePanelContext(e) {
                FT = e
            }
        }), X.add("game-ui/common/panel/panel-theme.ts", {
            get usePanelTheme() {
                return UT
            },
            set usePanelTheme(e) {
                UT = e
            }
        });
        let BT = {
            header: "header_H_U header_Bpo child-opacity-transition_nkS",
            content: "content_XD5 content_AD7 child-opacity-transition_nkS",
            footer: "footer_Pa9 footer_pD5 child-opacity-transition_nkS",
            title: "title_SVH title_zQN"
        };
        X.add("game-ui/common/panel/themes/default.module.scss", {
            get classes() {
                return BT
            },
            set classes(e) {
                Object.assign(BT, e)
            }
        });
        const GT = BT;
        let VT = {
            enter: "enter__zh enter_kO6",
            "enter-active": "enter-active_YAb enter-active_lrI",
            enterActive: "enter-active_YAb enter-active_lrI",
            exit: "exit_KiP exit_Von",
            "exit-active": "exit-active_g0a exit-active_jtN",
            exitActive: "exit-active_g0a exit-active_jtN"
        };
        X.add("game-ui/common/panel/themes/panel-transition.module.scss", {
            get classes() {
                return VT
            },
            set classes(e) {
                Object.assign(VT, e)
            }
        });
        const HT = VT,
            KT = new Eg("PanelHeader"),
            WT = new Eg("PanelContent"),
            zT = new Eg("PanelFooter");
        var YT = (0, Y.forwardRef)((function ({
            focusKey: e,
            header: t,
            footer: n,
            theme: s = GT,
            transition: i = HT,
            transitionSounds: a,
            className: o,
            contentClassName: r,
            children: l,
            onClose: c,
            allowFocusExit: u,
            showCloseHint: d,
            backActionOverride: m,
            allowLooping: h,
            ...g
        }, p) {
            dp(a);
            const f = UT(s),
                x = Dm(),
                v = Y.Children.count(t) > 0,
                _ = Y.Children.count(l) > 0,
                b = Y.Children.count(n) > 0,
                T = (0, Y.useMemo)((() => ({
                    theme: f,
                    onClose: c
                })), [f, c]),
                E = (0, z.jsx)(Fg, {
                    onAction: c,
                    action: m,
                    children: (0, z.jsx)(DT.Provider, {
                        value: T,
                        children: (0, z.jsx)(mh, {
                            styles: i,
                            children: (0, z.jsxs)(Ip, {
                                ref: p,
                                focusKey: e,
                                className: Zu()(f.panel, o),
                                ...g,
                                children: [(0, z.jsxs)(tp, {
                                    initialFocused: WT,
                                    allowLooping: h,
                                    direction: Rg.Vertical,
                                    children: [v && (0, z.jsx)(ip, {
                                        focusKey: KT,
                                        children: (0, z.jsx)("div", {
                                            className: f.header,
                                            children: t
                                        })
                                    }), _ && (0, z.jsx)(ip, {
                                        focusKey: WT,
                                        children: (0, z.jsx)("div", {
                                            className: Zu()(f.content, r),
                                            children: l
                                        })
                                    }), b && (0, z.jsx)(ip, {
                                        focusKey: zT,
                                        children: (0, z.jsx)("div", {
                                            className: f.footer,
                                            children: n
                                        })
                                    })]
                                }), x && d && (0, z.jsx)($T, {
                                    theme: f
                                })]
                            })
                        })
                    })
                });
            return u ? E : (0, z.jsx)(yp, {
                children: E
            })
        }));
        const $T = ({
            theme: e
        }) => {
            const t = sl(wm),
                n = wh((0, Y.useContext)(Ju)),
                s = (0, Y.useMemo)((() => t.find((e => "Close" === e.name)) || t.find((e => "Back" === e.name))), [t]);
            return (0, z.jsx)(Pf, {
                action: s?.name,
                showLabel: !0,
                active: !!s?.show && n,
                className: e.closeHint
            })
        };
        X.add("game-ui/common/panel/panel.tsx", {
            get Panel() {
                return YT
            },
            set Panel(e) {
                YT = e
            }
        });
        let qT = {
            header: "header_jAe header_Bpo child-opacity-transition_nkS",
            content: "content_VBF content_AD7 child-opacity-transition_nkS",
            footer: "footer_CZr footer_pD5 child-opacity-transition_nkS",
            title: "title_ctd title_zQN"
        };
        X.add("game-ui/common/panel/themes/dark-opaque.module.scss", {
            get classes() {
                return qT
            },
            set classes(e) {
                Object.assign(qT, e)
            }
        });
        const XT = qT;
        var QT = ({
            icon: e,
            theme: t,
            className: n,
            children: s,
            onCloseOverride: i,
            ...a
        }) => {
            const o = (0, Y.useContext)(DT),
                r = Dm(),
                l = i ?? o.onClose,
                c = !r && null != l,
                u = t ?? o.theme;
            return (0, z.jsxs)("div", {
                ...a,
                className: Zu()(u.titleBar, n),
                children: [null != e ? (0, z.jsx)("img", {
                    src: e,
                    className: u.icon
                }) : c && (0, z.jsx)("div", {
                    className: u.iconSpace
                }), (0, z.jsx)("div", {
                    className: u.title,
                    children: s
                }), c ? (0, z.jsx)(sf, {
                    tinted: !0,
                    focusKey: Ig,
                    src: u.closeIcon,
                    theme: of ,
                    className: u.closeButton,
                    onSelect: l,
                    onMouseDown: e => {
                        e.preventDefault(), e.stopPropagation()
                    }
                }) : null != e && (0, z.jsx)("div", {
                    className: u.iconSpace
                })]
            })
        };
        X.add("game-ui/common/panel/panel-title-bar.tsx", {
            get PanelTitleBar() {
                return QT
            },
            set PanelTitleBar(e) {
                QT = e
            }
        });
        let ZT = {
            dialog: "dialog_E8_",
            wide: "wide_XFu",
            row: "row_L6K",
            "pdx-title": "pdx-title_qXw",
            pdxTitle: "pdx-title_qXw",
            "pdx-button-row": "pdx-button-row_Dor",
            pdxButtonRow: "pdx-button-row_Dor",
            message: "message_SFv row_L6K",
            "error-message": "error-message_r4_",
            errorMessage: "error-message_r4_",
            paragraphs: "paragraphs_MnN paragraphs_nbD",
            buttons: "buttons_lZi row_L6K",
            button: "button_gJo",
            footer: "footer_Q7P row_L6K",
            "footer-label": "footer-label_AHF",
            footerLabel: "footer-label_AHF",
            "buttons-vertical": "buttons-vertical_Zha row_L6K",
            buttonsVertical: "buttons-vertical_Zha row_L6K",
            "button-ok": "button-ok_IS9 button_gJo",
            buttonOk: "button-ok_IS9 button_gJo",
            "error-dialog": "error-dialog_iaV",
            errorDialog: "error-dialog_iaV",
            "icon-layout": "icon-layout_cZT row_L6K",
            iconLayout: "icon-layout_cZT row_L6K",
            icon: "icon_JQd",
            "main-column": "main-column_Jzk",
            mainColumn: "main-column_Jzk",
            "error-details": "error-details_RaN row_L6K",
            errorDetails: "error-details_RaN row_L6K",
            content: "content_Aju",
            "copy-button": "copy-button_V8I",
            copyButton: "copy-button_V8I",
            "scroll-hint": "scroll-hint_qfE",
            scrollHint: "scroll-hint_qfE",
            "scroll-hint-label": "scroll-hint-label_ZAM",
            scrollHintLabel: "scroll-hint-label_ZAM",
            hint: "hint_oLL"
        };
        X.add("game-ui/common/panel/dialog/dialog.module.scss", {
            get classes() {
                return ZT
            },
            set classes(e) {
                Object.assign(ZT, e)
            }
        });
        const JT = ZT;
        var eE = ({
            wide: e,
            title: t,
            content: n,
            buttons: s,
            theme: i = XT,
            zIndex: a,
            onClose: o,
            initialFocus: r,
            children: l
        }) => ((0, Y.useEffect)((() => {
            if (void 0 !== a) return document.body.style.setProperty("--panelBackdropIndex", `${a}`), () => {
                document.body.style.removeProperty("--panelBackdropIndex")
            }
        }), [a]), (0, z.jsx)(oT, {
            children: (0, z.jsxs)(YT, {
                theme: i,
                header: t && (0, z.jsx)(QT, {
                    children: t
                }),
                className: Zu()(JT.dialog, e && JT.wide),
                onClose: o,
                children: [(0, z.jsx)("div", {
                    className: JT.message,
                    children: l
                }), (0, z.jsx)(Dg, {
                    onAction: o,
                    children: (0, z.jsxs)(tp, {
                        initialFocused: r,
                        children: [n, s]
                    })
                })]
            })
        }));
        const tE = new Eg("CHILDREN_KEY"),
            nE = new Eg("DIALOG_KEY");
        var sE = (0, Y.createContext)({
                showDialog: () => {},
                closeAll: () => {}
            }),
            iE = (0, Y.createContext)({
                onClose: () => {}
            }),
            aE = ({
                children: e
            }) => {
                const [t, n] = (0, Y.useState)([]), s = (0, Y.useMemo)((() => ({
                    showDialog: e => n((t => [...t, e])),
                    closeAll: () => n([])
                })), []), i = (0, Y.useMemo)((() => ({
                    onClose: () => n((e => e.slice(0, -1)))
                })), []);
                return (0, z.jsx)(sE.Provider, {
                    value: s,
                    children: (0, z.jsxs)(ap, {
                        focused: t.length > 0 ? nE : tE,
                        children: [(0, z.jsx)(ip, {
                            focusKey: tE,
                            children: e
                        }), (0, z.jsx)(ip, {
                            focusKey: nE,
                            children: (0, z.jsx)(iE.Provider, {
                                value: i,
                                children: (0, z.jsx)(ud, {
                                    children: t.length > 0 && (0, z.jsx)(Y.Fragment, {
                                        children: t[t.length - 1]
                                    }, `${t.length}`)
                                })
                            })
                        })]
                    })
                })
            };
        X.add("game-ui/common/panel/dialog/dialog.tsx", {
            get Dialog() {
                return eE
            },
            set Dialog(e) {
                eE = e
            },
            get DialogStack() {
                return sE
            },
            set DialogStack(e) {
                sE = e
            },
            get DialogContext() {
                return iE
            },
            set DialogContext(e) {
                iE = e
            },
            get DialogRenderer() {
                return aE
            },
            set DialogRenderer(e) {
                aE = e
            }
        });
        const oE = "app";
        var rE, lE, cE, uE;
        ! function (e) {
            e[e.Off = 0] = "Off", e[e.Simple = 1] = "Simple", e[e.Advanced = 2] = "Advanced", e[e.Precise = 3] = "Precise"
        }(rE || (rE = {})),
        function (e) {
            e[e.Warning = 0] = "Warning", e[e.Error = 1] = "Error"
        }(lE || (lE = {})),
        function (e) {
            e[e.Quit = 1] = "Quit", e[e.SaveAndQuit = 2] = "SaveAndQuit", e[e.SaveAndContinue = 4] = "SaveAndContinue"
        }(cE || (cE = {})),
        function (e) {
            e[e.Unknown = 0] = "Unknown", e[e.Windows = 1] = "Windows", e[e.Linux = 2] = "Linux", e[e.OSX = 4] = "OSX", e[e.PS4 = 8] = "PS4", e[e.PS5 = 16] = "PS5", e[e.XBoxOne = 32] = "XBoxOne", e[e.XBoxSeriesX = 64] = "XBoxSeriesX", e[e.XBoxSeriesS = 128] = "XBoxSeriesS", e[e.XBoxSeries = 192] = "XBoxSeries", e[e.PC = 7] = "PC", e[e.Consoles = 248] = "Consoles", e[e.PS = 24] = "PS", e[e.XBox = 224] = "XBox"
        }(uE || (uE = {}));
        var dE = $r(oE, "ready"),
            mE = $r(oE, "activeUI"),
            hE = $r(oE, "bodyClassNames", ""),
            gE = $r(oE, "fpsMode"),
            pE = $r(oE, "frameStats"),
            fE = $r(oE, "activeLocale", "en-US"),
            xE = $r(oE, "currentError"),
            vE = $r(oE, "backgroundProcessMessage", null),
            _E = Zr(oE, "confirmationDialog"),
            bE = $r(oE, "platform"),
            TE = (e, t, n) => {
                const s = oc(n),
                    i = oc(t);
                return 0 == (e & sl(bE)) || Vr(i) ? s : i
            };

        function EE(e) {
            tl(oE, "confirmationDialogCallback", e)
        }

        function IE(e, t) {
            tl(oE, "dismissableConfirmationDialogCallback", e, t)
        }

        function yE() {
            tl(oE, "exitApplication")
        }

        function jE() {
            tl(oE, "saveBackupAndExitApplication")
        }

        function SE() {
            tl(oE, "saveBackup")
        }

        function CE(e) {
            tl(oE, "setClipboard", e)
        }

        function NE() {
            tl(oE, "dismissCurrentError")
        }
        var wE = $r(oE, "activeUIModsLocation");
        X.add("game-ui/common/data-binding/app-bindings.ts", {
            get FPSMode() {
                return rE
            },
            set FPSMode(e) {
                rE = e
            },
            get Severity() {
                return lE
            },
            set Severity(e) {
                lE = e
            },
            get Actions() {
                return cE
            },
            set Actions(e) {
                cE = e
            },
            get Platform() {
                return uE
            },
            set Platform(e) {
                uE = e
            },
            get ready() {
                return ready
            },
            set ready(e) {
                ready = e
            },
            get activeUI() {
                return activeUI
            },
            set activeUI(e) {
                activeUI = e
            },
            get bodyClassNames() {
                return bodyClassNames
            },
            set bodyClassNames(e) {
                bodyClassNames = e
            },
            get fpsMode() {
                return fpsMode
            },
            set fpsMode(e) {
                fpsMode = e
            },
            get frameStats() {
                return frameStats
            },
            set frameStats(e) {
                frameStats = e
            },
            get activeLocale() {
                return activeLocale
            },
            set activeLocale(e) {
                activeLocale = e
            },
            get currentError() {
                return currentError
            },
            set currentError(e) {
                currentError = e
            },
            get backgroundProcessMessage() {
                return backgroundProcessMessage
            },
            set backgroundProcessMessage(e) {
                backgroundProcessMessage = e
            },
            get confirmationDialog() {
                return confirmationDialog
            },
            set confirmationDialog(e) {
                confirmationDialog = e
            },
            get platform() {
                return platform
            },
            set platform(e) {
                platform = e
            },
            get usePlatformTranslation() {
                return TE
            },
            set usePlatformTranslation(e) {
                TE = e
            },
            get confirmationDialogCallback() {
                return EE
            },
            set confirmationDialogCallback(e) {
                EE = e
            },
            get dismissableConfirmationDialogCallback() {
                return IE
            },
            set dismissableConfirmationDialogCallback(e) {
                IE = e
            },
            get exitApplication() {
                return yE
            },
            set exitApplication(e) {
                yE = e
            },
            get saveBackupAndExitApplication() {
                return jE
            },
            set saveBackupAndExitApplication(e) {
                jE = e
            },
            get saveBackup() {
                return SE
            },
            set saveBackup(e) {
                SE = e
            },
            get setClipboard() {
                return CE
            },
            set setClipboard(e) {
                CE = e
            },
            get dismissCurrentError() {
                return NE
            },
            set dismissCurrentError(e) {
                NE = e
            },
            get activeUIModsLocation() {
                return activeUIModsLocation
            },
            set activeUIModsLocation(e) {
                activeUIModsLocation = e
            }
        });
        class OE {
            _callback = null;
            scrollTo(e, t) {
                null != this._callback && this._callback.scrollTo(e, t)
            }
            scrollBy(e, t) {
                null != this._callback && this._callback.scrollBy(e, t)
            }
            smoothScrollTo(e, t) {
                null != this._callback && this._callback.smoothScrollTo(e, t)
            }
            scrollIntoView(e) {
                null != this._callback && this._callback.scrollIntoView(e)
            }
            _attachCallback(e) {
                null == this._callback ? this._callback = e : console.warn("Scroll controller callback already attached!")
            }
            _detachCallback(e) {
                this._callback === e ? this._callback = null : console.warn("Scroll controller callback not attached!")
            }
        }

        function PE() {
            return (0, Y.useMemo)((() => new OE), [])
        }
        X.add("game-ui/common/scrolling/scroll-controller.ts", {}), X.add("game-ui/common/hooks/use-scroll-controller.tsx", {
            get useScrollController() {
                return PE
            },
            set useScrollController(e) {
                PE = e
            }
        });
        let LE = {
            button: "button_HeP",
            negative: "negative_ocn"
        };
        X.add("game-ui/common/input/button/themes/dialog-button.module.scss", {
            get classes() {
                return LE
            },
            set classes(e) {
                Object.assign(LE, e)
            }
        });
        const AE = LE;
        let ME = {
            button: "button_Ylt"
        };
        X.add("game-ui/common/input/button/themes/paradox-primary-button.module.scss", {
            get classes() {
                return ME
            },
            set classes(e) {
                Object.assign(ME, e)
            }
        });
        const RE = ME;
        let kE = {
            button: "button_Yp5"
        };
        X.add("game-ui/common/input/button/themes/paradox-secondary-button.module.scss", {
            get classes() {
                return kE
            },
            set classes(e) {
                Object.assign(kE, e)
            }
        });
        const DE = kE;
        var FE = ({
            controller: e,
            children: t
        }) => {
            const n = Hm(),
                s = (0, Y.useRef)(0),
                i = (0, Y.useMemo)((() => ({
                    "Scroll Vertical": e => {
                        s.current = 300 * -e
                    }
                })), []);
            return (0, Y.useEffect)((() => {
                let t = performance.now(),
                    i = 0;
                const a = o => {
                    if (0 !== s.current) {
                        const i = (o - t) / 1e3;
                        e.scrollBy(0, s.current * i * n)
                    }
                    t = o, i = window.requestAnimationFrame(a)
                };
                return i = window.requestAnimationFrame(a), () => window.cancelAnimationFrame(i)
            }), [e, n]), (0, z.jsx)(Ag, {
                actions: i,
                children: t
            })
        };
        X.add("game-ui/common/scrolling/scroll-action-consumer/scroll-action-consumer.tsx", {
            get ScrollActionConsumer() {
                return FE
            },
            set ScrollActionConsumer(e) {
                FE = e
            }
        });
        var UE = Y.forwardRef((function ({
            focusKey: e,
            debugName: t = "TextInput",
            type: n = "text",
            value: s = "",
            selectAllOnFocus: i = !0,
            placeholder: a = "",
            vkTitle: o = "",
            vkDescription: r = "",
            disabled: l,
            className: c,
            multiline: u,
            onFocus: d,
            onBlur: m,
            onKeyDown: h,
            onChange: g,
            onMouseUp: p,
            onSelect: f,
            onBack: x,
            ...v
        }, _) {
            const b = (0, Y.useRef)(null),
                T = gd(_, b),
                E = hp(jg(e ?? (l ? Ig : yg), t), b),
                I = wh(E),
                y = Dm(),
                j = sl(Mm),
                [S, C] = (0, Y.useState)(!1),
                N = (0, Y.useMemo)((() => S ? {
                    Back: () => {
                        null != b.current && document.activeElement === b.current && (b.current.blur(), x && x())
                    }
                } : {
                    Select: () => {
                        if (null != b.current) {
                            const e = b.current.getBoundingClientRect();
                            Am(e.x, e.y, e.width, e.height), Dp(b, "--selectAnimation", "--selectDuration"), b.current.focus(), f && f()
                        }
                    }
                }), [S, f, x]),
                w = (0, Y.useCallback)((e => {
                    O.current = !1, (!u && 13 === e.keyCode || 27 === e.keyCode) && e.currentTarget.blur(), e.stopPropagation(), h && h(e)
                }), [u, h]),
                O = (0, Y.useRef)(!1),
                P = (0, Y.useCallback)((e => {
                    O.current = !1, g && g(e)
                }), [g]),
                L = (0, Y.useCallback)((e => {
                    C(!0), O.current = !0, d && d(e), lp(rp.selectItem)
                }), [d]),
                A = (0, Y.useCallback)((() => lp(rp.hoverItem)), []),
                M = (0, Y.useCallback)((e => {
                    if (O.current) {
                        if (null != b.current && (console.log(`Start: ${b.current.selectionStart} End ${b.current.selectionEnd}`), b.current.selectionStart === b.current.selectionEnd)) {
                            const e = b.current.value.length;
                            b.current.setSelectionRange(0, e)
                        }
                        O.current = !1
                    }
                    p && p(e)
                }), [p]),
                R = (0, Y.useCallback)((e => {
                    C(!1), m && m(e)
                }), [m]);
            (0, Y.useEffect)((() => {
                y && !I && b.current && b.current.blur()
            }), [I, y]), (0, Y.useEffect)((() => {
                if (b.current) {
                    const e = b.current,
                        t = () => {
                            if (e) {
                                const t = e.value.length;
                                e.setSelectionRange(i ? 0 : t, t)
                            }
                        };
                    return e.addEventListener("focus", t), () => e.removeEventListener("focus", t)
                }
            }), [i]);
            const k = oc(a),
                D = !S && !s && k,
                F = oc(o),
                U = oc(r),
                B = void 0 !== u ? "textarea" : "input",
                {
                    displayName: G,
                    hidden: V,
                    tooltip: H,
                    tutorialTag: K,
                    __Type: W,
                    ...$
                } = v;
            return (0, z.jsx)(Cp, {
                disabled: !S || !y || !j,
                excludes: ["Save Game", "Change Value"],
                children: (0, z.jsx)(Ag, {
                    actions: N,
                    children: (0, z.jsx)(Lh, {
                        controller: E,
                        children: (0, z.jsx)(B, {
                            ...$,
                            ref: T,
                            type: "password" === n && D ? "text" : n,
                            disabled: l,
                            className: Zu()(c, I && y && "focused", D && "placeholder"),
                            "vk-title": F,
                            "vk-description": U,
                            "vk-type": n,
                            rows: "number" == typeof u ? u : 5,
                            onFocus: L,
                            onBlur: R,
                            onKeyDown: w,
                            onMouseUp: M,
                            onMouseEnter: A,
                            value: D ? k : s,
                            onChange: P
                        })
                    })
                })
            })
        }));
        X.add("game-ui/common/input/text/text-input.tsx", {
            get TextInput() {
                return UE
            },
            set TextInput(e) {
                UE = e
            }
        });
        const BE = "paradox";
        var GE = $r(BE, "requestActive"),
            VE = $r(BE, "loggedIn"),
            HE = $r(BE, "accountLinkState"),
            KE = $r(BE, "accountLinkProvider"),
            WE = $r(BE, "userName"),
            zE = $r(BE, "email"),
            YE = $r(BE, "avatar"),
            $E = $r(BE, "hasInternetConnection"),
            qE = $r(BE, "pdxSDKEnabled");

        function XE() {
            tl(BE, "linkAccount")
        }

        function QE() {
            tl(BE, "unlinkAccount")
        }

        function ZE() {
            tl(BE, "logout")
        }
        var JE, eI = $r(BE, "activeDialogs");

        function tI() {
            tl(BE, "closeActiveDialog")
        }

        function nI(e) {
            tl(BE, "onOptionSelected", e)
        }

        function sI() {
            tl(BE, "showLoginForm")
        }

        function iI(e) {
            tl(BE, "submitPasswordReset", e)
        }

        function aI(e) {
            tl(BE, "submitLoginForm", Vu(e, "Game.UI.Menu.ParadoxBindings+LoginFormData"))
        }! function (e) {
            e.Login = "Game.UI.Menu.ParadoxBindings+LoginDialog", e.Registration = "Game.UI.Menu.ParadoxBindings+RegistrationDialog", e.AccountLink = "Game.UI.Menu.ParadoxBindings+AccountLinkDialog", e.AccountLinkOverwrite = "Game.UI.Menu.ParadoxBindings+AccountLinkOverwriteDialog", e.LegalDocument = "Game.UI.Menu.ParadoxBindings+LegalDocumentDialog", e.Confirmation = "Game.UI.Menu.ParadoxBindings+ConfirmationDialog", e.Error = "Game.UI.Menu.ParadoxBindings+ErrorDialog", e.MultiOption = "Game.UI.Menu.ParadoxBindings+MultiOptionDialog"
        }(JE || (JE = {}));
        var oI, rI = $r(BE, "countryCodes");

        function lI() {
            tl(BE, "showRegistrationForm")
        }

        function cI(e) {
            tl(BE, "showLink", e)
        }

        function uI(e) {
            tl(BE, "submitRegistrationForm", Vu(e, "Game.UI.Menu.ParadoxBindings+RegistrationFormData"))
        }

        function dI() {
            tl(BE, "confirmAccountLink")
        }

        function mI() {
            tl(BE, "confirmAccountLinkOverwrite")
        }

        function hI() {
            tl(BE, "markLegalDocumentAsViewed")
        }

        function gI() {
            tl(BE, "showTermsOfUse")
        }

        function pI() {
            tl(BE, "showPrivacyPolicy")
        }! function (e) {
            e[e.hidden = 0] = "hidden", e[e.unlinked = 1] = "unlinked", e[e.linked = 2] = "linked"
        }(oI || (oI = {})), X.add("game-ui/menu/data-binding/paradox-bindings.ts", {
            get requestActive() {
                return requestActive
            },
            set requestActive(e) {
                requestActive = e
            },
            get loggedIn() {
                return loggedIn
            },
            set loggedIn(e) {
                loggedIn = e
            },
            get accountLinkState() {
                return accountLinkState
            },
            set accountLinkState(e) {
                accountLinkState = e
            },
            get accountLinkProvider() {
                return accountLinkProvider
            },
            set accountLinkProvider(e) {
                accountLinkProvider = e
            },
            get userName() {
                return userName
            },
            set userName(e) {
                userName = e
            },
            get email() {
                return email
            },
            set email(e) {
                email = e
            },
            get avatar() {
                return avatar
            },
            set avatar(e) {
                avatar = e
            },
            get hasInternetConnection() {
                return hasInternetConnection
            },
            set hasInternetConnection(e) {
                hasInternetConnection = e
            },
            get pdxSDKEnabled() {
                return pdxSDKEnabled
            },
            set pdxSDKEnabled(e) {
                pdxSDKEnabled = e
            },
            get linkAccount() {
                return XE
            },
            set linkAccount(e) {
                XE = e
            },
            get unlinkAccount() {
                return QE
            },
            set unlinkAccount(e) {
                QE = e
            },
            get logout() {
                return ZE
            },
            set logout(e) {
                ZE = e
            },
            get activeDialogs() {
                return activeDialogs
            },
            set activeDialogs(e) {
                activeDialogs = e
            },
            get closeActiveDialog() {
                return tI
            },
            set closeActiveDialog(e) {
                tI = e
            },
            get onOptionSelected() {
                return nI
            },
            set onOptionSelected(e) {
                nI = e
            },
            get ParadoxDialogType() {
                return JE
            },
            set ParadoxDialogType(e) {
                JE = e
            },
            get showLoginForm() {
                return sI
            },
            set showLoginForm(e) {
                sI = e
            },
            get submitPasswordReset() {
                return iI
            },
            set submitPasswordReset(e) {
                iI = e
            },
            get submitLoginForm() {
                return aI
            },
            set submitLoginForm(e) {
                aI = e
            },
            get countryCodes() {
                return countryCodes
            },
            set countryCodes(e) {
                countryCodes = e
            },
            get showRegistrationForm() {
                return lI
            },
            set showRegistrationForm(e) {
                lI = e
            },
            get showLink() {
                return cI
            },
            set showLink(e) {
                cI = e
            },
            get submitRegistrationForm() {
                return uI
            },
            set submitRegistrationForm(e) {
                uI = e
            },
            get confirmAccountLink() {
                return dI
            },
            set confirmAccountLink(e) {
                dI = e
            },
            get confirmAccountLinkOverwrite() {
                return mI
            },
            set confirmAccountLinkOverwrite(e) {
                mI = e
            },
            get markLegalDocumentAsViewed() {
                return hI
            },
            set markLegalDocumentAsViewed(e) {
                hI = e
            },
            get ShowTermsOfUse() {
                return gI
            },
            set ShowTermsOfUse(e) {
                gI = e
            },
            get ShowPrivacyPolicy() {
                return pI
            },
            set ShowPrivacyPolicy(e) {
                pI = e
            },
            get AccountLinkState() {
                return oI
            },
            set AccountLinkState(e) {
                oI = e
            }
        });
        let fI = {
            "paradox-dialog": "paradox-dialog_wt7",
            paradoxDialog: "paradox-dialog_wt7",
            wide: "wide_h40",
            header: "header_G7_",
            "close-button": "close-button_FeS",
            closeButton: "close-button_FeS",
            content: "content_hZD",
            "form-container": "form-container_Lw7",
            formContainer: "form-container_Lw7",
            "icon-row": "icon-row_rFk",
            iconRow: "icon-row_rFk",
            icon: "icon_Bz_",
            title: "title_dnP",
            "button-row": "button-row_tSi",
            buttonRow: "button-row_tSi",
            "button-column": "button-column_o63",
            buttonColumn: "button-column_o63",
            "flex-row": "flex-row_a_W",
            flexRow: "flex-row_a_W",
            "form-row": "form-row_LB0",
            formRow: "form-row_LB0",
            "form-row-label": "form-row-label_xO0",
            formRowLabel: "form-row-label_xO0",
            "light-field": "light-field_CGM",
            lightField: "light-field_CGM",
            "dark-field": "dark-field_bE7",
            darkField: "dark-field_bE7",
            "form-field": "form-field_D62",
            formField: "form-field_D62",
            invalid: "invalid_LPr",
            placeholder: "placeholder_U9A",
            "children-focused": "children-focused_aa6",
            childrenFocused: "children-focused_aa6",
            "form-field-children": "form-field-children_xfw",
            formFieldChildren: "form-field-children_xfw",
            "form-field-input": "form-field-input_Qxc",
            formFieldInput: "form-field-input_Qxc",
            "forgot-password-link": "forgot-password-link_Wch",
            forgotPasswordLink: "forgot-password-link_Wch",
            "day-field": "day-field_fHK",
            dayField: "day-field_fHK",
            "month-field": "month-field_Um1",
            monthField: "month-field_Um1",
            "year-field": "year-field_l7n",
            yearField: "year-field_l7n",
            "labeled-toggle": "labeled-toggle_Hn2",
            labeledToggle: "labeled-toggle_Hn2",
            toggle: "toggle_Zwc",
            "primary-button": "primary-button_klN",
            primaryButton: "primary-button_klN",
            focused: "focused_vZY",
            "registration-hint": "registration-hint_iqm",
            registrationHint: "registration-hint_iqm",
            label: "label_Ujn",
            terms: "terms_p0E",
            divider: "divider_ms0",
            "document-scrollable": "document-scrollable_EHj",
            documentScrollable: "document-scrollable_EHj",
            "document-text": "document-text_T4G",
            documentText: "document-text_T4G",
            "scroll-hint": "scroll-hint_vKd",
            scrollHint: "scroll-hint_vKd",
            "scroll-hint-label": "scroll-hint-label_qUP",
            scrollHintLabel: "scroll-hint-label_qUP",
            hint: "hint_PBH",
            "dropdown-item-hint": "dropdown-item-hint_Q7U",
            dropdownItemHint: "dropdown-item-hint_Q7U",
            "checkbox-hint": "checkbox-hint_b3B",
            checkboxHint: "checkbox-hint_b3B",
            "dropdown-label": "dropdown-label_ONK",
            dropdownLabel: "dropdown-label_ONK"
        };
        X.add("game-ui/menu/components/paradox/dialogs/paradox-dialog.module.scss", {
            get classes() {
                return fI
            },
            set classes(e) {
                Object.assign(fI, e)
            }
        });
        const xI = fI;
        var vI = ({
                wide: e,
                onClose: t,
                children: n
            }) => {
                const s = Dm();
                return (0, z.jsx)(Dg, {
                    onAction: t,
                    children: (0, z.jsxs)("div", {
                        className: Zu()(xI.paradoxDialog, e && xI.wide),
                        children: [(0, z.jsx)("div", {
                            className: xI.header,
                            children: !s && t && (0, z.jsx)(sf, {
                                tinted: !0,
                                focusKey: Ig,
                                src: "Media/Glyphs/Close.svg",
                                theme: of ,
                                className: xI.closeButton,
                                onSelect: t
                            })
                        }), (0, z.jsx)("div", {
                            className: xI.content,
                            children: n
                        })]
                    })
                })
            },
            _I = ({
                icon: e,
                titleId: t,
                messageId: n,
                messageArgs: s,
                children: i
            }) => (0, z.jsx)(vI, {
                onClose: tI,
                children: (0, z.jsxs)(tp, {
                    children: [e && (0, z.jsx)("div", {
                        className: xI.iconRow,
                        children: (0, z.jsx)("img", {
                            src: e,
                            className: xI.icon
                        })
                    }), t && (0, z.jsx)("div", {
                        className: xI.title,
                        children: (0, z.jsx)(Tc, {
                            id: t
                        })
                    }), n && (0, z.jsx)("p", {
                        children: (0, z.jsx)(Tc, {
                            id: n,
                            args: s
                        })
                    }), i]
                })
            }),
            bI = ({
                type: e,
                value: t,
                placeholder: n,
                invalid: s,
                className: i,
                vkTitle: a,
                children: o,
                onChange: r
            }) => {
                const l = (0, Y.useCallback)((e => r(e.target.value)), [r]),
                    [c, u] = (0, Y.useState)(!1),
                    [d, m] = (0, Y.useState)(!1),
                    [h, g] = (0, Y.useState)(!1),
                    p = (0, Y.useCallback)((() => {
                        g(!1)
                    }), []),
                    f = (0, Y.useCallback)((() => {
                        g(!0)
                    }), []),
                    x = !d && c;
                return (0, z.jsx)(Ip, {
                    onFocusChange: u,
                    className: Zu()(xI.formField, s && xI.invalid, d && xI.childrenFocused, i),
                    children: (0, z.jsxs)(tp, {
                        children: [(0, z.jsx)(Pf, {
                            action: h ? "Back" : "Select",
                            active: x,
                            className: xI.hint
                        }), (0, z.jsx)(UE, {
                            type: e,
                            value: t,
                            placeholder: n,
                            vkTitle: a,
                            onChange: l,
                            onBlur: p,
                            onFocus: f,
                            className: xI.formFieldInput
                        }), (0, z.jsx)(Ep, {
                            onFocusChange: m,
                            className: xI.formFieldChildren,
                            children: o
                        })]
                    })
                })
            },
            TI = ({
                value: e,
                label: t,
                invalid: n,
                disabled: s,
                onChange: i
            }) => {
                const [a, o] = (0, Y.useState)(!1);
                return (0, z.jsxs)(Ip, {
                    className: xI.labeledToggle,
                    onFocusChange: o,
                    children: [(0, z.jsx)(Pf, {
                        action: "Select",
                        active: a,
                        className: xI.hint
                    }), (0, z.jsx)(ox, {
                        checked: e,
                        disabled: s,
                        className: Zu()(xI.toggle, n && xI.invalid),
                        onChange: i
                    }), (0, z.jsx)("div", {
                        className: xI.label,
                        children: t
                    })]
                })
            };
        X.add("game-ui/menu/components/paradox/dialogs/paradox-dialog.tsx", {
            get ParadoxDialog() {
                return vI
            },
            set ParadoxDialog(e) {
                vI = e
            },
            get MessageDialog() {
                return _I
            },
            set MessageDialog(e) {
                _I = e
            },
            get FormField() {
                return bI
            },
            set FormField(e) {
                bI = e
            },
            get LabeledToggle() {
                return TI
            },
            set LabeledToggle(e) {
                TI = e
            }
        });
        const EI = new Eg("CANCEL_KEY");
        var II = ({
            ...e
        }) => {
            const [t, n] = (0, Y.useState)(!1), s = (0, Y.useContext)(iE), i = (0, Y.useCallback)((n => {
                s.onClose(), e.dismissable ? IE(n, t) : EE(n)
            }), [s, t, e.dismissable]), a = ac(), o = (0, Y.useCallback)((() => {
                CE(pu(a, e.details).replaceAll("\\\\", "\\").replaceAll("**", ""))
            }), [a, e.details]), r = PE(), [l, c] = (0, Y.useState)(!1);
            return "Paradox" === e.skin ? (0, z.jsx)(oT, {
                children: (0, z.jsx)(vI, {
                    onClose: () => i(-1),
                    children: (0, z.jsxs)(tp, {
                        children: [e.title && (0, z.jsx)("div", {
                            className: JT.pdxTitle,
                            children: (0, z.jsx)(gu, {
                                value: e.title
                            })
                        }), (0, z.jsx)(zf, {
                            theme: JT,
                            children: (0, z.jsx)(gu, {
                                value: e.message
                            })
                        }), (0, z.jsx)("div", {
                            className: JT.pdxButtonRow,
                            children: (0, z.jsx)(yI, {
                                dismissed: t,
                                setDismissed: n,
                                callback: i,
                                ...e
                            })
                        })]
                    })
                })
            }) : (0, z.jsx)(FE, {
                controller: r,
                children: (0, z.jsx)(eE, {
                    title: e.title && (0, z.jsx)(gu, {
                        value: e.title
                    }),
                    buttons: (0, z.jsx)(yI, {
                        dismissed: t,
                        setDismissed: n,
                        callback: i,
                        ...e
                    }),
                    content: e.details && (0, z.jsx)("div", {
                        className: JT.iconLayout,
                        children: (0, z.jsx)("div", {
                            className: JT.mainColumn,
                            children: (0, z.jsxs)("div", {
                                className: JT.errorDetails,
                                children: [(0, z.jsx)(xf, {
                                    controller: r,
                                    className: JT.content,
                                    hintClassName: JT.scrollHint,
                                    labelClassName: JT.scrollHintLabel,
                                    children: (0, z.jsx)(zf, {
                                        children: (0, z.jsx)(gu, {
                                            value: e.details
                                        })
                                    })
                                }), e.copyButton && (0, z.jsx)(Ah, {
                                    onFocusChange: c,
                                    children: (0, z.jsx)(sf, {
                                        disableHint: !0,
                                        tinted: !0,
                                        src: "Media/Glyphs/Copy.svg",
                                        className: JT.copyButton,
                                        onSelect: o,
                                        children: (0, z.jsx)(Pf, {
                                            action: "Select",
                                            active: l,
                                            className: JT.hint
                                        })
                                    })
                                })]
                            })
                        })
                    }),
                    onClose: () => i(1),
                    wide: null !== e.details,
                    initialFocus: EI,
                    children: (0, z.jsx)(zf, {
                        theme: JT,
                        children: (0, z.jsx)(gu, {
                            value: e.message
                        })
                    })
                })
            })
        };
        const yI = ({
            dismissed: e,
            setDismissed: t,
            callback: n,
            ...s
        }) => (0, z.jsxs)(z.Fragment, {
            children: [(0, z.jsxs)("div", {
                className: JT.buttons,
                children: [(0, z.jsx)(Gp, {
                    theme: "Paradox" === s.skin ? RE : AE,
                    className: Zu()("Default" === s.skin && JT.button),
                    onSelect: () => n(0),
                    children: (0, z.jsx)(gu, {
                        value: s.confirmAction
                    })
                }), s.otherActions.map(((e, t) => (0, z.jsx)(Gp, {
                    theme: "Paradox" === s.skin ? RE : AE,
                    className: Zu()("Default" === s.skin && JT.button),
                    onSelect: () => n(t + 2),
                    children: (0, z.jsx)(gu, {
                        value: e
                    })
                }, t))), s.hasCancelAction && (0, z.jsx)(Gp, {
                    focusKey: EI,
                    theme: "Paradox" === s.skin ? DE : AE,
                    className: Zu()("Default" === s.skin && JT.button, "Default" === s.skin && AE.negative),
                    onSelect: () => n(1),
                    children: (0, z.jsx)(gu, {
                        value: s.cancelAction
                    })
                })]
            }), s.dismissable && (0, z.jsxs)("div", {
                className: JT.footer,
                children: [(0, z.jsx)(ox, {
                    checked: e,
                    onChange: t
                }), (0, z.jsx)("div", {
                    className: JT.footerLabel,
                    children: (0, z.jsx)(Pc.Common.DONT_SHOW_AGAIN, {})
                })]
            })]
        });
        var jI = ({
            title: e,
            message: t,
            confirm: n,
            cancel: s,
            onConfirm: i,
            onCancel: a,
            zIndex: o,
            dismissable: r = !1,
            cancellable: l = !0
        }) => {
            const c = (0, Y.useContext)(iE),
                [u, d] = (0, Y.useState)(!1),
                m = (0, Y.useCallback)((() => {
                    c.onClose(), a && a()
                }), [c, a]),
                h = (0, Y.useCallback)((() => {
                    c.onClose(), i(u)
                }), [c, u, i]);
            return (0, z.jsx)(Dg, {
                onAction: m,
                children: (0, z.jsx)(eE, {
                    title: e,
                    zIndex: o,
                    buttons: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsxs)("div", {
                            className: JT.buttons,
                            children: [!1 !== n && (0, z.jsx)(Gp, {
                                theme: AE,
                                className: JT.button,
                                onSelect: h,
                                children: n ?? (0, z.jsx)(Pc.Common.YES, {})
                            }), l && (0, z.jsx)(Gp, {
                                focusKey: EI,
                                theme: AE,
                                className: Zu()(JT.button, AE.negative),
                                onSelect: m,
                                children: s ?? (0, z.jsx)(Pc.Common.NO, {})
                            })]
                        }), r && (0, z.jsxs)("div", {
                            className: JT.footer,
                            children: [(0, z.jsx)(ox, {
                                checked: u,
                                onChange: d
                            }), (0, z.jsx)("div", {
                                className: JT.footerLabel,
                                children: (0, z.jsx)(Pc.Common.DONT_SHOW_AGAIN, {})
                            })]
                        })]
                    }),
                    onClose: m,
                    initialFocus: EI,
                    children: (0, z.jsx)(zf, {
                        theme: JT,
                        children: t
                    })
                })
            })
        };
        X.add("game-ui/common/panel/dialog/confirmation-dialog.tsx", {
            get GameTriggeredConfirmationDialog() {
                return II
            },
            set GameTriggeredConfirmationDialog(e) {
                II = e
            },
            get UITriggeredConfirmationDialog() {
                return jI
            },
            set UITriggeredConfirmationDialog(e) {
                jI = e
            }
        });
        let SI = {
            button: "button_ke4",
            icon: "icon_be5"
        };
        X.add("game-ui/common/input/button/floating-icon-button.module.scss", {
            get classes() {
                return SI
            },
            set classes(e) {
                Object.assign(SI, e)
            }
        });
        const CI = SI;
        var NI = ({
            theme: e,
            children: t,
            ...n
        }) => (0, z.jsx)(sf, {
            ...n,
            theme: e,
            children: (0, z.jsx)("div", {
                className: e.label,
                children: t
            })
        });
        X.add("game-ui/common/input/button/labeled-icon-button.tsx", {
            get LabeledIconButton() {
                return NI
            },
            set LabeledIconButton(e) {
                NI = e
            }
        });
        let wI = {
            button: "button_7tF"
        };
        X.add("game-ui/common/input/button/themes/flat-button.module.scss", {
            get classes() {
                return wI
            },
            set classes(e) {
                Object.assign(wI, e)
            }
        });
        const OI = wI;
        let PI = {
            button: "button_GME",
            hint: "hint_zER"
        };
        X.add("game-ui/common/input/button/themes/primary-button.module.scss", {
            get classes() {
                return PI
            },
            set classes(e) {
                Object.assign(PI, e)
            }
        });
        const LI = PI;
        let AI = {
            button: "button_uFa child-opacity-transition_nkS",
            icon: "icon_zVk",
            label: "label_NLv"
        };
        X.add("game-ui/menu/themes/menu-item.module.scss", {
            get classes() {
                return AI
            },
            set classes(e) {
                Object.assign(AI, e)
            }
        });
        const MI = AI,
            RI = {
                flat: OI,
                primary: LI,
                round: of ,
                menu: MI,
                default: Up,
                icon: nf,
                floating: CI
            };
        var kI = e => {
                const {
                    variant: t = "default"
                } = e;
                let n = RI[t];
                return e.src ? n.label ? (0, z.jsx)(NI, {
                    theme: n,
                    ...e,
                    src: e.src
                }) : ("default" === t && (n = RI.icon), (0, z.jsx)(sf, {
                    theme: n,
                    ...e,
                    src: e.src
                })) : (0, z.jsx)(Gp, {
                    theme: n,
                    ...e
                })
            },
            DI = e => {
                const t = e.src || "Media/Glyphs/Credits.svg";
                return (0, z.jsx)(kI, {
                    tinted: !0,
                    variant: "menu",
                    ...e,
                    src: t
                })
            },
            FI = e => {
                const t = e.src || "Media/Glyphs/Credits.svg";
                return (0, z.jsx)(kI, {
                    tinted: !0,
                    variant: "floating",
                    ...e,
                    src: t
                })
            };
        X.add("game-ui/ui/button.tsx", {
            get Button() {
                return kI
            },
            set Button(e) {
                kI = e
            },
            get MenuButton() {
                return DI
            },
            set MenuButton(e) {
                DI = e
            },
            get FloatingButton() {
                return FI
            },
            set FloatingButton(e) {
                FI = e
            }
        });
        var UI = (0, Y.createContext)(!0),
            BI = ({
                visible: e,
                direction: t = "down",
                alignment: n = "left",
                minHeight: s = 0,
                minWidth: i = 0,
                className: a,
                content: o,
                children: r,
                style: l
            }) => {
                const c = (0, Y.useRef)(null),
                    u = (0, Y.useRef)(null),
                    d = gm(c, e),
                    m = gm(u, e && null != u),
                    h = Um(e),
                    g = Hm(),
                    p = (0, Y.useMemo)((() => e && null != d ? function (e, t, n, s, i, a, o) {
                        const r = t.y - e.bottom,
                            l = e.top;
                        i > 0 && ("down" === n && r < i && r < l ? n = "up" : l < i && l < r && (n = "down"));
                        let c, u;
                        if ("left" === s) {
                            const n = null != o ? Math.max(e.left + o.width - t.x, 0) : 0;
                            c = e.left - n
                        } else u = t.x - e.right;
                        return "up" === n ? {
                            position: "absolute",
                            left: c,
                            right: u,
                            bottom: t.y - e.top,
                            maxHeight: l,
                            minWidth: a,
                            visibility: o && o.width > 0 ? "inherit" : "hidden"
                        } : {
                            position: "absolute",
                            left: c,
                            right: u,
                            top: e.bottom,
                            maxHeight: r,
                            minWidth: a,
                            visibility: o && o.width > 0 ? "inherit" : "hidden"
                        }
                    }(d, h, t, n, s * g, !0 === i ? d?.width || 0 : i * g, m) : GI), [s, g, i, d, e, h, t, n, m]),
                    f = {
                        ...p,
                        ...l
                    };
                return (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(vd, {
                        ref: c,
                        children: r
                    }), e && (0, z.jsx)(zm, {
                        children: (0, z.jsx)(UI.Provider, {
                            value: e && null != d,
                            children: (0, z.jsx)("div", {
                                className: a,
                                style: f,
                                ref: u,
                                children: o
                            })
                        })
                    }, "popup")]
                })
            };
        const GI = {
            position: "absolute",
            visibility: "hidden"
        };
        X.add("game-ui/common/anchored-popup/anchored-popup.tsx", {
            get AnchoredPopupVisibleContext() {
                return UI
            },
            set AnchoredPopupVisibleContext(e) {
                UI = e
            },
            get AnchoredPopup() {
                return BI
            },
            set AnchoredPopup(e) {
                BI = e
            }
        });
        let VI = {
            hiddenIcon: '"Media/Glyphs/StrokeArrowDown.svg"',
            visibleIcon: '"Media/Glyphs/StrokeArrowUp.svg"',
            "dropdown-toggle": "dropdown-toggle_prl",
            dropdownToggle: "dropdown-toggle_prl",
            label: "label_l_4",
            "dropdown-popup": "dropdown-popup_mMv",
            dropdownPopup: "dropdown-popup_mMv",
            "dropdown-menu": "dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_Swd"
        };
        X.add("game-ui/common/input/dropdown/dropdown.module.scss", {
            get classes() {
                return VI
            },
            set classes(e) {
                Object.assign(VI, e)
            }
        });
        const HI = VI;
        let KI = {
            "dropdown-toggle": "dropdown-toggle_bN9",
            dropdownToggle: "dropdown-toggle_bN9",
            label: "label_REA",
            indicator: "indicator_lzV",
            "dropdown-popup": "dropdown-popup_duR",
            dropdownPopup: "dropdown-popup_duR",
            "dropdown-menu": "dropdown-menu_rL4",
            dropdownMenu: "dropdown-menu_rL4",
            scrollable: "scrollable_MVT",
            "dropdown-item": "dropdown-item_t3P",
            dropdownItem: "dropdown-item_t3P"
        };
        X.add("game-ui/common/input/dropdown/themes/default.module.scss", {
            get classes() {
                return KI
            },
            set classes(e) {
                Object.assign(KI, e)
            }
        });
        const WI = KI;
        var zI = (0, Y.createContext)({
                visible: !1,
                theme: WI,
                show: () => {},
                hide: () => {},
                toggle: () => {}
            }),
            YI = new Eg("DROPDOWN_TOGGLE"),
            $I = new Eg("DROPDOWN_MENU"),
            qI = ({
                focusKey: e,
                initialFocused: t,
                theme: n = WI,
                content: s,
                alignment: i,
                children: a,
                onToggle: o
            }) => {
                const r = (0, Y.useMemo)((() => ({
                        ...HI,
                        ...n
                    })), [n]),
                    [l, c] = (0, Y.useState)(!1),
                    u = (0, Y.useRef)(null),
                    d = (0, Y.useCallback)((() => {
                        lp(rp.selectDropdown), c((e => !e)), o && o(!l)
                    }), [o, l]),
                    m = (0, Y.useCallback)((() => {
                        c(!0), o && o(!0)
                    }), [o]),
                    h = (0, Y.useCallback)((() => {
                        c(!1), o && o(!1)
                    }), [o]),
                    g = (0, Y.useMemo)((() => ({
                        visible: l,
                        theme: r,
                        show: m,
                        hide: h,
                        toggle: d
                    })), [l, r, m, h, d]);
                (0, Y.useEffect)((() => {
                    if (l) {
                        const e = e => {
                            if (!u.current) return;
                            const t = u.current.getBoundingClientRect();
                            (e.clientX < t.left || e.clientX > t.right || e.clientY < t.top || e.clientY > t.bottom) && c(!1)
                        };
                        return document.addEventListener("mousedown", e), () => document.removeEventListener("mousedown", e)
                    }
                }), [l]);
                const p = lT(),
                    f = (0, z.jsx)(Ep, {
                        className: r?.dropdownMenu,
                        ref: u,
                        children: (0, z.jsx)(ff, {
                            className: r.scrollable,
                            children: (0, z.jsx)(tp, {
                                focusKey: $I,
                                initialFocused: t,
                                direction: Rg.Vertical,
                                allowLooping: !0,
                                children: s
                            })
                        })
                    });
                return (0, z.jsxs)(z.Fragment, {
                    children: [l && (0, z.jsx)(dT, {
                        onClick: g.hide
                    }), (0, z.jsx)(Cp, {
                        includes: Sp,
                        disabled: !l,
                        children: (0, z.jsx)(Dg, {
                            onAction: g.hide,
                            disabled: !l,
                            children: (0, z.jsx)(ap, {
                                focusKey: e,
                                focused: l ? $I : YI,
                                activation: qu.AnyChildren,
                                children: (0, z.jsx)(zI.Provider, {
                                    value: g,
                                    children: (0, z.jsx)(BI, {
                                        visible: l,
                                        className: r.dropdownPopup,
                                        content: f,
                                        minHeight: 300,
                                        minWidth: !0,
                                        alignment: i,
                                        style: p,
                                        children: (0, z.jsx)(ip, {
                                            focusKey: YI,
                                            children: a
                                        })
                                    })
                                })
                            })
                        })
                    })]
                })
            };
        X.add("game-ui/common/input/dropdown/dropdown.tsx", {
            get DropdownContext() {
                return zI
            },
            set DropdownContext(e) {
                zI = e
            },
            get DROPDOWN_TOGGLE_KEY() {
                return YI
            },
            set DROPDOWN_TOGGLE_KEY(e) {
                YI = e
            },
            get DROPDOWN_MENU_KEY() {
                return $I
            },
            set DROPDOWN_MENU_KEY(e) {
                $I = e
            },
            get Dropdown() {
                return qI
            },
            set Dropdown(e) {
                qI = e
            }
        });
        var XI = ({
                theme: e,
                openIconComponent: t,
                closeIconComponent: n,
                children: s,
                ...i
            }) => {
                const a = (0, Y.useContext)(zI),
                    o = e ?? a.theme;
                return (0, z.jsxs)(QI, {
                    ...i,
                    theme: e,
                    children: [(0, z.jsx)("div", {
                        className: o.label,
                        children: s
                    }), o.indicator && (0, z.jsxs)(z.Fragment, {
                        children: [a.visible && o.visibleIcon && (n || (0, z.jsx)(ef, {
                            src: o.visibleIcon,
                            className: o.indicator
                        })), !a.visible && o.hiddenIcon && (t || (0, z.jsx)(ef, {
                            src: o.hiddenIcon,
                            className: o.indicator
                        }))]
                    })]
                })
            },
            QI = ({
                theme: e,
                sounds: t,
                selectSound: n = rp.selectDropdown,
                className: s,
                children: i,
                ...a
            }) => {
                const o = (0, Y.useContext)(zI),
                    r = e ?? o.theme,
                    l = Dm();
                return (0, z.jsx)(Gp, {
                    disableHint: !0,
                    ...a,
                    focusKey: YI,
                    className: Zu()(r.dropdownToggle, s, o.visible && "active", o.visible && l && "focused"),
                    sounds: t,
                    selectSound: n,
                    onSelect: o.toggle,
                    tooltipLabel: o.visible ? void 0 : a.tooltipLabel,
                    children: i
                })
            };
        X.add("game-ui/common/input/dropdown/dropdown-toggle.tsx", {
            get DropdownToggle() {
                return XI
            },
            set DropdownToggle(e) {
                XI = e
            },
            get DropdownToggleBase() {
                return QI
            },
            set DropdownToggleBase(e) {
                QI = e
            }
        });
        var ZI = {
            ...Bp,
            hover: null
        };

        function JI({
            focusKey: e,
            value: t,
            selected: n,
            theme: s,
            sounds: i = ZI,
            className: a,
            onChange: o,
            onToggleSelected: r,
            closeOnSelect: l = !0,
            children: c
        }) {
            const u = (0, Y.useContext)(zI),
                d = s ?? u.theme,
                m = (0, Y.useCallback)((() => {
                    n ? r && r(t) : o && o(t), l && u.hide()
                }), [n, l, u, o, t, r]),
                h = null != e ? e : "string" == typeof t || "number" == typeof t ? t : void 0;
            return (0, z.jsx)(Gp, {
                disableHint: !0,
                focusKey: h,
                sounds: i,
                className: Zu()(d.dropdownItem, n && "selected", a),
                onSelect: m,
                children: c || " "
            })
        }
        X.add("game-ui/common/input/dropdown/items/dropdown-item.tsx", {
            get defaultDropdownItemSounds() {
                return ZI
            },
            set defaultDropdownItemSounds(e) {
                ZI = e
            },
            get DropdownItem() {
                return JI
            },
            set DropdownItem(e) {
                JI = e
            }
        });
        var ey = ({
            onDrag: e,
            children: t
        }) => {
            const [n, s] = (0, Y.useState)(Ad), i = (0, Y.useCallback)((t => {
                const n = function (e, t, n) {
                    if (n) {
                        const s = n.getBoundingClientRect();
                        return {
                            x: e - s.left,
                            y: t - s.top
                        }
                    }
                    return Ad
                }(t.clientX, t.clientY, t.currentTarget);
                return s(n), e(t.clientX, t.clientY, n.x, n.y), !0
            }), [e, s]), a = (0, Y.useCallback)((t => {
                e(t.clientX, t.clientY, n.x, n.y)
            }), [e, n]), o = (0, Y.useCallback)((t => {
                e(t.clientX, t.clientY, n.x, n.y)
            }), [e, n]), [, r] = uf(i, a, o);
            return (0, z.jsx)(z.Fragment, {
                children: Y.Children.map(t, (e => Y.isValidElement(e) ? Y.cloneElement(e, {
                    onMouseDown: r
                }) : (0, z.jsx)("div", {
                    onMouseDown: r,
                    children: e
                })))
            })
        };
        X.add("game-ui/common/input/drag-handle.tsx", {
            get DragHandle() {
                return ey
            },
            set DragHandle(e) {
                ey = e
            }
        });
        var ty = ({
            header: e,
            initialPosition: t = {
                x: .5,
                y: .5
            },
            className: n,
            style: s,
            children: i,
            ...a
        }) => {
            const [o, r] = (0, Y.useState)(t), l = Um(), c = (0, Y.useRef)(null), u = gm(c), d = (0, Y.useCallback)(((e, t, n, s) => {
                e = Math.min(Math.max(e, 0), l.x), t = Math.min(Math.max(t, 0), l.y), null != u && r(function (e, t, n) {
                    return {
                        x: e.x / (n.x - t.width),
                        y: e.y / (n.y - t.height)
                    }
                }({
                    x: e - n,
                    y: t - s
                }, u, l))
            }), [r, l, u]);
            return (0, z.jsx)(YT, {
                ...a,
                ref: c,
                header: e ? (0, z.jsx)(ey, {
                    onDrag: d,
                    children: e
                }) : void 0,
                className: Zu()("draggable-panel", n),
                style: {
                    ...s,
                    visibility: u ? "inherit" : "hidden",
                    left: u ? o.x * (l.x - u.width) : 0,
                    top: u ? o.y * (l.y - u.height) : 0
                },
                children: i
            })
        };
        X.add("game-ui/common/panel/draggable-panel/draggable-panel.tsx", {
            get DraggablePanel() {
                return ty
            },
            set DraggablePanel(e) {
                ty = e
            }
        });
        let ny = {
            "info-section": "info-section_I7V",
            infoSection: "info-section_I7V",
            content: "content_Cdk item-focused_FuT",
            column: "column_aPB",
            divider: "divider_rfM",
            "no-margin": "no-margin_K7I",
            noMargin: "no-margin_K7I",
            "disable-focus-highlight": "disable-focus-highlight_ik3",
            disableFocusHighlight: "disable-focus-highlight_ik3",
            "info-wrap-box": "info-wrap-box_Rt4",
            infoWrapBox: "info-wrap-box_Rt4"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-section/info-section.module.scss", {
            get classes() {
                return ny
            },
            set classes(e) {
                Object.assign(ny, e)
            }
        });
        const sy = ny;
        var iy = ({
                focusKey: e,
                tooltip: t,
                disableFocus: n = !1,
                className: s,
                children: i
            }) => (0, z.jsx)("div", {
                className: Zu()(sy.infoSection, s),
                children: (0, z.jsx)(Tg, {
                    tooltip: t,
                    direction: "right",
                    alignment: "center",
                    children: n ? (0, z.jsx)(Ep, {
                        className: Zu()(sy.content, sy.disableFocusHighlight),
                        children: (0, z.jsx)(tp, {
                            children: i
                        })
                    }) : (0, z.jsx)(Ip, {
                        focusKey: e,
                        className: sy.content,
                        children: (0, z.jsx)(tp, {
                            children: i
                        })
                    })
                })
            }),
            ay = ({
                noMargin: e = !1
            }) => (0, z.jsx)("div", {
                className: Zu()(sy.divider, e && sy.noMargin)
            });
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-section/info-section.tsx", {
            get InfoSection() {
                return iy
            },
            set InfoSection(e) {
                iy = e
            },
            get Divider() {
                return ay
            },
            set Divider(e) {
                ay = e
            }
        });
        var oy = {},
            ry = ({
                styles: e,
                enterDuration: t,
                exitDuration: n,
                enterExpandHeight: s = !0,
                exitCollapseHeight: i = !0,
                children: a
            }) => {
                const o = e ?? oy,
                    {
                        state: r,
                        onMount: l,
                        onUnmount: c
                    } = (0, Y.useContext)(ld),
                    u = (0, Y.useContext)(mp),
                    d = (0, Y.useRef)(null),
                    m = gd(a.ref, d),
                    h = (0, Y.useRef)(!1),
                    [g, p] = (0, Y.useState)(function (e, t) {
                        switch (e) {
                        case td.enter:
                            return t.enter;
                        case td.exit:
                            return t.exit;
                        default:
                            return null
                        }
                    }(r, o)),
                    f = (0, Y.useRef)(g);
                f.current = g;
                const x = (0, Y.useCallback)((e => {
                        h.current && p(e)
                    }), []),
                    [v, _] = (0, Y.useState)(r === td.enter && s ? {
                        height: "0px"
                    } : {}),
                    b = (0, Y.useCallback)((e => {
                        h.current && _(e)
                    }), []);
                return (0, Y.useEffect)((() => (h.current || (h.current = !0, l()), () => {
                    h.current && (h.current = !1, c())
                })), [l, c]), (0, Y.useEffect)((() => {
                    const e = new qm;
                    return (async () => {
                        if (r === td.enter) {
                            if (x(o.enter), s && d.current instanceof HTMLElement) {
                                const e = d.current.offsetHeight;
                                b((t => null == t ? {
                                    height: e + "px"
                                } : t))
                            }
                            if (!await uh(e)) return;
                            if (!await uh(e)) return;
                            if (x(o.enterActive), !await uh(e)) return;
                            const n = t ?? Jm(d.current);
                            if (s) {
                                const t = performance.now(),
                                    s = eh(d.current, "height");
                                let i = 0;
                                for (d.current instanceof HTMLElement && (i = d.current.scrollHeight, b({
                                        height: i + "px"
                                    })); performance.now() - t <= n;) {
                                    if (d.current instanceof HTMLElement) {
                                        const e = d.current.scrollHeight;
                                        i < e && (b(null != s ? {
                                            ...nh(d.current, "height", sh(s, performance.now() - t)),
                                            height: e + "px"
                                        } : {
                                            height: e + "px"
                                        }), i = e)
                                    }
                                    if (!await uh(e)) return
                                }
                            } else if (!await ch(n, e)) return;
                            s && u.updateThumbs(), x(null), b(null)
                        } else if (r === td.exit) {
                            if (null == f.current) {
                                if (x(o.exit), i && d.current instanceof HTMLElement && b({
                                        height: d.current.offsetHeight + "px"
                                    }), !await uh(e)) return;
                                if (!await uh(e)) return
                            }
                            if (x(o.exitActive), !await uh(e)) return;
                            i && d.current instanceof HTMLElement && b({
                                height: "0px"
                            });
                            const t = n ?? Jm(d.current);
                            if (!await ch(t, e)) return;
                            i && u.updateThumbs(), h.current && (h.current = !1, c())
                        }
                    })(), () => {
                        e.cancel(), x(null), b(null)
                    }
                }), [t, s, i, n, c, u, r, o.enter, o.enterActive, o.exit, o.exitActive, x, b]), (0, z.jsx)(ld.Provider, {
                    value: rd,
                    children: Y.cloneElement(a, {
                        ...a.props,
                        ref: m,
                        className: Zu()(a.props.className, o.base, g),
                        style: {
                            ...a.props.style,
                            ...v
                        }
                    })
                })
            };
        X.add("game-ui/common/animations/height-transition.tsx", {
            get emptyStyles() {
                return oy
            },
            set emptyStyles(e) {
                oy = e
            },
            get HeightTransition() {
                return ry
            },
            set HeightTransition(e) {
                ry = e
            }
        });
        var ly = ({
            in: e,
            skipInitial: t = !0,
            onEnter: n,
            onExit: s,
            children: i
        }) => {
            const a = (0, Y.useRef)(t);
            (0, Y.useEffect)((() => {
                e || (a.current = !1)
            }), [e]);
            const o = e ? a.current ? td.in : td.enter : td.exit,
                [r, l] = (0, Y.useState)(0),
                c = e || r > 0,
                u = (0, Y.useRef)(n);
            u.current = n;
            const d = (0, Y.useRef)(s);
            d.current = s, (0, Y.useEffect)((() => {
                if (c) return u.current && u.current(), () => {
                    d.current && d.current()
                }
            }), [c]);
            const m = (0, Y.useCallback)((() => l((e => e + 1))), []),
                h = (0, Y.useCallback)((() => l((e => e - 1))), []),
                g = (0, Y.useMemo)((() => ({
                    state: o,
                    onMount: m,
                    onUnmount: h
                })), [m, h, o]),
                p = (0, Y.useContext)(cd),
                f = (0, Y.useContext)(Ju);
            return (0, z.jsx)(ld.Provider, {
                value: g,
                children: (0, z.jsx)(cd.Provider, {
                    value: p || !e,
                    children: (0, z.jsx)(Ju.Provider, {
                        value: e ? f : ed,
                        children: c && i
                    })
                })
            })
        };
        X.add("game-ui/common/animations/transition-coordinator.tsx", {
            get TransitionCoordinator() {
                return ly
            },
            set TransitionCoordinator(e) {
                ly = e
            }
        });
        let cy = {
            "foldout-item": "foldout-item_wOF",
            foldoutItem: "foldout-item_wOF",
            header: "header_8H_ item-mouse-states_Fmi item-focused_FuT",
            "header-content": "header-content_wUX",
            headerContent: "header-content_wUX",
            "disable-active-state": "disable-active-state_w8a",
            disableActiveState: "disable-active-state_w8a",
            "disable-mouse-states": "disable-mouse-states_js5",
            disableMouseStates: "disable-mouse-states_js5",
            toggle: "toggle_yQv",
            content: "content_mJm",
            enter: "enter_sm5",
            exit: "exit_ScE",
            "exit-active": "exit-active_LGX",
            exitActive: "exit-active_LGX",
            "enter-active": "enter-active_jNk",
            enterActive: "enter-active_jNk"
        };
        X.add("game-ui/common/foldout/foldout-item.module.scss", {
            get classes() {
                return cy
            },
            set classes(e) {
                Object.assign(cy, e)
            }
        });
        const uy = cy;
        var dy = Y.createContext({
            theme: uy
        });

        function my(e) {
            return (0, Y.useMemo)((() => ({
                ...uy,
                ...e
            })), [e])
        }
        X.add("game-ui/common/foldout/foldout-context.ts", {
            get FoldoutContext() {
                return dy
            },
            set FoldoutContext(e) {
                dy = e
            }
        }), X.add("game-ui/common/foldout/foldout-theme.ts", {
            get useFoldoutTheme() {
                return my
            },
            set useFoldoutTheme(e) {
                my = e
            }
        });
        var hy = ({
                header: e,
                theme: t = uy,
                type: n = "Item",
                nesting: s = 0,
                initialExpanded: i = !1,
                expandFromContent: a = !1,
                onSelect: o,
                onToggleExpanded: r,
                className: l,
                children: c
            }) => {
                const u = my(t),
                    d = Y.Children.count(c) > 0,
                    [m, h] = (0, Y.useState)(i),
                    g = (0, Y.useCallback)((() => {
                        lp(rp.expandPanel), h((e => !e)), r && r(!m)
                    }), [m, r]),
                    p = (0, Y.useCallback)((() => {
                        o && (lp(rp.selectItem), o())
                    }), [o]),
                    f = !d && !o,
                    x = (0, Y.useMemo)((() => ({
                        theme: u,
                        expandable: d,
                        expanded: m,
                        onToggleExpanded: g,
                        onSelect: p
                    })), [d, m, p, g, u]);
                return (0, z.jsx)(dy.Provider, {
                    value: x,
                    children: (0, z.jsxs)("div", {
                        style: py(s),
                        className: Zu()(u.foldoutItem, d && u.expandable, m && u.expanded, "Item" === n && u.item, "Group" === n && u.group, "Category" === n && u.category, f && u.disableMouseStates, l),
                        children: [(0, z.jsx)(kg, {
                            onAction: p,
                            disabled: d,
                            children: (0, z.jsx)(Ug, {
                                expandable: d,
                                disabled: !d,
                                expanded: m,
                                onAction: g,
                                children: e
                            })
                        }), (0, z.jsx)(Ug, {
                            expandable: d,
                            disabled: !d || !a,
                            expanded: m,
                            onAction: g,
                            children: (0, z.jsx)(ly, {
                                in: d && m,
                                children: (0, z.jsx)(ry, {
                                    styles: uy,
                                    children: (0, z.jsx)("div", {
                                        className: Zu()(u.content, "foldout-expanded"),
                                        children: (0, z.jsx)(tp, {
                                            children: c
                                        })
                                    })
                                })
                            })
                        })]
                    })
                })
            },
            gy = ({
                onClick: e,
                onFocusChange: t,
                children: n
            }) => {
                const [s, i] = (0, Y.useState)(!1), a = (0, Y.useContext)(dy), o = (0, Y.useCallback)((() => lp(rp.hoverItem)), []), r = (0, Y.useCallback)((() => {
                    a.expandable ? a.onToggleExpanded && a.onToggleExpanded() : a.onSelect && a.onSelect(), e && e()
                }), [a, e]), l = (0, Y.useCallback)((e => {
                    i(e), t && t(e)
                }), [t]);
                return (0, z.jsxs)(Ip, {
                    className: Zu()(a.theme.header),
                    onMouseEnter: o,
                    onClick: r,
                    onFocusChange: l,
                    children: [(0, z.jsx)("div", {
                        className: a.theme.headerContent,
                        children: n
                    }), a.expandable && (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(Pf, {
                            action: "Expand Group",
                            active: s,
                            className: uy.expandableHint
                        }), (0, z.jsx)(ef, {
                            className: a.theme.toggle,
                            src: a.expanded ? "Media/Glyphs/ThickStrokeArrowDown.svg" : "Media/Glyphs/ThickStrokeArrowRight.svg"
                        })]
                    })]
                })
            };

        function py(e) {
            return {
                "--nesting": e
            }
        }
        X.add("game-ui/common/foldout/foldout-item.tsx", {
            get FoldoutItem() {
                return hy
            },
            set FoldoutItem(e) {
                hy = e
            },
            get FoldoutItemHeader() {
                return gy
            },
            set FoldoutItemHeader(e) {
                gy = e
            }
        });
        let fy = {
            "foldout-item": "foldout-item_Ha3 foldout-item_wOF",
            foldoutItem: "foldout-item_Ha3 foldout-item_wOF",
            header: "header_o7z header_8H_ item-mouse-states_Fmi item-focused_FuT",
            "disable-active-state": "disable-active-state_UBt disable-active-state_w8a",
            disableActiveState: "disable-active-state_UBt disable-active-state_w8a",
            "disable-mouse-states": "disable-mouse-states_ivb disable-mouse-states_js5",
            disableMouseStates: "disable-mouse-states_ivb disable-mouse-states_js5",
            "header-content": "header-content_t6v header-content_wUX",
            headerContent: "header-content_t6v header-content_wUX",
            icon: "icon_p5g undefined",
            toggle: "toggle_r8A toggle_yQv"
        };
        X.add("game-ui/common/foldout/themes/info-section-foldout.module.scss", {
            get classes() {
                return fy
            },
            set classes(e) {
                Object.assign(fy, e)
            }
        });
        const xy = fy;
        var vy = ({
            header: e,
            initialExpanded: t,
            expandFromContent: n,
            focusKey: s,
            tooltip: i,
            disableFocus: a = !1,
            className: o,
            onToggleExpanded: r,
            children: l
        }) => (0, z.jsx)(hy, {
            header: (0, z.jsx)(Tg, {
                tooltip: i,
                direction: "right",
                alignment: "center",
                children: (0, z.jsx)(gy, {
                    children: e
                })
            }),
            theme: xy,
            initialExpanded: t,
            expandFromContent: n,
            onToggleExpanded: r,
            className: Zu()(sy.infoSection, o),
            children: a ? (0, z.jsx)(Ep, {
                className: Zu()(sy.content, sy.disableFocusHighlight),
                children: (0, z.jsx)(tp, {
                    children: l
                })
            }) : (0, z.jsx)(Ip, {
                focusKey: s,
                className: sy.content,
                children: (0, z.jsx)(tp, {
                    children: l
                })
            })
        });
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-section/info-section-foldout.tsx", {
            get InfoSectionFoldout() {
                return vy
            },
            set InfoSectionFoldout(e) {
                vy = e
            }
        });
        let _y = {
            "info-row": "info-row_QQ9 item-focused_FuT",
            infoRow: "info-row_QQ9 item-focused_FuT",
            "disable-focus-highlight": "disable-focus-highlight_I85",
            disableFocusHighlight: "disable-focus-highlight_I85",
            link: "link_ICj",
            tooltipRow: "tooltipRow_uIh",
            left: "left_RyE",
            hasIcon: "hasIcon_iZ3",
            right: "right_ZUb",
            icon: "icon_ugE",
            uppercase: "uppercase_f0y",
            subRow: "subRow_NJI"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-row/info-row.module.scss", {
            get classes() {
                return _y
            },
            set classes(e) {
                Object.assign(_y, e)
            }
        });
        const by = _y;
        var Ty = ({
                icon: e,
                left: t,
                right: n,
                tooltip: s,
                link: i,
                uppercase: a = !1,
                subRow: o = !1,
                disableFocus: r = !1,
                className: l
            }) => (0, z.jsx)(Tg, {
                tooltip: s,
                direction: "right",
                alignment: "center",
                children: i ? (0, z.jsxs)(Ip, {
                    activation: qu.FocusedChild,
                    className: Zu()(by.infoRow, o && by.subRow, i && by.link, l),
                    children: [e && (0, z.jsx)("img", {
                        src: e,
                        className: Zu()(by.icon, i && by.link)
                    }), t && (0, z.jsx)("div", {
                        className: Zu()(by.left, a && by.uppercase, i && by.link, e && by.hasIcon),
                        children: t
                    }), i && (0, z.jsx)(Ip, {
                        className: Zu()(by.right, i && by.link),
                        children: i
                    }), n && (0, z.jsx)("div", {
                        className: Zu()(by.right, i && by.link),
                        children: n
                    })]
                }) : r ? (0, z.jsxs)(Ep, {
                    className: Zu()(by.infoRow, o && by.subRow, by.disableFocusHighlight, l),
                    children: [e && (0, z.jsx)("img", {
                        src: e,
                        className: by.icon
                    }), t && (0, z.jsx)("div", {
                        className: Zu()(by.left, a && by.uppercase),
                        children: t
                    }), n && (0, z.jsx)("div", {
                        className: Zu()(by.right),
                        children: n
                    })]
                }) : (0, z.jsxs)(Ip, {
                    focusKey: r ? Ig : yg,
                    className: Zu()(by.infoRow, o && by.subRow, l),
                    children: [e && (0, z.jsx)("img", {
                        src: e,
                        className: by.icon
                    }), t && (0, z.jsx)("div", {
                        className: Zu()(by.left, a && by.uppercase),
                        children: t
                    }), n && (0, z.jsx)("div", {
                        className: Zu()(by.right),
                        children: n
                    })]
                })
            }),
            Ey = ({
                icon: e,
                left: t,
                right: n,
                uppercase: s = !1,
                subRow: i = !1
            }) => (0, z.jsxs)("div", {
                className: Zu()(by.infoRow, by.tooltipRow, i && by.subRow),
                children: [e && (0, z.jsx)("img", {
                    src: e,
                    className: Zu()(by.icon)
                }), t && (0, z.jsx)("div", {
                    className: Zu()(by.left, s && by.uppercase, e && by.hasIcon),
                    children: t
                }), n && (0, z.jsx)("div", {
                    className: Zu()(by.right),
                    children: n
                })]
            });
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-row/info-row.tsx", {
            get InfoRow() {
                return Ty
            },
            set InfoRow(e) {
                Ty = e
            },
            get TooltipRow() {
                return Ey
            },
            set TooltipRow(e) {
                Ey = e
            }
        });
        var Iy = e => {
            const {
                children: t,
                draggable: n,
                header: s,
                ...i
            } = e, a = n ? ty : YT, o = s || n ? (0, z.jsx)(QT, {
                children: s || " "
            }) : null;
            return (0, z.jsx)(a, {
                header: o,
                ...i,
                children: (0, z.jsx)(tp, {
                    children: (0, z.jsx)(ff, {
                        children: t
                    })
                })
            })
        };
        X.add("game-ui/ui/panel.tsx", {
            get Panel() {
                return Iy
            },
            set Panel(e) {
                Iy = e
            }
        });
        let yy = {
            icon: "icon_VQU",
            iconImg: "iconImg_ThV"
        };
        X.add("game-ui/ui/icon.module.scss", {
            get classes() {
                return yy
            },
            set classes(e) {
                Object.assign(yy, e)
            }
        });
        const jy = yy;
        var Sy = ({
            tinted: e,
            className: t,
            src: n
        }) => (0, z.jsx)("div", {
            className: Zu()(t, jy.icon),
            children: e ? (0, z.jsx)(ef, {
                src: n,
                className: jy.iconImg
            }) : (0, z.jsx)("img", {
                src: n,
                className: Zu()(jy.iconImg)
            })
        });
        X.add("game-ui/ui/icon.tsx", {
            get Icon() {
                return Sy
            },
            set Icon(e) {
                Sy = e
            }
        });
        var Cy = zm;
        Cy.usePortalContainer = Ym, Cy.ContainerProvider = Wm, X.add("game-ui/ui/portal.tsx", {
            get Portal() {
                return Cy
            },
            set Portal(e) {
                Cy = e
            }
        });
        const Ny = /^(#+)\s+/,
            wy = /\s/;

        function Oy() {
            return (0, Y.useMemo)((() => new Py), [])
        }
        class Py {
            render(e) {
                const t = [];
                e = e.replace(/<br>/gim, "␤");
                let n = Ff.None;
                const s = new Array;
                let i = 0;
                const a = Ny.exec(e);
                null != a && (n = Od(a[1].length, 1, 6), i = a[0].length);
                let o = -1,
                    r = -1,
                    l = -1,
                    c = -1;
                for (let n = 0; n < e.length; n++) switch (e[n]) {
                case "␤":
                    e = e.substring(0, n) + " " + e.substring(n + 1), t.push((0, z.jsx)("br", {}, n));
                    break;
                case "!":
                    n < e.length - 1 && -1 === r && (o = n);
                    break;
                case "[":
                    r = n, l = -1, c = -1;
                    break;
                case "]":
                    -1 !== r && -1 === l ? l = n : o = -1;
                    break;
                case "(":
                    -1 !== r && -1 !== l && -1 === c && (l === n - 1 ? c = n : (o = -1, r = -1, l = -1));
                    break;
                case ")":
                    if (-1 !== c) {
                        if (-1 === o) {
                            i < r && t.push(Ly(e, i, r, null));
                            const s = Ly(e, r + 1, l, n < e.length - 1 && wy.test(e[n + 1]) ? e[n + 1] : null),
                                a = e.substring(c + 1, n);
                            t.push((0, z.jsx)(Hf, {
                                linkData: a,
                                children: s
                            }, r))
                        } else {
                            const i = e.substring(r + 1, l),
                                a = e.substring(c + 1, n);
                            t.push((0, z.jsx)("img", {
                                alt: i,
                                src: a
                            }, o)), s.push(a)
                        }
                        i = n + 1, o = -1, r = -1, l = -1, c = -1
                    }
                    break;
                default:
                    -1 !== o && -1 === r && (o = -1)
                }
                return i < e.length && t.push(Ly(e, i, e.length, null)), {
                    node: t,
                    style: n,
                    images: s
                }
            }
        }

        function Ly(e, t, n, s) {
            const i = [];
            let a = t,
                o = !1,
                r = -1;
            for (let l = t; l < n; l++)
                if ("*" === e[l])
                    if (o)
                        if (-1 === r) r = l - 1, o = !1;
                        else {
                            a < r && i.push(e.substring(a, r));
                            let t = e.substring(r + 2, l - 1);
                            l < n - 1 ? wy.test(e[l + 1]) && (t += e[l + 1]) : null != s && (t += s), i.push((0, z.jsx)("b", {
                                children: t
                            }, r)), a = l + 1, r = -1, o = !1
                        }
            else o = !0;
            else o = !1;
            if (a < n) {
                let t = e.substring(a, n);
                null != s && (t += s), i.push(t)
            }
            return i
        }
        X.add("game-ui/common/text/renderers/markdown-renderer.tsx", {
            get useMarkdownRenderer() {
                return Oy
            },
            set useMarkdownRenderer(e) {
                Oy = e
            }
        }), X.add("game-ui/ui/index.ts", {}), X.add("game-ui/game/data-binding/budget-panel-types.ts", {});
        const Ay = "camera";
        var My = $r(Ay, "focusedEntity");

        function Ry(e) {
            tl(Ay, "focusEntity", e)
        }
        X.add("game-ui/game/data-binding/camera-bindings.ts", {
            get focusedEntity() {
                return focusedEntity
            },
            set focusedEntity(e) {
                focusedEntity = e
            },
            get focusEntity() {
                return Ry
            },
            set focusEntity(e) {
                Ry = e
            }
        });
        const ky = "chirper";
        var Dy = $r(ky, "chirps"),
            Fy = Zr(ky, "chirpAdded");

        function Uy(e) {
            tl(ky, "addLike", e)
        }

        function By(e) {
            tl(ky, "removeLike", e)
        }

        function Gy(e) {
            tl(ky, "selectLink", e)
        }
        X.add("game-ui/game/data-binding/chirper-bindings.ts", {
            get chirps() {
                return chirps
            },
            set chirps(e) {
                chirps = e
            },
            get chirpAdded() {
                return chirpAdded
            },
            set chirpAdded(e) {
                chirpAdded = e
            },
            get addLike() {
                return Uy
            },
            set addLike(e) {
                Uy = e
            },
            get removeLike() {
                return By
            },
            set removeLike(e) {
                By = e
            },
            get selectLink() {
                return Gy
            },
            set selectLink(e) {
                Gy = e
            }
        });
        var Vy = "cinematicCamera",
            Hy = $r(Vy, "playbackDuration"),
            Ky = $r(Vy, "timelinePosition"),
            Wy = $r(Vy, "timelineLength"),
            zy = $r(Vy, "loop"),
            Yy = el(Vy, "toggleLoop"),
            $y = $r(Vy, "playing"),
            qy = e => tl(Vy, "setPlaybackDuration", e),
            Xy = Jr(Vy, "onAfterPlaybackDurationChange"),
            Qy = e => tl(Vy, "setTimelinePosition", e),
            Zy = () => tl(Vy, "stopPlayback"),
            Jy = () => tl(Vy, "togglePlayback"),
            ej = (e, t) => tl(Vy, "captureKey", e, t),
            tj = (e, t) => tl(Vy, "removeCameraTransformKey", e, t),
            nj = (e, t, n, s) => nl(Vy, "moveKeyFrame", e, t, n, s),
            sj = (e, t, n) => tl(Vy, "removeKeyFrame", e, t, n),
            ij = (e, t, n, s) => nl(Vy, "addKeyFrame", e, t, n, s),
            aj = () => tl(Vy, "reset"),
            oj = () => nl(Vy, "getControllerDelta"),
            rj = () => nl(Vy, "getControllerZoomDelta"),
            lj = () => nl(Vy, "getControllerPanDelta"),
            cj = e => tl(Vy, "toggleCurveEditorFocus", e),
            uj = el(Vy, "save"),
            dj = el(Vy, "load"),
            mj = el(Vy, "delete"),
            hj = $r(Vy, "lastLoaded"),
            gj = $r(Vy, "assets"),
            pj = $r(Vy, "availableCloudTargets"),
            fj = $r(Vy, "selectedCloudTarget"),
            xj = el(Vy, "selectCloudTarget"),
            vj = $r(Vy, "transformAnimationCurves"),
            _j = $r(Vy, "modifierAnimationCurves"),
            bj = (e, t) => (0, Y.useMemo)((() => ({
                onAddKeyframe: async (n, s, i) => void 0 !== i && -1 !== i ? await ij(e, n, s, t ?? i) : -1,
                onMoveKeyframe: async (n, s, i, a) => null != a ? await nj(e, t ?? a, n, s) : -1,
                onRemoveKeyframe: (n, s) => {
                    null != s && sj(e, t ?? s, n)
                },
                onSetKeyframes: (e, t) => {
                    throw new Error("Function not implemented.")
                }
            })), [t, e]);
        X.add("game-ui/game/data-binding/cinematic-camera-bindings.ts", {
            get group() {
                return Vy
            },
            set group(e) {
                Vy = e
            },
            get playbackDuration() {
                return playbackDuration
            },
            set playbackDuration(e) {
                playbackDuration = e
            },
            get timelinePosition() {
                return timelinePosition
            },
            set timelinePosition(e) {
                timelinePosition = e
            },
            get timelineLength() {
                return timelineLength
            },
            set timelineLength(e) {
                timelineLength = e
            },
            get loop() {
                return loop
            },
            set loop(e) {
                loop = e
            },
            get toggleLoop() {
                return Yy
            },
            set toggleLoop(e) {
                Yy = e
            },
            get playing() {
                return playing
            },
            set playing(e) {
                playing = e
            },
            get setPlaybackDuration() {
                return qy
            },
            set setPlaybackDuration(e) {
                qy = e
            },
            get onAfterPlaybackDurationChange() {
                return Xy
            },
            set onAfterPlaybackDurationChange(e) {
                Xy = e
            },
            get setTimelinePosition() {
                return Qy
            },
            set setTimelinePosition(e) {
                Qy = e
            },
            get stopPlayback() {
                return Zy
            },
            set stopPlayback(e) {
                Zy = e
            },
            get togglePlayback() {
                return Jy
            },
            set togglePlayback(e) {
                Jy = e
            },
            get captureKey() {
                return ej
            },
            set captureKey(e) {
                ej = e
            },
            get removeCameraTransformKey() {
                return tj
            },
            set removeCameraTransformKey(e) {
                tj = e
            },
            get moveKeyFrame() {
                return nj
            },
            set moveKeyFrame(e) {
                nj = e
            },
            get removeKeyFrame() {
                return sj
            },
            set removeKeyFrame(e) {
                sj = e
            },
            get addKeyFrame() {
                return ij
            },
            set addKeyFrame(e) {
                ij = e
            },
            get resetCinematicCameraSequence() {
                return aj
            },
            set resetCinematicCameraSequence(e) {
                aj = e
            },
            get getControllerDelta() {
                return oj
            },
            set getControllerDelta(e) {
                oj = e
            },
            get getControllerZoomDelta() {
                return rj
            },
            set getControllerZoomDelta(e) {
                rj = e
            },
            get getControllerPanDelta() {
                return lj
            },
            set getControllerPanDelta(e) {
                lj = e
            },
            get toggleCurveEditorFocus() {
                return cj
            },
            set toggleCurveEditorFocus(e) {
                cj = e
            },
            get saveCinematicCameraSequence() {
                return uj
            },
            set saveCinematicCameraSequence(e) {
                uj = e
            },
            get loadCinematicCameraSequence() {
                return dj
            },
            set loadCinematicCameraSequence(e) {
                dj = e
            },
            get deleteCinematicCameraSequence() {
                return mj
            },
            set deleteCinematicCameraSequence(e) {
                mj = e
            },
            get lastLoadedCinematicCameraSequence() {
                return lastLoadedCinematicCameraSequence
            },
            set lastLoadedCinematicCameraSequence(e) {
                lastLoadedCinematicCameraSequence = e
            },
            get cinematicCameraSequenceAssets() {
                return cinematicCameraSequenceAssets
            },
            set cinematicCameraSequenceAssets(e) {
                cinematicCameraSequenceAssets = e
            },
            get availableCloudTargets() {
                return availableCloudTargets
            },
            set availableCloudTargets(e) {
                availableCloudTargets = e
            },
            get selectedCloudTarget() {
                return selectedCloudTarget
            },
            set selectedCloudTarget(e) {
                selectedCloudTarget = e
            },
            get selectCloudTarget() {
                return xj
            },
            set selectCloudTarget(e) {
                xj = e
            },
            get transformAnimationCurveData() {
                return transformAnimationCurveData
            },
            set transformAnimationCurveData(e) {
                transformAnimationCurveData = e
            },
            get modifierAnimationCurveData() {
                return modifierAnimationCurveData
            },
            set modifierAnimationCurveData(e) {
                modifierAnimationCurveData = e
            },
            get useCinematicCameraBindings() {
                return bj
            },
            set useCinematicCameraBindings(e) {
                bj = e
            }
        });
        const Tj = "cityInfo";
        var Ej = $r(Tj, "residentialLowDemand"),
            Ij = $r(Tj, "residentialMediumDemand"),
            yj = $r(Tj, "residentialHighDemand"),
            jj = $r(Tj, "commercialDemand"),
            Sj = $r(Tj, "industrialDemand"),
            Cj = $r(Tj, "officeDemand"),
            Nj = $r(Tj, "residentialLowFactors"),
            wj = $r(Tj, "residentialMediumFactors"),
            Oj = $r(Tj, "residentialHighFactors"),
            Pj = $r(Tj, "commercialFactors"),
            Lj = $r(Tj, "industrialFactors"),
            Aj = $r(Tj, "officeFactors"),
            Mj = $r(Tj, "happiness"),
            Rj = $r(Tj, "happinessFactors");
        X.add("game-ui/game/data-binding/city-info-bindings.ts", {
            get residentialLowDemand() {
                return residentialLowDemand
            },
            set residentialLowDemand(e) {
                residentialLowDemand = e
            },
            get residentialMediumDemand() {
                return residentialMediumDemand
            },
            set residentialMediumDemand(e) {
                residentialMediumDemand = e
            },
            get residentialHighDemand() {
                return residentialHighDemand
            },
            set residentialHighDemand(e) {
                residentialHighDemand = e
            },
            get commercialDemand() {
                return commercialDemand
            },
            set commercialDemand(e) {
                commercialDemand = e
            },
            get industrialDemand() {
                return industrialDemand
            },
            set industrialDemand(e) {
                industrialDemand = e
            },
            get officeDemand() {
                return officeDemand
            },
            set officeDemand(e) {
                officeDemand = e
            },
            get residentialLowFactors() {
                return residentialLowFactors
            },
            set residentialLowFactors(e) {
                residentialLowFactors = e
            },
            get residentialMediumFactors() {
                return residentialMediumFactors
            },
            set residentialMediumFactors(e) {
                residentialMediumFactors = e
            },
            get residentialHighFactors() {
                return residentialHighFactors
            },
            set residentialHighFactors(e) {
                residentialHighFactors = e
            },
            get commercialFactors() {
                return commercialFactors
            },
            set commercialFactors(e) {
                commercialFactors = e
            },
            get industrialFactors() {
                return industrialFactors
            },
            set industrialFactors(e) {
                industrialFactors = e
            },
            get officeFactors() {
                return officeFactors
            },
            set officeFactors(e) {
                officeFactors = e
            },
            get happiness() {
                return happiness
            },
            set happiness(e) {
                happiness = e
            },
            get happinessFactors() {
                return happinessFactors
            },
            set happinessFactors(e) {
                happinessFactors = e
            }
        });
        const kj = "climate";
        var Dj, Fj = $r(kj, "seasonNameId"),
            Uj = $r(kj, "weather"),
            Bj = $r(kj, "temperature");
        ! function (e) {
            e[e.Clear = 0] = "Clear", e[e.Few = 1] = "Few", e[e.Scattered = 2] = "Scattered", e[e.Broken = 3] = "Broken", e[e.Overcast = 4] = "Overcast", e[e.Rain = 5] = "Rain", e[e.Snow = 6] = "Snow", e[e.Hail = 7] = "Hail", e[e.Storm = 8] = "Storm"
        }(Dj || (Dj = {})), X.add("game-ui/game/data-binding/climate-bindings.ts", {
            get seasonNameId() {
                return seasonNameId
            },
            set seasonNameId(e) {
                seasonNameId = e
            },
            get weather() {
                return weather
            },
            set weather(e) {
                weather = e
            },
            get temperature() {
                return temperature
            },
            set temperature(e) {
                temperature = e
            },
            get WeatherType() {
                return Dj
            },
            set WeatherType(e) {
                Dj = e
            }
        });
        const Gj = "budget";
        var Vj = $r(Gj, "totalIncome"),
            Hj = $r(Gj, "totalExpenses"),
            Kj = $r(Gj, "incomeItems"),
            Wj = $r(Gj, "incomeValues"),
            zj = $r(Gj, "expenseItems"),
            Yj = $r(Gj, "expenseValues");

        function $j(e, t) {
            return e.sources.reduce(((e, n) => e + t[n.index]), 0)
        }
        X.add("game-ui/game/data-binding/economy/budget-bindings.ts", {
            get totalIncome() {
                return totalIncome
            },
            set totalIncome(e) {
                totalIncome = e
            },
            get totalExpenses() {
                return totalExpenses
            },
            set totalExpenses(e) {
                totalExpenses = e
            },
            get incomeItems() {
                return incomeItems
            },
            set incomeItems(e) {
                incomeItems = e
            },
            get incomeValues() {
                return incomeValues
            },
            set incomeValues(e) {
                incomeValues = e
            },
            get expenseItems() {
                return expenseItems
            },
            set expenseItems(e) {
                expenseItems = e
            },
            get expenseValues() {
                return expenseValues
            },
            set expenseValues(e) {
                expenseValues = e
            },
            get getItemValue() {
                return $j
            },
            set getItemValue(e) {
                $j = e
            }
        });
        const qj = "loan";
        var Xj = $r(qj, "loanLimit"),
            Qj = $r(qj, "currentLoan"),
            Zj = $r(qj, "loanOffer");

        function Jj(e) {
            tl(qj, "requestLoanOffer", e)
        }

        function eS() {
            tl(qj, "acceptLoanOffer")
        }

        function tS() {
            tl(qj, "resetLoanOffer")
        }
        X.add("game-ui/game/data-binding/economy/loan-bindings.ts", {
            get loanLimit() {
                return loanLimit
            },
            set loanLimit(e) {
                loanLimit = e
            },
            get currentLoan() {
                return currentLoan
            },
            set currentLoan(e) {
                currentLoan = e
            },
            get loanOffer() {
                return loanOffer
            },
            set loanOffer(e) {
                loanOffer = e
            },
            get requestLoanOffer() {
                return Jj
            },
            set requestLoanOffer(e) {
                Jj = e
            },
            get acceptLoanOffer() {
                return eS
            },
            set acceptLoanOffer(e) {
                eS = e
            },
            get resetLoanOffer() {
                return tS
            },
            set resetLoanOffer(e) {
                tS = e
            }
        });
        const nS = "production";
        var sS = $r(nS, "maxProgress"),
            iS = $r(nS, "resourceCategories"),
            aS = Xr(nS, "resourceDetails"),
            oS = Xr(nS, "resources"),
            rS = Xr(nS, "services"),
            lS = Xr(nS, "data");
        X.add("game-ui/game/data-binding/economy/production-bindings.ts", {
            get maxProgress() {
                return maxProgress
            },
            set maxProgress(e) {
                maxProgress = e
            },
            get resourceCategories() {
                return resourceCategories
            },
            set resourceCategories(e) {
                resourceCategories = e
            },
            get resourceDetails() {
                return resourceDetails
            },
            set resourceDetails(e) {
                resourceDetails = e
            },
            get resources() {
                return resources
            },
            set resources(e) {
                resources = e
            },
            get services() {
                return services
            },
            set services(e) {
                services = e
            },
            get resourceData() {
                return resourceData
            },
            set resourceData(e) {
                resourceData = e
            }
        });
        const cS = "serviceBudget";
        var uS = $r(cS, "services"),
            dS = Xr(cS, "serviceDetails");

        function mS(e, t) {
            tl(cS, "setServiceBudget", e, t)
        }

        function hS(e, t) {
            tl(cS, "setServiceFee", e, t)
        }

        function gS(e) {
            tl(cS, "resetService", e)
        }
        X.add("game-ui/game/data-binding/economy/service-budget-bindings.ts", {
            get services() {
                return services
            },
            set services(e) {
                services = e
            },
            get serviceDetails() {
                return serviceDetails
            },
            set serviceDetails(e) {
                serviceDetails = e
            },
            get setServiceBudget() {
                return mS
            },
            set setServiceBudget(e) {
                mS = e
            },
            get setServiceFee() {
                return hS
            },
            set setServiceFee(e) {
                hS = e
            },
            get resetService() {
                return gS
            },
            set resetService(e) {
                gS = e
            }
        });
        const pS = "eventJournal";
        var fS = Xr(pS, "eventMap"),
            xS = $r(pS, "events");

        function vS() {
            tl(pS, "openJournal")
        }

        function _S() {
            tl(pS, "closeJournal")
        }
        X.add("game-ui/game/data-binding/event-journal-bindings.ts", {
            get eventMap() {
                return eventMap
            },
            set eventMap(e) {
                eventMap = e
            },
            get events() {
                return events
            },
            set events(e) {
                events = e
            },
            get onOpenJournal() {
                return vS
            },
            set onOpenJournal(e) {
                vS = e
            },
            get onCloseJournal() {
                return _S
            },
            set onCloseJournal(e) {
                _S = e
            }
        }), X.add("game-ui/game/data-binding/infoview-types.ts", {});
        const bS = "lifePath";
        var TS;
        ! function (e) {
            e.Chirp = "chirper.Chirp", e.LogEntry = "lifePath.LifePathEvent"
        }(TS || (TS = {}));
        var ES = $r(bS, "followedCitizens"),
            IS = Xr(bS, "lifePathDetails"),
            yS = Xr(bS, "lifePathItems"),
            jS = $r(bS, "maxFollowedCitizens");

        function SS(e) {
            tl(bS, "followCitizen", e)
        }

        function CS(e) {
            tl(bS, "unfollowCitizen", e)
        }
        X.add("game-ui/game/data-binding/life-path-bindings.ts", {
            get LifePathItemType() {
                return TS
            },
            set LifePathItemType(e) {
                TS = e
            },
            get followedCitizens() {
                return followedCitizens
            },
            set followedCitizens(e) {
                followedCitizens = e
            },
            get lifePathDetails() {
                return lifePathDetails
            },
            set lifePathDetails(e) {
                lifePathDetails = e
            },
            get lifePathItems() {
                return lifePathItems
            },
            set lifePathItems(e) {
                lifePathItems = e
            },
            get maxFollowedCitizens() {
                return maxFollowedCitizens
            },
            set maxFollowedCitizens(e) {
                maxFollowedCitizens = e
            },
            get followCitizen() {
                return SS
            },
            set followCitizen(e) {
                SS = e
            },
            get unfollowCitizen() {
                return CS
            },
            set unfollowCitizen(e) {
                CS = e
            }
        });
        const NS = "mapTiles";
        var wS, OS = $r(NS, "mapTilePanelVisible"),
            PS = $r(NS, "mapTileViewActive"),
            LS = $r(NS, "buildableLand"),
            AS = $r(NS, "water"),
            MS = $r(NS, "resources"),
            RS = $r(NS, "purchasePrice"),
            kS = $r(NS, "purchaseUpkeep"),
            DS = $r(NS, "purchaseFlags"),
            FS = $r(NS, "expansionPermits"),
            US = $r(NS, "expansionPermitCost");

        function BS(e) {
            tl(NS, "setMapTileViewActive", e)
        }

        function GS() {
            BS(!1)
        }

        function VS() {
            tl(NS, "purchaseMapTiles")
        }! function (e) {
            e[e.None = 0] = "None", e[e.NoCurrentlyAvailable = 1] = "NoCurrentlyAvailable", e[e.NoAvailable = 2] = "NoAvailable", e[e.NoSelection = 4] = "NoSelection", e[e.InsufficientFunds = 8] = "InsufficientFunds", e[e.InsufficientPermits = 16] = "InsufficientPermits"
        }(wS || (wS = {})), X.add("game-ui/game/data-binding/map-tile-bindings.ts", {
            get mapTilePanelVisible() {
                return mapTilePanelVisible
            },
            set mapTilePanelVisible(e) {
                mapTilePanelVisible = e
            },
            get mapTileViewActive() {
                return mapTileViewActive
            },
            set mapTileViewActive(e) {
                mapTileViewActive = e
            },
            get buildableLand() {
                return buildableLand
            },
            set buildableLand(e) {
                buildableLand = e
            },
            get availableWater() {
                return availableWater
            },
            set availableWater(e) {
                availableWater = e
            },
            get resources() {
                return resources
            },
            set resources(e) {
                resources = e
            },
            get purchasePrice() {
                return purchasePrice
            },
            set purchasePrice(e) {
                purchasePrice = e
            },
            get purchaseUpkeep() {
                return purchaseUpkeep
            },
            set purchaseUpkeep(e) {
                purchaseUpkeep = e
            },
            get purchaseFlags() {
                return purchaseFlags
            },
            set purchaseFlags(e) {
                purchaseFlags = e
            },
            get permits() {
                return permits
            },
            set permits(e) {
                permits = e
            },
            get permitCost() {
                return permitCost
            },
            set permitCost(e) {
                permitCost = e
            },
            get setMapTileViewActive() {
                return BS
            },
            set setMapTileViewActive(e) {
                BS = e
            },
            get disableMapTileView() {
                return GS
            },
            set disableMapTileView(e) {
                GS = e
            },
            get purchaseMapTiles() {
                return VS
            },
            set purchaseMapTiles(e) {
                VS = e
            },
            get MapTileStatus() {
                return wS
            },
            set MapTileStatus(e) {
                wS = e
            }
        });
        var HS = "photoMode";

        function KS() {
            tl(HS, "resetCamera")
        }
        var WS = $r(HS, "overlayHidden");

        function zS(e) {
            tl(HS, "setOverlayHidden", e)
        }
        var YS = $r(HS, "orbitCameraActive");

        function $S() {
            tl(HS, "toggleOrbitCameraActive")
        }

        function qS() {
            tl(HS, "takeScreenshot")
        }

        function XS(e) {
            tl(HS, "selectTab", e)
        }

        function QS(e) {
            tl(HS, "setCinematicCameraVisible", e)
        }
        var ZS, JS = $r(HS, "cinematicCameraVisible"),
            eC = $r(HS, "tabs"),
            tC = $r(HS, "activeTab");
        ! function (e) {
            e.DropdownField = "Game.UI.Widgets.DropdownField"
        }(ZS || (ZS = {}));
        var nC = {
                group: HS,
                path: []
            },
            sC = $r(HS, "children");
        X.add("game-ui/game/data-binding/photo-mode-bindings.ts", {
            get group() {
                return HS
            },
            set group(e) {
                HS = e
            },
            get resetCamera() {
                return KS
            },
            set resetCamera(e) {
                KS = e
            },
            get overlayHidden() {
                return overlayHidden
            },
            set overlayHidden(e) {
                overlayHidden = e
            },
            get setOverlayHidden() {
                return zS
            },
            set setOverlayHidden(e) {
                zS = e
            },
            get orbitCameraActive() {
                return orbitCameraActive
            },
            set orbitCameraActive(e) {
                orbitCameraActive = e
            },
            get toggleOrbitCameraActive() {
                return $S
            },
            set toggleOrbitCameraActive(e) {
                $S = e
            },
            get takeScreenshot() {
                return qS
            },
            set takeScreenshot(e) {
                qS = e
            },
            get selectTab() {
                return XS
            },
            set selectTab(e) {
                XS = e
            },
            get toggleCinematicCamera() {
                return QS
            },
            set toggleCinematicCamera(e) {
                QS = e
            },
            get cinematicCameraVisible() {
                return cinematicCameraVisible
            },
            set cinematicCameraVisible(e) {
                cinematicCameraVisible = e
            },
            get tabs() {
                return tabs
            },
            set tabs(e) {
                tabs = e
            },
            get selectedTab() {
                return selectedTab
            },
            set selectedTab(e) {
                selectedTab = e
            },
            get PhotoWidgetType() {
                return ZS
            },
            set PhotoWidgetType(e) {
                ZS = e
            },
            get root() {
                return nC
            },
            set root(e) {
                nC = e
            },
            get adjustments() {
                return adjustments
            },
            set adjustments(e) {
                adjustments = e
            }
        });
        const iC = "policies";
        var aC = $r(iC, "cityPolicies"),
            oC = el(iC, "setCityPolicy");

        function rC(e, t, n = 0) {
            oC(e, t, n)
        }
        var lC, cC, uC, dC, mC = el(iC, "setPolicy");

        function hC(e, t, n = 0) {
            mC(e, t, n)
        }
        X.add("game-ui/game/data-binding/policy-bindings.ts", {
                get cityPolicies() {
                    return cityPolicies
                },
                set cityPolicies(e) {
                    cityPolicies = e
                },
                get setCityPolicy() {
                    return rC
                },
                set setCityPolicy(e) {
                    rC = e
                },
                get setPolicy() {
                    return hC
                },
                set setPolicy(e) {
                    hC = e
                }
            }),
            function (e) {
                e.CityModifier = "prefabs.CityModifierEffect", e.LocalModifier = "prefabs.LocalModifierEffect", e.LeisureProvider = "prefabs.LeisureProviderEffect", e.AdjustHappinessEffect = "prefabs.AdjustHappinessEffect"
            }(lC || (lC = {})),
            function (e) {
                e.Attractiveness = "Attractiveness", e.CrimeAccumulation = "CrimeAccumulation", e.PoliceStationUpkeep = "PoliceStationUpkeep", e.DisasterWarningTime = "DisasterWarningTime", e.DisasterDamageRate = "DisasterDamageRate", e.DiseaseProbability = "DiseaseProbability", e.ParkEntertainment = "ParkEntertainment", e.CriminalMonitorProbability = "CriminalMonitorProbability", e.IndustrialAirPollution = "IndustrialAirPollution", e.IndustrialGroundPollution = "IndustrialGroundPollution", e.IndustrialGarbage = "IndustrialGarbage", e.RecoveryFailChange = "RecoveryFailChange", e.OreResourceAmount = "OreResourceAmount", e.OilResourceAmount = "OilResourceAmount", e.UniversityInterest = "UniversityInterest", e.OfficeSoftwareDemand = "OfficeSoftwareDemand", e.IndustrialElectronicsDemand = "IndustrialElectronicsDemand", e.OfficeSoftwareEfficiency = "OfficeSoftwareEfficiency", e.IndustrialElectronicsEfficiency = "IndustrialElectronicsEfficiency", e.TelecomCapacity = "TelecomCapacity", e.Entertainment = "Entertainment", e.HighwayTrafficSafety = "HighwayTrafficSafety", e.PrisonTime = "PrisonTime", e.CrimeProbability = "CrimeProbability", e.CollegeGraduation = "CollegeGraduation", e.UniversityGraduation = "UniversityGraduation", e.ImportCost = "ImportCost", e.LoanInterest = "LoanInterest", e.BuildingLevelingCost = "BuildingLevelingCost", e.ExportCost = "ExportCost", e.TaxiStartingFee = "TaxiStartingFee", e.IndustrialEfficiency = "IndustrialEfficiency", e.OfficeEfficiency = "OfficeEfficiency", e.PollutionHealthAffect = "PollutionHealthAffect", e.HospitalEfficiency = "HospitalEfficiency"
            }(cC || (cC = {})),
            function (e) {
                e.CrimeAccumulation = "CrimeAccumulation", e.ForestFireResponseTime = "ForestFireResponseTime", e.ForestFireHazard = "ForestFireHazard", e.Wellbeing = "Wellbeing", e.Health = "Health"
            }(uC || (uC = {})),
            function (e) {
                e.Meals = "Meals", e.Entertainment = "Entertainment", e.Commercial = "Commercial", e.CityIndoors = "CityIndoors", e.Travel = "Travel", e.CityPark = "CityPark", e.CityBeach = "CityBeach", e.Attractions = "Attractions", e.Relaxation = "Relaxation", e.Sightseeing = "Sightseeing"
            }(dC || (dC = {})), X.add("game-ui/game/data-binding/prefab/prefab-effects.ts", {
                get PrefabEffectType() {
                    return lC
                },
                set PrefabEffectType(e) {
                    lC = e
                },
                get CityModifierType() {
                    return cC
                },
                set CityModifierType(e) {
                    cC = e
                },
                get LocalModifierType() {
                    return uC
                },
                set LocalModifierType(e) {
                    uC = e
                },
                get LeisureType() {
                    return dC
                },
                set LeisureType(e) {
                    dC = e
                }
            });
        var gC, pC = "prefabs.ConsumptionProperty",
            fC = "prefabs.PollutionProperty";
        ! function (e) {
            e[e.none = 0] = "none", e[e.low = 1] = "low", e[e.medium = 2] = "medium", e[e.high = 3] = "high"
        }(gC || (gC = {}));
        var xC, vC = "prefabs.ElectricityProperty";
        ! function (e) {
            e[e.low = 0] = "low", e[e.high = 1] = "high", e[e.both = 2] = "both"
        }(xC || (xC = {}));
        var _C, bC, TC = "prefabs.TransportStopProperty",
            EC = "prefabs.UpkeepIntProperty",
            IC = "prefabs.UpkeepInt2Property";
        X.add("game-ui/game/data-binding/prefab/prefab-properties.ts", {
                get CONSUMPTION_PROPERTY() {
                    return pC
                },
                set CONSUMPTION_PROPERTY(e) {
                    pC = e
                },
                get POLLUTION_PROPERTY() {
                    return fC
                },
                set POLLUTION_PROPERTY(e) {
                    fC = e
                },
                get Pollution() {
                    return gC
                },
                set Pollution(e) {
                    gC = e
                },
                get ELECTRICITY_PROPERTY() {
                    return vC
                },
                set ELECTRICITY_PROPERTY(e) {
                    vC = e
                },
                get Voltage() {
                    return xC
                },
                set Voltage(e) {
                    xC = e
                },
                get TRANSPORT_STOP_PROPERTY() {
                    return TC
                },
                set TRANSPORT_STOP_PROPERTY(e) {
                    TC = e
                },
                get UPKEEPNUMBER_PROPERTY() {
                    return EC
                },
                set UPKEEPNUMBER_PROPERTY(e) {
                    EC = e
                },
                get UPKEEPNUMBER2_PROPERTY() {
                    return IC
                },
                set UPKEEPNUMBER2_PROPERTY(e) {
                    IC = e
                }
            }),
            function (e) {
                e[e.none = 0] = "none", e[e.residential = 1] = "residential", e[e.commercial = 2] = "commercial", e[e.industrial = 3] = "industrial"
            }(_C || (_C = {})),
            function (e) {
                e.Milestone = "prefabs.MilestoneRequirement", e.DevTreeNode = "prefabs.DevTreeNodeRequirement", e.StrictObjectBuilt = "prefabs.StrictObjectBuiltRequirement", e.ZoneBuilt = "prefabs.ZoneBuiltRequirement", e.Citizen = "prefabs.CitizenRequirement", e.Processing = "prefabs.ProcessingRequirement", e.ObjectBuilt = "prefabs.ObjectBuiltRequirement", e.Unlock = "prefabs.UnlockRequirement", e.Tutorial = "prefabs.TutorialRequirement"
            }(bC || (bC = {})), X.add("game-ui/game/data-binding/prefab/prefab-requirements.ts", {
                get AreaType() {
                    return _C
                },
                set AreaType(e) {
                    _C = e
                },
                get PrefabRequirementType() {
                    return bC
                },
                set PrefabRequirementType(e) {
                    bC = e
                }
            });
        const yC = "devTree";
        var jC = $r(yC, "points"),
            SC = $r(yC, "services"),
            CC = Xr(yC, "serviceDetails"),
            NC = Xr(yC, "nodes"),
            wC = Xr(yC, "nodeDetails"),
            OC = qr(Lx),
            PC = qr(Lx);

        function LC(e) {
            tl(yC, "purchaseNode", e)
        }
        X.add("game-ui/game/data-binding/progression/dev-tree-bindings.ts", {
            get devPoints() {
                return devPoints
            },
            set devPoints(e) {
                devPoints = e
            },
            get services() {
                return services
            },
            set services(e) {
                services = e
            },
            get serviceDetails() {
                return serviceDetails
            },
            set serviceDetails(e) {
                serviceDetails = e
            },
            get nodes() {
                return nodes
            },
            set nodes(e) {
                nodes = e
            },
            get nodeDetails() {
                return nodeDetails
            },
            set nodeDetails(e) {
                nodeDetails = e
            },
            get selectedDevTree() {
                return selectedDevTree
            },
            set selectedDevTree(e) {
                selectedDevTree = e
            },
            get selectedNode() {
                return selectedNode
            },
            set selectedNode(e) {
                selectedNode = e
            },
            get purchaseNode() {
                return LC
            },
            set purchaseNode(e) {
                LC = e
            }
        });
        var AC = $r("feature", "lockedFeatures");

        function MC(e) {
            const t = (0, Y.useCallback)(((t, n) => ({
                locked: void 0 !== n.find((t => t.name === e)),
                requirements: n.find((t => t.name === e))?.requirements || {
                    requireAny: [],
                    requireAll: []
                }
            })), [e]);
            return il(AC, t, {
                locked: !1,
                requirements: {
                    requireAny: [],
                    requireAll: []
                }
            })
        }

        function RC(e) {
            const t = (0, Y.useCallback)(((t, n) => void 0 !== n.find((t => t.name === e))), [e]);
            return il(AC, t, !1)
        }

        function kC(e) {
            return void 0 !== AC.value?.find((t => t.name === e))
        }
        X.add("game-ui/game/data-binding/progression/feature-bindings.ts", {
            get lockedFeatures() {
                return lockedFeatures
            },
            set lockedFeatures(e) {
                lockedFeatures = e
            },
            get useFeatureUnlocking() {
                return MC
            },
            set useFeatureUnlocking(e) {
                MC = e
            },
            get useFeatureLocked() {
                return RC
            },
            set useFeatureLocked(e) {
                RC = e
            },
            get isFeatureLocked() {
                return kC
            },
            set isFeatureLocked(e) {
                kC = e
            }
        });
        var DC = {
                r: 0,
                g: 0,
                b: 0,
                a: 1
            },
            FC = {
                r: 1,
                g: 1,
                b: 1,
                a: 1
            },
            UC = {
                r: 0,
                g: 0,
                b: 0,
                a: 0
            };

        function BC(e, t, n) {
            return {
                r: e / 255,
                g: t / 255,
                b: n / 255,
                a: 1
            }
        }

        function GC(e, t, n, s) {
            return {
                r: e / 255,
                g: t / 255,
                b: n / 255,
                a: s
            }
        }

        function VC(e, t) {
            return Math.abs(e.r - t.r) < .001 && Math.abs(e.g - t.g) < .001 && Math.abs(e.b - t.b) < .001 && Math.abs(e.a - t.a) < .001
        }

        function HC({
            r: e,
            g: t,
            b: n
        }) {
            return Math.max(e, t, n) === Math.min(e, t, n)
        }

        function KC(e, t) {
            return {
                ...e,
                a: t
            }
        }

        function WC({
            r: e,
            g: t,
            b: n,
            a: s
        }) {
            return `rgba(${Math.round(255*e)},${Math.round(255*t)},${Math.round(255*n)},${s.toString().replace(",",".")})`
        }

        function zC(e) {
            if (null == e) return null;
            const t = e.match(/^rgba\((\d+),\s*(\d+),\s*(\d+),\s*(\d+(?:\.\d+)?)\)$/);
            return t && 5 === t.length ? {
                r: Od(parseInt(t[1]) / 255, 0, 1),
                g: Od(parseInt(t[2]) / 255, 0, 1),
                b: Od(parseInt(t[3]) / 255, 0, 1),
                a: Od(parseFloat(t[4]), 0, 1)
            } : null
        }

        function YC({
            r: e,
            g: t,
            b: n
        }) {
            return $C(e) + $C(t) + $C(n)
        }

        function $C(e) {
            const t = Math.round(255 * e).toString(16).toUpperCase();
            return 1 === t.length ? "0" + t : t
        }

        function qC(e) {
            e = e.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, ((e, t, n, s) => t + t + n + n + s + s));
            const t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i.exec(e);
            if (!t) return null;
            const n = t.length > 3 && parseInt(t[4], 16) ? parseInt(t[4], 16) / 255 : 1;
            return {
                r: parseInt(t[1], 16) / 255,
                g: parseInt(t[2], 16) / 255,
                b: parseInt(t[3], 16) / 255,
                a: n
            }
        }

        function XC({
            h: e,
            s: t,
            v: n,
            a: s
        }) {
            let i = 0,
                a = 0,
                o = 0;
            const r = Math.floor(6 * e),
                l = 6 * e - r,
                c = n * (1 - t),
                u = n * (1 - l * t),
                d = n * (1 - (1 - l) * t);
            switch (r % 6) {
            case 0:
                i = n, a = d, o = c;
                break;
            case 1:
                i = u, a = n, o = c;
                break;
            case 2:
                i = c, a = n, o = d;
                break;
            case 3:
                i = c, a = u, o = n;
                break;
            case 4:
                i = d, a = c, o = n;
                break;
            case 5:
                i = n, a = c, o = u
            }
            return {
                r: i,
                g: a,
                b: o,
                a: s
            }
        }

        function QC({
            r: e,
            g: t,
            b: n,
            a: s
        }, i = 0) {
            const a = Math.max(e, t, n),
                o = Math.min(e, t, n),
                r = a - o;
            let l = i;
            const c = 0 === a ? 0 : r / a,
                u = a;
            if (a !== o) {
                switch (a) {
                case e:
                    l = (t - n) / r + (t < n ? 6 : 0);
                    break;
                case t:
                    l = (n - e) / r + 2;
                    break;
                case n:
                    l = (e - t) / r + 4
                }
                l /= 6
            }
            return {
                h: l,
                s: c,
                v: u,
                a: s
            }
        }

        function ZC(e, t, n) {
            return {
                r: Pd(e.r, t.r, n),
                g: Pd(e.g, t.g, n),
                b: Pd(e.b, t.b, n),
                a: Pd(e.a, t.a, n)
            }
        }

        function JC(e, t, n) {
            return {
                h: Pd(e.h, t.h, n),
                s: Pd(e.s, t.s, n),
                v: Pd(e.v, t.v, n),
                a: Pd(e.a, t.a, n)
            }
        }

        function eN(e, t = "to right") {
            return `linear-gradient(${t}, ${e.stops.map((e=>`${"string"==typeof e.color?e.color:WC(e.color)} ${100*e.offset}%`)).join(",")})`
        }
        X.add("game-ui/common/color.ts", {
            get black() {
                return DC
            },
            set black(e) {
                DC = e
            },
            get white() {
                return FC
            },
            set white(e) {
                FC = e
            },
            get transparent() {
                return UC
            },
            set transparent(e) {
                UC = e
            },
            get rgb() {
                return BC
            },
            set rgb(e) {
                BC = e
            },
            get rgba() {
                return GC
            },
            set rgba(e) {
                GC = e
            },
            get isColorEqual() {
                return VC
            },
            set isColorEqual(e) {
                VC = e
            },
            get isAchromatic() {
                return HC
            },
            set isAchromatic(e) {
                HC = e
            },
            get withAlpha() {
                return KC
            },
            set withAlpha(e) {
                KC = e
            },
            get formatColor() {
                return WC
            },
            set formatColor(e) {
                WC = e
            },
            get parseRgba() {
                return zC
            },
            set parseRgba(e) {
                zC = e
            },
            get formatHexColor() {
                return YC
            },
            set formatHexColor(e) {
                YC = e
            },
            get parseHexColor() {
                return qC
            },
            set parseHexColor(e) {
                qC = e
            },
            get hsvaToRgba() {
                return XC
            },
            set hsvaToRgba(e) {
                XC = e
            },
            get rgbaToHsva() {
                return QC
            },
            set rgbaToHsva(e) {
                QC = e
            },
            get lerpColor() {
                return ZC
            },
            set lerpColor(e) {
                ZC = e
            },
            get lerpHsva() {
                return JC
            },
            set lerpHsva(e) {
                JC = e
            },
            get buildCssLinearGradient() {
                return eN
            },
            set buildCssLinearGradient(e) {
                eN = e
            }
        });
        const tN = "milestone";
        var nN, sN = {
            entity: Lx,
            index: 0,
            xpRequirement: 0,
            reward: 0,
            devTreePoints: 0,
            mapTiles: 0,
            loanLimit: 0,
            image: "Media/Placeholder.svg",
            backgroundColor: UC,
            accentColor: {
                r: .18,
                g: .235,
                b: .337,
                a: 1
            },
            textColor: FC,
            locked: !1
        };
        ! function (e) {
            e.Feature = "milestone.Feature", e.Service = "milestone.Service", e.Zone = "milestone.Asset", e.Policy = "milestone.Policy"
        }(nN || (nN = {}));
        var iN = $r(tN, "achievedMilestone"),
            aN = $r(tN, "achievedMilestoneXP"),
            oN = $r(tN, "nextMilestoneXP"),
            rN = $r(tN, "totalXP"),
            lN = Zr(tN, "xpMessageAdded"),
            cN = $r(tN, "maxMilestoneReached"),
            uN = $r(tN, "milestones"),
            dN = $r(tN, "unlockedMilestone", Lx);

        function mN() {
            tl(tN, "clearUnlockedMilestone")
        }
        var hN = Xr(tN, "milestoneDetails"),
            gN = Xr(tN, "milestoneUnlocks"),
            pN = Xr(tN, "unlockDetails");
        X.add("game-ui/game/data-binding/progression/milestone-bindings.ts", {
            get defaultMilestoneDetails() {
                return sN
            },
            set defaultMilestoneDetails(e) {
                sN = e
            },
            get MilestoneUnlockType() {
                return nN
            },
            set MilestoneUnlockType(e) {
                nN = e
            },
            get achievedMilestone() {
                return achievedMilestone
            },
            set achievedMilestone(e) {
                achievedMilestone = e
            },
            get achievedMilestoneXP() {
                return achievedMilestoneXP
            },
            set achievedMilestoneXP(e) {
                achievedMilestoneXP = e
            },
            get nextMilestoneXP() {
                return nextMilestoneXP
            },
            set nextMilestoneXP(e) {
                nextMilestoneXP = e
            },
            get totalXP() {
                return totalXP
            },
            set totalXP(e) {
                totalXP = e
            },
            get xpMessageAdded() {
                return xpMessageAdded
            },
            set xpMessageAdded(e) {
                xpMessageAdded = e
            },
            get maxMilestoneReached() {
                return maxMilestoneReached
            },
            set maxMilestoneReached(e) {
                maxMilestoneReached = e
            },
            get milestones() {
                return milestones
            },
            set milestones(e) {
                milestones = e
            },
            get unlockedMilestone() {
                return unlockedMilestone
            },
            set unlockedMilestone(e) {
                unlockedMilestone = e
            },
            get clearUnlockedMilestone() {
                return mN
            },
            set clearUnlockedMilestone(e) {
                mN = e
            },
            get milestoneDetails() {
                return milestoneDetails
            },
            set milestoneDetails(e) {
                milestoneDetails = e
            },
            get milestoneUnlocks() {
                return milestoneUnlocks
            },
            set milestoneUnlocks(e) {
                milestoneUnlocks = e
            },
            get unlockDetails() {
                return unlockDetails
            },
            set unlockDetails(e) {
                unlockDetails = e
            }
        });
        const fN = "signatureBuildings";
        var xN = $r(fN, "unlockedSignatures");

        function vN() {
            tl(fN, "clearUnlockedSignatures")
        }
        X.add("game-ui/game/data-binding/progression/signature-building-bindings.ts", {
            get unlockedSignatures() {
                return unlockedSignatures
            },
            set unlockedSignatures(e) {
                unlockedSignatures = e
            },
            get clearUnlockedSignatures() {
                return vN
            },
            set clearUnlockedSignatures(e) {
                vN = e
            }
        });
        const _N = "radio";
        var bN = $r(_N, "enabled"),
            TN = $r(_N, "volume"),
            EN = $r(_N, "paused"),
            IN = $r(_N, "muted"),
            yN = $r(_N, "skipAds"),
            jN = $r(_N, "emergencyMode"),
            SN = $r(_N, "emergencyFocusable"),
            CN = $r(_N, "emergencyMessage"),
            NN = $r(_N, "selectedNetwork"),
            wN = $r(_N, "selectedStation"),
            ON = $r(_N, "networks"),
            PN = $r(_N, "stations"),
            LN = $r(_N, "currentSegment"),
            AN = Zr(_N, "segmentChanged");

        function MN(e) {
            tl(_N, "setVolume", e)
        }

        function RN(e) {
            tl(_N, "setPaused", e)
        }

        function kN() {
            RN(!EN.value)
        }

        function DN(e) {
            tl(_N, "setMuted", e)
        }

        function FN() {
            DN(!IN.value)
        }

        function UN(e) {
            tl(_N, "setSkipAds", e)
        }

        function BN() {
            UN(!yN.value)
        }

        function GN() {
            tl(_N, "playPrevious")
        }

        function VN() {
            tl(_N, "playNext")
        }

        function HN() {
            tl(_N, "focusEmergency")
        }

        function KN(e) {
            tl(_N, "selectNetwork", e)
        }

        function WN(e) {
            tl(_N, "selectStation", e)
        }

        function zN(e) {
            return null == e || 0 === e.length ? null : e[0]
        }

        function YN(e, t) {
            return null == e || 0 === e.length || null == e[0] ? null : e[0][t]
        }

        function $N(e, t, n) {
            const s = qN(t, e.length, n);
            return null != s ? e[s] : null
        }

        function qN(e, t, n) {
            return 0 === t ? null : -1 === e ? 0 : e === t - 1 ? n ? 0 : e : e + 1
        }

        function XN(e, t, n) {
            const s = QN(t, e.length, n);
            return null != s ? e[s] : null
        }

        function QN(e, t, n) {
            return 0 === t ? null : -1 === e ? 0 : 0 === e ? n ? t - 1 : 0 : e - 1
        }
        X.add("game-ui/game/data-binding/radio-bindings.ts", {
            get radioEnabled() {
                return radioEnabled
            },
            set radioEnabled(e) {
                radioEnabled = e
            },
            get volume() {
                return volume
            },
            set volume(e) {
                volume = e
            },
            get paused() {
                return paused
            },
            set paused(e) {
                paused = e
            },
            get muted() {
                return muted
            },
            set muted(e) {
                muted = e
            },
            get skipAds() {
                return skipAds
            },
            set skipAds(e) {
                skipAds = e
            },
            get emergencyMode() {
                return emergencyMode
            },
            set emergencyMode(e) {
                emergencyMode = e
            },
            get emergencyFocusable() {
                return emergencyFocusable
            },
            set emergencyFocusable(e) {
                emergencyFocusable = e
            },
            get emergencyMessage() {
                return emergencyMessage
            },
            set emergencyMessage(e) {
                emergencyMessage = e
            },
            get selectedNetwork() {
                return selectedNetwork
            },
            set selectedNetwork(e) {
                selectedNetwork = e
            },
            get selectedStation() {
                return selectedStation
            },
            set selectedStation(e) {
                selectedStation = e
            },
            get networks() {
                return networks
            },
            set networks(e) {
                networks = e
            },
            get stations() {
                return stations
            },
            set stations(e) {
                stations = e
            },
            get currentSegment() {
                return currentSegment
            },
            set currentSegment(e) {
                currentSegment = e
            },
            get segmentChanged() {
                return segmentChanged
            },
            set segmentChanged(e) {
                segmentChanged = e
            },
            get setVolume() {
                return MN
            },
            set setVolume(e) {
                MN = e
            },
            get setPaused() {
                return RN
            },
            set setPaused(e) {
                RN = e
            },
            get togglePaused() {
                return kN
            },
            set togglePaused(e) {
                kN = e
            },
            get setMuted() {
                return DN
            },
            set setMuted(e) {
                DN = e
            },
            get toggleMuted() {
                return FN
            },
            set toggleMuted(e) {
                FN = e
            },
            get setSkipAds() {
                return UN
            },
            set setSkipAds(e) {
                UN = e
            },
            get toggleSkipAds() {
                return BN
            },
            set toggleSkipAds(e) {
                BN = e
            },
            get playPrevious() {
                return GN
            },
            set playPrevious(e) {
                GN = e
            },
            get playNext() {
                return VN
            },
            set playNext(e) {
                VN = e
            },
            get focusEmergency() {
                return HN
            },
            set focusEmergency(e) {
                HN = e
            },
            get selectNetwork() {
                return KN
            },
            set selectNetwork(e) {
                KN = e
            },
            get selectStation() {
                return WN
            },
            set selectStation(e) {
                WN = e
            }
        });
        var ZN = (e, t, n = 0) => {
            const s = new Array(t);
            for (let i = n; i < n + t; ++i) s[i - n] = e(i);
            return s
        };

        function JN(e, t) {
            return e.some((e => (e.length > t.length ? e : t).every(((n, s) => e[s] === t[s]))))
        }

        function ew(e) {
            return null != e
        }
        X.add("game-ui/common/utils/arrays.ts", {
            get firstOrNull() {
                return zN
            },
            set firstOrNull(e) {
                zN = e
            },
            get firstPropertyOrNull() {
                return YN
            },
            set firstPropertyOrNull(e) {
                YN = e
            },
            get getNextItem() {
                return $N
            },
            set getNextItem(e) {
                $N = e
            },
            get getNextIndex() {
                return qN
            },
            set getNextIndex(e) {
                qN = e
            },
            get getPreviousItem() {
                return XN
            },
            set getPreviousItem(e) {
                XN = e
            },
            get getPreviousIndex() {
                return QN
            },
            set getPreviousIndex(e) {
                QN = e
            },
            get mapRange() {
                return ZN
            },
            set mapRange(e) {
                ZN = e
            },
            get containsArray() {
                return JN
            },
            set containsArray(e) {
                JN = e
            },
            get notNull() {
                return ew
            },
            set notNull(e) {
                ew = e
            }
        });
        const tw = "selectedInfo";
        var nw, sw, iw, aw, ow, rw = $r(tw, "selectedEntity"),
            lw = $r(tw, "selectedTrailerController"),
            cw = $r(tw, "selectedUITag"),
            uw = $r(tw, "activeSelection"),
            dw = $r(tw, "position"),
            mw = $r(tw, "topSections"),
            hw = $r(tw, "middleSections"),
            gw = $r(tw, "bottomSections"),
            pw = $r(tw, "titleSection"),
            fw = $r(tw, "developerSection"),
            xw = $r(tw, "lineVisualizerSection"),
            vw = $r(tw, "householdSidebarSection"),
            _w = $r(tw, "tooltipTags"),
            bw = $r(tw, "selectedRoute"),
            Tw = el(tw, "selectEntity"),
            Ew = el(tw, "setSelectedRoute"),
            Iw = Jr(tw, "clearSelection");
        ! function (e) {
            e.Resource = "Game.UI.InGame.ResourceSection", e.LocalServices = "Game.UI.InGame.LocalServicesSection", e.Actions = "Game.UI.InGame.ActionsSection", e.Description = "Game.UI.InGame.DescriptionSection", e.Developer = "Game.UI.InGame.DeveloperSection", e.Residents = "Game.UI.InGame.ResidentsSection", e.HouseholdSidebar = "Game.UI.InGame.HouseholdSidebarSection", e.Districts = "Game.UI.InGame.DistrictsSection", e.Title = "Game.UI.InGame.TitleSection", e.Notifications = "Game.UI.InGame.NotificationsSection", e.Policies = "Game.UI.InGame.PoliciesSection", e.Profitability = "Game.UI.InGame.ProfitabilitySection", e.AverageHappiness = "Game.UI.InGame.AverageHappinessSection", e.Schedule = "Game.UI.InGame.ScheduleSection", e.Line = "Game.UI.InGame.LineSection", e.Lines = "Game.UI.InGame.LinesSection", e.Color = "Game.UI.InGame.ColorSection", e.LineVisualizer = "Game.UI.InGame.LineVisualizerSection", e.TicketPrice = "Game.UI.InGame.TicketPriceSection", e.VehicleCount = "Game.UI.InGame.VehicleCountSection", e.Attractiveness = "Game.UI.InGame.AttractivenessSection", e.Efficiency = "Game.UI.InGame.EfficiencySection", e.Employees = "Game.UI.InGame.EmployeesSection", e.Upkeep = "Game.UI.InGame.UpkeepSection", e.Level = "Game.UI.InGame.LevelSection", e.Education = "Game.UI.InGame.EducationSection", e.Pollution = "Game.UI.InGame.PollutionSection", e.Healthcare = "Game.UI.InGame.HealthcareSection", e.Deathcare = "Game.UI.InGame.DeathcareSection", e.Garbage = "Game.UI.InGame.GarbageSection", e.Police = "Game.UI.InGame.PoliceSection", e.Vehicles = "Game.UI.InGame.VehiclesSection", e.DispatchedVehicles = "Game.UI.InGame.DispatchedVehiclesSection", e.Electricity = "Game.UI.InGame.ElectricitySection", e.Transformer = "Game.UI.InGame.TransformerSection", e.Battery = "Game.UI.InGame.BatterySection", e.Water = "Game.UI.InGame.WaterSection", e.Sewage = "Game.UI.InGame.SewageSection", e.Fire = "Game.UI.InGame.FireSection", e.Prison = "Game.UI.InGame.PrisonSection", e.Shelter = "Game.UI.InGame.ShelterSection", e.Parking = "Game.UI.InGame.ParkingSection", e.Park = "Game.UI.InGame.ParkSection", e.Mail = "Game.UI.InGame.MailSection", e.Road = "Game.UI.InGame.RoadSection", e.Company = "Game.UI.InGame.CompanySection", e.Storage = "Game.UI.InGame.StorageSection", e.PrivateVehicle = "Game.UI.InGame.PrivateVehicleSection", e.PublicTransportVehicle = "Game.UI.InGame.PublicTransportVehicleSection", e.CargoTransportVehicle = "Game.UI.InGame.CargoTransportVehicleSection", e.DeliveryVehicle = "Game.UI.InGame.DeliveryVehicleSection", e.HealthcareVehicle = "Game.UI.InGame.HealthcareVehicleSection", e.FireVehicle = "Game.UI.InGame.FireVehicleSection", e.PoliceVehicle = "Game.UI.InGame.PoliceVehicleSection", e.MaintenanceVehicle = "Game.UI.InGame.MaintenanceVehicleSection", e.DeathcareVehicle = "Game.UI.InGame.DeathcareVehicleSection", e.PostVehicle = "Game.UI.InGame.PostVehicleSection", e.GarbageVehicle = "Game.UI.InGame.GarbageVehicleSection", e.Passengers = "Game.UI.InGame.PassengersSection", e.Cargo = "Game.UI.InGame.CargoSection", e.Load = "Game.UI.InGame.LoadSection", e.Status = "Game.UI.InGame.StatusSection", e.Citizen = "Game.UI.InGame.CitizenSection", e.DummyHuman = "Game.UI.InGame.DummyHumanSection", e.Animal = "Game.UI.InGame.AnimalSection", e.SelectVehicles = "Game.UI.InGame.SelectVehiclesSection", e.DestroyedBuilding = "Game.UI.InGame.DestroyedBuildingSection", e.DestroyedTree = "Game.UI.InGame.DestroyedTreeSection", e.Comfort = "Game.UI.InGame.ComfortSection", e.Upgrades = "Game.UI.InGame.UpgradesSection", e.UpgradeProperties = "Game.UI.InGame.UpgradePropertiesSection"
        }(nw || (nw = {})),
        function (e) {
            e[e.none = 0] = "none", e[e.low = 1] = "low", e[e.medium = 2] = "medium", e[e.high = 3] = "high"
        }(sw || (sw = {})),
        function (e) {
            e[e.PostFacility = 0] = "PostFacility", e[e.MailBox = 1] = "MailBox"
        }(iw || (iw = {})),
        function (e) {
            e.GenericInfo = "Game.UI.InGame.GenericInfo", e.CapacityInfo = "Game.UI.InGame.CapacityInfo", e.InfoList = "Game.UI.InGame.InfoList"
        }(aw || (aw = {})),
        function (e) {
            e.Extension = "Extension", e.SubBuilding = "SubBuilding"
        }(ow || (ow = {}));
        var yw, jw = "Game.UI.InGame.LineVisualizerSection+LineStop",
            Sw = "Game.UI.InGame.LineVisualizerSection+LineVehicle";

        function Cw(e) {
            const t = ac();
            return (0, Y.useMemo)((() => {
                const n = Ow(t, e);
                return "" !== n ? n : null
            }), [t, e])
        }

        function Nw(e) {
            const t = ac();
            return (0, Y.useMemo)((() => {
                const n = e.filter(ew).map((e => Ow(t, e))).filter((e => "" !== e));
                return n.length > 0 ? n : null
            }), [e, t])
        }

        function ww(e, t, n, s = !1) {
            const i = (0, Y.useRef)(),
                a = ac(),
                o = sl(_w);
            return (0, Y.useMemo)((() => {
                const r = t => Ow(a, e + t),
                    l = [!s && Ow(a, e), ...t.map(r), ...o.filter((e => n.includes(e))).map(r)].filter(Boolean);
                if (!l.length) return null;
                const c = l.join("");
                return i.current && c === i.current.join("") ? i.current : (i.current = l, l)
            }), [a, o, e, s, n, t])
        }

        function Ow(e, t) {
            return Pc.SelectedInfoPanel.TOOLTIP.renderString(e, {
                hash: t,
                fallback: ""
            })
        }! function (e) {
            e.Citizen = "Citizen", e.Household = "Household", e.Building = "Building"
        }(yw || (yw = {})), X.add("game-ui/game/data-binding/selected-info-bindings.ts", {
            get selectedEntity() {
                return selectedEntity
            },
            set selectedEntity(e) {
                selectedEntity = e
            },
            get selectedTrailerController() {
                return selectedTrailerController
            },
            set selectedTrailerController(e) {
                selectedTrailerController = e
            },
            get selectedUITag() {
                return selectedUITag
            },
            set selectedUITag(e) {
                selectedUITag = e
            },
            get activeSelection() {
                return activeSelection
            },
            set activeSelection(e) {
                activeSelection = e
            },
            get selectedInfoPosition() {
                return selectedInfoPosition
            },
            set selectedInfoPosition(e) {
                selectedInfoPosition = e
            },
            get topSections() {
                return topSections
            },
            set topSections(e) {
                topSections = e
            },
            get middleSections() {
                return middleSections
            },
            set middleSections(e) {
                middleSections = e
            },
            get bottomSections() {
                return bottomSections
            },
            set bottomSections(e) {
                bottomSections = e
            },
            get titleSection() {
                return titleSection
            },
            set titleSection(e) {
                titleSection = e
            },
            get developerSection() {
                return developerSection
            },
            set developerSection(e) {
                developerSection = e
            },
            get lineVisualizerSection() {
                return lineVisualizerSection
            },
            set lineVisualizerSection(e) {
                lineVisualizerSection = e
            },
            get householdSidebarSection() {
                return householdSidebarSection
            },
            set householdSidebarSection(e) {
                householdSidebarSection = e
            },
            get tooltipTags() {
                return tooltipTags
            },
            set tooltipTags(e) {
                tooltipTags = e
            },
            get selectedRoute() {
                return selectedRoute
            },
            set selectedRoute(e) {
                selectedRoute = e
            },
            get selectEntity() {
                return Tw
            },
            set selectEntity(e) {
                Tw = e
            },
            get setSelectedRoute() {
                return Ew
            },
            set setSelectedRoute(e) {
                Ew = e
            },
            get clearSelection() {
                return Iw
            },
            set clearSelection(e) {
                Iw = e
            },
            get SectionType() {
                return nw
            },
            set SectionType(e) {
                nw = e
            },
            get Pollution() {
                return sw
            },
            set Pollution(e) {
                sw = e
            },
            get MailSectionType() {
                return iw
            },
            set MailSectionType(e) {
                iw = e
            },
            get DeveloperSubsectionType() {
                return aw
            },
            set DeveloperSubsectionType(e) {
                aw = e
            },
            get UpgradeType() {
                return ow
            },
            set UpgradeType(e) {
                ow = e
            },
            get LINE_STOP() {
                return jw
            },
            set LINE_STOP(e) {
                jw = e
            },
            get LINE_VEHICLE() {
                return Sw
            },
            set LINE_VEHICLE(e) {
                Sw = e
            },
            get HouseholdSidebarVariant() {
                return yw
            },
            set HouseholdSidebarVariant(e) {
                yw = e
            },
            get useTooltipParagraph() {
                return Cw
            },
            set useTooltipParagraph(e) {
                Cw = e
            },
            get useTooltipParagraphs() {
                return Nw
            },
            set useTooltipParagraphs(e) {
                Nw = e
            },
            get useGeneratedTooltipParagraphs() {
                return ww
            },
            set useGeneratedTooltipParagraphs(e) {
                ww = e
            }
        });
        const Pw = "statistics";
        var Lw = $r(Pw, "sampleRange"),
            Aw = $r(Pw, "sampleCount"),
            Mw = $r(Pw, "activeGroup"),
            Rw = $r(Pw, "activeCategory"),
            kw = $r(Pw, "stacked"),
            Dw = $r(Pw, "categories"),
            Fw = $r(Pw, "dataLabels"),
            Uw = Xr(Pw, "groups"),
            Bw = $r(Pw, "data"),
            Gw = $r(Pw, "selectedStatistics"),
            Vw = Xr(Pw, "unlockingRequirements"),
            Hw = $r(Pw, "updatesPerDay");

        function Kw(e) {
            tl(Pw, "addStat", Vu(e, "Game.UI.InGame.StatisticsUISystem+StatItem"))
        }

        function Ww(e) {
            tl(Pw, "removeStat", Vu(e, "Game.UI.InGame.StatisticsUISystem+StatItem"))
        }

        function zw() {
            tl(Pw, "clearStats")
        }

        function Yw(e) {
            tl(Pw, "setSampleRange", e)
        }
        X.add("game-ui/game/data-binding/statistics-bindings.ts", {
            get sampleRange() {
                return sampleRange
            },
            set sampleRange(e) {
                sampleRange = e
            },
            get sampleCount() {
                return sampleCount
            },
            set sampleCount(e) {
                sampleCount = e
            },
            get activeGroup() {
                return activeGroup
            },
            set activeGroup(e) {
                activeGroup = e
            },
            get activeCategory() {
                return activeCategory
            },
            set activeCategory(e) {
                activeCategory = e
            },
            get stacked() {
                return stacked
            },
            set stacked(e) {
                stacked = e
            },
            get statisticsCategories() {
                return statisticsCategories
            },
            set statisticsCategories(e) {
                statisticsCategories = e
            },
            get statLabels() {
                return statLabels
            },
            set statLabels(e) {
                statLabels = e
            },
            get statGroupsMap() {
                return statGroupsMap
            },
            set statGroupsMap(e) {
                statGroupsMap = e
            },
            get statsData() {
                return statsData
            },
            set statsData(e) {
                statsData = e
            },
            get selectedStatistics() {
                return selectedStatistics
            },
            set selectedStatistics(e) {
                selectedStatistics = e
            },
            get statUnlockingRequirements() {
                return statUnlockingRequirements
            },
            set statUnlockingRequirements(e) {
                statUnlockingRequirements = e
            },
            get updatesPerDay() {
                return updatesPerDay
            },
            set updatesPerDay(e) {
                updatesPerDay = e
            },
            get addStat() {
                return Kw
            },
            set addStat(e) {
                Kw = e
            },
            get removeStat() {
                return Ww
            },
            set removeStat(e) {
                Ww = e
            },
            get clearStats() {
                return zw
            },
            set clearStats(e) {
                zw = e
            },
            get setSampleRange() {
                return Yw
            },
            set setSampleRange(e) {
                Yw = e
            }
        });
        const $w = "taxation";
        var qw = $r($w, "taxRate"),
            Xw = $r($w, "taxEffect"),
            Qw = $r($w, "taxIncome"),
            Zw = $r($w, "minTaxRate"),
            Jw = $r($w, "maxTaxRate"),
            eO = $r($w, "areaTypes"),
            tO = Xr($w, "areaTaxRates"),
            nO = Xr($w, "areaTaxIncomes"),
            sO = Xr($w, "areaTaxEffects"),
            iO = Xr($w, "areaResourceTaxRanges"),
            aO = Xr($w, "areaResources"),
            oO = Xr($w, "resourceTaxRates"),
            rO = Xr($w, "resourceTaxIncomes"),
            lO = Xr($w, "taxResourceInfos"),
            cO = e => {
                tl($w, "setTaxRate", e)
            },
            uO = (e, t) => {
                tl($w, "setAreaTaxRate", e, t)
            },
            dO = (e, t, n) => {
                tl($w, "setResourceTaxRate", e, t, n)
            };
        X.add("game-ui/game/data-binding/taxation-bindings.ts", {
            get taxRate() {
                return qw
            },
            set taxRate(e) {
                qw = e
            },
            get taxEffect() {
                return Xw
            },
            set taxEffect(e) {
                Xw = e
            },
            get taxIncome() {
                return Qw
            },
            set taxIncome(e) {
                Qw = e
            },
            get minTaxRate() {
                return Zw
            },
            set minTaxRate(e) {
                Zw = e
            },
            get maxTaxRate() {
                return Jw
            },
            set maxTaxRate(e) {
                Jw = e
            },
            get areaTypes() {
                return areaTypes
            },
            set areaTypes(e) {
                areaTypes = e
            },
            get areaTaxRates() {
                return areaTaxRates
            },
            set areaTaxRates(e) {
                areaTaxRates = e
            },
            get areaTaxIncomes() {
                return areaTaxIncomes
            },
            set areaTaxIncomes(e) {
                areaTaxIncomes = e
            },
            get areaTaxEffects() {
                return areaTaxEffects
            },
            set areaTaxEffects(e) {
                areaTaxEffects = e
            },
            get areaResourceTaxRanges() {
                return areaResourceTaxRanges
            },
            set areaResourceTaxRanges(e) {
                areaResourceTaxRanges = e
            },
            get areaResources() {
                return areaResources
            },
            set areaResources(e) {
                areaResources = e
            },
            get resourceTaxRates() {
                return oO
            },
            set resourceTaxRates(e) {
                oO = e
            },
            get resourceTaxIncomes() {
                return rO
            },
            set resourceTaxIncomes(e) {
                rO = e
            },
            get taxResourceInfos() {
                return lO
            },
            set taxResourceInfos(e) {
                lO = e
            },
            get setTaxRate() {
                return cO
            },
            set setTaxRate(e) {
                cO = e
            },
            get setAreaTaxRate() {
                return uO
            },
            set setAreaTaxRate(e) {
                uO = e
            },
            get setResourceTaxRate() {
                return dO
            },
            set setResourceTaxRate(e) {
                dO = e
            }
        });
        const mO = "time";
        var hO, gO = $r(mO, "timeSettings"),
            pO = $r(mO, "ticks"),
            fO = $r(mO, "day"),
            xO = $r(mO, "lightingState"),
            vO = $r(mO, "simulationPaused"),
            _O = $r(mO, "simulationSpeed"),
            bO = Zr(mO, "simulationPausedBarrier");

        function TO(e) {
            tl(mO, "setSimulationPaused", e)
        }

        function EO(e) {
            tl(mO, "setSimulationSpeed", e)
        }

        function IO(e, t) {
            return e.year === t.year && e.month === t.month
        }

        function yO(e) {
            const t = e % 60;
            return {
                hour: (e - t) / 60 % 24,
                minute: t
            }
        }

        function jO(e, t) {
            return SO(e, t * e.ticksPerDay)
        }

        function SO(e, t) {
            const n = e.epochTicks + t,
                s = Math.floor(n / e.ticksPerDay);
            return {
                year: e.epochYear + Math.floor(s / e.daysPerYear),
                month: wO(s, e.daysPerYear)
            }
        }

        function CO(e, t) {
            const n = e.epochTicks + t,
                s = Math.floor(n / e.ticksPerDay),
                i = e.epochYear + Math.floor(s / e.daysPerYear),
                a = wO(s, e.daysPerYear),
                o = wO(n, e.ticksPerDay);
            return {
                year: i,
                month: a,
                hour: Math.trunc(o / e.ticksPerDay * 24),
                minute: Math.trunc(wO(o / e.ticksPerDay * 1440, 60))
            }
        }

        function NO(e, t) {
            const n = wO(e.epochTicks + t, e.ticksPerDay);
            return 60 * Math.trunc(n / e.ticksPerDay * 24) + Math.trunc(wO(n / e.ticksPerDay * 1440, 60))
        }

        function wO(e, t) {
            return (e % t + t) % t
        }! function (e) {
            e[e.Dawn = 0] = "Dawn", e[e.Sunrise = 1] = "Sunrise", e[e.Day = 2] = "Day", e[e.Sunset = 3] = "Sunset", e[e.Dusk = 4] = "Dusk", e[e.Night = 5] = "Night"
        }(hO || (hO = {})), X.add("game-ui/game/data-binding/time-bindings.ts", {
            get timeSettings() {
                return timeSettings
            },
            set timeSettings(e) {
                timeSettings = e
            },
            get ticks() {
                return ticks
            },
            set ticks(e) {
                ticks = e
            },
            get day() {
                return day
            },
            set day(e) {
                day = e
            },
            get lightingState() {
                return lightingState
            },
            set lightingState(e) {
                lightingState = e
            },
            get simulationPaused() {
                return simulationPaused
            },
            set simulationPaused(e) {
                simulationPaused = e
            },
            get simulationSpeed() {
                return simulationSpeed
            },
            set simulationSpeed(e) {
                simulationSpeed = e
            },
            get simulationPausedBarrier() {
                return simulationPausedBarrier
            },
            set simulationPausedBarrier(e) {
                simulationPausedBarrier = e
            },
            get setSimulationPaused() {
                return TO
            },
            set setSimulationPaused(e) {
                TO = e
            },
            get setSimulationSpeed() {
                return EO
            },
            set setSimulationSpeed(e) {
                EO = e
            },
            get LightingState() {
                return hO
            },
            set LightingState(e) {
                hO = e
            },
            get dateEquals() {
                return IO
            },
            set dateEquals(e) {
                IO = e
            },
            get calculateTimeFromMinutesSinceMidnight() {
                return yO
            },
            set calculateTimeFromMinutesSinceMidnight(e) {
                yO = e
            },
            get calculateDateFromDays() {
                return jO
            },
            set calculateDateFromDays(e) {
                jO = e
            },
            get calculateDateFromTicks() {
                return SO
            },
            set calculateDateFromTicks(e) {
                SO = e
            },
            get calculateDateTimeFromTicks() {
                return CO
            },
            set calculateDateTimeFromTicks(e) {
                CO = e
            },
            get calculateMinutesSinceMidnightFromTicks() {
                return NO
            },
            set calculateMinutesSinceMidnightFromTicks(e) {
                NO = e
            }
        });
        const OO = "tool";
        var PO = $r(OO, "activeTool"),
            LO = Zr(OO, "bulldozeConfirmationRequested"),
            AO = $r(OO, "availableSnapMask"),
            MO = $r(OO, "selectedSnapMask"),
            RO = $r(OO, "allSnapMask"),
            kO = $r(OO, "snapOptionNames"),
            DO = $r(OO, "elevationRange"),
            FO = $r(OO, "elevation"),
            UO = $r(OO, "elevationStep"),
            BO = $r(OO, "parallelModeSupported"),
            GO = $r(OO, "parallelMode"),
            VO = $r(OO, "parallelOffset"),
            HO = $r(OO, "undergroundModeSupported"),
            KO = $r(OO, "undergroundMode"),
            WO = $r(OO, "elevationDownDisabled"),
            zO = $r(OO, "elevationUpDisabled"),
            YO = $r(OO, "colorSupported"),
            $O = $r(OO, "color"),
            qO = $r(OO, "isEditor", !1);

        function XO(e) {
            tl(OO, "setColor", e)
        }

        function QO(e) {
            tl(OO, "selectTool", e)
        }

        function ZO(e) {
            tl(OO, "selectToolMode", e)
        }

        function JO(e) {
            tl(OO, "confirmBulldoze", e)
        }

        function eP(e) {
            e < 0 ? nP() : e > 0 && tP()
        }

        function tP() {
            tl(OO, "elevationUp")
        }

        function nP() {
            tl(OO, "elevationDown")
        }

        function sP() {
            tl(OO, "elevationScroll")
        }

        function iP(e) {
            tl(OO, "setElevationStep", e)
        }

        function aP(e) {
            tl(OO, "setSelectedSnapMask", e)
        }

        function oP() {
            tl(OO, "toggleParallelMode")
        }

        function rP(e) {
            tl(OO, "setParallelOffset", e)
        }

        function lP(e) {
            tl(OO, "setUndergroundMode", e)
        }
        var cP = "Bulldoze Tool",
            uP = "Default Tool",
            dP = "Zone Tool",
            mP = "Area Tool",
            hP = "Net Tool",
            gP = "Object Tool",
            pP = "Upgrade Tool",
            fP = "Terrain Tool",
            xP = "Selection Tool",
            vP = "Route Tool",
            _P = $r(OO, "allowBrush"),
            bP = $r(OO, "selectedBrush"),
            TP = $r(OO, "brushes"),
            EP = $r(OO, "brushSize"),
            IP = $r(OO, "brushStrength"),
            yP = $r(OO, "brushHeight"),
            jP = $r(OO, "brushHeightMin"),
            SP = $r(OO, "brushHeightMax"),
            CP = $r(OO, "brushAngle"),
            NP = $r(OO, "brushSizeMin"),
            wP = $r(OO, "brushSizeMax");

        function OP(e) {
            tl(OO, "selectBrush", e)
        }

        function PP(e) {
            tl(OO, "setBrushSize", e)
        }

        function LP(e) {
            tl(OO, "setBrushStrength", e)
        }

        function AP(e) {
            tl(OO, "setBrushAngle", e)
        }

        function MP(e) {
            tl(OO, "setBrushHeight", e)
        }
        X.add("game-ui/game/data-binding/tool-bindings.ts", {
            get activeTool() {
                return activeTool
            },
            set activeTool(e) {
                activeTool = e
            },
            get bulldozeConfirmationRequested() {
                return bulldozeConfirmationRequested
            },
            set bulldozeConfirmationRequested(e) {
                bulldozeConfirmationRequested = e
            },
            get availableSnapMask() {
                return availableSnapMask
            },
            set availableSnapMask(e) {
                availableSnapMask = e
            },
            get selectedSnapMask() {
                return selectedSnapMask
            },
            set selectedSnapMask(e) {
                selectedSnapMask = e
            },
            get allSnapMask() {
                return allSnapMask
            },
            set allSnapMask(e) {
                allSnapMask = e
            },
            get snapOptionNames() {
                return snapOptionNames
            },
            set snapOptionNames(e) {
                snapOptionNames = e
            },
            get elevationRange() {
                return elevationRange
            },
            set elevationRange(e) {
                elevationRange = e
            },
            get elevation() {
                return elevation
            },
            set elevation(e) {
                elevation = e
            },
            get elevationStep() {
                return elevationStep
            },
            set elevationStep(e) {
                elevationStep = e
            },
            get parallelModeSupported() {
                return parallelModeSupported
            },
            set parallelModeSupported(e) {
                parallelModeSupported = e
            },
            get parallelMode() {
                return parallelMode
            },
            set parallelMode(e) {
                parallelMode = e
            },
            get parallelOffset() {
                return parallelOffset
            },
            set parallelOffset(e) {
                parallelOffset = e
            },
            get undergroundModeSupported() {
                return undergroundModeSupported
            },
            set undergroundModeSupported(e) {
                undergroundModeSupported = e
            },
            get undergroundMode() {
                return undergroundMode
            },
            set undergroundMode(e) {
                undergroundMode = e
            },
            get elevationDownDisabled() {
                return elevationDownDisabled
            },
            set elevationDownDisabled(e) {
                elevationDownDisabled = e
            },
            get elevationUpDisabled() {
                return elevationUpDisabled
            },
            set elevationUpDisabled(e) {
                elevationUpDisabled = e
            },
            get colorSupported() {
                return colorSupported
            },
            set colorSupported(e) {
                colorSupported = e
            },
            get color() {
                return color
            },
            set color(e) {
                color = e
            },
            get isEditor() {
                return isEditor
            },
            set isEditor(e) {
                isEditor = e
            },
            get setColor() {
                return XO
            },
            set setColor(e) {
                XO = e
            },
            get selectTool() {
                return QO
            },
            set selectTool(e) {
                QO = e
            },
            get selectToolMode() {
                return ZO
            },
            set selectToolMode(e) {
                ZO = e
            },
            get confirmBulldoze() {
                return JO
            },
            set confirmBulldoze(e) {
                JO = e
            },
            get changeElevation() {
                return eP
            },
            set changeElevation(e) {
                eP = e
            },
            get elevationUp() {
                return tP
            },
            set elevationUp(e) {
                tP = e
            },
            get elevationDown() {
                return nP
            },
            set elevationDown(e) {
                nP = e
            },
            get elevationScroll() {
                return sP
            },
            set elevationScroll(e) {
                sP = e
            },
            get setElevationStep() {
                return iP
            },
            set setElevationStep(e) {
                iP = e
            },
            get setSelectedSnapMask() {
                return aP
            },
            set setSelectedSnapMask(e) {
                aP = e
            },
            get toggleParallelMode() {
                return oP
            },
            set toggleParallelMode(e) {
                oP = e
            },
            get setParallelOffset() {
                return rP
            },
            set setParallelOffset(e) {
                rP = e
            },
            get setUndergroundMode() {
                return lP
            },
            set setUndergroundMode(e) {
                lP = e
            },
            get BULLDOZE_TOOL() {
                return cP
            },
            set BULLDOZE_TOOL(e) {
                cP = e
            },
            get DEFAULT_TOOL() {
                return uP
            },
            set DEFAULT_TOOL(e) {
                uP = e
            },
            get ZONE_TOOL() {
                return dP
            },
            set ZONE_TOOL(e) {
                dP = e
            },
            get AREA_TOOL() {
                return mP
            },
            set AREA_TOOL(e) {
                mP = e
            },
            get NET_TOOL() {
                return hP
            },
            set NET_TOOL(e) {
                hP = e
            },
            get OBJECT_TOOL() {
                return gP
            },
            set OBJECT_TOOL(e) {
                gP = e
            },
            get UPGRADE_TOOL() {
                return pP
            },
            set UPGRADE_TOOL(e) {
                pP = e
            },
            get TERRAIN_TOOL() {
                return fP
            },
            set TERRAIN_TOOL(e) {
                fP = e
            },
            get SELECTION_TOOL() {
                return xP
            },
            set SELECTION_TOOL(e) {
                xP = e
            },
            get ROUTE_TOOL() {
                return vP
            },
            set ROUTE_TOOL(e) {
                vP = e
            },
            get allowBrush() {
                return allowBrush
            },
            set allowBrush(e) {
                allowBrush = e
            },
            get selectedBrush() {
                return selectedBrush
            },
            set selectedBrush(e) {
                selectedBrush = e
            },
            get brushes() {
                return brushes
            },
            set brushes(e) {
                brushes = e
            },
            get brushSize() {
                return brushSize
            },
            set brushSize(e) {
                brushSize = e
            },
            get brushStrength() {
                return brushStrength
            },
            set brushStrength(e) {
                brushStrength = e
            },
            get brushHeight() {
                return brushHeight
            },
            set brushHeight(e) {
                brushHeight = e
            },
            get brushHeightMin() {
                return brushHeightMin
            },
            set brushHeightMin(e) {
                brushHeightMin = e
            },
            get brushHeightMax() {
                return brushHeightMax
            },
            set brushHeightMax(e) {
                brushHeightMax = e
            },
            get brushAngle() {
                return brushAngle
            },
            set brushAngle(e) {
                brushAngle = e
            },
            get brushSizeMin() {
                return brushSizeMin
            },
            set brushSizeMin(e) {
                brushSizeMin = e
            },
            get brushSizeMax() {
                return brushSizeMax
            },
            set brushSizeMax(e) {
                brushSizeMax = e
            },
            get selectBrush() {
                return OP
            },
            set selectBrush(e) {
                OP = e
            },
            get setBrushSize() {
                return PP
            },
            set setBrushSize(e) {
                PP = e
            },
            get setBrushStrength() {
                return LP
            },
            set setBrushStrength(e) {
                LP = e
            },
            get setBrushAngle() {
                return AP
            },
            set setBrushAngle(e) {
                AP = e
            },
            get setBrushHeight() {
                return MP
            },
            set setBrushHeight(e) {
                MP = e
            }
        });
        const RP = "toolbar";
        var kP, DP;
        ! function (e) {
            e[e.asset = 0] = "asset", e[e.menu = 1] = "menu"
        }(kP || (kP = {})),
        function (e) {
            e[e.Disabled = 0] = "Disabled", e[e.Child = 1] = "Child", e[e.Teen = 2] = "Teen", e[e.Adult = 4] = "Adult", e[e.Elderly = 8] = "Elderly"
        }(DP || (DP = {}));
        var FP = $r(RP, "toolbarGroups"),
            UP = Xr(RP, "assetCategories"),
            BP = Xr(RP, "assets"),
            GP = $r(RP, "themes"),
            VP = $r(RP, "selectedThemes"),
            HP = $r(RP, "themes"),
            KP = $r(RP, "assetPacks"),
            WP = $r(RP, "selectedAssetPacks"),
            zP = $r(RP, "selectedAssetMenu"),
            YP = $r(RP, "selectedAssetCategory"),
            $P = $r(RP, "selectedAsset"),
            qP = $r(RP, "ageMask"),
            XP = el(RP, "setAgeMask"),
            QP = el(RP, "setSelectedThemes"),
            ZP = el(RP, "setSelectedAssetPacks"),
            JP = el(RP, "selectAssetMenu"),
            eL = el(RP, "selectAssetCategory"),
            tL = el(RP, "selectAsset"),
            nL = Jr(RP, "clearAssetSelection"),
            sL = el(RP, "toggleToolOptions");
        X.add("game-ui/game/data-binding/toolbar-bindings.ts", {
            get ToolbarItemType() {
                return kP
            },
            set ToolbarItemType(e) {
                kP = e
            },
            get AgeMask() {
                return DP
            },
            set AgeMask(e) {
                DP = e
            },
            get toolbarGroups() {
                return toolbarGroups
            },
            set toolbarGroups(e) {
                toolbarGroups = e
            },
            get assetCategories() {
                return assetCategories
            },
            set assetCategories(e) {
                assetCategories = e
            },
            get assets() {
                return assets
            },
            set assets(e) {
                assets = e
            },
            get themes() {
                return themes
            },
            set themes(e) {
                themes = e
            },
            get selectedThemes() {
                return selectedThemes
            },
            set selectedThemes(e) {
                selectedThemes = e
            },
            get vegetationAges() {
                return vegetationAges
            },
            set vegetationAges(e) {
                vegetationAges = e
            },
            get assetPacks() {
                return assetPacks
            },
            set assetPacks(e) {
                assetPacks = e
            },
            get selectedAssetPacks() {
                return selectedAssetPacks
            },
            set selectedAssetPacks(e) {
                selectedAssetPacks = e
            },
            get selectedAssetMenu() {
                return selectedAssetMenu
            },
            set selectedAssetMenu(e) {
                selectedAssetMenu = e
            },
            get selectedAssetCategory() {
                return selectedAssetCategory
            },
            set selectedAssetCategory(e) {
                selectedAssetCategory = e
            },
            get selectedAsset() {
                return selectedAsset
            },
            set selectedAsset(e) {
                selectedAsset = e
            },
            get ageMask() {
                return ageMask
            },
            set ageMask(e) {
                ageMask = e
            },
            get setAgeMask() {
                return XP
            },
            set setAgeMask(e) {
                XP = e
            },
            get setSelectedThemes() {
                return QP
            },
            set setSelectedThemes(e) {
                QP = e
            },
            get setSelectedAssetPacks() {
                return ZP
            },
            set setSelectedAssetPacks(e) {
                ZP = e
            },
            get selectAssetMenu() {
                return JP
            },
            set selectAssetMenu(e) {
                JP = e
            },
            get selectAssetCategory() {
                return eL
            },
            set selectAssetCategory(e) {
                eL = e
            },
            get selectAsset() {
                return tL
            },
            set selectAsset(e) {
                tL = e
            },
            get clearAssetSelection() {
                return nL
            },
            set clearAssetSelection(e) {
                nL = e
            },
            get toggleToolOptions() {
                return sL
            },
            set toggleToolOptions(e) {
                sL = e
            }
        });
        var iL = $r("toolbarBottom", "population"),
            aL = $r("toolbarBottom", "populationDelta"),
            oL = $r("toolbarBottom", "money"),
            rL = $r("toolbarBottom", "moneyDelta"),
            lL = $r("toolbarBottom", "cityName"),
            cL = $r("toolbarBottom", "unlimitedMoney"),
            uL = $r("toolbarBottom", "populationTrendThresholds"),
            dL = $r("toolbarBottom", "moneyTrendThresholds");

        function mL(e) {
            tl("toolbarBottom", "setCityName", e)
        }
        X.add("game-ui/game/data-binding/toolbar-bottom-bindings.ts", {
            get population() {
                return population
            },
            set population(e) {
                population = e
            },
            get populationDelta() {
                return populationDelta
            },
            set populationDelta(e) {
                populationDelta = e
            },
            get money() {
                return money
            },
            set money(e) {
                money = e
            },
            get moneyDelta() {
                return moneyDelta
            },
            set moneyDelta(e) {
                moneyDelta = e
            },
            get cityName() {
                return cityName
            },
            set cityName(e) {
                cityName = e
            },
            get unlimitedMoney() {
                return unlimitedMoney
            },
            set unlimitedMoney(e) {
                unlimitedMoney = e
            },
            get populationTrendThresholds() {
                return populationTrendThresholds
            },
            set populationTrendThresholds(e) {
                populationTrendThresholds = e
            },
            get moneyTrendThresholds() {
                return moneyTrendThresholds
            },
            set moneyTrendThresholds(e) {
                moneyTrendThresholds = e
            },
            get setCityName() {
                return mL
            },
            set setCityName(e) {
                mL = e
            }
        });
        const hL = "transportationOverview";
        var gL = $r(hL, "passengerTypes"),
            pL = $r(hL, "cargoTypes"),
            fL = $r(hL, "lines"),
            xL = $r(hL, "selectedPassengerType"),
            vL = $r(hL, "selectedCargoType"),
            _L = el(hL, "select"),
            bL = el(hL, "delete"),
            TL = el(hL, "rename"),
            EL = el(hL, "setColor"),
            IL = el(hL, "setActive"),
            yL = el(hL, "showLine"),
            jL = el(hL, "hideLine"),
            SL = el(hL, "setSchedule"),
            CL = Jr(hL, "resetVisibility"),
            NL = el(hL, "toggleHighlight"),
            wL = el(hL, "setSelectedPassengerType"),
            OL = el(hL, "setSelectedCargoType");
        X.add("game-ui/game/data-binding/transport-bindings.ts", {
            get passengerTypes() {
                return passengerTypes
            },
            set passengerTypes(e) {
                passengerTypes = e
            },
            get cargoTypes() {
                return cargoTypes
            },
            set cargoTypes(e) {
                cargoTypes = e
            },
            get transportLines() {
                return transportLines
            },
            set transportLines(e) {
                transportLines = e
            },
            get selectedPassengerType() {
                return selectedPassengerType
            },
            set selectedPassengerType(e) {
                selectedPassengerType = e
            },
            get selectedCargoType() {
                return selectedCargoType
            },
            set selectedCargoType(e) {
                selectedCargoType = e
            },
            get selectLine() {
                return _L
            },
            set selectLine(e) {
                _L = e
            },
            get deleteLine() {
                return bL
            },
            set deleteLine(e) {
                bL = e
            },
            get renameLine() {
                return TL
            },
            set renameLine(e) {
                TL = e
            },
            get setLineColor() {
                return EL
            },
            set setLineColor(e) {
                EL = e
            },
            get setLineActive() {
                return IL
            },
            set setLineActive(e) {
                IL = e
            },
            get showLine() {
                return yL
            },
            set showLine(e) {
                yL = e
            },
            get hideLine() {
                return jL
            },
            set hideLine(e) {
                jL = e
            },
            get setLineSchedule() {
                return SL
            },
            set setLineSchedule(e) {
                SL = e
            },
            get resetVisibility() {
                return CL
            },
            set resetVisibility(e) {
                CL = e
            },
            get toggleHighlight() {
                return NL
            },
            set toggleHighlight(e) {
                NL = e
            },
            get setSelectedPassengerType() {
                return wL
            },
            set setSelectedPassengerType(e) {
                wL = e
            },
            get setSelectedCargoType() {
                return OL
            },
            set setSelectedCargoType(e) {
                OL = e
            }
        });
        const PL = "upgradeMenu";
        var LL = Xr(PL, "upgrades"),
            AL = Xr(PL, "upgradeDetails"),
            ML = $r(PL, "selectedUpgrade"),
            RL = $r(PL, "upgrading");

        function kL(e, t) {
            tl(PL, "selectUpgrade", e, t)
        }

        function DL() {
            tl(PL, "clearUpgradeSelection")
        }
        X.add("game-ui/game/data-binding/upgrade-bindings.ts", {
            get upgrades() {
                return upgrades
            },
            set upgrades(e) {
                upgrades = e
            },
            get upgradeDetails() {
                return upgradeDetails
            },
            set upgradeDetails(e) {
                upgradeDetails = e
            },
            get selectedUpgrade() {
                return selectedUpgrade
            },
            set selectedUpgrade(e) {
                selectedUpgrade = e
            },
            get upgrading() {
                return upgrading
            },
            set upgrading(e) {
                upgrading = e
            },
            get selectUpgrade() {
                return kL
            },
            set selectUpgrade(e) {
                kL = e
            },
            get clearUpgradeSelection() {
                return DL
            },
            set clearUpgradeSelection(e) {
                DL = e
            }
        });
        const FL = X.find,
            UL = X.get;
        Object.defineProperties(window, {
            React: {
                value: Y
            },
            ReactDOM: {
                value: Z
            },
            ReactDOMClient: {
                value: Q
            },
            "cs2/api": {
                value: t
            },
            "cs2/bindings": {
                value: V
            },
            "cs2/l10n": {
                value: s
            },
            "cs2/ui": {
                value: l
            },
            "cs2/utils": {
                value: H
            },
            "cs2/input": {
                value: K
            },
            "cs2/modding": {
                value: W
            },
            "cohtml/cohtml": {
                value: Rr()
            },
            "chart.js": {
                value: e
            }
        });
        var BL = (e, t) => {
            const n = new XMLHttpRequest;
            n.open("GET", e, !0), n.onreadystatechange = () => {
                if (200 === n.status) {
                    n.onreadystatechange = null, n.abort();
                    const s = document.createElement("link");
                    s.rel = "stylesheet", s.id = e.split("/").pop()?.replace(".css", "") || "", s.href = e, s.onload = () => {
                        t(e), s.onload = null
                    }, document.head.appendChild(s)
                }
            }, n.send()
        };
        X.add("game-ui/modding/utils/load-css.tsx", {
            get loadCss() {
                return BL
            },
            set loadCss(e) {
                BL = e
            }
        });
        const GL = [],
            VL = new Set,
            HL = e => {
                X.reset(), VL.clear();
                for (const t of e) t(X)
            },
            KL = new Eg("CONTINUE_KEY");
        var WL = ({
            severity: e = lE.Error,
            title: t,
            message: n,
            errorDetails: s,
            canQuit: i = !0,
            canSaveAndQuit: a = !0,
            canSaveAndContinue: o = !1
        }) => {
            const r = (0, Y.useContext)(iE),
                l = (0, Y.useCallback)((() => CE((n ?? "") + "\n" + (s ?? ""))), [n, s]),
                c = (0, Y.useCallback)((() => {
                    r.onClose(), SE()
                }), [r]),
                u = PE();
            return (0, z.jsx)(oT, {
                children: (0, z.jsx)(FE, {
                    controller: u,
                    children: (0, z.jsx)(YT, {
                        theme: XT,
                        header: (0, z.jsx)(QT, {
                            children: null != t ? t : (0, z.jsx)(Pc.Common.ERROR_DIALOG_TITLE, {})
                        }),
                        className: JT.errorDialog,
                        onClose: r.onClose,
                        children: (0, z.jsxs)(tp, {
                            initialFocused: KL,
                            children: [(0, z.jsxs)("div", {
                                className: JT.iconLayout,
                                children: [(0, z.jsx)("img", {
                                    src: zL(e),
                                    className: JT.icon
                                }), (0, z.jsxs)("div", {
                                    className: JT.mainColumn,
                                    children: [(0, z.jsx)("div", {
                                        className: JT.errorMessage,
                                        style: {
                                            maxHeight: .5 * screen.availHeight
                                        },
                                        children: n
                                    }), null != s && (0, z.jsxs)("div", {
                                        className: JT.errorDetails,
                                        children: [(0, z.jsx)(xf, {
                                            controller: u,
                                            className: JT.content,
                                            hintClassName: JT.scrollHint,
                                            labelClassName: JT.scrollHintLabel,
                                            children: s
                                        }), (0, z.jsx)(sf, {
                                            tinted: !0,
                                            src: "Media/Glyphs/Copy.svg",
                                            className: JT.copyButton,
                                            onSelect: l
                                        })]
                                    })]
                                })]
                            }), (0, z.jsxs)("div", {
                                className: JT.buttons,
                                children: [(0, z.jsx)(Gp, {
                                    focusKey: KL,
                                    theme: AE,
                                    className: JT.button,
                                    onSelect: r.onClose,
                                    children: (0, z.jsx)(Pc.Common.ERROR_DIALOG_CONTINUE, {})
                                }), i && (0, z.jsx)(Gp, {
                                    theme: AE,
                                    className: JT.button,
                                    onSelect: yE,
                                    children: (0, z.jsx)(Pc.Common.ERROR_DIALOG_QUIT_GAME, {})
                                }), a && (0, z.jsx)(Gp, {
                                    theme: AE,
                                    className: JT.button,
                                    onSelect: jE,
                                    children: (0, z.jsx)(Pc.Common.ERROR_DIALOG_SAVE_QUIT_GAME, {})
                                }), o && (0, z.jsx)(Gp, {
                                    theme: AE,
                                    className: JT.button,
                                    onSelect: c,
                                    children: (0, z.jsx)(Pc.Common.ERROR_DIALOG_SAVE_CONTINUE, {})
                                })]
                            })]
                        })
                    })
                })
            })
        };

        function zL(e) {
            return e === lE.Warning ? "Media/Misc/Warning.svg" : "Media/Misc/Error.svg"
        }
        X.add("game-ui/common/panel/dialog/error-dialog.tsx", {
            get ErrorDialog() {
                return WL
            },
            set ErrorDialog(e) {
                WL = e
            }
        });
        const YL = new Eg("CHILDREN_KEY"),
            $L = new Eg("DIALOG_KEY");
        var qL = ({
            children: e
        }) => {
            const t = sl(xE),
                n = (0, Y.useMemo)((() => ({
                    onClose: () => NE()
                })), []);
            return (0, z.jsxs)(ap, {
                focused: null != t ? $L : YL,
                children: [(0, z.jsx)(ip, {
                    focusKey: YL,
                    children: e
                }), (0, z.jsx)(ip, {
                    focusKey: $L,
                    children: (0, z.jsx)(iE.Provider, {
                        value: n,
                        children: null != t && (0, z.jsx)(WL, {
                            severity: t.severity,
                            title: XL(t),
                            message: (s = t, (0, z.jsx)(zf, {
                                children: (0, z.jsx)(gu, {
                                    value: s.localizedMessage
                                })
                            })),
                            errorDetails: t.errorDetails,
                            canQuit: 0 != (t.actions & cE.Quit),
                            canSaveAndQuit: 0 != (t.actions & cE.SaveAndQuit),
                            canSaveAndContinue: 0 != (t.actions & cE.SaveAndContinue)
                        })
                    })
                })]
            });
            var s
        };

        function XL(e) {
            return (0, z.jsx)(gu, {
                value: e.localizedTitle
            })
        }
        X.add("game-ui/common/panel/dialog/error-dialog-renderer.tsx", {
            get ErrorDialogRenderer() {
                return qL
            },
            set ErrorDialogRenderer(e) {
                qL = e
            }
        });
        const QL = "debug";
        var ZL, JL, eA = $r(QL, "enabled"),
            tA = $r(QL, "visible"),
            nA = $r(QL, "panels"),
            sA = $r(QL, "selectedIndex"),
            iA = $r(QL, "selectedPanel"),
            aA = $r(QL, "children"),
            oA = $r(QL, "observedBinding"),
            rA = Zr(QL, "bindingTriggered"),
            lA = $r(QL, "developerInfoVisible"),
            cA = $r(QL, "watches");

        function uA() {
            tl(QL, "show")
        }

        function dA() {
            tl(QL, "hide")
        }

        function mA() {
            tl(QL, "selectPreviousPanel")
        }

        function hA(e) {
            tl(QL, "selectPanel", e)
        }

        function gA() {
            tl(QL, "selectNextPanel")
        }! function (e) {
            e[e.Unknown = 0] = "Unknown", e[e.Trigger = 1] = "Trigger", e[e.Event = 2] = "Event", e[e.Value = 3] = "Value"
        }(ZL || (ZL = {})),
        function (e) {
            e.History = "debug.HistoryWatch", e.Distribution = "debug.DistributionWatch"
        }(JL || (JL = {})), X.add("game-ui/debug/data-binding/debug-bindings.ts", {
            get enabled() {
                return enabled
            },
            set enabled(e) {
                enabled = e
            },
            get visible() {
                return visible
            },
            set visible(e) {
                visible = e
            },
            get panels() {
                return panels
            },
            set panels(e) {
                panels = e
            },
            get selectedIndex() {
                return selectedIndex
            },
            set selectedIndex(e) {
                selectedIndex = e
            },
            get selectedPanel() {
                return selectedPanel
            },
            set selectedPanel(e) {
                selectedPanel = e
            },
            get debugChildren() {
                return debugChildren
            },
            set debugChildren(e) {
                debugChildren = e
            },
            get observedBinding() {
                return observedBinding
            },
            set observedBinding(e) {
                observedBinding = e
            },
            get bindingTriggered() {
                return bindingTriggered
            },
            set bindingTriggered(e) {
                bindingTriggered = e
            },
            get developerInfoVisible() {
                return developerInfoVisible
            },
            set developerInfoVisible(e) {
                developerInfoVisible = e
            },
            get watches() {
                return watches
            },
            set watches(e) {
                watches = e
            },
            get showDebugUI() {
                return uA
            },
            set showDebugUI(e) {
                uA = e
            },
            get hideDebugUI() {
                return dA
            },
            set hideDebugUI(e) {
                dA = e
            },
            get selectPreviousPanel() {
                return mA
            },
            set selectPreviousPanel(e) {
                mA = e
            },
            get selectPanel() {
                return hA
            },
            set selectPanel(e) {
                hA = e
            },
            get selectNextPanel() {
                return gA
            },
            set selectNextPanel(e) {
                gA = e
            },
            get DebugBindingType() {
                return ZL
            },
            set DebugBindingType(e) {
                ZL = e
            },
            get DebugWatchType() {
                return JL
            },
            set DebugWatchType(e) {
                JL = e
            }
        });
        let pA = {
            button: "button_BNH"
        };
        X.add("game-ui/debug/themes/tab.module.scss", {
            get classes() {
                return pA
            },
            set classes(e) {
                Object.assign(pA, e)
            }
        });
        const fA = pA;

        function xA(e, t) {
            return (0, Y.useCallback)(((...n) => e(t, ...n)), [e, t])
        }
        var vA, _A, bA, TA;

        function EA(e, t) {
            return [...e, t]
        }

        function IA(e) {
            return (0, Y.useMemo)((() => e.join(".")), [e])
        }

        function yA({
            displayName: e,
            value: t,
            disabled: n
        }) {
            return {
                displayName: e,
                value: lm(t),
                disabled: n
            }
        }

        function jA({
            group: e,
            path: t
        }) {
            tl(e, "invoke", t)
        }

        function SA({
            group: e,
            path: t
        }, n) {
            tl(e, "setValue", t, n)
        }

        function CA({
            group: e,
            path: t
        }, n) {
            tl(e, "setExpanded", t, n)
        }

        function NA({
            group: e,
            path: t
        }) {
            tl(e, "invoke", t)
        }

        function wA({
            group: e,
            path: t
        }) {
            tl(e, "addListElement", t)
        }

        function OA({
            group: e,
            path: t
        }, n) {
            tl(e, "duplicateListElement", t, n)
        }

        function PA({
            group: e,
            path: t
        }, n, s) {
            tl(e, "moveListElement", t, n, s)
        }

        function LA({
            group: e,
            path: t
        }, n) {
            tl(e, "deleteListElement", t, n)
        }

        function AA({
            group: e,
            path: t
        }) {
            tl(e, "clearList", t)
        }

        function MA({
            group: e,
            path: t
        }, n) {
            tl(e, "setCurrentPageIndex", t, n)
        }

        function RA(e, t, n, s, i = !1, a = 0) {
            return nl(e, "moveKeyframe", t, n, s, i, a)
        }

        function kA(e, t, n, s, i = 0) {
            return nl(e, "addKeyframe", t, n, s, i)
        }

        function DA(e, t, n, s = 0) {
            tl(e, "removeKeyframe", t, n, s)
        }

        function FA(e, t, n, s = 0) {
            tl(e, "setKeyframes", t, n, s)
        }

        function UA(e, t, n) {
            return nl(e, "addSeason", t, n)
        }

        function BA(e, t, n) {
            return nl(e, "onUpdateSeason", t, n)
        }

        function GA(e, t, n) {
            tl(e, "deleteSeason", t, n)
        }

        function VA(e) {
            return (0, Y.useMemo)((() => ({
                group: e,
                path: []
            })), [e])
        }

        function HA(e, t) {
            return (0, Y.useMemo)((() => ({
                group: e.group,
                path: EA(e.path, t)
            })), [e.group, e.path, t])
        }
        X.add("game-ui/common/utils/element-callback.ts", {
                get useElementCallback() {
                    return xA
                },
                set useElementCallback(e) {
                    xA = e
                }
            }),
            function (e) {
                e.IntArrowField = "Game.UI.Debug.IntArrowField", e.UIntArrowField = "Game.UI.Debug.UIntArrowField", e.FloatArrowField = "Game.UI.Debug.FloatArrowField", e.Image = "Game.UI.Debug.Image"
            }(vA || (vA = {})), X.add("game-ui/debug/data-binding/debug-widgets.ts", {
                get DebugWidgetType() {
                    return vA
                },
                set DebugWidgetType(e) {
                    vA = e
                }
            }),
            function (e) {
                e.Column = "Game.UI.Widgets.Column", e.Row = "Game.UI.Widgets.Row", e.Scrollable = "Game.UI.Widgets.Scrollable", e.PageView = "Game.UI.Widgets.PageView", e.PageLayout = "Game.UI.Widgets.PageLayout", e.Divider = "Game.UI.Widgets.Divider", e.Label = "Game.UI.Widgets.Label", e.MultilineText = "Game.UI.Widgets.MultilineText", e.Breadcrumbs = "Game.UI.Widgets.Breadcrumbs", e.Button = "Game.UI.Widgets.Button", e.ButtonRow = "Game.UI.Widgets.ButtonRow", e.IconButton = "Game.UI.Widgets.IconButton", e.IconButtonGroup = "Game.UI.Widgets.IconButtonGroup", e.Group = "Game.UI.Widgets.Group", e.ExpandableGroup = "Game.UI.Widgets.ExpandableGroup", e.PagedList = "Game.UI.Widgets.PagedList", e.ValueField = "Game.UI.Widgets.ValueField", e.LocalizedValueField = "Game.UI.Widgets.LocalizedValueField", e.ToggleField = "Game.UI.Widgets.ToggleField", e.IntInputField = "Game.UI.Widgets.IntInputField", e.IntSliderField = "Game.UI.Widgets.IntSliderField", e.Int2InputField = "Game.UI.Widgets.Int2InputField", e.Int3InputField = "Game.UI.Widgets.Int3InputField", e.Int4InputField = "Game.UI.Widgets.Int4InputField", e.UIntInputField = "Game.UI.Widgets.UIntInputField", e.UIntSliderField = "Game.UI.Widgets.UIntSliderField", e.TimeSliderField = "Game.UI.Widgets.TimeSliderField", e.TimeBoundsSliderField = "Game.UI.Widgets.TimeBoundsSliderField", e.FloatInputField = "Game.UI.Widgets.FloatInputField", e.FloatSliderField = "Game.UI.Widgets.FloatSliderField", e.Float2InputField = "Game.UI.Widgets.Float2InputField", e.Float2SliderField = "Game.UI.Widgets.Float2SliderField", e.Float3InputField = "Game.UI.Widgets.Float3InputField", e.Float3SliderField = "Game.UI.Widgets.Float3SliderField", e.EulerAnglesField = "Game.UI.Widgets.EulerAnglesField", e.Float4InputField = "Game.UI.Widgets.Float4InputField", e.Float4SliderField = "Game.UI.Widgets.Float4SliderField", e.Bounds1SliderField = "Game.UI.Widgets.Bounds1SliderField", e.Bounds1InputField = "Game.UI.Widgets.Bounds1InputField", e.Bounds2InputField = "Game.UI.Widgets.Bounds2InputField", e.Bounds3InputField = "Game.UI.Widgets.Bounds3InputField", e.Bezier4x3Field = "Game.UI.Widgets.Bezier4x3Field", e.RangedSliderField = "Game.UI.Widgets.RangedSliderField", e.StringInputField = "Game.UI.Widgets.StringInputField", e.ColorField = "Game.UI.Widgets.ColorField", e.GradientSliderField = "Game.UI.Widgets.GradientSliderField", e.AnimationCurveField = "Game.UI.Widgets.AnimationCurveField", e.EnumField = "Game.UI.Widgets.EnumField", e.FlagsField = "Game.UI.Widgets.FlagsField", e.PopupValueField = "Game.UI.Widgets.PopupValueField", e.DropdownField = "Game.UI.Widgets.DropdownField", e.DirectoryPickerButton = "Game.UI.Widgets.DirectoryPickerButton", e.SeasonsField = "Game.UI.Widgets.SeasonsField", e.ImageField = "Game.UI.Widgets.ImageField"
            }(_A || (_A = {})),
            function (e) {
                e[e.Vertical = 0] = "Vertical", e[e.Horizontal = 1] = "Horizontal"
            }(bA || (bA = {})),
            function (e) {
                e[e.Title = 0] = "Title", e[e.Container = 1] = "Container"
            }(TA || (TA = {})), X.add("game-ui/widgets/data-binding/widget-bindings.ts", {
                get WidgetType() {
                    return _A
                },
                set WidgetType(e) {
                    _A = e
                },
                get combinePath() {
                    return EA
                },
                set combinePath(e) {
                    EA = e
                },
                get usePathFocusKey() {
                    return IA
                },
                set usePathFocusKey(e) {
                    IA = e
                },
                get ScrollableDirection() {
                    return bA
                },
                set ScrollableDirection(e) {
                    bA = e
                },
                get TooltipPos() {
                    return TA
                },
                set TooltipPos(e) {
                    TA = e
                },
                get toBigIntMember() {
                    return yA
                },
                set toBigIntMember(e) {
                    yA = e
                },
                get invoke() {
                    return jA
                },
                set invoke(e) {
                    jA = e
                },
                get setValue() {
                    return SA
                },
                set setValue(e) {
                    SA = e
                },
                get setExpanded() {
                    return CA
                },
                set setExpanded(e) {
                    CA = e
                },
                get openDirectory() {
                    return NA
                },
                set openDirectory(e) {
                    NA = e
                },
                get addListElement() {
                    return wA
                },
                set addListElement(e) {
                    wA = e
                },
                get duplicateListElement() {
                    return OA
                },
                set duplicateListElement(e) {
                    OA = e
                },
                get moveListElement() {
                    return PA
                },
                set moveListElement(e) {
                    PA = e
                },
                get deleteListElement() {
                    return LA
                },
                set deleteListElement(e) {
                    LA = e
                },
                get clearList() {
                    return AA
                },
                set clearList(e) {
                    AA = e
                },
                get setCurrentPageIndex() {
                    return MA
                },
                set setCurrentPageIndex(e) {
                    MA = e
                },
                get moveKeyframe() {
                    return RA
                },
                set moveKeyframe(e) {
                    RA = e
                },
                get addKeyframe() {
                    return kA
                },
                set addKeyframe(e) {
                    kA = e
                },
                get removeKeyframe() {
                    return DA
                },
                set removeKeyframe(e) {
                    DA = e
                },
                get setKeyframes() {
                    return FA
                },
                set setKeyframes(e) {
                    FA = e
                },
                get addSeason() {
                    return UA
                },
                set addSeason(e) {
                    UA = e
                },
                get updateSeason() {
                    return BA
                },
                set updateSeason(e) {
                    BA = e
                },
                get deleteSeason() {
                    return GA
                },
                set deleteSeason(e) {
                    GA = e
                }
            }), X.add("game-ui/widgets/components/widget-props.ts", {
                get useRootId() {
                    return VA
                },
                set useRootId(e) {
                    VA = e
                },
                get useWidgetId() {
                    return HA
                },
                set useWidgetId(e) {
                    HA = e
                }
            });
        const KA = {};

        function WA(e, t) {
            return t
        }

        function zA(e) {
            return Dr(e.entity)
        }

        function YA({
            components: e,
            data: t,
            props: n
        }) {
            const s = e[t.__Type];
            return null != s ? (0, z.jsx)(s, {
                ...t,
                ...n || KA
            }) : (0, z.jsx)(XA, {
                typeName: t.__Type
            })
        }

        function $A({
            components: e,
            data: t,
            props: n,
            keyProvider: s = WA
        }) {
            return (0, z.jsx)(z.Fragment, {
                children: t.map(((t, i) => {
                    if (null == t) return;
                    const a = s(t, i),
                        o = e[t.__Type];
                    return null != o ? (0, z.jsx)(o, {
                        ...t,
                        ...n || KA
                    }, a) : (0, z.jsx)(XA, {
                        typeName: t.__Type
                    }, a)
                }))
            })
        }

        function qA(e, t, n, s) {
            const i = e[t.__Type];
            return null != i ? (0, z.jsx)(i, {
                ...t,
                ...n || KA
            }, s) : void 0
        }
        var XA = ({
            typeName: e
        }) => (0, z.jsx)("div", {
            style: {
                backgroundColor: "red",
                color: "yellow"
            },
            children: `Unknown element type ${e}`
        });

        function QA({
            parent: e,
            components: t,
            data: n
        }) {
            const s = n.props.__Type,
                i = t[s];
            return null != i ? (0, z.jsx)(JA.Provider, {
                value: t,
                children: (0, z.jsx)(i, {
                    parent: e,
                    ...n
                })
            }) : (0, z.jsx)(XA, {
                typeName: s
            })
        }

        function ZA({
            parent: e,
            components: t,
            data: n
        }) {
            return (0, z.jsx)(JA.Provider, {
                value: t,
                children: null != n?.map ? n.map(((n, s) => {
                    if (null == n || n.props.hidden) return;
                    const i = n.path || `item-${s}`,
                        a = n.props.__Type,
                        o = t[a];
                    return null != o ? (0, z.jsx)(o, {
                        parent: e,
                        ...n
                    }, i) : (0, z.jsx)(XA, {
                        typeName: a
                    }, i)
                })) : JSON.stringify(n)
            })
        }
        X.add("game-ui/common/typed-renderer/typed-renderer.tsx", {
            get entityKeyProvider() {
                return zA
            },
            set entityKeyProvider(e) {
                zA = e
            },
            get TypedRenderer() {
                return YA
            },
            set TypedRenderer(e) {
                YA = e
            },
            get TypedListRenderer() {
                return $A
            },
            set TypedListRenderer(e) {
                $A = e
            },
            get renderTyped() {
                return qA
            },
            set renderTyped(e) {
                qA = e
            },
            get UnknownElement() {
                return XA
            },
            set UnknownElement(e) {
                XA = e
            }
        });
        var JA = (0, Y.createContext)({});
        X.add("game-ui/widgets/components/widget-renderer.tsx", {
            get WidgetRenderer() {
                return QA
            },
            set WidgetRenderer(e) {
                QA = e
            },
            get WidgetListRenderer() {
                return ZA
            },
            set WidgetListRenderer(e) {
                ZA = e
            },
            get WidgetComponentMapContext() {
                return JA
            },
            set WidgetComponentMapContext(e) {
                JA = e
            }
        });
        let eM = {
            button: "button_hxl button_k8s"
        };
        X.add("game-ui/debug/widgets/button/button.module.scss", {
            get classes() {
                return eM
            },
            set classes(e) {
                Object.assign(eM, e)
            }
        });
        const tM = eM;
        var nM = ({
            parent: e,
            path: t,
            props: n
        }) => {
            const s = HA(e, t),
                i = xA(jA, s),
                a = IA(s.path);
            return (0, z.jsx)(sM, {
                onSelect: i,
                focusKey: a,
                children: (0, z.jsx)(gu, {
                    value: n.displayName
                })
            })
        };

        function sM({
            focusKey: e,
            children: t,
            onSelect: n
        }) {
            return (0, z.jsx)(Gp, {
                focusKey: e,
                theme: tM,
                onSelect: n,
                children: t || " "
            })
        }
        X.add("game-ui/debug/widgets/button/button.tsx", {
            get BoundDebugButton() {
                return nM
            },
            set BoundDebugButton(e) {
                nM = e
            }
        });
        let iM = {
            title: "title_Xkf",
            children: "children_HxX"
        };
        X.add("game-ui/debug/widgets/container/container.module.scss", {
            get classes() {
                return iM
            },
            set classes(e) {
                Object.assign(iM, e)
            }
        });
        const aM = iM;
        var oM = ({
                parent: e,
                path: t,
                children: n,
                props: s
            }) => {
                const i = HA(e, t),
                    a = (0, Y.useContext)(JA);
                return (0, z.jsx)(rM, {
                    title: (0, z.jsx)(gu, {
                        value: s.displayName
                    }),
                    children: (0, z.jsx)(ZA, {
                        parent: i,
                        components: a,
                        data: n
                    })
                })
            },
            rM = ({
                title: e,
                children: t
            }) => (0, z.jsxs)("div", {
                className: aM.container,
                children: [e && (0, z.jsx)("div", {
                    className: aM.title,
                    children: e
                }), (0, z.jsx)("div", {
                    className: aM.children,
                    children: t
                })]
            });
        X.add("game-ui/debug/widgets/container/container.tsx", {
            get BoundContainer() {
                return oM
            },
            set BoundContainer(e) {
                oM = e
            },
            get Container() {
                return rM
            },
            set Container(e) {
                rM = e
            }
        });
        let lM = {
            button: "button__Wn",
            value: "value_fMT"
        };
        X.add("game-ui/debug/widgets/fields/arrow-control/arrow-control.module.scss", {
            get classes() {
                return lM
            },
            set classes(e) {
                Object.assign(lM, e)
            }
        });
        const cM = lM;
        var uM = ({
            onSelectLeft: e,
            onSelectRight: t,
            children: n
        }) => {
            const s = (0, Y.useRef)(!1),
                [i, a] = (0, Y.useState)(!1);
            (0, Y.useEffect)((() => {
                i || (s.current = !1)
            }), [i]);
            const o = (0, Y.useMemo)((() => ({
                    "Debug Change Field": n => {
                        n < 0 ? e(s.current) : t(s.current)
                    },
                    "Debug Multiplier": e => {
                        s.current = e > 0
                    }
                })), [e, t]),
                r = (0, Y.useCallback)((() => e(s.current)), [e]),
                l = (0, Y.useCallback)((() => t(s.current)), [t]);
            return (0, z.jsx)(Ah, {
                onFocusChange: a,
                children: (0, z.jsxs)(Ag, {
                    actions: o,
                    children: [(0, z.jsx)(Gp, {
                        focusKey: Ig,
                        className: cM.button,
                        onSelect: r,
                        children: "<"
                    }), (0, z.jsx)(Ip, {
                        className: cM.value,
                        children: n
                    }), (0, z.jsx)(Gp, {
                        focusKey: Ig,
                        className: cM.button,
                        onSelect: l,
                        children: ">"
                    })]
                })
            })
        };
        X.add("game-ui/debug/widgets/fields/arrow-control/arrow-control.tsx", {
            get ArrowControl() {
                return uM
            },
            set ArrowControl(e) {
                uM = e
            }
        });
        let dM = {
            field: "field_vGA",
            label: "label_KyX",
            control: "control_b3l",
            icon: "icon_vAF"
        };
        X.add("game-ui/debug/widgets/fields/field-layout/field-layout.module.scss", {
            get classes() {
                return dM
            },
            set classes(e) {
                Object.assign(dM, e)
            }
        });
        const mM = dM;
        var hM = ({
            label: e,
            children: t
        }) => (0, z.jsxs)(Ip, {
            className: mM.field,
            children: [(0, z.jsx)("div", {
                className: mM.label,
                children: e || " "
            }), (0, z.jsx)("div", {
                className: mM.control,
                children: t
            })]
        });
        X.add("game-ui/debug/widgets/fields/field-layout/field-layout.tsx", {
            get FieldLayout() {
                return hM
            },
            set FieldLayout(e) {
                hM = e
            }
        });
        var gM = ({
                label: e,
                value: t,
                min: n,
                max: s,
                step: i = 1,
                stepMultiplier: a = 10,
                onChange: o
            }) => {
                const r = (0, Y.useCallback)((e => {
                        let r = t - (e ? a : i);
                        null != n && (r = Math.max(n, r)), null != s && (r = Math.min(r, s)), r !== t && o(r)
                    }), [i, a, s, n, o, t]),
                    l = (0, Y.useCallback)((e => {
                        let r = t + (e ? a : i);
                        null != n && (r = Math.max(n, r)), null != s && (r = Math.min(r, s)), r !== t && o(r)
                    }), [i, a, s, n, o, t]);
                return (0, z.jsx)(hM, {
                    label: e,
                    children: (0, z.jsx)(uM, {
                        onSelectLeft: r,
                        onSelectRight: l,
                        children: `${t}`
                    })
                })
            },
            pM = ({
                label: e,
                value: t,
                min: n,
                max: s,
                step: i = 1,
                stepMultiplier: a = 10,
                fractionDigits: o = 0,
                onChange: r
            }) => {
                const l = (0, Y.useCallback)((e => {
                        let o = t - (e ? a : i);
                        null != n && (o = Math.max(n, o)), null != s && (o = Math.min(o, s)), o !== t && r(o)
                    }), [i, a, s, n, r, t]),
                    c = (0, Y.useCallback)((e => {
                        let o = t + (e ? a : i);
                        null != n && (o = Math.max(n, o)), null != s && (o = Math.min(o, s)), o !== t && r(o)
                    }), [i, a, s, n, r, t]);
                return (0, z.jsx)(hM, {
                    label: e,
                    children: (0, z.jsx)(uM, {
                        onSelectLeft: l,
                        onSelectRight: c,
                        children: `${t.toFixed(o)}`
                    })
                })
            };
        X.add("game-ui/debug/widgets/fields/arrow-field.tsx", {
            get IntArrowField() {
                return gM
            },
            set IntArrowField(e) {
                gM = e
            },
            get FloatArrowField() {
                return pM
            },
            set FloatArrowField(e) {
                pM = e
            }
        });
        let fM = {
            "foldout-button": "foldout-button_Ugi",
            foldoutButton: "foldout-button_Ugi",
            arrow: "arrow_wFy",
            expanded: "expanded_S2V",
            label: "label_qS_",
            value: "value_ypy"
        };
        X.add("game-ui/debug/widgets/foldout/foldout.module.scss", {
            get classes() {
                return fM
            },
            set classes(e) {
                Object.assign(fM, e)
            }
        });
        const xM = fM;
        var vM = ({
                parent: e,
                path: t,
                children: n,
                props: s
            }) => {
                const i = HA(e, t),
                    a = (0, Y.useContext)(JA),
                    o = xA(CA, i);
                return (0, z.jsx)(_M, {
                    title: (0, z.jsx)(gu, {
                        value: s.displayName
                    }),
                    opened: s.expanded,
                    onOpenedChange: o,
                    children: (0, z.jsx)(ZA, {
                        parent: i,
                        components: a,
                        data: n
                    })
                })
            },
            _M = ({
                title: e,
                value: t,
                opened: n,
                children: s,
                onOpenedChange: i
            }) => {
                const a = (0, Y.useCallback)((() => i(!n)), [i, n]);
                return (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsxs)(Gp, {
                        onSelect: a,
                        className: Zu()(xM.foldoutButton, n && xM.expanded),
                        children: [(0, z.jsx)("div", {
                            className: xM.arrow
                        }), (0, z.jsx)("div", {
                            className: xM.label,
                            children: e
                        }), t && (0, z.jsx)("div", {
                            className: xM.value,
                            children: t
                        })]
                    }), n && (0, z.jsx)(rM, {
                        title: null,
                        children: s
                    })]
                })
            },
            bM = ({
                title: e,
                value: t,
                children: n
            }) => {
                const [s, i] = (0, Y.useState)(!1);
                return (0, z.jsx)(_M, {
                    title: e,
                    value: t,
                    opened: s,
                    onOpenedChange: i,
                    children: n
                })
            };
        X.add("game-ui/debug/widgets/foldout/foldout.tsx", {
            get BoundFoldout() {
                return vM
            },
            set BoundFoldout(e) {
                vM = e
            },
            get Foldout() {
                return _M
            },
            set Foldout(e) {
                _M = e
            },
            get StatefulFoldout() {
                return bM
            },
            set StatefulFoldout(e) {
                bM = e
            }
        });
        let TM = {
            slider: "slider_pUS",
            "track-bounds": "track-bounds_H8_",
            trackBounds: "track-bounds_H8_",
            "range-bounds": "range-bounds_lNt",
            rangeBounds: "range-bounds_lNt",
            range: "range_iUN",
            "thumb-container": "thumb-container_aso",
            thumbContainer: "thumb-container_aso",
            hint: "hint_oU0",
            wrapper: "wrapper_TUT"
        };
        X.add("game-ui/common/input/slider/slider.module.scss", {
            get classes() {
                return TM
            },
            set classes(e) {
                Object.assign(TM, e)
            }
        });
        const EM = TM;
        let IM = {
            slider: "slider_g0V slider_pUS",
            compact: "compact_pTl",
            thumb: "thumb_WZt",
            range: "range_K3G range_iUN"
        };
        X.add("game-ui/common/input/slider/themes/default.module.scss", {
            get classes() {
                return IM
            },
            set classes(e) {
                Object.assign(IM, e)
            }
        });
        const yM = IM;
        var jM = {
                dragStart: rp.grabSlider,
                drag: rp.dragSlider
            },
            SM = {
                dragStart: rp.grabSlider,
                drag: rp.dragSlider,
                scaleDragVolume: !0
            },
            CM = Y.forwardRef((function ({
                focusKey: e,
                debugName: t = "Slider",
                value: n,
                start: s,
                end: i,
                gamepadStep: a,
                disabled: o,
                vertical: r = !1,
                sounds: l = jM,
                thumb: c,
                theme: u = yM,
                className: d,
                style: m,
                children: h,
                noFill: g,
                hideHint: p = !1,
                valueTransformer: f = NM,
                onChange: x,
                onDragStart: v,
                onDragEnd: _,
                onMouseOver: b,
                onMouseLeave: T
            }, E) {
                const I = (0, Y.useMemo)((() => ({
                        ...EM,
                        ...u
                    })), [u]),
                    y = c ?? (I.thumb ? (0, z.jsx)("div", {
                        className: I.thumb
                    }) : void 0),
                    j = (0, Y.useRef)(null),
                    S = gd(E, j),
                    C = hp(jg(e ?? (o ? Ig : yg), t), j),
                    N = wh(C),
                    w = Dm(),
                    O = i - s,
                    P = 0 !== O ? (n - s) / O : 0,
                    L = 0 !== O ? null != a && a > 0 ? a / O : .05 : 0,
                    A = (0, Y.useMemo)((() => ({
                        "Change Slider Value": null != x ? e => {
                            if (0 !== e) {
                                s > i && (e *= -1);
                                const t = f(s, i, P + e * L);
                                t !== n && (x(t), lp(l?.drag, l?.scaleDragVolume && 0 !== O ? (n - s) / O : 1))
                            }
                        } : null
                    })), [x, f, s, i, P, L, n, l?.drag, l?.scaleDragVolume, O]),
                    M = (0, Y.useRef)(null),
                    R = (0, Y.useRef)(0),
                    k = (0, Y.useCallback)((({
                        clientX: e,
                        clientY: t
                    }) => {
                        if (o || !M.current) return !1;
                        if (document.activeElement instanceof HTMLElement && document.activeElement.blur(), lp(l?.dragStart), v && v(), x) {
                            const a = f(s, i, PM(M.current, e, t, R.current, r));
                            a !== n && x(a)
                        }
                        return !0
                    }), [o, i, x, v, s, l?.dragStart, n, f, r]),
                    D = (0, Y.useCallback)((({
                        clientX: e,
                        clientY: t
                    }) => {
                        if (o || !x || !M.current) return;
                        const a = f(s, i, PM(M.current, e, t, R.current, r));
                        a !== n && (x(a), lp(l?.drag, l?.scaleDragVolume && 0 !== O ? (n - s) / O : 1))
                    }), [o, x, f, s, i, r, n, l?.drag, l?.scaleDragVolume, O]),
                    F = (0, Y.useCallback)((() => {
                        R.current = 0, _ && _()
                    }), [_]),
                    [U, B] = uf(k, D, F),
                    G = (0, Y.useCallback)((e => {
                        if (M.current)
                            if (r) {
                                const {
                                    top: t,
                                    height: n
                                } = M.current.getBoundingClientRect(), s = t + n * (1 - P);
                                R.current = e.clientY - s
                            } else {
                                const {
                                    left: t,
                                    width: n
                                } = M.current.getBoundingClientRect(), s = t + n * P;
                                R.current = e.clientX - s
                            }
                    }), [P, r]),
                    V = `${100*Od(P,0,1)||0}%`;
                return (0, z.jsxs)("div", {
                    className: Zu()(EM.wrapper, d),
                    children: [(0, z.jsx)(Pf, {
                        action: "Change Slider Value",
                        active: !p && N,
                        className: EM.hint
                    }), (0, z.jsx)(Ag, {
                        actions: A,
                        disabled: o,
                        children: (0, z.jsx)(Lh, {
                            controller: C,
                            children: (0, z.jsxs)("div", {
                                ref: S,
                                className: Zu()(I.slider, r ? "vertical" : "horizontal", o && "disabled", N && w && "focused", U && "dragging"),
                                style: m,
                                onMouseDown: o ? void 0 : B,
                                children: [h, (0, z.jsx)("div", {
                                    ref: M,
                                    className: I.trackBounds,
                                    onMouseOver: b,
                                    onMouseLeave: T,
                                    children: (0, z.jsxs)("div", {
                                        className: I.rangeBounds,
                                        style: {
                                            [r ? "height" : "width"]: V
                                        },
                                        children: [!g && (0, z.jsx)("div", {
                                            className: I.range
                                        }), y && (0, z.jsx)("div", {
                                            className: I.thumbContainer,
                                            onClick: o ? void 0 : nx,
                                            onMouseDown: o ? void 0 : G,
                                            onMouseOver: b,
                                            onMouseLeave: T,
                                            children: y
                                        })]
                                    })
                                })]
                            })
                        })
                    })]
                })
            }));

        function NM(e, t, n) {
            return Od(e + n * (t - e), Math.min(e, t), Math.max(e, t))
        }

        function wM(e, t, n) {
            return Od(Math.round(e + n * (t - e)), Math.min(e, t), Math.max(e, t))
        }

        function OM(e) {
            return (0, Y.useCallback)(((t, n, s) => Od(t + Math.round(s * (n - t) / e) * e, Math.min(t, n), Math.max(t, n))), [e])
        }

        function PM(e, t, n, s, i) {
            const {
                top: a,
                left: o,
                width: r,
                height: l
            } = e.getBoundingClientRect();
            return i ? (l - (n - a - s)) / l : (t - o - s) / r
        }
        X.add("game-ui/common/input/slider/slider.tsx", {
            get defaultSliderSounds() {
                return jM
            },
            set defaultSliderSounds(e) {
                jM = e
            },
            get volumeSliderSounds() {
                return SM
            },
            set volumeSliderSounds(e) {
                SM = e
            },
            get Slider() {
                return CM
            },
            set Slider(e) {
                CM = e
            },
            get intTransformer() {
                return wM
            },
            set intTransformer(e) {
                wM = e
            },
            get useStepTransformer() {
                return OM
            },
            set useStepTransformer(e) {
                OM = e
            }
        });
        let LM = {
            slider: "slider_HvX slider_pUS",
            value: "value_Ob7",
            range: "range_LNR range_iUN"
        };
        X.add("game-ui/debug/themes/slider.module.scss", {
            get classes() {
                return LM
            },
            set classes(e) {
                Object.assign(LM, e)
            }
        });
        const AM = LM;
        var MM = ({
                label: e,
                value: t,
                min: n,
                max: s,
                step: i = 1,
                onChange: a
            }) => {
                const o = OM(i);
                return (0, z.jsx)(hM, {
                    label: e,
                    children: (0, z.jsx)(CM, {
                        value: t,
                        start: n,
                        end: s,
                        valueTransformer: o,
                        theme: AM,
                        onChange: a,
                        children: (0, z.jsx)("div", {
                            className: AM.value,
                            children: `${t}`
                        })
                    })
                })
            },
            RM = ({
                label: e,
                value: t,
                min: n,
                max: s,
                step: i,
                fractionDigits: a,
                onChange: o
            }) => {
                const r = OM(i || 1);
                return (0, z.jsx)(hM, {
                    label: e,
                    children: (0, z.jsx)(CM, {
                        value: t,
                        start: n,
                        end: s,
                        valueTransformer: r,
                        theme: AM,
                        onChange: o,
                        children: (0, z.jsx)("div", {
                            className: AM.value,
                            children: `${t.toFixed(a)}`
                        })
                    })
                })
            },
            kM = ({
                label: e,
                value: t,
                step: n,
                fractionDigits: s,
                min: i,
                max: a,
                onChange: o
            }) => {
                const r = (0, Y.useCallback)((e => o({
                        ...t,
                        x: e
                    })), [o, t]),
                    l = (0, Y.useCallback)((e => o({
                        ...t,
                        y: e
                    })), [o, t]);
                return (0, z.jsxs)(bM, {
                    title: e,
                    value: zd(t, s ?? 1),
                    children: [(0, z.jsx)(RM, {
                        label: "X",
                        value: t.x,
                        min: i,
                        max: a,
                        onChange: r,
                        step: n,
                        fractionDigits: s
                    }), (0, z.jsx)(RM, {
                        label: "Y",
                        value: t.y,
                        min: i,
                        max: a,
                        onChange: l,
                        step: n,
                        fractionDigits: s
                    })]
                })
            },
            DM = ({
                label: e,
                value: t,
                step: n,
                fractionDigits: s,
                min: i,
                max: a,
                onChange: o
            }) => {
                const r = (0, Y.useCallback)((e => o({
                        ...t,
                        x: e
                    })), [o, t]),
                    l = (0, Y.useCallback)((e => o({
                        ...t,
                        y: e
                    })), [o, t]),
                    c = (0, Y.useCallback)((e => o({
                        ...t,
                        z: e
                    })), [o, t]);
                return (0, z.jsxs)(bM, {
                    title: e,
                    value: Xd(t, s ?? 1),
                    children: [(0, z.jsx)(RM, {
                        label: "X",
                        value: t.x,
                        min: i,
                        max: a,
                        onChange: r,
                        step: n,
                        fractionDigits: s
                    }), (0, z.jsx)(RM, {
                        label: "Y",
                        value: t.y,
                        min: i,
                        max: a,
                        onChange: l,
                        step: n,
                        fractionDigits: s
                    }), (0, z.jsx)(RM, {
                        label: "Z",
                        value: t.z,
                        min: i,
                        max: a,
                        onChange: c,
                        step: n,
                        fractionDigits: s
                    })]
                })
            },
            FM = ({
                label: e,
                value: t,
                step: n,
                fractionDigits: s,
                min: i,
                max: a,
                onChange: o
            }) => {
                const r = (0, Y.useCallback)((e => o({
                        ...t,
                        x: e
                    })), [o, t]),
                    l = (0, Y.useCallback)((e => o({
                        ...t,
                        y: e
                    })), [o, t]),
                    c = (0, Y.useCallback)((e => o({
                        ...t,
                        z: e
                    })), [o, t]),
                    u = (0, Y.useCallback)((e => o({
                        ...t,
                        w: e
                    })), [o, t]);
                return (0, z.jsxs)(bM, {
                    title: e,
                    value: Jd(t, s ?? 1),
                    children: [(0, z.jsx)(RM, {
                        label: "X",
                        value: t.x,
                        min: i,
                        max: a,
                        onChange: r,
                        step: n,
                        fractionDigits: s
                    }), (0, z.jsx)(RM, {
                        label: "Y",
                        value: t.y,
                        min: i,
                        max: a,
                        onChange: l,
                        step: n,
                        fractionDigits: s
                    }), (0, z.jsx)(RM, {
                        label: "Z",
                        value: t.z,
                        min: i,
                        max: a,
                        onChange: c,
                        step: n,
                        fractionDigits: s
                    }), (0, z.jsx)(RM, {
                        label: "W",
                        value: t.w,
                        min: i,
                        max: a,
                        onChange: u,
                        step: n,
                        fractionDigits: s
                    })]
                })
            };
        X.add("game-ui/debug/widgets/fields/slider-field.tsx", {
            get IntSliderField() {
                return MM
            },
            set IntSliderField(e) {
                MM = e
            },
            get FloatSliderField() {
                return RM
            },
            set FloatSliderField(e) {
                RM = e
            },
            get Float2SliderField() {
                return kM
            },
            set Float2SliderField(e) {
                kM = e
            },
            get Float3SliderField() {
                return DM
            },
            set Float3SliderField(e) {
                DM = e
            },
            get Float4SliderField() {
                return FM
            },
            set Float4SliderField(e) {
                FM = e
            }
        });
        let UM = {
            "swatch-title": "swatch-title_d15",
            swatchTitle: "swatch-title_d15",
            "swatch-alpha": "swatch-alpha_MYB",
            swatchAlpha: "swatch-alpha_MYB",
            swatch: "swatch_OaZ",
            label: "label_FVu"
        };
        X.add("game-ui/debug/widgets/fields/color-field/color-field.module.scss", {
            get classes() {
                return UM
            },
            set classes(e) {
                Object.assign(UM, e)
            }
        });
        const BM = UM;
        var GM = ({
            label: e,
            value: t,
            showAlpha: n,
            onChange: s
        }) => {
            const i = (0, Y.useCallback)((e => s({
                    ...t,
                    r: e
                })), [s, t]),
                a = (0, Y.useCallback)((e => s({
                    ...t,
                    g: e
                })), [s, t]),
                o = (0, Y.useCallback)((e => s({
                    ...t,
                    b: e
                })), [s, t]),
                r = (0, Y.useCallback)((e => s({
                    ...t,
                    a: e
                })), [s, t]);
            return (0, z.jsxs)(bM, {
                title: (0, z.jsxs)("div", {
                    className: BM.swatchTitle,
                    children: [(0, z.jsx)("div", {
                        className: BM.swatchAlpha,
                        children: (0, z.jsx)("div", {
                            className: BM.swatch,
                            style: {
                                backgroundColor: WC(t)
                            }
                        })
                    }), (0, z.jsx)("div", {
                        className: BM.label,
                        children: e
                    })]
                }),
                children: [(0, z.jsx)(RM, {
                    label: "Red",
                    value: t.r,
                    onChange: i,
                    min: 0,
                    max: 1,
                    step: .001,
                    fractionDigits: 3
                }), (0, z.jsx)(RM, {
                    label: "Green",
                    value: t.g,
                    onChange: a,
                    min: 0,
                    max: 1,
                    step: .001,
                    fractionDigits: 3
                }), (0, z.jsx)(RM, {
                    label: "Blue",
                    value: t.b,
                    onChange: o,
                    min: 0,
                    max: 1,
                    step: .001,
                    fractionDigits: 3
                }), n && (0, z.jsx)(RM, {
                    label: "Alpha",
                    value: t.a,
                    onChange: r,
                    min: 0,
                    max: 1,
                    step: .001,
                    fractionDigits: 3
                })]
            })
        };
        X.add("game-ui/debug/widgets/fields/color-field/color-field.tsx", {
            get ColorField() {
                return GM
            },
            set ColorField(e) {
                GM = e
            }
        });
        let VM = {
            toggle: "toggle_x2y"
        };
        X.add("game-ui/debug/widgets/fields/toggle-field/toggle-field.module.scss", {
            get classes() {
                return VM
            },
            set classes(e) {
                Object.assign(VM, e)
            }
        });
        const HM = VM;
        var KM = ({
            label: e,
            value: t,
            onChange: n
        }) => (0, z.jsx)(hM, {
            label: e,
            children: (0, z.jsx)(ox, {
                checked: t,
                className: HM.toggle,
                onChange: n
            })
        });
        X.add("game-ui/debug/widgets/fields/toggle-field/toggle-field.tsx", {
            get ToggleField() {
                return KM
            },
            set ToggleField(e) {
                KM = e
            }
        });
        var WM = ({
                label: e,
                value: t,
                enumMembers: n,
                onChange: s
            }) => {
                const i = (0, Y.useMemo)((() => n.findIndex((e => rm(e.value, t)))), [n, t]),
                    a = (0, Y.useCallback)((() => {
                        const e = XN(n, i, !0);
                        null != e && s(e.value)
                    }), [n, s, i]),
                    o = (0, Y.useCallback)((() => {
                        const e = $N(n, i, !0);
                        null != e && s(e.value)
                    }), [n, s, i]);
                return (0, z.jsx)(hM, {
                    label: e,
                    children: (0, z.jsx)(uM, {
                        onSelectLeft: a,
                        onSelectRight: o,
                        children: -1 !== i ? (0, z.jsx)(gu, {
                            value: n[i].displayName
                        }) : `${i}`
                    })
                })
            },
            zM = ({
                label: e,
                value: t,
                enumMembers: n,
                onChange: s
            }) => {
                const i = (0, Y.useCallback)(((e, n) => {
                    s(cm(n ? lm(t) | lm(e.value) : lm(t) & ~lm(e.value)))
                }), [s, t]);
                return (0, z.jsx)(bM, {
                    title: e,
                    children: n.filter((e => !rm(e.value, om))).map(((e, n) => (0, z.jsx)(YM, {
                        enumMember: e,
                        checked: (lm(t) & lm(e.value)) === lm(e.value),
                        onChange: i
                    }, n)))
                })
            };
        const YM = ({
            enumMember: e,
            checked: t,
            onChange: n
        }) => {
            const s = (0, Y.useCallback)((t => n(e, t)), [e, n]);
            return (0, z.jsx)(KM, {
                label: (0, z.jsx)(gu, {
                    value: e.displayName
                }),
                value: t,
                onChange: s
            })
        };
        X.add("game-ui/debug/widgets/fields/enum-field.tsx", {
            get EnumField() {
                return WM
            },
            set EnumField(e) {
                WM = e
            },
            get BitField() {
                return zM
            },
            set BitField(e) {
                zM = e
            }
        });
        let $M = {
            "text-input": "text-input_Y20",
            textInput: "text-input_Y20"
        };
        X.add("game-ui/debug/widgets/fields/input-field/input-field.module.scss", {
            get classes() {
                return $M
            },
            set classes(e) {
                Object.assign($M, e)
            }
        });
        const qM = $M;
        var XM = ({
                label: e,
                value: t,
                onChange: n
            }) => {
                const [s, i] = (0, Y.useState)(t);
                (0, Y.useEffect)((() => i(t)), [t]);
                const a = (0, Y.useCallback)((() => {
                        n(s)
                    }), [n, s]),
                    o = (0, Y.useCallback)((e => {
                        i(e.target.value)
                    }), []);
                return (0, z.jsx)(hM, {
                    label: e,
                    children: (0, z.jsx)(UE, {
                        value: s,
                        className: qM.textInput,
                        onChange: o,
                        onBlur: a
                    })
                })
            },
            QM = ({
                label: e,
                value: t,
                onChange: n
            }) => {
                const [s, i] = (0, Y.useState)(t.toString());
                (0, Y.useEffect)((() => i(t.toString())), [t]);
                const a = (0, Y.useCallback)((() => {
                        const e = Number(s);
                        isNaN(e) || n(e)
                    }), [n, s]),
                    o = (0, Y.useCallback)((e => {
                        "" !== e.target.value && isNaN(Number(e.target.value)) || i(e.target.value)
                    }), []);
                return (0, z.jsx)(hM, {
                    label: e,
                    children: (0, z.jsx)(UE, {
                        value: s,
                        className: qM.textInput,
                        onChange: o,
                        onBlur: a
                    })
                })
            };
        X.add("game-ui/debug/widgets/fields/input-field/input-field.tsx", {
            get StringInputField() {
                return XM
            },
            set StringInputField(e) {
                XM = e
            },
            get IntInputField() {
                return QM
            },
            set IntInputField(e) {
                QM = e
            }
        });
        var ZM = ({
            props: e
        }) => (0, z.jsx)(hM, {
            label: (0, z.jsx)(gu, {
                value: e.displayName
            }),
            children: e.value
        });
        X.add("game-ui/debug/widgets/fields/value-field.tsx", {
            get BoundValueField() {
                return ZM
            },
            set BoundValueField(e) {
                ZM = e
            }
        });
        let JM = {
            image: "image_BEo"
        };
        X.add("game-ui/debug/widgets/image/image.module.scss", {
            get classes() {
                return JM
            },
            set classes(e) {
                Object.assign(JM, e)
            }
        });
        const eR = JM;
        var tR = ({
            props: e
        }) => (0, z.jsx)(hM, {
            label: (0, z.jsx)(gu, {
                value: e.displayName
            }),
            children: (0, z.jsx)("img", {
                src: e.uri,
                className: eR.image
            })
        });
        X.add("game-ui/debug/widgets/image/image.tsx", {
            get BoundImage() {
                return tR
            },
            set BoundImage(e) {
                tR = e
            }
        });
        var nR = ({
                parent: e,
                data: t
            }) => (0, z.jsx)(ZA, {
                parent: e,
                components: sR,
                data: t
            }),
            sR = {
                [_A.Group]: oM,
                [_A.ExpandableGroup]: vM,
                [_A.Button]: nM,
                [_A.ValueField]: ZM,
                [_A.ToggleField]: iR(KM),
                [_A.IntSliderField]: iR(MM),
                [vA.IntArrowField]: iR(gM),
                [_A.IntInputField]: iR(QM),
                [_A.UIntSliderField]: iR(MM),
                [vA.UIntArrowField]: iR(gM),
                [_A.FloatSliderField]: iR(RM),
                [vA.FloatArrowField]: iR(pM),
                [_A.Float2SliderField]: iR(kM),
                [_A.Float3SliderField]: iR(DM),
                [_A.Float4SliderField]: iR(FM),
                [_A.EnumField]: iR(WM),
                [_A.FlagsField]: iR(zM),
                [_A.ColorField]: iR(GM),
                [_A.StringInputField]: iR(XM),
                [vA.Image]: tR
            };

        function iR(e) {
            const t = ({
                parent: t,
                path: n,
                props: s
            }) => {
                const i = xA(SA, HA(t, n));
                return (0, z.jsx)(e, {
                    ...s,
                    label: (0, z.jsx)(gu, {
                        value: s.displayName
                    }),
                    onChange: i
                })
            };
            return t.displayName = e.displayName ?? e.name, t
        }
        X.add("game-ui/debug/widgets/debug-widget-renderer.tsx", {
            get DebugWidgetListRenderer() {
                return nR
            },
            set DebugWidgetListRenderer(e) {
                nR = e
            },
            get debugWidgetComponents() {
                return sR
            },
            set debugWidgetComponents(e) {
                sR = e
            }
        });
        let aR = {
            title: "title_f1a",
            value: "value_bvH"
        };
        X.add("game-ui/debug/components/debug-binding-output/debug-binding-output.module.scss", {
            get classes() {
                return aR
            },
            set classes(e) {
                Object.assign(aR, e)
            }
        });
        const oR = aR;
        var rR = ({
            binding: e,
            className: t
        }) => {
            const [n, s] = (0, Y.useState)(0), [i, a] = (0, Y.useState)("");
            return (0, Y.useEffect)((() => {
                const t = e => {
                    a(JSON.stringify(e, null, 2)), s((e => e + 1))
                };
                if (e.debugType === ZL.Event) {
                    const n = Zr(e.group, e.name),
                        s = n.subscribe(t);
                    return () => {
                        s.dispose(), n.dispose()
                    }
                }
                if (e.debugType === ZL.Value) {
                    const n = $r(e.group, e.name, "undefined"),
                        i = n.subscribe();
                    return a(JSON.stringify(i.value, null, 2)), s(0), i.setChangeListener(t), () => {
                        i.dispose(), n.dispose()
                    }
                }
            }), [e.group, e.name, e.debugType]), (0, z.jsxs)("div", {
                className: Zu()(oR.debugBindingOutput, t),
                children: [(0, z.jsx)("div", {
                    className: oR.title,
                    children: `${e.group}.${e.name}, Update Count: ${n}`
                }), (0, z.jsx)("div", {
                    className: oR.value,
                    children: i
                })]
            })
        };
        X.add("game-ui/debug/components/debug-binding-output/debug-binding-output.tsx", {
            get DebugBindingOutput() {
                return rR
            },
            set DebugBindingOutput(e) {
                rR = e
            }
        });
        let lR = {
            "fps-display": "fps-display_t30",
            fpsDisplay: "fps-display_t30",
            value: "value_vNu",
            graph: "graph_EEa"
        };
        X.add("game-ui/debug/components/fps-display/fps-display.module.scss", {
            get classes() {
                return lR
            },
            set classes(e) {
                Object.assign(lR, e)
            }
        });
        const cR = lR;
        var uR = () => {
            switch (sl(gE)) {
            case rE.Simple:
                return (0, z.jsx)(dR, {});
            case rE.Advanced:
                return (0, z.jsx)(gR, {});
            case rE.Precise:
                return (0, z.jsx)(pR, {});
            default:
                return null
            }
        };
        const dR = () => {
                const e = sl(pE);
                return (0, z.jsx)("div", {
                    className: cR.fpsDisplay,
                    children: (0, z.jsx)("div", {
                        className: cR.value,
                        children: `${e.fps.toFixed(0).padStart(3," ")} FPS`
                    })
                })
            },
            mR = 250,
            hR = 50,
            gR = () => {
                const e = sl(pE),
                    t = e.fps > 0 ? 1e3 / e.fps : 0,
                    n = al(pE),
                    s = (0, Y.useRef)(null);
                return (0, Y.useEffect)((() => {
                    const e = new Array(mR);
                    let t = e.length - 1,
                        i = 30;
                    for (let t = 0; t < e.length; t++) e[t] = 0;
                    let a = 0;
                    return function o() {
                        t = (t + 1) % e.length, e[t] = n.current.fps, i = Math.max(n.current.fps, i);
                        const r = s.current?.getContext("2d");
                        if (null != r) {
                            r.fillStyle = "rgb(0, 0, 0)", r.fillRect(0, 0, r.canvas.width, r.canvas.height);
                            for (let n = 0; n < e.length; n++) {
                                const s = e[(e.length + t - n) % e.length],
                                    a = s / i * hR;
                                r.fillStyle = WC(TR(s)), r.fillRect(mR - n - 1, hR - a, 1, a)
                            }
                        }
                        a = window.requestAnimationFrame(o)
                    }(), () => window.cancelAnimationFrame(a)
                }), [n]), (0, z.jsx)(z.Fragment, {
                    children: (0, z.jsxs)("div", {
                        className: cR.fpsDisplay,
                        children: [(0, z.jsx)("canvas", {
                            ref: s,
                            className: cR.graph,
                            width: mR,
                            height: hR
                        }), (0, z.jsxs)("div", {
                            className: cR.value,
                            children: [`Frame: ${t.toFixed(2).padStart(7," ")}ms`, `${e.fps.toFixed(2)} FPS`]
                        })]
                    })
                })
            },
            pR = () => {
                const e = sl(pE),
                    t = al(pE),
                    n = (0, Y.useRef)(null);
                return (0, Y.useEffect)((() => {
                    const e = new Array(mR);
                    let s = e.length - 1,
                        i = 30;
                    for (let t = 0; t < e.length; t++) e[t] = 0;
                    let a = 0;
                    return function o() {
                        s = (s + 1) % e.length, e[s] = t.current.fps, i = Math.max(t.current.fps, i);
                        const r = n.current?.getContext("2d");
                        if (null != r) {
                            r.fillStyle = "rgb(0, 0, 0)", r.fillRect(0, 0, r.canvas.width, r.canvas.height);
                            for (let t = 0; t < e.length; t++) {
                                const n = e[(e.length + s - t) % e.length],
                                    a = n / i * hR;
                                r.fillStyle = WC(TR(n)), r.fillRect(mR - t - 1, hR - a, 1, a)
                            }
                        }
                        a = window.requestAnimationFrame(o)
                    }(), () => window.cancelAnimationFrame(a)
                }), [t]), (0, z.jsx)(z.Fragment, {
                    children: (0, z.jsxs)("div", {
                        className: cR.fpsDisplay,
                        children: [(0, z.jsx)("canvas", {
                            ref: n,
                            className: cR.graph,
                            width: mR,
                            height: hR
                        }), (0, z.jsxs)("div", {
                            className: cR.value,
                            children: [`CPU Main: ${e.cpuMainThreadTime.toFixed(2).padStart(5," ")}ms    Render: ${e.cpuRenderThreadTime.toFixed(2).padStart(5," ")}ms`, `GPU: ${e.gpuTime.toFixed(2).padStart(5," ")}ms     Total: ${e.fullFameTime.toFixed(2).padStart(5," ")}ms`, `${e.fps.toFixed(2)} FPS`]
                        })]
                    })
                })
            },
            fR = 20,
            xR = 4,
            vR = {
                r: 0,
                g: 1,
                b: 0,
                a: 1
            },
            _R = {
                r: 1,
                g: 1,
                b: 0,
                a: 1
            },
            bR = {
                r: 1,
                g: 0,
                b: 0,
                a: 1
            };

        function TR(e) {
            const t = Od((e - xR) / (fR - xR), 0, 1);
            return t < .5 ? ZC(bR, _R, 2 * t) : ZC(_R, vR, 2 * t - 1)
        }
        X.add("game-ui/debug/components/fps-display/fps-display.tsx", {
            get FpsDisplay() {
                return uR
            },
            set FpsDisplay(e) {
                uR = e
            }
        });
        let ER = {
            "color-legend": "color-legend_Bzi",
            colorLegend: "color-legend_Bzi",
            symbol: "symbol_aAH",
            value: "value_rfe"
        };
        X.add("game-ui/common/charts/legends/color-legend.module.scss", {
            get classes() {
                return ER
            },
            set classes(e) {
                Object.assign(ER, e)
            }
        });
        const IR = ER;
        var yR = ({
                color: e,
                label: t,
                className: n,
                children: s
            }) => (0, z.jsxs)("div", {
                className: Zu()(IR.colorLegend, n),
                children: [(0, z.jsx)(jR, {
                    color: e
                }), (0, z.jsx)("div", {
                    className: IR.label,
                    children: t
                }), Y.Children.count(s) > 0 && (0, z.jsx)("div", {
                    className: IR.value,
                    children: s
                })]
            }),
            jR = ({
                color: e,
                className: t
            }) => (0, z.jsx)("div", {
                className: Zu()(IR.symbol, t),
                style: {
                    backgroundColor: e
                }
            });

        function SR({
            type: e,
            data: t,
            options: n,
            mergeCallback: s = NR,
            ...i
        }) {
            const a = (0, Y.useRef)(null),
                o = (0, Y.useRef)(null),
                r = (0, Y.useRef)(null),
                l = hm(r) ?? Ad,
                c = l.x > 0 && l.y > 0,
                u = Hm(),
                d = (0, Y.useCallback)((e => {
                    e.canvas.style.width = 100 * Math.trunc(l.x) / l.x + "%", e.canvas.style.height = 100 * Math.trunc(l.y) / l.y + "%"
                }), [l]),
                m = (0, Y.useMemo)((() => ({
                    ...n,
                    responsive: !1,
                    maintainAspectRatio: !1,
                    devicePixelRatio: u,
                    onResize: d
                })), [u, d, n]);
            (0, Y.useEffect)((() => {
                if (c)
                    if (null != o.current && (o.current.canvas === a.current && o.current.config.type === e || (o.current.destroy(), o.current = null)), null == o.current) {
                        if (null == a.current) return;
                        const n = {
                            datasets: []
                        };
                        CR(n, t, s), o.current = new Pa(a.current, {
                            type: e,
                            data: n,
                            options: m
                        })
                    } else CR(o.current.data, t, s), o.current.options = m, o.current.update()
            }), [c, e, t, m, s]), (0, Y.useEffect)((() => {
                null != o.current && c && (o.current.resize(l.x / u, l.y / u), o.current.update("none"), d(o.current))
            }), [c, l, u, d]), (0, Y.useEffect)((() => () => {
                null != o.current && o.current.destroy()
            }), []);
            const h = (0, Y.useMemo)((() => ({
                width: "300px",
                height: "150px",
                display: "flex"
            })), []);
            return (0, z.jsx)("div", {
                ref: r,
                ...i,
                children: (0, z.jsx)("canvas", {
                    ref: a,
                    style: h
                })
            })
        }

        function CR(e, t, n) {
            t !== e && Object.assign(e, {
                ...t,
                datasets: t.datasets.map((t => {
                    const s = e.datasets.find((e => e.label === t.label && e.type === t.type));
                    if (null != s) {
                        if (t !== s) {
                            const e = n(s.data, t.data);
                            Object.assign(s, {
                                ...t,
                                mergedData: e
                            })
                        }
                        return s
                    }
                    return {
                        ...t,
                        data: [...t.data]
                    }
                }))
            })
        }

        function NR(e, t) {
            const n = new Array(t.length);
            return Object.assign(n, e, t), n
        }

        function wR(e, t) {
            let n = 0;
            for (let s = 0; s < t.length; s++) {
                const i = {
                    ...t[s]
                };
                let a = 0;
                for (; n < e.length && !(e[n].x > i.x); n++) e[n].x !== i.x && a++;
                n > 0 && e[n - 1].x === i.x ? (e[n - 1] = i, 0 !== a && (e.splice(n - 1 - a, a), n -= a)) : (e.splice(n - a, a, i), n++, n -= a)
            }
            const s = e.length - n;
            return s > 0 && e.splice(n, s), e
        }
        X.add("game-ui/common/charts/legends/color-legend.tsx", {
            get ColorLegend() {
                return yR
            },
            set ColorLegend(e) {
                yR = e
            },
            get ColorLegendSymbol() {
                return jR
            },
            set ColorLegendSymbol(e) {
                jR = e
            }
        }), Pa.register(Wa, eo, Ya, Qs, ei, ii, nr, or, wo, Zo, Ao), Pa.defaults.font.family = "Overpass", Pa.defaults.responsive = !1, Pa.defaults.maintainAspectRatio = !1, Pa.defaults.animation = !1, Pa.defaults.plugins.tooltip.enabled = !1, Pa.defaults.plugins.legend.display = !1, Pa.defaults.events = [], Pa.defaults.transitions.resize.animation.duration = 0, Pa.defaults.scales.linear.ticks.callback = e => e.toString(), X.add("game-ui/common/charts/responsive-chart/responsive-chart.tsx", {
            get ResponsiveChart() {
                return SR
            },
            set ResponsiveChart(e) {
                SR = e
            },
            get defaultMergeCallback() {
                return NR
            },
            set defaultMergeCallback(e) {
                NR = e
            },
            get xyMergeCallback() {
                return wR
            },
            set xyMergeCallback(e) {
                wR = e
            }
        });
        let OR = {
            "watches-output": "watches-output_GMe",
            watchesOutput: "watches-output_GMe",
            chart: "chart_u1n",
            legend: "legend_obt",
            "legend-item": "legend-item_Osn",
            legendItem: "legend-item_Osn"
        };
        X.add("game-ui/debug/components/watches-output/watches-output.module.scss", {
            get classes() {
                return OR
            },
            set classes(e) {
                Object.assign(OR, e)
            }
        });
        const PR = OR;
        var LR = ({
                watches: e,
                className: t
            }) => {
                const n = e.filter((e => e.__Type === JL.History)),
                    s = e.filter((e => e.__Type === JL.Distribution));
                return (0, z.jsxs)("div", {
                    className: Zu()(PR.watchesOutput, t),
                    children: [n.length > 0 && (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(AR, {
                            watches: n
                        }), (0, z.jsx)("div", {
                            className: PR.legend,
                            children: n.map(((e, t) => (0, z.jsx)(yR, {
                                color: e.color,
                                label: e.name,
                                className: PR.legendItem
                            }, t)))
                        })]
                    }), s.length > 0 && (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(MR, {
                            watches: s
                        }), (0, z.jsx)("div", {
                            className: PR.legend,
                            children: s.map(((e, t) => (0, z.jsx)(yR, {
                                color: e.color,
                                label: e.name,
                                className: PR.legendItem
                            }, t)))
                        })]
                    })]
                })
            },
            AR = ({
                watches: e
            }) => {
                const t = (0, Y.useMemo)((() => ({
                        datasets: e.map(((e, t) => ({
                            label: e.name,
                            showLine: !0,
                            data: e.history.filter((e => 0 !== e.x)),
                            borderColor: e.color
                        })))
                    })), [e]),
                    n = function () {
                        const e = sl(Ml);
                        return (0, Y.useMemo)((() => ({
                            layout: {
                                padding: {
                                    top: 15,
                                    right: 30,
                                    left: 30,
                                    bottom: 30
                                }
                            },
                            elements: {
                                line: {
                                    tension: 0,
                                    borderWidth: 2,
                                    backgroundColor: "transparent"
                                },
                                point: {
                                    radius: 0
                                }
                            },
                            scales: {
                                x: {
                                    type: "linear",
                                    beginAtZero: !1,
                                    grid: {
                                        display: !1
                                    },
                                    ticks: {
                                        display: !1
                                    }
                                },
                                y: {
                                    beginAtZero: !0,
                                    ticks: {
                                        font: {
                                            size: 10 * e
                                        },
                                        color: "white",
                                        maxTicksLimit: 10,
                                        callback: e => bu(e)
                                    }
                                }
                            }
                        })), [e])
                    }();
                return (0, z.jsx)(SR, {
                    type: "scatter",
                    data: t,
                    options: n,
                    className: PR.chart
                })
            },
            MR = ({
                watches: e
            }) => {
                const t = (0, Y.useMemo)((() => ({
                        datasets: e.map(((e, t) => ({
                            label: e.name,
                            showLine: !0,
                            data: e.buckets.map((e => ({
                                x: Pd(e.min, e.max, .5),
                                y: e.count
                            }))),
                            borderColor: e.color,
                            stepped: "middle"
                        })))
                    })), [e]),
                    n = function () {
                        const e = sl(Ml);
                        return (0, Y.useMemo)((() => ({
                            layout: {
                                padding: {
                                    top: 15,
                                    right: 30,
                                    left: 30,
                                    bottom: 30
                                }
                            },
                            elements: {
                                line: {
                                    tension: 0,
                                    borderWidth: 2,
                                    backgroundColor: "transparent"
                                },
                                point: {
                                    radius: 0
                                }
                            },
                            scales: {
                                x: {
                                    type: "linear",
                                    beginAtZero: !1,
                                    ticks: {
                                        font: {
                                            size: 10 * e
                                        },
                                        color: "white",
                                        maxTicksLimit: 25,
                                        callback: e => bu(e)
                                    }
                                },
                                y: {
                                    beginAtZero: !0,
                                    ticks: {
                                        font: {
                                            size: 10 * e
                                        },
                                        color: "white",
                                        maxTicksLimit: 10,
                                        callback: e => bu(e)
                                    }
                                }
                            }
                        })), [e])
                    }();
                return (0, z.jsx)(SR, {
                    type: "scatter",
                    data: t,
                    options: n,
                    className: PR.chart
                })
            };
        X.add("game-ui/debug/components/watches-output/watches-output.tsx", {
            get WatchesOutput() {
                return LR
            },
            set WatchesOutput(e) {
                LR = e
            },
            get HistoryChart() {
                return AR
            },
            set HistoryChart(e) {
                AR = e
            },
            get DistributionChart() {
                return MR
            },
            set DistributionChart(e) {
                MR = e
            }
        });
        let RR = {
            debugging: "debugging_dvz",
            "debug-ui": "debug-ui_M_y",
            debugUi: "debug-ui_M_y",
            inspector: "inspector_GbW",
            "output-column": "output-column_py9",
            outputColumn: "output-column_py9",
            output: "output_NHr",
            "tab-bar": "tab-bar_b_c",
            tabBar: "tab-bar_b_c",
            "title-bar": "title-bar_Yno",
            titleBar: "title-bar_Yno",
            title: "title_HzQ",
            scrollable: "scrollable_ivK"
        };
        X.add("game-ui/debug/components/debug-ui.module.scss", {
            get classes() {
                return RR
            },
            set classes(e) {
                Object.assign(RR, e)
            }
        });
        const kR = RR,
            DR = new Eg("CHILDREN"),
            FR = new Eg("DEBUG_UI");
        var UR = ({
                children: e
            }) => {
                const t = sl(eA),
                    n = sl(tA),
                    s = (0, Y.useMemo)((() => ({
                        "Debug UI": () => {
                            n ? dA() : uA()
                        }
                    })), [n]);
                return t ? (0, z.jsx)(Ag, {
                    actions: s,
                    children: (0, z.jsxs)(ap, {
                        focused: n ? FR : DR,
                        children: [(0, z.jsx)(ip, {
                            focusKey: DR,
                            children: e
                        }), (0, z.jsxs)("div", {
                            className: kR.debugging,
                            children: [n && (0, z.jsx)(BR, {
                                focusKey: FR
                            }), (0, z.jsx)(uR, {})]
                        })]
                    })
                }) : (0, z.jsx)(z.Fragment, {
                    children: e
                })
            },
            BR = ({
                focusKey: e
            }) => {
                const t = sl(nA),
                    n = sl(sA),
                    s = sl(iA),
                    i = sl(aA),
                    a = sl(vO),
                    o = (0, Y.useMemo)((() => ({
                        Back: dA,
                        "Switch Tab": e => {
                            e < 0 ? mA() : gA()
                        },
                        "Pause Simulation": a ? null : () => {
                            lp(rp.pauseSimulation), TO(!0)
                        },
                        "Resume Simulation": a ? () => {
                            lp(rp.resumeSimulation), TO(!1)
                        } : null
                    })), [a]);
                (0, Y.useEffect)((() => {
                    const e = e => {
                        e.repeat || (37 === e.keyCode ? (mA(), e.preventDefault()) : 39 === e.keyCode && (gA(), e.preventDefault()))
                    };
                    return document.addEventListener("keydown", e), () => document.removeEventListener("keydown", e)
                }), []), (0, Y.useEffect)((() => {
                    const e = rA.subscribe((e => {
                        e.debugType === ZL.Trigger && tl(e.group, e.name)
                    }));
                    return () => e.dispose()
                }), []);
                const r = sl(oA),
                    l = sl(cA),
                    c = VA("debug");
                return (0, z.jsx)(Ag, {
                    actions: o,
                    children: (0, z.jsxs)(Ip, {
                        focusKey: e,
                        className: kR.debugUi,
                        children: [(0, z.jsxs)("div", {
                            className: kR.inspector,
                            children: [(0, z.jsx)("div", {
                                className: kR.tabBar,
                                children: t.map(((e, t) => (0, z.jsx)(GR, {
                                    index: t,
                                    name: e,
                                    selected: t === n
                                }, t)))
                            }), (0, z.jsx)(ff, {
                                smooth: !1,
                                className: kR.scrollable,
                                children: (0, z.jsx)(tp, {
                                    children: null != i && (0, z.jsx)(nR, {
                                        parent: c,
                                        data: i
                                    })
                                })
                            }, s?.displayName)]
                        }), (0, z.jsxs)(ff, {
                            className: kR.outputColumn,
                            children: [null != r && (0, z.jsx)(rR, {
                                binding: r,
                                className: kR.output
                            }), l.length > 0 && (0, z.jsx)(LR, {
                                watches: l,
                                className: kR.output
                            })]
                        })]
                    })
                })
            };
        const GR = ({
            index: e,
            name: t,
            selected: n
        }) => {
            const s = (0, Y.useCallback)((() => hA(e)), [e]);
            return (0, z.jsx)(Gp, {
                focusKey: Ig,
                selected: n,
                theme: fA,
                onSelect: s,
                children: t
            })
        };

        function VR(e) {
            for (let e = document.body.classList.length - 1; e >= 0; e--) {
                const t = document.body.classList[e];
                t.startsWith("style--") && document.body.classList.remove(t)
            }
            document.body.classList.add("style--" + e)
        }

        function HR(e) {
            const t = 1 - .75 * KR(e, 1);
            document.documentElement.style.setProperty("--panelOpacityNormal", t.toString().replace(",", "."));
            const n = KR(t, .66);
            document.documentElement.style.setProperty("--panelOpacityDark", n.toString().replace(",", ".")), 0 === e ? document.body.classList.add("no-panel-blur") : document.body.classList.remove("no-panel-blur")
        }

        function KR(e, t) {
            return -t * e * e + (1 + t) * e
        }

        function WR(e) {
            document.documentElement.style.setProperty("--fontScale", e.toString().replace(",", "."))
        }

        function zR(e) {
            document.documentElement.style.fontSize = e ? "" : "1px"
        }
        X.add("game-ui/debug/components/debug-ui.tsx", {
            get DebugUIRenderer() {
                return UR
            },
            set DebugUIRenderer(e) {
                UR = e
            },
            get DebugUI() {
                return BR
            },
            set DebugUI(e) {
                BR = e
            }
        }), X.add("game-ui/common/app/interface.ts", {
            get applyInterfaceStyle() {
                return VR
            },
            set applyInterfaceStyle(e) {
                VR = e
            },
            get applyInterfaceTransparency() {
                return HR
            },
            set applyInterfaceTransparency(e) {
                HR = e
            },
            get applyTextScale() {
                return WR
            },
            set applyTextScale(e) {
                WR = e
            },
            get applyInterfaceScalingEnabled() {
                return zR
            },
            set applyInterfaceScalingEnabled(e) {
                zR = e
            }
        });
        var YR = () => {
            const [e, t] = (0, Y.useState)(1), n = OM(.1);
            return (0, Y.useEffect)((() => WR(Math.round(10 * e) / 10)), [e]), (0, z.jsxs)("div", {
                style: {
                    position: "absolute",
                    top: 0,
                    left: 0,
                    width: 150,
                    padding: 10,
                    backgroundColor: "rgba(0,0,0,0.5)",
                    zIndex: 9999,
                    fontSize: 10
                },
                children: [(0, z.jsx)(CM, {
                    focusKey: Ig,
                    value: e,
                    start: 1,
                    end: 1.4,
                    valueTransformer: n,
                    style: {
                        pointerEvents: "auto"
                    },
                    onChange: t
                }), Math.round(100 * e)]
            })
        };

        function $R(e = !0) {
            (0, Y.useEffect)((() => {
                if (e) {
                    const e = e => {
                        82 !== e.keyCode && 116 !== e.keyCode || !e.metaKey && !e.ctrlKey || window.location.reload()
                    };
                    return window.addEventListener("keydown", e), () => window.removeEventListener("keydown", e)
                }
            }), [e])
        }
        X.add("game-ui/debug/components/text-scale-slider/text-scale-slider.tsx", {
            get TextScaleSlider() {
                return YR
            },
            set TextScaleSlider(e) {
                YR = e
            }
        }), X.add("game-ui/debug/debug-shortcuts.ts", {
            get useDebugShortcuts() {
                return $R
            },
            set useDebugShortcuts(e) {
                $R = e
            }
        });
        const qR = "menu";
        var XR, QR;
        ! function (e) {
            e[e.Menu = 0] = "Menu", e[e.NewGame = 1] = "NewGame", e[e.LoadGame = 2] = "LoadGame", e[e.Options = 3] = "Options", e[e.Credits = 4] = "Credits"
        }(XR || (XR = {})),
        function (e) {
            e[e.None = -1] = "None", e[e.Default = 0] = "Default", e[e.Custom = 1] = "Custom"
        }(QR || (QR = {}));
        var ZR, JR = $r(qR, "activeScreen"),
            ek = $r(qR, "gameVersion"),
            tk = $r(qR, "canContinueGame"),
            nk = $r(qR, "hasCompletedTutorials"),
            sk = $r(qR, "showTutorials"),
            ik = $r(qR, "modsEnabled"),
            ak = $r(qR, "pdxModsUIEnabled"),
            ok = $r(qR, "hideEditorButton"),
            rk = $r(qR, "hideModsUIButton"),
            lk = $r(qR, "displayModdingBetaBanners"),
            ck = $r(qR, "savePreview"),
            uk = $r(qR, "mapName"),
            dk = $r(qR, "lastSaveName"),
            mk = $r(qR, "defaultGameOptions"),
            hk = $r(qR, "canExitGame"),
            gk = $r(qR, "saveGameSlots"),
            pk = $r(qR, "isModsUIActive"),
            fk = $r(qR, "themes"),
            xk = $r(qR, "maps"),
            vk = $r(qR, "availableMapFilters"),
            _k = $r(qR, "selectedMapFilter"),
            bk = $r(qR, "saves"),
            Tk = $r(qR, "creditFiles"),
            Ek = $r(qR, "saveabilityStatus");

        function Ik(e) {
            tl(qR, "setActiveScreen", e)
        }

        function yk() {
            tl(qR, "continueGame")
        }

        function jk(e) {
            tl(qR, "newGame", e)
        }

        function Sk(e, t) {
            tl(qR, "loadGame", e, t)
        }

        function Ck(e) {
            tl(qR, "saveGame", e)
        }

        function Nk(e) {
            tl(qR, "deleteSave", e)
        }

        function wk(e) {
            tl(qR, "shareSave", e)
        }

        function Ok(e) {
            tl(qR, "shareMap", e)
        }

        function Pk() {
            tl(qR, "startEditor")
        }

        function Lk() {
            tl(qR, "exitToMainMenu")
        }

        function Ak() {
            tl(qR, "showPdxModsUI")
        }

        function Mk(e) {
            tl(qR, "onSaveGameScreenVisibilityChanged", e)
        }

        function Rk(e) {
            tl(qR, "applyTutorialSettings", e === ZR.Continue || e === ZR.Reset, e === ZR.Reset)
        }

        function kk() {
            const e = sl(sk);
            return (0, Y.useState)(e ? ZR.Continue : ZR.Disable)
        }! function (e) {
            e[e.Continue = 0] = "Continue", e[e.Reset = 1] = "Reset", e[e.Disable = 2] = "Disable"
        }(ZR || (ZR = {}));
        var Dk = Jr(qR, "quicksave"),
            Fk = el(qR, "quickload"),
            Uk = $r(qR, "availableCloudTargets"),
            Bk = $r(qR, "selectedCloudTarget"),
            Gk = $r(qR, "dismissLoadGameConfirmation"),
            Vk = el(qR, "selectCloudTarget"),
            Hk = el(qR, "selectMapFilter");
        X.add("game-ui/menu/data-binding/menu-bindings.ts", {
            get MenuScreen() {
                return XR
            },
            set MenuScreen(e) {
                XR = e
            },
            get MapFilter() {
                return QR
            },
            set MapFilter(e) {
                QR = e
            },
            get activeMenuScreen() {
                return activeMenuScreen
            },
            set activeMenuScreen(e) {
                activeMenuScreen = e
            },
            get gameVersion() {
                return gameVersion
            },
            set gameVersion(e) {
                gameVersion = e
            },
            get canContinueGame() {
                return canContinueGame
            },
            set canContinueGame(e) {
                canContinueGame = e
            },
            get hasCompletedTutorials() {
                return hasCompletedTutorials
            },
            set hasCompletedTutorials(e) {
                hasCompletedTutorials = e
            },
            get tutorialsEnabled() {
                return tutorialsEnabled
            },
            set tutorialsEnabled(e) {
                tutorialsEnabled = e
            },
            get modsEnabled() {
                return modsEnabled
            },
            set modsEnabled(e) {
                modsEnabled = e
            },
            get pdxModsUIEnabled() {
                return pdxModsUIEnabled
            },
            set pdxModsUIEnabled(e) {
                pdxModsUIEnabled = e
            },
            get hideEditor() {
                return hideEditor
            },
            set hideEditor(e) {
                hideEditor = e
            },
            get hideModsUI() {
                return hideModsUI
            },
            set hideModsUI(e) {
                hideModsUI = e
            },
            get displayModdingBetaBanners() {
                return displayModdingBetaBanners
            },
            set displayModdingBetaBanners(e) {
                displayModdingBetaBanners = e
            },
            get savePreview() {
                return savePreview
            },
            set savePreview(e) {
                savePreview = e
            },
            get mapName() {
                return mapName
            },
            set mapName(e) {
                mapName = e
            },
            get lastSaveName() {
                return lastSaveName
            },
            set lastSaveName(e) {
                lastSaveName = e
            },
            get defaultGameOptions() {
                return defaultGameOptions
            },
            set defaultGameOptions(e) {
                defaultGameOptions = e
            },
            get canExitGame() {
                return canExitGame
            },
            set canExitGame(e) {
                canExitGame = e
            },
            get saveGameSlots() {
                return saveGameSlots
            },
            set saveGameSlots(e) {
                saveGameSlots = e
            },
            get modsUIActive() {
                return modsUIActive
            },
            set modsUIActive(e) {
                modsUIActive = e
            },
            get themes() {
                return themes
            },
            set themes(e) {
                themes = e
            },
            get maps() {
                return maps
            },
            set maps(e) {
                maps = e
            },
            get availableMapFilters() {
                return availableMapFilters
            },
            set availableMapFilters(e) {
                availableMapFilters = e
            },
            get selectedMapFilter() {
                return selectedMapFilter
            },
            set selectedMapFilter(e) {
                selectedMapFilter = e
            },
            get saves() {
                return saves
            },
            set saves(e) {
                saves = e
            },
            get creditFiles() {
                return creditFiles
            },
            set creditFiles(e) {
                creditFiles = e
            },
            get saveability() {
                return saveability
            },
            set saveability(e) {
                saveability = e
            },
            get setActiveMenuScreen() {
                return Ik
            },
            set setActiveMenuScreen(e) {
                Ik = e
            },
            get continueGame() {
                return yk
            },
            set continueGame(e) {
                yk = e
            },
            get newGame() {
                return jk
            },
            set newGame(e) {
                jk = e
            },
            get loadGame() {
                return Sk
            },
            set loadGame(e) {
                Sk = e
            },
            get saveGame() {
                return Ck
            },
            set saveGame(e) {
                Ck = e
            },
            get deleteSave() {
                return Nk
            },
            set deleteSave(e) {
                Nk = e
            },
            get shareSave() {
                return wk
            },
            set shareSave(e) {
                wk = e
            },
            get shareMap() {
                return Ok
            },
            set shareMap(e) {
                Ok = e
            },
            get startEditor() {
                return Pk
            },
            set startEditor(e) {
                Pk = e
            },
            get exitToMainMenu() {
                return Lk
            },
            set exitToMainMenu(e) {
                Lk = e
            },
            get showPdxModsUI() {
                return Ak
            },
            set showPdxModsUI(e) {
                Ak = e
            },
            get onSaveGameScreenVisibilityChanged() {
                return Mk
            },
            set onSaveGameScreenVisibilityChanged(e) {
                Mk = e
            },
            get TutorialState() {
                return ZR
            },
            set TutorialState(e) {
                ZR = e
            },
            get applyTutorialSettings() {
                return Rk
            },
            set applyTutorialSettings(e) {
                Rk = e
            },
            get useTutorialSettingsState() {
                return kk
            },
            set useTutorialSettingsState(e) {
                kk = e
            },
            get quicksave() {
                return Dk
            },
            set quicksave(e) {
                Dk = e
            },
            get quickload() {
                return Fk
            },
            set quickload(e) {
                Fk = e
            },
            get availableCloudTargets() {
                return availableCloudTargets
            },
            set availableCloudTargets(e) {
                availableCloudTargets = e
            },
            get selectedCloudTarget() {
                return selectedCloudTarget
            },
            set selectedCloudTarget(e) {
                selectedCloudTarget = e
            },
            get dismissLoadGameConfirmation() {
                return dismissLoadGameConfirmation
            },
            set dismissLoadGameConfirmation(e) {
                dismissLoadGameConfirmation = e
            },
            get selectCloudTarget() {
                return Vk
            },
            set selectCloudTarget(e) {
                Vk = e
            },
            get selectMapFilter() {
                return Hk
            },
            set selectMapFilter(e) {
                Hk = e
            }
        });
        var Kk = ({
                children: e
            }) => (0, z.jsx)(Wk, {
                binding: lk,
                children: e
            }),
            Wk = ({
                children: e,
                binding: t
            }) => sl(t) ? (0, z.jsx)(z.Fragment, {
                children: e
            }) : null;
        X.add("game-ui/common/beta-element/beta-element.tsx", {
            get ModdingBetaElement() {
                return Kk
            },
            set ModdingBetaElement(e) {
                Kk = e
            },
            get BetaElement() {
                return Wk
            },
            set BetaElement(e) {
                Wk = e
            }
        });
        let zk = {
            "beta-banner": "beta-banner_qiZ",
            betaBanner: "beta-banner_qiZ"
        };
        X.add("game-ui/common/beta-element/beta-banner/beta-banner.module.scss", {
            get classes() {
                return zk
            },
            set classes(e) {
                Object.assign(zk, e)
            }
        });
        const Yk = zk;
        var $k = () => (0, z.jsx)(Kk, {
                children: (0, z.jsx)(qk, {
                    children: (0, z.jsx)(Pc.Editor.BETA_BANNER, {})
                })
            }),
            qk = ({
                children: e
            }) => (0, z.jsx)("div", {
                className: Yk.betaBanner,
                children: e
            });
        X.add("game-ui/common/beta-element/beta-banner/beta-banner.tsx", {
            get ModdingBetaBanner() {
                return $k
            },
            set ModdingBetaBanner(e) {
                $k = e
            },
            get BetaBanner() {
                return qk
            },
            set BetaBanner(e) {
                qk = e
            }
        });
        var Xk, Qk, Zk, Jk = "editorPanel";
        ! function (e) {
            e.EditorSection = "Game.UI.Editor.EditorSection", e.Compass = "Game.UI.Editor.Compass", e.TimeOfDayWeightsChart = "Game.UI.Editor.TimeOfDayWeightsChart", e.ItemPicker = "Game.UI.Editor.ItemPicker", e.ItemPickerFooter = "Game.UI.Editor.ItemPickerFooter", e.SearchField = "Game.UI.Editor.SearchField", e.PopupSearchField = "Game.UI.Editor.PopupSearchField", e.LocalizationField = "Game.UI.Editor.LocalizationField", e.FilterMenu = "Game.UI.Editor.FilterMenu", e.HierarchyMenu = "Game.UI.Editor.HierarchyMenu", e.SeasonsField = "Game.UI.Editor.SeasonsField", e.ModdingBetaBanner = "Game.UI.Editor.ModdingBetaBanner", e.ErrorLabel = "Game.UI.Editor.ErrorLabel", e.StringInputFieldWithError = "Game.UI.Editor.StringInputFieldWithError", e.ExternalLinkField = "Game.UI.Editor.ExternalLinkField", e.ProgressIndicator = "Game.UI.Editor.ProgressIndicator", e.LargeIconButton = "Game.UI.Editor.LargeIconButton", e.ListField = "Game.UI.Editor.ListField"
        }(Xk || (Xk = {})),
        function (e) {
            e[e.Loading = 0] = "Loading", e[e.Success = 1] = "Success", e[e.Failure = 2] = "Failure"
        }(Qk || (Qk = {})),
        function (e) {
            e[e.Editor = 0] = "Editor", e[e.PhotoMode = 1] = "PhotoMode"
        }(Zk || (Zk = {}));
        var eD = $r(Jk, "active"),
            tD = $r(Jk, "title"),
            nD = $r(Jk, "width"),
            sD = $r(Jk, "children"),
            iD = $r(Jk, "widgetRenderer"),
            aD = el(Jk, "setWidth"),
            oD = Jr(Jk, "cancel"),
            rD = Jr(Jk, "close");

        function lD({
            group: e,
            path: t
        }) {
            tl(e, "deleteEditorSection", t)
        }

        function cD({
            group: e,
            path: t
        }, n) {
            tl(e, "setEditorSectionActive", t, n)
        }

        function uD({
            group: e,
            path: t
        }, n) {
            tl(e, "setSelectedSeason", t, n)
        }

        function dD({
            group: e,
            path: t
        }, n, s) {
            tl(e, "setSeasonStartTimeOfYear", t, n, s)
        }

        function mD({
            group: e,
            path: t
        }, n, s) {
            tl(e, "setVisibleItemRange", t, n, s)
        }

        function hD({
            group: e,
            path: t
        }, n) {
            tl(e, "setItemSelected", t, n)
        }

        function gD({
            group: e,
            path: t
        }, n, s) {
            tl(e, "setItemFavorite", t, n, s)
        }

        function pD({
            group: e,
            path: t
        }, n, s) {
            tl(e, "setSearchFavorite", t, n, s)
        }

        function fD({
            group: e,
            path: t
        }, n, s, i) {
            tl(e, "setLocalizationEntry", t, n, s, i)
        }

        function xD({
            group: e,
            path: t
        }) {
            tl(e, "addLocalizationEntry", t)
        }

        function vD({
            group: e,
            path: t
        }, n) {
            tl(e, "removeLocalizationEntry", t, n)
        }

        function _D({
            group: e,
            path: t
        }, n, s) {
            tl(e, "toggleFilter", t, n, s)
        }

        function bD({
            group: e,
            path: t
        }) {
            tl(e, "clearFilters", t)
        }

        function TD({
            group: e,
            path: t
        }, n, s) {
            tl(e, "setHierarchyItemExpanded", t, n, s)
        }

        function ED({
            group: e,
            path: t
        }, n, s) {
            tl(e, "setHierarchyItemSelected", t, n, s)
        }

        function ID({
            group: e,
            path: t
        }, n, s) {
            tl(e, "setHierarchyRenderedRange", t, n, s)
        }

        function yD({
            group: e,
            path: t
        }) {
            tl(e, "addExternalLink", t)
        }

        function jD({
            group: e,
            path: t
        }, n) {
            tl(e, "removeExternalLink", t, n)
        }

        function SD({
            group: e,
            path: t
        }, n, s, i) {
            tl(e, "setExternalLink", t, n, s, i)
        }

        function CD({
            group: e,
            path: t
        }, n) {
            tl(e, "removeListItem", t, n)
        }
        X.add("game-ui/editor/data-binding/editor-panel-bindings.ts", {
            get editorPanelGroup() {
                return Jk
            },
            set editorPanelGroup(e) {
                Jk = e
            },
            get EditorWidgetType() {
                return Xk
            },
            set EditorWidgetType(e) {
                Xk = e
            },
            get ProgressIndicatorState() {
                return Qk
            },
            set ProgressIndicatorState(e) {
                Qk = e
            },
            get EditorPanelWidgetRenderer() {
                return Zk
            },
            set EditorPanelWidgetRenderer(e) {
                Zk = e
            },
            get editorPanelActive() {
                return editorPanelActive
            },
            set editorPanelActive(e) {
                editorPanelActive = e
            },
            get editorPanelTitle() {
                return editorPanelTitle
            },
            set editorPanelTitle(e) {
                editorPanelTitle = e
            },
            get editorPanelWidth() {
                return editorPanelWidth
            },
            set editorPanelWidth(e) {
                editorPanelWidth = e
            },
            get editorPanelChildren() {
                return editorPanelChildren
            },
            set editorPanelChildren(e) {
                editorPanelChildren = e
            },
            get editorPanelWidgetRenderer() {
                return editorPanelWidgetRenderer
            },
            set editorPanelWidgetRenderer(e) {
                editorPanelWidgetRenderer = e
            },
            get setWidth() {
                return aD
            },
            set setWidth(e) {
                aD = e
            },
            get cancel() {
                return oD
            },
            set cancel(e) {
                oD = e
            },
            get close() {
                return rD
            },
            set close(e) {
                rD = e
            },
            get deleteEditorSection() {
                return lD
            },
            set deleteEditorSection(e) {
                lD = e
            },
            get setEditorSectionActive() {
                return cD
            },
            set setEditorSectionActive(e) {
                cD = e
            },
            get setSelectedSeason() {
                return uD
            },
            set setSelectedSeason(e) {
                uD = e
            },
            get setSeasonStartTimeOfYear() {
                return dD
            },
            set setSeasonStartTimeOfYear(e) {
                dD = e
            },
            get setVisibleItemRange() {
                return mD
            },
            set setVisibleItemRange(e) {
                mD = e
            },
            get setItemSelected() {
                return hD
            },
            set setItemSelected(e) {
                hD = e
            },
            get setItemFavorite() {
                return gD
            },
            set setItemFavorite(e) {
                gD = e
            },
            get setSearchFavorite() {
                return pD
            },
            set setSearchFavorite(e) {
                pD = e
            },
            get setLocalizationEntry() {
                return fD
            },
            set setLocalizationEntry(e) {
                fD = e
            },
            get addLocalizationEntry() {
                return xD
            },
            set addLocalizationEntry(e) {
                xD = e
            },
            get removeLocalizationEntry() {
                return vD
            },
            set removeLocalizationEntry(e) {
                vD = e
            },
            get toggleFilter() {
                return _D
            },
            set toggleFilter(e) {
                _D = e
            },
            get clearFilters() {
                return bD
            },
            set clearFilters(e) {
                bD = e
            },
            get setHierarchyItemExpanded() {
                return TD
            },
            set setHierarchyItemExpanded(e) {
                TD = e
            },
            get setHierarchyItemSelected() {
                return ED
            },
            set setHierarchyItemSelected(e) {
                ED = e
            },
            get setHierarchyVisibleRange() {
                return ID
            },
            set setHierarchyVisibleRange(e) {
                ID = e
            },
            get addExternalLink() {
                return yD
            },
            set addExternalLink(e) {
                yD = e
            },
            get removeExternalLink() {
                return jD
            },
            set removeExternalLink(e) {
                jD = e
            },
            get setExternalLink() {
                return SD
            },
            set setExternalLink(e) {
                SD = e
            },
            get removeAssetItem() {
                return CD
            },
            set removeAssetItem(e) {
                CD = e
            }
        });
        let ND = {
            button: "button_WPv"
        };
        X.add("game-ui/editor/themes/editor-button.module.scss", {
            get classes() {
                return ND
            },
            set classes(e) {
                Object.assign(ND, e)
            }
        });
        const wD = ND;
        let OD = {
            "editor-icon-button-group": "editor-icon-button-group_Qiw editor-widget_QQl",
            editorIconButtonGroup: "editor-icon-button-group_Qiw editor-widget_QQl",
            button: "button_qdd",
            "large-icon-button": "large-icon-button_sBX",
            largeIconButton: "large-icon-button_sBX"
        };
        X.add("game-ui/editor/widgets/icon-button/icon-button.module.scss", {
            get classes() {
                return OD
            },
            set classes(e) {
                Object.assign(OD, e)
            }
        });
        const PD = OD;
        var LD = e => (0, z.jsx)(RD, {
                children: (0, z.jsx)(MD, {
                    ...e
                })
            }),
            AD = ({
                parent: e,
                path: t,
                children: n
            }) => {
                const s = HA(e, t);
                return (0, z.jsx)(RD, {
                    children: n.map((({
                        path: e,
                        ...t
                    }) => (0, z.jsx)(MD, {
                        parent: s,
                        path: e,
                        ...t
                    }, e)))
                })
            };
        const MD = ({
            parent: e,
            path: t,
            props: n
        }) => {
            const s = xA(jA, HA(e, t));
            return (0, z.jsx)(Tg, {
                tooltip: n.tooltip && (0, z.jsx)(gu, {
                    value: n.tooltip
                }),
                children: (0, z.jsx)(kD, {
                    src: n.icon,
                    selected: n.selected,
                    disabled: n.disabled,
                    onSelect: s
                })
            })
        };
        var RD = ({
                children: e
            }) => (0, z.jsx)("div", {
                className: PD.editorIconButtonGroup,
                children: e
            }),
            kD = ({
                src: e,
                selected: t,
                disabled: n,
                tinted: s,
                className: i,
                onSelect: a
            }) => (0, z.jsx)(sf, {
                src: e,
                selected: t,
                disabled: n,
                theme: wD,
                className: Zu()(PD.button, i),
                onSelect: a,
                tinted: s
            });
        X.add("game-ui/editor/widgets/icon-button/icon-button.tsx", {
            get BoundIconButton() {
                return LD
            },
            set BoundIconButton(e) {
                LD = e
            },
            get BoundIconButtonGroup() {
                return AD
            },
            set BoundIconButtonGroup(e) {
                AD = e
            },
            get EditorIconButtonGroup() {
                return RD
            },
            set EditorIconButtonGroup(e) {
                RD = e
            },
            get EditorIconButton() {
                return kD
            },
            set EditorIconButton(e) {
                kD = e
            }
        });
        let DD = {
            pickerMinHeight: "400rem",
            "editor-item-base": "editor-item-base_sYx editor-widget_QQl",
            editorItemBase: "editor-item-base_sYx editor-widget_QQl",
            centered: "centered_t1M",
            "editor-item": "editor-item_VnW editor-item-base_sYx editor-widget_QQl",
            editorItem: "editor-item_VnW editor-item-base_sYx editor-widget_QQl",
            row: "row_d2o",
            label: "label_BbZ",
            control: "control_Hds",
            children: "children_ab1",
            toggle: "toggle_wf6",
            input: "input_Wfi",
            "picker-toggle": "picker-toggle_d6k",
            pickerToggle: "picker-toggle_d6k",
            "dropdown-toggle": "dropdown-toggle_kaj",
            dropdownToggle: "dropdown-toggle_kaj",
            "directory-button": "directory-button_ayP",
            directoryButton: "directory-button_ayP",
            "directory-icon": "directory-icon_NVL",
            directoryIcon: "directory-icon_NVL",
            "vector-label": "vector-label_fxy",
            vectorLabel: "vector-label_fxy",
            "vector-input": "vector-input_B11 input_Wfi",
            vectorInput: "vector-input_B11 input_Wfi",
            "slider-container": "slider-container_Q_K",
            sliderContainer: "slider-container_Q_K",
            slider: "slider_ROT",
            "slider-input": "slider-input_DXM input_Wfi",
            sliderInput: "slider-input_DXM input_Wfi",
            picker: "picker_Ij2",
            "picker-popup": "picker-popup_pUb",
            pickerPopup: "picker-popup_pUb",
            swatch: "swatch_wOH",
            alpha: "alpha_Sth",
            "group-children": "group-children_Zwx",
            groupChildren: "group-children_Zwx",
            "expandable-header": "expandable-header_hQZ",
            expandableHeader: "expandable-header_hQZ",
            "header-label": "header-label_H79",
            headerLabel: "header-label_H79",
            "header-summary": "header-summary_U_C",
            headerSummary: "header-summary_U_C",
            "expandable-children": "expandable-children_e7j",
            expandableChildren: "expandable-children_e7j",
            "color-picker-container": "color-picker-container_bUs",
            colorPickerContainer: "color-picker-container_bUs",
            "details-block": "details-block_E_n",
            detailsBlock: "details-block_E_n",
            "error-label": "error-label_Tqk",
            errorLabel: "error-label_Tqk",
            "error-border": "error-border_idd",
            errorBorder: "error-border_idd",
            "label-right": "label-right__bo",
            labelRight: "label-right__bo",
            "gradient-slider": "gradient-slider_iFK",
            gradientSlider: "gradient-slider_iFK",
            "ranged-slider": "ranged-slider_zaP",
            rangedSlider: "ranged-slider_zaP",
            icon: "icon_D21",
            "tick-mark": "tick-mark_bLv",
            tickMark: "tick-mark_bLv"
        };
        X.add("game-ui/editor/widgets/item/editor-item.module.scss", {
            get classes() {
                return DD
            },
            set classes(e) {
                Object.assign(DD, e)
            }
        });
        const FD = DD;
        var UD = ({
                disabled: e,
                centered: t,
                className: n,
                children: s
            }) => (0, z.jsx)(tp, {
                children: (0, z.jsx)("div", {
                    className: Zu()(FD.editorItem, e && "disabled", t && FD.centered, n),
                    children: s
                })
            }),
            BD = ({
                disabled: e,
                centered: t,
                className: n,
                focusKey: s = yg,
                onFocusChange: i,
                children: a
            }) => (0, z.jsx)(Ip, {
                focusKey: s,
                className: Zu()(FD.editorItem, e && "disabled", t && FD.centered, n),
                onFocusChange: i,
                children: a
            }),
            GD = ({
                label: e,
                summary: t,
                expanded: n,
                disabled: s,
                centered: i,
                className: a,
                tooltip: o,
                children: r,
                onExpandedChange: l
            }) => {
                const c = (0, Y.useCallback)((() => l(!n)), [n, l]);
                return (0, z.jsx)(Ip, {
                    focusKey: s ? Ig : yg,
                    className: Zu()(FD.editorItemBase, s && "disabled", i && FD.centered, a),
                    children: (0, z.jsxs)(tp, {
                        children: [(0, z.jsx)(Tg, {
                            tooltip: o && (0, z.jsx)(gu, {
                                value: o
                            }),
                            children: (0, z.jsxs)(sf, {
                                tinted: !0,
                                src: n ? "Media/Glyphs/ThickStrokeArrowDown.svg" : "Media/Glyphs/ThickStrokeArrowRight.svg",
                                className: Zu()(FD.expandableHeader, n && FD.expanded),
                                onSelect: c,
                                children: [(0, z.jsx)("div", {
                                    className: FD.headerLabel,
                                    children: e
                                }), null != t && (0, z.jsx)("div", {
                                    className: FD.headerSummary,
                                    children: t
                                })]
                            })
                        }), n && (0, z.jsx)("div", {
                            className: FD.expandableChildren,
                            children: r
                        })]
                    })
                })
            },
            VD = ({
                label: e,
                onSelect: t,
                children: n
            }) => (0, z.jsxs)("div", {
                className: FD.row,
                children: [(0, z.jsx)("div", {
                    className: FD.label,
                    onClick: t,
                    children: e
                }), n && (0, z.jsx)("div", {
                    className: FD.control,
                    children: n
                })]
            }),
            HD = ({
                visible: e,
                children: t
            }) => e ? (0, z.jsx)("div", {
                className: FD.detailsBlock,
                children: t
            }) : null;
        X.add("game-ui/editor/widgets/item/editor-item.tsx", {
            get EditorItem() {
                return UD
            },
            set EditorItem(e) {
                UD = e
            },
            get FocusableEditorItem() {
                return BD
            },
            set FocusableEditorItem(e) {
                BD = e
            },
            get ExpandableEditorItem() {
                return GD
            },
            set ExpandableEditorItem(e) {
                GD = e
            },
            get EditorItemControl() {
                return VD
            },
            set EditorItemControl(e) {
                VD = e
            },
            get EditorItemDetails() {
                return HD
            },
            set EditorItemDetails(e) {
                HD = e
            }
        }), X.add("game-ui/editor/widgets/item/index.ts", {});
        let KD = {
            column: "column_Dex",
            row: "row_bJ0",
            label: "label_jyM",
            "remove-button": "remove-button_kUX",
            removeButton: "remove-button_kUX",
            "sub-item": "sub-item_nMN",
            subItem: "sub-item_nMN"
        };
        X.add("game-ui/editor/widgets/asset-list-field/asset-list-field.module.scss", {
            get classes() {
                return KD
            },
            set classes(e) {
                Object.assign(KD, e)
            }
        });
        const WD = KD;
        var zD = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = xA(CD, HA(e, t));
                return (0, z.jsx)(YD, {
                    data: n,
                    onRemove: s
                })
            },
            YD = ({
                data: e,
                onRemove: t
            }) => (0, z.jsx)(z.Fragment, {
                children: e.items.map(((e, n) => (0, z.jsx)($D, {
                    item: e,
                    index: n,
                    onRemove: t
                }, n)))
            }),
            $D = ({
                item: e,
                index: t,
                onRemove: n
            }) => {
                const s = (0, Y.useCallback)((() => n && n(t)), [t, n]);
                return (0, z.jsx)(UD, {
                    children: (0, z.jsxs)("div", {
                        className: WD.column,
                        children: [(0, z.jsxs)("div", {
                            className: WD.row,
                            children: [(0, z.jsx)("div", {
                                className: WD.label,
                                children: e.label
                            }), e.removable && (0, z.jsx)(kD, {
                                src: "Media/Glyphs/Trash.svg",
                                onSelect: s,
                                className: WD.removeButton,
                                tinted: !0
                            })]
                        }), e.subItems?.map(((e, t) => (0, z.jsx)("div", {
                            className: WD.subItem,
                            children: e
                        }, t)))]
                    })
                })
            };
        X.add("game-ui/editor/widgets/asset-list-field/asset-list-field.tsx", {
            get BoundAssetListField() {
                return zD
            },
            set BoundAssetListField(e) {
                zD = e
            },
            get AssetListField() {
                return YD
            },
            set AssetListField(e) {
                YD = e
            },
            get AssetListItem() {
                return $D
            },
            set AssetListItem(e) {
                $D = e
            }
        });
        let qD = {
            "editor-button-row": "editor-button-row_NuZ editor-widget_QQl",
            editorButtonRow: "editor-button-row_NuZ editor-widget_QQl",
            button: "button_dLA"
        };
        X.add("game-ui/editor/widgets/button/button.module.scss", {
            get classes() {
                return qD
            },
            set classes(e) {
                Object.assign(qD, e)
            }
        });
        const XD = qD;
        var QD = e => (0, z.jsx)(eF, {
                children: (0, z.jsx)(wx, {
                    uiTag: e.props.uiTag || void 0,
                    editor: !0,
                    children: (0, z.jsx)(JD, {
                        ...e
                    })
                })
            }),
            ZD = ({
                parent: e,
                path: t,
                children: n
            }) => {
                const s = HA(e, t);
                return (0, z.jsx)(eF, {
                    children: n.map((({
                        path: e,
                        ...t
                    }) => (0, z.jsx)(JD, {
                        parent: s,
                        path: e,
                        ...t
                    }, e)))
                })
            };
        const JD = ({
            parent: e,
            path: t,
            props: n
        }) => {
            const s = xA(jA, HA(e, t));
            return n.hidden ? null : (0, z.jsx)(tF, {
                disabled: n.disabled,
                onSelect: s,
                tooltip: n.tooltip,
                children: (0, z.jsx)(gu, {
                    value: n.displayName
                })
            })
        };
        var eF = ({
                children: e
            }) => (0, z.jsx)("div", {
                className: XD.editorButtonRow,
                children: e
            }),
            tF = ({
                disabled: e,
                className: t,
                children: n,
                onSelect: s,
                tooltip: i
            }) => (0, z.jsx)(Tg, {
                tooltip: te(i) ? null : (0, z.jsx)(gu, {
                    value: i
                }),
                children: (0, z.jsx)(Gp, {
                    disabled: e,
                    theme: wD,
                    className: Zu()(XD.button, t),
                    onSelect: s,
                    children: n
                })
            });
        X.add("game-ui/editor/widgets/button/button.tsx", {
            get BoundButton() {
                return QD
            },
            set BoundButton(e) {
                QD = e
            },
            get BoundButtonRow() {
                return ZD
            },
            set BoundButtonRow(e) {
                ZD = e
            },
            get EditorButtonRow() {
                return eF
            },
            set EditorButtonRow(e) {
                eF = e
            },
            get EditorButton() {
                return tF
            },
            set EditorButton(e) {
                tF = e
            }
        });
        let nF = {
            "dropdown-toggle": "dropdown-toggle_Iei dropdown-toggle_prl",
            dropdownToggle: "dropdown-toggle_Iei dropdown-toggle_prl",
            indicator: "indicator_Not",
            "dropdown-menu": "dropdown-menu_cSm dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_cSm dropdown-menu_Swd",
            "dropdown-item": "dropdown-item_Hjk undefined",
            dropdownItem: "dropdown-item_Hjk undefined",
            "toggle-flags-button": "toggle-flags-button_T7X undefined",
            toggleFlagsButton: "toggle-flags-button_T7X undefined",
            "dropdown-flag-item": "dropdown-flag-item_uJx dropdown-flag-item_EcT",
            dropdownFlagItem: "dropdown-flag-item_uJx dropdown-flag-item_EcT",
            toggle: "toggle_qtt toggle_RyX",
            label: "label_tNr"
        };
        X.add("game-ui/editor/themes/editor-dropdown.module.scss", {
            get classes() {
                return nF
            },
            set classes(e) {
                Object.assign(nF, e)
            }
        });
        const sF = nF;

        function iF({
            parent: e,
            path: t,
            props: n
        }) {
            const s = xA(SA, HA(e, t));
            return (0, z.jsx)(oF, {
                data: n,
                onChange: s
            })
        }

        function aF({
            items: e,
            value: t,
            disabled: n = !1,
            onChange: s
        }) {
            const i = (0, Y.useMemo)((() => e.find((e => e.value === t))), [e, t]);
            return (0, z.jsx)(qI, {
                theme: sF,
                content: e.map(((e, n) => (0, z.jsx)(JI, {
                    focusKey: n,
                    value: e.value,
                    selected: t === e.value,
                    onChange: s,
                    children: (0, z.jsx)(gu, {
                        value: e.displayName
                    })
                }, n))),
                children: (0, z.jsx)(XI, {
                    sounds: rF,
                    className: FD.dropdownToggle,
                    disabled: n,
                    children: i?.displayName && (0, z.jsx)(gu, {
                        value: i.displayName
                    })
                })
            })
        }

        function oF({
            data: e,
            onChange: t
        }) {
            return (0, z.jsx)(BD, {
                disabled: e.disabled,
                children: (0, z.jsxs)("div", {
                    className: FD.row,
                    children: [(0, z.jsx)("div", {
                        className: FD.label,
                        children: (0, z.jsx)(gu, {
                            value: e.displayName
                        })
                    }), (0, z.jsx)("div", {
                        className: FD.control,
                        children: (0, z.jsx)(aF, {
                            items: e.items,
                            value: e.value,
                            disabled: e.disabled,
                            onChange: t
                        })
                    })]
                })
            })
        }
        const rF = {
            ...Bp,
            hover: null,
            focus: null
        };
        X.add("game-ui/editor/widgets/fields/dropdown-field.tsx", {
            get BoundDropdownField() {
                return iF
            },
            set BoundDropdownField(e) {
                iF = e
            },
            get DropdownField() {
                return aF
            },
            set DropdownField(e) {
                aF = e
            }
        });
        var lF = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = xA(SA, HA(e, t));
                return n.hidden ? null : (0, z.jsx)(BD, {
                    disabled: n.disabled,
                    children: (0, z.jsx)(Tg, {
                        tooltip: n.tooltip && (0, z.jsx)(gu, {
                            value: n.tooltip
                        }),
                        children: (0, z.jsxs)("div", {
                            className: FD.row,
                            children: [(0, z.jsx)("div", {
                                className: FD.label,
                                children: (0, z.jsx)(gu, {
                                    value: n.displayName
                                })
                            }), (0, z.jsx)("div", {
                                className: FD.control,
                                children: (0, z.jsx)(cF, {
                                    ...n,
                                    onChange: s,
                                    multiline: n.multiline >= 1 ? n.multiline : void 0,
                                    maxLength: n.maxLength > 0 ? n.maxLength : void 0
                                })
                            })]
                        })
                    })
                })
            },
            cF = ({
                value: e,
                disabled: t,
                onChange: n,
                onChangeStart: s,
                onChangeEnd: i,
                className: a,
                multiline: o,
                maxLength: r
            }) => {
                const l = (0, Y.useCallback)((e => n(e.target.value || "")), [n]);
                return (0, z.jsx)(UE, {
                    value: e,
                    disabled: t,
                    className: Zu()(FD.input, a),
                    onChange: l,
                    onFocus: s,
                    onBlur: i,
                    multiline: o,
                    maxLength: r
                })
            };
        X.add("game-ui/editor/widgets/fields/string-input-field.tsx", {
            get BoundEditorStringInputField() {
                return lF
            },
            set BoundEditorStringInputField(e) {
                lF = e
            },
            get StringInputField() {
                return cF
            },
            set StringInputField(e) {
                cF = e
            }
        });
        let uF = {
            label: "label_FW0",
            control: "control_jRy",
            input: "input_Qzq",
            button: "button_jGE"
        };
        X.add("game-ui/editor/widgets/external-link-field/external-link-field.module.scss", {
            get classes() {
                return uF
            },
            set classes(e) {
                Object.assign(uF, e)
            }
        });
        const dF = uF;
        var mF = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = HA(e, t),
                    i = xA(yD, s),
                    a = xA(SD, s),
                    o = xA(jD, s);
                return (0, z.jsx)(hF, {
                    data: n,
                    onAdd: i,
                    onChange: a,
                    onRemove: o
                })
            },
            hF = ({
                data: e,
                onAdd: t,
                onChange: n,
                onRemove: s
            }) => {
                const i = (0, Y.useMemo)((() => e.acceptedTypes.map((e => ({
                    value: e,
                    displayName: _c("Menu.ASSET_EXTERNAL_LINK_TYPE[" + e + "]")
                })))), [e.acceptedTypes]);
                return (0, z.jsxs)(z.Fragment, {
                    children: [e.links.map(((e, t) => (0, z.jsx)(gF, {
                        link: e,
                        index: t,
                        items: i,
                        onChange: n,
                        onRemove: s
                    }, t))), (0, z.jsx)(tF, {
                        onSelect: t,
                        disabled: e.links.length >= e.maxLinks,
                        children: (0, z.jsx)(Pc.Menu.ASSET_ADD_EXTERNAL_LINK, {})
                    })]
                })
            },
            gF = ({
                index: e,
                link: t,
                items: n,
                onChange: s,
                onRemove: i
            }) => {
                const a = (0, Y.useCallback)((n => s(e, n, t.url)), [e, t.url, s]),
                    o = (0, Y.useCallback)((n => s(e, t.type, n)), [e, t.type, s]),
                    r = (0, Y.useCallback)((() => i && i(e)), [e, i]);
                return (0, z.jsx)(UD, {
                    children: (0, z.jsxs)("div", {
                        className: FD.row,
                        children: [(0, z.jsx)("div", {
                            className: dF.label,
                            children: (0, z.jsx)(aF, {
                                items: n,
                                value: t.type,
                                disabled: t.lockType,
                                onChange: a
                            })
                        }), (0, z.jsxs)("div", {
                            className: dF.control,
                            children: [(0, z.jsx)(cF, {
                                value: t.url,
                                onChange: o,
                                className: Zu()(dF.input, t.error && FD.errorBorder)
                            }), (0, z.jsx)(kD, {
                                src: "Media/Glyphs/Trash.svg",
                                onSelect: r,
                                disabled: void 0 === i,
                                className: dF.button,
                                tinted: !0
                            })]
                        })]
                    })
                })
            };
        X.add("game-ui/editor/widgets/external-link-field/external-link-field.tsx", {
            get BoundExternalLinkField() {
                return mF
            },
            set BoundExternalLinkField(e) {
                mF = e
            },
            get ExternalLinkField() {
                return hF
            },
            set ExternalLinkField(e) {
                hF = e
            },
            get ExternalLinkItem() {
                return gF
            },
            set ExternalLinkItem(e) {
                gF = e
            }
        });
        var pF = ({
                props: e
            }) => (0, z.jsx)(fF, {
                ...e
            }),
            fF = e => e.visible ? (0, z.jsx)("div", {
                className: Zu()(FD.errorLabel, e.className),
                children: (0, z.jsx)(gu, {
                    value: e.displayName
                })
            }) : null;
        X.add("game-ui/editor/widgets/label/error-label.tsx", {
            get BoundErrorLabel() {
                return pF
            },
            set BoundErrorLabel(e) {
                pF = e
            },
            get ErrorLabel() {
                return fF
            },
            set ErrorLabel(e) {
                fF = e
            }
        });
        var xF = ({
            parent: e,
            path: t,
            props: n
        }) => {
            const s = xA(SA, HA(e, t));
            return (0, z.jsxs)(BD, {
                disabled: n.disabled,
                children: [(0, z.jsxs)("div", {
                    className: FD.row,
                    children: [(0, z.jsx)("div", {
                        className: FD.label,
                        children: (0, z.jsx)(gu, {
                            value: n.displayName
                        })
                    }), (0, z.jsx)("div", {
                        className: FD.control,
                        children: (0, z.jsx)(cF, {
                            className: n.error ? FD.errorBorder : void 0,
                            value: n.value,
                            onChange: s,
                            multiline: n.multiline >= 1 ? n.multiline : void 0,
                            maxLength: n.maxLength > 0 ? n.maxLength : void 0
                        })
                    })]
                }), (0, z.jsx)(fF, {
                    visible: n.error,
                    displayName: n.errorMessage,
                    level: 0,
                    className: FD.labelRight
                })]
            })
        };
        X.add("game-ui/editor/widgets/fields/string-input-field-with-error.tsx", {
            get BoundStringInputFieldWithError() {
                return xF
            },
            set BoundStringInputFieldWithError(e) {
                xF = e
            }
        });
        var vF = ({
            parent: e,
            path: t,
            props: n
        }) => {
            const s = xA(jA, HA(e, t)),
                i = (0, Y.useMemo)((() => "url(" + n.icon + ")"), [n.icon]);
            return (0, z.jsx)(BD, {
                children: (0, z.jsx)(Tg, {
                    tooltip: n.tooltip && (0, z.jsx)(gu, {
                        value: n.tooltip
                    }),
                    children: (0, z.jsx)(Gp, {
                        style: {
                            backgroundImage: i
                        },
                        className: PD.largeIconButton,
                        onSelect: s,
                        theme: wD
                    })
                })
            })
        };
        X.add("game-ui/editor/widgets/icon-button/large-icon-button.tsx", {
            get BoundLargeIconButton() {
                return vF
            },
            set BoundLargeIconButton(e) {
                vF = e
            }
        });
        var _F = ({
            props: e
        }) => (0, z.jsx)(UD, {
            children: (0, z.jsx)(gu, {
                value: e.displayName
            })
        });
        X.add("game-ui/editor/widgets/label/label.tsx", {
            get BoundLabel() {
                return _F
            },
            set BoundLabel(e) {
                _F = e
            }
        });
        let bF = {
            strokeWidth: "5",
            "progress-circle": "progress-circle_OLN",
            progressCircle: "progress-circle_OLN",
            indeterminate: "indeterminate_UIQ",
            rotate: "rotate_UME",
            image: "image_AKd",
            progress: "progress_mlv"
        };
        X.add("game-ui/common/progress-circle/progress-circle.module.scss", {
            get classes() {
                return bF
            },
            set classes(e) {
                Object.assign(bF, e)
            }
        });
        const TF = bF;
        var EF = ({
            progress: e,
            max: t,
            indeterminate: n,
            theme: s,
            className: i
        }) => {
            const a = (0, Y.useMemo)((() => ({
                    ...TF,
                    ...s
                })), [s]),
                o = 50,
                r = parseFloat(a.strokeWidth),
                l = (100 - r) / 2,
                c = 2 * Math.PI * Od(e / t, 0, .9999),
                u = o + l * Math.sin(c),
                d = o - l * Math.cos(c),
                m = c > Math.PI ? 1 : 0;
            return (0, z.jsx)("div", {
                className: Zu()(a.progressCircle, n && a.indeterminate, i),
                children: (0, z.jsxs)("svg", {
                    viewBox: "0 0 100 100",
                    className: a.image,
                    children: [a.circle && (0, z.jsx)("circle", {
                        cx: o,
                        cy: o,
                        r: l,
                        strokeWidth: r,
                        className: a.circle
                    }), n ? (0, z.jsx)("path", {
                        d: IF(o, l, 10),
                        strokeWidth: r,
                        className: a.progress
                    }) : (0, z.jsx)("path", {
                        d: `M 50 ${o-l} A ${l} ${l}, 0, ${m} 1, ${u} ${d}`,
                        strokeWidth: r,
                        className: a.progress
                    })]
                })
            })
        };

        function IF(e, t, n) {
            let s = "";
            for (let i = 0; i < n; i++) {
                const a = 2 * Math.PI * i / n,
                    o = e + t * Math.sin(a),
                    r = e - t * Math.cos(a),
                    l = 2 * Math.PI * (i + .3) / n;
                s += `M ${o} ${r} A ${t} ${t}, 0, 0 1, ${e+t*Math.sin(l)} ${e-t*Math.cos(l)} `
            }
            return s
        }
        X.add("game-ui/common/progress-circle/progress-circle.tsx", {
            get ProgressCircle() {
                return EF
            },
            set ProgressCircle(e) {
                EF = e
            }
        });
        let yF = {
            "progress-circle": "progress-circle_VWp progress-circle_OLN",
            progressCircle: "progress-circle_VWp progress-circle_OLN",
            progress: "progress_sD7 progress_mlv",
            complete: "complete_om7",
            failure: "failure_ryc",
            container: "container_YQJ"
        };
        X.add("game-ui/editor/widgets/progress-indicator/progress-indicator.module.scss", {
            get classes() {
                return yF
            },
            set classes(e) {
                Object.assign(yF, e)
            }
        });
        const jF = yF;
        var SF = ({
                props: e
            }) => (0, z.jsx)(CF, {
                ...e
            }),
            CF = ({
                progress: e,
                indeterminate: t,
                state: n,
                hidden: s
            }) => s ? null : (0, z.jsx)("div", {
                className: jF.container,
                children: (0, z.jsx)(EF, {
                    progress: n === Qk.Loading ? e : 1,
                    max: 1,
                    theme: jF,
                    indeterminate: n === Qk.Loading && t,
                    className: Zu()(n === Qk.Success && jF.complete, n === Qk.Failure && jF.failure)
                })
            });

        function NF(e, t) {
            return (0, Y.useMemo)((() => ({
                flex: `${e.grow} ${e.shrink} ${wF(e.basis)}`,
                flexWrap: t ? "wrap" : "nowrap"
            })), [e.basis, e.grow, e.shrink, t])
        }

        function wF(e) {
            return e < 0 ? "auto" : 0 === e ? "0" : `${e}rem`
        }
        X.add("game-ui/editor/widgets/progress-indicator/progress-indicator.tsx", {
            get BoundProgressIndicator() {
                return SF
            },
            set BoundProgressIndicator(e) {
                SF = e
            },
            get ProgressIndicator() {
                return CF
            },
            set ProgressIndicator(e) {
                CF = e
            }
        }), X.add("game-ui/widgets/components/flex-layout.ts", {
            get useFlexStyle() {
                return NF
            },
            set useFlexStyle(e) {
                NF = e
            }
        });
        let OF = {
            column: "column_iuw editor-widget_QQl"
        };
        X.add("game-ui/editor/widgets/column/column.module.scss", {
            get classes() {
                return OF
            },
            set classes(e) {
                Object.assign(OF, e)
            }
        });
        const PF = OF;
        var LF = ({
                parent: e,
                path: t,
                props: n,
                children: s
            }) => {
                const i = HA(e, t),
                    a = NF(n.flex),
                    o = (0, Y.useContext)(JA);
                return (0, z.jsx)(AF, {
                    style: a,
                    children: (0, z.jsx)(ZA, {
                        parent: i,
                        components: o,
                        data: s
                    })
                })
            },
            AF = ({
                className: e,
                style: t,
                children: n
            }) => (0, z.jsx)("div", {
                className: Zu()(PF.column, e),
                style: t,
                children: (0, z.jsx)(tp, {
                    children: n
                })
            });
        X.add("game-ui/editor/widgets/column/column.tsx", {
            get BoundColumn() {
                return LF
            },
            set BoundColumn(e) {
                LF = e
            },
            get Column() {
                return AF
            },
            set Column(e) {
                AF = e
            }
        });
        let MF = {
            compass: "compass_DU0",
            north: "north_meN",
            needle: "needle_PzX"
        };
        X.add("game-ui/editor/widgets/compass/compass.module.scss", {
            get classes() {
                return MF
            },
            set classes(e) {
                Object.assign(MF, e)
            }
        });
        const RF = MF;
        var kF = ({
                props: e
            }) => (0, z.jsx)(UD, {
                centered: !0,
                children: (0, z.jsx)(DF, {
                    angle: e.angle
                })
            }),
            DF = ({
                angle: e,
                className: t
            }) => (0, z.jsxs)("div", {
                className: Zu()(RF.compass, t),
                children: [(0, z.jsx)("div", {
                    className: RF.north,
                    children: "N"
                }), (0, z.jsx)("img", {
                    src: "Media/Editor/CompassNeedle.svg",
                    className: RF.needle,
                    style: {
                        transform: `rotate(${e}deg)`
                    }
                })]
            });
        X.add("game-ui/editor/widgets/compass/compass.tsx", {
            get BoundCompass() {
                return kF
            },
            set BoundCompass(e) {
                kF = e
            },
            get Compass() {
                return DF
            },
            set Compass(e) {
                DF = e
            }
        });
        let FF = {
            divider: "divider_FEz"
        };
        X.add("game-ui/editor/widgets/divider/divider.module.scss", {
            get classes() {
                return FF
            },
            set classes(e) {
                Object.assign(FF, e)
            }
        });
        const UF = FF;
        var BF = () => (0, z.jsx)("div", {
            className: UF.divider
        });
        X.add("game-ui/editor/widgets/divider/divider.tsx", {
            get Divider() {
                return BF
            },
            set Divider(e) {
                BF = e
            }
        });
        var GF = (0, Y.createContext)({}),
            VF = () => (0, Y.useContext)(GF);
        X.add("game-ui/common/svg/svg-context.ts", {
            get SVGContext() {
                return GF
            },
            set SVGContext(e) {
                GF = e
            },
            get useSVG() {
                return VF
            },
            set useSVG(e) {
                VF = e
            }
        });
        const HF = {
            x: 0,
            y: 0
        };
        var KF = (e, t, n) => {
            const {
                events: {
                    bindElement: s
                },
                viewport: i
            } = VF(), {
                onDrag: a,
                onWindowMouseMove: o
            } = e, r = (0, Y.useRef)(!1), [l, c] = (0, Y.useState)(!1), [u, d] = (0, Y.useState)(!1), m = (0, Y.useRef)(i);
            m.current = i, (0, Y.useEffect)((() => {
                if (!e) return;
                const i = {
                        ...e
                    },
                    a = i.onMouseDown;
                if (i.onMouseDown = (e, t) => {
                        HF.x = e.clientX, HF.y = e.clientY, a?.(e, t)
                    }, i.onDrag) {
                    const e = i.onMouseDown;
                    i.onMouseDown = (t, n) => {
                        e?.(t, n), n && 0 === t.button && !t.propagationStopped && (t.propagationStopped = !0, c(!0))
                    }
                }
                if (i.onMouseMove || n) {
                    const e = i.onMouseMove,
                        t = i.onMouseEnter,
                        n = i.onMouseLeave;
                    i.onMouseMove = (s, i) => {
                        i ? r.current || (t?.(s), r.current = !0, d(!0)) : r.current && (n?.(s), r.current = !1, d(!1)), e?.(s, i)
                    }
                }
                if (i.onSelect || i.onClick || i.onDrag) {
                    const e = i.onClick;
                    i.onClick = (t, n) => {
                        n && !t.propagationStopped && t.clientX === HF.x && t.clientY === HF.y && (t.propagationStopped = !0, i.onSelect?.(t), e?.(t))
                    }
                }
                return s(i, t)
            }), [s, t, n, e]), (0, Y.useEffect)((() => {
                if (l) {
                    const e = e => {
                            const n = m.current;
                            if (e.buttons > 0 && n) {
                                const t = n.posFromMouse(e),
                                    s = n.pointFromPos(t);
                                a?.({
                                    point: s,
                                    position: t,
                                    shiftKey: e.shiftKey,
                                    ctrlKey: e.ctrlKey,
                                    altKey: e.altKey
                                })
                            } else t()
                        },
                        t = () => {
                            requestAnimationFrame((() => {
                                c(!1), document.removeEventListener("mousemove", e), document.removeEventListener("mouseup", t)
                            }))
                        };
                    return document.addEventListener("mousemove", e), document.addEventListener("mouseup", t), () => {
                        document.removeEventListener("mousemove", e), window.removeEventListener("mouseup", t)
                    }
                }
            }), [l, a]), (0, Y.useEffect)((() => {
                if (o) {
                    const e = e => {
                        const t = m.current;
                        if (t) {
                            const n = t.posFromMouse(e),
                                s = t.pointFromPos(n);
                            o({
                                ...e,
                                point: s,
                                position: n,
                                shiftKey: e.shiftKey,
                                ctrlKey: e.ctrlKey,
                                altKey: e.altKey
                            })
                        }
                    };
                    return document.addEventListener("mousemove", e), () => {
                        document.removeEventListener("mousemove", e)
                    }
                }
            }), [o]), (0, Y.useEffect)((() => {
                const t = !!(e.focused || e.selected || u);
                n?.(t)
            }), [u, n, e.focused, e.selected])
        };
        X.add("game-ui/common/svg/utils/use-svg-event-handling.ts", {
            get useSVGEventHandling() {
                return KF
            },
            set useSVGEventHandling(e) {
                KF = e
            }
        });
        var WF = (0, Y.forwardRef)((function ({
            interaction: e,
            viewport: t,
            children: n,
            ...s
        }, i) {
            KF(s);
            const {
                onWindowMouseMove: a,
                ...o
            } = s, r = `0 0 ${t?.size.width} ${t?.size.height}`;
            return (0, z.jsx)("svg", {
                ref: i,
                width: "100%",
                height: "100%",
                viewBox: r,
                ...o,
                ...e.bindings,
                children: n
            })
        }));
        X.add("game-ui/common/svg/elements/svg.tsx", {
            get SVGcomponent() {
                return WF
            },
            set SVGcomponent(e) {
                WF = e
            }
        });
        var zF = ["onClick", "onContextMenu", "onDoubleClick", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseMove", "onMouseOut", "onMouseOver", "onMouseUp"];
        X.add("game-ui/common/svg/types.ts", {
            get INTERACTION_EVENTS() {
                return zF
            },
            set INTERACTION_EVENTS(e) {
                zF = e
            }
        });
        var YF = () => {
            const e = (0, Y.useRef)();
            return (0, Y.useMemo)((() => {
                const t = {},
                    n = (n, s) => {
                        if (e.current) {
                            const i = {
                                ...s,
                                position: e.current.posFromMouse(s),
                                point: e.current.pointFromMouse(s)
                            };
                            [...t[n] || []]?.forEach((e => e(i)))
                        }
                    };
                return {
                    events: {
                        bindElement: (n, s) => {
                            const i = [];
                            return Object.entries(n).forEach((([n, a]) => {
                                if (zF.includes(n)) {
                                    const o = t => {
                                        if (e.current) {
                                            const n = !s || s(e.current?.posFromMouse(t), t);
                                            t.propagationStopped || "function" != typeof a || a(t, n)
                                        }
                                    };
                                    ((e, n) => {
                                        t[e] = t[e] ? [...t[e], n] : [n]
                                    })(n, o), i.push([n, o])
                                }
                            })), () => {
                                i.forEach((([e, n]) => {
                                    return i = n, void t[s = e].splice(t[s].indexOf(i), 1);
                                    var s, i
                                }))
                            }
                        }
                    },
                    bindings: {
                        onWheel: e => n("onWheel", e),
                        onClick: e => n("onClick", e),
                        onDoubleClick: e => n("onDoubleClick", e),
                        onMouseDown: e => n("onMouseDown", e),
                        onMouseUp: e => n("onMouseUp", e),
                        onMouseMove: e => n("onMouseMove", e)
                    },
                    updateViewport: t => {
                        e.current = t
                    }
                }
            }), [])
        };
        X.add("game-ui/common/svg/use-svg-interaction.tsx", {
            get useSVGInteraction() {
                return YF
            },
            set useSVGInteraction(e) {
                YF = e
            }
        });
        var $F = (e, t, n, s) => {
            let i, a, o, r;
            if ("number" == typeof e ? i = a = o = r = t(e) : "x" in e ? (i = o = t(e.y), r = a = t(e.x)) : (i = t(e.top), a = t(e.right), o = t(e.bottom), r = t(e.left)), r + a >= n || i + o >= s) throw new Error("SVG paddings on given axis can't add up to more than the width or height of svg");
            return {
                top: i,
                right: a,
                bottom: o,
                left: r
            }
        };
        X.add("game-ui/common/svg/utils/parse-paddings.ts", {
            get parsePadding() {
                return $F
            },
            set parsePadding(e) {
                $F = e
            }
        });
        var qF = e => (...t) => 2 === t.length ? e({
            x: t[0],
            y: t[1]
        }) : e(t[0]);
        X.add("game-ui/common/svg/utils/point-conversion.ts", {
            get createPointConversion() {
                return qF
            },
            set createPointConversion(e) {
                qF = e
            }
        });
        const XF = {
            x: 0,
            y: 0
        };
        var QF = (e, t, n) => {
            const [s, i] = (0, Y.useState)(XF);
            (0, Y.useEffect)((() => {
                if (e.current && t) {
                    const n = e.current;
                    let s, a = {
                        x: 0,
                        y: 0
                    };
                    const o = e => {
                            const n = e.shiftKey ? 2 : e.ctrlKey ? .5 : 1;
                            i((i => {
                                s = s || i;
                                return {
                                    x: "y" === t ? 0 : s.x + (a.x - e.x) * n,
                                    y: "x" === t ? 0 : s.y + (a.y - e.y) * n
                                }
                            }))
                        },
                        r = e => {
                            if (1 === e.button) {
                                a = e;
                                const t = () => {
                                    s = void 0, window.removeEventListener("mousemove", o), window.removeEventListener("mouseup", o)
                                };
                                window.addEventListener("mousemove", o), window.addEventListener("mouseup", t)
                            }
                        };
                    return n.addEventListener("mousedown", r), () => {
                        n.removeEventListener("mousedown", r)
                    }
                }
            }), [t, e]);
            const a = (0, Y.useCallback)((() => i(XF)), []);
            return jT((0, Y.useCallback)((async () => {
                if (n) {
                    const e = await n(),
                        s = "y" === t ? 0 : e.x,
                        a = "x" === t ? 0 : e.y;
                    i((e => ({
                        x: e.x + 2 * s,
                        y: e.y + 2 * a
                    })))
                }
            }), [n, t]), t && void 0 !== n), (0, Y.useMemo)((() => [t ? s : XF, a]), [s, t, a])
        };
        X.add("game-ui/common/svg/utils/use-pan.ts", {
            get usePan() {
                return QF
            },
            set usePan(e) {
                QF = e
            }
        });
        const ZF = {
            x: 1,
            y: 1
        };
        var JF = (e, t, n, s) => {
            const [i, a] = (0, Y.useState)(ZF), o = (0, Y.useRef)(t), r = (0, Y.useCallback)(((e, t, s, i, o = !1) => {
                a((a => {
                    let r = a.x,
                        l = a.y;
                    if ("y" !== n && !s)
                        if (o) r = a.x + 10 * e;
                        else {
                            const n = e || t;
                            r = a.x + .25 * Math.sign(n)
                        }
                    "x" === n || i || (l = o ? a.y + 10 * t : a.y + .25 * Math.sign(t));
                    const c = {
                        x: Math.min(100, Math.max(.1, r)),
                        y: Math.min(100, Math.max(.1, l))
                    };
                    return c.x === a.x && c.y === a.y ? a : c
                }))
            }), [n]), l = (0, Y.useCallback)((() => a(ZF)), []);
            (0, Y.useEffect)((() => {
                if (n) {
                    const t = e.current,
                        n = e => {
                            e.preventDefault(), r(e.deltaX, e.deltaY, e.ctrlKey, e.shiftKey)
                        };
                    return t?.addEventListener("wheel", n), () => {
                        t?.removeEventListener("wheel", n)
                    }
                }
            }), [r, e, n]);
            return jT((0, Y.useCallback)((async () => {
                if (s) {
                    const e = await s();
                    r(e.x, e.y, !1, !1, !0)
                }
            }), [r, s]), n && void 0 !== s), (0, Y.useMemo)((() => {
                let n = e.current ? ((e, t) => {
                    const n = (e.max.x - e.min.x) / 2 * t.x,
                        s = (e.max.x + e.min.x) / 2,
                        i = (e.max.y - e.min.y) / 2 * t.y,
                        a = (e.max.y + e.min.y) / 2;
                    return {
                        min: {
                            x: s - n,
                            y: a - i
                        },
                        max: {
                            x: s + n,
                            y: a + i
                        }
                    }
                })(t, i) : t;
                return Kr(o.current, n, 2) ? n = o.current : o.current = n, [n, l]
            }), [t, l, e, i])
        };
        X.add("game-ui/common/svg/utils/use-zoom-bounds.ts", {
            get useZoomBounds() {
                return JF
            },
            set useZoomBounds(e) {
                JF = e
            }
        });
        const eU = 0;
        var tU = (e, t) => {
            const [n, s] = (0, Y.useState)(), [i, a] = JF(e, t.bounds, t?.zoomable, t.zoomCallback), [o, r] = QF(e, t.panable, t.panCallback), l = Hm(), c = gm(e), {
                padding: u = eU,
                inverted: d = !0
            } = t || {}, m = (0, Y.useCallback)((() => {
                a(), r()
            }), [a, r]);
            return (0, Y.useEffect)((() => {
                if (!c || !c.width || !c.height) return;
                const e = e => e * l,
                    {
                        width: t,
                        height: n
                    } = c,
                    a = $F(u, e, t, n);
                let r = i || {
                    min: {
                        x: 0,
                        y: 0
                    },
                    max: {
                        x: t,
                        y: n
                    }
                };
                const h = (t - (a.left + a.right)) / (r.max.x - r.min.x),
                    g = (n - (a.top + a.bottom)) / (r.max.y - r.min.y);
                if (o && (o.x || o.y)) {
                    const e = {
                        x: o.x / h,
                        y: o.y / g * (d ? -1 : 1)
                    };
                    r = {
                        min: {
                            x: r.min.x + e.x,
                            y: r.min.y + e.y
                        },
                        max: {
                            x: r.max.x + e.x,
                            y: r.max.y + e.y
                        }
                    }
                }
                const p = {
                        x: c.x,
                        y: c.y
                    },
                    f = e => a.left + (e - r.min.x) * h,
                    x = e => a.bottom + (e - r.min.y) * g,
                    v = qF((e => ({
                        x: f(e.x),
                        y: x(e.y)
                    }))),
                    _ = e => (e - a.left) / h + r.min.x,
                    b = e => (e - a.bottom) / g + r.min.y,
                    T = qF((e => ({
                        x: _(e.x),
                        y: b(e.y)
                    }))),
                    E = e => e / h,
                    I = e => e / g,
                    y = qF((e => ({
                        x: E(e.x),
                        y: I(e.y)
                    }))),
                    j = e => e * h,
                    S = e => e * g,
                    C = qF((e => ({
                        x: j(e.x),
                        y: S(e.y)
                    }))),
                    N = e => ({
                        x: e.clientX - p.x,
                        y: d ? n - (e.clientY - p.y) : e.clientY - p.y
                    });
                s({
                    size: {
                        width: t,
                        height: n
                    },
                    bounds: r,
                    offset: p,
                    inverted: d,
                    padding: a,
                    px: _,
                    py: b,
                    vx: f,
                    vy: x,
                    sx: E,
                    sy: I,
                    svx: j,
                    svy: S,
                    rem: e,
                    posFromPoint: v,
                    pointFromPos: T,
                    posFromMouse: N,
                    pointFromMouse: e => T(N(e)),
                    scaleToPoint: y,
                    scaleToViewport: C,
                    resetViewport: m
                })
            }), [i, u, d, o, l, m, c]), n
        };
        X.add("game-ui/common/svg/use-svg-setup.tsx", {
            get useSVGSetup() {
                return tU
            },
            set useSVGSetup(e) {
                tU = e
            }
        });
        const nU = (0, Y.createContext)({
            registerSVGContext: () => {}
        });
        var sU = ({
                children: e
            }) => {
                const [t, n] = (0, Y.useState)(), {
                    registerSVGContext: s
                } = iU();
                return (0, Y.useEffect)((() => {
                    t && s && s(t)
                }), [t, s]), (0, z.jsx)(nU.Provider, {
                    value: {
                        registerSVGContext: n,
                        svg: t
                    },
                    children: e
                })
            },
            iU = () => (0, Y.useContext)(nU);
        X.add("game-ui/common/svg/utils/svg-parent-context.tsx", {
            get SVGParentContextProvider() {
                return sU
            },
            set SVGParentContextProvider(e) {
                sU = e
            },
            get useSVGParent() {
                return iU
            },
            set useSVGParent(e) {
                iU = e
            }
        });
        const aU = {
            min: {
                x: 0,
                y: 0
            },
            max: {
                x: 1,
                y: 1
            }
        };
        var oU = ({
            inverted: e = !0,
            children: t,
            bounds: n = aU,
            zoomable: s,
            panable: i,
            padding: a,
            zoomCallback: o,
            panCallback: r,
            ...l
        }) => {
            const c = (0, Y.useRef)(null),
                u = tU(c, {
                    bounds: n,
                    inverted: e,
                    padding: a,
                    zoomable: s,
                    panable: i,
                    zoomCallback: o,
                    panCallback: r
                }),
                d = YF(),
                {
                    registerSVGContext: m
                } = iU();
            (0, Y.useEffect)((() => {
                d.updateViewport(u)
            }), [d, u]);
            const h = (0, Y.useMemo)((() => {
                    const e = {
                        viewport: u,
                        events: d.events
                    };
                    return requestAnimationFrame((() => m(e))), e
                }), [u, d, m]),
                g = e ? `translate(0 ${u?.size.height}) scale(1 -1)` : "";
            return (0, z.jsx)(GF.Provider, {
                value: h,
                children: (0, z.jsx)(WF, {
                    interaction: d,
                    viewport: u,
                    ref: c,
                    ...l,
                    children: !!h.viewport && (0, z.jsx)("g", {
                        transform: g,
                        children: t
                    })
                })
            })
        };
        X.add("game-ui/common/svg/svg.tsx", {
            get SVG() {
                return oU
            },
            set SVG(e) {
                oU = e
            }
        }), X.add("game-ui/common/svg/index.ts", {});
        const rU = Math.sqrt(50),
            lU = Math.sqrt(10),
            cU = Math.sqrt(2);

        function uU(e, t, n) {
            const s = (t - e) / Math.max(0, n),
                i = Math.floor(Math.log10(s)),
                a = s / Math.pow(10, i),
                o = a >= rU ? 10 : a >= lU ? 5 : a >= cU ? 2 : 1;
            let r, l, c;
            return i < 0 ? (c = Math.pow(10, -i) / o, r = Math.round(e * c), l = Math.round(t * c), r / c < e && ++r, l / c > t && --l, c = -c) : (c = Math.pow(10, i) * o, r = Math.round(e / c), l = Math.round(t / c), r * c < e && ++r, l * c > t && --l), l < r && .5 <= n && n < 2 ? uU(e, t, 2 * n) : [r, l, c]
        }

        function dU(e, t, n) {
            return uU(e = +e, t = +t, n = +n)[2]
        }

        function mU(e, t) {
            return null == e || null == t ? NaN : e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN
        }

        function hU(e, t) {
            return null == e || null == t ? NaN : t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN
        }

        function gU(e) {
            let t, n, s;

            function i(e, s, i = 0, a = e.length) {
                if (i < a) {
                    if (0 !== t(s, s)) return a;
                    do {
                        const t = i + a >>> 1;
                        n(e[t], s) < 0 ? i = t + 1 : a = t
                    } while (i < a)
                }
                return i
            }
            return 2 !== e.length ? (t = mU, n = (t, n) => mU(e(t), n), s = (t, n) => e(t) - n) : (t = e === mU || e === hU ? e : pU, n = e, s = e), {
                left: i,
                center: function (e, t, n = 0, a = e.length) {
                    const o = i(e, t, n, a - 1);
                    return o > n && s(e[o - 1], t) > -s(e[o], t) ? o - 1 : o
                },
                right: function (e, s, i = 0, a = e.length) {
                    if (i < a) {
                        if (0 !== t(s, s)) return a;
                        do {
                            const t = i + a >>> 1;
                            n(e[t], s) <= 0 ? i = t + 1 : a = t
                        } while (i < a)
                    }
                    return i
                }
            }
        }

        function pU() {
            return 0
        }
        const fU = gU(mU),
            xU = fU.right,
            vU = (fU.left, gU((function (e) {
                return null === e ? NaN : +e
            })).center, xU);

        function _U(e, t, n) {
            e.prototype = t.prototype = n, n.constructor = e
        }

        function bU(e, t) {
            var n = Object.create(e.prototype);
            for (var s in t) n[s] = t[s];
            return n
        }

        function TU() {}
        var EU = .7,
            IU = 1 / EU,
            yU = "\\s*([+-]?\\d+)\\s*",
            jU = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",
            SU = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
            CU = /^#([0-9a-f]{3,8})$/,
            NU = new RegExp(`^rgb\\(${yU},${yU},${yU}\\)$`),
            wU = new RegExp(`^rgb\\(${SU},${SU},${SU}\\)$`),
            OU = new RegExp(`^rgba\\(${yU},${yU},${yU},${jU}\\)$`),
            PU = new RegExp(`^rgba\\(${SU},${SU},${SU},${jU}\\)$`),
            LU = new RegExp(`^hsl\\(${jU},${SU},${SU}\\)$`),
            AU = new RegExp(`^hsla\\(${jU},${SU},${SU},${jU}\\)$`),
            MU = {
                aliceblue: 15792383,
                antiquewhite: 16444375,
                aqua: 65535,
                aquamarine: 8388564,
                azure: 15794175,
                beige: 16119260,
                bisque: 16770244,
                black: 0,
                blanchedalmond: 16772045,
                blue: 255,
                blueviolet: 9055202,
                brown: 10824234,
                burlywood: 14596231,
                cadetblue: 6266528,
                chartreuse: 8388352,
                chocolate: 13789470,
                coral: 16744272,
                cornflowerblue: 6591981,
                cornsilk: 16775388,
                crimson: 14423100,
                cyan: 65535,
                darkblue: 139,
                darkcyan: 35723,
                darkgoldenrod: 12092939,
                darkgray: 11119017,
                darkgreen: 25600,
                darkgrey: 11119017,
                darkkhaki: 12433259,
                darkmagenta: 9109643,
                darkolivegreen: 5597999,
                darkorange: 16747520,
                darkorchid: 10040012,
                darkred: 9109504,
                darksalmon: 15308410,
                darkseagreen: 9419919,
                darkslateblue: 4734347,
                darkslategray: 3100495,
                darkslategrey: 3100495,
                darkturquoise: 52945,
                darkviolet: 9699539,
                deeppink: 16716947,
                deepskyblue: 49151,
                dimgray: 6908265,
                dimgrey: 6908265,
                dodgerblue: 2003199,
                firebrick: 11674146,
                floralwhite: 16775920,
                forestgreen: 2263842,
                fuchsia: 16711935,
                gainsboro: 14474460,
                ghostwhite: 16316671,
                gold: 16766720,
                goldenrod: 14329120,
                gray: 8421504,
                green: 32768,
                greenyellow: 11403055,
                grey: 8421504,
                honeydew: 15794160,
                hotpink: 16738740,
                indianred: 13458524,
                indigo: 4915330,
                ivory: 16777200,
                khaki: 15787660,
                lavender: 15132410,
                lavenderblush: 16773365,
                lawngreen: 8190976,
                lemonchiffon: 16775885,
                lightblue: 11393254,
                lightcoral: 15761536,
                lightcyan: 14745599,
                lightgoldenrodyellow: 16448210,
                lightgray: 13882323,
                lightgreen: 9498256,
                lightgrey: 13882323,
                lightpink: 16758465,
                lightsalmon: 16752762,
                lightseagreen: 2142890,
                lightskyblue: 8900346,
                lightslategray: 7833753,
                lightslategrey: 7833753,
                lightsteelblue: 11584734,
                lightyellow: 16777184,
                lime: 65280,
                limegreen: 3329330,
                linen: 16445670,
                magenta: 16711935,
                maroon: 8388608,
                mediumaquamarine: 6737322,
                mediumblue: 205,
                mediumorchid: 12211667,
                mediumpurple: 9662683,
                mediumseagreen: 3978097,
                mediumslateblue: 8087790,
                mediumspringgreen: 64154,
                mediumturquoise: 4772300,
                mediumvioletred: 13047173,
                midnightblue: 1644912,
                mintcream: 16121850,
                mistyrose: 16770273,
                moccasin: 16770229,
                navajowhite: 16768685,
                navy: 128,
                oldlace: 16643558,
                olive: 8421376,
                olivedrab: 7048739,
                orange: 16753920,
                orangered: 16729344,
                orchid: 14315734,
                palegoldenrod: 15657130,
                palegreen: 10025880,
                paleturquoise: 11529966,
                palevioletred: 14381203,
                papayawhip: 16773077,
                peachpuff: 16767673,
                peru: 13468991,
                pink: 16761035,
                plum: 14524637,
                powderblue: 11591910,
                purple: 8388736,
                rebeccapurple: 6697881,
                red: 16711680,
                rosybrown: 12357519,
                royalblue: 4286945,
                saddlebrown: 9127187,
                salmon: 16416882,
                sandybrown: 16032864,
                seagreen: 3050327,
                seashell: 16774638,
                sienna: 10506797,
                silver: 12632256,
                skyblue: 8900331,
                slateblue: 6970061,
                slategray: 7372944,
                slategrey: 7372944,
                snow: 16775930,
                springgreen: 65407,
                steelblue: 4620980,
                tan: 13808780,
                teal: 32896,
                thistle: 14204888,
                tomato: 16737095,
                turquoise: 4251856,
                violet: 15631086,
                wheat: 16113331,
                white: 16777215,
                whitesmoke: 16119285,
                yellow: 16776960,
                yellowgreen: 10145074
            };

        function RU() {
            return this.rgb().formatHex()
        }

        function kU() {
            return this.rgb().formatRgb()
        }

        function DU(e) {
            var t, n;
            return e = (e + "").trim().toLowerCase(), (t = CU.exec(e)) ? (n = t[1].length, t = parseInt(t[1], 16), 6 === n ? FU(t) : 3 === n ? new GU(t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | 240 & t, (15 & t) << 4 | 15 & t, 1) : 8 === n ? UU(t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, (255 & t) / 255) : 4 === n ? UU(t >> 12 & 15 | t >> 8 & 240, t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | 240 & t, ((15 & t) << 4 | 15 & t) / 255) : null) : (t = NU.exec(e)) ? new GU(t[1], t[2], t[3], 1) : (t = wU.exec(e)) ? new GU(255 * t[1] / 100, 255 * t[2] / 100, 255 * t[3] / 100, 1) : (t = OU.exec(e)) ? UU(t[1], t[2], t[3], t[4]) : (t = PU.exec(e)) ? UU(255 * t[1] / 100, 255 * t[2] / 100, 255 * t[3] / 100, t[4]) : (t = LU.exec(e)) ? YU(t[1], t[2] / 100, t[3] / 100, 1) : (t = AU.exec(e)) ? YU(t[1], t[2] / 100, t[3] / 100, t[4]) : MU.hasOwnProperty(e) ? FU(MU[e]) : "transparent" === e ? new GU(NaN, NaN, NaN, 0) : null
        }

        function FU(e) {
            return new GU(e >> 16 & 255, e >> 8 & 255, 255 & e, 1)
        }

        function UU(e, t, n, s) {
            return s <= 0 && (e = t = n = NaN), new GU(e, t, n, s)
        }

        function BU(e, t, n, s) {
            return 1 === arguments.length ? ((i = e) instanceof TU || (i = DU(i)), i ? new GU((i = i.rgb()).r, i.g, i.b, i.opacity) : new GU) : new GU(e, t, n, null == s ? 1 : s);
            var i
        }

        function GU(e, t, n, s) {
            this.r = +e, this.g = +t, this.b = +n, this.opacity = +s
        }

        function VU() {
            return `#${zU(this.r)}${zU(this.g)}${zU(this.b)}`
        }

        function HU() {
            const e = KU(this.opacity);
            return `${1===e?"rgb(":"rgba("}${WU(this.r)}, ${WU(this.g)}, ${WU(this.b)}${1===e?")":`, ${e})`}`
        }

        function KU(e) {
            return isNaN(e) ? 1 : Math.max(0, Math.min(1, e))
        }

        function WU(e) {
            return Math.max(0, Math.min(255, Math.round(e) || 0))
        }

        function zU(e) {
            return ((e = WU(e)) < 16 ? "0" : "") + e.toString(16)
        }

        function YU(e, t, n, s) {
            return s <= 0 ? e = t = n = NaN : n <= 0 || n >= 1 ? e = t = NaN : t <= 0 && (e = NaN), new qU(e, t, n, s)
        }

        function $U(e) {
            if (e instanceof qU) return new qU(e.h, e.s, e.l, e.opacity);
            if (e instanceof TU || (e = DU(e)), !e) return new qU;
            if (e instanceof qU) return e;
            var t = (e = e.rgb()).r / 255,
                n = e.g / 255,
                s = e.b / 255,
                i = Math.min(t, n, s),
                a = Math.max(t, n, s),
                o = NaN,
                r = a - i,
                l = (a + i) / 2;
            return r ? (o = t === a ? (n - s) / r + 6 * (n < s) : n === a ? (s - t) / r + 2 : (t - n) / r + 4, r /= l < .5 ? a + i : 2 - a - i, o *= 60) : r = l > 0 && l < 1 ? 0 : o, new qU(o, r, l, e.opacity)
        }

        function qU(e, t, n, s) {
            this.h = +e, this.s = +t, this.l = +n, this.opacity = +s
        }

        function XU(e) {
            return (e = (e || 0) % 360) < 0 ? e + 360 : e
        }

        function QU(e) {
            return Math.max(0, Math.min(1, e || 0))
        }

        function ZU(e, t, n) {
            return 255 * (e < 60 ? t + (n - t) * e / 60 : e < 180 ? n : e < 240 ? t + (n - t) * (240 - e) / 60 : t)
        }

        function JU(e, t, n, s, i) {
            var a = e * e,
                o = a * e;
            return ((1 - 3 * e + 3 * a - o) * t + (4 - 6 * a + 3 * o) * n + (1 + 3 * e + 3 * a - 3 * o) * s + o * i) / 6
        }
        _U(TU, DU, {
            copy(e) {
                return Object.assign(new this.constructor, this, e)
            },
            displayable() {
                return this.rgb().displayable()
            },
            hex: RU,
            formatHex: RU,
            formatHex8: function () {
                return this.rgb().formatHex8()
            },
            formatHsl: function () {
                return $U(this).formatHsl()
            },
            formatRgb: kU,
            toString: kU
        }), _U(GU, BU, bU(TU, {
            brighter(e) {
                return e = null == e ? IU : Math.pow(IU, e), new GU(this.r * e, this.g * e, this.b * e, this.opacity)
            },
            darker(e) {
                return e = null == e ? EU : Math.pow(EU, e), new GU(this.r * e, this.g * e, this.b * e, this.opacity)
            },
            rgb() {
                return this
            },
            clamp() {
                return new GU(WU(this.r), WU(this.g), WU(this.b), KU(this.opacity))
            },
            displayable() {
                return -.5 <= this.r && this.r < 255.5 && -.5 <= this.g && this.g < 255.5 && -.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1
            },
            hex: VU,
            formatHex: VU,
            formatHex8: function () {
                return `#${zU(this.r)}${zU(this.g)}${zU(this.b)}${zU(255*(isNaN(this.opacity)?1:this.opacity))}`
            },
            formatRgb: HU,
            toString: HU
        })), _U(qU, (function (e, t, n, s) {
            return 1 === arguments.length ? $U(e) : new qU(e, t, n, null == s ? 1 : s)
        }), bU(TU, {
            brighter(e) {
                return e = null == e ? IU : Math.pow(IU, e), new qU(this.h, this.s, this.l * e, this.opacity)
            },
            darker(e) {
                return e = null == e ? EU : Math.pow(EU, e), new qU(this.h, this.s, this.l * e, this.opacity)
            },
            rgb() {
                var e = this.h % 360 + 360 * (this.h < 0),
                    t = isNaN(e) || isNaN(this.s) ? 0 : this.s,
                    n = this.l,
                    s = n + (n < .5 ? n : 1 - n) * t,
                    i = 2 * n - s;
                return new GU(ZU(e >= 240 ? e - 240 : e + 120, i, s), ZU(e, i, s), ZU(e < 120 ? e + 240 : e - 120, i, s), this.opacity)
            },
            clamp() {
                return new qU(XU(this.h), QU(this.s), QU(this.l), KU(this.opacity))
            },
            displayable() {
                return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1
            },
            formatHsl() {
                const e = KU(this.opacity);
                return `${1===e?"hsl(":"hsla("}${XU(this.h)}, ${100*QU(this.s)}%, ${100*QU(this.l)}%${1===e?")":`, ${e})`}`
            }
        }));
        const eB = e => () => e;

        function tB(e, t) {
            return function (n) {
                return e + n * t
            }
        }

        function nB(e) {
            return 1 == (e = +e) ? sB : function (t, n) {
                return n - t ? function (e, t, n) {
                    return e = Math.pow(e, n), t = Math.pow(t, n) - e, n = 1 / n,
                        function (s) {
                            return Math.pow(e + s * t, n)
                        }
                }(t, n, e) : eB(isNaN(t) ? n : t)
            }
        }

        function sB(e, t) {
            var n = t - e;
            return n ? tB(e, n) : eB(isNaN(e) ? t : e)
        }
        const iB = function e(t) {
            var n = nB(t);

            function s(e, t) {
                var s = n((e = BU(e)).r, (t = BU(t)).r),
                    i = n(e.g, t.g),
                    a = n(e.b, t.b),
                    o = sB(e.opacity, t.opacity);
                return function (t) {
                    return e.r = s(t), e.g = i(t), e.b = a(t), e.opacity = o(t), e + ""
                }
            }
            return s.gamma = e, s
        }(1);

        function aB(e) {
            return function (t) {
                var n, s, i = t.length,
                    a = new Array(i),
                    o = new Array(i),
                    r = new Array(i);
                for (n = 0; n < i; ++n) s = BU(t[n]), a[n] = s.r || 0, o[n] = s.g || 0, r[n] = s.b || 0;
                return a = e(a), o = e(o), r = e(r), s.opacity = 1,
                    function (e) {
                        return s.r = a(e), s.g = o(e), s.b = r(e), s + ""
                    }
            }
        }
        aB((function (e) {
            var t = e.length - 1;
            return function (n) {
                var s = n <= 0 ? n = 0 : n >= 1 ? (n = 1, t - 1) : Math.floor(n * t),
                    i = e[s],
                    a = e[s + 1],
                    o = s > 0 ? e[s - 1] : 2 * i - a,
                    r = s < t - 1 ? e[s + 2] : 2 * a - i;
                return JU((n - s / t) * t, o, i, a, r)
            }
        })), aB((function (e) {
            var t = e.length;
            return function (n) {
                var s = Math.floor(((n %= 1) < 0 ? ++n : n) * t),
                    i = e[(s + t - 1) % t],
                    a = e[s % t],
                    o = e[(s + 1) % t],
                    r = e[(s + 2) % t];
                return JU((n - s / t) * t, i, a, o, r)
            }
        }));

        function oB(e, t) {
            var n, s = t ? t.length : 0,
                i = e ? Math.min(s, e.length) : 0,
                a = new Array(i),
                o = new Array(s);
            for (n = 0; n < i; ++n) a[n] = gB(e[n], t[n]);
            for (; n < s; ++n) o[n] = t[n];
            return function (e) {
                for (n = 0; n < i; ++n) o[n] = a[n](e);
                return o
            }
        }

        function rB(e, t) {
            var n = new Date;
            return e = +e, t = +t,
                function (s) {
                    return n.setTime(e * (1 - s) + t * s), n
                }
        }

        function lB(e, t) {
            return e = +e, t = +t,
                function (n) {
                    return e * (1 - n) + t * n
                }
        }

        function cB(e, t) {
            var n, s = {},
                i = {};
            for (n in null !== e && "object" == typeof e || (e = {}), null !== t && "object" == typeof t || (t = {}), t) n in e ? s[n] = gB(e[n], t[n]) : i[n] = t[n];
            return function (e) {
                for (n in s) i[n] = s[n](e);
                return i
            }
        }
        var uB = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
            dB = new RegExp(uB.source, "g");

        function mB(e, t) {
            var n, s, i, a = uB.lastIndex = dB.lastIndex = 0,
                o = -1,
                r = [],
                l = [];
            for (e += "", t += "";
                (n = uB.exec(e)) && (s = dB.exec(t));)(i = s.index) > a && (i = t.slice(a, i), r[o] ? r[o] += i : r[++o] = i), (n = n[0]) === (s = s[0]) ? r[o] ? r[o] += s : r[++o] = s : (r[++o] = null, l.push({
                i: o,
                x: lB(n, s)
            })), a = dB.lastIndex;
            return a < t.length && (i = t.slice(a), r[o] ? r[o] += i : r[++o] = i), r.length < 2 ? l[0] ? function (e) {
                return function (t) {
                    return e(t) + ""
                }
            }(l[0].x) : function (e) {
                return function () {
                    return e
                }
            }(t) : (t = l.length, function (e) {
                for (var n, s = 0; s < t; ++s) r[(n = l[s]).i] = n.x(e);
                return r.join("")
            })
        }

        function hB(e, t) {
            t || (t = []);
            var n, s = e ? Math.min(t.length, e.length) : 0,
                i = t.slice();
            return function (a) {
                for (n = 0; n < s; ++n) i[n] = e[n] * (1 - a) + t[n] * a;
                return i
            }
        }

        function gB(e, t) {
            var n, s, i = typeof t;
            return null == t || "boolean" === i ? eB(t) : ("number" === i ? lB : "string" === i ? (n = DU(t)) ? (t = n, iB) : mB : t instanceof DU ? iB : t instanceof Date ? rB : (s = t, !ArrayBuffer.isView(s) || s instanceof DataView ? Array.isArray(t) ? oB : "function" != typeof t.valueOf && "function" != typeof t.toString || isNaN(t) ? cB : lB : hB))(e, t)
        }

        function pB(e, t) {
            return e = +e, t = +t,
                function (n) {
                    return Math.round(e * (1 - n) + t * n)
                }
        }

        function fB(e) {
            return +e
        }
        var xB = [0, 1];

        function vB(e) {
            return e
        }

        function _B(e, t) {
            return (t -= e = +e) ? function (n) {
                return (n - e) / t
            } : (n = isNaN(t) ? NaN : .5, function () {
                return n
            });
            var n
        }

        function bB(e, t, n) {
            var s = e[0],
                i = e[1],
                a = t[0],
                o = t[1];
            return i < s ? (s = _B(i, s), a = n(o, a)) : (s = _B(s, i), a = n(a, o)),
                function (e) {
                    return a(s(e))
                }
        }

        function TB(e, t, n) {
            var s = Math.min(e.length, t.length) - 1,
                i = new Array(s),
                a = new Array(s),
                o = -1;
            for (e[s] < e[0] && (e = e.slice().reverse(), t = t.slice().reverse()); ++o < s;) i[o] = _B(e[o], e[o + 1]), a[o] = n(t[o], t[o + 1]);
            return function (t) {
                var n = vU(e, t, 1, s) - 1;
                return a[n](i[n](t))
            }
        }

        function EB() {
            var e, t, n, s, i, a, o = xB,
                r = xB,
                l = gB,
                c = vB;

            function u() {
                var e, t, n, l = Math.min(o.length, r.length);
                return c !== vB && (e = o[0], t = o[l - 1], e > t && (n = e, e = t, t = n), c = function (n) {
                    return Math.max(e, Math.min(t, n))
                }), s = l > 2 ? TB : bB, i = a = null, d
            }

            function d(t) {
                return null == t || isNaN(t = +t) ? n : (i || (i = s(o.map(e), r, l)))(e(c(t)))
            }
            return d.invert = function (n) {
                    return c(t((a || (a = s(r, o.map(e), lB)))(n)))
                }, d.domain = function (e) {
                    return arguments.length ? (o = Array.from(e, fB), u()) : o.slice()
                }, d.range = function (e) {
                    return arguments.length ? (r = Array.from(e), u()) : r.slice()
                }, d.rangeRound = function (e) {
                    return r = Array.from(e), l = pB, u()
                }, d.clamp = function (e) {
                    return arguments.length ? (c = !!e || vB, u()) : c !== vB
                }, d.interpolate = function (e) {
                    return arguments.length ? (l = e, u()) : l
                }, d.unknown = function (e) {
                    return arguments.length ? (n = e, d) : n
                },
                function (n, s) {
                    return e = n, t = s, u()
                }
        }

        function IB(e, t) {
            switch (arguments.length) {
            case 0:
                break;
            case 1:
                this.range(e);
                break;
            default:
                this.range(t).domain(e)
            }
            return this
        }
        var yB, jB = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

        function SB(e) {
            if (!(t = jB.exec(e))) throw new Error("invalid format: " + e);
            var t;
            return new CB({
                fill: t[1],
                align: t[2],
                sign: t[3],
                symbol: t[4],
                zero: t[5],
                width: t[6],
                comma: t[7],
                precision: t[8] && t[8].slice(1),
                trim: t[9],
                type: t[10]
            })
        }

        function CB(e) {
            this.fill = void 0 === e.fill ? " " : e.fill + "", this.align = void 0 === e.align ? ">" : e.align + "", this.sign = void 0 === e.sign ? "-" : e.sign + "", this.symbol = void 0 === e.symbol ? "" : e.symbol + "", this.zero = !!e.zero, this.width = void 0 === e.width ? void 0 : +e.width, this.comma = !!e.comma, this.precision = void 0 === e.precision ? void 0 : +e.precision, this.trim = !!e.trim, this.type = void 0 === e.type ? "" : e.type + ""
        }

        function NB(e, t) {
            if ((n = (e = t ? e.toExponential(t - 1) : e.toExponential()).indexOf("e")) < 0) return null;
            var n, s = e.slice(0, n);
            return [s.length > 1 ? s[0] + s.slice(2) : s, +e.slice(n + 1)]
        }

        function wB(e) {
            return (e = NB(Math.abs(e))) ? e[1] : NaN
        }

        function OB(e, t) {
            var n = NB(e, t);
            if (!n) return e + "";
            var s = n[0],
                i = n[1];
            return i < 0 ? "0." + new Array(-i).join("0") + s : s.length > i + 1 ? s.slice(0, i + 1) + "." + s.slice(i + 1) : s + new Array(i - s.length + 2).join("0")
        }
        SB.prototype = CB.prototype, CB.prototype.toString = function () {
            return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (void 0 === this.width ? "" : Math.max(1, 0 | this.width)) + (this.comma ? "," : "") + (void 0 === this.precision ? "" : "." + Math.max(0, 0 | this.precision)) + (this.trim ? "~" : "") + this.type
        };
        const PB = {
            "%": (e, t) => (100 * e).toFixed(t),
            b: e => Math.round(e).toString(2),
            c: e => e + "",
            d: function (e) {
                return Math.abs(e = Math.round(e)) >= 1e21 ? e.toLocaleString("en").replace(/,/g, "") : e.toString(10)
            },
            e: (e, t) => e.toExponential(t),
            f: (e, t) => e.toFixed(t),
            g: (e, t) => e.toPrecision(t),
            o: e => Math.round(e).toString(8),
            p: (e, t) => OB(100 * e, t),
            r: OB,
            s: function (e, t) {
                var n = NB(e, t);
                if (!n) return e + "";
                var s = n[0],
                    i = n[1],
                    a = i - (yB = 3 * Math.max(-8, Math.min(8, Math.floor(i / 3)))) + 1,
                    o = s.length;
                return a === o ? s : a > o ? s + new Array(a - o + 1).join("0") : a > 0 ? s.slice(0, a) + "." + s.slice(a) : "0." + new Array(1 - a).join("0") + NB(e, Math.max(0, t + a - 1))[0]
            },
            X: e => Math.round(e).toString(16).toUpperCase(),
            x: e => Math.round(e).toString(16)
        };

        function LB(e) {
            return e
        }
        var AB, MB, RB, kB = Array.prototype.map,
            DB = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

        function FB(e) {
            var t, n, s = void 0 === e.grouping || void 0 === e.thousands ? LB : (t = kB.call(e.grouping, Number), n = e.thousands + "", function (e, s) {
                    for (var i = e.length, a = [], o = 0, r = t[0], l = 0; i > 0 && r > 0 && (l + r + 1 > s && (r = Math.max(1, s - l)), a.push(e.substring(i -= r, i + r)), !((l += r + 1) > s));) r = t[o = (o + 1) % t.length];
                    return a.reverse().join(n)
                }),
                i = void 0 === e.currency ? "" : e.currency[0] + "",
                a = void 0 === e.currency ? "" : e.currency[1] + "",
                o = void 0 === e.decimal ? "." : e.decimal + "",
                r = void 0 === e.numerals ? LB : function (e) {
                    return function (t) {
                        return t.replace(/[0-9]/g, (function (t) {
                            return e[+t]
                        }))
                    }
                }(kB.call(e.numerals, String)),
                l = void 0 === e.percent ? "%" : e.percent + "",
                c = void 0 === e.minus ? "−" : e.minus + "",
                u = void 0 === e.nan ? "NaN" : e.nan + "";

            function d(e) {
                var t = (e = SB(e)).fill,
                    n = e.align,
                    d = e.sign,
                    m = e.symbol,
                    h = e.zero,
                    g = e.width,
                    p = e.comma,
                    f = e.precision,
                    x = e.trim,
                    v = e.type;
                "n" === v ? (p = !0, v = "g") : PB[v] || (void 0 === f && (f = 12), x = !0, v = "g"), (h || "0" === t && "=" === n) && (h = !0, t = "0", n = "=");
                var _ = "$" === m ? i : "#" === m && /[boxX]/.test(v) ? "0" + v.toLowerCase() : "",
                    b = "$" === m ? a : /[%p]/.test(v) ? l : "",
                    T = PB[v],
                    E = /[defgprs%]/.test(v);

                function I(e) {
                    var i, a, l, m = _,
                        I = b;
                    if ("c" === v) I = T(e) + I, e = "";
                    else {
                        var y = (e = +e) < 0 || 1 / e < 0;
                        if (e = isNaN(e) ? u : T(Math.abs(e), f), x && (e = function (e) {
                                e: for (var t, n = e.length, s = 1, i = -1; s < n; ++s) switch (e[s]) {
                                case ".":
                                    i = t = s;
                                    break;
                                case "0":
                                    0 === i && (i = s), t = s;
                                    break;
                                default:
                                    if (!+e[s]) break e;
                                    i > 0 && (i = 0)
                                }
                                return i > 0 ? e.slice(0, i) + e.slice(t + 1) : e
                            }(e)), y && 0 == +e && "+" !== d && (y = !1), m = (y ? "(" === d ? d : c : "-" === d || "(" === d ? "" : d) + m, I = ("s" === v ? DB[8 + yB / 3] : "") + I + (y && "(" === d ? ")" : ""), E)
                            for (i = -1, a = e.length; ++i < a;)
                                if (48 > (l = e.charCodeAt(i)) || l > 57) {
                                    I = (46 === l ? o + e.slice(i + 1) : e.slice(i)) + I, e = e.slice(0, i);
                                    break
                                }
                    }
                    p && !h && (e = s(e, 1 / 0));
                    var j = m.length + e.length + I.length,
                        S = j < g ? new Array(g - j + 1).join(t) : "";
                    switch (p && h && (e = s(S + e, S.length ? g - I.length : 1 / 0), S = ""), n) {
                    case "<":
                        e = m + e + I + S;
                        break;
                    case "=":
                        e = m + S + e + I;
                        break;
                    case "^":
                        e = S.slice(0, j = S.length >> 1) + m + e + I + S.slice(j);
                        break;
                    default:
                        e = S + m + e + I
                    }
                    return r(e)
                }
                return f = void 0 === f ? 6 : /[gprs]/.test(v) ? Math.max(1, Math.min(21, f)) : Math.max(0, Math.min(20, f)), I.toString = function () {
                    return e + ""
                }, I
            }
            return {
                format: d,
                formatPrefix: function (e, t) {
                    var n = d(((e = SB(e)).type = "f", e)),
                        s = 3 * Math.max(-8, Math.min(8, Math.floor(wB(t) / 3))),
                        i = Math.pow(10, -s),
                        a = DB[8 + s / 3];
                    return function (e) {
                        return n(i * e) + a
                    }
                }
            }
        }

        function UB(e, t, n, s) {
            var i, a = function (e, t, n) {
                n = +n;
                const s = (t = +t) < (e = +e),
                    i = s ? dU(t, e, n) : dU(e, t, n);
                return (s ? -1 : 1) * (i < 0 ? 1 / -i : i)
            }(e, t, n);
            switch ((s = SB(null == s ? ",f" : s)).type) {
            case "s":
                var o = Math.max(Math.abs(e), Math.abs(t));
                return null != s.precision || isNaN(i = function (e, t) {
                    return Math.max(0, 3 * Math.max(-8, Math.min(8, Math.floor(wB(t) / 3))) - wB(Math.abs(e)))
                }(a, o)) || (s.precision = i), RB(s, o);
            case "":
            case "e":
            case "g":
            case "p":
            case "r":
                null != s.precision || isNaN(i = function (e, t) {
                    return e = Math.abs(e), t = Math.abs(t) - e, Math.max(0, wB(t) - wB(e)) + 1
                }(a, Math.max(Math.abs(e), Math.abs(t)))) || (s.precision = i - ("e" === s.type));
                break;
            case "f":
            case "%":
                null != s.precision || isNaN(i = function (e) {
                    return Math.max(0, -wB(Math.abs(e)))
                }(a)) || (s.precision = i - 2 * ("%" === s.type))
            }
            return MB(s)
        }

        function BB(e) {
            var t = e.domain;
            return e.ticks = function (e) {
                var n = t();
                return function (e, t, n) {
                    if (!((n = +n) > 0)) return [];
                    if ((e = +e) == (t = +t)) return [e];
                    const s = t < e,
                        [i, a, o] = s ? uU(t, e, n) : uU(e, t, n);
                    if (!(a >= i)) return [];
                    const r = a - i + 1,
                        l = new Array(r);
                    if (s)
                        if (o < 0)
                            for (let e = 0; e < r; ++e) l[e] = (a - e) / -o;
                        else
                            for (let e = 0; e < r; ++e) l[e] = (a - e) * o;
                    else if (o < 0)
                        for (let e = 0; e < r; ++e) l[e] = (i + e) / -o;
                    else
                        for (let e = 0; e < r; ++e) l[e] = (i + e) * o;
                    return l
                }(n[0], n[n.length - 1], null == e ? 10 : e)
            }, e.tickFormat = function (e, n) {
                var s = t();
                return UB(s[0], s[s.length - 1], null == e ? 10 : e, n)
            }, e.nice = function (n) {
                null == n && (n = 10);
                var s, i, a = t(),
                    o = 0,
                    r = a.length - 1,
                    l = a[o],
                    c = a[r],
                    u = 10;
                for (c < l && (i = l, l = c, c = i, i = o, o = r, r = i); u-- > 0;) {
                    if ((i = dU(l, c, n)) === s) return a[o] = l, a[r] = c, t(a);
                    if (i > 0) l = Math.floor(l / i) * i, c = Math.ceil(c / i) * i;
                    else {
                        if (!(i < 0)) break;
                        l = Math.ceil(l * i) / i, c = Math.floor(c * i) / i
                    }
                    s = i
                }
                return e
            }, e
        }

        function GB() {
            var e = EB()(vB, vB);
            return e.copy = function () {
                return t = e, GB().domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown());
                var t
            }, IB.apply(e, arguments), BB(e)
        }
        AB = FB({
            thousands: ",",
            grouping: [3],
            currency: ["$", ""]
        }), MB = AB.format, RB = AB.formatPrefix;
        var VB = e => {
            const {
                viewport: {
                    posFromPoint: t,
                    rem: n
                }
            } = VF(), {
                d: s,
                strokeWidth: i,
                fill: a = "transparent",
                ...o
            } = e, r = (0, Y.useMemo)((() => s?.replace(/(-?\d+\.?\d*),(-?\d+\.?\d*)/g, ((e, n, s) => {
                const i = t(Number(n), Number(s));
                return `${i.x},${i.y}`
            })).replace(/([HhVv])\s*?(-?\d+\.?\d*)/g, ((e, n, s) => {
                const i = "h" === n.toLowerCase(),
                    a = t(Number(s), Number(s));
                return `${n} ${i?a.x:a.y}`
            }))), [s, t]);
            return (0, z.jsx)("path", {
                d: r,
                strokeWidth: i ? n(i) : void 0,
                fill: a,
                ...o
            })
        };
        X.add("game-ui/common/svg/elements/path.tsx", {
            get Path() {
                return VB
            },
            set Path(e) {
                VB = e
            }
        });
        let HB = {
            "grid-lines": "grid-lines_BXH",
            gridLines: "grid-lines_BXH",
            "axis-labels": "axis-labels_IjN",
            axisLabels: "axis-labels_IjN"
        };
        X.add("game-ui/common/svg/svg.module.scss", {
            get classes() {
                return HB
            },
            set classes(e) {
                Object.assign(HB, e)
            }
        });
        const KB = HB;
        var WB = e => {
                const {
                    label: t,
                    x: n,
                    y: s,
                    fontSize: i,
                    color: a,
                    rotation: o = 0,
                    onTop: r,
                    textAnchor: l
                } = e;
                let c;
                switch (typeof t) {
                case "string":
                case "object":
                    c = t;
                    break;
                default:
                    c = e.label.toString().replace(/^(-)?0/, "$1") || "0"
                }
                return (0, z.jsx)("g", {
                    transform: `translate(${n+.5*i} ${s+i*(r?.5:-1.5)}) rotate(${o}deg)`,
                    children: (0, z.jsx)("text", {
                        transform: "scale(1 -1)",
                        fontSize: i,
                        fill: a,
                        textAnchor: l,
                        children: c
                    })
                })
            },
            zB = ({
                fixed: e,
                overdraw: t = !1,
                textScale: n = 1,
                tickWidth: s = 100,
                tickHeight: i = 100,
                formatLabelX: a,
                formatLabelY: o
            }) => {
                const {
                    viewport: r
                } = VF(), {
                    size: l,
                    rem: c,
                    bounds: u,
                    posFromPoint: d
                } = r, {
                    axesPath: m,
                    xLabels: h,
                    yLabels: g
                } = (0, Y.useMemo)((() => {
                    if (!u) return {};
                    let r = "";
                    const m = Number(t) * Math.max(c(s) / l.width, c(i) / l.height) * 2,
                        h = 1 + 2 * m,
                        g = [],
                        p = [],
                        f = Math.ceil(l.width * h / c(s)),
                        x = Math.ceil(l.height * h / c(i)),
                        v = u.max.x - u.min.x,
                        _ = u.max.y - u.min.y,
                        b = u.min.x - v * m,
                        T = u.max.x + v * m,
                        E = u.min.y - _ * m,
                        I = u.max.y + _ * m,
                        y = GB().domain([b, T]).nice().ticks(f);
                    for (let t = 0; t < y.length; t++) {
                        const s = d(y[t], 0),
                            i = a ? a(y[t]) : y[t],
                            o = t === y.length - 1 ? "end" : "mid";
                        g.push((0, z.jsx)(WB, {
                            x: s.x,
                            y: e ? 0 : s.y,
                            label: i,
                            fontSize: c(11 * n),
                            onTop: e,
                            textAnchor: o
                        }, `${t}-${i}-${s.x}`))
                    }
                    const j = GB().domain([E, I]).nice().ticks(x);
                    for (let t = 0; t < j.length; t++) {
                        const s = d(0, j[t]),
                            i = o ? o(j[t]) : j[t];
                        p.push((0, z.jsx)(WB, {
                            x: e ? 0 : s.x,
                            y: s.y,
                            label: i,
                            fontSize: c(11 * n),
                            onTop: e
                        }, `${t}-${i}-${s.y}`))
                    }
                    return e || (r += `M ${b},0 L ${T}, 0 `, r += `M 0, ${E} L 0, ${I}`), {
                        axesPath: r,
                        xLabels: g,
                        yLabels: p
                    }
                }), [u, t, c, s, l.width, l.height, i, e, d, a, n, o]);
                return (0, z.jsxs)("g", {
                    className: KB.axisLabels,
                    children: [m && (0, z.jsx)(VB, {
                        d: m,
                        strokeWidth: .5,
                        stroke: "#fff7"
                    }), (0, z.jsx)("g", {
                        children: h
                    }), (0, z.jsx)("g", {
                        children: g
                    })]
                })
            };
        X.add("game-ui/common/svg/components/axis-labels.tsx", {
            get GridLineAxisTick() {
                return WB
            },
            set GridLineAxisTick(e) {
                WB = e
            },
            get AxisLabels() {
                return zB
            },
            set AxisLabels(e) {
                zB = e
            }
        });
        var YB = ({
            halfSteps: e,
            overdraw: t = !1,
            drawAxes: n = !0,
            tickWidth: s = 100,
            tickHeight: i = 100
        }) => {
            const {
                viewport: a
            } = VF(), {
                size: o,
                rem: r,
                bounds: l
            } = a, {
                gridPath: c,
                halfStepsGridPath: u
            } = (0, Y.useMemo)((() => {
                if (!l || !n) return {};
                let a = "\n",
                    c = "\n";
                const u = Number(t) * Math.max(r(s) / o.width, r(i) / o.height) * 2,
                    d = 1 + 2 * u,
                    m = l.max.x - l.min.x,
                    h = l.max.y - l.min.y,
                    g = l.min.x - m * u,
                    p = l.max.x + m * u,
                    f = l.min.y - h * u,
                    x = l.max.y + h * u;
                if (!0 === n || n.includes("x")) {
                    const t = Math.ceil(o.width * d / r(s)),
                        n = GB().domain([g, p]).nice().ticks(t),
                        i = (n[1] - n[0]) / 2;
                    for (let t = 0; t < n.length; t++) a += `M ${n[t]},${f} V ${x} `, a += "\n", e && (c += `M ${n[t]+i},${f} V ${x} `, c += "\n");
                    a += "\n", c += "\n"
                }
                if (!0 === n || n.includes("y")) {
                    const t = Math.ceil(o.height * d / r(i)),
                        n = GB().domain([f, x]).nice().ticks(t),
                        s = (n[1] - n[0]) / 2;
                    for (let t = 0; t < n.length; t++) a += `M ${g},${n[t]} H ${p} `, a += "\n", e && (c += `M ${g},${n[t]+s} H ${p} `, c += "\n")
                }
                return {
                    gridPath: a,
                    halfStepsGridPath: c,
                    xLabels: [],
                    yLabels: []
                }
            }), [l, n, t, r, s, o.width, o.height, i, e]);
            return (0, z.jsxs)("g", {
                className: KB.gridLines,
                children: [(0, z.jsx)(VB, {
                    d: c,
                    strokeWidth: .5,
                    stroke: "#fff3"
                }), u && (0, z.jsx)(VB, {
                    d: u,
                    strokeWidth: .5,
                    stroke: "#fff1"
                })]
            })
        };
        X.add("game-ui/common/svg/components/grid-lines.tsx", {
            get GridLines() {
                return YB
            },
            set GridLines(e) {
                YB = e
            }
        });
        let $B = {
            "tooltip-base": "tooltip-base_zwi",
            tooltipBase: "tooltip-base_zwi",
            "tooltip-fade-in": "tooltip-fade-in_S9n",
            tooltipFadeIn: "tooltip-fade-in_S9n",
            fadeIn: "fadeIn_VY9",
            tooltip: "tooltip_xe4 tooltip-base_zwi tooltip-fade-in_S9n"
        };
        X.add("game-ui/common/tooltip/floating-mouse-tooltip/floating-mouse-tooltip.module.scss", {
            get classes() {
                return $B
            },
            set classes(e) {
                Object.assign($B, e)
            }
        });
        const qB = $B,
            XB = 0,
            QB = 16;
        var ZB = ({
            tooltip: e,
            disabled: t,
            theme: n,
            alwaysVisible: s = !1,
            screenSpacePosition: i = !1,
            style: a,
            className: o,
            children: r
        }) => {
            if (!i && !Y.isValidElement(r)) throw new Error("Tooltip requires a single child react element!");
            const l = (0, Y.useMemo)((() => ({
                    ...qB,
                    ...n
                })), [n]),
                [c, u] = (0, Y.useState)(s),
                d = (0, Y.useRef)(Ad),
                m = (0, Y.useRef)(null),
                h = (0, Y.useCallback)((e => {
                    m.current = e, null != e && JB(e, d.current)
                }), []),
                g = (0, Y.useCallback)((e => {
                    d.current = Yd(e), u(s || !0)
                }), [s]),
                p = (0, Y.useCallback)((e => {
                    d.current = Yd(e), null != m.current && JB(m.current, d.current, i)
                }), [i]),
                f = (0, Y.useCallback)((e => u(s || !1)), [s]),
                x = (0, Y.useCallback)((e => u(s || !1)), [s]),
                v = (0, Y.useRef)(null),
                _ = (0, Y.useCallback)((e => {
                    v.current !== e && (null != v.current && (v.current.removeEventListener("mouseover", g), v.current.removeEventListener("mousemove", p), v.current.removeEventListener("mouseleave", f), v.current.removeEventListener("mousedown", x)), null != e && (e.addEventListener("mouseover", g), e.addEventListener("mousemove", p), e.addEventListener("mouseleave", f), e.addEventListener("mousedown", x)), v.current = e)
                }), [x, f, p, g]);
            (0, Y.useEffect)((() => {
                i && _(document.body)
            }), [i]);
            const b = !!e && (i || Y.Children.count(r) > 0),
                T = (0, Y.useContext)(fg);
            return (0, z.jsxs)(z.Fragment, {
                children: [!i && r && (0, z.jsx)(vd, {
                    ref: _,
                    children: r
                }), b && !t && c && !T && (0, z.jsx)(zm, {
                    children: (0, z.jsx)("div", {
                        className: Zu()(l.tooltip, o),
                        style: a,
                        ref: h,
                        children: e
                    })
                })]
            })
        };

        function JB(e, t, n) {
            const s = t.x + XB,
                i = t.y + QB;
            if (n) return e.style.left = `${s}px`, void(e.style.top = `${i}px`);
            e.style.left = `${s}px`, e.style.top = `${i}px`, requestAnimationFrame((() => {
                const t = e.getBoundingClientRect(),
                    n = window.innerWidth - t.width,
                    a = window.innerHeight - t.height;
                s > n && (e.style.left = `${n}px`), i > a && (e.style.top = `${a}px`)
            }))
        }
        X.add("game-ui/common/tooltip/floating-mouse-tooltip/floating-mouse-tooltip.tsx", {
            get FloatingMouseTooltip() {
                return ZB
            },
            set FloatingMouseTooltip(e) {
                ZB = e
            }
        });
        var eG = (e, t, n, s) => e + (t - n) * s,
            tG = (e, t) => e && e.min.y === t.min.y && e.max.y === t.max.y && e.min.x === t.min.x && e.max.x === t.max.x ? e : t;
        const nG = {
            inTangent: 0,
            outTangent: 0,
            inWeight: 0,
            outWeight: 0,
            weightedMode: 0,
            readonly: !0
        };
        var sG = (e, t, n) => {
            e && t.filter((e => e.keys.length > 0)).map((t => {
                const s = t.keys;
                s[0].readonly && s.splice(0, 1), s[s.length - 1].readonly && s.splice(s.length - 1, 1);
                const i = s.length - 1,
                    a = s[0],
                    o = s[1],
                    r = s[i],
                    l = s[i - 1];
                if (a.time > n.min.x) {
                    let t;
                    "clamp" === e ? (a.inTangent = 0, t = {
                        ...nG,
                        time: n.min.x,
                        value: a.value
                    }) : "loop" === e ? (t = {
                        ...nG,
                        ...r,
                        time: a.time - (r.time - l.time)
                    }, a.inTangent = r.inTangent, a.inWeight = r.inWeight) : (t = {
                        ...nG,
                        ...o,
                        outTangent: -o.inTangent,
                        outWeight: o.inWeight,
                        time: a.time - (o.time - a.time)
                    }, a.inTangent = -a.outTangent, a.inWeight = a.outWeight), t && s.unshift(t)
                }
                if (r.time < n.max.x) {
                    let t;
                    "clamp" === e ? (r.outTangent = 0, t = {
                        ...nG,
                        time: n.max.x,
                        value: r.value
                    }) : "loop" === e ? (t = {
                        ...nG,
                        ...a,
                        time: r.time + (o.time - a.time)
                    }, r.outTangent = a.outTangent, r.outWeight = a.outWeight) : (t = {
                        ...nG,
                        ...l,
                        inTangent: -l.outTangent,
                        inWeight: l.outWeight,
                        time: r.time + (r.time - l.time)
                    }, r.outTangent = -r.inTangent, r.outWeight = r.inWeight), t && s.push(t)
                }
                t.keys = [...s]
            }))
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/utils/helpers.ts", {
            get project() {
                return eG
            },
            set project(e) {
                eG = e
            },
            get newBounds2IfChanged() {
                return tG
            },
            set newBounds2IfChanged(e) {
                tG = e
            },
            get insertDummyWrapModeKeyframes() {
                return sG
            },
            set insertDummyWrapModeKeyframes(e) {
                sG = e
            }
        });
        var iG = e => e.reduce(((t, n, s) => {
            if (0 === s) t.push(`M ${n.time},${n.value}`);
            else {
                const i = e[s - 1],
                    a = isFinite(i.outTangent) && isFinite(n.inTangent),
                    o = i.time,
                    r = i.value,
                    l = n.time,
                    c = n.value,
                    u = i.outTangent,
                    d = n.inTangent,
                    m = i.outWeight,
                    h = 1 - n.inWeight;
                if (a) {
                    const e = eG(o, l, o, m),
                        n = eG(r, e, o, u),
                        s = eG(o, l, o, h),
                        i = eG(c, s, l, d);
                    t.push(`C${e},${n} ${s},${i} ${l},${c}`)
                } else r === c ? t.push(`L${l},${c}`) : u === Number.NEGATIVE_INFINITY && d !== Number.POSITIVE_INFINITY || u !== Number.POSITIVE_INFINITY && d === Number.NEGATIVE_INFINITY ? t.push(`L${o},${c} ${l},${c}`) : t.push(`L ${l},${r} ${l},${c}`)
            }
            return t
        }), []);
        X.add("game-ui/editor/widgets/fields/animation-curve-field/utils/make-curve-path.ts", {
            get makeCurvePath() {
                return iG
            },
            set makeCurvePath(e) {
                iG = e
            }
        });
        let aG = {
            "animation-curve-editor": "animation-curve-editor_sfs",
            animationCurveEditor: "animation-curve-editor_sfs",
            editorItem: "editorItem_DvB",
            editor: "editor_Es7",
            row: "row_GIj row_d2o",
            controls: "controls_RpG",
            column: "column_MrW",
            label: "label_ozJ label_BbZ",
            control: "control_Ivd control_Hds",
            "animation-curve-path": "animation-curve-path_TwV",
            animationCurvePath: "animation-curve-path_TwV",
            "default-stroke": "default-stroke_Bng",
            defaultStroke: "default-stroke_Bng",
            "animation-curve-control-point-arm": "animation-curve-control-point-arm_Wh2",
            animationCurveControlPointArm: "animation-curve-control-point-arm_Wh2",
            "animation-curve-control-point-handle": "animation-curve-control-point-handle_qUn",
            animationCurveControlPointHandle: "animation-curve-control-point-handle_qUn",
            "animation-curve-keyframe": "animation-curve-keyframe_DpO",
            animationCurveKeyframe: "animation-curve-keyframe_DpO",
            "multiple-curves": "multiple-curves_HvS",
            multipleCurves: "multiple-curves_HvS",
            "animation-curve-keyframes": "animation-curve-keyframes_TMk",
            animationCurveKeyframes: "animation-curve-keyframes_TMk",
            "animation-curve-preview-path": "animation-curve-preview-path_VCR",
            animationCurvePreviewPath: "animation-curve-preview-path_VCR",
            hidden: "hidden_prB"
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-editor.module.scss", {
            get classes() {
                return aG
            },
            set classes(e) {
                Object.assign(aG, e)
            }
        });
        const oG = aG;
        var rG = ({
            keys: e = [],
            base: t,
            color: n,
            className: s
        }) => {
            const i = (0, Y.useMemo)((function () {
                const n = iG(e),
                    s = iG(e.map(((e, n) => ({
                        ...e,
                        value: t[n].value - (e.value - t[n].value)
                    }))).reverse());
                return n.concat(s).join(" ").replace(" M", " L") + " z"
            }), [t, e]);
            return (0, z.jsx)(VB, {
                d: i,
                fill: n,
                className: Zu()(s, 0 === e.length && oG.hidden)
            })
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/animation-curve-deviation.tsx", {
            get AnimationCurveDeviation() {
                return rG
            },
            set AnimationCurveDeviation(e) {
                rG = e
            }
        });
        var lG = ({
            keys: e = [],
            color: t,
            className: n
        }) => {
            const s = (0, Y.useMemo)((function () {
                return iG(e).join(" ")
            }), [e]);
            return (0, z.jsx)(VB, {
                d: s,
                stroke: t,
                className: Zu()(oG.animationCurvePath, n, 0 === e.length && oG.hidden, {
                    [oG.defaultStroke]: !t
                })
            })
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/animation-curve-path.tsx", {
            get AnimationCurvePath() {
                return lG
            },
            set AnimationCurvePath(e) {
                lG = e
            }
        });
        let cG = {
            "tooltip-row": "tooltip-row_zpQ",
            tooltipRow: "tooltip-row_zpQ",
            "tooltip-label": "tooltip-label_JO7",
            tooltipLabel: "tooltip-label_JO7"
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframe.module.scss", {
            get classes() {
                return cG
            },
            set classes(e) {
                Object.assign(cG, e)
            }
        });
        const uG = cG,
            dG = e => {
                if (0 === e) return "00.000s";
                const t = Math.floor(e / 3600),
                    n = Math.floor((e - 3600 * t) / 60),
                    s = Math.floor(e - 3600 * t - 60 * n),
                    i = (e % 1).toFixed(3).replace("0.", "");
                let a = "";
                return t && (a += t.toString().padStart(2, "0") + ":"), n && (a += n.toString().padStart(2, "0") + ":"), a += s.toString().padStart(2, "0") + ".", a += i, a + "s"
            };
        var mG, hG, gG = ({
            keyframe: e,
            hide: t
        }) => e ? (0, z.jsxs)("div", {
            children: ["time" !== t && "number" == typeof e.time && (0, z.jsxs)("div", {
                className: uG.tooltipRow,
                children: [(0, z.jsxs)("div", {
                    className: uG.tooltipLabel,
                    children: [(0, z.jsx)(Pc.AnimationCurve.TIME_LABEL, {}), ":"]
                }), (0, z.jsx)("div", {
                    children: dG(e.time)
                })]
            }), "value" !== t && "number" == typeof e.value && (0, z.jsxs)("div", {
                className: uG.tooltipRow,
                children: [(0, z.jsxs)("div", {
                    className: uG.tooltipLabel,
                    children: [(0, z.jsx)(Pc.AnimationCurve.VALUE_LABEL, {}), ":"]
                }), (0, z.jsx)("div", {
                    children: e.value.toFixed(3)
                })]
            })]
        }) : null;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframe-tooltip.tsx", {
                get KeyframeTooltip() {
                    return gG
                },
                set KeyframeTooltip(e) {
                    gG = e
                }
            }),
            function (e) {
                e[e.None = 0] = "None", e[e.In = 1] = "In", e[e.Out = 2] = "Out", e[e.Both = 3] = "Both"
            }(mG || (mG = {})),
            function (e) {
                e[e.Default = 0] = "Default", e[e.Clamp = 1] = "Clamp", e[e.Once = 1] = "Once", e[e.Loop = 2] = "Loop", e[e.PingPong = 4] = "PingPong", e[e.ClampForever = 8] = "ClampForever"
            }(hG || (hG = {}));
        var pG = {
            time: 0,
            value: 0,
            inTangent: 0,
            outTangent: 0,
            inWeight: 0,
            outWeight: 0,
            weightedMode: mG.None
        };
        X.add("game-ui/editor/data-binding/editor-types.ts", {
            get WeightedMode() {
                return mG
            },
            set WeightedMode(e) {
                mG = e
            },
            get WrapMode() {
                return hG
            },
            set WrapMode(e) {
                hG = e
            },
            get defaultKeyframe() {
                return pG
            },
            set defaultKeyframe(e) {
                pG = e
            }
        });
        const fG = {
                data: {
                    curves: [{
                        keys: [],
                        preWrapMode: hG.Default,
                        postWrapMode: hG.Default
                    }],
                    bounds: {
                        min: {
                            x: 0,
                            y: 0
                        },
                        max: {
                            x: 0,
                            y: 0
                        }
                    }
                },
                activeKeyframe: -1,
                draggedKeyframeRef: {
                    current: -1
                },
                activeCurve: 0,
                activeProperty: 0,
                canAddKeyframes: !1,
                smoothenOnMove: !1,
                isDraggingKeyframe: !1,
                selectActiveCurve: () => {},
                deselectKeyframes: () => {},
                selectKeyframe: () => {},
                setDraggedKeyframe: () => {},
                removeKeyframe: () => {},
                setKeyframes: () => {},
                updateKeyframe: async () => -1,
                addKeyframe: async () => -1
            },
            xG = (0, Y.createContext)(fG);
        var vG = e => {
                const {
                    children: t,
                    data: n,
                    canAddKeyframes: s,
                    smoothenOnMove: i,
                    hideControlPoints: a,
                    allowEditingAll: o,
                    parseKeyframe: r,
                    keyframeRenderer: l,
                    onMoveKeyframe: c,
                    onAddKeyframe: u,
                    onRemoveKeyframe: d,
                    onSetKeyframes: m,
                    onSetActiveCurve: h,
                    onSetActiveKeyFrame: g
                } = e, [p, f] = (0, Y.useState)(-1), [x, v] = (0, Y.useState)(!1), [_, b] = (0, Y.useState)(0), T = (0, Y.useRef)(-1), E = (0, Y.useCallback)((e => {
                    T.current = e, v(!0);
                    const t = () => {
                        T.current = -1, document.removeEventListener("mouseup", t), v(!1)
                    };
                    document.addEventListener("mouseup", t)
                }), []), I = (0, Y.useMemo)((() => {
                    const e = n.curves[_]?.keys[0],
                        t = e?.readonly ? 1 : 0,
                        s = (e, n) => {
                            n && _ !== n && b(n), f((t => t === e ? -1 : e)), g?.(_, e - t)
                        };
                    return {
                        selectActiveCurve: (e, t = -1) => {
                            b(e), h?.(e), s(t, e), g?.(e, t)
                        },
                        deselectKeyframes: () => {
                            s(-1)
                        },
                        selectKeyframe: s,
                        addKeyframe: async (s, i, a) => {
                            if (!u) throw "onAddKeyframe not provided";
                            if (n.curves[a]) {
                                const n = await u(s, i, a) + (s > e?.time ? t : 0);
                                return f(n), g?.(_, n), n
                            }
                            return -1
                        },
                        updateKeyframe: async (n, s, i, a) => {
                            if (!c) throw "onMoveKeyframe not provided";
                            const o = Math.max(0, n - t),
                                r = await c(o, s, i, a) + (s.time > e?.time ? t : 0);
                            return f((e => -1 === e ? -1 : r)), r
                        },
                        removeKeyframe: (e, n) => {
                            if (!d) throw "onRemoveKeyframe not provided";
                            const i = Math.max(0, e - t);
                            d(i, n), s(-1)
                        },
                        setKeyframes: async (e, t) => {
                            if (!m) throw "onSetKeyframes not provided";
                            await m(e, t), s(-1)
                        }
                    }
                }), [_, n.curves, u, c, d, h, g, m]);
                (0, Y.useEffect)((() => {
                    const e = n.curves[_]?.keys.length - 1 || -1;
                    p > e && f(e)
                }), [_, p, n.curves]);
                const y = (0, Y.useMemo)((() => ({
                    data: n,
                    activeKeyframe: p,
                    draggedKeyframeRef: T,
                    activeCurve: _,
                    canAddKeyframes: s,
                    smoothenOnMove: i,
                    hideControlPoints: a,
                    allowEditingAll: o,
                    parseKeyframe: r,
                    keyframeRenderer: l,
                    setDraggedKeyframe: E,
                    isDraggingKeyframe: x,
                    ...I
                })), [n, p, _, s, i, a, o, r, l, E, x, I]);
                return (0, z.jsx)(xG.Provider, {
                    value: y,
                    children: t
                })
            },
            _G = () => (0, Y.useContext)(xG);
        X.add("game-ui/editor/widgets/fields/animation-curve-field/utils/animation-curve-editor-context.tsx", {
            get AnimationCurveEditorProvider() {
                return vG
            },
            set AnimationCurveEditorProvider(e) {
                vG = e
            },
            get useAnimationCurveEditor() {
                return _G
            },
            set useAnimationCurveEditor(e) {
                _G = e
            }
        });
        var bG = (e, t, n, s, i) => {
            const a = e.offset.x + t,
                o = e.offset.y + (e.inverted ? e.size.height - n : n);
            return {
                x: a,
                y: o,
                width: s,
                height: i,
                left: a,
                top: o,
                right: s > 0 ? a + s : a,
                bottom: i > 0 ? o + i : o
            }
        };
        X.add("game-ui/common/svg/utils/get-svg-bounding-rect.ts", {
            get getSVGBoundingRect() {
                return bG
            },
            set getSVGBoundingRect(e) {
                bG = e
            }
        });
        var TG = (0, Y.forwardRef)((function (e, t) {
            const {
                cx: n,
                cy: s,
                r: i,
                rh: a,
                collisionThreshold: o = 0,
                fill: r,
                fillh: l,
                stroke: c,
                strokeh: u,
                strokeWidth: d,
                onSelect: m,
                focused: h,
                selected: g,
                className: p,
                ...f
            } = e, {
                viewport: x
            } = VF(), {
                posFromPoint: v,
                rem: _
            } = x, [b, T] = (0, Y.useState)(!1), E = v(n, s), I = _(b && a ? a : i), y = _(d || 1), j = _(o) + y / 2, S = y / 2 + j + I;
            (0, Y.useEffect)((() => {
                t && "current" in t && t.current && (t.current.getBoundingClientRect = () => bG(x, E.x - S / 2, E.y - S / 2, S, S))
            }), [S, t, E.x, E.y, x]);
            const C = (0, Y.useCallback)((e => Math.sqrt(Math.pow(e.x - E.x, 2) + Math.pow(e.y - E.y, 2)) < I + j), [E.x, E.y, I, j]);
            return KF(e, C, T), (0, z.jsx)("circle", {
                ref: t,
                cx: E.x,
                cy: E.y,
                r: I,
                fill: b && l ? l : r,
                stroke: b && u ? u : c,
                strokeWidth: y,
                className: Zu()({
                    hovered: b
                }, p),
                ...f
            }, "circle")
        }));
        X.add("game-ui/common/svg/elements/circle.tsx", {
            get Circle() {
                return TG
            },
            set Circle(e) {
                TG = e
            }
        });
        var EG = ({
            x1: e,
            y1: t,
            x2: n,
            y2: s,
            strokeWidth: i,
            stroke: a,
            strokeh: o,
            collisionThreshold: r,
            ...l
        }) => {
            const {
                viewport: {
                    posFromPoint: c,
                    rem: u
                }
            } = VF(), [d, m] = (0, Y.useState)(!1), h = c(e, t), g = c(n, s), p = u(i || 1), f = u(r || 5) + p / 2, x = (0, Y.useCallback)((e => ((e, t, n) => {
                const s = e.x - t.x,
                    i = e.y - t.y,
                    a = n.x - t.x,
                    o = n.y - t.y,
                    r = a * a + o * o,
                    l = 0 !== r ? (s * a + i * o) / r : -1;
                let c, u;
                l < 0 ? (c = t.x, u = t.y) : l > 1 ? (c = n.x, u = n.y) : (c = t.x + l * a, u = t.y + l * o);
                const d = e.x - c,
                    m = e.y - u;
                return Math.sqrt(d * d + m * m)
            })(e, h, g) < f), [f, h, g]);
            return KF(l, x, m), (0, z.jsx)("line", {
                x1: h.x,
                y1: h.y,
                x2: g.x,
                y2: g.y,
                strokeWidth: p,
                stroke: d ? o ?? a : a,
                ...l
            })
        };
        X.add("game-ui/common/svg/elements/line.tsx", {
            get Line() {
                return EG
            },
            set Line(e) {
                EG = e
            }
        });
        var IG = (0, Y.forwardRef)((function (e, t) {
            const {
                x: n,
                y: s,
                width: i,
                height: a,
                widthh: o,
                heighth: r,
                collisionThreshold: l = 0,
                origin: c,
                fill: u,
                fillh: d,
                stroke: m,
                strokeh: h,
                strokeWidth: g,
                onSelect: p,
                focused: f,
                selected: x,
                className: v,
                transform: _,
                ...b
            } = e, {
                viewport: T
            } = VF(), {
                posFromPoint: E,
                rem: I
            } = T, [y, j] = (0, Y.useState)(!1);
            let S = E(n, s);
            const C = I(y && o ? o : i),
                N = I(y && r ? r : a);
            "center" === c && (S = {
                x: S.x - C / 2,
                y: S.y - N / 2
            });
            const w = I(g || 1),
                O = I(l) + w / 2,
                P = (0, Y.useCallback)((e => {
                    let t;
                    return t = "center" !== c ? {
                        x: (2 * S.x + C) / 2,
                        y: (2 * S.y + N) / 2
                    } : S, Math.abs(e.x - t.x) <= C / 2 + O && Math.abs(e.y - t.y) <= N / 2 + O
                }), [c, C, O, N, S]);
            (0, Y.useEffect)((() => {
                t && "current" in t && t.current && (t.current.getBoundingClientRect = () => bG(T, S.x - O / 2, S.y - O / 2, C + O / 2, N + O / 2))
            }), [O, N, t, T, S.x, S.y, C]), KF(e, P, j);
            const L = _?.replace(/rotate\((\d+)\)/, `rotate($1 ${S.x+C/2} ${S.y+N/2})`);
            return (0, z.jsx)("rect", {
                ref: t,
                x: S.x,
                y: S.y,
                width: C,
                height: N,
                fill: y && d ? d : u,
                stroke: y && h ? h : m,
                strokeWidth: w,
                className: Zu()({
                    hovered: y
                }, v),
                transform: L,
                ...b
            })
        }));
        X.add("game-ui/common/svg/elements/rect.tsx", {
            get Rect() {
                return IG
            },
            set Rect(e) {
                IG = e
            }
        }), X.add("game-ui/common/svg/elements/index.ts", {});
        var yG = ({
            keyframe: e,
            index: t,
            pos: n,
            type: s,
            isFocused: i
        }) => {
            const {
                activeCurve: a,
                updateKeyframe: o
            } = _G(), {
                viewport: {
                    rem: r,
                    scaleToViewport: l,
                    scaleToPoint: c,
                    posFromPoint: u,
                    pointFromPos: d
                }
            } = VF(), m = (0, Y.useMemo)((() => {
                const t = {
                        x: n.x - e.time,
                        y: n.y - e.value
                    },
                    i = l(t),
                    a = Math.sqrt(i.x * i.x + i.y * i.y),
                    o = i.x < 0 ? -1 : 1,
                    u = i.x / a,
                    d = isFinite(n.y) ? i.y / a : Math.sign(n.y) * o,
                    m = e["in" === s ? "inWeight" : "outWeight"] || .01,
                    h = r(Pd(15, 75, m)),
                    g = c(u * h, d * h);
                return {
                    x: e.time + g.x,
                    y: e.value + g.y
                }
            }), [n.x, n.y, e, l, s, r, c]), h = (0, Y.useCallback)((({
                point: n,
                position: i,
                shiftKey: r
            }) => {
                const l = e.time,
                    c = e.value;
                let d = n.x - l;
                const m = n.y - c,
                    h = Od(Kd(Gd(i, u(l, c))), 15, 75);
                if (h < 15) return;
                const g = Math.max((h - 15) / 60, .01);
                let p, f, x;
                var v, _;
                "in" === s ? (p = "inTangent", f = "inWeight", d > 0 && (d = 0)) : (p = "outTangent", f = "outWeight", d < 0 && (d = 0)), v = d, _ = 0, x = Math.abs(_ - v) < Math.max(1e-6 * Math.max(Math.abs(v), Math.abs(_)), 8 * Number.EPSILON) ? n.y > c ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY : m / d, o(t, r ? {
                    ...e,
                    inTangent: x,
                    outTangent: x,
                    inWeight: g,
                    outWeight: g
                } : {
                    ...e,
                    [p]: x,
                    [f]: g
                }, !1, a)
            }), [a, t, e, u, s, o]), g = Dm();
            return jT((0, Y.useCallback)((async () => {
                const e = await oj(),
                    t = u(m),
                    n = {
                        x: t.x + 100 * e[0],
                        y: t.y + 100 * e[1]
                    };
                h({
                    point: d(n),
                    position: n
                })
            }), [m, h, d, u]), g && i), (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)(EG, {
                    strokeWidth: .5,
                    x1: e.time,
                    y1: e.value,
                    x2: m.x,
                    y2: m.y,
                    className: oG.animationCurveControlPointArm
                }), (0, z.jsx)(IG, {
                    origin: "center",
                    x: m.x,
                    y: m.y,
                    width: i ? 8 : 4,
                    height: i ? 8 : 4,
                    collisionThreshold: 10,
                    onDrag: h,
                    className: oG.animationCurveControlPointHandle
                })]
            })
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframe-control-point.tsx", {
            get KeyframeControlPoint() {
                return yG
            },
            set KeyframeControlPoint(e) {
                yG = e
            }
        });
        var jG = ({
            index: e,
            data: t,
            keyframes: n,
            editTarget: s,
            curve: i
        }) => {
            const a = (0, Y.useMemo)((() => ((e, t) => {
                    let n, s;
                    if (t.length < 2) return {};
                    const i = t[e],
                        a = i.time,
                        o = i.value;
                    if (a < t[t.length - 1].time) {
                        const n = t[e + 1].time,
                            r = eG(a, n, a, i.outWeight || .1);
                        s = {
                            x: r,
                            y: eG(o, r, a, i.outTangent)
                        }
                    }
                    if (a > 0) {
                        const s = t[e - 1].time,
                            r = eG(a, s, a, 1 - i.inWeight || .1);
                        n = {
                            x: r,
                            y: eG(o, r, a, i.inTangent)
                        }
                    }
                    return {
                        in: n,
                        out: s
                    }
                })(e, n)), [e, n]),
                o = Dm(),
                r = n[0].readonly ? 1 : 0,
                l = n[n.length - 1].readonly ? 2 : 1;
            return (0, z.jsxs)(z.Fragment, {
                children: [a.in && t.inWeight >= 0 && (e > r || i.preWrapMode !== hG.Clamp && i.preWrapMode !== hG.ClampForever) && (0, z.jsx)(yG, {
                    index: e,
                    keyframe: t,
                    type: "in",
                    pos: a.in,
                    isFocused: o && s === PG.LeftTangent
                }), a.out && t.outWeight >= 0 && (e < n.length - l || i.postWrapMode !== hG.Clamp && i.postWrapMode !== hG.ClampForever) && (0, z.jsx)(yG, {
                    index: e,
                    keyframe: t,
                    type: "out",
                    pos: a.out,
                    isFocused: o && s === PG.RightTangent
                })]
            })
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframe-control-points.tsx", {
            get KeyframeControlPoints() {
                return jG
            },
            set KeyframeControlPoints(e) {
                jG = e
            }
        });
        var SG = e => {
            const {
                data: t,
                keyframes: n,
                isActive: s,
                index: i,
                curveIndex: a = 0,
                curve: o,
                onSelect: r,
                onDragStart: l,
                keyframeRenderer: c,
                editTarget: u,
                isFocused: d,
                onControllerDrag: m,
                controllerDragCallback: h
            } = e, g = (0, Y.useRef)(t), p = VF();
            g.current = t;
            const f = (0, Y.useCallback)((() => {
                    t.readonly || r?.(i, a)
                }), [t.readonly, r, i, a]),
                x = (0, Y.useCallback)(((e, t) => {
                    t && l?.(i)
                }), [i, l]),
                v = Dm();
            return jT((0, Y.useCallback)((async () => {
                if (m && h) {
                    const e = await h(),
                        n = {
                            x: t.time,
                            y: t.value
                        },
                        s = p.viewport.posFromPoint(n),
                        a = {
                            x: s.x + 100 * e.x,
                            y: s.y + 100 * e.y
                        };
                    m(p.viewport.pointFromPos(a), i)
                }
            }), [h, t.time, t.value, i, m, p.viewport]), v && h && m && s && u === PG.Keyframe), t.readonly ? null : (0, z.jsx)("g", {
                className: Zu()(oG.animationCurveKeyframe, {
                    active: s
                }),
                children: c ? c(e, f, x) : (0, z.jsxs)(z.Fragment, {
                    children: [s && (0, z.jsx)(jG, {
                        data: t,
                        index: i,
                        curve: o,
                        keyframes: n,
                        editTarget: u
                    }), (0, z.jsx)(TG, {
                        cx: t.time,
                        cy: t.value,
                        r: CG(s, d, v),
                        rh: 3.5,
                        onSelect: f,
                        onMouseDown: x,
                        collisionThreshold: 12
                    })]
                })
            })
        };
        const CG = (e, t, n) => n && e ? 4.5 : !n && e || n && t ? 3.5 : 2.5;
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframe.tsx", {
            get Keyframe() {
                return SG
            },
            set Keyframe(e) {
                SG = e
            }
        });
        var NG = e => {
            const {
                data: t,
                activeKeyframe: n,
                activeCurve: s,
                parseKeyframe: i,
                setDraggedKeyframe: a,
                selectKeyframe: o,
                keyframeRenderer: r
            } = _G(), {
                curveIndex: l,
                focusedKeyframe: c,
                editTarget: u,
                onControllerDrag: d,
                controllerDragCallback: m
            } = e, h = t.curves[l]?.keys;
            return (0, z.jsx)("g", {
                children: t.curves.map(((e, t) => (0, z.jsx)("g", {
                    className: oG.animationCurveKeyframes,
                    children: l === t && !!e.keys?.length && e.keys.map(((g, p) => (0, z.jsx)(SG, {
                        data: g,
                        index: p,
                        curveIndex: l,
                        curve: e,
                        keyframes: h,
                        isActive: n === p && s === t,
                        isFocused: c === p && s === t,
                        editTarget: u,
                        onSelect: o,
                        onDragStart: a,
                        parseKeyframe: i,
                        keyframeRenderer: r,
                        onControllerDrag: d,
                        controllerDragCallback: m
                    }, g.time)))
                }, t)))
            })
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/components/keyframes.tsx", {
            get Keyframes() {
                return NG
            },
            set Keyframes(e) {
                NG = e
            }
        });
        const wG = e => (0, z.jsx)(gG, {
                keyframe: e
            }),
            OG = e => (0, z.jsx)(Gc, {
                value: e,
                unit: Oc.FloatTwoFractions
            });
        var PG;
        ! function (e) {
            e[e.None = 0] = "None", e[e.LeftTangent = 1] = "LeftTangent", e[e.Keyframe = 2] = "Keyframe", e[e.RightTangent = 3] = "RightTangent"
        }(PG || (PG = {}));
        var LG = ({
            children: e,
            style: t,
            zoomable: n,
            panable: s,
            padding: i,
            className: a,
            gridLines: o = !0,
            drawPaths: r = !0,
            showTooltipOnDrag: l = !1,
            tooltipKeyframe: c,
            textScale: u = 1,
            formatTooltip: d = wG,
            formatLabelX: m = OG,
            formatLabelY: h = OG,
            onClick: g,
            onMouseDown: p,
            onWindowMouseMove: f,
            keyframeMoveCallback: x,
            zoomCallback: v,
            panCallback: _,
            OnFocusChange: b,
            focusKey: T
        }) => {
            const {
                data: E,
                canAddKeyframes: I,
                activeKeyframe: y,
                selectKeyframe: j,
                activeCurve: S,
                allowEditingAll: C,
                addKeyframe: N,
                removeKeyframe: w,
                deselectKeyframes: O,
                updateKeyframe: P,
                isDraggingKeyframe: L,
                draggedKeyframeRef: A,
                setDraggedKeyframe: M,
                parseKeyframe: R,
                smoothenOnMove: k
            } = _G(), D = (0, Y.useRef)(null), F = (0, Y.useCallback)((({
                point: {
                    x: e,
                    y: t
                }
            }) => {
                N(e, t, S)
            }), [S, N]), U = (0, Y.useCallback)((e => {
                g?.(e), O()
            }), [O, g]), B = (0, Y.useCallback)((async (e, t, n = !1) => {
                if (t > -1) {
                    const s = E.curves[S].keys,
                        i = s[t],
                        a = {
                            ...i,
                            time: e.x,
                            value: e.y
                        },
                        o = R ? R(i, a, t, s, S) : a,
                        r = await P(t, o, !!k, S);
                    n && M(r)
                }
            }), [S, E.curves, R, M, k, P]), G = (0, Y.useCallback)((e => {
                f?.(e), B(e.point, A.current, !0)
            }), [A, B, f]);
            (0, Y.useEffect)((() => {
                if (-1 !== y) {
                    const e = e => {
                        "Backspace" !== e.code && "Delete" !== e.code || w(y, S)
                    };
                    return document.addEventListener("keydown", e), () => {
                        document.removeEventListener("keydown", e)
                    }
                }
            }), [S, y, N, w]), (0, Y.useEffect)((() => {
                const e = e => {
                    e.target?.parentNode !== D.current && O()
                };
                return document.body.addEventListener("click", e), () => {
                    document.body.removeEventListener("click", e)
                }
            }), [O]);
            const V = c || (L ? E.curves[S]?.keys[A.current] : void 0),
                H = V ? d(V) : void 0,
                K = (0, Y.useMemo)((() => S >= 0 && S < E.curves.length ? E.curves[S].keys.findIndex((e => !e.readonly)) : -1), [S, E.curves]),
                [W, $] = (0, Y.useState)(-1),
                [q, X] = (0, Y.useState)(PG.Keyframe),
                [Q, Z] = (0, Y.useState)(!1),
                J = (0, Y.useCallback)((e => {
                    if (Z(e), b && b(e), e && S >= 0 && S < E.curves.length && K >= 0) {
                        const e = E.curves[S];
                        y >= 0 && y < e.keys.length && !e.keys[y].readonly ? $(y) : (W < 0 || W >= e.keys.length || e.keys[W].readonly) && $(K)
                    }
                }), [b, S, y, E.curves, K, W]),
                ee = (0, Y.useMemo)((() => ({
                    "Move Horizontal": S >= 0 && S < E.curves.length && E.curves[S].keys.length > 1 ? e => {
                        if (S >= 0 && S < E.curves.length) {
                            const t = E.curves[S];
                            if (y >= 0) {
                                const n = y > 0 && !t.keys[y - 1].readonly,
                                    s = y < t.keys.length - 1 && !t.keys[y + 1].readonly,
                                    i = Od(q + Math.sign(e), n ? PG.LeftTangent : PG.Keyframe, s ? PG.RightTangent : PG.Keyframe);
                                if (i !== q) return X(i), !0
                            } else {
                                const n = t.keys.findIndex((e => !e.readonly)),
                                    s = t.keys.length - Array.from(t.keys).reverse().findIndex((e => !e.readonly)) - 1;
                                if (n >= 0 && s >= 0 && s >= n) {
                                    const t = Od(W + Math.sign(e), n, s);
                                    if (t !== W && !E.curves[S].keys[t].readonly) return $(t), !0
                                }
                            }
                        }
                        return !1
                    } : null,
                    Back: () => S >= 0 && S < E.curves.length && y >= 0 && y < E.curves[S].keys.length && (O(), !0),
                    Select: () => {
                        j(W, S), X(PG.Keyframe)
                    }
                })), [S, y, E.curves, O, q, W, j]);
            return (0, z.jsx)(Ag, {
                actions: ee,
                children: (0, z.jsxs)(BD, {
                    className: Zu()(oG.column, oG.editorItem, a),
                    focusKey: T,
                    onFocusChange: J,
                    children: [(0, z.jsx)(ZB, {
                        disabled: !l,
                        alwaysVisible: !0,
                        screenSpacePosition: !0,
                        tooltip: H
                    }), (0, z.jsx)("div", {
                        className: Zu()(oG.editor, {
                            [oG.multipleCurves]: E.curves.length > 1
                        }),
                        ref: D,
                        children: (0, z.jsxs)(oU, {
                            bounds: E.bounds,
                            padding: i || 12,
                            onDoubleClick: I ? F : void 0,
                            onClick: U,
                            onMouseDown: p,
                            onWindowMouseMove: G,
                            style: t,
                            zoomable: n,
                            panable: s,
                            zoomCallback: Q ? v : void 0,
                            panCallback: Q ? _ : void 0,
                            children: [o && (0, z.jsx)(YB, {
                                overdraw: !0,
                                halfSteps: !0
                            }), r && (0, z.jsx)("g", {
                                children: E.curves.filter((e => !e.hidePath)).map(((e, t) => "number" == typeof e.deviationFrom ? (0, z.jsx)(rG, {
                                    keys: e.keys,
                                    base: E.curves[e.deviationFrom].keys,
                                    color: e.color,
                                    className: Zu()({
                                        active: E.curves.length > 1 && t === S
                                    })
                                }, t) : (0, z.jsx)(lG, {
                                    keys: e.keys,
                                    color: e.color,
                                    className: Zu()({
                                        active: E.curves.length > 1 && t === S
                                    })
                                }, t)))
                            }), (S >= 0 || C) && (0, z.jsx)(NG, {
                                curveIndex: S,
                                focusedKeyframe: Q ? W : -1,
                                editTarget: Q ? q : PG.None,
                                onControllerDrag: B,
                                controllerDragCallback: x
                            }), e, (0, z.jsx)(zB, {
                                fixed: !0,
                                textScale: u,
                                formatLabelX: m,
                                formatLabelY: h
                            })]
                        })
                    })]
                })
            })
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-editor.tsx", {
            get KeyframeEditTarget() {
                return PG
            },
            set KeyframeEditTarget(e) {
                PG = e
            },
            get AnimationCurveEditor() {
                return LG
            },
            set AnimationCurveEditor(e) {
                LG = e
            }
        });
        let AG = {
            button: "button_UQQ"
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-editor-preview.module.scss", {
            get classes() {
                return AG
            },
            set classes(e) {
                Object.assign(AG, e)
            }
        });
        const MG = AG,
            RG = {
                x: 0,
                y: 2
            };
        var kG = ({
            data: e,
            onSelect: t,
            className: n
        }) => {
            const s = (0, Y.useRef)(null);
            return (0, z.jsx)(Gp, {
                ref: s,
                theme: MG,
                onSelect: t,
                className: FD.dropdownToggle,
                children: (0, z.jsx)(oU, {
                    className: n,
                    bounds: e.bounds,
                    padding: RG,
                    children: e.curves.map(((e, t) => (0, z.jsx)(lG, {
                        keys: e.keys,
                        className: oG.animationCurvePreviewPath
                    }, t)))
                })
            })
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-editor-preview.tsx", {
            get AnimationCurvePreview() {
                return kG
            },
            set AnimationCurvePreview(e) {
                kG = e
            }
        });
        var DG = ({
                parent: e,
                path: t,
                props: n,
                children: s
            }) => {
                const i = HA(e, t),
                    a = (0, Y.useContext)(JA);
                return (0, z.jsx)(UG, {
                    label: (0, z.jsx)(gu, {
                        value: n.displayName
                    }),
                    children: (0, z.jsx)(ZA, {
                        parent: i,
                        components: a,
                        data: s
                    })
                })
            },
            FG = ({
                parent: e,
                path: t,
                props: n,
                children: s
            }) => {
                const i = HA(e, t),
                    a = (0, Y.useContext)(JA),
                    o = xA(CA, i);
                return (0, z.jsx)(BG, {
                    label: (0, z.jsx)(gu, {
                        value: n.displayName
                    }),
                    expanded: n.expanded,
                    onExpandedChange: o,
                    children: (0, z.jsx)(ZA, {
                        parent: i,
                        components: a,
                        data: s
                    })
                })
            },
            UG = ({
                label: e,
                children: t
            }) => (0, z.jsxs)(UD, {
                children: [(0, z.jsx)("div", {
                    className: FD.row,
                    children: (0, z.jsx)("div", {
                        className: FD.label,
                        children: e
                    })
                }), (0, z.jsx)("div", {
                    className: FD.groupChildren,
                    children: t
                })]
            }),
            BG = ({
                label: e,
                expanded: t,
                tooltip: n,
                children: s,
                onExpandedChange: i
            }) => (0, z.jsx)(GD, {
                label: e,
                expanded: t,
                onExpandedChange: i,
                tooltip: n,
                children: (0, z.jsx)("div", {
                    className: FD.groupChildren,
                    children: s
                })
            });
        X.add("game-ui/editor/widgets/group/editor-group.tsx", {
            get BoundGroup() {
                return DG
            },
            set BoundGroup(e) {
                DG = e
            },
            get BoundExpandableGroup() {
                return FG
            },
            set BoundExpandableGroup(e) {
                FG = e
            },
            get EditorGroup() {
                return UG
            },
            set EditorGroup(e) {
                UG = e
            },
            get ExpandableEditorGroup() {
                return BG
            },
            set ExpandableEditorGroup(e) {
                BG = e
            }
        });
        let GG = {
            "draggable-value": "draggable-value_l2t",
            draggableValue: "draggable-value_l2t",
            "draggable-value-cursor": "draggable-value-cursor_v5P",
            draggableValueCursor: "draggable-value-cursor_v5P",
            dragging: "dragging_d8v"
        };
        X.add("game-ui/common/input/draggable-value/draggable-value.module.scss", {
            get classes() {
                return GG
            },
            set classes(e) {
                Object.assign(GG, e)
            }
        });
        const VG = GG;

        function HG(e, t) {
            const {
                value: n,
                disabled: s,
                className: i,
                dragTransformation: a,
                onChange: o,
                onDragStart: r,
                onDragEnd: l,
                children: c
            } = e, u = (0, Y.useRef)(null), d = (0, Y.useCallback)((({
                clientX: e
            }) => !s && (document.activeElement instanceof HTMLElement && document.activeElement.blur(), u.current = {
                clientX: e,
                value: n
            }, r && r(), !0)), [s, n, r]), m = (0, Y.useCallback)((({
                clientX: e
            }) => {
                if (s || null == u.current) return;
                const t = (e - u.current.clientX) / window.innerWidth;
                o && o(a(u.current.value, t))
            }), [s, a, o]), h = (0, Y.useCallback)((() => {
                l && l()
            }), [l]), [g, p] = uf(d, m, h);
            return ev(g && !s ? VG.draggableValueCursor : void 0), (0, z.jsx)("div", {
                ref: t,
                className: Zu()({
                    [VG.draggableValue]: !s,
                    [VG.dragging]: g
                }, i),
                onMouseDown: p,
                children: c
            })
        }
        var KG = (0, Y.forwardRef)(HG);

        function WG({
            value: e,
            valueFormatter: t,
            inputValidator: n,
            inputTransformer: s = zG,
            inputParser: i,
            onChange: a,
            onFocus: o,
            onBlur: r,
            ...l
        }) {
            const [c, u] = (0, Y.useState)(null), [d, m] = (0, Y.useState)(!1), h = (0, Y.useMemo)((() => t(e)), [e, t]), g = Dm(), p = (0, Y.useCallback)((e => {
                const t = s(e.target.value || "");
                if (n(t)) {
                    const e = c;
                    if (u(t), a) {
                        const n = null !== e ? i(e) : void 0,
                            s = null !== t ? i(t) : void 0;
                        if (void 0 !== s && s !== n) return a(s)
                    }
                }
            }), [i, s, n, c, a]), f = (0, Y.useCallback)((n => {
                m(!0), u(t(e)), o && o(n)
            }), [o, e, t]), x = (0, Y.useCallback)((e => {
                m(!1), u(null), r && r(e)
            }), [r]);
            return (0, Y.useEffect)((() => {
                !g && d || u(t(e))
            }), [g, d, e, t]), (0, z.jsx)(UE, {
                ...l,
                value: c ?? h,
                onChange: p,
                onFocus: f,
                onBlur: x
            })
        }

        function zG(e) {
            return e
        }
        X.add("game-ui/common/input/draggable-value/draggable-value.tsx", {
            get DraggableValue() {
                return KG
            },
            set DraggableValue(e) {
                KG = e
            }
        }), X.add("game-ui/common/input/text/data-input.tsx", {
            get DataInput() {
                return WG
            },
            set DataInput(e) {
                WG = e
            }
        });
        var YG = ({
            min: e = Ed,
            max: t = Id,
            fractionDigits: n = 3,
            ...s
        }) => {
            const i = (0, Y.useCallback)((n => function (e, t, n) {
                    if ("-" === e || "." === e) return;
                    if ("" === e) return t <= 0 && n >= 0 ? 0 : void 0;
                    const s = parseFloat(e);
                    return isNaN(s) ? void 0 : Od(s, t, n)
                }(n, e, t)), [e, t]),
                a = (0, Y.useCallback)((e => e.toFixed(n)), [n]);
            return (0, z.jsx)(WG, {
                ...s,
                valueFormatter: a,
                inputParser: i,
                inputValidator: e < 0 ? $G : qG
            })
        };

        function $G(e) {
            return /^-?[0-9]*\.?[0-9]*$/.test(e)
        }

        function qG(e) {
            return /^[0-9]*\.?[0-9]*$/.test(e)
        }
        X.add("game-ui/common/input/text/float-input.tsx", {
            get FloatInput() {
                return YG
            },
            set FloatInput(e) {
                YG = e
            }
        });
        var XG = e => (0, z.jsx)(QG, {
                ...e
            }),
            QG = ({
                disabled: e,
                value: t,
                onChange: n,
                label: s,
                min: i = Ed,
                max: a = Id,
                fractionDigits: o = 3,
                onChangeStart: r,
                onChangeEnd: l,
                tooltip: c
            }) => {
                const u = nV(i, a);
                return (0, z.jsx)(BD, {
                    disabled: e,
                    children: (0, z.jsx)(Tg, {
                        tooltip: c && (0, z.jsx)(gu, {
                            value: c
                        }),
                        children: (0, z.jsxs)("div", {
                            className: FD.row,
                            children: [(0, z.jsx)(KG, {
                                value: t,
                                disabled: e,
                                className: FD.label,
                                dragTransformation: u,
                                onChange: n,
                                children: s
                            }), (0, z.jsx)("div", {
                                className: FD.control,
                                children: (0, z.jsx)(YG, {
                                    value: t,
                                    min: i,
                                    max: a,
                                    fractionDigits: o,
                                    disabled: e,
                                    className: FD.input,
                                    onChange: n,
                                    onFocus: r,
                                    onBlur: l
                                })
                            })]
                        })
                    })
                })
            },
            ZG = ({
                label: e,
                value: t,
                min: n = yd,
                max: s = jd,
                disabled: i,
                onChange: a,
                ...o
            }) => {
                const r = (0, Y.useCallback)((e => a({
                        ...t,
                        x: e
                    })), [t, a]),
                    l = (0, Y.useCallback)((e => a({
                        ...t,
                        y: e
                    })), [t, a]),
                    c = function (e = yd, t = jd) {
                        return (0, Y.useCallback)(((n, s) => {
                            const i = 30;
                            return {
                                x: Od(n.x + s * i, e.x, t.x),
                                y: Od(n.y + s * i, e.y, t.y)
                            }
                        }), [t, e])
                    }(n, s);
                return (0, z.jsx)(BD, {
                    disabled: i,
                    children: (0, z.jsx)(Tg, {
                        tooltip: o.tooltip && (0, z.jsx)(gu, {
                            value: o.tooltip
                        }),
                        children: (0, z.jsxs)("div", {
                            className: FD.row,
                            children: [(0, z.jsx)(KG, {
                                value: t,
                                disabled: i,
                                className: FD.label,
                                dragTransformation: c,
                                onChange: a,
                                children: e
                            }), (0, z.jsx)("div", {
                                className: FD.control,
                                children: (0, z.jsxs)(tp, {
                                    direction: Rg.Horizontal,
                                    children: [(0, z.jsx)(tV, {
                                        ...o,
                                        label: "X",
                                        value: t.x,
                                        min: n.x,
                                        max: s.x,
                                        disabled: i,
                                        onChange: r
                                    }), (0, z.jsx)(tV, {
                                        ...o,
                                        label: "Y",
                                        value: t.y,
                                        min: n.y,
                                        max: s.y,
                                        disabled: i,
                                        onChange: l
                                    })]
                                })
                            })]
                        })
                    })
                })
            },
            JG = ({
                label: e,
                value: t,
                min: n = Sd,
                max: s = Cd,
                disabled: i,
                onChange: a,
                ...o
            }) => {
                const r = (0, Y.useCallback)((e => a({
                        ...t,
                        x: e
                    })), [t, a]),
                    l = (0, Y.useCallback)((e => a({
                        ...t,
                        y: e
                    })), [t, a]),
                    c = (0, Y.useCallback)((e => a({
                        ...t,
                        z: e
                    })), [t, a]),
                    u = function (e = Sd, t = Cd) {
                        return (0, Y.useCallback)(((n, s) => {
                            const i = 30;
                            return {
                                x: Od(n.x + s * i, e.x, t.x),
                                y: Od(n.y + s * i, e.y, t.y),
                                z: Od(n.z + s * i, e.z, t.z)
                            }
                        }), [t, e])
                    }(n, s);
                return (0, z.jsx)(BD, {
                    disabled: i,
                    children: (0, z.jsx)(Tg, {
                        tooltip: o.tooltip && (0, z.jsx)(gu, {
                            value: o.tooltip
                        }),
                        children: (0, z.jsxs)("div", {
                            className: FD.row,
                            children: [(0, z.jsx)(KG, {
                                value: t,
                                disabled: i,
                                className: FD.label,
                                dragTransformation: u,
                                onChange: a,
                                children: e
                            }), (0, z.jsx)("div", {
                                className: FD.control,
                                children: (0, z.jsxs)(tp, {
                                    direction: Rg.Horizontal,
                                    children: [(0, z.jsx)(tV, {
                                        ...o,
                                        label: "X",
                                        value: t.x,
                                        min: n.x,
                                        max: s.x,
                                        disabled: i,
                                        onChange: r
                                    }), (0, z.jsx)(tV, {
                                        ...o,
                                        label: "Y",
                                        value: t.y,
                                        min: n.y,
                                        max: s.y,
                                        disabled: i,
                                        onChange: l
                                    }), (0, z.jsx)(tV, {
                                        ...o,
                                        label: "Z",
                                        value: t.z,
                                        min: n.z,
                                        max: s.z,
                                        disabled: i,
                                        onChange: c
                                    })]
                                })
                            })]
                        })
                    })
                })
            },
            eV = ({
                label: e,
                value: t,
                min: n = Nd,
                max: s = wd,
                disabled: i,
                onChange: a,
                ...o
            }) => {
                const r = (0, Y.useCallback)((e => a({
                        ...t,
                        x: e
                    })), [t, a]),
                    l = (0, Y.useCallback)((e => a({
                        ...t,
                        y: e
                    })), [t, a]),
                    c = (0, Y.useCallback)((e => a({
                        ...t,
                        z: e
                    })), [t, a]),
                    u = (0, Y.useCallback)((e => a({
                        ...t,
                        w: e
                    })), [t, a]),
                    d = function (e = Nd, t = wd) {
                        return (0, Y.useCallback)(((n, s) => {
                            const i = 30;
                            return {
                                x: Od(n.x + s * i, e.x, t.x),
                                y: Od(n.y + s * i, e.y, t.y),
                                z: Od(n.z + s * i, e.z, t.z),
                                w: Od(n.w + s * i, e.w, t.w)
                            }
                        }), [t, e])
                    }(n, s);
                return (0, z.jsx)(BD, {
                    disabled: i,
                    children: (0, z.jsx)(Tg, {
                        tooltip: o.tooltip && (0, z.jsx)(gu, {
                            value: o.tooltip
                        }),
                        children: (0, z.jsxs)("div", {
                            className: FD.row,
                            children: [(0, z.jsx)(KG, {
                                value: t,
                                disabled: i,
                                className: FD.label,
                                dragTransformation: d,
                                onChange: a,
                                children: e
                            }), (0, z.jsx)("div", {
                                className: FD.control,
                                children: (0, z.jsxs)(tp, {
                                    direction: Rg.Horizontal,
                                    children: [(0, z.jsx)(tV, {
                                        ...o,
                                        label: "X",
                                        value: t.x,
                                        min: n.x,
                                        max: s.x,
                                        disabled: i,
                                        onChange: r
                                    }), (0, z.jsx)(tV, {
                                        ...o,
                                        label: "Y",
                                        value: t.y,
                                        min: n.y,
                                        max: s.y,
                                        disabled: i,
                                        onChange: l
                                    }), (0, z.jsx)(tV, {
                                        ...o,
                                        label: "Z",
                                        value: t.z,
                                        min: n.z,
                                        max: s.z,
                                        disabled: i,
                                        onChange: c
                                    }), (0, z.jsx)(tV, {
                                        ...o,
                                        label: "W",
                                        value: t.z,
                                        min: n.w,
                                        max: s.w,
                                        disabled: i,
                                        onChange: u
                                    })]
                                })
                            })]
                        })
                    })
                })
            };
        const tV = ({
            label: e,
            value: t,
            disabled: n,
            onChange: s,
            onChangeStart: i,
            onChangeEnd: a,
            min: o,
            max: r
        }) => {
            const l = nV(o, r);
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)(KG, {
                    value: t,
                    disabled: n,
                    className: FD.vectorLabel,
                    dragTransformation: l,
                    onChange: s,
                    children: e
                }), (0, z.jsx)(YG, {
                    value: t,
                    disabled: n,
                    onChange: s,
                    onFocus: i,
                    onBlur: a,
                    className: FD.vectorInput,
                    min: o,
                    max: r
                })]
            })
        };

        function nV(e = Ed, t = Id) {
            return (0, Y.useCallback)(((n, s) => function (e, t, n, s) {
                return Od(e + 60 * t, n, s)
            }(n, s, e, t)), [t, e])
        }
        X.add("game-ui/editor/widgets/fields/float-input-field.tsx", {
            get EditorFloatInputField() {
                return XG
            },
            set EditorFloatInputField(e) {
                XG = e
            },
            get FloatInputField() {
                return QG
            },
            set FloatInputField(e) {
                QG = e
            },
            get Float2InputField() {
                return ZG
            },
            set Float2InputField(e) {
                ZG = e
            },
            get Float3InputField() {
                return JG
            },
            set Float3InputField(e) {
                JG = e
            },
            get Float4InputField() {
                return eV
            },
            set Float4InputField(e) {
                eV = e
            }
        });
        var sV = () => {
            const {
                activeKeyframe: e,
                activeCurve: t,
                data: n,
                canAddKeyframes: s,
                parseKeyframe: i,
                updateKeyframe: a,
                removeKeyframe: o
            } = _G(), r = n.curves[t]?.keys[e], l = (0, Y.useMemo)((() => {
                const s = (s, o) => {
                    const l = {
                            ...r,
                            [s]: o
                        },
                        c = i ? i(r, l, e, n.curves[t]?.keys, t) : l;
                    a(e, c, !1, t)
                };
                return {
                    changeTime: e => s("time", e),
                    changeValue: e => s("value", e),
                    changeInTangent: e => s("inTangent", e),
                    changeInWeight: e => s("inWeight", e),
                    changeOutTangent: e => s("outTangent", e),
                    changeOutWeight: e => s("outWeight", e),
                    smoothenTangents: () => a(e, r, !0, t),
                    removeKeyframe: () => o(e, t)
                }
            }), [t, e, n.curves, r, i, o, a]);
            if (!r) return null;
            const c = n.curves[t];
            return (0, z.jsxs)(UG, {
                label: `Keyframe ${e}`,
                children: [(0, z.jsx)(QG, {
                    label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                        hash: "Time"
                    }),
                    value: r.time,
                    onChange: l.changeTime
                }), (0, z.jsx)(QG, {
                    label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                        hash: "Value"
                    }),
                    value: r.value,
                    onChange: l.changeValue
                }), e > 0 && (0, z.jsxs)(UG, {
                    label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                        hash: "In"
                    }),
                    children: [(0, z.jsx)(QG, {
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Tangent"
                        }),
                        value: r.inTangent,
                        onChange: l.changeInTangent
                    }), (0, z.jsx)(QG, {
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Weight"
                        }),
                        value: r.inWeight,
                        min: 0,
                        max: 1,
                        onChange: l.changeInWeight
                    })]
                }), e < c.keys.length - 1 && (0, z.jsxs)(UG, {
                    label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                        hash: "Out"
                    }),
                    children: [(0, z.jsx)(QG, {
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Tangent"
                        }),
                        value: r.outTangent,
                        onChange: l.changeOutTangent
                    }), (0, z.jsx)(QG, {
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Weight"
                        }),
                        value: r.outWeight,
                        min: 0,
                        max: 1,
                        onChange: l.changeOutWeight
                    })]
                }), (0, z.jsx)(UD, {
                    children: (0, z.jsxs)("div", {
                        className: Zu()(oG.row, oG.controls),
                        children: [(0, z.jsx)(Gp, {
                            theme: wD,
                            onSelect: l.smoothenTangents,
                            children: "Smoothen"
                        }), s && (0, z.jsx)(Gp, {
                            disabled: c.keys.length < 3,
                            theme: wD,
                            onSelect: l.removeKeyframe,
                            children: "Delete Keyframe"
                        })]
                    })
                })]
            })
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/keyframe-editor.tsx", {
            get KeyframeEditor() {
                return sV
            },
            set KeyframeEditor(e) {
                sV = e
            }
        });
        const iV = {
            min: {
                x: 0,
                y: 0
            },
            max: {
                x: 1,
                y: 1
            }
        };
        var aV = (e, t) => {
            const n = (0, Y.useRef)(),
                s = (0, Y.useRef)(),
                i = (0, Y.useRef)(),
                a = (0, Y.useRef)(),
                o = (0, Y.useRef)(),
                r = (0, Y.useRef)(),
                {
                    autoUpdateBounds: l,
                    minX: c,
                    maxX: u,
                    minY: d,
                    maxY: m,
                    wrapMode: h,
                    hash: g
                } = t || {};
            return (0, Y.useMemo)((() => {
                const t = Array.isArray(e) ? e : [e],
                    p = t.reduce(((e, t) => t ? {
                        maxKeysCount: Math.max(t.keys.filter((e => !e.readonly)).length, e.maxKeysCount),
                        readOnlyCount: t.keys.reduce(((e, t) => e + Number(!!t.readonly)), 0)
                    } : {
                        maxKeysCount: 0,
                        readOnlyCount: 0
                    }), {
                        maxKeysCount: 0,
                        readOnlyCount: 0
                    });
                let f = iV;
                if (0 === p.maxKeysCount) return f = {
                    min: {
                        x: c ?? 0,
                        y: d ?? 0
                    },
                    max: {
                        x: u ?? 1,
                        y: m ?? 1
                    }
                }, {
                    bounds: f,
                    curves: t
                };
                const x = s.current !== p.maxKeysCount,
                    v = o.current || {},
                    _ = v.minX !== c || v.maxX !== u || v.minY !== d || v.maxY !== m,
                    b = t.length !== a.current,
                    T = r.current !== g;
                if (l || !n.current || x || _ || h !== v?.wrapMode || b || T) {
                    p.maxKeysCount > 0 && (f = {
                        min: {
                            x: c ?? 1 / 0,
                            y: d ?? 1 / 0
                        },
                        max: {
                            x: u ?? -1 / 0,
                            y: m ?? -1 / 0
                        }
                    });
                    const e = "number" == typeof c,
                        n = "number" == typeof u,
                        s = "number" == typeof d,
                        i = "number" == typeof m;
                    t.forEach((t => t.keys.forEach((t => {
                        t.time < f.min.x && (!e || l) && (f.min.x = t.time), t.time > f.max.x && (!n || l) && (f.max.x = t.time), t.value < f.min.y && (!s || l) && (f.min.y = t.value), t.value > f.max.y && (!i || l) && (f.max.y = t.value)
                    })))); {
                        const t = f.max.x - f.min.x;
                        if (t < 1) f.min.x = Math.floor(f.min.x - (1 - t) / 2), f.max.x = Math.ceil(f.min.x + (1 - t) / 2);
                        else if (0 === t) {
                            const t = Math.max(1, Math.pow(10, Math.round(Math.log10(Math.abs(f.min.x)))));
                            e && i || !e && !n ? (f.min.x -= t / 2, f.max.x += t / 2) : e ? f.max.x += t : n && (f.min.x -= t)
                        }
                    } {
                        const e = f.max.y - f.min.y;
                        if (e < 1 && 0 !== e) f.min.y = Math.floor(f.min.y - (1 - e) / 2), f.max.y = Math.ceil(f.min.y + (1 - e) / 2);
                        else if (0 === e) {
                            const e = Math.max(1, Math.pow(10, Math.round(Math.log10(Math.abs(f.min.y)))));
                            s && i || !s && !i ? (f.min.y -= e / 2, f.max.y += e / 2) : s ? f.max.y += e : i && (f.min.y -= e)
                        }
                    }
                } else f = n.current;
                const E = {
                    bounds: tG(n.current, f),
                    curves: t,
                    maxKeysCount: p.maxKeysCount
                };
                return h && sG(h, t, E.bounds), n.current = f, s.current = p.maxKeysCount, i.current = p.readOnlyCount, r.current = g, a.current = t.length, o.current = {
                    maxX: u,
                    minX: c,
                    maxY: m,
                    minY: d,
                    wrapMode: h
                }, E
            }), [e, c, u, d, m, g, l, h])
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/utils/use-animation-curve-data.tsx", {
            get useAnimationCurveData() {
                return aV
            },
            set useAnimationCurveData(e) {
                aV = e
            }
        });
        var oV = ({
            label: e,
            value: t,
            disabled: n,
            hidePreview: s,
            expanded: i,
            initialEditing: a,
            autoUpdateBounds: o,
            bounds: r,
            smoothenOnMove: l,
            canAddKeyframes: c = !0,
            wrapMode: u,
            parseKeyframe: d,
            onAddKeyframe: m,
            onMoveKeyframe: h,
            onRemoveKeyframe: g,
            onSetKeyframes: p
        }) => {
            const f = aV(t, {
                    autoUpdateBounds: !0,
                    ...r
                }),
                x = aV(t, {
                    autoUpdateBounds: o,
                    ...r,
                    wrapMode: u
                }),
                [v, _] = (0, Y.useState)(i || a),
                b = (0, Y.useMemo)((() => {
                    if (!i && !n) return () => _((e => !e))
                }), [i, n]);
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)(BD, {
                    disabled: n,
                    children: (0, z.jsx)(VD, {
                        label: e,
                        onSelect: b,
                        children: !s && (0, z.jsx)(kG, {
                            data: f,
                            onSelect: b
                        })
                    })
                }), (0, z.jsx)(HD, {
                    visible: v,
                    children: (0, z.jsxs)(vG, {
                        data: x,
                        onAddKeyframe: m,
                        onMoveKeyframe: h,
                        onRemoveKeyframe: g,
                        onSetKeyframes: p,
                        parseKeyframe: d,
                        canAddKeyframes: c,
                        smoothenOnMove: l,
                        children: [(0, z.jsx)(LG, {
                            zoomable: !0,
                            panable: !0
                        }), (0, z.jsx)(sV, {})]
                    })
                })]
            })
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-field.tsx", {
            get AnimationCurveField() {
                return oV
            },
            set AnimationCurveField(e) {
                oV = e
            }
        });
        var rV = e => {
            const t = (({
                parent: e,
                path: t
            }) => {
                const n = (0, Y.useMemo)((() => {
                    const n = EA(e.path, t);
                    return {
                        onAddKeyframe: (t, s, i) => kA(e.group, n, t, s, i),
                        onMoveKeyframe: (t, s, i, a) => RA(e.group, n, t, s, i, a),
                        onRemoveKeyframe: (t, s) => DA(e.group, n, t, s),
                        onSetKeyframes: (t, s) => FA(e.group, n, t, s)
                    }
                }), [e.group, e.path, t]);
                return n
            })(e);
            return (0, z.jsx)(oV, {
                ...e.props,
                ...t,
                smoothenOnMove: !1,
                label: (0, z.jsx)(gu, {
                    value: e.props.displayName
                })
            })
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/animation-curve-field.bound.tsx", {
            get BoundAnimationCurveField() {
                return rV
            },
            set BoundAnimationCurveField(e) {
                rV = e
            }
        });
        var lV = ({
            label: e,
            value: t,
            onChange: n,
            ...s
        }) => {
            const i = (0, Y.useCallback)((e => n({
                    ...t,
                    a: e
                })), [n, t]),
                a = (0, Y.useCallback)((e => n({
                    ...t,
                    b: e
                })), [n, t]),
                o = (0, Y.useCallback)((e => n({
                    ...t,
                    c: e
                })), [n, t]),
                r = (0, Y.useCallback)((e => n({
                    ...t,
                    d: e
                })), [n, t]);
            return (0, z.jsxs)(UG, {
                label: e,
                children: [(0, z.jsx)(JG, {
                    ...s,
                    label: "A",
                    value: t.a,
                    onChange: i
                }), (0, z.jsx)(JG, {
                    ...s,
                    label: "B",
                    value: t.b,
                    onChange: a
                }), (0, z.jsx)(JG, {
                    ...s,
                    label: "C",
                    value: t.c,
                    onChange: o
                }), (0, z.jsx)(JG, {
                    ...s,
                    label: "D",
                    value: t.d,
                    onChange: r
                })]
            })
        };
        X.add("game-ui/editor/widgets/fields/bezier4x3-field.tsx", {
            get Bezier4x3Field() {
                return lV
            },
            set Bezier4x3Field(e) {
                lV = e
            }
        });
        var cV = ({
            min: e = _d,
            max: t = bd,
            ...n
        }) => {
            const s = (0, Y.useCallback)((n => function (e, t, n) {
                if ("-" === e) return;
                if ("" === e) return t <= 0 && n >= 0 ? 0 : void 0;
                const s = parseInt(e, 10);
                return isNaN(s) ? void 0 : Od(s, t, n)
            }(n, e, t)), [e, t]);
            return (0, z.jsx)(WG, {
                ...n,
                valueFormatter: uV,
                inputParser: s,
                inputValidator: e < 0 ? dV : mV
            })
        };

        function uV(e) {
            return Math.trunc(e).toString(10)
        }

        function dV(e) {
            return /^-?[0-9]*$/.test(e)
        }

        function mV(e) {
            return /^[0-9]*$/.test(e)
        }
        X.add("game-ui/common/input/text/int-input.tsx", {
            get IntInput() {
                return cV
            },
            set IntInput(e) {
                cV = e
            }
        });
        let hV = {
            slider: "slider_KXG slider_pUS",
            compact: "compact_c2g",
            range: "range_nHO range_iUN",
            thumb: "thumb_kkL"
        };
        X.add("game-ui/editor/themes/editor-slider.module.scss", {
            get classes() {
                return hV
            },
            set classes(e) {
                Object.assign(hV, e)
            }
        });
        const gV = hV;
        var pV = ({
                label: e,
                value: t,
                min: n,
                max: s,
                disabled: i,
                tooltip: a,
                onChange: o,
                onChangeStart: r,
                onChangeEnd: l
            }) => (0, z.jsx)(BD, {
                disabled: i,
                children: (0, z.jsx)(Tg, {
                    tooltip: a && (0, z.jsx)(gu, {
                        value: a
                    }),
                    children: (0, z.jsxs)("div", {
                        className: FD.row,
                        children: [(0, z.jsx)("div", {
                            className: FD.label,
                            children: e
                        }), (0, z.jsx)("div", {
                            className: FD.control,
                            children: (0, z.jsxs)(tp, {
                                direction: Rg.Horizontal,
                                children: [(0, z.jsx)(Ep, {
                                    className: FD.sliderContainer,
                                    children: (0, z.jsx)(Np, {
                                        children: (0, z.jsx)(CM, {
                                            value: t,
                                            start: n,
                                            end: s,
                                            disabled: i,
                                            theme: gV,
                                            className: FD.slider,
                                            valueTransformer: wM,
                                            onChange: o,
                                            onDragStart: r,
                                            onDragEnd: l
                                        })
                                    })
                                }), (0, z.jsx)(cV, {
                                    value: t,
                                    min: n,
                                    max: s,
                                    disabled: i,
                                    onChange: o,
                                    onFocus: r,
                                    onBlur: l,
                                    className: FD.sliderInput
                                })]
                            })
                        })]
                    })
                })
            }),
            fV = e => (0, z.jsx)(pV, {
                ...e,
                updateOnDragEnd: !1
            }),
            xV = ({
                label: e,
                value: t,
                min: n,
                max: s,
                fractionDigits: i = 3,
                disabled: a,
                tooltip: o,
                onChange: r,
                onChangeStart: l,
                onChangeEnd: c
            }) => {
                const u = OM(Math.pow(10, -i));
                return (0, z.jsx)(BD, {
                    disabled: a,
                    children: (0, z.jsx)(Tg, {
                        tooltip: o && (0, z.jsx)(gu, {
                            value: o
                        }),
                        children: (0, z.jsxs)("div", {
                            className: FD.row,
                            children: [(0, z.jsx)("div", {
                                className: FD.label,
                                children: e
                            }), (0, z.jsx)("div", {
                                className: FD.control,
                                children: (0, z.jsxs)(tp, {
                                    direction: Rg.Horizontal,
                                    children: [(0, z.jsx)(Ep, {
                                        className: FD.sliderContainer,
                                        children: (0, z.jsx)(Np, {
                                            children: (0, z.jsx)(CM, {
                                                value: t,
                                                start: n,
                                                end: s,
                                                disabled: a,
                                                theme: gV,
                                                className: FD.slider,
                                                valueTransformer: u,
                                                onChange: r,
                                                onDragStart: l,
                                                onDragEnd: c
                                            })
                                        })
                                    }), (0, z.jsx)(YG, {
                                        value: t,
                                        min: n,
                                        max: s,
                                        fractionDigits: i,
                                        disabled: a,
                                        onChange: r,
                                        onFocus: l,
                                        onBlur: c,
                                        className: FD.sliderInput
                                    })]
                                })
                            })]
                        })
                    })
                })
            };
        X.add("game-ui/editor/widgets/fields/number-slider-field.tsx", {
            get IntSliderField() {
                return pV
            },
            set IntSliderField(e) {
                pV = e
            },
            get UIntSliderField() {
                return fV
            },
            set UIntSliderField(e) {
                fV = e
            },
            get FloatSliderField() {
                return xV
            },
            set FloatSliderField(e) {
                xV = e
            }
        });
        var vV = ({
            min: e = 0,
            max: t = 1439 / 1440,
            ...n
        }) => {
            const s = (0, Y.useCallback)((n => function (e, t, n) {
                if ("-" === e) return;
                if ("" === e) return t <= 0 && n >= 0 ? 0 : void 0;
                const s = /^(-?)(\d+):(\d+)$/g.exec(e);
                if (null != s) {
                    const e = ("-" === s[1] ? -1 : 1) * (60 * parseInt(s[2]) + parseInt(s[3])) / 1440;
                    if (!isNaN(e)) return Od(e, t, n)
                }
                const i = parseInt(e, 10) / 24;
                return isNaN(i) ? void 0 : Od(i, t, n)
            }(n, e, t)), [e, t]);
            return (0, z.jsx)(WG, {
                ...n,
                valueFormatter: _V,
                inputParser: s,
                inputValidator: e < 0 ? bV : TV
            })
        };

        function _V(e) {
            const t = -1 === Math.sign(e) ? "-" : "",
                n = Math.floor(24 * (Math.abs(e) + 1e-5)),
                s = Math.round(1440 * Math.abs(e)) % 60;
            return `${t}${Tu(n,2)}:${Tu(s,2)}`
        }

        function bV(e) {
            return /^-?[0-9]*:?[0-9]*$/.test(e)
        }

        function TV(e) {
            return /^[0-9]*:?[0-9]*$/.test(e)
        }
        X.add("game-ui/common/input/text/time-input.tsx", {
            get TimeInput() {
                return vV
            },
            set TimeInput(e) {
                vV = e
            }
        });
        var EV = ({
            label: e,
            value: t,
            min: n,
            max: s,
            disabled: i,
            tooltip: a,
            onChange: o,
            onChangeStart: r,
            onChangeEnd: l
        }) => (0, z.jsx)(BD, {
            disabled: i,
            children: (0, z.jsx)(Tg, {
                tooltip: a && (0, z.jsx)(gu, {
                    value: a
                }),
                children: (0, z.jsxs)("div", {
                    className: FD.row,
                    children: [(0, z.jsx)("div", {
                        className: FD.label,
                        children: e
                    }), (0, z.jsx)("div", {
                        className: FD.control,
                        children: (0, z.jsxs)(tp, {
                            direction: Rg.Horizontal,
                            children: [(0, z.jsx)(Ep, {
                                className: FD.sliderContainer,
                                children: (0, z.jsx)(Np, {
                                    children: (0, z.jsx)(CM, {
                                        value: t,
                                        start: n,
                                        end: s,
                                        disabled: i,
                                        theme: gV,
                                        className: FD.slider,
                                        valueTransformer: IV,
                                        onChange: o,
                                        onDragStart: r,
                                        onDragEnd: l
                                    })
                                })
                            }), (0, z.jsx)(vV, {
                                value: t,
                                min: n,
                                max: s,
                                disabled: i,
                                onChange: o,
                                onFocus: r,
                                onBlur: l,
                                className: FD.sliderInput
                            })]
                        })
                    })]
                })
            })
        });

        function IV(e, t, n) {
            return Od(Math.round(96 * (e + n * (t - e))) / 96, Math.min(e, t), Math.max(e, t))
        }
        X.add("game-ui/editor/widgets/fields/time-slider-field.tsx", {
            get TimeSliderField() {
                return EV
            },
            set TimeSliderField(e) {
                EV = e
            },
            get quarterHourTransformer() {
                return IV
            },
            set quarterHourTransformer(e) {
                IV = e
            }
        });
        var yV = ({
                label: e,
                value: t,
                allowMinGreaterMax: n,
                onChange: s,
                ...i
            }) => {
                const a = (0, Y.useCallback)((e => s({
                        ...t,
                        min: n ? e : Math.min(e, t.max)
                    })), [s, n, t]),
                    o = (0, Y.useCallback)((e => s({
                        ...t,
                        max: n ? e : Math.max(e, t.min)
                    })), [s, n, t]);
                return (0, z.jsxs)(UG, {
                    label: e,
                    children: [(0, z.jsx)(XG, {
                        ...i,
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Min"
                        }),
                        value: t.min,
                        onChange: a
                    }), (0, z.jsx)(XG, {
                        ...i,
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Max"
                        }),
                        value: t.max,
                        onChange: o
                    })]
                })
            },
            jV = ({
                label: e,
                value: t,
                allowMinGreaterMax: n,
                onChange: s,
                ...i
            }) => {
                const a = (0, Y.useCallback)((e => {
                        s({
                            ...t,
                            min: {
                                x: n ? e.x : Math.min(e.x, t.max.x),
                                y: n ? e.y : Math.min(e.y, t.max.y)
                            }
                        })
                    }), [s, n, t]),
                    o = (0, Y.useCallback)((e => {
                        s({
                            ...t,
                            max: {
                                x: n ? e.x : Math.max(e.x, t.min.x),
                                y: n ? e.y : Math.max(e.y, t.min.y)
                            }
                        })
                    }), [s, n, t]);
                return (0, z.jsxs)(UG, {
                    label: e,
                    children: [(0, z.jsx)(ZG, {
                        ...i,
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Min"
                        }),
                        value: t.min,
                        onChange: a
                    }), (0, z.jsx)(ZG, {
                        ...i,
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Max"
                        }),
                        value: t.max,
                        onChange: o
                    })]
                })
            },
            SV = ({
                label: e,
                value: t,
                allowMinGreaterMax: n,
                onChange: s,
                ...i
            }) => {
                const a = (0, Y.useCallback)((e => {
                        s({
                            ...t,
                            min: {
                                x: n ? e.x : Math.min(e.x, t.max.x),
                                y: n ? e.y : Math.min(e.y, t.max.y),
                                z: n ? e.z : Math.min(e.z, t.max.z)
                            }
                        })
                    }), [s, n, t]),
                    o = (0, Y.useCallback)((e => {
                        s({
                            ...t,
                            max: {
                                x: n ? e.x : Math.max(e.x, t.min.x),
                                y: n ? e.y : Math.max(e.y, t.min.y),
                                z: n ? e.z : Math.max(e.z, t.min.z)
                            }
                        })
                    }), [s, n, t]);
                return (0, z.jsxs)(UG, {
                    label: e,
                    children: [(0, z.jsx)(JG, {
                        ...i,
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Min"
                        }),
                        value: t.min,
                        onChange: a
                    }), (0, z.jsx)(JG, {
                        ...i,
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Max"
                        }),
                        value: t.max,
                        onChange: o
                    })]
                })
            },
            CV = ({
                label: e,
                value: t,
                allowMinGreaterMax: n,
                onChange: s,
                ...i
            }) => {
                const a = (0, Y.useCallback)((e => s({
                        ...t,
                        min: n ? e : Math.min(e, t.max)
                    })), [s, n, t]),
                    o = (0, Y.useCallback)((e => s({
                        ...t,
                        max: n ? e : Math.max(e, t.min)
                    })), [s, n, t]);
                return (0, z.jsxs)(UG, {
                    label: e,
                    children: [(0, z.jsx)(xV, {
                        ...i,
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Min"
                        }),
                        value: t.min,
                        onChange: a,
                        updateOnDragEnd: !1
                    }), (0, z.jsx)(xV, {
                        ...i,
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Max"
                        }),
                        value: t.max,
                        onChange: o,
                        updateOnDragEnd: !1
                    })]
                })
            },
            NV = ({
                label: e,
                value: t,
                allowMinGreaterMax: n,
                onChange: s,
                ...i
            }) => {
                const a = (0, Y.useCallback)((e => s({
                        ...t,
                        min: n ? e : Math.min(e, t.max)
                    })), [n, s, t]),
                    o = (0, Y.useCallback)((e => s({
                        ...t,
                        max: n ? e : Math.max(e, t.min)
                    })), [n, s, t]);
                return (0, z.jsxs)(UG, {
                    label: e,
                    children: [(0, z.jsx)(EV, {
                        ...i,
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Min"
                        }),
                        value: t.min,
                        onChange: a
                    }), (0, z.jsx)(EV, {
                        ...i,
                        label: (0, z.jsx)(Pc.Editor.WIDGETS, {
                            hash: "Max"
                        }),
                        value: t.max,
                        onChange: o
                    })]
                })
            };
        X.add("game-ui/editor/widgets/fields/bounds-field.tsx", {
            get Bounds1InputField() {
                return yV
            },
            set Bounds1InputField(e) {
                yV = e
            },
            get Bounds2InputField() {
                return jV
            },
            set Bounds2InputField(e) {
                jV = e
            },
            get Bounds3InputField() {
                return SV
            },
            set Bounds3InputField(e) {
                SV = e
            },
            get Bounds1SliderField() {
                return CV
            },
            set Bounds1SliderField(e) {
                CV = e
            },
            get TimeBoundsSliderField() {
                return NV
            },
            set TimeBoundsSliderField(e) {
                NV = e
            }
        });
        var wV = e => (0, z.jsx)(WG, {
            ...e,
            valueFormatter: OV,
            inputParser: PV,
            inputTransformer: LV,
            inputValidator: AV
        });

        function OV(e) {
            return YC(e)
        }

        function PV(e) {
            return qC(e) || void 0
        }

        function LV(e) {
            return e.toUpperCase()
        }

        function AV(e) {
            return /^#?([a-f0-9]{0,6})$/i.test(e)
        }
        X.add("game-ui/common/input/text/hex-color-input.tsx", {
            get HexColorInput() {
                return wV
            },
            set HexColorInput(e) {
                wV = e
            }
        });
        var MV = RV();

        function RV({
            s: e,
            v: t
        } = {
            h: 1,
            s: 1,
            v: 1,
            a: 1
        }, n = 36) {
            return UV({
                h: 0,
                s: e,
                v: t,
                a: 1
            }, {
                h: 1,
                s: e,
                v: t,
                a: 1
            }, n)
        }

        function kV({
            h: e,
            v: t
        }) {
            return UV({
                h: e,
                s: 0,
                v: t,
                a: 1
            }, {
                h: e,
                s: 1,
                v: t,
                a: 1
            }, 2)
        }

        function DV({
            h: e,
            s: t
        }) {
            return UV({
                h: e,
                s: t,
                v: 0,
                a: 1
            }, {
                h: e,
                s: t,
                v: 1,
                a: 1
            }, 2)
        }

        function FV({
            h: e,
            s: t,
            v: n
        }) {
            return UV({
                h: e,
                s: t,
                v: n,
                a: 0
            }, {
                h: e,
                s: t,
                v: n,
                a: 1
            }, 2)
        }

        function UV(e, t, n) {
            const s = [];
            for (let i = 0; i <= n; i++) s.push({
                offset: i / n,
                color: WC(XC(JC(e, t, i / n)))
            });
            return {
                stops: s
            }
        }

        function BV(e, t) {
            return {
                stops: [{
                    offset: 0,
                    color: WC(e)
                }, {
                    offset: 1,
                    color: WC(t)
                }]
            }
        }
        X.add("game-ui/common/input/color-picker/color-slider/slider-backgrounds.ts", {
            get hueSliderBackground() {
                return MV
            },
            set hueSliderBackground(e) {
                MV = e
            },
            get buildHueSliderBackground() {
                return RV
            },
            set buildHueSliderBackground(e) {
                RV = e
            },
            get buildSaturationSliderBackground() {
                return kV
            },
            set buildSaturationSliderBackground(e) {
                kV = e
            },
            get buildValueSliderBackground() {
                return DV
            },
            set buildValueSliderBackground(e) {
                DV = e
            },
            get buildAlphaSliderBackground() {
                return FV
            },
            set buildAlphaSliderBackground(e) {
                FV = e
            },
            get buildHsvGradient() {
                return UV
            },
            set buildHsvGradient(e) {
                UV = e
            },
            get buildRgbGradient() {
                return BV
            },
            set buildRgbGradient(e) {
                BV = e
            }
        });
        let GV = {
            edge: "edge_xBb",
            "start-edge": "start-edge_nii edge_xBb",
            startEdge: "start-edge_nii edge_xBb",
            "end-edge": "end-edge_egi edge_xBb",
            endEdge: "end-edge_egi edge_xBb",
            "track-bounds": "track-bounds_hs9 track-bounds_H8_",
            trackBounds: "track-bounds_hs9 track-bounds_H8_"
        };
        X.add("game-ui/common/input/slider/gradient-slider/gradient-slider.module.scss", {
            get classes() {
                return GV
            },
            set classes(e) {
                Object.assign(GV, e)
            }
        });
        const VV = GV;
        var HV = ({
            gradient: e,
            theme: t,
            ...n
        }) => {
            const s = (0, Y.useMemo)((() => ({
                    ...VV,
                    ...t
                })), [t]),
                i = e.stops.find((e => 0 === e.offset)),
                a = i?.color ?? "grey",
                o = e.stops.find((e => 1 === e.offset)),
                r = o?.color ?? "grey",
                l = (0, Y.useMemo)((() => ({
                    "--startColor": "string" == typeof a ? a : WC(a),
                    "--endColor": "string" == typeof r ? r : WC(r),
                    "--gradient": eN(e)
                })), [a, r, e]);
            return (0, z.jsxs)(CM, {
                ...n,
                theme: s,
                style: l,
                children: [(0, z.jsx)("div", {
                    className: s.startEdge
                }), (0, z.jsx)("div", {
                    className: s.endEdge
                })]
            })
        };
        X.add("game-ui/common/input/slider/gradient-slider/gradient-slider.tsx", {
            get GradientSlider() {
                return HV
            },
            set GradientSlider(e) {
                HV = e
            }
        });
        let KV = {
            slider: "slider_fer slider_pUS",
            "gamepad-active": "gamepad-active_Elg",
            gamepadActive: "gamepad-active_Elg",
            thumb: "thumb_z1a"
        };
        X.add("game-ui/common/input/color-picker/color-slider/color-slider.module.scss", {
            get classes() {
                return KV
            },
            set classes(e) {
                Object.assign(KV, e)
            }
        });
        const WV = KV;
        let zV = {
            "color-component-input": "color-component-input_WeK",
            colorComponentInput: "color-component-input_WeK",
            label: "label_GH4",
            "slider-container": "slider-container_NuQ",
            sliderContainer: "slider-container_NuQ",
            slider: "slider_xgT",
            alpha: "alpha_N_s",
            input: "input_zfe"
        };
        X.add("game-ui/common/input/color-picker/component-input/component-input.module.scss", {
            get classes() {
                return zV
            },
            set classes(e) {
                Object.assign(zV, e)
            }
        });
        const YV = zV;
        var $V = ({
            label: e,
            value: t,
            scale: n,
            step: s,
            gradient: i,
            alpha: a,
            onChange: o,
            textField: r = !0
        }) => {
            const l = (0, Y.useCallback)((e => o(Od(e / n, 0, 1))), [o, n]),
                c = OM(s),
                u = Dm();
            return (0, z.jsxs)("div", {
                className: YV.colorComponentInput,
                children: [r && (0, z.jsx)("div", {
                    className: YV.label,
                    children: e
                }), (0, z.jsx)("div", {
                    className: Zu()(YV.slider, a && YV.alpha),
                    children: (0, z.jsx)("div", {
                        className: YV.sliderContainer,
                        children: (0, z.jsx)(HV, {
                            value: t * n,
                            start: 0,
                            end: n,
                            theme: WV,
                            gradient: i,
                            gamepadStep: n / 50,
                            valueTransformer: c,
                            className: Zu()(u && WV.gamepadActive),
                            onChange: l
                        })
                    })
                }), r && (1 !== s ? (0, z.jsx)(YG, {
                    value: t * n,
                    onChange: l,
                    className: YV.input
                }) : (0, z.jsx)(cV, {
                    value: Math.round(t * n),
                    onChange: l,
                    className: YV.input
                }))]
            })
        };
        X.add("game-ui/common/input/color-picker/component-input/component-input.tsx", {
            get ComponentInput() {
                return $V
            },
            set ComponentInput(e) {
                $V = e
            }
        });
        var qV = ({
                color: e,
                onChange: t,
                textField: n = !0
            }) => {
                const s = (0, Y.useCallback)((n => t({
                        ...e,
                        h: n
                    })), [e, t]),
                    i = (0, Y.useCallback)((n => t({
                        ...e,
                        s: n
                    })), [e, t]),
                    a = (0, Y.useCallback)((n => t({
                        ...e,
                        v: n
                    })), [e, t]);
                return (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)($V, {
                        label: "H",
                        value: e.h,
                        scale: 360,
                        step: 1,
                        gradient: MV,
                        onChange: s,
                        textField: n
                    }), (0, z.jsx)($V, {
                        label: "S",
                        value: e.s,
                        scale: 100,
                        step: 1,
                        gradient: kV(e),
                        onChange: i,
                        textField: n
                    }), (0, z.jsx)($V, {
                        label: "V",
                        value: e.v,
                        scale: 100,
                        step: 1,
                        gradient: DV(e),
                        onChange: a,
                        textField: n
                    })]
                })
            },
            XV = ({
                color: e,
                onChange: t,
                scale: n = 255,
                step: s = 1,
                textField: i = !0
            }) => {
                const a = XC(e),
                    o = e.h,
                    r = (0, Y.useCallback)((e => t(QC({
                        ...a,
                        r: e
                    }, o))), [a, o, t]),
                    l = (0, Y.useCallback)((e => t(QC({
                        ...a,
                        g: e
                    }, o))), [a, o, t]),
                    c = (0, Y.useCallback)((e => t(QC({
                        ...a,
                        b: e
                    }, o))), [a, o, t]);
                return (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)($V, {
                        label: "R",
                        value: a.r,
                        scale: n,
                        step: s,
                        gradient: BV({
                            ...a,
                            r: 0,
                            a: 1
                        }, {
                            ...a,
                            r: 1,
                            a: 1
                        }),
                        onChange: r,
                        textField: i
                    }), (0, z.jsx)($V, {
                        label: "G",
                        value: a.g,
                        scale: n,
                        step: s,
                        gradient: BV({
                            ...a,
                            g: 0,
                            a: 1
                        }, {
                            ...a,
                            g: 1,
                            a: 1
                        }),
                        onChange: l,
                        textField: i
                    }), (0, z.jsx)($V, {
                        label: "B",
                        value: a.b,
                        scale: n,
                        step: s,
                        gradient: BV({
                            ...a,
                            b: 0,
                            a: 1
                        }, {
                            ...a,
                            b: 1,
                            a: 1
                        }),
                        onChange: c,
                        textField: i
                    })]
                })
            },
            QV = ({
                color: e,
                scale: t = 100,
                step: n = 1,
                onChange: s,
                textField: i = !0
            }) => {
                const a = (0, Y.useCallback)((t => s({
                    ...e,
                    a: t
                })), [e, s]);
                return (0, z.jsx)($V, {
                    label: "A",
                    value: e.a,
                    scale: t,
                    step: n,
                    gradient: FV(e),
                    alpha: !0,
                    onChange: a,
                    textField: i
                })
            };
        X.add("game-ui/common/input/color-picker/component-input/component-inputs.tsx", {
            get HsvComponentInputs() {
                return qV
            },
            set HsvComponentInputs(e) {
                qV = e
            },
            get RgbComponentInputs() {
                return XV
            },
            set RgbComponentInputs(e) {
                XV = e
            },
            get AlphaComponentInput() {
                return QV
            },
            set AlphaComponentInput(e) {
                QV = e
            }
        });
        var ZV = ({
            s: e = 1,
            v: t = 1,
            outerRadius: n,
            innerRadius: s,
            className: i
        }) => (0, Y.useMemo)((() => {
            const a = 2 * Math.PI / 360 + .02,
                o = n - 1,
                r = s + 1,
                l = 2 * n;
            return (0, z.jsx)("svg", {
                width: l,
                height: l,
                viewBox: `0 0 ${l} ${l}`,
                className: i,
                children: (0, z.jsx)("g", {
                    transform: `translate(${n} ${n})`,
                    children: [...Array(360)].map(((n, s) => {
                        const i = s / 360,
                            l = 2 * Math.PI * i,
                            c = l + a,
                            u = Math.sin(l),
                            d = Math.cos(l),
                            m = Math.sin(c),
                            h = Math.cos(c),
                            g = WC(XC({
                                h: i,
                                s: e,
                                v: t,
                                a: 1
                            })),
                            p = [
                                [u * o, -d * o],
                                [u * o, -d * o],
                                [m * o, -h * o],
                                [m * r, -h * r]
                            ];
                        return (0, z.jsx)("path", {
                            d: `M${p.join(" L")}z`,
                            fill: g,
                            stroke: g,
                            strokeWidth: 2
                        }, s)
                    }))
                })
            })
        }), [i, s, n, e, t]);
        X.add("game-ui/common/input/color-picker/radial-hue-picker/radial-hue-wheel.tsx", {
            get RadialHueWheel() {
                return ZV
            },
            set RadialHueWheel(e) {
                ZV = e
            }
        });
        let JV = {
            "radial-hue-picker": "radial-hue-picker_TbV",
            radialHuePicker: "radial-hue-picker_TbV",
            active: "active_JI3",
            wheel: "wheel_aXq",
            thumb: "thumb_ydk"
        };
        X.add("game-ui/common/input/color-picker/radial-hue-picker/radial-hue-picker.module.scss", {
            get classes() {
                return JV
            },
            set classes(e) {
                Object.assign(JV, e)
            }
        });
        const eH = JV;
        var tH = ({
            h: e,
            s: t = 1,
            v: n = 1,
            decimalPrecision: s = 3,
            outerRadius: i,
            innerRadius: a,
            className: o,
            onChange: r,
            onDragStart: l,
            onDragEnd: c
        }) => {
            const u = (0, Y.useRef)(null),
                d = (0, Y.useCallback)((({
                    clientX: e,
                    clientY: t
                }) => !(!u.current || ! function (e, t, n, s, i) {
                    const {
                        left: a,
                        top: o,
                        width: r,
                        height: l
                    } = e.getBoundingClientRect(), c = t - a - r / 2, u = n - o - l / 2, d = c * c + u * u, m = s * s, h = i * i;
                    return d >= m && d <= h
                }(u.current, e, t, a, i)) && (document.activeElement instanceof HTMLElement && document.activeElement.blur(), lp(rp.grabSlider), l && l(), r && r(nH(u.current, e, t, s)), !0)), [a, i, l, r, s]),
                m = (0, Y.useCallback)((({
                    clientX: e,
                    clientY: t
                }) => {
                    u.current && r && (lp(rp.dragSlider), r(nH(u.current, e, t, s)))
                }), [r, s]),
                h = (0, Y.useCallback)((() => {
                    c && c()
                }), [c]),
                [g, p] = uf(d, m, h),
                f = {
                    width: 2 * i,
                    height: 2 * i
                },
                x = (a + i) / 2,
                v = 2 * e * Math.PI,
                _ = {
                    transform: `translate(${x*Math.sin(v)}px, ${-x*Math.cos(v)}px) translate(-50%, -50%)`,
                    top: i,
                    left: i,
                    backgroundColor: WC(XC({
                        h: e,
                        s: t,
                        v: n,
                        a: 1
                    }))
                };
            return (0, z.jsxs)("div", {
                ref: u,
                className: Zu()(eH.radialHuePicker, g && eH.active, o),
                style: f,
                onMouseDown: p,
                children: [(0, z.jsx)(ZV, {
                    s: t,
                    v: n,
                    outerRadius: i,
                    innerRadius: a,
                    className: eH.wheel
                }), (0, z.jsx)("div", {
                    className: eH.thumb,
                    style: _
                })]
            })
        };

        function nH(e, t, n, s) {
            const {
                left: i,
                top: a,
                width: o,
                height: r
            } = e.getBoundingClientRect(), l = t - i - o / 2, c = n - a - r / 2;
            return Od(Ld(Math.atan2(-l, c) / (2 * Math.PI) + .5, s), 0, 1)
        }
        X.add("game-ui/common/input/color-picker/radial-hue-picker/radial-hue-picker.tsx", {
            get RadialHuePicker() {
                return tH
            },
            set RadialHuePicker(e) {
                tH = e
            }
        });
        var sH = ({
            h: e,
            width: t,
            height: n,
            className: s
        }) => {
            const i = (0, Y.useId)(),
                a = (0, Y.useMemo)((() => {
                    const a = Math.round(n / 1);
                    return (0, z.jsx)("svg", {
                        width: t,
                        height: n,
                        viewBox: `0 0 ${t} ${n}`,
                        className: s,
                        children: [...Array(a)].map(((n, s) => {
                            const o = 1 - s / a,
                                r = WC(XC({
                                    h: e,
                                    s: 0,
                                    v: o,
                                    a: 1
                                })),
                                l = WC(XC({
                                    h: e,
                                    s: 1,
                                    v: o,
                                    a: 1
                                })),
                                c = `g-${i}-${s}`,
                                u = 1 * s;
                            return (0, z.jsxs)("g", {
                                children: [(0, z.jsxs)("linearGradient", {
                                    id: `${c}`,
                                    gradientTransform: "rotate(90)",
                                    children: [(0, z.jsx)("stop", {
                                        offset: "0%",
                                        stopColor: r
                                    }), (0, z.jsx)("stop", {
                                        offset: "100%",
                                        stopColor: l
                                    })]
                                }), (0, z.jsx)("rect", {
                                    y: u,
                                    width: 2 * t,
                                    height: 1,
                                    fill: `url(#${c})`
                                })]
                            }, s)
                        }))
                    })
                }), [s, e, n, i, t]);
            return a
        };
        X.add("game-ui/common/input/color-picker/saturation-value-picker/saturation-value-gradient.tsx", {
            get SaturationValueGradient() {
                return sH
            },
            set SaturationValueGradient(e) {
                sH = e
            }
        });
        let iH = {
            "saturation-gradient-picker": "saturation-gradient-picker_tkk",
            saturationGradientPicker: "saturation-gradient-picker_tkk",
            active: "active_LF5",
            gradient: "gradient_LME",
            thumb: "thumb_l7W"
        };
        X.add("game-ui/common/input/color-picker/saturation-value-picker/saturation-value-picker.module.scss", {
            get classes() {
                return iH
            },
            set classes(e) {
                Object.assign(iH, e)
            }
        });
        const aH = iH;
        var oH = ({
            h: e,
            s: t,
            v: n,
            decimalPrecision: s = 3,
            width: i,
            height: a,
            className: o,
            onChange: r,
            onDragStart: l,
            onDragEnd: c
        }) => {
            const u = (0, Y.useRef)(null),
                d = (0, Y.useCallback)((({
                    clientX: t,
                    clientY: n
                }) => !!u.current && (document.activeElement instanceof HTMLElement && document.activeElement.blur(), lp(rp.grabSlider), l && l(), r && r(...rH(u.current, t, n, e, s)), !0)), [l, r, e, s]),
                m = (0, Y.useCallback)((({
                    clientX: t,
                    clientY: n
                }) => {
                    u.current && r && (lp(rp.dragSlider), r(...rH(u.current, t, n, e, s)))
                }), [r, e, s]),
                h = (0, Y.useCallback)((() => {
                    c && c()
                }), [c]),
                [g, p] = uf(d, m, h),
                f = Zu()(aH.saturationGradientPicker, g && aH.active, o),
                x = {
                    width: i,
                    height: a
                },
                v = {
                    transform: `translate(${t*i}px, ${(1-n)*a}px) translate(-50%, -50%)`,
                    backgroundColor: WC(XC({
                        h: e,
                        s: t,
                        v: n,
                        a: 1
                    }))
                };
            return (0, z.jsxs)("div", {
                ref: u,
                className: f,
                style: x,
                onMouseDown: p,
                children: [(0, z.jsx)(sH, {
                    h: e,
                    width: i,
                    height: a,
                    className: aH.gradient
                }), (0, z.jsx)("div", {
                    className: aH.thumb,
                    style: v
                })]
            })
        };

        function rH(e, t, n, s, i) {
            const {
                left: a,
                top: o,
                width: r,
                height: l
            } = e.getBoundingClientRect();
            return [Od(Ld((t - a) / r, i), 0, 1), Od(Ld(1 - (n - o) / l, i), 0, 1)]
        }
        X.add("game-ui/common/input/color-picker/saturation-value-picker/saturation-value-picker.tsx", {
            get SaturationValuePicker() {
                return oH
            },
            set SaturationValuePicker(e) {
                oH = e
            }
        });
        let lH = {
            "color-picker": "color-picker_aNX",
            colorPicker: "color-picker_aNX",
            section: "section_cwE",
            preview: "preview_HmH",
            "preview-swatch": "preview-swatch_fDW",
            previewSwatch: "preview-swatch_fDW",
            wheel: "wheel_lpH",
            sv: "sv_Nf5",
            "sv-picker": "sv-picker_DTa",
            svPicker: "sv-picker_DTa",
            modes: "modes_ZSt",
            "mode-dropdown": "mode-dropdown_fGC",
            modeDropdown: "mode-dropdown_fGC",
            sliders: "sliders_sCL",
            hex: "hex_c98",
            "hex-label": "hex-label_yqK",
            hexLabel: "hex-label_yqK",
            "hex-input": "hex-input_hFc",
            hexInput: "hex-input_hFc"
        };
        X.add("game-ui/common/input/color-picker/color-picker/color-picker.module.scss", {
            get classes() {
                return lH
            },
            set classes(e) {
                Object.assign(lH, e)
            }
        });
        const cH = lH;
        var uH, dH;
        ! function (e) {
            e[e.None = 0] = "None", e[e.Current = 1] = "Current", e[e.CurrentAndLast = 2] = "CurrentAndLast"
        }(uH || (uH = {})),
        function (e) {
            e.Hsv = "Hsv", e.RgbFloat = "RgbFloat", e.RgbByte = "RgbByte"
        }(dH || (dH = {}));
        var mH = ({
            focusKey: e,
            color: t,
            alpha: n,
            colorWheel: s = !0,
            sliderTextInput: i = !0,
            preview: a = uH.None,
            mode: o,
            hexInput: r = !0,
            onChange: l,
            allowFocusExit: c = !0
        }) => {
            t = {
                ...t,
                a: n ? t.a : 1
            };
            const u = (0, Y.useRef)(t),
                [d, m] = (0, Y.useState)(o || dH.Hsv),
                h = (0, Y.useCallback)((e => l({
                    ...t,
                    h: e
                })), [l, t]),
                g = (0, Y.useCallback)(((e, n) => l({
                    ...t,
                    s: e,
                    v: n
                })), [l, t]),
                p = (0, Y.useCallback)((e => l(QC({
                    ...e,
                    a: t.a
                }, t.h))), [l, t]),
                f = (0, Y.useCallback)((() => l(u.current)), [l]),
                x = Hm();
            return (0, z.jsx)(ff, {
                children: (0, z.jsx)(tp, {
                    focusKey: e,
                    allowFocusExit: c,
                    children: (0, z.jsxs)("div", {
                        className: cH.colorPicker,
                        children: [a !== uH.None && (0, z.jsxs)("div", {
                            className: cH.preview,
                            children: [a === uH.CurrentAndLast && (0, z.jsx)("div", {
                                className: cH.previewSwatch,
                                style: {
                                    backgroundColor: WC(XC(u.current))
                                },
                                onClick: f
                            }), (0, z.jsx)("div", {
                                className: cH.previewSwatch,
                                style: {
                                    backgroundColor: WC(XC(t))
                                }
                            })]
                        }), s && (0, z.jsxs)("div", {
                            className: Zu()(cH.section, cH.wheel),
                            children: [(0, z.jsx)(tH, {
                                h: t.h,
                                outerRadius: 93 * x,
                                innerRadius: 70 * x,
                                onChange: h
                            }), (0, z.jsx)("div", {
                                className: cH.sv,
                                children: (0, z.jsx)(oH, {
                                    ...t,
                                    width: 94 * x,
                                    height: 94 * x,
                                    onChange: g,
                                    className: cH.svPicker
                                })
                            })]
                        }), void 0 === o && (0, z.jsx)("div", {
                            className: Zu()(cH.modes, cH.section),
                            children: (0, z.jsx)(qI, {
                                theme: sF,
                                content: Object.values(dH).map((e => (0, z.jsx)(JI, {
                                    focusKey: e,
                                    value: e,
                                    selected: d === e,
                                    onChange: m,
                                    children: hH(e)
                                }, e))),
                                children: (0, z.jsx)(XI, {
                                    className: cH.modeDropdown,
                                    children: hH(d)
                                })
                            })
                        }), (0, z.jsx)("div", {
                            className: Zu()(cH.sliders, cH.section),
                            children: (0, z.jsx)(gH, {
                                mode: d,
                                color: t,
                                alpha: n,
                                onChange: l,
                                textField: i
                            })
                        }), r && (0, z.jsxs)("div", {
                            className: Zu()(cH.hex, cH.section),
                            children: [(0, z.jsx)("div", {
                                className: cH.hexLabel,
                                children: "Hex"
                            }), (0, z.jsx)(wV, {
                                value: XC(t),
                                onChange: p,
                                className: cH.hexInput
                            })]
                        })]
                    })
                })
            })
        };

        function hH(e) {
            switch (e) {
            case dH.Hsv:
                return "HSV";
            case dH.RgbFloat:
                return "RGB 0-1.0";
            case dH.RgbByte:
                return "RGB 0-255"
            }
        }
        const gH = ({
            mode: e,
            color: t,
            alpha: n,
            onChange: s,
            textField: i = !0
        }) => {
            switch (e) {
            case dH.Hsv:
                return (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(qV, {
                        color: t,
                        onChange: s,
                        textField: i
                    }), n && (0, z.jsx)(QV, {
                        color: t,
                        scale: 100,
                        step: 1,
                        onChange: s,
                        textField: i
                    })]
                });
            case dH.RgbFloat:
                return (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(XV, {
                        color: t,
                        scale: 1,
                        step: .001,
                        onChange: s,
                        textField: i
                    }), n && (0, z.jsx)(QV, {
                        color: t,
                        scale: 1,
                        step: .001,
                        onChange: s,
                        textField: i
                    })]
                });
            case dH.RgbByte:
                return (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(XV, {
                        color: t,
                        scale: 255,
                        step: 1,
                        onChange: s,
                        textField: i
                    }), n && (0, z.jsx)(QV, {
                        color: t,
                        scale: 255,
                        step: 1,
                        onChange: s,
                        textField: i
                    })]
                })
            }
        };
        X.add("game-ui/common/input/color-picker/color-picker/color-picker.tsx", {
            get ColorPickerPreview() {
                return uH
            },
            set ColorPickerPreview(e) {
                uH = e
            },
            get ColorPickerSliderMode() {
                return dH
            },
            set ColorPickerSliderMode(e) {
                dH = e
            },
            get ColorPicker() {
                return mH
            },
            set ColorPicker(e) {
                mH = e
            }
        });
        const pH = new Eg("swatch"),
            fH = new Eg("picker");
        var xH = ({
            label: e,
            value: t,
            showAlpha: n,
            disabled: s,
            onChange: i
        }) => {
            const [a, o] = (0, Y.useState)(!1), r = (0, Y.useCallback)((() => o((e => !e))), []);
            (0, Y.useEffect)((() => {
                s && o(!1)
            }), [s]);
            const [l, c] = (0, Y.useState)(0), u = (0, Y.useCallback)((e => {
                c(e.h), i(XC(e))
            }), [i]), d = (0, Y.useMemo)((() => function (e, t) {
                const n = QC(e, t);
                if (0 === n.h && t > .99) return {
                    ...n,
                    h: 1
                };
                return n
            }(t, l)), [l, t]);
            return (0, z.jsx)(BD, {
                disabled: s,
                children: (0, z.jsxs)(ap, {
                    focused: a ? fH : pH,
                    children: [(0, z.jsxs)("div", {
                        className: FD.row,
                        children: [(0, z.jsx)("div", {
                            className: FD.label,
                            children: e
                        }), (0, z.jsx)("div", {
                            className: FD.control,
                            children: (0, z.jsx)(Gp, {
                                focusKey: pH,
                                className: Zu()(FD.swatch, t.a < 1 && FD.alpha),
                                onSelect: s ? void 0 : r,
                                children: (0, z.jsx)("div", {
                                    style: {
                                        backgroundColor: WC(t)
                                    }
                                })
                            })
                        })]
                    }), a && (0, z.jsx)("div", {
                        className: FD.colorPickerContainer,
                        children: (0, z.jsx)(mH, {
                            focusKey: fH,
                            color: d,
                            alpha: n,
                            onChange: u
                        })
                    })]
                })
            })
        };
        X.add("game-ui/editor/widgets/fields/color-field.tsx", {
            get ColorField() {
                return xH
            },
            set ColorField(e) {
                xH = e
            }
        });
        const vH = new Eg("FIELD"),
            _H = e => e.replace(/\//g, `/${hu}`);
        var bH = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = xA(NA, HA(e, t));
                return lg(kx.value?.assetImportButton), (0, z.jsx)(wx, {
                    uiTag: n.uiTag || void 0,
                    editor: !0,
                    children: (0, z.jsx)(TH, {
                        label: (0, z.jsx)(gu, {
                            value: n.displayName
                        }),
                        value: n.displayValue,
                        disabled: n.disabled,
                        tooltip: n.tooltip && (0, z.jsx)(gu, {
                            value: n.tooltip,
                            transformer: _H
                        }),
                        onOpenDirectoryBrowser: s
                    })
                })
            },
            TH = ({
                label: e,
                value: t,
                disabled: n,
                tooltip: s,
                className: i,
                theme: a,
                onOpenDirectoryBrowser: o
            }) => {
                const r = (0, Y.useCallback)((() => o()), [o]);
                return (0, z.jsx)(BD, {
                    disabled: n,
                    className: i,
                    children: (0, z.jsx)(ap, {
                        focused: vH,
                        children: (0, z.jsxs)("div", {
                            className: FD.row,
                            children: [(0, z.jsx)("div", {
                                className: Zu()(FD.label, a?.label),
                                children: e
                            }), (0, z.jsx)("div", {
                                className: Zu()(FD.control, a?.control),
                                children: (0, z.jsx)(Tg, {
                                    tooltip: s ?? t,
                                    children: (0, z.jsxs)(Gp, {
                                        focusKey: vH,
                                        className: Zu()(FD.pickerToggle, FD.directoryButton, a?.button),
                                        disabled: n,
                                        onSelect: r,
                                        children: [(0, z.jsx)("div", {
                                            children: t
                                        }), (0, z.jsx)("img", {
                                            src: "Media/Editor/Folder.svg",
                                            className: FD.directoryIcon
                                        })]
                                    })
                                })
                            })]
                        })
                    })
                })
            };
        X.add("game-ui/editor/widgets/fields/directory-picker-button.tsx", {
            get BoundDirectoryPickerButton() {
                return bH
            },
            set BoundDirectoryPickerButton(e) {
                bH = e
            },
            get DirectoryPickerButton() {
                return TH
            },
            set DirectoryPickerButton(e) {
                TH = e
            }
        });
        let EH = {
            "dropdown-flag-item": "dropdown-flag-item_EcT",
            dropdownFlagItem: "dropdown-flag-item_EcT",
            toggle: "toggle_RyX",
            label: "label_PwM"
        };
        X.add("game-ui/common/input/dropdown/items/dropdown-flag-item.module.scss", {
            get classes() {
                return EH
            },
            set classes(e) {
                Object.assign(EH, e)
            }
        });
        const IH = EH;

        function yH({
            focusKey: e,
            value: t,
            checked: n,
            theme: s = IH,
            toggleComponent: i = ox,
            className: a,
            onChange: o,
            children: r
        }) {
            const l = (0, Y.useCallback)((() => {
                o && o(t, !n)
            }), [n, o, t]);
            return (0, z.jsx)(kg, {
                onAction: l,
                children: (0, z.jsxs)(Ip, {
                    focusKey: e,
                    className: Zu()(s.dropdownFlagItem, n && "checked", a),
                    onClick: l,
                    children: [Y.createElement(i, {
                        checked: n,
                        className: s.toggle
                    }), (0, z.jsx)("div", {
                        className: s.label,
                        children: r
                    })]
                })
            })
        }
        X.add("game-ui/common/input/dropdown/items/dropdown-flag-item.tsx", {
            get DropdownFlagItem() {
                return yH
            },
            set DropdownFlagItem(e) {
                yH = e
            }
        });
        var jH = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = HA(e, t),
                    i = (0, Y.useMemo)((() => n.enumMembers.map(yA)), [n.enumMembers]),
                    a = (0, Y.useCallback)((e => SA(s, cm(e))), [s]);
                return (0, z.jsx)(CH, {
                    label: (0, z.jsx)(gu, {
                        value: n.displayName
                    }),
                    value: lm(n.value),
                    enumMembers: i,
                    disabled: n.disabled,
                    tooltip: n.tooltip,
                    onChange: a
                })
            },
            SH = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = HA(e, t),
                    i = (0, Y.useMemo)((() => n.enumMembers.map(yA)), [n.enumMembers]),
                    a = (0, Y.useCallback)((e => SA(s, cm(e))), [s]);
                return (0, z.jsx)(NH, {
                    label: (0, z.jsx)(gu, {
                        value: n.displayName
                    }),
                    value: lm(n.value),
                    enumMembers: i,
                    disabled: n.disabled,
                    onChange: a
                })
            },
            CH = ({
                label: e,
                value: t,
                enumMembers: n,
                disabled: s,
                onChange: i,
                tooltip: a
            }) => {
                const o = ac(),
                    r = (0, Y.useMemo)((() => OH(o, n, t)), [o, n, t]);
                return (0, z.jsx)(BD, {
                    disabled: s,
                    children: (0, z.jsx)(Tg, {
                        tooltip: a && (0, z.jsx)(gu, {
                            value: a
                        }),
                        children: (0, z.jsxs)("div", {
                            className: FD.row,
                            children: [(0, z.jsx)("div", {
                                className: FD.label,
                                children: e
                            }), (0, z.jsx)("div", {
                                className: FD.control,
                                children: (0, z.jsx)(qI, {
                                    theme: sF,
                                    initialFocused: r,
                                    content: n?.map(((e, n) => (0, z.jsx)(JI, {
                                        focusKey: n,
                                        value: e.value,
                                        selected: t === e.value,
                                        onChange: i,
                                        children: (0, z.jsx)(gu, {
                                            value: e.displayName
                                        })
                                    }, n))),
                                    children: (0, z.jsx)(XI, {
                                        sounds: wH,
                                        className: FD.dropdownToggle,
                                        disabled: s,
                                        children: r
                                    })
                                })
                            })]
                        })
                    })
                })
            },
            NH = ({
                label: e,
                value: t,
                enumMembers: n,
                disabled: s,
                onChange: i
            }) => {
                const a = ac(),
                    o = (0, Y.useMemo)((() => function (e, t, n) {
                        if (0n !== n) {
                            const s = t.map((e => e.value)).find((e => e === n));
                            return s ? OH(e, t, s) : t.filter((e => 0n !== e.value && (n & e.value) === e.value)).map((t => pu(e, t.displayName))).join(", ") || " "
                        }
                        return OH(e, t, 0n)
                    }(a, n, t)), [a, n, t]),
                    r = (0, Y.useCallback)(((e, n) => {
                        i(n ? t | e : t & ~e)
                    }), [i, t]),
                    l = (0, Y.useMemo)((() => n.map((e => e.value)).reduce(((e, t) => e | t))), [n]),
                    c = l === t,
                    u = (0, Y.useCallback)((() => i(l)), [l, i]),
                    d = (0, Y.useCallback)((() => i(0n)), [i]);
                return (0, z.jsx)(BD, {
                    disabled: s,
                    children: (0, z.jsxs)("div", {
                        className: FD.row,
                        children: [(0, z.jsx)("div", {
                            className: FD.label,
                            children: e
                        }), (0, z.jsx)("div", {
                            className: FD.control,
                            children: (0, z.jsx)(qI, {
                                theme: sF,
                                initialFocused: 0,
                                content: (0, z.jsxs)(z.Fragment, {
                                    children: [(0, z.jsx)(Gp, {
                                        onSelect: c ? d : u,
                                        selected: c,
                                        className: sF.toggleFlagsButton,
                                        children: (0, z.jsx)(Pc.Editor.SELECT_NOTHING_EVERYTHING, {})
                                    }), n.map(((e, n) => (0, z.jsx)(yH, {
                                        theme: sF,
                                        focusKey: n,
                                        value: e.value,
                                        checked: (e.value & t) === e.value,
                                        onChange: r,
                                        children: (0, z.jsx)(gu, {
                                            value: e.displayName
                                        })
                                    }, n)))]
                                }),
                                children: (0, z.jsx)(XI, {
                                    sounds: wH,
                                    className: FD.dropdownToggle,
                                    children: o
                                })
                            })
                        })]
                    })
                })
            };
        const wH = {
            ...Bp,
            hover: null,
            focus: null
        };

        function OH(e, t, n) {
            const s = t.find((e => e.value === n));
            return null != s ? pu(e, s.displayName) : " "
        }

        function PH(e) {
            return Object.entries(e).filter((e => "number" == typeof e[1])).map((([e, t]) => ({
                displayName: bc(e),
                value: BigInt(t)
            })))
        }
        X.add("game-ui/editor/widgets/fields/enum-field.tsx", {
            get BoundEnumField() {
                return jH
            },
            set BoundEnumField(e) {
                jH = e
            },
            get BoundFlagsField() {
                return SH
            },
            set BoundFlagsField(e) {
                SH = e
            },
            get EnumField() {
                return CH
            },
            set EnumField(e) {
                CH = e
            },
            get FlagsField() {
                return NH
            },
            set FlagsField(e) {
                NH = e
            },
            get getEnumMembers() {
                return PH
            },
            set getEnumMembers(e) {
                PH = e
            }
        });
        var LH = ({
            gradient: e,
            iconSrc: t,
            label: n,
            value: s,
            min: i,
            max: a,
            tooltip: o,
            onChange: r
        }) => {
            const l = OM(Math.pow(10, -1));
            return (0, z.jsx)(BD, {
                children: (0, z.jsx)(Tg, {
                    tooltip: o && (0, z.jsx)(gu, {
                        value: o
                    }),
                    children: (0, z.jsxs)("div", {
                        className: FD.row,
                        children: [(0, z.jsx)("div", {
                            className: FD.label,
                            children: n
                        }), (0, z.jsx)("div", {
                            className: FD.control,
                            children: (0, z.jsxs)(tp, {
                                direction: Rg.Horizontal,
                                children: [(0, z.jsx)(Ep, {
                                    className: FD.sliderContainer,
                                    children: (0, z.jsx)(Np, {
                                        children: (0, z.jsx)(HV, {
                                            gradient: e,
                                            value: s,
                                            start: i,
                                            end: a,
                                            theme: WV,
                                            className: FD.gradientSlider,
                                            valueTransformer: l,
                                            onChange: r
                                        })
                                    })
                                }), (0, z.jsx)(YG, {
                                    value: s,
                                    min: i,
                                    max: a,
                                    fractionDigits: 1,
                                    onChange: r,
                                    className: FD.sliderInput
                                })]
                            })
                        }), t && (0, z.jsx)(ef, {
                            src: t,
                            className: FD.icon
                        })]
                    })
                })
            })
        };
        X.add("game-ui/editor/widgets/fields/gradient-slider-field.tsx", {
            get GradientSliderField() {
                return LH
            },
            set GradientSliderField(e) {
                LH = e
            }
        });
        var AH = e => (0, z.jsx)(MH, {
                ...e
            }),
            MH = ({
                disabled: e,
                value: t,
                onChange: n,
                label: s,
                min: i = _d,
                max: a = bd,
                onChangeStart: o,
                onChangeEnd: r,
                tooltip: l
            }) => {
                const c = (0, Y.useCallback)(((e, t) => BH(e, t, i, a)), [i, a]);
                return (0, z.jsx)(BD, {
                    disabled: e,
                    children: (0, z.jsx)(Tg, {
                        tooltip: l && (0, z.jsx)(gu, {
                            value: l
                        }),
                        children: (0, z.jsxs)("div", {
                            "data-type": "field",
                            className: FD.row,
                            children: [(0, z.jsx)(KG, {
                                value: t,
                                disabled: e,
                                className: FD.label,
                                dragTransformation: c,
                                onChange: n,
                                children: s
                            }), (0, z.jsx)("div", {
                                className: FD.control,
                                children: (0, z.jsx)(cV, {
                                    value: t,
                                    min: i,
                                    max: a,
                                    disabled: e,
                                    className: FD.input,
                                    onChange: n,
                                    onFocus: o,
                                    onBlur: r
                                })
                            })]
                        })
                    })
                })
            },
            RH = ({
                min: e = 0,
                max: t = Td,
                ...n
            }) => (0, z.jsx)(AH, {
                ...n,
                min: e,
                max: t
            }),
            kH = ({
                label: e,
                value: t,
                onChange: n,
                ...s
            }) => {
                const i = (0, Y.useCallback)((e => n({
                        ...t,
                        x: e
                    })), [t, n]),
                    a = (0, Y.useCallback)((e => n({
                        ...t,
                        y: e
                    })), [t, n]),
                    o = function (e = _d, t = bd) {
                        return (0, Y.useCallback)(((n, s) => {
                            const i = 60;
                            return {
                                x: Od(Math.trunc(n.x + s * i), e, t),
                                y: Od(Math.trunc(n.y + s * i), e, t)
                            }
                        }), [t, e])
                    }(s.min, s.max);
                return (0, z.jsx)(BD, {
                    disabled: s.disabled,
                    children: (0, z.jsx)(Tg, {
                        tooltip: s.tooltip && (0, z.jsx)(gu, {
                            value: s.tooltip
                        }),
                        children: (0, z.jsxs)("div", {
                            className: FD.row,
                            children: [(0, z.jsx)(KG, {
                                value: t,
                                disabled: s.disabled,
                                className: FD.label,
                                dragTransformation: o,
                                onChange: n,
                                children: e
                            }), (0, z.jsx)("div", {
                                className: FD.control,
                                children: (0, z.jsxs)(tp, {
                                    direction: Rg.Horizontal,
                                    children: [(0, z.jsx)(UH, {
                                        ...s,
                                        label: "X",
                                        value: t.x,
                                        onChange: i
                                    }), (0, z.jsx)(UH, {
                                        ...s,
                                        label: "Y",
                                        value: t.y,
                                        onChange: a
                                    })]
                                })
                            })]
                        })
                    })
                })
            },
            DH = ({
                label: e,
                value: t,
                onChange: n,
                ...s
            }) => {
                const i = (0, Y.useCallback)((e => n({
                        ...t,
                        x: e
                    })), [t, n]),
                    a = (0, Y.useCallback)((e => n({
                        ...t,
                        y: e
                    })), [t, n]),
                    o = (0, Y.useCallback)((e => n({
                        ...t,
                        z: e
                    })), [t, n]),
                    r = function (e = _d, t = bd) {
                        return (0, Y.useCallback)(((n, s) => {
                            const i = 60;
                            return {
                                x: Od(Math.trunc(n.x + s * i), e, t),
                                y: Od(Math.trunc(n.y + s * i), e, t),
                                z: Od(Math.trunc(n.z + s * i), e, t)
                            }
                        }), [t, e])
                    }(s.min, s.max);
                return (0, z.jsx)(BD, {
                    disabled: s.disabled,
                    children: (0, z.jsx)(Tg, {
                        tooltip: s.tooltip && (0, z.jsx)(gu, {
                            value: s.tooltip
                        }),
                        children: (0, z.jsxs)("div", {
                            className: FD.row,
                            children: [(0, z.jsx)(KG, {
                                value: t,
                                disabled: s.disabled,
                                className: FD.label,
                                dragTransformation: r,
                                onChange: n,
                                children: e
                            }), (0, z.jsx)("div", {
                                className: FD.control,
                                children: (0, z.jsxs)(tp, {
                                    direction: Rg.Horizontal,
                                    children: [(0, z.jsx)(UH, {
                                        ...s,
                                        label: "X",
                                        value: t.x,
                                        onChange: i
                                    }), (0, z.jsx)(UH, {
                                        ...s,
                                        label: "Y",
                                        value: t.y,
                                        onChange: a
                                    }), (0, z.jsx)(UH, {
                                        ...s,
                                        label: "Z",
                                        value: t.z,
                                        onChange: o
                                    })]
                                })
                            })]
                        })
                    })
                })
            },
            FH = ({
                label: e,
                value: t,
                onChange: n,
                ...s
            }) => {
                const i = (0, Y.useCallback)((e => n({
                        ...t,
                        x: e
                    })), [t, n]),
                    a = (0, Y.useCallback)((e => n({
                        ...t,
                        y: e
                    })), [t, n]),
                    o = (0, Y.useCallback)((e => n({
                        ...t,
                        z: e
                    })), [t, n]),
                    r = (0, Y.useCallback)((e => n({
                        ...t,
                        w: e
                    })), [t, n]),
                    l = function (e = _d, t = bd) {
                        return (0, Y.useCallback)(((n, s) => {
                            const i = 60;
                            return {
                                x: Od(Math.trunc(n.x + s * i), e, t),
                                y: Od(Math.trunc(n.y + s * i), e, t),
                                z: Od(Math.trunc(n.z + s * i), e, t),
                                w: Od(Math.trunc(n.w + s * i), e, t)
                            }
                        }), [t, e])
                    }(s.min, s.max);
                return (0, z.jsx)(BD, {
                    disabled: s.disabled,
                    children: (0, z.jsx)(Tg, {
                        tooltip: s.tooltip && (0, z.jsx)(gu, {
                            value: s.tooltip
                        }),
                        children: (0, z.jsxs)("div", {
                            className: FD.row,
                            children: [(0, z.jsx)(KG, {
                                value: t,
                                disabled: s.disabled,
                                className: FD.label,
                                dragTransformation: l,
                                onChange: n,
                                children: e
                            }), (0, z.jsx)("div", {
                                className: FD.control,
                                children: (0, z.jsxs)(tp, {
                                    direction: Rg.Horizontal,
                                    children: [(0, z.jsx)(UH, {
                                        ...s,
                                        label: "X",
                                        value: t.x,
                                        onChange: i
                                    }), (0, z.jsx)(UH, {
                                        ...s,
                                        label: "Y",
                                        value: t.y,
                                        onChange: a
                                    }), (0, z.jsx)(UH, {
                                        ...s,
                                        label: "Z",
                                        value: t.z,
                                        onChange: o
                                    }), (0, z.jsx)(UH, {
                                        ...s,
                                        label: "W",
                                        value: t.w,
                                        onChange: r
                                    })]
                                })
                            })]
                        })
                    })
                })
            };
        const UH = ({
            label: e,
            value: t,
            disabled: n,
            onChange: s,
            onChangeStart: i,
            onChangeEnd: a,
            min: o,
            max: r
        }) => {
            const l = function (e = _d, t = bd) {
                return (0, Y.useCallback)(((n, s) => BH(n, s, e, t)), [t, e])
            }(o, r);
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)(KG, {
                    value: t,
                    disabled: n,
                    className: FD.vectorLabel,
                    dragTransformation: l,
                    onChange: s,
                    onDragStart: i,
                    onDragEnd: a,
                    children: e
                }), (0, z.jsx)(cV, {
                    value: t,
                    disabled: n,
                    className: FD.vectorInput,
                    onChange: s,
                    onFocus: i,
                    onBlur: a,
                    min: o,
                    max: r
                })]
            })
        };

        function BH(e, t, n, s) {
            return Od(Math.trunc(e + 30 * t), n, s)
        }
        X.add("game-ui/editor/widgets/fields/int-input-field.tsx", {
            get EditorIntInputField() {
                return AH
            },
            set EditorIntInputField(e) {
                AH = e
            },
            get IntInputField() {
                return MH
            },
            set IntInputField(e) {
                MH = e
            },
            get UIntInputField() {
                return RH
            },
            set UIntInputField(e) {
                RH = e
            },
            get Int2InputField() {
                return kH
            },
            set Int2InputField(e) {
                kH = e
            },
            get Int3InputField() {
                return DH
            },
            set Int3InputField(e) {
                DH = e
            },
            get Int4InputField() {
                return FH
            },
            set Int4InputField(e) {
                FH = e
            }
        });
        const GH = new Eg("FIELD"),
            VH = new Eg("PICKER");
        var HH = ({
                parent: e,
                path: t,
                props: n,
                children: s
            }) => {
                const i = HA(e, t),
                    a = (0, Y.useContext)(JA),
                    o = xA(CA, i);
                return n.hidden ? null : (0, z.jsx)(wx, {
                    uiTag: n.uiTag || void 0,
                    editor: !0,
                    children: (0, z.jsx)(KH, {
                        label: (0, z.jsx)(gu, {
                            value: n.displayName
                        }),
                        value: (0, z.jsx)(gu, {
                            value: n.displayValue
                        }),
                        expanded: n.expanded,
                        disabled: n.disabled,
                        tooltip: n.tooltip,
                        onExpandedChange: o,
                        children: (0, z.jsx)(ZA, {
                            parent: i,
                            components: a,
                            data: s
                        })
                    })
                })
            },
            KH = ({
                label: e,
                value: t,
                expanded: n,
                disabled: s,
                children: i,
                tooltip: a,
                onExpandedChange: o
            }) => {
                const r = (0, Y.useCallback)((() => o(!n)), [n, o]),
                    l = (0, Y.useCallback)((() => o(!1)), [o]),
                    c = Vm(FD.pickerMinHeight),
                    u = (0, z.jsx)(Dg, {
                        onAction: r,
                        children: (0, z.jsx)(tp, {
                            focusKey: VH,
                            allowFocusExit: !1,
                            children: i
                        })
                    }),
                    d = lT();
                return (0, z.jsxs)(z.Fragment, {
                    children: [n && (0, z.jsx)(dT, {
                        onClick: l
                    }), (0, z.jsx)(BD, {
                        disabled: s,
                        children: (0, z.jsx)(Tg, {
                            tooltip: a && (0, z.jsx)(gu, {
                                value: a
                            }),
                            children: (0, z.jsx)(ap, {
                                focused: n ? VH : GH,
                                activation: n ? qu.Always : qu.FocusedChild,
                                children: (0, z.jsx)(BI, {
                                    visible: n,
                                    minHeight: c,
                                    content: u,
                                    className: FD.pickerPopup,
                                    style: d,
                                    minWidth: !0,
                                    children: (0, z.jsxs)("div", {
                                        className: FD.row,
                                        children: [(0, z.jsx)("div", {
                                            className: FD.label,
                                            children: e
                                        }), (0, z.jsx)("div", {
                                            className: FD.control,
                                            children: (0, z.jsx)(Gp, {
                                                focusKey: GH,
                                                className: Zu()(FD.pickerToggle, n && FD.expanded),
                                                disabled: s,
                                                onSelect: r,
                                                children: t
                                            })
                                        })]
                                    })
                                })
                            })
                        })
                    })]
                })
            };
        X.add("game-ui/editor/widgets/fields/popup-value-field.tsx", {
            get BoundPopupValueField() {
                return HH
            },
            set BoundPopupValueField(e) {
                HH = e
            },
            get PopupValueField() {
                return KH
            },
            set PopupValueField(e) {
                KH = e
            }
        });
        var WH = ({
            label: e,
            iconSrc: t,
            value: n,
            min: s,
            max: i,
            fractionDigits: a = 3,
            disabled: o,
            tooltip: r,
            onChange: l,
            onChangeStart: c,
            onChangeEnd: u
        }) => {
            const d = OM(Math.pow(10, -a)),
                m = ((e, t, n) => {
                    const s = [];
                    for (let i = e; i <= t; i += n) s.push((0, z.jsx)("div", {
                        className: FD.tickMark,
                        style: {
                            left: (i - e) / (t - e) * 100 + "%"
                        }
                    }, i));
                    return s
                })(s, i, (i - s) / 10);
            return (0, z.jsx)(BD, {
                disabled: o,
                children: (0, z.jsx)(Tg, {
                    tooltip: r && (0, z.jsx)(gu, {
                        value: r
                    }),
                    children: (0, z.jsxs)("div", {
                        className: FD.row,
                        children: [(0, z.jsx)("div", {
                            className: FD.label,
                            children: e
                        }), (0, z.jsx)("div", {
                            className: FD.control,
                            children: (0, z.jsxs)(tp, {
                                direction: Rg.Horizontal,
                                children: [(0, z.jsx)(Ep, {
                                    className: FD.sliderContainer,
                                    children: (0, z.jsx)(Np, {
                                        children: (0, z.jsx)(CM, {
                                            value: n,
                                            start: s,
                                            end: i,
                                            disabled: o,
                                            theme: gV,
                                            className: Zu()(FD.slider, FD.rangedSlider),
                                            valueTransformer: d,
                                            onChange: l,
                                            onDragStart: c,
                                            onDragEnd: u,
                                            children: m
                                        })
                                    })
                                }), (0, z.jsx)(YG, {
                                    value: n,
                                    min: s,
                                    max: i,
                                    fractionDigits: a,
                                    disabled: o,
                                    onChange: l,
                                    onFocus: c,
                                    onBlur: u,
                                    className: FD.sliderInput
                                })]
                            })
                        }), t && (0, z.jsx)(ef, {
                            src: t,
                            className: FD.icon
                        })]
                    })
                })
            })
        };
        X.add("game-ui/editor/widgets/fields/ranged-slider-field.tsx", {
            get RangedSliderField() {
                return WH
            },
            set RangedSliderField(e) {
                WH = e
            }
        });
        var zH = ({
            seasons: e,
            tickHeight: t = 50
        }) => {
            const {
                viewport: n
            } = VF(), {
                padding: s,
                rem: i,
                bounds: a,
                posFromPoint: o
            } = n;
            return (0, z.jsxs)("g", {
                children: [e.map(((e, t) => {
                    const n = o(e.startTime, a.max.y);
                    return (0, z.jsxs)("g", {
                        children: [(0, z.jsx)(EG, {
                            x1: e.startTime,
                            x2: e.startTime,
                            y1: a.min.y - s.bottom,
                            y2: a.max.y + s.top,
                            stroke: "#fff3",
                            strokeWidth: 1
                        }), (0, z.jsx)(WB, {
                            fontSize: i(12),
                            x: Math.max(n.x - i(10), i(10)),
                            y: n.y + i(s.top - 10),
                            label: e.name,
                            color: "#fff6",
                            rotation: 90,
                            textAnchor: "end"
                        })]
                    }, `${e.name}${t}`)
                })), (0, z.jsx)(YB, {
                    overdraw: !0,
                    halfSteps: !0,
                    drawAxes: "y",
                    tickHeight: t
                })]
            })
        };
        X.add("game-ui/editor/widgets/fields/seasons-field/seasons-grid-lines.tsx", {
            get SeasonsGridLines() {
                return zH
            },
            set SeasonsGridLines(e) {
                zH = e
            }
        });
        const YH = {
                left: 0,
                bottom: 10,
                top: 40,
                right: 0
            },
            $H = () => "";
        var qH = e => {
            const {
                label: t,
                data: n,
                type: s,
                seasons: i,
                editorClassName: a,
                curveDataOptions: o,
                gridLinesTickHeight: r,
                onAddKeyframe: l,
                onRemoveKeyframe: c,
                onUpdateSeasonProperty: u
            } = e, d = aV(n[s], {
                minX: 0,
                maxX: 1,
                minY: 0,
                maxY: 100,
                autoUpdateBounds: !1,
                wrapMode: "loop",
                ...o
            }), m = (0, Y.useCallback)((async (e, t, n, i) => u(e, s, i || 0, t)), [u, s]);
            return (0, z.jsxs)("div", {
                children: [(0, z.jsx)("p", {
                    children: t
                }), (0, z.jsx)(vG, {
                    data: d,
                    onRemoveKeyframe: c,
                    onAddKeyframe: l,
                    onMoveKeyframe: m,
                    canAddKeyframes: !0,
                    hideControlPoints: !0,
                    allowEditingAll: !0,
                    children: (0, z.jsx)(LG, {
                        padding: YH,
                        gridLines: !1,
                        formatLabelX: $H,
                        className: a,
                        children: (0, z.jsx)(zH, {
                            seasons: i,
                            tickHeight: r
                        })
                    })
                })]
            })
        };
        X.add("game-ui/editor/widgets/fields/seasons-field/seasons-curve-editor.tsx", {
            get SeasonsCurveEditor() {
                return qH
            },
            set SeasonsCurveEditor(e) {
                qH = e
            }
        });
        let XH = {
            "seasons-field": "seasons-field_wTf",
            seasonsField: "seasons-field_wTf",
            "cloudiness-editor": "cloudiness-editor_bcT",
            cloudinessEditor: "cloudiness-editor_bcT",
            "fog-editor": "fog-editor_FS_",
            fogEditor: "fog-editor_FS_",
            "temperature-gradient": "temperature-gradient_hNT",
            temperatureGradient: "temperature-gradient_hNT"
        };
        X.add("game-ui/editor/widgets/fields/seasons-field/seasons.module.scss", {
            get classes() {
                return XH
            },
            set classes(e) {
                Object.assign(XH, e)
            }
        });
        const QH = XH;
        var ZH = ({
            value: e,
            seasons: t,
            label: n,
            ...s
        }) => (0, z.jsxs)("div", {
            className: QH.seasonsField,
            children: [n && (0, z.jsx)("p", {
                children: n
            }), (0, z.jsx)(qH, {
                data: e,
                label: "Temperature",
                type: "temperature",
                curveDataOptions: {
                    minY: -40,
                    maxY: 40
                },
                seasons: t,
                ...s
            }), (0, z.jsx)(qH, {
                data: e,
                label: "Fog",
                type: "fog",
                seasons: t,
                gridLinesTickHeight: 75,
                editorClassName: QH.fogEditor,
                ...s
            }), (0, z.jsx)(qH, {
                data: e,
                label: "Cloudiness",
                type: "cloudiness",
                seasons: t,
                editorClassName: QH.cloudinessEditor,
                ...s
            }), (0, z.jsx)(qH, {
                data: e,
                label: "Percipitation",
                type: "precipitation",
                seasons: t,
                ...s
            }), (0, z.jsx)(qH, {
                data: e,
                label: "Aurora",
                type: "aurora",
                seasons: t,
                ...s
            })]
        });
        X.add("game-ui/editor/widgets/fields/seasons-field/seasons-field.tsx", {
            get SeasonsField() {
                return ZH
            },
            set SeasonsField(e) {
                ZH = e
            }
        });
        const JH = {
                inTangent: 0,
                outTangent: 0,
                inWeight: .33,
                outWeight: .33,
                weightedMode: mG.None
            },
            eK = {
                temperature: ["final", "tempNightDay.y", "tempDeviationNightDay.y", "tempNightDay.x", "tempDeviationNightDay.x"],
                cloudiness: ["final", "cloudAmount", "cloudAmountDeviation", "cloudChance", "turbulence"],
                precipitation: ["final", "precipitationAmount", "precipitationAmountDeviation", "precipitationChance", "turbulence"],
                aurora: ["final", "auroraAmount", "auroraChance"],
                fog: ["final"]
            };
        var tK = (e, t) => eK[e][t],
            nK = (e, t, n, s) => ({
                label: e,
                color: t,
                keys: [],
                preWrapMode: hG.Loop,
                postWrapMode: hG.Loop,
                deviationFrom: n,
                readonly: s
            });
        const sK = () => ({
                temperature: [nK("final", "#f3f3f3", void 0, !0), nK("day", "#f00f"), nK("dayDeviation", "#f967", 1), nK("night", "#00ff"), nK("nightDeviation", "#74f7", 3)],
                cloudiness: [nK("final", "#f3f3f3", void 0, !0), nK("amount", "#00ff"), nK("amountDeviation", "#aaf7", 1), nK("chance", "#0f0a"), nK("turbulence", "#fffa")],
                precipitation: [nK("final", "#f3f3f3", void 0, !0), nK("amount", "#00ff"), nK("amountDeviation", "#44f7", 1), nK("chance", "#0f0a"), nK("turbulence", "#fffa")],
                aurora: [nK("final", "#f3f3f3", void 0, !0), nK("amount", "#00ff"), nK("chance", "#0f0a")],
                fog: [nK("final", "#f3f3f3", void 0, !0)]
            }),
            iK = (e, t) => ({
                ...JH,
                time: e,
                value: t
            });
        var aK = e => (0, Y.useMemo)((() => {
            if (e && e.seasons) {
                const t = sK();
                return t.temperature[0].keys = e.curves?.temperature.keys || [], t.temperature[0].keys.forEach((e => e.time = e.time / 12)), t.fog[0].keys = e.curves?.fog.keys || [], t.fog[0].keys.forEach((e => {
                    e.time = e.time / 12, e.value = 100 * e.value
                })), t.cloudiness[0].keys = e.curves?.cloudiness.keys || [], t.cloudiness[0].keys.forEach((e => {
                    e.time = e.time / 12, e.value = 100 * e.value
                })), t.precipitation[0].keys = e.curves?.precipitation.keys || [], t.precipitation[0].keys.forEach((e => {
                    e.time = e.time / 12, e.value = 100 * e.value
                })), t.aurora[0].keys = e.curves?.aurora.keys || [], t.aurora[0].keys.forEach((e => {
                    e.time = e.time / 12, e.value = 100 * e.value
                })), e.seasons.reduce(((t, n, s) => {
                    const i = ((s < e.seasons.length - 1 ? e.seasons[s + 1].startTime : 1 + e.seasons[0].startTime) + n.startTime) / 2;
                    return t.temperature[1].keys.push(iK(i, n.tempNightDay.y)), t.temperature[2].keys.push(iK(i, n.tempNightDay.y + n.tempDeviationNightDay.y)), t.temperature[3].keys.push(iK(i, n.tempNightDay.x)), t.temperature[4].keys.push(iK(i, n.tempNightDay.x + n.tempDeviationNightDay.x)), t.cloudiness[1].keys.push(iK(i, n.cloudAmount)), t.cloudiness[2].keys.push(iK(i, n.cloudAmount + n.cloudAmountDeviation)), t.cloudiness[3].keys.push(iK(i, n.cloudChance)), t.cloudiness[4].keys.push(iK(i, 100 * n.turbulence)), t.precipitation[1].keys.push(iK(i, n.precipitationAmount)), t.precipitation[2].keys.push(iK(i, n.precipitationAmount + n.precipitationAmountDeviation)), t.precipitation[3].keys.push(iK(i, n.precipitationChance)), t.precipitation[4].keys.push(iK(i, 100 * n.turbulence)), t.aurora[1].keys.push(iK(i, 100 * n.auroraAmount)), t.aurora[2].keys.push(iK(i, n.auroraChance)), t
                }), t)
            }
            return sK()
        }), [e]);
        X.add("game-ui/editor/widgets/fields/seasons-field/utils.ts", {
            get getSeasonProperty() {
                return tK
            },
            set getSeasonProperty(e) {
                tK = e
            },
            get makeSeasonPropertyCurve() {
                return nK
            },
            set makeSeasonPropertyCurve(e) {
                nK = e
            },
            get useCurvesForSeasonsData() {
                return aK
            },
            set useCurvesForSeasonsData(e) {
                aK = e
            }
        });
        var oK = e => {
            const t = e.props,
                n = aK(t),
                s = (({
                    parent: e,
                    path: t,
                    props: n
                }) => {
                    const s = (0, Y.useMemo)((() => {
                        const s = EA(e.path, t);
                        return {
                            onAddKeyframe: async t => UA(e.group, s, t),
                            onRemoveKeyframe: t => {
                                GA(e.group, s, t)
                            },
                            onUpdateSeasonProperty: async (t, i, a, o) => {
                                const r = n.seasons,
                                    [l, c] = tK(i, a).split("."),
                                    u = r[t];
                                let d = o.value;
                                if (l.includes("Deviation")) {
                                    const e = u[l.replace("Deviation", "")];
                                    d -= c && "object" == typeof e ? e[c] : e
                                }
                                "turbulence" !== l && "auroraAmount" !== l || (d /= 100);
                                const m = ((t < r.length - 1 ? r[t + 1].startTime : 1 + r[0].startTime) + u.startTime) / 2,
                                    h = {
                                        ...u,
                                        [l]: c ? {
                                            ...u[l],
                                            [c]: d
                                        } : d,
                                        startTime: u.startTime + (o.time - m)
                                    };
                                return BA(e.group, s, h)
                            }
                        }
                    }), [e.group, e.path, t, n]);
                    return s
                })(e);
            return (0, z.jsx)("div", {
                children: (0, z.jsx)(ZH, {
                    ...e.props,
                    ...s,
                    value: n,
                    seasons: t.seasons,
                    label: (0, z.jsx)(gu, {
                        value: bc("Climate settings")
                    })
                })
            })
        };
        X.add("game-ui/editor/widgets/fields/seasons-field/seasons-field.bound.tsx", {
            get updateSeasonProperty() {
                return updateSeasonProperty
            },
            set updateSeasonProperty(e) {
                updateSeasonProperty = e
            },
            get BoundSeasonsField() {
                return oK
            },
            set BoundSeasonsField(e) {
                oK = e
            }
        });
        var rK = ({
            label: e,
            value: t,
            disabled: n,
            tooltip: s,
            onChange: i
        }) => (0, z.jsx)(BD, {
            disabled: n,
            children: (0, z.jsx)(Tg, {
                tooltip: s && (0, z.jsx)(gu, {
                    value: s
                }),
                children: (0, z.jsxs)("div", {
                    className: FD.row,
                    children: [(0, z.jsx)("div", {
                        className: FD.label,
                        children: e
                    }), (0, z.jsx)(ox, {
                        checked: t,
                        disabled: n,
                        onChange: i,
                        className: FD.toggle
                    })]
                })
            })
        });
        X.add("game-ui/editor/widgets/fields/toggle-field.tsx", {
            get ToggleField() {
                return rK
            },
            set ToggleField(e) {
                rK = e
            }
        });
        var lK = e => (0, z.jsx)(cK, {
            ...e.props
        });
        const cK = ({
            value: e,
            hidden: t
        }) => t ? null : (0, z.jsx)(UD, {
            children: (0, z.jsx)(gu, {
                value: e
            })
        });
        X.add("game-ui/editor/widgets/fields/value-field.tsx", {
            get BoundLocalizedValueField() {
                return lK
            },
            set BoundLocalizedValueField(e) {
                lK = e
            }
        });
        let uK = {
            "popup-content": "popup-content_QLL",
            popupContent: "popup-content_QLL",
            "popup-content-scrollable": "popup-content-scrollable_clr",
            popupContentScrollable: "popup-content-scrollable_clr"
        };
        X.add("game-ui/editor/widgets/filter-menu/filter-menu.module.scss", {
            get classes() {
                return uK
            },
            set classes(e) {
                Object.assign(uK, e)
            }
        });
        const dK = uK;
        var mK = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = HA(e, t),
                    i = xA(_D, s),
                    a = xA(bD, s);
                return (0, z.jsx)(hK, {
                    availableFilters: n.availableFilters,
                    activeFilters: n.activeFilters,
                    onToggleFilter: i,
                    onClear: a
                })
            },
            hK = ({
                availableFilters: e,
                activeFilters: t,
                onToggleFilter: n,
                onClear: s
            }) => {
                const [i, a] = (0, Y.useState)(!1), o = pK(e, t), r = (0, Y.useMemo)((() => t.length > 0 ? t.join(", ") : (0, z.jsx)(Pc.Common.NONE, {})), [t]);
                return (0, z.jsx)(KH, {
                    label: (0, z.jsx)(Pc.Editor.FILTERS, {}),
                    value: r,
                    expanded: i,
                    onExpandedChange: a,
                    children: (0, z.jsxs)("div", {
                        className: dK.popupContent,
                        children: [(0, z.jsx)(ff, {
                            className: dK.popupContentScrollable,
                            children: o.map((e => (0, z.jsx)(gK, {
                                filter: e.filter,
                                active: e.active,
                                onToggle: n
                            }, e.filter)))
                        }), (0, z.jsx)(tF, {
                            onSelect: s,
                            children: (0, z.jsx)(Pc.Editor.CLEAR_ALL, {})
                        })]
                    })
                })
            };
        const gK = ({
                filter: e,
                active: t,
                onToggle: n
            }) => {
                const s = (0, Y.useCallback)((() => n(e, !t)), [t, e, n]);
                return (0, z.jsx)(rK, {
                    label: e,
                    value: t,
                    onChange: s
                })
            },
            pK = (e, t) => (0, Y.useMemo)((() => e.map((e => ({
                filter: e,
                active: t.includes(e)
            })))), [t, e]);
        X.add("game-ui/editor/widgets/filter-menu/filter-menu.tsx", {
            get BoundFilterMenu() {
                return mK
            },
            set BoundFilterMenu(e) {
                mK = e
            },
            get FilterMenu() {
                return hK
            },
            set FilterMenu(e) {
                hK = e
            }
        });
        let fK = {
            "virtual-list": "virtual-list_Amj",
            virtualList: "virtual-list_Amj",
            vertical: "vertical_RRQ",
            horizontal: "horizontal_QEG"
        };
        X.add("game-ui/common/scrolling/virtual-list/virtual-list.module.scss", {
            get classes() {
                return fK
            },
            set classes(e) {
                Object.assign(fK, e)
            }
        });
        const xK = fK;
        var vK = Y.forwardRef((function ({
            sizeProvider: e,
            direction: t = "vertical",
            controller: n,
            smooth: s,
            className: i,
            style: a,
            renderItem: o,
            onRenderedRangeChange: r
        }, l) {
            const c = (0, Y.useRef)(null),
                u = gd(l, c),
                {
                    list: d,
                    onScroll: m
                } = _K(c, e, t, void 0, o, r),
                h = "vertical" === t;
            return (0, z.jsx)(ff, {
                ref: u,
                vertical: h,
                horizontal: !h,
                controller: n,
                smooth: s,
                className: i,
                style: a,
                onScroll: m,
                children: d
            })
        }));

        function _K(e, t, n, s, i, a) {
            const o = hm(e, dm),
                r = Um(),
                l = o ?? r,
                c = "vertical" === n,
                u = c ? l.y : l.x,
                [d, m] = (0, Y.useState)(0),
                h = (0, Y.useMemo)((() => t.getRenderedRange(d, u)), [u, d, t]);
            (0, Y.useEffect)((() => {
                null != a && a(h.startIndex, h.endIndex)
            }), [a, h.endIndex, h.startIndex]);
            const g = (0, Y.useCallback)((() => {
                e.current && m(c ? e.current.scrollTop : e.current.scrollLeft)
            }), [e, c]);
            (0, Y.useEffect)((() => {
                let e = 0;
                return function t() {
                    g(), e = window.requestAnimationFrame(t)
                }(), () => window.cancelAnimationFrame(e)
            }), [g]);
            const p = (0, Y.useMemo)((() => {
                const e = [];
                for (let t = 0; t < h.endIndex - h.startIndex; t++) e[t] = i(h.startIndex + t, t);
                const n = t.getTotalSize() + "px",
                    a = h.offset + "px";
                return (0, z.jsx)("div", {
                    className: Zu()(xK.virtualList, s, c ? xK.vertical : xK.horizontal),
                    style: c ? {
                        height: n,
                        paddingTop: a
                    } : {
                        width: n,
                        paddingLeft: a
                    },
                    children: e
                })
            }), [h.endIndex, h.startIndex, h.offset, t, s, c, i]);
            return (0, Y.useMemo)((() => ({
                list: p,
                onScroll: g
            })), [p, g])
        }
        X.add("game-ui/common/scrolling/virtual-list/virtual-list.tsx", {
            get VirtualList() {
                return vK
            },
            set VirtualList(e) {
                vK = e
            },
            get useVirtualList() {
                return _K
            },
            set useVirtualList(e) {
                _K = e
            }
        });
        var bK = {
            getRenderedRange: () => ({
                offset: 0,
                size: 0,
                startIndex: 0,
                endIndex: 0
            }),
            getTotalSize: () => 0
        };

        function TK(e, t, n) {
            return (0, Y.useMemo)((() => ({
                getRenderedRange: (s, i) => {
                    const a = Od(Math.floor(s / e) - n, 0, t),
                        o = Od(Math.ceil((s + i) / e) + n, a, t);
                    return {
                        offset: e * a,
                        startIndex: a,
                        endIndex: o
                    }
                },
                getTotalSize: () => e * t
            })), [t, e, n])
        }

        function EK(e, t, n) {
            return (0, Y.useMemo)((() => {
                const s = function (e, t) {
                    const n = [];
                    let s = 0;
                    for (let i = 0; i < t; ++i) {
                        const t = s;
                        s += e(i), n.push({
                            x: t,
                            y: s
                        })
                    }
                    return n
                }((n => e(t[n], n)), t.length);
                return {
                    getRenderedRange: (e, i) => {
                        const a = Od(IK(s, e) - n, 0, t.length),
                            o = Od(IK(s, i + e) + n, a, t.length);
                        return {
                            offset: s[a].x,
                            startIndex: a,
                            endIndex: o
                        }
                    },
                    getTotalSize: () => s[s.length - 1].y
                }
            }), [t, n, e])
        }

        function IK(e, t) {
            for (let n = e.length - 1; n >= 0; --n)
                if (t >= e[n].x) return n;
            return 0
        }
        X.add("game-ui/common/scrolling/virtual-list/virtual-list-size-provider.ts", {
            get emptySizeProvider() {
                return bK
            },
            set emptySizeProvider(e) {
                bK = e
            },
            get useUniformSizeProvider() {
                return TK
            },
            set useUniformSizeProvider(e) {
                TK = e
            },
            get useArraySizeProvider() {
                return EK
            },
            set useArraySizeProvider(e) {
                EK = e
            }
        });
        let yK = {
            listItemHeight: "24rem",
            imageSize: "20rem",
            dirArrowSrc: "Media/Glyphs/ThickStrokeArrowRight.svg",
            "hierarchy-menu": "hierarchy-menu_Tm_ editor-widget_QQl",
            hierarchyMenu: "hierarchy-menu_Tm_ editor-widget_QQl",
            item: "item_qWj",
            "list-item": "list-item_eZG item_qWj",
            listItem: "list-item_eZG item_qWj",
            image: "image_IPH",
            name: "name_Mx8",
            "icon-container": "icon-container_OHi",
            iconContainer: "icon-container_OHi",
            "arrow-expanded": "arrow-expanded_Df1",
            arrowExpanded: "arrow-expanded_Df1",
            "placeholder-margin": "placeholder-margin_S8d",
            placeholderMargin: "placeholder-margin_S8d",
            "single-selection": "single-selection_s_l",
            singleSelection: "single-selection_s_l"
        };
        X.add("game-ui/editor/widgets/hierarchy-menu/hierarchy-menu.module.scss", {
            get classes() {
                return yK
            },
            set classes(e) {
                Object.assign(yK, e)
            }
        });
        const jK = yK;
        var SK, CK = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = HA(e, t),
                    i = xA(TD, s),
                    a = xA(ED, s),
                    o = xA(ID, s);
                return (0, z.jsx)(NK, {
                    ...n,
                    onSetExpanded: i,
                    onSelect: a,
                    onRenderedRangeChange: o
                })
            },
            NK = ({
                viewport: e,
                flex: t,
                visibleCount: n,
                onSelect: s,
                onSetExpanded: i,
                singleSelection: a,
                onRenderedRangeChange: o
            }) => {
                const r = TK(Vm(jK.listItemHeight), n, 10),
                    l = NF(t),
                    c = (0, Y.useCallback)(((t, n) => {
                        if (n < 0 || n >= e.length) return null;
                        const o = e[n];
                        return (0, z.jsx)(wK, {
                            ...o,
                            viewportIndex: n,
                            singleSelection: a,
                            onSelect: s,
                            onSetExpanded: i
                        }, t)
                    }), [s, i, a, e]);
                return (0, z.jsx)(vK, {
                    style: l,
                    className: jK.hierarchyMenu,
                    sizeProvider: r,
                    renderItem: c,
                    onRenderedRangeChange: o
                })
            };
        ! function (e) {
            e[e.None = 0] = "None", e[e.Icon = 1] = "Icon", e[e.ExpandArrow = 2] = "ExpandArrow"
        }(SK || (SK = {}));
        const wK = ({
                displayName: e,
                icon: t,
                tooltip: n,
                level: s,
                selectable: i,
                viewportIndex: a,
                selected: o,
                expandable: r,
                onSelect: l,
                expanded: c,
                onSetExpanded: u,
                singleSelection: d
            }) => {
                const m = (0, Y.useCallback)((() => {
                        r && u && u(a, !c)
                    }), [r, c, u, a]),
                    h = (0, Y.useCallback)((() => {
                        !i || !l || d && o || l(a, !o)
                    }), [i, l, d, o, a]),
                    g = r ? SK.ExpandArrow : Vr(t) ? SK.None : SK.Icon,
                    p = (0, Y.useMemo)((() => ({
                        [c ? "Collapse Group" : "Expand Group"]: r ? m : null
                    })), [c, r, m]),
                    f = (0, z.jsxs)(Gp, {
                        style: {
                            "--level": s
                        },
                        className: Zu()(jK.listItem, d && jK.singleSelection),
                        onSelect: h,
                        selected: o,
                        children: [(0, z.jsx)("div", {
                            className: Zu()(jK.name, g === SK.None && jK.placeholderMargin),
                            children: (0, z.jsx)(gu, {
                                value: e
                            })
                        }), g === SK.Icon ? (0, z.jsx)("img", {
                            src: t,
                            className: jK.image
                        }) : null, g === SK.ExpandArrow ? (0, z.jsx)(OK, {
                            expanded: c,
                            onSelect: m
                        }) : null]
                    });
                return (0, z.jsx)(Ag, {
                    actions: p,
                    children: null != n ? (0, z.jsx)(Tg, {
                        tooltip: (0, z.jsx)(gu, {
                            value: n
                        }),
                        children: f
                    }) : f
                })
            },
            OK = ({
                expanded: e,
                onSelect: t
            }) => (0, z.jsx)("div", {
                className: jK.iconContainer,
                children: (0, z.jsx)("img", {
                    src: jK.dirArrowSrc,
                    className: Zu()(jK.image, e && jK.arrowExpanded),
                    onClick: t
                })
            });
        X.add("game-ui/editor/widgets/hierarchy-menu/hierarchy-menu.tsx", {
            get BoundHierarchyMenu() {
                return CK
            },
            set BoundHierarchyMenu(e) {
                CK = e
            },
            get HierarchyMenu() {
                return NK
            },
            set HierarchyMenu(e) {
                NK = e
            }
        });
        let PK = {
            "image-field": "image-field_PPC",
            imageField: "image-field_PPC",
            label: "label_dKE",
            "image-container": "image-container_jpQ",
            imageContainer: "image-container_jpQ",
            image: "image_xoS"
        };
        X.add("game-ui/editor/widgets/image/image-field.module.scss", {
            get classes() {
                return PK
            },
            set classes(e) {
                Object.assign(PK, e)
            }
        });
        const LK = PK;
        var AK = e => (0, z.jsx)(MK, {
                ...e.props
            }),
            MK = ({
                uri: e,
                label: t,
                tooltip: n
            }) => (0, z.jsx)(Tg, {
                tooltip: n && (0, z.jsx)(gu, {
                    value: n
                }),
                children: (0, z.jsxs)("div", {
                    className: LK.imageField,
                    children: [(0, z.jsx)("div", {
                        className: LK.label,
                        children: (0, z.jsx)(gu, {
                            value: t
                        })
                    }), (0, z.jsx)("div", {
                        className: LK.imageContainer,
                        children: (0, z.jsx)("img", {
                            src: e,
                            className: LK.image
                        })
                    })]
                })
            });

        function RK(e, t) {
            const [n, s] = (0, Y.useState)(!1);
            return (0, Y.useEffect)((() => {
                const t = t => {
                    t.button === e && s(!1)
                };
                return window.addEventListener("mouseup", t), () => window.removeEventListener("mouseup", t)
            }), [e]), (0, Y.useMemo)((() => null != t ? {
                mouseDown: n,
                onMouseDown: t => {
                    t.button === e && s(!0)
                },
                onMouseUp: i => {
                    n && i.button === e && (s(!1), t(i))
                }
            } : {
                mouseDown: n
            }), [e, t, n])
        }
        X.add("game-ui/editor/widgets/image/image-field.tsx", {
            get BoundImageField() {
                return AK
            },
            set BoundImageField(e) {
                AK = e
            },
            get ImageField() {
                return MK
            },
            set ImageField(e) {
                MK = e
            }
        }), X.add("game-ui/common/hooks/use-secondary-click.tsx", {
            get useSecondaryClick() {
                return RK
            },
            set useSecondaryClick(e) {
                RK = e
            }
        });
        let kK = {
            "theme-icon": "theme-icon_YTM",
            themeIcon: "theme-icon_YTM",
            icon: "icon_QMC"
        };
        X.add("game-ui/common/image/theme-icon.module.scss", {
            get classes() {
                return kK
            },
            set classes(e) {
                Object.assign(kK, e)
            }
        });
        const DK = kK;
        var FK = ({
            src: e,
            className: t
        }) => (0, z.jsx)("div", {
            className: Zu()(DK.themeIcon, t),
            children: (0, z.jsx)("img", {
                src: e,
                className: DK.icon
            })
        });
        X.add("game-ui/common/image/theme-icon.tsx", {
            get ThemeIcon() {
                return FK
            },
            set ThemeIcon(e) {
                FK = e
            }
        });
        let UK = {
            "full-width-digits": "full-width-digits_dns",
            fullWidthDigits: "full-width-digits_dns",
            digits: "digits_a1g",
            blind: "blind_u0R"
        };
        X.add("game-ui/common/text/full-width-digits/full-width-digits.module.scss", {
            get classes() {
                return UK
            },
            set classes(e) {
                Object.assign(UK, e)
            }
        });
        const BK = UK,
            GK = /([\d:-]+)|([^\d:-]+)/g,
            VK = /\d/g;
        var HK = ({
            className: e,
            children: t
        }) => {
            const n = oc(t),
                s = (0, Y.useMemo)((() => n.match(GK)?.map(((e, t) => VK.test(e) ? (0, z.jsxs)("div", {
                    className: BK.digits,
                    children: [e, (0, z.jsx)("div", {
                        className: BK.blind,
                        children: e.replace(VK, "0")
                    })]
                }, t) : e))), [n]);
            return (0, z.jsx)("div", {
                className: Zu()(BK.fullWidthDigits, e),
                children: s
            })
        };
        X.add("game-ui/common/text/full-width-digits/full-width-digits.tsx", {
            get FullWidthDigits() {
                return HK
            },
            set FullWidthDigits(e) {
                HK = e
            }
        });
        let KK = {
            item: "item_OsC",
            locked: "locked_Yoi",
            "theme-icon": "theme-icon_yUd",
            themeIcon: "theme-icon_yUd",
            title: "title_qyE",
            "population-value": "population-value_yQT",
            populationValue: "population-value_yQT",
            "population-icon": "population-icon_PF9",
            populationIcon: "population-icon_PF9",
            date: "date_OyK",
            "state-icon": "state-icon_YfD",
            stateIcon: "state-icon_YfD",
            "title-inner": "title-inner_io2",
            titleInner: "title-inner_io2",
            space: "space_Mad",
            tooltip: "tooltip_cZx",
            hint: "hint_s2u"
        };
        X.add("game-ui/menu/components/shared/save-item/save-item.module.scss", {
            get classes() {
                return KK
            },
            set classes(e) {
                Object.assign(KK, e)
            }
        });
        const WK = KK;
        var zK = ({
            save: e,
            selected: t,
            locked: n,
            tooltipsInactive: s,
            inputAction: i,
            onClick: a,
            onDoubleClick: o,
            onSelect: r
        }) => {
            const l = (0, Y.useCallback)((() => a(e)), [e, a]),
                c = (0, Y.useCallback)((() => o?.(e)), [e, o]),
                u = sl(fk).find((t => t.id === e.theme)),
                d = $K(e.cloudTarget, e.isReadonly),
                m = YK(e.cloudTarget),
                [h, g] = (0, Y.useState)(!1),
                p = (0, Y.useCallback)((() => r && r(e)), [r, e]);
            return (0, z.jsx)(Ah, {
                onFocusChange: g,
                children: (0, z.jsxs)(Gp, {
                    disableHint: !0,
                    focusKey: e.id,
                    selected: t,
                    className: Zu()(WK.item, n && WK.locked),
                    onClick: l,
                    onDoubleClick: o && c,
                    onSelect: r && p,
                    children: [(0, z.jsx)(Pf, {
                        action: i,
                        active: h,
                        className: WK.hint
                    }), (0, z.jsx)(FK, {
                        src: u?.icon ?? "",
                        className: WK.themeIcon
                    }), null != d && (0, z.jsx)(ZB, {
                        tooltip: qK(e),
                        disabled: s,
                        className: WK.tooltip,
                        children: (0, z.jsx)(Sy, {
                            src: d,
                            className: WK.stateIcon,
                            tinted: m
                        })
                    }), (0, z.jsx)("div", {
                        className: WK.title,
                        children: (0, z.jsx)(ZB, {
                            tooltip: XK(e.path),
                            disabled: s,
                            className: WK.tooltip,
                            style: {
                                maxWidth: screen.availWidth
                            },
                            children: (0, z.jsx)("div", {
                                className: WK.titleInner,
                                children: e.displayName
                            })
                        })
                    }), (0, z.jsx)("div", {
                        className: WK.populationValue,
                        children: (0, z.jsx)(Gc, {
                            value: e.population,
                            unit: Oc.Integer
                        })
                    }), (0, z.jsx)(ef, {
                        src: "Media/Game/Icons/Citizen.svg",
                        className: WK.populationIcon
                    }), (0, z.jsx)(HK, {
                        className: WK.date,
                        children: (0, z.jsx)(Ru, {
                            value: e.lastModified
                        })
                    })]
                })
            })
        };

        function YK(e) {
            return "ParadoxMods" !== e
        }

        function $K(e, t) {
            return "ParadoxMods" === e ? "Media/Glyphs/ParadoxModsCloud.svg" : "PdxSdk" === e ? "Media/Glyphs/PDXCloud.svg" : "Steamworks" === e ? "Media/Glyphs/SteamCloud.svg" : "Gdk" === e ? "Media/Glyphs/GdkCloud.svg" : t ? "Media/Glyphs/Lock.svg" : null
        }

        function qK(e) {
            return "ParadoxMods" === e.cloudTarget ? (0, z.jsx)(Pc.Menu.PARADOXMODS_SAVE, {}) : "PdxSdk" === e.cloudTarget ? (0, z.jsx)(Pc.Menu.PARADOXCLOUD_SAVE, {}) : "Steamworks" === e.cloudTarget ? (0, z.jsx)(Pc.Menu.STEAMCLOUD_SAVE, {}) : "Gdk" === e.cloudTarget ? (0, z.jsx)(Pc.Menu.GDKCLOUD_SAVE, {}) : e.isReadonly ? (0, z.jsx)(Pc.Menu.READONLY_SAVE, {}) : null
        }

        function XK(e) {
            return e?.replaceAll(/([/\\])/g, "$1​")
        }
        X.add("game-ui/menu/components/shared/save-item/save-item.tsx", {
            get SaveItem() {
                return zK
            },
            set SaveItem(e) {
                zK = e
            },
            get getStateTintedIcon() {
                return YK
            },
            set getStateTintedIcon(e) {
                YK = e
            },
            get getStateIcon() {
                return $K
            },
            set getStateIcon(e) {
                $K = e
            },
            get withZeroSpaces() {
                return XK
            },
            set withZeroSpaces(e) {
                XK = e
            }
        });
        let QK = {
            listItemHeight: "24rem",
            horizontalPadding: "26rem",
            defaultImageSrc: "Media/Editor/DefaultObject.svg",
            dirArrowSrc: "Media/Glyphs/ThickStrokeArrowRight.svg",
            "item-picker": "item-picker_ORP editor-widget_QQl",
            itemPicker: "item-picker_ORP editor-widget_QQl",
            item: "item_H00",
            "item-container": "item-container_NoI",
            itemContainer: "item-container_NoI",
            "grid-mode": "grid-mode_bUv",
            gridMode: "grid-mode_bUv",
            "favorite-icon": "favorite-icon_bgV",
            favoriteIcon: "favorite-icon_bgV",
            favorite: "favorite_pLV",
            "list-item": "list-item_qRg item_H00",
            listItem: "list-item_qRg item_H00",
            image: "image_scT",
            badge: "badge_H2J",
            name: "name_u39",
            "dir-arrow": "dir-arrow_DVY",
            dirArrow: "dir-arrow_DVY",
            "grid-row": "grid-row_Uxw",
            gridRow: "grid-row_Uxw",
            "grid-item": "grid-item_qEa item_H00",
            gridItem: "grid-item_qEa item_H00",
            "badge-padding": "badge-padding_KbI",
            badgePadding: "badge-padding_KbI"
        };
        X.add("game-ui/editor/widgets/item-picker/item-picker.module.scss", {
            get classes() {
                return QK
            },
            set classes(e) {
                Object.assign(QK, e)
            }
        });
        const ZK = QK;
        var JK = ({
            parent: e,
            path: t,
            props: n
        }) => {
            const s = HA(e, t),
                i = (0, Y.useMemo)((() => ({
                    length: n.length,
                    get: e => {
                        const t = e - n.visibleStartIndex;
                        return t >= 0 && t < n.visibleItems.length ? n.visibleItems[t] : null
                    }
                })), [n.length, n.visibleItems, n.visibleStartIndex]),
                a = (0, Y.useCallback)(((e, t) => {
                    const i = e - e % 64,
                        a = Math.min(t - t % 64 + 64, n.length);
                    mD(s, i, a)
                }), [s, n.length]),
                o = xA(hD, s),
                r = (0, Y.useCallback)(((e, t) => {
                    gD(s, e, t), e === n.selectedIndex && l.current && l.current.scrollToSelected()
                }), [s, n.selectedIndex]),
                l = (0, Y.useRef)(null),
                c = (0, Y.useContext)(UI);
            (0, Y.useLayoutEffect)((() => {
                c && l.current && l.current.scrollToSelected()
            }), [n.columnCount, n.length, c]);
            const u = NF(n.flex);
            return (0, z.jsx)(tW, {
                ref: l,
                selectedIndex: n.selectedIndex,
                columnCount: n.columnCount,
                hasImages: n.hasImages,
                data: i,
                style: u,
                onRenderedRangeChange: a,
                onSelect: o,
                onToggleFavorite: n.hasFavorites ? r : void 0,
                selectOnFocus: n.selectOnFocus
            })
        };
        const eW = e => e.replace(/\\/gm, `/${hu}`);
        var tW = Y.forwardRef((function ({
            focusKey: e,
            selectedIndex: t,
            columnCount: n,
            hasImages: s = !0,
            data: i,
            className: a,
            style: o,
            onRenderedRangeChange: r,
            onSelect: l,
            onToggleFavorite: c,
            selectOnFocus: u = !0
        }, d) {
            const m = (0, Y.useRef)(null),
                h = PE(),
                g = (0, Y.useCallback)((e => {
                    u && "number" == typeof e && l(e)
                }), [l, u]),
                p = 1 === n,
                f = Vm(ZK.listItemHeight),
                x = TK(f, i.length, 2),
                v = (0, Y.useCallback)(((e, n) => {
                    const a = i.get(e);
                    return (0, z.jsx)(nW, {
                        index: e,
                        name: null != a ? (0, z.jsx)(gu, {
                            value: a.displayName
                        }) : " ",
                        image: a?.image ?? null,
                        tinted: a?.tinted ?? !1,
                        hasImage: s,
                        directory: a?.directory ?? !1,
                        favorite: a?.favorite ?? !1,
                        selected: t === e,
                        className: ZK.listItem,
                        onSelect: l,
                        onToggleFavorite: c,
                        tooltip: (a && a.tooltip && (0, z.jsx)(gu, {
                            value: a.tooltip,
                            transformer: eW
                        })) ?? null,
                        listMode: !0,
                        badge: a?.badge ?? null
                    }, n)
                }), [i, s, t, l, c]),
                _ = hm(m),
                b = Vm(ZK.horizontalPadding),
                T = (null != _ ? _.x - b : n) / n,
                E = null != _ ? Math.ceil(i.length / n) : 0,
                I = TK(T, E, 2),
                y = (0, Y.useCallback)(((e, a) => {
                    const o = e * n,
                        r = Math.min((e + 1) * n, i.length);
                    return (0, z.jsx)("div", {
                        className: ZK.gridRow,
                        style: {
                            "--itemSize": T + "px"
                        },
                        children: [...Array(r - o).keys()].map((e => {
                            const n = o + e,
                                a = i.get(n);
                            return (0, z.jsx)(nW, {
                                index: n,
                                name: null != a ? (0, z.jsx)(gu, {
                                    value: a.displayName
                                }) : " ",
                                image: a?.image ?? null,
                                tinted: a?.tinted ?? !1,
                                hasImage: s,
                                directory: a?.directory ?? !1,
                                favorite: a?.favorite ?? !1,
                                selected: t === n,
                                className: ZK.gridItem,
                                onSelect: l,
                                onToggleFavorite: c,
                                tooltip: (a && a.tooltip && (0, z.jsx)(gu, {
                                    value: a.tooltip
                                })) ?? null,
                                listMode: !1,
                                badge: a?.badge ?? null
                            }, e)
                        }))
                    }, a)
                }), [n, i, T, s, t, l, c]),
                j = (0, Y.useCallback)(((e, t) => {
                    r && r(e * n, t * n)
                }), [n, r]),
                S = (0, Y.useRef)(0);
            S.current = -1 === t || null === _ ? 0 : p ? f * (t + .5) - _.y / 2 : T * (Math.floor(t / n) + .5) - _.y / 2;
            const C = (0, Y.useRef)(0);
            return (0, Y.useImperativeHandle)(d, (() => ({
                scrollToSelected: () => {
                    window.cancelAnimationFrame(C.current), h.scrollTo(0, S.current), C.current = window.requestAnimationFrame((() => {
                        h.scrollTo(0, S.current), C.current = window.requestAnimationFrame((() => {
                            h.scrollTo(0, S.current)
                        }))
                    }))
                }
            }))), (0, Y.useEffect)((() => () => window.cancelAnimationFrame(C.current)), []), (0, z.jsx)(tp, {
                focusKey: e,
                initialFocused: t,
                onChange: g,
                children: (0, z.jsx)(vK, {
                    ref: m,
                    controller: h,
                    smooth: !1,
                    className: Zu()(ZK.itemPicker, a),
                    style: o,
                    sizeProvider: null != _ ? p ? x : I : bK,
                    renderItem: p ? v : y,
                    onRenderedRangeChange: j
                })
            })
        }));
        const nW = ({
            index: e,
            name: t,
            image: n,
            tinted: s,
            hasImage: i,
            directory: a,
            favorite: o,
            selected: r,
            className: l,
            onSelect: c,
            onToggleFavorite: u,
            tooltip: d,
            listMode: m,
            badge: h
        }) => {
            const g = (0, Y.useCallback)((() => c(e)), [e, c]),
                p = (0, Y.useMemo)((() => null != u ? () => {
                    u(e, !o), lp(rp.selectToggle)
                } : void 0), [e, o, u]),
                {
                    onMouseUp: f,
                    onMouseDown: x
                } = RK(2, p),
                [v, _] = (0, Y.useMemo)((() => {
                    if (null !== h) {
                        const e = $K(h, !1);
                        if (null !== e) return [e, YK(h)];
                        if (h.indexOf("://") >= 0) return [h, !1]
                    }
                    return [null, !1]
                }), [h]);
            return (0, z.jsx)(Tg, {
                tooltip: d,
                children: (0, z.jsxs)("div", {
                    className: Zu()(ZK.itemContainer),
                    children: [(0, z.jsxs)(Gp, {
                        focusKey: e,
                        selected: r,
                        className: Zu()(l, {
                            [ZK.favorite]: o
                        }),
                        onSelect: g,
                        onMouseDown: x,
                        onMouseUp: f,
                        children: [i && (0, z.jsx)(Sy, {
                            src: n || ZK.defaultImageSrc,
                            className: ZK.image,
                            tinted: s
                        }), v && (0, z.jsx)(Sy, {
                            src: v,
                            className: ZK.badge,
                            tinted: _
                        }), (0, z.jsx)("div", {
                            className: Zu()(ZK.name, {
                                [ZK.badgePadding]: v
                            }),
                            children: t
                        }), a && (0, z.jsx)(ef, {
                            src: ZK.dirArrowSrc,
                            className: ZK.dirArrow
                        })]
                    }), null != u && (0, z.jsx)(ef, {
                        className: Zu()(l, ZK.favoriteIcon, {
                            [ZK.gridMode]: !m,
                            [ZK.favorite]: o
                        }),
                        onClick: p,
                        src: o ? "Media/Glyphs/StarFilled.svg" : "Media/Glyphs/StarOutline.svg"
                    })]
                })
            })
        };
        X.add("game-ui/editor/widgets/item-picker/item-picker.tsx", {
            get BoundItemPicker() {
                return JK
            },
            set BoundItemPicker(e) {
                JK = e
            },
            get ItemPicker() {
                return tW
            },
            set ItemPicker(e) {
                tW = e
            }
        });
        let sW = {
            "item-picker-footer": "item-picker-footer_Hi4 editor-widget_QQl",
            itemPickerFooter: "item-picker-footer_Hi4 editor-widget_QQl",
            summary: "summary_gnF",
            slider: "slider_iLE"
        };
        X.add("game-ui/editor/widgets/item-picker-footer/item-picker-footer.module.scss", {
            get classes() {
                return sW
            },
            set classes(e) {
                Object.assign(sW, e)
            }
        });
        const iW = sW;
        var aW = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = xA(SA, HA(e, t));
                return (0, z.jsx)(oW, {
                    length: n.length,
                    columnCount: n.columnCount,
                    onColumnCountChange: s
                })
            },
            oW = ({
                length: e,
                columnCount: t,
                onColumnCountChange: n
            }) => {
                const s = (0, Y.useCallback)((e => n(e <= 10 ? e : 1)), [n]);
                return (0, z.jsx)(BD, {
                    children: (0, z.jsxs)("div", {
                        className: iW.itemPickerFooter,
                        children: [(0, z.jsx)("div", {
                            className: iW.summary,
                            children: (0, z.jsx)(Pc.Editor.ELEMENT_COUNT, {
                                COUNT: e.toString()
                            })
                        }), (0, z.jsx)(Np, {
                            children: (0, z.jsx)(CM, {
                                value: 1 === t ? 11 : t,
                                start: 11,
                                end: 4,
                                theme: gV,
                                className: Zu()(gV.compact, iW.slider),
                                valueTransformer: wM,
                                onChange: s,
                                gamepadStep: 1
                            })
                        })]
                    })
                })
            };
        X.add("game-ui/editor/widgets/item-picker-footer/item-picker-footer.tsx", {
            get BoundItemPickerFooter() {
                return aW
            },
            set BoundItemPickerFooter(e) {
                aW = e
            },
            get ItemPickerFooter() {
                return oW
            },
            set ItemPickerFooter(e) {
                oW = e
            }
        });
        let rW = {
            summary: "summary_sOH",
            section: "section_KBF",
            controls: "controls_kKZ",
            control: "control_p7u",
            children: "children_oyd section_KBF",
            "list-item": "list-item_zT4",
            listItem: "list-item_zT4",
            header: "header_jkI",
            label: "label_Mi4",
            toggle: "toggle_IOi",
            action: "action_AoQ",
            "toggle-label": "toggle-label_UK9",
            toggleLabel: "toggle-label_UK9"
        };
        X.add("game-ui/editor/widgets/list/list.module.scss", {
            get classes() {
                return rW
            },
            set classes(e) {
                Object.assign(rW, e)
            }
        });
        const lW = rW;
        var cW = ({
            parent: e,
            path: t,
            props: n,
            children: s
        }) => {
            const i = HA(e, t),
                a = xA(wA, i),
                o = xA(AA, i),
                r = xA(CA, i),
                l = xA(MA, i);
            return (0, z.jsx)(gW, {
                expanded: n.expanded,
                tooltip: n.tooltip,
                label: (0, z.jsx)(gu, {
                    value: n.displayName
                }),
                length: n.length,
                currentPageIndex: n.currentPageIndex,
                pageCount: n.pageCount,
                onAddItem: n.resizable ? a : void 0,
                onClear: n.resizable ? o : void 0,
                onExpandedChange: r,
                onCurrentPageChange: l,
                disabled: n.disabled,
                children: s.map(((e, t) => e.props.__Type === _A.ExpandableGroup ? (0, z.jsx)(dW, {
                    parent: i,
                    index: n.childStartIndex + t,
                    length: n.length,
                    resizable: n.resizable,
                    sortable: n.sortable,
                    data: e,
                    disabled: n.disabled
                }, n.childStartIndex + t) : (0, z.jsx)(uW, {
                    parent: i,
                    index: n.childStartIndex + t,
                    length: n.length,
                    resizable: n.resizable,
                    sortable: n.sortable,
                    data: e,
                    disabled: n.disabled
                }, n.childStartIndex + t)))
            })
        };
        const uW = ({
                parent: e,
                index: t,
                length: n,
                resizable: s,
                sortable: i,
                data: a,
                disabled: o
            }) => {
                const r = (0, Y.useContext)(JA),
                    l = mW(e, t, i, s);
                return (0, z.jsx)(pW, {
                    focusKey: t,
                    first: 0 === t,
                    last: t === n - 1,
                    ...l,
                    onExpandedChange: void 0,
                    disabled: o,
                    children: (0, z.jsx)(QA, {
                        parent: e,
                        components: r,
                        data: a
                    })
                })
            },
            dW = ({
                parent: e,
                index: t,
                length: n,
                resizable: s,
                sortable: i,
                data: a,
                disabled: o
            }) => {
                const r = mW(e, t, i, s),
                    l = HA(e, a.path),
                    c = (0, Y.useContext)(JA),
                    u = xA(CA, l);
                return (0, z.jsx)(pW, {
                    focusKey: t,
                    label: (0, z.jsx)(gu, {
                        value: a.props.displayName
                    }),
                    first: 0 === t,
                    last: t === n - 1,
                    expanded: a.props.expanded,
                    ...r,
                    onExpandedChange: u,
                    disabled: o,
                    children: (0, z.jsx)(ZA, {
                        parent: l,
                        components: c,
                        data: a.children
                    })
                })
            };

        function mW(e, t, n, s) {
            return (0, Y.useMemo)((() => ({
                onMoveUp: n ? () => PA(e, t, t - 1) : void 0,
                onMoveDown: n ? () => PA(e, t, t + 1) : void 0,
                onDuplicate: s ? () => OA(e, t) : void 0,
                onDelete: s ? () => LA(e, t) : void 0
            })), [e, t, n, s])
        }
        var hW = ({
                label: e,
                disabled: t,
                children: n,
                onAddItem: s,
                onClear: i
            }) => {
                const a = Y.Children.count(n);
                return (0, z.jsxs)(UD, {
                    disabled: t,
                    children: [(0, z.jsxs)("div", {
                        className: FD.row,
                        children: [(0, z.jsx)("div", {
                            className: FD.label,
                            children: e
                        }), (0, z.jsx)("div", {
                            className: lW.summary,
                            children: (0, z.jsx)(Pc.Editor.LIST_COUNT, {
                                COUNT: (0, z.jsx)(Gc, {
                                    value: a,
                                    unit: Oc.Integer
                                })
                            })
                        })]
                    }), a > 0 && (0, z.jsx)("div", {
                        className: lW.children,
                        children: n
                    }), (null != s || null != i) && (0, z.jsxs)("div", {
                        className: lW.controls,
                        children: [null != s && (0, z.jsx)(Gp, {
                            disabled: t,
                            theme: wD,
                            onSelect: s,
                            children: (0, z.jsx)(Pc.Editor.LIST_ADD_ITEM, {})
                        }), null != i && (0, z.jsx)(Gp, {
                            disabled: t || 0 === a,
                            theme: wD,
                            onSelect: i,
                            children: (0, z.jsx)(Pc.Editor.CLEAR, {})
                        })]
                    })]
                })
            },
            gW = ({
                label: e,
                expanded: t,
                tooltip: n,
                length: s,
                currentPageIndex: i,
                pageCount: a,
                disabled: o,
                children: r,
                onAddItem: l,
                onClear: c,
                onExpandedChange: u,
                onCurrentPageChange: d
            }) => {
                const m = (0, Y.useCallback)((() => d(i - 1)), [i, d]),
                    h = (0, Y.useCallback)((() => d(i + 1)), [i, d]),
                    g = t && a > 1 ? (0, z.jsx)(Pc.Editor.LIST_PAGE_COUNT, {
                        PAGE: bu(i + 1),
                        PAGE_COUNT: bu(a),
                        COUNT: bu(s)
                    }) : (0, z.jsx)(Pc.Editor.LIST_COUNT, {
                        COUNT: bu(s)
                    });
                return (0, z.jsxs)(GD, {
                    label: e,
                    tooltip: n,
                    summary: g,
                    expanded: t,
                    disabled: o,
                    onExpandedChange: u,
                    children: [a > 1 && (0, z.jsxs)("div", {
                        className: lW.controls,
                        children: [(0, z.jsx)(Gp, {
                            disabled: 0 === i,
                            theme: wD,
                            className: lW.control,
                            onSelect: m,
                            children: (0, z.jsx)(Pc.Editor.PREVIOUS_PAGE, {})
                        }), (0, z.jsx)(Gp, {
                            disabled: i >= a - 1,
                            theme: wD,
                            className: lW.control,
                            onSelect: h,
                            children: (0, z.jsx)(Pc.Editor.NEXT_PAGE, {})
                        })]
                    }), s > 0 && (0, z.jsx)("div", {
                        className: lW.children,
                        children: r
                    }), (null != l || null != c) && (0, z.jsxs)("div", {
                        className: lW.controls,
                        children: [null != l && (0, z.jsx)(Gp, {
                            disabled: o,
                            theme: wD,
                            className: lW.control,
                            onSelect: l,
                            children: (0, z.jsx)(Pc.Editor.LIST_ADD_ITEM, {})
                        }), null != c && (0, z.jsx)(Gp, {
                            disabled: o || 0 === s,
                            theme: wD,
                            className: lW.control,
                            onSelect: c,
                            children: (0, z.jsx)(Pc.Editor.CLEAR, {})
                        })]
                    })]
                })
            },
            pW = ({
                focusKey: e,
                label: t,
                disabled: n,
                first: s,
                last: i,
                expanded: a = !0,
                children: o,
                onMoveUp: r,
                onMoveDown: l,
                onDuplicate: c,
                onDelete: u,
                onExpandedChange: d
            }) => {
                const m = null != d,
                    h = (0, Y.useCallback)((() => {
                        null != d && d(!a)
                    }), [a, d]);
                return (0, z.jsxs)("div", {
                    className: lW.listItem,
                    children: [(0, z.jsx)("div", {
                        className: lW.header,
                        children: (0, z.jsxs)(tp, {
                            focusKey: e,
                            direction: Rg.Horizontal,
                            children: [m ? (0, z.jsx)(sf, {
                                tinted: !0,
                                src: a ? "Media/Glyphs/ThickStrokeArrowDown.svg" : "Media/Glyphs/ThickStrokeArrowRight.svg",
                                className: Zu()(lW.toggle, a && lW.expanded),
                                onSelect: h,
                                children: (0, z.jsx)("div", {
                                    className: lW.toggleLabel,
                                    children: t
                                })
                            }) : (0, z.jsx)("div", {
                                className: lW.label,
                                children: t
                            }), r && (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.Editor.LIST_ITEM_MOVE_UP, {}),
                                children: (0, z.jsx)(sf, {
                                    tinted: !0,
                                    src: "Media/Glyphs/StrokeArrowUp.svg",
                                    disabled: s || n,
                                    className: lW.action,
                                    onSelect: r
                                })
                            }), l && (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.Editor.LIST_ITEM_MOVE_DOWN, {}),
                                children: (0, z.jsx)(sf, {
                                    tinted: !0,
                                    src: "Media/Glyphs/StrokeArrowDown.svg",
                                    disabled: i || n,
                                    className: lW.action,
                                    onSelect: l
                                })
                            }), c && (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.Editor.LIST_ITEM_DUPLICATE, {}),
                                children: (0, z.jsx)(sf, {
                                    tinted: !0,
                                    src: "Media/Glyphs/Copy.svg",
                                    disabled: n,
                                    className: lW.action,
                                    onSelect: c
                                })
                            }), u && (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.Editor.LIST_ITEM_DELETE, {}),
                                children: (0, z.jsx)(sf, {
                                    tinted: !0,
                                    src: "Media/Glyphs/Trash.svg",
                                    disabled: n,
                                    className: lW.action,
                                    onSelect: u
                                })
                            })]
                        })
                    }), o]
                })
            };
        X.add("game-ui/editor/widgets/list/list.tsx", {
            get BoundPagedList() {
                return cW
            },
            set BoundPagedList(e) {
                cW = e
            },
            get EditorList() {
                return hW
            },
            set EditorList(e) {
                hW = e
            },
            get EditorPagedList() {
                return gW
            },
            set EditorPagedList(e) {
                gW = e
            },
            get EditorListItem() {
                return pW
            },
            set EditorListItem(e) {
                pW = e
            }
        });
        let fW = {
            "dropdown-toggle": "dropdown-toggle_ODx dropdown-toggle_prl",
            dropdownToggle: "dropdown-toggle_ODx dropdown-toggle_prl",
            indicator: "indicator_JII",
            "dropdown-menu": "dropdown-menu_xq2 dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_xq2 dropdown-menu_Swd",
            "dropdown-item": "dropdown-item_R_l undefined",
            dropdownItem: "dropdown-item_R_l undefined"
        };
        X.add("game-ui/game/themes/game-dropdown.module.scss", {
            get classes() {
                return fW
            },
            set classes(e) {
                Object.assign(fW, e)
            }
        });
        const xW = fW;
        let vW = {
            dropdown: "dropdown_zWC",
            item: "item_Bmu",
            thumb: "thumb_eC2",
            label: "label_jXx",
            hint: "hint_hNH",
            "pad-left": "pad-left_jYb",
            padLeft: "pad-left_jYb",
            "dropdown-gamepad": "dropdown-gamepad_HFi",
            dropdownGamepad: "dropdown-gamepad_HFi",
            "pad-right": "pad-right_o6g",
            padRight: "pad-right_o6g",
            "pad-thumbnail": "pad-thumbnail_pWJ",
            padThumbnail: "pad-thumbnail_pWJ"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/select-vehicles-section.module.scss", {
            get classes() {
                return vW
            },
            set classes(e) {
                Object.assign(vW, e)
            }
        });
        const _W = vW;
        var bW = {
            ...Bp,
            hover: null,
            focus: null
        };

        function TW(e, t) {
            tl("SelectVehiclesSection", "selectVehicles", e, t)
        }
        var EW = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            primaryVehicle: s,
            secondaryVehicle: i,
            primaryVehicles: a,
            secondaryVehicles: o
        }) => {
            const r = (0, Y.useCallback)((e => {
                    TW(e, i?.entity ?? Lx)
                }), [i?.entity]),
                l = (0, Y.useCallback)((e => {
                    TW(s?.entity ?? Lx, e)
                }), [s?.entity]),
                c = ww(e, t, n, !0),
                u = s ?? a[0],
                d = (0, Y.useMemo)((() => null != i ? i : null != o && o.length > 0 ? o[0] : null), [i, o]),
                [m, h] = (0, Y.useState)(!1),
                [g, p] = (0, Y.useState)(!1),
                f = Dm();
            return (0, z.jsxs)(iy, {
                disableFocus: !0,
                className: _W.selectVehiclesSection,
                tooltip: c && (0, z.jsx)(zf, {
                    text: c
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.SELECT_VEHICLE, {})
                }), (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    className: Zu()(_W.dropdownGamepad, f && _W.padRight, f && !m && _W.padLeft),
                    left: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(Pf, {
                            action: g ? "Back" : "Select",
                            active: m,
                            className: _W.hint
                        }), (0, z.jsx)(Ah, {
                            onFocusChange: h,
                            children: (0, z.jsx)(qI, {
                                focusKey: yg,
                                theme: xW,
                                initialFocused: Dr(u.entity),
                                onToggle: p,
                                content: a?.map((e => (0, z.jsx)(IW, {
                                    vehicle: e,
                                    onSelect: r
                                }, Dr(e.entity)))),
                                children: (0, z.jsx)(XI, {
                                    sounds: bW,
                                    className: _W.dropdown,
                                    children: (0, z.jsxs)("div", {
                                        className: _W.item,
                                        children: [(0, z.jsx)("img", {
                                            src: u.thumbnail,
                                            className: _W.thumb
                                        }), (0, z.jsxs)("div", {
                                            className: _W.label,
                                            children: [(0, z.jsx)(Pc.Assets.NAME, {
                                                hash: u.id
                                            }), " "]
                                        })]
                                    })
                                })
                            })
                        })]
                    })
                }), d && (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        disableFocus: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.SELECT_VEHICLE_SECONDARY, {
                            hash: "Train"
                        })
                    }), (0, z.jsx)(qI, {
                        theme: xW,
                        initialFocused: Dr(d.entity),
                        content: o?.map((e => (0, z.jsx)(IW, {
                            vehicle: e,
                            onSelect: l
                        }, Dr(e.entity)))),
                        children: (0, z.jsx)(XI, {
                            sounds: bW,
                            className: _W.dropdown,
                            children: (0, z.jsxs)("div", {
                                className: _W.item,
                                children: [(0, z.jsx)("img", {
                                    src: d.thumbnail,
                                    className: _W.thumb
                                }), (0, z.jsxs)("div", {
                                    className: _W.label,
                                    children: [(0, z.jsx)(Pc.Assets.NAME, {
                                        hash: d.id
                                    }), " "]
                                })]
                            })
                        })
                    })]
                })]
            })
        };
        const IW = ({
            vehicle: e,
            onSelect: t
        }) => {
            const [n, s] = (0, Y.useState)(!1), i = Dm();
            return (0, z.jsx)(Ah, {
                onFocusChange: s,
                children: (0, z.jsx)(JI, {
                    value: e.entity,
                    focusKey: e.id,
                    onChange: t,
                    className: Zu()(i && _W.padRight, i && !n && _W.padLeft),
                    children: (0, z.jsxs)("div", {
                        className: _W.item,
                        children: [(0, z.jsx)(Pf, {
                            action: "Select",
                            active: n,
                            className: _W.hint
                        }), (0, z.jsx)("img", {
                            src: e.thumbnail,
                            className: Zu()(_W.thumb, i && _W.padThumbnail)
                        }), (0, z.jsxs)("div", {
                            className: _W.label,
                            children: [(0, z.jsx)(Pc.Assets.NAME, {
                                hash: e.id
                            }), " "]
                        })]
                    })
                }, Dr(e.entity))
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/select-vehicles-section.tsx", {
            get dropdownSounds() {
                return bW
            },
            set dropdownSounds(e) {
                bW = e
            },
            get SelectVehiclesSection() {
                return EW
            },
            set SelectVehiclesSection(e) {
                EW = e
            }
        });
        let yW = {
            left: "left_vb1",
            right: "right_wuq",
            "delete-button": "delete-button_iT6",
            deleteButton: "delete-button_iT6",
            input: "input_xcv"
        };
        X.add("game-ui/editor/widgets/localization-field/localization-field.module.scss", {
            get classes() {
                return yW
            },
            set classes(e) {
                Object.assign(yW, e)
            }
        });
        const jW = yW;
        var SW = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = HA(e, t),
                    i = (0, Y.useCallback)(((e, t, n) => {
                        fD(s, e, t, n)
                    }), [s]),
                    a = sl(gc),
                    o = (0, Y.useCallback)((e => {
                        vD(s, e)
                    }), [s]),
                    r = (0, Y.useCallback)((() => {
                        xD(s)
                    }), [s]);
                return (0, z.jsx)(CW, {
                    localization: n.localization,
                    supportedLocales: a,
                    onChange: i,
                    onAdd: r,
                    onRemove: o,
                    placeholder: n.placeholder,
                    mandatoryId: n.mandatoryId
                })
            },
            CW = ({
                localization: e,
                supportedLocales: t,
                onChange: n,
                onAdd: s,
                onRemove: i,
                placeholder: a,
                mandatoryId: o
            }) => {
                const r = (0, Y.useMemo)((() => t.filter((t => e.findIndex((e => e.localeId === t)) < 0))), [e, t]);
                return (0, z.jsxs)(UD, {
                    children: [e.map(((e, t) => (0, z.jsx)(NW, {
                        index: t,
                        localeId: e.localeId,
                        text: e.text,
                        unusedLocales: r,
                        onChange: n,
                        onRemove: i,
                        placeholder: a,
                        mandatory: e.localeId === o
                    }, t))), (0, z.jsx)("div", {
                        children: (0, z.jsx)(eF, {
                            children: (0, z.jsx)(tF, {
                                disabled: 0 === r.length,
                                onSelect: s,
                                children: (0, z.jsx)(Pc.Editor.ADD_TRANSLATION, {})
                            })
                        })
                    })]
                })
            };
        const NW = ({
            index: e,
            localeId: t,
            text: n,
            unusedLocales: s,
            onChange: i,
            onRemove: a,
            placeholder: o,
            mandatory: r
        }) => {
            const l = (0, Y.useMemo)((() => [t, ...s]), [t, s]),
                c = (0, Y.useCallback)((t => i(e, l[t], n)), [e, l, i, n]),
                u = (0, Y.useCallback)((n => i(e, t, n.target.value || "")), [e, t, i]),
                d = (0, Y.useCallback)((() => a(e)), [e, a]),
                m = (0, Y.useMemo)((() => l.findIndex((e => e === t))), [t, l]);
            return (0, z.jsx)(BD, {
                className: FD.row,
                children: (0, z.jsxs)(tp, {
                    direction: Rg.Horizontal,
                    children: [(0, z.jsx)("div", {
                        className: jW.left,
                        children: (0, z.jsx)(qI, {
                            theme: sF,
                            initialFocused: e,
                            content: l.map(((e, t) => (0, z.jsx)(JI, {
                                focusKey: t,
                                value: t,
                                selected: m === t,
                                onChange: c,
                                children: (0, z.jsx)(gu, {
                                    value: bc(e)
                                })
                            }, t))),
                            children: (0, z.jsx)(XI, {
                                sounds: bW,
                                className: FD.dropdownToggle,
                                disabled: r || l.length <= 1,
                                children: t
                            })
                        })
                    }), (0, z.jsxs)("div", {
                        className: jW.right,
                        children: [(0, z.jsx)(UE, {
                            value: n,
                            className: Zu()(FD.input, jW.input),
                            onChange: u,
                            placeholder: (0, z.jsx)(gu, {
                                value: o
                            })
                        }), (0, z.jsx)(kD, {
                            className: jW.deleteButton,
                            src: "media/glyphs/trash.svg",
                            selected: !1,
                            disabled: !1,
                            onSelect: d,
                            tinted: !0
                        })]
                    })]
                })
            })
        };
        X.add("game-ui/editor/widgets/localization-field/localization-field.tsx", {
            get BoundLocalizationField() {
                return SW
            },
            set BoundLocalizationField(e) {
                SW = e
            },
            get LocalizationField() {
                return CW
            },
            set LocalizationField(e) {
                CW = e
            }
        });
        let wW = {
            backSrc: "Media/Glyphs/ThickStrokeArrowLeft.svg",
            "page-layout": "page-layout_JSP editor-widget_QQl",
            pageLayout: "page-layout_JSP editor-widget_QQl",
            header: "header_u77",
            "back-button": "back-button_rnO",
            backButton: "back-button_rnO",
            title: "title_zOE"
        };
        X.add("game-ui/editor/widgets/page-layout/page-layout.module.scss", {
            get classes() {
                return wW
            },
            set classes(e) {
                Object.assign(wW, e)
            }
        });
        const OW = wW;
        var PW = ({
                parent: e,
                path: t,
                props: n,
                children: s
            }) => {
                const i = HA(e, t),
                    a = NF(n.flex),
                    o = (0, Y.useContext)(JA),
                    r = xA(jA, i);
                return (0, z.jsx)(LW, {
                    title: (0, z.jsx)(gu, {
                        value: n.title
                    }),
                    style: a,
                    onBack: n.hasBackAction ? r : void 0,
                    children: (0, z.jsx)(ZA, {
                        parent: i,
                        components: o,
                        data: s
                    })
                })
            },
            LW = ({
                title: e,
                className: t,
                style: n,
                children: s,
                onBack: i
            }) => {
                const a = Dm();
                return (0, z.jsx)(Dg, {
                    onAction: i,
                    children: (0, z.jsxs)("div", {
                        className: Zu()(OW.pageLayout, t),
                        style: n,
                        children: [(0, z.jsxs)("div", {
                            className: OW.header,
                            children: [!a && null != i && (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.Common.GO_BACK_TOOLTIP, {}),
                                children: (0, z.jsx)(sf, {
                                    tinted: !0,
                                    focusKey: Ig,
                                    src: OW.backSrc,
                                    className: OW.backButton,
                                    onSelect: i
                                })
                            }), (0, z.jsx)("div", {
                                className: OW.title,
                                children: e
                            })]
                        }), s]
                    })
                })
            };
        X.add("game-ui/editor/widgets/page-layout/page-layout.tsx", {
            get BoundPageLayout() {
                return PW
            },
            set BoundPageLayout(e) {
                PW = e
            },
            get PageLayout() {
                return LW
            },
            set PageLayout(e) {
                LW = e
            }
        });
        var AW = n(928),
            MW = n.n(AW);

        function RW(e, t, n, s) {
            const i = kW(e, n ?? t, s);
            return (0, Y.useEffect)((() => {
                i.setEndValue(t)
            }), [i, t]), DW(i)
        }

        function kW(e, t = 0, n = !1) {
            const s = (0, Y.useRef)(t),
                i = (0, Y.useMemo)((() => (new(MW().SpringSystem)).createSpring().setCurrentValue(s.current).setAtRest()), []),
                a = vf(e);
            return (0, Y.useEffect)((() => {
                i.setSpringConfig(a)
            }), [i, a]), (0, Y.useEffect)((() => {
                i.setOvershootClampingEnabled(n)
            }), [i, n]), i
        }

        function DW(e) {
            const [t, n] = (0, Y.useState)(e.getCurrentValue());
            return (0, Y.useEffect)((() => {
                const t = {
                    onSpringUpdate(e) {
                        n(e.getCurrentValue())
                    }
                };
                return e.addListener(t), () => {
                    e.removeListener(t)
                }
            }), [e]), t
        }
        X.add("game-ui/common/animations/spring-hooks.tsx", {
            get useSpringAnimation() {
                return RW
            },
            set useSpringAnimation(e) {
                RW = e
            },
            get useSpring() {
                return kW
            },
            set useSpring(e) {
                kW = e
            },
            get useSpringValue() {
                return DW
            },
            set useSpringValue(e) {
                DW = e
            }
        });
        let FW = {
            "page-view": "page-view_PUO editor-widget_QQl",
            pageView: "page-view_PUO editor-widget_QQl",
            page: "page_hHC",
            active: "active_xN8"
        };
        X.add("game-ui/editor/widgets/page-view/page-view.module.scss", {
            get classes() {
                return FW
            },
            set classes(e) {
                Object.assign(FW, e)
            }
        });
        const UW = FW;
        var BW = ({
            parent: e,
            path: t,
            props: n,
            children: s
        }) => {
            const i = HA(e, t),
                a = NF(n.flex),
                o = (0, Y.useContext)(JA),
                r = (0, Y.useMemo)((() => s.map((e => (0, z.jsx)(QA, {
                    parent: i,
                    components: o,
                    data: e
                }, e.path)))), [s, i, o]);
            return (0, z.jsx)(VW, {
                currentPage: n.currentPage,
                pages: r,
                style: a
            })
        };
        const GW = {
            tension: 150,
            friction: 15
        };
        var VW = ({
            currentPage: e,
            pages: t,
            className: n,
            style: s
        }) => {
            const i = RW(GW, e, void 0, !0);
            return (0, z.jsx)("div", {
                className: Zu()(UW.pageView, n),
                style: s,
                children: (0, z.jsx)(ap, {
                    focused: e,
                    children: t.map(((t, n) => (0, z.jsx)("div", {
                        className: Zu()(UW.page, n === e && UW.active),
                        style: {
                            "--offset": n - i
                        },
                        children: (0, z.jsx)(tp, {
                            focusKey: n,
                            children: t
                        })
                    }, n)))
                })
            })
        };
        X.add("game-ui/editor/widgets/page-view/page-view.tsx", {
            get BoundPageView() {
                return BW
            },
            set BoundPageView(e) {
                BW = e
            },
            get PageView() {
                return VW
            },
            set PageView(e) {
                VW = e
            }
        });
        let HW = {
            row: "row_uw4 editor-widget_QQl"
        };
        X.add("game-ui/editor/widgets/Row/row.module.scss", {
            get classes() {
                return HW
            },
            set classes(e) {
                Object.assign(HW, e)
            }
        });
        const KW = HW;
        var WW = ({
                parent: e,
                path: t,
                props: n,
                children: s
            }) => {
                const i = HA(e, t),
                    a = NF(n.flex),
                    o = (0, Y.useContext)(JA);
                return (0, z.jsx)(zW, {
                    style: a,
                    children: (0, z.jsx)(ZA, {
                        parent: i,
                        components: o,
                        data: s
                    })
                })
            },
            zW = ({
                className: e,
                style: t,
                children: n
            }) => (0, z.jsx)("div", {
                className: Zu()(KW.row, e),
                style: t,
                children: (0, z.jsx)(tp, {
                    children: n
                })
            });
        X.add("game-ui/editor/widgets/Row/row.tsx", {
            get BoundRow() {
                return WW
            },
            set BoundRow(e) {
                WW = e
            },
            get Row() {
                return zW
            },
            set Row(e) {
                zW = e
            }
        });
        let YW = {
            scrollable: "scrollable_VJQ editor-widget_QQl"
        };
        X.add("game-ui/editor/widgets/scrollable/scrollable.module.scss", {
            get classes() {
                return YW
            },
            set classes(e) {
                Object.assign(YW, e)
            }
        });
        const $W = YW;
        var qW = ({
                parent: e,
                path: t,
                props: n,
                children: s
            }) => {
                const i = HA(e, t),
                    a = NF(n.flex),
                    o = (0, Y.useContext)(JA);
                return (0, z.jsx)(XW, {
                    style: a,
                    children: (0, z.jsx)(ZA, {
                        parent: i,
                        components: o,
                        data: s
                    })
                })
            },
            XW = ({
                className: e,
                style: t,
                children: n,
                vertical: s = !0,
                horizontal: i = !1
            }) => (0, z.jsx)(ff, {
                trackVisibility: "scrollable",
                className: Zu()($W.scrollable, e),
                style: t,
                vertical: s,
                horizontal: i,
                children: (0, z.jsx)(tp, {
                    children: n
                })
            });
        X.add("game-ui/editor/widgets/scrollable/scrollable.tsx", {
            get BoundScrollable() {
                return qW
            },
            set BoundScrollable(e) {
                qW = e
            },
            get EditorScrollable() {
                return XW
            },
            set EditorScrollable(e) {
                XW = e
            }
        });
        let QW = {
            popupMinHeight: "300rem",
            "search-field": "search-field_jRt editor-widget_QQl",
            searchField: "search-field_jRt editor-widget_QQl",
            input: "input_UVn",
            actions: "actions_qt8",
            action: "action_Qra",
            popup: "popup_OTO",
            item: "item_NeK",
            value: "value_Mug",
            "favorite-action": "favorite-action_s2e",
            favoriteAction: "favorite-action_s2e",
            "favorite-icon": "favorite-icon_JvS",
            favoriteIcon: "favorite-icon_JvS"
        };
        X.add("game-ui/editor/widgets/search-field/search-field.module.scss", {
            get classes() {
                return QW
            },
            set classes(e) {
                Object.assign(QW, e)
            }
        });
        const ZW = QW;
        var JW = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = HA(e, t),
                    i = xA(SA, s),
                    a = xA(pD, s);
                return (0, z.jsx)(ez, {
                    value: n.value,
                    valueIsFavorite: n.valueIsFavorite,
                    suggestions: n.suggestions,
                    onChange: i,
                    onChangeFavorite: n.hasFavorites ? a : void 0
                })
            },
            ez = ({
                value: e,
                valueIsFavorite: t,
                suggestions: n,
                onChange: s,
                onChangeFavorite: i
            }) => {
                const a = Dm(),
                    o = (0, Y.useRef)(null),
                    [r, l] = (0, Y.useState)(!1),
                    c = (0, Y.useCallback)((e => s(e.target.value || "")), [s]),
                    u = (0, Y.useCallback)((() => l(!0)), []),
                    d = (0, Y.useCallback)((() => l(!1)), []),
                    m = (0, Y.useMemo)((() => null != i ? () => i(e, !t) : null), [t, e, i]),
                    h = (0, Y.useCallback)((() => s("")), [s]),
                    g = (0, Y.useCallback)((e => {
                        s(e), o.current?.blur()
                    }), [s]),
                    p = Vm(ZW.popupMinHeight),
                    f = (0, z.jsx)(ff, {
                        className: ZW.scrollable,
                        children: n.map(((e, t) => (0, z.jsx)(tz, {
                            value: e.value,
                            favorite: e.favorite,
                            onSelect: g,
                            onChangeFavorite: i
                        }, t)))
                    });
                return (0, z.jsx)(BI, {
                    visible: !a && r && n.length > 0,
                    direction: "down",
                    minHeight: p,
                    className: ZW.popup,
                    content: f,
                    minWidth: !0,
                    children: (0, z.jsx)(xd, {
                        children: (0, z.jsxs)("div", {
                            className: ZW.searchField,
                            children: [(0, z.jsx)(UE, {
                                ref: o,
                                value: e,
                                placeholder: (0, z.jsx)(Pc.Editor.SEARCH_PLACEHOLDER, {}),
                                className: ZW.input,
                                onChange: c,
                                onFocus: u,
                                onBlur: d
                            }), !a && e && (0, z.jsxs)("div", {
                                className: ZW.actions,
                                children: [(0, z.jsx)(Tg, {
                                    tooltip: (0, z.jsx)(Pc.Common.CLEAR_SEARCH_TOOLTIP, {}),
                                    children: (0, z.jsx)(sf, {
                                        tinted: !0,
                                        focusKey: Ig,
                                        src: "Media/Glyphs/Clear.svg",
                                        className: ZW.action,
                                        onSelect: h,
                                        onMouseDown: r ? nz : void 0
                                    })
                                }), null != m && (0, z.jsx)(Tg, {
                                    tooltip: t ? (0, z.jsx)(Pc.Editor.REMOVE_FAVORITE, {}) : (0, z.jsx)(Pc.Editor.ADD_FAVORITE, {}),
                                    children: (0, z.jsx)(sf, {
                                        tinted: !0,
                                        focusKey: Ig,
                                        src: t ? "Media/Glyphs/StarFilled.svg" : "Media/Glyphs/StarOutline.svg",
                                        className: ZW.action,
                                        onSelect: m,
                                        onMouseDown: r ? nz : void 0
                                    })
                                })]
                            })]
                        })
                    })
                })
            };
        const tz = ({
            value: e,
            favorite: t,
            onSelect: n,
            onChangeFavorite: s
        }) => {
            const i = xA(n, e),
                a = (0, Y.useMemo)((() => null != s ? () => s(e, !t) : null), [t, e, s]);
            return (0, z.jsxs)("div", {
                className: ZW.item,
                children: [(0, z.jsx)("div", {
                    className: ZW.value,
                    onMouseDown: nz,
                    onClick: i,
                    children: e
                }), null != a && (0, z.jsx)("div", {
                    className: ZW.favoriteAction,
                    onMouseDown: nz,
                    onClick: a,
                    children: (0, z.jsx)(ef, {
                        src: t ? "Media/Glyphs/StarFilled.svg" : "Media/Glyphs/StarOutline.svg",
                        className: ZW.favoriteIcon
                    })
                })]
            })
        };

        function nz(e) {
            e.preventDefault()
        }
        X.add("game-ui/editor/widgets/search-field/popup-search-field.tsx", {
            get BoundPopupSearchField() {
                return JW
            },
            set BoundPopupSearchField(e) {
                JW = e
            },
            get PopupSearchField() {
                return ez
            },
            set PopupSearchField(e) {
                ez = e
            }
        });
        var sz = ({
                parent: e,
                path: t,
                props: n
            }) => {
                const s = xA(SA, HA(e, t));
                return (0, z.jsx)(iz, {
                    value: n.value,
                    onChange: s
                })
            },
            iz = ({
                value: e,
                onChange: t
            }) => {
                const n = Dm(),
                    s = (0, Y.useCallback)((e => t(e.target.value || "")), [t]),
                    i = (0, Y.useCallback)((() => t("")), [t]);
                return (0, z.jsxs)("div", {
                    className: ZW.searchField,
                    children: [(0, z.jsx)(UE, {
                        value: e,
                        placeholder: (0, z.jsx)(Pc.Editor.SEARCH_PLACEHOLDER, {}),
                        className: ZW.input,
                        onChange: s
                    }), !n && e && (0, z.jsx)("div", {
                        className: ZW.actions,
                        children: (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Common.CLEAR_SEARCH_TOOLTIP, {}),
                            children: (0, z.jsx)(sf, {
                                tinted: !0,
                                focusKey: Ig,
                                src: "Media/Glyphs/Clear.svg",
                                className: ZW.action,
                                onSelect: i,
                                onMouseDown: az
                            })
                        })
                    })]
                })
            };

        function az(e) {
            e.preventDefault()
        }
        X.add("game-ui/editor/widgets/search-field/search-field.tsx", {
            get BoundSearchField() {
                return sz
            },
            set BoundSearchField(e) {
                sz = e
            },
            get SearchField() {
                return iz
            },
            set SearchField(e) {
                iz = e
            }
        });
        let oz = {
            toggle: "toggle_GUy",
            checkmark: "checkmark_Bc3"
        };
        X.add("game-ui/editor/themes/editor-small-checkbox.module.scss", {
            get classes() {
                return oz
            },
            set classes(e) {
                Object.assign(oz, e)
            }
        });
        const rz = oz;
        let lz = {
            "editor-section": "editor-section_zoX",
            editorSection: "editor-section_zoX",
            header: "header_MLk",
            primary: "primary_j00",
            toggle: "toggle_XlP",
            action: "action_T_m",
            icon: "icon_v5n",
            label: "label_OqN",
            "action-checkbox": "action-checkbox_Z8G",
            actionCheckbox: "action-checkbox_Z8G",
            content: "content_yUv"
        };
        X.add("game-ui/editor/widgets/section/editor-section.module.scss", {
            get classes() {
                return lz
            },
            set classes(e) {
                Object.assign(lz, e)
            }
        });
        const cz = lz;
        var uz = ({
                parent: e,
                path: t,
                props: n,
                children: s
            }) => {
                const i = HA(e, t),
                    a = (0, Y.useContext)(JA),
                    o = xA(lD, i),
                    r = xA(CA, i),
                    l = xA(cD, i);
                return (0, z.jsx)(mz, {
                    title: (0, z.jsx)(gu, {
                        value: n.displayName
                    }),
                    tooltip: n.tooltip,
                    active: n.active,
                    primary: n.primary,
                    headerColor: null != n.color ? WC(n.color) : void 0,
                    expanded: n.expanded,
                    onDelete: n.deletable ? o : void 0,
                    onActiveChange: n.activatable ? l : void 0,
                    onExpandedChange: n.expandable ? r : void 0,
                    disabled: n.disabled,
                    children: (0, z.jsx)(ZA, {
                        parent: i,
                        components: a,
                        data: s
                    })
                })
            },
            dz = e => {
                const [t, n] = (0, Y.useState)(!0);
                return (0, z.jsx)(mz, {
                    ...e,
                    expanded: t,
                    onExpandedChange: n
                })
            },
            mz = ({
                title: e,
                active: t = !0,
                primary: n,
                headerColor: s,
                expanded: i,
                className: a,
                tooltip: o,
                children: r,
                onDelete: l,
                onActiveChange: c,
                onExpandedChange: u,
                disabled: d
            }) => {
                const m = (0, Y.useCallback)((() => {
                        null != u && u(!i)
                    }), [i, u]),
                    h = (0, Y.useCallback)((() => {
                        null != c && c(!t)
                    }), [t, c]);
                return (0, z.jsxs)("div", {
                    className: Zu()(cz.editorSection, n && cz.primary, a),
                    children: [(0, z.jsx)("div", {
                        className: cz.header,
                        style: {
                            backgroundColor: s
                        },
                        children: (0, z.jsx)(Tg, {
                            tooltip: o && (0, z.jsx)(gu, {
                                value: o
                            }),
                            children: (0, z.jsxs)(tp, {
                                direction: Rg.Horizontal,
                                children: [null != u ? (0, z.jsx)(NI, {
                                    src: i ? "Media/Glyphs/ThickStrokeArrowDown.svg" : "Media/Glyphs/ThickStrokeArrowRight.svg",
                                    theme: cz,
                                    className: cz.toggle,
                                    onSelect: m,
                                    children: e
                                }) : (0, z.jsx)(NI, {
                                    src: "Media/Glyphs/Circle.svg",
                                    theme: cz,
                                    className: cz.toggle,
                                    disabled: !0,
                                    children: e
                                }), l && (0, z.jsx)(Tg, {
                                    tooltip: (0, z.jsx)(Pc.Common.DELETE_TOOLTIP, {}),
                                    children: (0, z.jsx)(sf, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Trash.svg",
                                        className: cz.action,
                                        onSelect: l,
                                        disabled: d
                                    })
                                }), c && (0, z.jsx)(Tg, {
                                    tooltip: (0, z.jsx)(Pc.Editor.ACTIVE_TOOLTIP, {}),
                                    children: (0, z.jsx)(Gp, {
                                        className: cz.action,
                                        onSelect: h,
                                        disabled: d,
                                        children: (0, z.jsx)(ox, {
                                            focusKey: Ig,
                                            checked: t,
                                            theme: rz,
                                            className: cz.actionCheckbox,
                                            onChange: c,
                                            disabled: d
                                        })
                                    })
                                })]
                            })
                        })
                    }), null != u && i && (0, z.jsx)("div", {
                        className: cz.content,
                        children: r
                    })]
                })
            };
        X.add("game-ui/editor/widgets/section/editor-section.tsx", {
            get BoundEditorSection() {
                return uz
            },
            set BoundEditorSection(e) {
                uz = e
            },
            get EditorSection() {
                return dz
            },
            set EditorSection(e) {
                dz = e
            },
            get EditorSectionBase() {
                return mz
            },
            set EditorSectionBase(e) {
                mz = e
            }
        });
        let hz = {
            chart: "chart_SQk"
        };
        X.add("game-ui/editor/widgets/time-of-day-weights-chart/time-of-day-weights-chart.module.scss", {
            get classes() {
                return hz
            },
            set classes(e) {
                Object.assign(hz, e)
            }
        });
        const gz = hz;
        var pz = ({
            props: e
        }) => {
            const t = (0, Y.useMemo)((() => ({
                    datasets: [{
                        data: [e.value.x, e.value.y, e.value.z, e.value.w, e.value.x]
                    }]
                })), [e.value.x, e.value.y, e.value.z, e.value.w]),
                n = function () {
                    const e = sl(Ml);
                    return (0, Y.useMemo)((() => ({
                        layout: {
                            padding: {
                                top: 8,
                                right: 8,
                                bottom: 0,
                                left: 8
                            }
                        },
                        elements: {
                            line: {
                                fill: !0,
                                tension: 0,
                                borderWidth: 2,
                                borderColor: "#ffb543",
                                backgroundColor: "rgba(255, 181, 67, 0.3)"
                            },
                            point: {
                                radius: 4,
                                backgroundColor: "#ffb543"
                            }
                        },
                        scales: {
                            y: {
                                display: !1,
                                min: 0,
                                suggestedMax: 1,
                                labels: [],
                                grid: {
                                    color: "rgba(255, 255, 255, 0.5)",
                                    lineWidth: e => 0 === e.tick.value ? 2 : 1
                                }
                            },
                            x: {
                                labels: ["00", "06", "12", "18", "00"],
                                grid: {
                                    color: "rgba(255, 255, 255, 0.4)",
                                    borderColor: "rgba(255, 255, 255, 0.4)",
                                    lineWidth: 1,
                                    borderWidth: 1
                                },
                                ticks: {
                                    font: {
                                        size: 14 * e,
                                        weight: "bold"
                                    },
                                    color: "rgba(255, 255, 255, 0.6)",
                                    padding: 0,
                                    autoSkip: !1
                                },
                                beginAtZero: !0
                            }
                        }
                    })), [e])
                }();
            return (0, z.jsx)(UD, {
                children: (0, z.jsx)(SR, {
                    type: "line",
                    data: t,
                    options: n,
                    className: gz.chart
                })
            })
        };
        X.add("game-ui/editor/widgets/time-of-day-weights-chart/time-of-day-weights-chart.tsx", {
            get TimeOfDayWeightsChart() {
                return pz
            },
            set TimeOfDayWeightsChart(e) {
                pz = e
            }
        });
        var fz = ({
                parent: e,
                data: t
            }) => (0, z.jsx)(ZA, {
                parent: e,
                components: xz,
                data: t
            }),
            xz = {
                [_A.Column]: LF,
                [_A.Row]: WW,
                [_A.Scrollable]: qW,
                [_A.PageView]: BW,
                [_A.PageLayout]: PW,
                [Xk.ItemPicker]: JK,
                [Xk.ItemPickerFooter]: aW,
                [Xk.SearchField]: sz,
                [Xk.PopupSearchField]: JW,
                [_A.Divider]: BF,
                [_A.Button]: QD,
                [_A.ButtonRow]: ZD,
                [_A.IconButton]: LD,
                [_A.IconButtonGroup]: AD,
                [_A.Group]: DG,
                [_A.ExpandableGroup]: FG,
                [_A.PagedList]: cW,
                [_A.ValueField]: ({
                    props: e
                }) => (0, z.jsx)(BD, {
                    children: (0, z.jsxs)("div", {
                        style: {
                            color: "red",
                            whiteSpace: "pre",
                            fontSize: "12px"
                        },
                        children: [(0, z.jsx)(gu, {
                            value: e.displayName
                        }), e.value]
                    })
                }),
                [_A.ToggleField]: vz(rK),
                [_A.IntInputField]: vz(AH),
                [_A.IntSliderField]: vz(pV),
                [_A.UIntInputField]: vz(RH),
                [_A.UIntSliderField]: vz(fV),
                [_A.TimeBoundsSliderField]: vz(NV),
                [_A.Int2InputField]: vz(kH),
                [_A.Int3InputField]: vz(DH),
                [_A.Int4InputField]: vz(FH),
                [_A.FloatInputField]: vz(XG),
                [_A.FloatSliderField]: vz(xV),
                [_A.RangedSliderField]: vz(WH),
                [_A.GradientSliderField]: vz(LH),
                [_A.TimeSliderField]: vz(EV),
                [_A.Float2InputField]: vz(ZG),
                [_A.Float3InputField]: vz(JG),
                [_A.EulerAnglesField]: vz(JG),
                [_A.Float4InputField]: vz(eV),
                [_A.StringInputField]: lF,
                [_A.Bounds1SliderField]: vz(CV),
                [_A.Bounds1InputField]: vz(yV),
                [_A.Bounds2InputField]: vz(jV),
                [_A.Bounds3InputField]: vz(SV),
                [_A.ColorField]: vz(xH),
                [_A.Bezier4x3Field]: vz(lV),
                [_A.EnumField]: jH,
                [_A.FlagsField]: SH,
                [_A.DropdownField]: iF,
                [_A.AnimationCurveField]: rV,
                [_A.PopupValueField]: HH,
                [_A.DirectoryPickerButton]: bH,
                [_A.ImageField]: AK,
                [_A.LocalizedValueField]: lK,
                [_A.Label]: _F,
                [Xk.EditorSection]: uz,
                [Xk.Compass]: kF,
                [Xk.TimeOfDayWeightsChart]: pz,
                [Xk.LocalizationField]: SW,
                [Xk.FilterMenu]: mK,
                [Xk.HierarchyMenu]: CK,
                [Xk.SeasonsField]: oK,
                [Xk.ModdingBetaBanner]: $k,
                [Xk.ErrorLabel]: pF,
                [Xk.StringInputFieldWithError]: xF,
                [Xk.ExternalLinkField]: mF,
                [Xk.ProgressIndicator]: SF,
                [Xk.LargeIconButton]: vF,
                [Xk.ListField]: zD
            };

        function vz(e) {
            const t = ({
                parent: t,
                path: n,
                props: s
            }) => {
                const i = xA(SA, HA(t, n));
                return (0, z.jsx)(e, {
                    ...s,
                    label: (0, z.jsx)(gu, {
                        value: s.displayName
                    }),
                    onChange: i
                })
            };
            return t.displayName = e.displayName ?? e.name, t
        }
        X.add("game-ui/editor/widgets/editor-widget-renderer.tsx", {
            get EditorWidgetListRenderer() {
                return fz
            },
            set EditorWidgetListRenderer(e) {
                fz = e
            },
            get editorWidgetComponents() {
                return xz
            },
            set editorWidgetComponents(e) {
                xz = e
            }
        });
        var _z = ({
            titleId: e,
            messageId: t,
            options: n
        }) => (0, z.jsx)(vI, {
            onClose: void 0,
            children: (0, z.jsxs)(tp, {
                children: [e && (0, z.jsx)("div", {
                    className: xI.title,
                    children: (0, z.jsx)(Tc, {
                        id: e,
                        fallback: e
                    })
                }), t && (0, z.jsx)(zf, {
                    children: (0, z.jsx)(Tc, {
                        id: t,
                        fallback: t
                    })
                }), (0, z.jsx)("div", {
                    className: xI.buttonColumn,
                    children: n.map(((e, t) => (0, z.jsx)(bz, {
                        id: e.id,
                        index: t
                    }, t)))
                })]
            })
        });
        const bz = ({
            id: e,
            index: t
        }) => {
            const n = (0, Y.useCallback)((() => nI(t)), [t]);
            return (0, z.jsx)(Gp, {
                theme: RE,
                onSelect: n,
                children: (0, z.jsx)(Tc, {
                    id: e,
                    fallback: e
                })
            }, e)
        };
        X.add("game-ui/menu/components/paradox/dialogs/multi-option-dialog.tsx", {
            get MultiOptionDialog() {
                return _z
            },
            set MultiOptionDialog(e) {
                _z = e
            }
        });
        var Tz = e => (0, z.jsxs)(_I, {
            ...e,
            children: [(0, z.jsxs)("div", {
                className: xI.buttonRow,
                children: [(0, z.jsx)(Gp, {
                    theme: DE,
                    onSelect: gI,
                    children: (0, z.jsx)(Pc.Paradox.TERMS_OF_USE, {})
                }), (0, z.jsx)(Gp, {
                    theme: DE,
                    onSelect: pI,
                    children: (0, z.jsx)(Pc.Paradox.PRIVACY_POLICY, {})
                })]
            }), (0, z.jsxs)("div", {
                className: xI.buttonRow,
                children: [(0, z.jsx)(Gp, {
                    theme: RE,
                    onSelect: dI,
                    children: (0, z.jsx)(Pc.Paradox.LINK_ACCOUNT_BUTTON, {})
                }), (0, z.jsx)(Gp, {
                    theme: DE,
                    onSelect: tI,
                    children: (0, z.jsx)(Pc.Paradox.SKIP_BUTTON, {})
                })]
            })]
        });
        X.add("game-ui/menu/components/paradox/dialogs/account-link-dialog.tsx", {
            get AccountLinkDialog() {
                return Tz
            },
            set AccountLinkDialog(e) {
                Tz = e
            }
        });
        var Ez = e => (0, z.jsx)(_I, {
            ...e,
            children: (0, z.jsxs)("div", {
                className: xI.buttonRow,
                children: [(0, z.jsx)(Gp, {
                    theme: RE,
                    onSelect: mI,
                    children: (0, z.jsx)(Pc.Common.YES, {})
                }), (0, z.jsx)(Gp, {
                    theme: DE,
                    onSelect: tI,
                    children: (0, z.jsx)(Pc.Common.NO, {})
                })]
            })
        });
        X.add("game-ui/menu/components/paradox/dialogs/account-link-overwrite-dialog.tsx", {
            get AccountLinkOverwriteDialog() {
                return Ez
            },
            set AccountLinkOverwriteDialog(e) {
                Ez = e
            }
        });
        var Iz = e => (0, z.jsx)(_I, {
            ...e,
            children: (0, z.jsx)("div", {
                className: xI.buttonRow,
                children: (0, z.jsx)(Gp, {
                    theme: RE,
                    onSelect: tI,
                    children: (0, z.jsx)(Pc.Common.OK, {})
                })
            })
        });
        X.add("game-ui/menu/components/paradox/dialogs/confirmation-dialog.tsx", {
            get ConfirmationDialog() {
                return Iz
            },
            set ConfirmationDialog(e) {
                Iz = e
            }
        });
        var yz = ({
            messageId: e,
            message: t
        }) => {
            const n = oc((0, z.jsx)(Pc.Paradox.UNKNOWN_ERROR, {}));
            return (0, z.jsxs)(vI, {
                onClose: tI,
                children: [null != e && (0, z.jsx)("p", {
                    children: (0, z.jsx)(Tc, {
                        id: e,
                        fallback: n
                    })
                }), null != t && (0, z.jsx)("p", {
                    children: t
                }), null == e && null == t && (0, z.jsx)("p", {
                    children: n
                }), (0, z.jsx)("div", {
                    className: xI.buttonRow,
                    children: (0, z.jsx)(Gp, {
                        theme: RE,
                        onSelect: tI,
                        children: (0, z.jsx)(Pc.Common.CLOSE, {})
                    })
                })]
            })
        };
        X.add("game-ui/menu/components/paradox/dialogs/error-dialog.tsx", {
            get ErrorDialog() {
                return yz
            },
            set ErrorDialog(e) {
                yz = e
            }
        });
        var jz, Sz = ({
            text: e,
            agreementRequired: t,
            confirmLabel: n
        }) => {
            const s = PE(),
                i = Oy();
            return (0, Y.useEffect)((() => s.scrollTo(0, 0)), [s, e]), (0, z.jsx)(vI, {
                wide: !0,
                onClose: t ? void 0 : tI,
                children: (0, z.jsx)(FE, {
                    controller: s,
                    children: (0, z.jsxs)(tp, {
                        initialFocused: "ok",
                        children: [(0, z.jsx)(xf, {
                            controller: s,
                            className: xI.documentScrollable,
                            trackVisibility: "always",
                            hintClassName: xI.scrollHint,
                            labelClassName: xI.scrollHintLabel,
                            focusableItems: !0,
                            children: (0, z.jsx)("div", {
                                className: xI.documentText,
                                children: (0, z.jsx)(zf, {
                                    renderer: i,
                                    onLinkSelect: cI,
                                    children: e
                                })
                            })
                        }), (0, z.jsx)("div", {
                            className: xI.buttonRow,
                            children: (0, z.jsx)(Gp, {
                                focusKey: "ok",
                                theme: RE,
                                onSelect: t ? hI : tI,
                                children: null != n ? (0, z.jsx)(Tc, {
                                    id: n
                                }) : (0, z.jsx)(Pc.Common.OK, {})
                            })
                        })]
                    })
                })
            })
        };

        function Cz(e) {
            return /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(e)
        }

        function Nz(e) {
            return e.replace(/[<>:;,?"*|/\\]/g, "")
        }

        function wz(e) {
            return !Vr(e) && /^[^<>:;,?"*|/\\]+$/g.test(e)
        }
        X.add("game-ui/menu/components/paradox/dialogs/legal-document-dialog.tsx", {
                get LegalDocumentDialog() {
                    return Sz
                },
                set LegalDocumentDialog(e) {
                    Sz = e
                }
            }), X.add("game-ui/common/utils/validation.ts", {
                get validateEmailAddress() {
                    return Cz
                },
                set validateEmailAddress(e) {
                    Cz = e
                },
                get sanitizeFileName() {
                    return Nz
                },
                set sanitizeFileName(e) {
                    Nz = e
                },
                get validateFileName() {
                    return wz
                },
                set validateFileName(e) {
                    wz = e
                }
            }),
            function (e) {
                e[e.None = 0] = "None", e[e.ForgotPassword = 1] = "ForgotPassword", e[e.Login = 2] = "Login"
            }(jz || (jz = {}));
        var Oz = () => {
            const [e, t] = (0, Y.useState)(""), n = !Cz(e), [s, i] = (0, Y.useState)(""), a = 0 === s.length, [o, r] = (0, Y.useState)(jz.None), l = (0, Y.useCallback)((() => {
                n || a ? r(jz.Login) : (r(jz.None), aI({
                    email: e,
                    password: s
                }))
            }), [e, n, s, a]), c = (0, Y.useCallback)((() => {
                n ? r(jz.ForgotPassword) : (r(jz.None), iI(e))
            }), [e, n]);
            return (0, z.jsx)(vI, {
                onClose: tI,
                children: (0, z.jsx)("div", {
                    className: xI.formContainer,
                    children: (0, z.jsxs)(tp, {
                        children: [(0, z.jsx)("div", {
                            className: xI.iconRow,
                            children: (0, z.jsx)("img", {
                                src: "Media/Menu/Paradox/ParadoxLogoNoText.svg",
                                className: xI.icon
                            })
                        }), (0, z.jsx)("div", {
                            className: xI.title,
                            children: (0, z.jsx)(Pc.Paradox.LOGIN_FORM_TITLE, {})
                        }), (0, z.jsx)(bI, {
                            type: "email",
                            value: e,
                            placeholder: (0, z.jsx)(Pc.Paradox.EMAIL_FIELD_LABEL, {}),
                            vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                                hash: "ParadoxAccountEmail"
                            }),
                            invalid: o !== jz.None && n,
                            onChange: t,
                            className: Zu()(xI.formRow, xI.flexRow, xI.lightField)
                        }), (0, z.jsx)(bI, {
                            type: "password",
                            placeholder: (0, z.jsx)(Pc.Paradox.PASSWORD_FIELD_LABEL, {}),
                            vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                                hash: "ParadoxAccountPassword"
                            }),
                            value: s,
                            invalid: o === jz.Login && a,
                            onChange: i,
                            className: Zu()(xI.formRow, xI.flexRow, xI.lightField),
                            children: (0, z.jsx)(Gp, {
                                onSelect: c,
                                className: xI.forgotPasswordLink,
                                children: (0, z.jsx)(Pc.Paradox.FORGOT_PASSWORD_LINK, {})
                            })
                        }), (0, z.jsx)(Ip, {
                            className: xI.buttonRow,
                            style: {
                                justifyContent: "flex-end"
                            },
                            children: (0, z.jsx)(Gp, {
                                theme: RE,
                                onSelect: l,
                                children: (0, z.jsx)(Pc.Paradox.LOGIN_BUTTON, {})
                            })
                        }), (0, z.jsx)("div", {
                            className: xI.divider
                        }), (0, z.jsxs)("div", {
                            className: xI.buttonRow,
                            children: [(0, z.jsx)("div", {
                                className: xI.registrationHint,
                                children: (0, z.jsx)(Pc.Paradox.REGISTRATION_HINT, {})
                            }), (0, z.jsx)(Gp, {
                                theme: DE,
                                onSelect: lI,
                                children: (0, z.jsx)(Pc.Paradox.REGISTRATION_FROM_LOGIN_LINK, {})
                            })]
                        })]
                    })
                })
            })
        };

        function Pz(e, t) {
            return new Date(t, e, 0).getDate()
        }

        function Lz(e, t, n) {
            return `${Tu(e,4)}-${Tu(t,2)}-${Tu(n,2)}`
        }
        X.add("game-ui/menu/components/paradox/dialogs/login-dialog.tsx", {
            get LoginDialog() {
                return Oz
            },
            set LoginDialog(e) {
                Oz = e
            }
        }), X.add("game-ui/common/utils/date.ts", {
            get getDaysInMonth() {
                return Pz
            },
            set getDaysInMonth(e) {
                Pz = e
            },
            get formatIso8601Date() {
                return Lz
            },
            set formatIso8601Date(e) {
                Lz = e
            }
        });
        let Az = {
            "dropdown-toggle": "dropdown-toggle_th2 dropdown-toggle_prl",
            dropdownToggle: "dropdown-toggle_th2 dropdown-toggle_prl",
            invalid: "invalid_rQd",
            label: "label_Mje label_l_4",
            indicator: "indicator_Iwz",
            "dropdown-menu": "dropdown-menu_uEW dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_uEW dropdown-menu_Swd",
            scrollable: "scrollable_NAI undefined",
            "dropdown-item": "dropdown-item_IIB undefined",
            dropdownItem: "dropdown-item_IIB undefined"
        };
        X.add("game-ui/menu/components/paradox/dialogs/paradox-dropdown.module.scss", {
            get classes() {
                return Az
            },
            set classes(e) {
                Object.assign(Az, e)
            }
        });
        const Mz = Az,
            Rz = new Eg("COUNTRY_KEY"),
            kz = new Eg("DAY_KEY"),
            Dz = new Eg("MONTH_KEY"),
            Fz = new Eg("YEAR_KEY");
        var Uz = () => {
            const [e, t] = (0, Y.useState)(""), n = !Cz(e), [s, i] = (0, Y.useState)(""), a = 0 === s.length, o = sl(rI), [r, l] = (0, Y.useState)(null), [c, u] = (0, Y.useState)(null), [d, m] = (0, Y.useState)(null), [h, g] = (0, Y.useState)(null), p = null != d && null != c ? Pz(d, c) : 31, f = Math.min((new Date).getFullYear(), 2020);
            (0, Y.useEffect)((() => {
                null != h && h > p && g(null)
            }), [h, p]);
            const [x, v] = (0, Y.useState)(!1), [_, b] = (0, Y.useState)(!1), T = (0, Y.useCallback)((() => {
                if (n || a || null == r || null == c || null == d || null == h) return void b(!0);
                b(!1);
                const t = Lz(c ?? 0, d, h);
                uI({
                    email: e,
                    password: s,
                    country: r,
                    dateOfBirth: t,
                    marketingPermission: x
                })
            }), [n, a, c, d, h, e, s, r, x]), [E, I] = (0, Y.useState)(null), [y, j] = (0, Y.useState)(r), [S, C] = (0, Y.useState)(null);
            return (0, z.jsx)(vI, {
                onClose: tI,
                children: (0, z.jsx)("div", {
                    className: xI.formContainer,
                    children: (0, z.jsxs)(tp, {
                        onChange: I,
                        children: [(0, z.jsx)("div", {
                            className: xI.iconRow,
                            children: (0, z.jsx)("img", {
                                src: "Media/Menu/Paradox/ParadoxLogoNoText.svg",
                                className: xI.icon
                            })
                        }), (0, z.jsx)("div", {
                            className: xI.title,
                            children: (0, z.jsx)(Pc.Paradox.REGISTRATION_FORM_TITLE, {})
                        }), (0, z.jsx)(bI, {
                            value: e,
                            placeholder: (0, z.jsx)(Pc.Paradox.EMAIL_FIELD_LABEL, {}),
                            onChange: t,
                            vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                                hash: "ParadoxAccountEmail"
                            }),
                            invalid: _ && n,
                            className: Zu()(xI.formRow, xI.flexRow, xI.darkField)
                        }), (0, z.jsx)(bI, {
                            type: "password",
                            value: s,
                            placeholder: (0, z.jsx)(Pc.Paradox.PASSWORD_FIELD_LABEL, {}),
                            onChange: i,
                            vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                                hash: "ParadoxAccountPassword"
                            }),
                            invalid: _ && a,
                            className: Zu()(xI.formRow, xI.flexRow, xI.darkField)
                        }), (0, z.jsx)(Ip, {
                            focusKey: Rz,
                            className: Zu()(xI.formRow, xI.darkField),
                            children: (0, z.jsx)(qI, {
                                theme: Mz,
                                initialFocused: r,
                                content: (0, z.jsx)(tp, {
                                    initialFocused: r,
                                    onChange: j,
                                    allowLooping: !0,
                                    children: o.map(((e, t) => (0, z.jsxs)(JI, {
                                        focusKey: e,
                                        value: e,
                                        onChange: l,
                                        children: [(0, z.jsx)(Pf, {
                                            action: "Select",
                                            active: E === Rz && y === e,
                                            className: xI.hint
                                        }), (0, z.jsx)(Pc.ISO.COUNTRY, {
                                            hash: e
                                        })]
                                    }, t)))
                                }),
                                onToggle: () => C(Rz),
                                children: (0, z.jsx)(XI, {
                                    openIconComponent: (0, z.jsx)(Pf, {
                                        action: "Select",
                                        active: E === Rz && S !== Rz,
                                        className: xI.hint
                                    }),
                                    closeIconComponent: (0, z.jsx)(Pf, {
                                        action: "Back",
                                        active: E === Rz && S === Rz,
                                        className: xI.hint
                                    }),
                                    className: Zu()(_ && null == r && Mz.invalid),
                                    children: null == r ? (0, z.jsx)(Pc.Paradox.COUNTRY_FIELD_LABEL, {}) : (0, z.jsx)(Pc.ISO.COUNTRY, {
                                        hash: r
                                    })
                                })
                            })
                        }), (0, z.jsxs)("div", {
                            className: xI.formRow,
                            children: [(0, z.jsx)("div", {
                                className: xI.formRowLabel,
                                children: (0, z.jsx)(Pc.Paradox.BIRTH_DATE_FIELD_LABEL, {})
                            }), (0, z.jsx)(Ip, {
                                className: xI.flexRow,
                                children: (0, z.jsxs)(tp, {
                                    onChange: I,
                                    direction: Rg.Horizontal,
                                    children: [(0, z.jsx)("div", {
                                        className: Zu()(xI.yearField, xI.darkField),
                                        children: (0, z.jsx)(qI, {
                                            focusKey: Fz,
                                            initialFocused: c,
                                            theme: Mz,
                                            content: (0, z.jsx)(tp, {
                                                onChange: j,
                                                allowLooping: !0,
                                                children: [...Array(f - 1901).keys()].map(((e, t) => (0, z.jsxs)(JI, {
                                                    focusKey: f - e,
                                                    value: f - e,
                                                    onChange: u,
                                                    children: [(0, z.jsx)(Pf, {
                                                        action: "Select",
                                                        active: E === Fz && y === f - e,
                                                        className: xI.hint
                                                    }), bu(f - e)]
                                                }, t)))
                                            }),
                                            onToggle: () => C(Fz),
                                            children: (0, z.jsx)(XI, {
                                                openIconComponent: (0, z.jsx)(Pf, {
                                                    action: "Select",
                                                    active: E === Fz && S !== Fz,
                                                    className: xI.hint
                                                }),
                                                closeIconComponent: (0, z.jsx)(Pf, {
                                                    action: "Back",
                                                    active: E === Fz && S === Fz,
                                                    className: xI.hint
                                                }),
                                                className: Zu()(_ && null == c && Mz.invalid),
                                                children: null == c ? (0, z.jsx)(Pc.Paradox.BIRTH_DATE_YEAR_FIELD_LABEL, {}) : bu(c)
                                            })
                                        })
                                    }), (0, z.jsx)("div", {
                                        className: Zu()(xI.monthField, xI.darkField),
                                        children: (0, z.jsx)(qI, {
                                            focusKey: Dz,
                                            initialFocused: d,
                                            theme: Mz,
                                            content: (0, z.jsx)(tp, {
                                                onChange: j,
                                                allowLooping: !0,
                                                children: [...Array(12).keys()].map(((e, t) => (0, z.jsxs)(JI, {
                                                    focusKey: e + 1,
                                                    value: e + 1,
                                                    onChange: m,
                                                    children: [(0, z.jsx)(Pf, {
                                                        action: "Select",
                                                        active: E === Dz && y === e + 1,
                                                        className: xI.hint
                                                    }), (0, z.jsx)(Pc.Common.MONTH, {
                                                        index: e
                                                    })]
                                                }, t)))
                                            }),
                                            onToggle: () => C(Dz),
                                            children: (0, z.jsx)(XI, {
                                                openIconComponent: (0, z.jsx)(Pf, {
                                                    action: "Select",
                                                    active: E === Dz && S !== Dz,
                                                    className: xI.hint
                                                }),
                                                closeIconComponent: (0, z.jsx)(Pf, {
                                                    action: "Back",
                                                    active: E === Dz && S === Dz,
                                                    className: xI.hint
                                                }),
                                                className: Zu()(_ && null == d && Mz.invalid),
                                                children: null == d ? (0, z.jsx)(Pc.Paradox.BIRTH_DATE_MONTH_FIELD_LABEL, {}) : (0, z.jsx)(Pc.Common.MONTH, {
                                                    index: d - 1
                                                })
                                            })
                                        })
                                    }), (0, z.jsx)("div", {
                                        className: Zu()(xI.dayField, xI.darkField),
                                        children: (0, z.jsx)(qI, {
                                            focusKey: kz,
                                            initialFocused: h,
                                            theme: Mz,
                                            content: (0, z.jsx)(tp, {
                                                onChange: j,
                                                allowLooping: !0,
                                                children: [...Array(p).keys()].map(((e, t) => (0, z.jsxs)(JI, {
                                                    focusKey: e + 1,
                                                    value: e + 1,
                                                    onChange: g,
                                                    children: [(0, z.jsx)(Pf, {
                                                        action: "Select",
                                                        active: E === kz && y === e + 1,
                                                        className: xI.hint
                                                    }), bu(e + 1)]
                                                }, t)))
                                            }),
                                            onToggle: () => C(kz),
                                            children: (0, z.jsx)(XI, {
                                                openIconComponent: (0, z.jsx)(Pf, {
                                                    action: "Select",
                                                    active: E === kz && S !== kz,
                                                    className: xI.hint
                                                }),
                                                closeIconComponent: (0, z.jsx)(Pf, {
                                                    action: "Back",
                                                    active: E === kz && S === kz,
                                                    className: xI.hint
                                                }),
                                                className: Zu()(_ && null == h && Mz.invalid),
                                                children: null == h ? (0, z.jsx)(Pc.Paradox.BIRTH_DATE_DAY_FIELD_LABEL, {}) : bu(h)
                                            })
                                        })
                                    })]
                                })
                            })]
                        }), (0, z.jsx)("div", {
                            children: (0, z.jsx)(TI, {
                                value: x,
                                label: (0, z.jsx)(Pc.Paradox.MARKETING_PERMISSION_TOGGLE_LABEL, {}),
                                onChange: v
                            })
                        }), (0, z.jsxs)(Ip, {
                            activation: qu.AnyChildren,
                            children: [(0, z.jsx)(zf, {}), (0, z.jsx)(Gf, {
                                text: (0, z.jsx)(Pc.Paradox.TERMS_PRIVACY_NOTICE, {}),
                                className: xI.terms,
                                onLinkSelect: cI
                            })]
                        }), (0, z.jsx)("div", {
                            className: xI.buttonRow,
                            children: (0, z.jsx)(Gp, {
                                theme: RE,
                                onSelect: T,
                                children: (0, z.jsx)(Pc.Paradox.SUBMIT_REGISTRATION_BUTTON, {})
                            })
                        }), (0, z.jsx)("div", {
                            className: xI.divider
                        }), (0, z.jsx)("div", {
                            className: xI.buttonRow,
                            children: (0, z.jsx)(Gp, {
                                theme: DE,
                                onSelect: sI,
                                children: (0, z.jsx)(Pc.Paradox.LOGIN_FROM_REGISTRATION_LINK, {})
                            })
                        })]
                    })
                })
            })
        };
        X.add("game-ui/menu/components/paradox/dialogs/registration-dialog.tsx", {
            get RegistrationDialog() {
                return Uz
            },
            set RegistrationDialog(e) {
                Uz = e
            }
        });
        let Bz = {
            "loading-overlay": "loading-overlay_ica",
            loadingOverlay: "loading-overlay_ica",
            disabled: "disabled_AdS"
        };
        X.add("game-ui/menu/components/paradox/paradox-dialog-renderer.module.scss", {
            get classes() {
                return Bz
            },
            set classes(e) {
                Object.assign(Bz, e)
            }
        });
        const Gz = Bz,
            Vz = new Eg("CHILDREN"),
            Hz = {
                [JE.Login]: Oz,
                [JE.Registration]: Uz,
                [JE.AccountLink]: Tz,
                [JE.AccountLinkOverwrite]: Ez,
                [JE.LegalDocument]: Sz,
                [JE.Confirmation]: Iz,
                [JE.Error]: yz,
                [JE.MultiOption]: _z
            };
        var Kz = ({
                children: e
            }) => {
                const t = sl(GE),
                    n = Wz();
                let s;
                return s = t ? null : n.length > 0 ? n.length - 1 : Vz, (0, z.jsxs)(ap, {
                    focused: s,
                    children: [(0, z.jsx)(ip, {
                        focusKey: Vz,
                        children: e
                    }), n.map(((e, t) => (0, z.jsx)(ip, {
                        focusKey: t,
                        children: (0, z.jsx)(oT, {
                            children: e
                        })
                    }, t))), t && (0, z.jsx)(zz, {})]
                })
            },
            Wz = () => {
                const e = sl(eI);
                return (0, Y.useMemo)((() => e.map((e => qA(Hz, e, void 0))).filter((e => null != e))), [e])
            };
        const zz = () => (0, z.jsx)("div", {
            className: Gz.loadingOverlay,
            children: (0, z.jsx)(Pc.Paradox.LOADING, {})
        });
        X.add("game-ui/menu/components/paradox/paradox-dialog-renderer.tsx", {
            get ParadoxDialogRenderer() {
                return Kz
            },
            set ParadoxDialogRenderer(e) {
                Kz = e
            },
            get useParadoxDialogs() {
                return Wz
            },
            set useParadoxDialogs(e) {
                Wz = e
            }
        });
        const Yz = "assetUploadPanel";
        var $z = $r(Yz, "children"),
            qz = $r(Yz, "visible"),
            Xz = Jr(Yz, "close");
        X.add("game-ui/menu/data-binding/asset-upload-bindings.ts", {
            get assetUploadWidgets() {
                return assetUploadWidgets
            },
            set assetUploadWidgets(e) {
                assetUploadWidgets = e
            },
            get assetUploadPanelVisible() {
                return assetUploadPanelVisible
            },
            set assetUploadPanelVisible(e) {
                assetUploadPanelVisible = e
            },
            get closeAssetUploadPanel() {
                return closeAssetUploadPanel
            },
            set closeAssetUploadPanel(e) {
                closeAssetUploadPanel = e
            }
        });
        let Qz = {
            panel: "panel_ezY"
        };
        X.add("game-ui/menu/components/asset-upload-panel/asset-upload-panel-renderer.module.scss", {
            get classes() {
                return Qz
            },
            set classes(e) {
                Object.assign(Qz, e)
            }
        });
        const Zz = Qz,
            Jz = new Eg("DIALOG"),
            eY = new Eg("CHILDREN");
        var tY = ({
            children: e
        }) => {
            const t = sl(qz);
            return (0, z.jsxs)(ap, {
                focused: t ? Jz : eY,
                children: [(0, z.jsx)(ip, {
                    focusKey: eY,
                    children: e
                }), t && (0, z.jsx)(ip, {
                    focusKey: Jz,
                    children: (0, z.jsx)(nY, {})
                })]
            })
        };
        const nY = () => (0, z.jsx)(zm, {
                children: (0, z.jsx)(oT, {
                    children: (0, z.jsx)(Kz, {
                        children: (0, z.jsx)(YT, {
                            theme: XT,
                            className: Zz.panel,
                            onClose: Xz,
                            header: (0, z.jsx)(QT, {
                                children: (0, z.jsx)(Pc.Menu.ASSET_UPLOAD, {})
                            }),
                            children: (0, z.jsx)(sY, {})
                        })
                    })
                })
            }, "AssetUploadPanel"),
            sY = () => {
                const e = VA("assetUploadPanel"),
                    t = sl($z);
                return (0, z.jsx)(fz, {
                    parent: e,
                    data: t
                })
            };
        X.add("game-ui/menu/components/asset-upload-panel/asset-upload-panel-renderer.tsx", {
            get AssetUploadPanelRenderer() {
                return tY
            },
            set AssetUploadPanelRenderer(e) {
                tY = e
            }
        });
        const iY = new Eg("DIALOG"),
            aY = new Eg("CHILDREN"),
            oY = new Eg("NO_KEY");
        var rY = ({
            children: e
        }) => {
            const t = sl(wl),
                n = sl(Ol);
            return (0, z.jsxs)(ap, {
                focused: t ? iY : aY,
                children: [t && (0, z.jsx)(zm, {
                    children: (0, z.jsx)(oT, {
                        children: (0, z.jsxs)(YT, {
                            focusKey: iY,
                            theme: XT,
                            className: JT.dialog,
                            children: [(0, z.jsx)("div", {
                                className: JT.message,
                                children: (0, z.jsx)(Pc.Options.DISPLAY_SETTINGS_PROMPT, {})
                            }), (0, z.jsx)("div", {
                                className: JT.buttons,
                                children: (0, z.jsxs)(tp, {
                                    initialFocused: oY,
                                    children: [(0, z.jsx)(Gp, {
                                        theme: AE,
                                        className: JT.button,
                                        onSelect: Ql,
                                        children: (0, z.jsx)(Pc.Options.DISPLAY_SETTINGS_CONFIRM, {})
                                    }), (0, z.jsx)(Gp, {
                                        focusKey: oY,
                                        theme: AE,
                                        className: Zu()(JT.button, AE.negative),
                                        onSelect: Zl,
                                        children: (0, z.jsx)(Pc.Options.DISPLAY_SETTINGS_REVERT, {
                                            TIME: (0, z.jsx)(Gc, {
                                                value: n,
                                                unit: Oc.Integer
                                            })
                                        })
                                    })]
                                })
                            })]
                        })
                    })
                }, "displayConfirmationDialog"), (0, z.jsx)(ip, {
                    focusKey: aY,
                    children: e
                })]
            })
        };
        X.add("game-ui/menu/components/options-screen/display-confirmation-dialog/display-confirmation-dialog.tsx", {
            get DisplayConfirmationDialogRenderer() {
                return rY
            },
            set DisplayConfirmationDialogRenderer(e) {
                rY = e
            }
        });
        const lY = "inputRebinding";
        var cY = $r(lY, "activeRebinding"),
            uY = $r(lY, "activeConflict"),
            dY = Jr(lY, "cancelRebinding"),
            mY = Jr(lY, "completeAndSwapConflicts"),
            hY = Jr(lY, "completeAndUnsetConflicts");
        X.add("game-ui/menu/data-binding/input-rebinding-bindings.ts", {
            get activeRebinding() {
                return activeRebinding
            },
            set activeRebinding(e) {
                activeRebinding = e
            },
            get activeConflict() {
                return activeConflict
            },
            set activeConflict(e) {
                activeConflict = e
            },
            get cancelRebinding() {
                return dY
            },
            set cancelRebinding(e) {
                dY = e
            },
            get completeRebindAndSwapConflicts() {
                return mY
            },
            set completeRebindAndSwapConflicts(e) {
                mY = e
            },
            get completeRebindAndUnsetConflicts() {
                return hY
            },
            set completeRebindAndUnsetConflicts(e) {
                hY = e
            }
        });
        let gY = {
            divider: "divider_KxA",
            "conflict-group": "conflict-group_bSf",
            conflictGroup: "conflict-group_bSf",
            "conflict-title": "conflict-title_uNI",
            conflictTitle: "conflict-title_uNI",
            "conflict-item": "conflict-item_Nnu",
            conflictItem: "conflict-item_Nnu",
            "title-control-text": "title-control-text_tgr button_ehL",
            titleControlText: "title-control-text_tgr button_ehL",
            "message-keyboard": "message-keyboard_Ows",
            messageKeyboard: "message-keyboard_Ows",
            "first-p": "first-p_O8f",
            firstP: "first-p_O8f",
            "second-p": "second-p_RhP",
            secondP: "second-p_RhP",
            "message-gamepad": "message-gamepad_ZoB",
            messageGamepad: "message-gamepad_ZoB"
        };
        X.add("game-ui/menu/components/options-screen/input-rebinding-dialog/input-rebinding-dialog.module.scss", {
            get classes() {
                return gY
            },
            set classes(e) {
                Object.assign(gY, e)
            }
        });
        const pY = gY,
            fY = {
                button: pY.titleControlText
            },
            xY = new Eg("CHILDREN_KEY"),
            vY = new Eg("DIALOG_KEY");
        var _Y = ({
            children: e
        }) => {
            const t = sl(cY),
                n = sl(uY),
                s = null != t && null == n;
            return (0, z.jsx)(z.Fragment, {
                children: (0, z.jsx)(Cp, {
                    excludes: [],
                    disabled: !s,
                    children: (0, z.jsxs)(ap, {
                        focused: null != t ? vY : xY,
                        children: [(0, z.jsx)(ip, {
                            focusKey: xY,
                            children: e
                        }), null != t && (0, z.jsx)(zm, {
                            children: (0, z.jsx)(ip, {
                                focusKey: vY,
                                children: null == n ? (0, z.jsx)(bY, {
                                    binding: t,
                                    onClose: dY
                                }) : (0, z.jsx)(IY, {
                                    binding: n.binding,
                                    conflicts: n.conflicts,
                                    unsolved: n.unsolved,
                                    onConfirmSwap: n.swap ? mY : void 0,
                                    onConfirmBatchSwap: n.batchSwap ? mY : void 0,
                                    onConfirmUnset: n.unset ? hY : void 0,
                                    onClose: dY
                                })
                            })
                        }, "inputRebindingDialog")]
                    })
                })
            })
        };
        const bY = ({
                binding: e,
                onClose: t
            }) => {
                const n = Dm(),
                    s = zx(),
                    i = EY(n, s, e),
                    a = new Mf(((t, n, s) => {
                        const i = {
                            name: t,
                            device: e.device
                        };
                        return (0, z.jsx)(yf, {
                            bindings: [i],
                            modifiers: [],
                            theme: fY
                        })
                    }));
                return (0, z.jsx)(oT, {
                    children: (0, z.jsx)(Dg, {
                        disabled: n && "Gamepad" === e.device,
                        onAction: t,
                        children: (0, z.jsx)(YT, {
                            theme: XT,
                            className: JT.dialog,
                            header: (0, z.jsx)(QT, {
                                onCloseOverride: "Mouse" !== e.device ? t : void 0,
                                children: (0, z.jsx)(Pc.Options.INPUT_REBIND_TITLE, {
                                    BINDING: (0, z.jsx)(Tc, {
                                        id: `Options.OPTION[${e.title}]`,
                                        fallback: `Options.OPTION[${e.title}]`
                                    })
                                })
                            }),
                            children: (0, z.jsx)(zf, {
                                theme: JT,
                                renderer: a,
                                className: Zu()(JT.message, pY.secondP, "Gamepad" === e.device ? pY.messageGamepad : pY.messageKeyboard),
                                children: i
                            })
                        })
                    })
                })
            },
            TY = {
                LSP: "<leftStickPress>",
                RSP: "<rightStickPress>",
                SHIFT: "<shift>",
                ALT: "<alt>",
                CTRL: "<ctrl>"
            },
            EY = (e, t, n) => "Gamepad" !== n.device ? n.allowModifiers ? (0, z.jsx)(Pc.Options.INPUT_REBIND_PROMPT_NEW, {
                hash: n.device,
                ...TY
            }) : (0, z.jsx)(Pc.Options.INPUT_REBIND_PROMPT_NO_MODIFIERS, {
                hash: n.device
            }) : e ? t === _m.PS ? n.allowModifiers ? (0, z.jsx)(Pc.Options.INPUT_REBIND_PROMPT_NEW_PS, {
                hash: n.device,
                ...TY
            }) : (0, z.jsx)(Pc.Options.INPUT_REBIND_PROMPT_NO_MODIFIERS_PS, {
                hash: n.device
            }) : t === _m.Xbox ? n.allowModifiers ? (0, z.jsx)(Pc.Options.INPUT_REBIND_PROMPT_NEW_XBOX, {
                hash: n.device,
                ...TY
            }) : (0, z.jsx)(Pc.Options.INPUT_REBIND_PROMPT_NO_MODIFIERS_XBOX, {
                hash: n.device
            }) : void 0 : n.allowModifiers ? (0, z.jsx)(Pc.Options.INPUT_REBIND_PROMPT_NEW, {
                hash: n.device,
                ...TY
            }) : (0, z.jsx)(Pc.Options.INPUT_REBIND_PROMPT_NO_MODIFIERS, {
                hash: n.device
            }),
            IY = ({
                binding: e,
                conflicts: t,
                unsolved: n,
                onConfirmSwap: s,
                onConfirmBatchSwap: i,
                onConfirmUnset: a,
                onClose: o
            }) => {
                const r = {
                        BINDING: (0, z.jsx)(Pc.Options.OPTION, {
                            hash: e.title,
                            showIdOnFail: !0
                        }),
                        CONTROL: "<CONTROL>"
                    },
                    l = new Mf(((t, n, s) => (0, z.jsx)(yf, {
                        bindings: [e.binding],
                        modifiers: e.modifiers,
                        shortName: pf.FallbackToLong,
                        theme: fY
                    }))),
                    c = t.reduce(((e, t) => {
                        const n = t.resolution.binding.name + t.resolution.modifiers.map((e => e.name)).join() + t.binding.isRebindable;
                        return e[n] || (e[n] = {
                            canBeRebound: t.binding.isRebindable,
                            binding: t.resolution.binding,
                            modifiers: t.resolution.modifiers,
                            group: t.resolution.device,
                            conflicts: []
                        }), e[n].conflicts.push(t.resolution), e
                    }), {}),
                    u = Object.values(c),
                    d = PE();
                return (0, z.jsx)(oT, {
                    children: (0, z.jsx)(Dg, {
                        onAction: o,
                        children: (0, z.jsx)(FE, {
                            controller: d,
                            children: (0, z.jsxs)(YT, {
                                theme: XT,
                                className: JT.dialog,
                                header: (0, z.jsx)(QT, {
                                    children: (0, z.jsx)(Pc.Options.INPUT_CONFLICT_TITLE, {})
                                }),
                                onClose: dY,
                                children: [(0, z.jsx)(zf, {
                                    theme: JT,
                                    renderer: l,
                                    className: Zu()(JT.message, pY.firstP, "Gamepad" === e.device ? pY.messageGamepad : pY.messageKeyboard),
                                    children: n ? i ? (0, z.jsx)(Pc.Options.INPUT_CONFLICT_BATCH_NO_RESOLUTION, {
                                        ...r
                                    }) : (0, z.jsx)(Pc.Options.INPUT_CONFLICT_NO_RESOLUTION, {
                                        ...r
                                    }) : i ? (0, z.jsx)(Pc.Options.INPUT_CONFLICT_BATCH_RESOLUTION, {
                                        ...r
                                    }) : (0, z.jsx)(Pc.Options.INPUT_CONFLICT_PROMPT, {
                                        ...r
                                    })
                                }), (0, z.jsxs)(tp, {
                                    initialFocused: "cancel",
                                    children: [(0, z.jsx)("div", {
                                        className: JT.errorDetails,
                                        style: {
                                            flexDirection: "column"
                                        },
                                        children: (0, z.jsx)(xf, {
                                            controller: d,
                                            className: JT.content,
                                            hintClassName: JT.scrollHint,
                                            labelClassName: JT.scrollHintLabel,
                                            children: u.map(((e, t) => (0, z.jsxs)(Y.Fragment, {
                                                children: [(0, z.jsxs)(Ip, {
                                                    className: pY.conflictGroup,
                                                    children: [i && (0, z.jsx)(zf, {
                                                        theme: JT,
                                                        renderer: new Mf(((t, n, s) => (0, z.jsx)(yf, {
                                                            bindings: [e.binding],
                                                            modifiers: e.modifiers,
                                                            shortName: pf.FallbackToLong,
                                                            theme: fY
                                                        }))),
                                                        className: Zu()(pY.conflictTitle, pY.firstP, "Gamepad" === e.binding.device ? pY.messageGamepad : pY.messageKeyboard),
                                                        children: e.binding.name ? e.canBeRebound ? n ? (0, z.jsx)(Pc.Options.BATCH_SWAP_GROUP_BLOCK_RESOLUTION, {
                                                            ...r
                                                        }) : (0, z.jsx)(Pc.Options.BATCH_SWAP_GROUP_RESOLUTION, {
                                                            ...r
                                                        }) : (0, z.jsx)(Pc.Options.BATCH_SWAP_GROUP_NO_RESOLUTION, {
                                                            ...r
                                                        }) : (0, z.jsx)(Pc.Options.BATCH_SWAP_GROUP_RESET_PROMT, {})
                                                    }), e.conflicts.map(((e, n) => (0, z.jsxs)("div", {
                                                        className: pY.conflictItem,
                                                        children: [(0, z.jsx)("p", {
                                                            children: (0, z.jsx)(Pc.Options.INPUT_MAP, {
                                                                hash: e.optionGroup,
                                                                showIdOnFail: !0
                                                            })
                                                        }), (0, z.jsx)("p", {
                                                            children: (0, z.jsx)(Pc.Options.OPTION, {
                                                                hash: e.title,
                                                                showIdOnFail: !0
                                                            })
                                                        })]
                                                    }, `${t} ${n}`)))]
                                                }), t < u.length - 1 && (0, z.jsx)("div", {
                                                    className: pY.divider
                                                })]
                                            }, t)))
                                        })
                                    }), (0, z.jsxs)("div", {
                                        className: JT.buttonsVertical,
                                        children: [!n && s && (0, z.jsx)(Gp, {
                                            theme: AE,
                                            className: JT.button,
                                            onSelect: s,
                                            children: (0, z.jsx)(Pc.Options.SWAP_BINDINGS, {})
                                        }), !n && i && (0, z.jsx)(Gp, {
                                            theme: AE,
                                            className: JT.button,
                                            onSelect: i,
                                            children: (0, z.jsx)(Pc.Options.BATCH_SWAP_BINDINGS, {})
                                        }), !n && a && (0, z.jsx)(Gp, {
                                            theme: AE,
                                            className: JT.button,
                                            onSelect: a,
                                            children: (0, z.jsx)(Pc.Options.UNSET_BINDINGS, {})
                                        }), (0, z.jsx)(Gp, {
                                            focusKey: "cancel",
                                            theme: AE,
                                            className: Zu()(JT.button, AE.negative),
                                            onSelect: o,
                                            children: (0, z.jsx)(Pc.Common.CANCEL, {})
                                        })]
                                    })]
                                })]
                            })
                        })
                    })
                })
            };
        X.add("game-ui/menu/components/options-screen/input-rebinding-dialog/input-rebinding-dialog.tsx", {
            get InputRebindingDialogRenderer() {
                return _Y
            },
            set InputRebindingDialogRenderer(e) {
                _Y = e
            }
        });
        const yY = ({
            children: e,
            activeUiClassName: t
        }) => {
            const n = sl(Pl);
            (0, Y.useEffect)((() => VR(n)), [n]);
            const s = sl(Ll);
            (0, Y.useEffect)((() => HR(s)), [s]);
            const i = sl(Ml);
            (0, Y.useEffect)((() => WR(i)), [i]);
            const a = sl(Al);
            return (0, Y.useEffect)((() => zR(a)), [a]), jY(t), $R(false), (0, z.jsxs)(yT, {
                children: [(0, z.jsx)(ST, {}), (0, z.jsx)(UR, {
                    children: (0, z.jsx)(qL, {
                        children: (0, z.jsx)(aE, {
                            children: (0, z.jsx)(rY, {
                                children: (0, z.jsx)(tY, {
                                    children: (0, z.jsxs)(_Y, {
                                        children: [e, false]
                                    })
                                })
                            })
                        })
                    })
                })]
            })
        };

        function jY(e) {
            const t = sl(hE),
                n = Dm();
            ev(Zu()(t, e, n ? "gamepad" : "keyboard"))
        }
        const SY = {
            default: "Overpass",
            "ru-RU": "Noto Sans",
            "ko-KR": "Noto Sans KR",
            "ja-JP": "Noto Sans JP",
            "zh-HANS": "Noto Sans SC",
            "zh-HANT": "Noto Sans TC"
        };
        var CY, NY = ({
            children: e
        }) => {
            const t = sl(pc),
                n = sl(Gl),
                s = sl(fE),
                i = (0, Y.useMemo)((() => function (e) {
                    switch (e) {
                    case mc.Id:
                        return OY;
                    case mc.Fallback:
                        return PY;
                    default:
                        return wY
                    }
                }(t)), [t]),
                [a, o] = (0, Y.useState)({
                    translate: i,
                    unitSettings: n
                });
            return (0, Y.useEffect)((() => o({
                    translate: i,
                    unitSettings: n
                })), [n, i]), (0, Y.useEffect)((() => {
                    const e = fc.subscribe((() => o((e => ({
                        ...e
                    })))));
                    return () => e.dispose()
                }), []), Pa.defaults.font.family = SY[s] || SY.default,
                function (e) {
                    ev(`locale-${e}`)
                }(s), (0, z.jsx)(ic.Provider, {
                    value: a,
                    children: e
                })
        };

        function wY(e, t) {
            const n = Rr().translate(e);
            return n === e ? t ?? null : n
        }

        function OY(e, t) {
            return e
        }

        function PY(e, t) {
            return t ?? null
        }
        X.add("game-ui/common/localization/localization-provider.tsx", {
                get LocalizationProvider() {
                    return NY
                },
                set LocalizationProvider(e) {
                    NY = e
                }
            }),
            function (e) {
                e[e.main = 0] = "main", e[e.pauseMenu = 1] = "pauseMenu", e[e.options = 2] = "options", e[e.freeCamera = 3] = "freeCamera"
            }(CY || (CY = {}));
        var LY = qr(0),
            AY = e => {
                LY.update(e)
            };
        X.add("game-ui/editor/data-binding/editor-bindings.ts", {
            get EditorScreen() {
                return CY
            },
            set EditorScreen(e) {
                CY = e
            },
            get activeEditorScreen() {
                return activeEditorScreen
            },
            set activeEditorScreen(e) {
                activeEditorScreen = e
            },
            get setActiveEditorScreen() {
                return AY
            },
            set setActiveEditorScreen(e) {
                AY = e
            }
        });
        let MY = {
            header: "header_HpJ",
            title: "title_lCJ",
            shortcut: "shortcut_Sez",
            description: "description_dNa",
            content: "content_OhK"
        };
        X.add("game-ui/common/tooltip/description-tooltip/description-tooltip.module.scss", {
            get classes() {
                return MY
            },
            set classes(e) {
                Object.assign(MY, e)
            }
        });
        const RY = MY;
        var kY = ({
                title: e,
                description: t,
                content: n,
                shortcut: s,
                children: i,
                ...a
            }) => {
                const o = (0, z.jsx)(DY, {
                    title: e,
                    description: t,
                    content: n,
                    shortcut: s
                });
                return (0, z.jsx)(Tg, {
                    ...a,
                    tooltip: o,
                    children: i
                })
            },
            DY = ({
                title: e,
                description: t,
                content: n,
                shortcut: s,
                className: i
            }) => {
                const a = Y.Children.count(e) > 0,
                    o = Y.Children.count(t) > 0,
                    r = Y.Children.count(n) > 0,
                    l = Y.Children.count(s) > 0;
                return (0, z.jsxs)("div", {
                    className: Zu()(RY.layout, i),
                    children: [(0, z.jsxs)("div", {
                        className: RY.header,
                        children: [a && (0, z.jsx)("div", {
                            className: RY.title,
                            children: e
                        }), l && (0, z.jsx)("div", {
                            className: RY.shortcut,
                            children: s
                        })]
                    }), o && (0, z.jsx)(zf, {
                        className: RY.description,
                        children: t
                    }), r && (0, z.jsx)("div", {
                        className: RY.content,
                        children: n
                    })]
                })
            };
        X.add("game-ui/common/tooltip/description-tooltip/description-tooltip.tsx", {
            get DescriptionTooltip() {
                return kY
            },
            set DescriptionTooltip(e) {
                kY = e
            },
            get TooltipLayout() {
                return DY
            },
            set TooltipLayout(e) {
                DY = e
            }
        });
        let FY = {
            field: "field_eKJ",
            blinkOnSelect: "blinkOnSelect_Lbx",
            content: "content_syM",
            selectable: "selectable_otQ",
            divider: "divider_GbU"
        };
        X.add("game-ui/game/components/toolbar/components/field/field.module.scss", {
            get classes() {
                return FY
            },
            set classes(e) {
                Object.assign(FY, e)
            }
        });
        const UY = FY;
        var BY = ({
                contentClassName: e,
                className: t,
                children: n,
                onSelect: s
            }) => {
                const i = Zu()(UY.field, null != s && UY.selectable, t),
                    a = (0, z.jsx)("div", {
                        className: Zu()(UY.content, e),
                        children: n
                    });
                return null != s ? (0, z.jsx)(Gp, {
                    disableHint: !0,
                    className: i,
                    onSelect: s,
                    children: a
                }) : (0, z.jsx)(Ip, {
                    className: i,
                    children: a
                })
            },
            GY = () => (0, z.jsx)("div", {
                className: UY.divider
            });
        X.add("game-ui/game/components/toolbar/components/field/field.tsx", {
            get Field() {
                return BY
            },
            set Field(e) {
                BY = e
            },
            get Divider() {
                return GY
            },
            set Divider(e) {
                GY = e
            }
        });
        let VY = {
            hint: "hint_gUV",
            "hint-right": "hint-right_jg4",
            hintRight: "hint-right_jg4"
        };
        X.add("game-ui/game/components/toolbar/bottom/hint-theme.module.scss", {
            get classes() {
                return VY
            },
            set classes(e) {
                Object.assign(VY, e)
            }
        });
        const HY = VY;
        let KY = {
            "time-controls": "time-controls_TVa field_eKJ",
            timeControls: "time-controls_TVa field_eKJ",
            period: "period_iJ_",
            button: "button_w1a",
            paused: "paused_DLu",
            "secondary-active": "secondary-active_X5T",
            secondaryActive: "secondary-active_X5T",
            "play-pause": "play-pause_Z_u",
            playPause: "play-pause_Z_u",
            speed: "speed_O0e",
            "date-time-container": "date-time-container_UTv",
            dateTimeContainer: "date-time-container_UTv",
            "date-time": "date-time_mlZ",
            dateTime: "date-time_mlZ",
            alternate2: "alternate2_ZMf",
            "disable-pause-animation": "disable-pause-animation_GSc",
            disablePauseAnimation: "disable-pause-animation_GSc",
            "paused-label": "paused-label_YTz",
            pausedLabel: "paused-label_YTz",
            none: "none_rxc",
            "time-hours": "time-hours_w20",
            timeHours: "time-hours_w20",
            "time-colon": "time-colon_t_C",
            timeColon: "time-colon_t_C",
            "time-minutes": "time-minutes_QOr",
            timeMinutes: "time-minutes_QOr",
            "time-period": "time-period_Qyj",
            timePeriod: "time-period_Qyj",
            "date-container": "date-container_Avy",
            dateContainer: "date-container_Avy",
            date: "date_fBv",
            alternate1: "alternate1_Am9"
        };
        X.add("game-ui/game/components/toolbar/bottom/time-controls/time-controls.module.scss", {
            get classes() {
                return KY
            },
            set classes(e) {
                Object.assign(KY, e)
            }
        });
        const WY = KY,
            zY = AT({
                pause: "Media/Glyphs/SimulationPause.svg",
                play: "Media/Glyphs/SimulationPlay.svg",
                speed1: "Media/Glyphs/SimulationSpeed1.svg",
                speed2: "Media/Glyphs/SimulationSpeed2.svg",
                speed3: "Media/Glyphs/SimulationSpeed3.svg"
            });
        var YY = ({
            disablePauseAnimation: e,
            editor: t = !1
        }) => {
            const [n, s] = (0, Y.useState)(!1), [i, a] = (0, Y.useState)(!1), o = sl(vO), r = sl(_O), l = sl(Gl).timeFormat === Yl.TwentyFourHours, c = RK(2, QY);
            return (0, z.jsxs)("div", {
                className: Zu()(WY.timeControls, {
                    [WY.period]: !l,
                    [WY.disablePauseAnimation]: e
                }),
                children: [(0, z.jsx)(Pf, {
                    action: "Select",
                    active: i,
                    className: HY.hint
                }), (0, z.jsx)(wx, {
                    uiTag: kx.value?.toolbarSimulationToggle,
                    editor: t,
                    children: (0, z.jsx)(kY, {
                        title: o ? (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_PLAY, {}) : (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_PAUSE, {}),
                        description: o ? (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_PLAY, {}) : (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_PAUSE, {}),
                        shortcut: (0, z.jsx)(Lf, {
                            action: "Pause Simulation",
                            shortName: pf.FallbackToControl
                        }),
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: a,
                            children: (0, z.jsx)(sf, {
                                disableHint: !0,
                                tinted: !0,
                                src: o ? zY.pause : zY.play,
                                selectSound: null,
                                className: Zu()(WY.button, WY.playPause, o && WY.paused),
                                onSelect: qY
                            })
                        })
                    })
                }), (0, z.jsx)(GY, {}), (0, z.jsx)(wx, {
                    uiTag: kx.value?.toolbarSimulationDateTime,
                    children: (0, z.jsx)(kY, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_DATE, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_DATE, {}),
                        children: (0, z.jsx)($Y, {
                            tf: l,
                            paused: o
                        })
                    })
                }), (0, z.jsx)(GY, {}), (0, z.jsx)(wx, {
                    uiTag: kx.value?.toolbarSimulationSpeed,
                    children: (0, z.jsx)(kY, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_GAME_SPEED, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_GAME_SPEED, {}),
                        shortcut: (0, z.jsx)(Lf, {
                            action: "Switch Speed",
                            shortName: pf.FallbackToControl
                        }),
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: s,
                            children: (0, z.jsx)(sf, {
                                disableHint: !0,
                                tinted: !0,
                                src: s$(r),
                                selectSound: null,
                                className: Zu()(WY.button, WY.speed, o && WY.paused, c.mouseDown && WY.secondaryActive),
                                onSelect: XY,
                                onMouseDown: c.onMouseDown,
                                onMouseUp: c.onMouseUp
                            })
                        })
                    })
                }), (0, z.jsx)(Pf, {
                    action: "Select",
                    active: n,
                    className: HY.hintRight
                })]
            })
        };
        const $Y = ({
            tf: e,
            paused: t
        }) => {
            const n = sl(gO),
                s = ac(),
                i = (0, Y.useRef)(null),
                a = (0, Y.useRef)(null),
                o = (0, Y.useRef)(null),
                r = (0, Y.useRef)(null),
                l = (0, Y.useCallback)((t => {
                    const l = CO(n, t),
                        c = Tu(e ? l.hour : l.hour % 12 || 12, 2),
                        u = Tu(l.minute, 2);
                    i.current && a.current && r.current && (i.current.innerHTML = c, a.current.innerHTML = u, r.current.innerHTML = Nu(s, l)), o.current && (o.current.innerHTML = (l.hour < 12 ? s.translate("Common.TIME_PERIOD_AM") : s.translate("Common.TIME_PERIOD_PM")) || "")
                }), [s, e, n]),
                c = ol(pO, l),
                [u] = (0, Y.useState)((() => CO(n, c))),
                d = (0, Y.useMemo)((() => Tu(e ? u.hour : u.hour % 12 || 12, 2)), [u.hour, e]),
                m = (0, Y.useMemo)((() => Tu(u.minute, 2)), [u.minute]);
            return (0, z.jsx)(xd, {
                children: (0, z.jsxs)("div", {
                    className: WY.dateTimeContainer,
                    children: [(0, z.jsxs)("div", {
                        className: Zu()(WY.dateTime, t && WY.paused),
                        children: [(0, z.jsx)("div", {
                            className: WY.timeHours,
                            ref: i,
                            children: d
                        }), (0, z.jsx)("div", {
                            className: WY.timeColon,
                            children: ":"
                        }), (0, z.jsx)("div", {
                            className: WY.timeMinutes,
                            ref: a,
                            children: m
                        }), !e && (0, z.jsx)("div", {
                            className: WY.timePeriod,
                            ref: o,
                            children: u.hour < 12 ? (0, z.jsx)(Pc.Common.TIME_PERIOD_AM, {}) : (0, z.jsx)(Pc.Common.TIME_PERIOD_PM, {})
                        }), (0, z.jsx)("div", {
                            className: WY.date,
                            ref: r,
                            children: (0, z.jsx)(Su, {
                                value: u
                            })
                        })]
                    }), t && (0, z.jsx)("div", {
                        className: WY.pausedLabel,
                        children: (0, z.jsx)(Pc.Toolbar.SIMULATION_PAUSED, {})
                    })]
                })
            })
        };

        function qY() {
            const e = !vO.value;
            lp(e ? rp.pauseSimulation : rp.resumeSimulation), TO(e)
        }

        function XY() {
            n$(_O.value + 1)
        }

        function QY() {
            n$(_O.value + 3 - 1)
        }

        function ZY() {
            n$(0)
        }

        function JY() {
            n$(1)
        }

        function e$() {
            n$(2)
        }

        function t$() {
            if (vO.value) lp(rp.resumeSimulation), EO(0);
            else {
                const e = _O.value;
                e < 2 ? n$(e + 1) : (lp(rp.pauseSimulation), TO(!0))
            }
        }

        function n$(e) {
            const t = e % 3;
            lp(function (e) {
                return e < .5 ? rp.simulationSpeed1 : e < 1.5 ? rp.simulationSpeed2 : rp.simulationSpeed3
            }(t)), EO(t)
        }

        function s$(e) {
            return e < .5 ? zY.speed1 : e < 1.5 ? zY.speed2 : zY.speed3
        }

        function i$() {
            const e = sl(Ob),
                t = sl(PO),
                n = sl(KO),
                s = sl(iv),
                i = a$(),
                a = (0, Y.useCallback)((() => ZO(function (e) {
                    const t = e.modes.reduce(((t, n) => n.index > e.modeIndex && (void 0 === t || n.index < t) ? n.index : t), void 0);
                    if (void 0 !== t) return t;
                    const n = e.modes.reduce(((e, t) => void 0 === e || t.index < e ? t.index : e), void 0);
                    return void 0 !== n ? n : e.modeIndex
                }(t))), [t]),
                o = sl(PS),
                r = sl(RO),
                l = sl(MO),
                c = (0, Y.useCallback)((() => {
                    aP((l & r) === r ? l & ~r : l | r)
                }), [r, l]);
            return (0, Y.useMemo)((() => ({
                ...i,
                Back: t.id !== uP || o ? () => {
                    t.id === cP && lp(rp.bulldozeEnd), o && BS(!1), QO(uP)
                } : null,
                "Leave Underground Mode": n ? () => {
                    lp(rp.increaseElevation), lP(!1)
                } : null,
                "Leave Info View": null != s ? rv : null,
                "Pause Menu": e !== Nb.pauseMenu ? Mb : null,
                "Switch Toolmode": a,
                "Toggle Snapping": c,
                "Hide UI": () => Pb(Ob.value !== Nb.freeCamera ? Nb.freeCamera : Nb.main)
            })), [i, t.id, n, s, e, a, c, o])
        }

        function a$() {
            const e = sl(vO);
            return (0, Y.useMemo)((() => ({
                "Switch Speed": t$,
                "Speed 1": ZY,
                "Speed 2": JY,
                "Speed 3": e$,
                "Pause Simulation": e ? null : () => {
                    lp(rp.pauseSimulation), TO(!0)
                },
                "Resume Simulation": e ? () => {
                    lp(rp.resumeSimulation), TO(!1)
                } : null
            })), [e])
        }
        X.add("game-ui/game/components/toolbar/bottom/time-controls/time-controls.tsx", {
            get TimeControls() {
                return YY
            },
            set TimeControls(e) {
                YY = e
            },
            get togglePause() {
                return qY
            },
            set togglePause(e) {
                qY = e
            },
            get switchSpeed() {
                return XY
            },
            set switchSpeed(e) {
                XY = e
            },
            get switchSpeedReverse() {
                return QY
            },
            set switchSpeedReverse(e) {
                QY = e
            },
            get speed1() {
                return ZY
            },
            set speed1(e) {
                ZY = e
            },
            get speed2() {
                return JY
            },
            set speed2(e) {
                JY = e
            },
            get speed3() {
                return e$
            },
            set speed3(e) {
                e$ = e
            },
            get switchSpeedOrPause() {
                return t$
            },
            set switchSpeedOrPause(e) {
                t$ = e
            }
        }), X.add("game-ui/game/components/game-input-actions.tsx", {
            get useGameInputActions() {
                return i$
            },
            set useGameInputActions(e) {
                i$ = e
            },
            get useSimSpeedInputActions() {
                return a$
            },
            set useSimSpeedInputActions(e) {
                a$ = e
            }
        });
        var o$ = ({
            onClose: e,
            focusKey: t
        }) => {
            const n = sl(WS),
                [s] = (0, Y.useState)(n);
            r$(), (0, Y.useEffect)((() => {
                if (zS(!0), !s) return () => zS(!1)
            }), [s]);
            const i = a$(),
                a = (0, Y.useMemo)((() => ({
                    Back: e,
                    "Take Photo": () => {
                        lp(rp.takePhoto), qS()
                    },
                    "Hide UI": e,
                    ...i
                })), [e, i]);
            return (0, z.jsx)(Cp, {
                children: (0, z.jsx)(Ag, {
                    actions: a,
                    children: (0, z.jsx)(ap, {
                        focusKey: t,
                        focused: null,
                        activation: qu.Always
                    })
                })
            })
        };

        function r$(e = !0) {
            tv(e ? "hide-ui" : void 0)
        }
        X.add("game-ui/game/components/free-camera-screen/free-camera-screen.tsx", {
            get FreeCameraScreen() {
                return o$
            },
            set FreeCameraScreen(e) {
                o$ = e
            },
            get useUIHidden() {
                return r$
            },
            set useUIHidden(e) {
                r$ = e
            }
        });
        const l$ = new Eg("NO_KEY");

        function c$() {
            const e = (0, Y.useContext)(sE);
            return (0, Y.useCallback)((() => e.showDialog((0, z.jsx)(u$, {}))), [e])
        }
        var u$ = () => {
            const e = (0, Y.useContext)(iE),
                t = (0, Y.useCallback)((() => {
                    e.onClose(), Lk()
                }), [e]),
                n = (0, Y.useCallback)((() => {
                    e.onClose(), yE()
                }), [e]),
                s = sl(hk);
            return (0, z.jsx)(eE, {
                wide: !0,
                title: (0, z.jsx)(Pc.Common.EXIT_DIALOG_TITLE, {}),
                buttons: (0, z.jsx)(z.Fragment, {
                    children: (0, z.jsxs)("div", {
                        className: JT.buttons,
                        children: [(0, z.jsx)(Gp, {
                            theme: AE,
                            className: JT.button,
                            onSelect: t,
                            children: (0, z.jsx)(Pc.Common.EXIT_TO_MENU, {})
                        }), s && (0, z.jsx)(Gp, {
                            theme: AE,
                            className: JT.button,
                            onSelect: n,
                            children: (0, z.jsx)(Pc.Common.EXIT_TO_DESKTOP, {})
                        }), (0, z.jsx)(Gp, {
                            focusKey: l$,
                            theme: AE,
                            className: Zu()(JT.button, AE.negative),
                            onSelect: e.onClose,
                            children: (0, z.jsx)(Pc.Common.CANCEL, {})
                        })]
                    })
                }),
                onClose: e.onClose,
                initialFocus: l$,
                children: (0, z.jsx)(zf, {
                    theme: JT,
                    children: (0, z.jsx)(Pc.Common.EXIT_DIALOG_TEXT, {})
                })
            })
        };
        X.add("game-ui/menu/components/pause-menu/exit-dialog/exit-dialog.tsx", {
            get useExitDialogCallback() {
                return c$
            },
            set useExitDialogCallback(e) {
                c$ = e
            },
            get ExitDialog() {
                return u$
            },
            set ExitDialog(e) {
                u$ = e
            }
        });
        let d$ = {
            enter: "enter_eIx enter_kO6",
            "enter-active": "enter-active_Y4y enter-active_lrI",
            enterActive: "enter-active_Y4y enter-active_lrI",
            exit: "exit_PzK exit_Von",
            "exit-active": "exit-active_jCs exit-active_jtN",
            exitActive: "exit-active_jCs exit-active_jtN",
            base: "base_D7z"
        };
        X.add("game-ui/menu/transitions/expand-fade-children.module.scss", {
            get classes() {
                return d$
            },
            set classes(e) {
                Object.assign(d$, e)
            }
        });
        const m$ = d$;
        let h$ = {
            "master-screen": "master-screen_B69",
            masterScreen: "master-screen_B69"
        };
        X.add("game-ui/menu/components/shared/master-screen/master-screen.module.scss", {
            get classes() {
                return h$
            },
            set classes(e) {
                Object.assign(h$, e)
            }
        });
        const g$ = h$;
        var p$ = Y.forwardRef((function ({
            focusKey: e,
            className: t,
            children: n
        }, s) {
            return (0, z.jsx)(ip, {
                focusKey: e,
                children: (0, z.jsx)(yp, {
                    children: (0, z.jsx)(mh, {
                        styles: m$,
                        children: (0, z.jsx)("div", {
                            ref: s,
                            className: Zu()(g$.masterScreen, t),
                            children: n
                        })
                    })
                })
            })
        }));
        X.add("game-ui/menu/components/shared/master-screen/master-screen.tsx", {
            get MasterScreen() {
                return p$
            },
            set MasterScreen(e) {
                p$ = e
            }
        });
        let f$ = {
            content: "content_Y6b",
            menu: "menu_ZQW",
            item: "item_Psh"
        };
        X.add("game-ui/menu/components/editor-pause-screen/editor-pause-screen.module.scss", {
            get classes() {
                return f$
            },
            set classes(e) {
                Object.assign(f$, e)
            }
        });
        const x$ = f$;
        var v$ = Y.forwardRef((function ({
            focusKey: e,
            className: t,
            onSelectScreen: n,
            onClose: s,
            onNewMap: i
        }, a) {
            const o = (0, Y.useMemo)((() => ({
                    "Pause Menu": s,
                    Back: s
                })), [s]),
                r = c$();
            return (0, z.jsx)(p$, {
                ref: a,
                focusKey: e,
                className: t,
                children: (0, z.jsx)(Cp, {
                    children: (0, z.jsx)(Ag, {
                        actions: o,
                        children: (0, z.jsx)("div", {
                            className: x$.content,
                            children: (0, z.jsx)("div", {
                                className: x$.menu,
                                children: (0, z.jsxs)(tp, {
                                    direction: Rg.Vertical,
                                    children: [(0, z.jsx)(NI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/ArrowRight.svg",
                                        theme: MI,
                                        onSelect: s,
                                        children: (0, z.jsx)(Pc.Editor.BACK_TO_EDITOR, {})
                                    }), (0, z.jsx)(NI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Pen.svg",
                                        theme: MI,
                                        onSelect: i,
                                        children: (0, z.jsx)(Pc.Editor.NEW_MAP, {})
                                    }), (0, z.jsx)(NI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Gear.svg",
                                        theme: MI,
                                        onSelect: () => n(CY.options),
                                        children: (0, z.jsx)(Pc.Menu.OPTIONS, {})
                                    }), (0, z.jsx)(NI, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Close.svg",
                                        theme: MI,
                                        onSelect: r,
                                        children: (0, z.jsx)(Pc.Menu.EXIT_GAME, {})
                                    })]
                                })
                            })
                        })
                    })
                })
            })
        }));
        X.add("game-ui/menu/components/editor-pause-screen/editor-pause-screen.tsx", {
            get EditorPauseScreen() {
                return v$
            },
            set EditorPauseScreen(e) {
                v$ = e
            }
        });
        let _$ = {
            "beta-pill": "beta-pill_OSA",
            betaPill: "beta-pill_OSA"
        };
        X.add("game-ui/common/beta-element/beta-pill/beta-pill.module.scss", {
            get classes() {
                return _$
            },
            set classes(e) {
                Object.assign(_$, e)
            }
        });
        const b$ = _$;
        var T$ = e => (0, z.jsx)(Kk, {
                children: (0, z.jsx)(E$, {
                    ...e,
                    children: (0, z.jsx)(Pc.Menu.BETA_LABEL, {})
                })
            }),
            E$ = ({
                children: e,
                className: t
            }) => (0, z.jsx)("div", {
                className: Zu()(b$.betaPill, t),
                children: e
            });
        X.add("game-ui/common/beta-element/beta-pill/beta-pill.tsx", {
            get ModdingBetaPill() {
                return T$
            },
            set ModdingBetaPill(e) {
                T$ = e
            },
            get BetaPill() {
                return E$
            },
            set BetaPill(e) {
                E$ = e
            }
        });
        var I$ = ({
            action: e = "Switch Tab",
            children: t,
            hidden: n
        }) => {
            const s = _f(e, Dm()),
                i = 2 === s?.items.length,
                a = i || 2 === s?.items[0]?.bindings.length;
            return n ? (0, z.jsx)(z.Fragment, {
                children: t
            }) : (0, z.jsxs)(z.Fragment, {
                children: [a && (0, z.jsx)(If, {
                    modifiers: s.items[0].modifiers,
                    bindings: [s.items[0].bindings[0]],
                    className: Ef.leftTab
                }), t, a && (0, z.jsx)(If, {
                    modifiers: s.items[i ? 1 : 0].modifiers,
                    bindings: [s.items[i ? 1 : 0].bindings[i ? 0 : 1]],
                    className: Ef.rightTab
                })]
            })
        };
        X.add("game-ui/common/input-events/action-hints/input-hint/tab-hint-icons.tsx", {
            get TabHintIcons() {
                return I$
            },
            set TabHintIcons(e) {
                I$ = e
            }
        });
        let y$ = {
            "locked-badge": "locked-badge_hmR",
            lockedBadge: "locked-badge_hmR"
        };
        X.add("game-ui/game/components/asset-menu/badges/locked-badge.module.scss", {
            get classes() {
                return y$
            },
            set classes(e) {
                Object.assign(y$, e)
            }
        });
        const j$ = y$,
            S$ = AT({
                Lock: "Media/Glyphs/Lock.svg"
            });
        var C$ = ({
            style: e,
            className: t
        }) => (0, z.jsx)(ef, {
            src: S$.Lock,
            className: Zu()(j$.lockedBadge, t),
            style: e
        });
        X.add("game-ui/game/components/asset-menu/badges/locked-badge.tsx", {
            get LockedBadge() {
                return C$
            },
            set LockedBadge(e) {
                C$ = e
            }
        });
        let N$ = {
            "tab-bar": "tab-bar_oPw",
            tabBar: "tab-bar_oPw",
            tab: "tab_Hrb",
            lock: "lock_F5I"
        };
        X.add("game-ui/common/tabs/tabs.module.scss", {
            get classes() {
                return N$
            },
            set classes(e) {
                Object.assign(N$, e)
            }
        });
        const w$ = N$;

        function O$({
            tabs: e,
            selectedTab: t,
            selectPreviousSound: n = rp.selectPreviousItem,
            selectNextSound: s = rp.selectNextItem,
            children: i,
            onSelect: a
        }) {
            const o = 0 === e.length || 1 === e.length && e[0] === t,
                r = (0, Y.useMemo)((() => ({
                    "Switch Tab": i => {
                        if (0 !== i) {
                            const o = null != t ? e.indexOf(t) : -1,
                                r = i < 0 ? XN(e, o, !0) : $N(e, o, !0);
                            null != r && r !== t && (a(r), lp(i < 0 ? n : s))
                        }
                    }
                })), [a, s, n, t, e]);
            return (0, z.jsx)(Ag, {
                actions: r,
                disabled: o,
                children: i
            })
        }
        var P$ = ({
            className: e,
            children: t
        }) => (0, z.jsx)("div", {
            className: Zu()(w$.tabBar, e),
            children: (0, z.jsx)(I$, {
                children: t
            })
        });

        function L$({
            id: e,
            selectedId: t,
            uiTag: n,
            disabled: s,
            locked: i,
            selectSound: a,
            className: o,
            children: r,
            onSelect: l
        }) {
            const c = e === t,
                u = (0, Y.useCallback)((() => {
                    l(e), n && ag(n)
                }), [e, l, n]);
            return (0, z.jsx)(wx, {
                uiTag: n,
                active: !s,
                children: (0, z.jsxs)(Gp, {
                    disableHint: !0,
                    focusKey: Ig,
                    disabled: s,
                    selectSound: a,
                    className: Zu()(w$.tab, c && "selected", o),
                    onSelect: u,
                    children: [r, i && (0, z.jsx)(C$, {
                        className: w$.lock
                    })]
                })
            })
        }
        X.add("game-ui/common/tabs/tabs.tsx", {
            get TabNav() {
                return O$
            },
            set TabNav(e) {
                O$ = e
            },
            get TabBar() {
                return P$
            },
            set TabBar(e) {
                P$ = e
            },
            get Tab() {
                return L$
            },
            set Tab(e) {
                L$ = e
            }
        });
        let A$ = {
            divider: "divider_wuh"
        };
        X.add("game-ui/menu/widgets/divider/divider.module.scss", {
            get classes() {
                return A$
            },
            set classes(e) {
                Object.assign(A$, e)
            }
        });
        const M$ = A$;
        var R$ = () => (0, z.jsx)("div", {
            className: M$.divider
        });
        X.add("game-ui/menu/widgets/divider/divider.tsx", {
            get Divider() {
                return R$
            },
            set Divider(e) {
                R$ = e
            }
        });
        let k$ = {
            enter: "enter_vUK enter_kO6",
            "enter-active": "enter-active_K1n enter-active_lrI",
            enterActive: "enter-active_K1n enter-active_lrI",
            exit: "exit_NNr exit_Von",
            "exit-active": "exit-active_kYK exit-active_jtN",
            exitActive: "exit-active_kYK exit-active_jtN",
            base: "base_V9Q"
        };
        X.add("game-ui/menu/transitions/shrink-fade-children.module.scss", {
            get classes() {
                return k$
            },
            set classes(e) {
                Object.assign(k$, e)
            }
        });
        const D$ = k$,
            F$ = "overlay";
        var U$;
        ! function (e) {
            e[e.None = 0] = "None", e[e.Splash1 = 1] = "Splash1", e[e.Splash2 = 2] = "Splash2", e[e.Splash3 = 3] = "Splash3", e[e.Splash4 = 4] = "Splash4", e[e.PiracyDisclaimer = 5] = "PiracyDisclaimer", e[e.PhotosensitivityDisclaimer = 6] = "PhotosensitivityDisclaimer", e[e.Wait = 7] = "Wait", e[e.UserLoggedOut = 8] = "UserLoggedOut", e[e.ControllerDisconnected = 9] = "ControllerDisconnected", e[e.ControllerPairingChanged = 10] = "ControllerPairingChanged", e[e.Engagement = 11] = "Engagement", e[e.Loading = 12] = "Loading", e[e.CorruptSaveData = 13] = "CorruptSaveData", e[e.Validation = 14] = "Validation"
        }(U$ || (U$ = {}));
        var B$ = $r(F$, "activeScreen"),
            G$ = $r(F$, "progress"),
            V$ = $r(F$, "hintMessages"),
            H$ = $r(F$, "corruptDataMessages");
        X.add("game-ui/overlay/overlay-bindings.tsx", {
            get OverlayScreen() {
                return U$
            },
            set OverlayScreen(e) {
                U$ = e
            },
            get activeScreen() {
                return activeScreen
            },
            set activeScreen(e) {
                activeScreen = e
            },
            get progress() {
                return progress
            },
            set progress(e) {
                progress = e
            },
            get hintMessages() {
                return hintMessages
            },
            set hintMessages(e) {
                hintMessages = e
            },
            get corruptDataMessages() {
                return corruptDataMessages
            },
            set corruptDataMessages(e) {
                corruptDataMessages = e
            }
        });
        let K$ = {
            "sub-screen": "sub-screen__iU",
            subScreen: "sub-screen__iU",
            header: "header_DFK child-opacity-transition_nkS",
            "header-title": "header-title_Lr3",
            headerTitle: "header-title_Lr3",
            title: "title_TgD",
            "header-button": "header-button_Hid",
            headerButton: "header-button_Hid",
            "back-button": "back-button_sEa header-button_Hid",
            backButton: "back-button_sEa header-button_Hid",
            content: "content_Ds0",
            "header-aside": "header-aside_Pkh",
            headerAside: "header-aside_Pkh"
        };
        X.add("game-ui/menu/components/shared/sub-screen/sub-screen.module.scss", {
            get classes() {
                return K$
            },
            set classes(e) {
                Object.assign(K$, e)
            }
        });
        const W$ = K$;
        var z$ = new Eg("SUB_SCREEN_CONTENT_KEY");
        const Y$ = {
            setFocusedKey: () => {}
        };
        var $$ = Y.createContext(Y$),
            q$ = Y.forwardRef((function ({
                focusKey: e,
                title: t,
                header: n,
                className: s,
                children: i,
                onClose: a,
                onFocusChanged: o = (() => {})
            }, r) {
                dp(B$.value !== U$.Loading ? up : void 0);
                const [l, c] = (0, Y.useState)(z$), u = (0, Y.useContext)($$);
                (0, Y.useEffect)((() => {
                    u.setFocusedKey = c
                }), [u]);
                const d = Dm();
                return (0, z.jsx)(ip, {
                    focusKey: e,
                    children: (0, z.jsx)(yp, {
                        children: (0, z.jsx)(Dg, {
                            onAction: a,
                            children: (0, z.jsx)(mh, {
                                styles: D$,
                                children: (0, z.jsx)(Ip, {
                                    ref: r,
                                    className: Zu()(W$.subScreen, s),
                                    children: (0, z.jsxs)(Qg, {
                                        focused: l,
                                        onChange: e => {
                                            c(e), o(e)
                                        },
                                        children: [(0, z.jsxs)("div", {
                                            className: W$.header,
                                            children: [(0, z.jsxs)("div", {
                                                className: W$.headerTitle,
                                                children: [!d && (0, z.jsx)(Tg, {
                                                    tooltip: (0, z.jsx)(Pc.Menu.BACK, {}),
                                                    children: (0, z.jsx)(sf, {
                                                        tinted: !0,
                                                        focusKey: Ig,
                                                        src: "Media/Glyphs/TriangleArrowLeft.svg",
                                                        className: W$.backButton,
                                                        onSelect: a
                                                    })
                                                }), (0, z.jsx)("div", {
                                                    className: W$.title,
                                                    children: t
                                                })]
                                            }), !!n && (0, z.jsx)("div", {
                                                className: W$.headerAside,
                                                children: n
                                            })]
                                        }), (0, z.jsx)(Ip, {
                                            focusKey: z$,
                                            className: W$.content,
                                            children: i
                                        })]
                                    })
                                })
                            })
                        })
                    })
                })
            }));
        X.add("game-ui/menu/components/shared/sub-screen/sub-screen.tsx", {
            get SUB_SCREEN_CONTENT_KEY() {
                return z$
            },
            set SUB_SCREEN_CONTENT_KEY(e) {
                z$ = e
            },
            get SubScreenContext() {
                return $$
            },
            set SubScreenContext(e) {
                $$ = e
            },
            get SubScreen() {
                return q$
            },
            set SubScreen(e) {
                q$ = e
            }
        });
        let X$ = {
            "empty-state": "empty-state_GEy",
            emptyState: "empty-state_GEy"
        };
        X.add("game-ui/common/empty-state/empty-state.module.scss", {
            get classes() {
                return X$
            },
            set classes(e) {
                Object.assign(X$, e)
            }
        });
        const Q$ = X$;
        var Z$ = ({
            children: e,
            className: t
        }) => (0, z.jsx)("div", {
            className: Zu()(Q$.emptyState, t),
            children: e
        });
        X.add("game-ui/common/empty-state/empty-state.tsx", {
            get EmptyState() {
                return Z$
            },
            set EmptyState(e) {
                Z$ = e
            }
        });
        let J$ = {
            label: "label_sAz",
            container: "container_R_O",
            "beta-pill": "beta-pill_E9M",
            betaPill: "beta-pill_E9M"
        };
        X.add("game-ui/menu/widgets/label/label.module.scss", {
            get classes() {
                return J$
            },
            set classes(e) {
                Object.assign(J$, e)
            }
        });
        const eq = J$;
        var tq = ({
            props: e
        }) => {
            const t = (0, z.jsxs)("div", {
                className: eq.container,
                children: [(0, z.jsx)("div", {
                    className: Zu()(eq.label, "label-level-" + e.level),
                    children: (0, z.jsx)(gu, {
                        value: e.displayName
                    })
                }), e.beta && (0, z.jsx)(T$, {
                    className: eq.betaPill
                })]
            });
            return e.tooltip ? (0, z.jsx)(Tg, {
                tooltip: (0, z.jsx)(gu, {
                    value: e.tooltip
                }),
                children: t
            }) : t
        };
        X.add("game-ui/menu/widgets/label/Label.tsx", {
            get Label() {
                return tq
            },
            set Label(e) {
                tq = e
            }
        });
        let nq = {
            breadcrumbs: "breadcrumbs_xcd"
        };
        X.add("game-ui/menu/widgets/breadcrumbs/breadcrumbs.module.scss", {
            get classes() {
                return nq
            },
            set classes(e) {
                Object.assign(nq, e)
            }
        });
        const sq = nq,
            iq = {
                [_A.Label]: tq
            };
        var aq = ({
            children: e,
            parent: t
        }) => (0, z.jsx)("div", {
            className: sq.breadcrumbs,
            children: (0, z.jsx)(ZA, {
                parent: t,
                data: e,
                components: iq
            })
        });
        X.add("game-ui/menu/widgets/breadcrumbs/breadcrumbs.tsx", {
            get Breadcrumbs() {
                return aq
            },
            set Breadcrumbs(e) {
                aq = e
            }
        });
        var oq = Y.createContext({
            onOptionMouseEnter: () => {},
            onOptionMouseLeave: () => {},
            onFocusSet: () => {},
            onFocusReset: () => {}
        });
        X.add("game-ui/menu/components/options-screen/option-page/option-page-context.ts", {
            get OptionSectionContext() {
                return oq
            },
            set OptionSectionContext(e) {
                oq = e
            }
        });
        let rq = {
            button: "button_WWa",
            icon: "icon_OPJ",
            label: "label_vrX"
        };
        X.add("game-ui/menu/themes/secondary-button.module.scss", {
            get classes() {
                return rq
            },
            set classes(e) {
                Object.assign(rq, e)
            }
        });
        const lq = rq;
        let cq = {
            buttons: "buttons_hd7",
            button: "button_SH8"
        };
        X.add("game-ui/menu/widgets/button/button.module.scss", {
            get classes() {
                return cq
            },
            set classes(e) {
                Object.assign(cq, e)
            }
        });
        const uq = cq;
        var dq = e => (0, z.jsx)(z.Fragment, {
                children: !e.props.hidden && (0, z.jsx)(gq, {
                    children: (0, z.jsx)(pq, {
                        ...e
                    })
                })
            }),
            mq = e => (0, z.jsx)(z.Fragment, {
                children: !e.props.hidden && (0, z.jsx)(gq, {
                    children: (0, z.jsx)(pq, {
                        ...e
                    })
                })
            }),
            hq = e => {
                const t = HA(e.parent, e.path);
                return (0, z.jsx)(z.Fragment, {
                    children: e.children.some((e => !e.props.hidden)) && (0, z.jsx)(OX, {
                        debugName: "BUTTONROW_" + e.path,
                        direction: Rg.Horizontal,
                        children: (0, z.jsx)(gq, {
                            children: e.children.map((e => (0, Y.createElement)(pq, {
                                ...e,
                                key: e.path,
                                parent: t,
                                path: e.path
                            })))
                        })
                    })
                })
            };
        const gq = ({
                children: e
            }) => (0, z.jsx)(Ip, {
                className: uq.buttons,
                activation: qu.Always,
                children: (0, z.jsx)(tp, {
                    children: e
                })
            }),
            pq = e => {
                const t = xA(jA, HA(e.parent, e.path));
                return (0, z.jsx)(fq, {
                    id: e.path,
                    disabled: e.props.disabled,
                    hidden: e.props.hidden,
                    onSelect: t,
                    confirmationMessage: null != e.props.confirmationMessage ? (0, z.jsx)(gu, {
                        value: e.props.confirmationMessage
                    }) : null,
                    children: (0, z.jsx)(gu, {
                        value: e.props.displayName
                    })
                })
            },
            fq = ({
                id: e,
                disabled: t,
                hidden: n,
                confirmationMessage: s,
                children: i,
                onSelect: a
            }) => {
                const o = (0, Y.useContext)(sE),
                    r = (0, Y.useContext)(oq),
                    l = (0, Y.useCallback)((() => {
                        "string" == typeof e && r.onOptionMouseEnter(e)
                    }), [e, r]),
                    c = (0, Y.useCallback)((() => {
                        "string" == typeof e && r.onOptionMouseLeave(e)
                    }), [e, r]),
                    u = (0, Y.useCallback)((() => {
                        null != s ? o.showDialog((0, z.jsx)(jI, {
                            title: (0, z.jsx)(Pc.Common.WARNING, {}),
                            message: s,
                            onConfirm: a
                        })) : a()
                    }), [o, s, a]);
                return (0, z.jsx)(z.Fragment, {
                    children: !n && (0, z.jsx)(Gp, {
                        focusKey: e,
                        disabled: t,
                        theme: lq,
                        className: uq.button,
                        onSelect: u,
                        onMouseEnter: l,
                        onMouseLeave: c,
                        children: i
                    })
                })
            };
        X.add("game-ui/menu/widgets/button/button.tsx", {
            get BoundButton() {
                return dq
            },
            set BoundButton(e) {
                dq = e
            },
            get BoundButtonWithConfirmation() {
                return mq
            },
            set BoundButtonWithConfirmation(e) {
                mq = e
            },
            get BoundButtonRow() {
                return hq
            },
            set BoundButtonRow(e) {
                hq = e
            }
        });
        let xq = {
            field: "field_MBO field_UuC",
            label: "label_DGc label_ZLb"
        };
        X.add("game-ui/menu/widgets/field/row-field.module.scss", {
            get classes() {
                return xq
            },
            set classes(e) {
                Object.assign(xq, e)
            }
        });
        const vq = xq;
        var _q = {
            ...Bp,
            hover: null,
            focus: null
        };

        function bq(e) {
            return (0, z.jsx)(Eq, {
                ...e.props,
                id: e.path,
                label: (0, z.jsx)(gu, {
                    value: e.props.displayName
                }),
                children: e.props.value
            })
        }

        function Tq(e) {
            return (0, z.jsx)(Eq, {
                ...e.props,
                id: e.path,
                label: (0, z.jsx)(gu, {
                    value: e.props.displayName
                }),
                children: (0, z.jsx)(gu, {
                    value: e.props.value
                })
            })
        }
        var Eq = ({
            id: e,
            label: t,
            theme: n = vq,
            disabled: s,
            className: i,
            children: a,
            onClick: o
        }) => {
            const r = (0, Y.useContext)(oq),
                l = (0, Y.useCallback)((() => {
                    "string" == typeof e && r.onOptionMouseEnter(e), lp(rp.hoverItem)
                }), [e, r]),
                c = (0, Y.useCallback)((() => {
                    "string" == typeof e && r.onOptionMouseLeave(e)
                }), [e, r]),
                u = (0, Y.useCallback)((e => {
                    !s && o && o(e)
                }), [s, o]);
            return (0, z.jsxs)(Ip, {
                className: Zu()(n.field, s && "disabled", i),
                focusKey: e,
                focusSound: rp.hoverItem,
                onMouseEnter: l,
                onMouseLeave: c,
                onClick: u,
                children: [t && (0, z.jsx)("div", {
                    className: n.label,
                    children: t
                }), a]
            })
        };
        X.add("game-ui/menu/widgets/field/field.tsx", {
            get optionButtonSounds() {
                return _q
            },
            set optionButtonSounds(e) {
                _q = e
            },
            get ValueField() {
                return bq
            },
            set ValueField(e) {
                bq = e
            },
            get LocalizedValueField() {
                return Tq
            },
            set LocalizedValueField(e) {
                Tq = e
            },
            get OptionField() {
                return Eq
            },
            set OptionField(e) {
                Eq = e
            }
        });
        let Iq = {
            panel: "panel_sI8",
            backdrop: "backdrop_EtG",
            header: "header_dGi",
            "picker-field": "picker-field_Sfm",
            pickerField: "picker-field_Sfm",
            label: "label_eqn",
            button: "button_SSl",
            control: "control_kH8",
            field: "field_auj value-field_yJi",
            value: "value_T9z value_PW_",
            "directory-button": "directory-button_FNN secondary-button_Kvj",
            directoryButton: "directory-button_FNN secondary-button_Kvj",
            "string-field": "string-field_clR",
            stringField: "string-field_clR",
            hint: "hint_Mwa"
        };
        X.add("game-ui/menu/widgets/directory-picker/bound-directory-picker.module.scss", {
            get classes() {
                return Iq
            },
            set classes(e) {
                Object.assign(Iq, e)
            }
        });
        const yq = Iq;

        function jq({
            parent: e,
            path: t,
            props: n
        }) {
            const s = HA(e, t),
                i = xA(NA, s),
                a = Dm(),
                o = xA(SA, s),
                r = (0, Y.useCallback)((e => {
                    o(e.target.value)
                }), [o]),
                l = (0, Y.useMemo)((() => ({
                    "Select Directory": i
                })), [i]),
                {
                    setHeader: c
                } = (0, Y.useContext)(wq);
            (0, Y.useEffect)((() => {
                c(n.displayName)
            }), [n.displayName, c]);
            const [u, d] = (0, Y.useState)(!1), [m, h] = (0, Y.useState)(!1), g = (0, Y.useCallback)((() => {
                h(!1)
            }), []), p = (0, Y.useCallback)((() => {
                h(!0)
            }), []), f = !n.disabled && u;
            return (0, z.jsx)(Ag, {
                actions: l,
                disabled: n.disabled,
                children: (0, z.jsx)(Ah, {
                    onFocusChange: d,
                    children: (0, z.jsxs)(Eq, {
                        ...n,
                        id: t,
                        label: (0, z.jsx)(gu, {
                            value: n.displayName
                        }),
                        children: [(0, z.jsx)(Pf, {
                            action: m ? "Back" : "Select",
                            active: f,
                            className: yq.hint
                        }), (0, z.jsxs)("div", {
                            className: Zu()(yq.field, n.disabled && "disabled"),
                            children: [(0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Tc, {
                                    id: null,
                                    fallback: n.value
                                }),
                                children: (0, z.jsx)(UE, {
                                    ...n,
                                    onChange: r,
                                    className: Zu()(yq.stringField, n.disabled && "disabled"),
                                    value: n.value,
                                    multiline: void 0,
                                    maxLength: void 0,
                                    onBlur: g,
                                    onFocus: p
                                })
                            }), !a && !n.disabled && (0, z.jsx)(sf, {
                                tinted: !0,
                                onSelect: i,
                                focusKey: Ig,
                                src: "Media/Editor/Folder.svg",
                                className: yq.directoryButton,
                                onClick: nx
                            })]
                        })]
                    })
                })
            })
        }
        const Sq = new Eg("DIRECTORY_PICKER"),
            Cq = new Eg("CHILDREN"),
            Nq = {
                setHeader: () => {}
            };
        var wq = Y.createContext(Nq);

        function Oq({
            children: e
        }) {
            const t = sl(ec),
                n = sl(Jl),
                s = (0, Y.useMemo)((() => ({
                    group: "options",
                    path: []
                })), []),
                [i, a] = (0, Y.useState)(),
                o = (0, Y.useMemo)((() => ({
                    setHeader: a
                })), []);
            return (0, z.jsx)(ap, {
                focused: t ? Sq : Cq,
                children: (0, z.jsxs)(wq.Provider, {
                    value: o,
                    children: [(0, z.jsx)(ip, {
                        focusKey: Cq,
                        children: e
                    }), t && n && (0, z.jsx)(ip, {
                        focusKey: Sq,
                        children: (0, z.jsx)(oT, {
                            onMouseDown: tc,
                            className: yq.backdrop,
                            children: (0, z.jsx)("div", {
                                className: yq.panel,
                                children: (0, z.jsx)(Dg, {
                                    onAction: tc,
                                    children: (0, z.jsx)(yp, {
                                        children: (0, z.jsxs)(tp, {
                                            children: [i && (0, z.jsx)("div", {
                                                className: yq.header,
                                                children: (0, z.jsx)(gu, {
                                                    value: i
                                                })
                                            }), (0, z.jsx)(fz, {
                                                parent: s,
                                                data: n
                                            })]
                                        })
                                    })
                                })
                            })
                        })
                    })]
                })
            })
        }
        X.add("game-ui/menu/widgets/directory-picker/bound-directory-picker.tsx", {
            get BoundDirectoryPickerField() {
                return jq
            },
            set BoundDirectoryPickerField(e) {
                jq = e
            },
            get DirectoryPickerDialogContext() {
                return wq
            },
            set DirectoryPickerDialogContext(e) {
                wq = e
            },
            get DirectoryPickerDialog() {
                return Oq
            },
            set DirectoryPickerDialog(e) {
                Oq = e
            }
        });
        let Pq = {
            "dropdown-toggle": "dropdown-toggle_V9z dropdown-toggle_prl value-field_yJi value_PW_",
            dropdownToggle: "dropdown-toggle_V9z dropdown-toggle_prl value-field_yJi value_PW_",
            indicator: "indicator_Xmj",
            "dropdown-menu": "dropdown-menu_jf2 dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_jf2 dropdown-menu_Swd",
            "dropdown-item": "dropdown-item_sZT undefined",
            dropdownItem: "dropdown-item_sZT undefined"
        };
        X.add("game-ui/menu/themes/dropdown.module.scss", {
            get classes() {
                return Pq
            },
            set classes(e) {
                Object.assign(Pq, e)
            }
        });
        const Lq = Pq;
        let Aq = {
            dropdown: "dropdown_iVn",
            hint: "hint_fnk"
        };
        X.add("game-ui/menu/widgets/dropdown-field/dropdown-field.module.scss", {
            get classes() {
                return Aq
            },
            set classes(e) {
                Object.assign(Aq, e)
            }
        });
        const Mq = Aq;

        function Rq(e) {
            return (0, z.jsx)(Dq, {
                items: e.props.enumMembers,
                value: e.props.value,
                ...e
            })
        }

        function kq(e) {
            return (0, z.jsx)(Dq, {
                items: e.props.items,
                value: e.props.value,
                ...e
            })
        }

        function Dq(e) {
            const t = e.items.findIndex((t => Kr(t.value, e.value))),
                n = -1 !== t ? e.items[t] : null,
                s = xA(SA, HA(e.parent, e.path)),
                i = e.items.filter((e => !e.disabled)),
                a = Fq(n),
                [o, r] = (0, Y.useState)(!1),
                [l, c] = (0, Y.useState)(!1),
                [u, d] = (0, Y.useState)(t),
                m = !e.props.disabled && o;
            return (0, z.jsx)(Ah, {
                onFocusChange: r,
                children: (0, z.jsxs)(Eq, {
                    ...e.props,
                    id: e.path,
                    label: (0, z.jsx)(gu, {
                        value: e.props.displayName
                    }),
                    disabled: e.props.disabled || !i.length,
                    children: [(0, z.jsx)(Pf, {
                        action: l ? "Back" : "Select",
                        active: m,
                        className: Mq.hint
                    }), (0, z.jsx)(qI, {
                        focusKey: e.props.disabled ? Ig : yg,
                        initialFocused: t,
                        theme: Lq,
                        content: (0, z.jsx)(tp, {
                            initialFocused: t,
                            onChange: d,
                            allowLooping: !0,
                            children: i.map(((e, t) => (0, z.jsxs)(JI, {
                                focusKey: t,
                                value: e.value,
                                selected: !!n && Kr(n.value, e.value),
                                onChange: s,
                                children: [(0, z.jsx)(Pf, {
                                    action: "Select",
                                    active: u === t && m,
                                    className: Mq.hint
                                }), Fq(e)]
                            }, t)))
                        }),
                        onToggle: c,
                        children: (0, z.jsx)(XI, {
                            disabled: e.props.disabled || !i.length,
                            sounds: _q,
                            className: Mq.dropdown,
                            tooltipLabel: a,
                            children: a
                        })
                    })]
                })
            })
        }

        function Fq(e) {
            return e ? (0, z.jsx)(gu, {
                value: e.displayName
            }) : null
        }
        X.add("game-ui/menu/widgets/dropdown-field/dropdown-field.tsx", {
            get BoundEnumField() {
                return Rq
            },
            set BoundEnumField(e) {
                Rq = e
            },
            get BoundDropdownField() {
                return kq
            },
            set BoundDropdownField(e) {
                kq = e
            }
        });
        let Uq = {
            field: "field_G2v value-field_yJi",
            value: "value_kpD value_PW_",
            unset: "unset_Ksk",
            "clear-button": "clear-button_wAo secondary-button_Kvj",
            clearButton: "clear-button_wAo secondary-button_Kvj",
            icon: "icon_Y14",
            conflict: "conflict_Wvp",
            "conflict-group": "conflict-group_JaQ",
            conflictGroup: "conflict-group_JaQ",
            "conflict-group-title": "conflict-group-title_UYU",
            conflictGroupTitle: "conflict-group-title_UYU",
            "conflict-item": "conflict-item_r5c",
            conflictItem: "conflict-item_r5c",
            tooltip: "tooltip_ILS",
            "binding-hint": "binding-hint_LTZ",
            bindingHint: "binding-hint_LTZ"
        };
        X.add("game-ui/menu/widgets/input-binding-field/input-binding-field.module.scss", {
            get classes() {
                return Uq
            },
            set classes(e) {
                Object.assign(Uq, e)
            }
        });
        const Bq = Uq;
        let Gq = {
            hint: "hint_CzH",
            button: "button_yXv button_ehL"
        };
        X.add("game-ui/menu/widgets/input-binding-field/input-binding-hint-theme.module.scss", {
            get classes() {
                return Gq
            },
            set classes(e) {
                Object.assign(Gq, e)
            }
        });
        const Vq = Gq;

        function Hq(e) {
            const t = HA(e.parent, e.path),
                n = xA(Vl, t),
                s = xA(Hl, t),
                i = xA(Kl, t);
            return (0, z.jsx)(Kq, {
                ...e.props,
                id: e.path,
                label: (0, z.jsx)(gu, {
                    value: e.props.displayName
                }),
                onSelect: n,
                onUnset: e.props.value.canBeEmpty && e.props.value.binding.name ? s : void 0,
                onReset: e.props.value.isOriginal ? void 0 : i
            })
        }
        const Kq = ({
            value: e,
            conflicts: t,
            disabled: n,
            onSelect: s,
            onUnset: i,
            onReset: a,
            ...o
        }) => {
            const [r, l] = (0, Y.useState)(!1), c = (0, Y.useMemo)((() => ({
                "Unset Binding": i,
                "Reset Binding": a
            })), [i, a]), u = Dm(), d = zx(), m = Yx(), h = $x(), g = sl(Ml), p = (0, Y.useMemo)((() => t.filter((e => e.isBuiltIn))), [t]), f = (0, Y.useMemo)((() => t.filter((e => !e.isBuiltIn))), [t]), x = g > 1, v = (i || a) && !u, _ = x && v ? 0 : x || v ? 1 : 2, b = n || !e.isRebindable, T = (0, Y.useMemo)((() => (0, z.jsxs)(z.Fragment, {
                children: [!!p.length && (0, z.jsxs)("div", {
                    className: Bq.conflictGroup,
                    children: [(0, z.jsx)("div", {
                        className: Bq.conflictGroupTitle,
                        children: e.isBuiltIn ? (0, z.jsx)(Pc.Options.BINDING_CONFLICT_BUILTIN_WITH_BUILTIN_TOOLTIP, {}) : (0, z.jsx)(Pc.Options.BINDING_CONFLICT_MOD_WITH_BUILTIN_TOOLTIP, {})
                    }), p.map(((e, t) => (0, z.jsxs)("div", {
                        className: Zu()(Bq.conflictItem, Bq.tooltip),
                        children: [(0, z.jsx)("p", {
                            children: (0, z.jsx)(Pc.Options.INPUT_MAP, {
                                hash: e.optionGroup,
                                showIdOnFail: !0
                            })
                        }), (0, z.jsx)("p", {
                            children: (0, z.jsx)(Pc.Options.OPTION, {
                                hash: e.title,
                                showIdOnFail: !0
                            })
                        })]
                    }, t)))]
                }), !e.isBuiltIn && !!f.length && (0, z.jsxs)("div", {
                    className: Bq.conflictGroup,
                    children: [(0, z.jsx)("div", {
                        className: Bq.conflictGroupTitle,
                        children: (0, z.jsx)(Pc.Options.BINDING_CONFLICT_MOD_WITH_MOD_TOOLTIP, {})
                    }), f.map(((e, t) => (0, z.jsxs)("div", {
                        className: Zu()(Bq.conflictItem, Bq.tooltip),
                        children: [(0, z.jsx)("p", {
                            children: (0, z.jsx)(Pc.Options.INPUT_MAP, {
                                hash: e.optionGroup,
                                showIdOnFail: !0
                            })
                        }), (0, z.jsx)("p", {
                            children: (0, z.jsx)(Pc.Options.OPTION, {
                                hash: e.title,
                                showIdOnFail: !0
                            })
                        })]
                    }, t)))]
                })]
            })), [p, f, e.isBuiltIn]);
            return (0, z.jsx)(Ag, {
                actions: c,
                disabled: b,
                children: (0, z.jsx)(Ah, {
                    onFocusChange: l,
                    children: (0, z.jsxs)(Eq, {
                        ...o,
                        disabled: n,
                        onClick: b ? void 0 : s,
                        children: [(0, z.jsx)(Pf, {
                            action: "Select",
                            active: !b && r,
                            theme: Vq
                        }), (e.isBuiltIn && !!(e.hasConflicts & Xl.WithBuiltIn) || !e.isBuiltIn && !!e.hasConflicts) && (0, z.jsx)(Tg, {
                            tooltip: T,
                            children: e.hasConflicts & Xl.WithBuiltIn ? (0, z.jsx)("img", {
                                className: Bq.icon,
                                src: "Media/Misc/Error.svg"
                            }) : (0, z.jsx)("img", {
                                className: Bq.icon,
                                src: "Media/Misc/Warning.svg"
                            })
                        }), (0, z.jsxs)("div", {
                            className: Zu()(Bq.field, !e.binding.name && Bq.unset, b && "disabled"),
                            children: [(0, z.jsx)(Tg, {
                                disabled: n,
                                tooltip: "" !== e.binding.name && (0, z.jsxs)(z.Fragment, {
                                    children: [(0, z.jsx)("div", {
                                        style: {
                                            textAlign: "center"
                                        },
                                        children: (0, z.jsx)(bf, {
                                            binding: e.binding,
                                            modifiers: e.modifiers,
                                            gamepadType: d,
                                            keyboardLayout: m,
                                            layoutMap: h
                                        })
                                    }), !e.isRebindable && (0, z.jsx)(Pc.Options.CANNOT_BE_REBOUND, {}), !!e.hasConflicts && u && T]
                                }),
                                children: (0, z.jsxs)(Gp, {
                                    disableHint: !0,
                                    className: Bq.value,
                                    onSelect: s,
                                    onClick: nx,
                                    disabled: b,
                                    children: ["" !== e.binding.name && (0, z.jsx)(If, {
                                        modifiers: e.modifiers,
                                        bindings: [e.binding],
                                        showName: ("Gamepad" === e.device || "Mouse" === e.device) && e.modifiers.length <= _,
                                        shortName: pf.FallbackToControl,
                                        theme: Vq,
                                        className: Bq.bindingHint
                                    }), "" === e.binding.name && (0, z.jsx)(Pc.Options.INPUT_CONTROL_UNSET, {})]
                                })
                            }), !b && !u && null != i && (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.Options.UNSET_BINDING_TOOLTIP, {}),
                                children: (0, z.jsx)(sf, {
                                    disableHint: !0,
                                    tinted: !0,
                                    focusKey: Ig,
                                    src: "Media/Glyphs/Close.svg",
                                    className: Bq.clearButton,
                                    onSelect: i,
                                    onClick: nx
                                })
                            }), !b && !u && null != a && (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.Options.RESET_BINDING_TOOLTIP, {}),
                                children: (0, z.jsx)(sf, {
                                    disableHint: !0,
                                    tinted: !0,
                                    focusKey: Ig,
                                    src: "Media/Glyphs/ArrowCircular.svg",
                                    className: Bq.clearButton,
                                    onSelect: a,
                                    onClick: nx
                                })
                            })]
                        })]
                    })
                })
            })
        };
        X.add("game-ui/menu/widgets/input-binding-field/input-binding-field.tsx", {
            get BoundInputBindingField() {
                return Hq
            },
            set BoundInputBindingField(e) {
                Hq = e
            }
        });
        let Wq = {
            expandIcon: '"Media/Glyphs/ThickStrokeArrowDown.svg"',
            collapseIcon: '"Media/Glyphs/ThickStrokeArrowUp.svg"',
            section: "section_gUk",
            content: "content_owQ",
            expandable: "expandable_gK1",
            "title-bar": "title-bar_wU9",
            titleBar: "title-bar_wU9",
            title: "title_bwV",
            "toggle-button": "toggle-button_sQk",
            toggleButton: "toggle-button_sQk",
            "button-space": "button-space_Iht",
            buttonSpace: "button-space_Iht"
        };
        X.add("game-ui/common/section/section.module.scss", {
            get classes() {
                return Wq
            },
            set classes(e) {
                Object.assign(Wq, e)
            }
        });
        const zq = Wq;

        function Yq(e) {
            return (0, Y.useMemo)((() => ({
                ...zq,
                ...e
            })), [e])
        }
        X.add("game-ui/common/section/section-theme.tsx", {
            get useSectionTheme() {
                return Yq
            },
            set useSectionTheme(e) {
                Yq = e
            }
        });
        let $q = {
            base: "base_BM7",
            enter: "enter_lhm",
            "exit-active": "exit-active_gO8",
            exitActive: "exit-active_gO8",
            "enter-active": "enter-active_kU5",
            enterActive: "enter-active_kU5",
            exit: "exit_MDH"
        };
        X.add("game-ui/common/section/themes/transition.module.scss", {
            get classes() {
                return $q
            },
            set classes(e) {
                Object.assign($q, e)
            }
        });
        const qq = $q;
        let Xq = {
            "progress-container": "progress-container_aIu",
            progressContainer: "progress-container_aIu",
            "progress-label": "progress-label_dOe",
            progressLabel: "progress-label_dOe",
            "progress-circle": "progress-circle_kUT progress-circle_OLN",
            progressCircle: "progress-circle_kUT progress-circle_OLN",
            progress: "progress_Xe2 progress_mlv",
            complete: "complete_pGO",
            failure: "failure_D8R",
            waiting: "waiting_d9O"
        };
        X.add("game-ui/menu/widgets/progress.module.scss", {
            get classes() {
                return Xq
            },
            set classes(e) {
                Object.assign(Xq, e)
            }
        });
        const Qq = Xq;
        let Zq = {
            checkmark: "checkmark_avN",
            icon: "icon_uou",
            dependency: "dependency_kvS",
            "dependency-label": "dependency-label_H4z",
            dependencyLabel: "dependency-label_H4z",
            "dependency-children": "dependency-children_rpG",
            dependencyChildren: "dependency-children_rpG",
            "dependency-field": "dependency-field_HfG",
            dependencyField: "dependency-field_HfG",
            details: "details_G6M",
            row: "row_kQ3",
            "title-bar": "title-bar_CZv",
            titleBar: "title-bar_CZv",
            "button-space": "button-space_vdm",
            buttonSpace: "button-space_vdm",
            "has-children": "has-children_xUg",
            hasChildren: "has-children_xUg",
            "dependency-status": "dependency-status_V5W",
            dependencyStatus: "dependency-status_V5W",
            header: "header_C6q",
            hint: "hint_KKd"
        };
        X.add("game-ui/menu/widgets/modding/modding-toolchain-dependency.module.scss", {
            get classes() {
                return Zq
            },
            set classes(e) {
                Object.assign(Zq, e)
            }
        });
        const Jq = Zq,
            eX = e => {
                const {
                    state: t,
                    progress: n
                } = e;
                switch (t) {
                case yl.Installing:
                case yl.Downloading:
                case yl.Removing:
                case yl.Queued:
                    return (0, z.jsxs)("div", {
                        className: Zu()(Qq.progressContainer, {
                            [Qq.waiting]: t === yl.Queued
                        }),
                        children: [(0, z.jsx)(EF, {
                            progress: t !== yl.Queued ? n : 100,
                            max: 100,
                            theme: Qq,
                            indeterminate: -1 === n && t !== yl.Queued
                        }), -1 !== n && (0, z.jsx)("div", {
                            className: Qq.progressLabel,
                            children: (0, z.jsx)(Gc, {
                                value: n,
                                unit: Oc.Percentage
                            })
                        })]
                    });
                case yl.Installed:
                    return (0, z.jsx)("div", {
                        className: Jq.icon,
                        children: (0, z.jsx)(ef, {
                            className: Jq.checkmark,
                            src: "Media/Glyphs/Checkmark.svg"
                        })
                    });
                case yl.NotInstalled:
                    return (0, z.jsx)("img", {
                        className: Jq.icon,
                        src: "Media/Misc/Error.svg"
                    });
                case yl.Outdated:
                case yl.Unknown:
                    return (0, z.jsx)("img", {
                        className: Jq.icon,
                        src: "Media/Misc/Warning.svg"
                    })
                }
                return null
            };
        var tX = e => {
            const {
                children: t
            } = e, n = Yq(Jq), s = !!t, [i, a] = (0, Y.useState)(!1), [o, r] = (0, Y.useState)(!1), l = (0, Y.useCallback)((() => {
                r((e => !e)), lp(rp.expandPanel)
            }), []);
            return s ? (0, z.jsx)(Ep, {
                className: Zu()(n.section, n.expandable, n.expanded, Jq.dependencyField, {
                    [Jq.hasChildren]: s
                }),
                onFocusChange: a,
                children: (0, z.jsx)(Ug, {
                    expanded: o,
                    expandable: !0,
                    onAction: l,
                    children: (0, z.jsxs)(tp, {
                        debugName: "MAIN_" + e.id,
                        limits: Xu.Bounds,
                        children: [(0, z.jsx)(nX, {
                            ...e,
                            expanded: o,
                            focused: i,
                            toggleExpanded: l
                        }), (0, z.jsx)(ly, {
                            in: o,
                            children: (0, z.jsx)(ry, {
                                styles: qq,
                                children: (0, z.jsx)("div", {
                                    children: (0, z.jsx)("div", {
                                        className: Zu()(Jq.dependencyChildren, n.content, n.last, n.expandable),
                                        children: (0, z.jsx)(OX, {
                                            debugName: "CHILDREN_" + e.id,
                                            children: t
                                        })
                                    })
                                })
                            })
                        })]
                    })
                })
            }) : (0, z.jsx)(nX, {
                focused: i,
                ...e
            })
        };
        const nX = e => {
            const {
                id: t,
                toggleExpanded: n,
                expanded: s,
                combined: i,
                displayName: a,
                value: o
            } = e, r = !!n, l = Yq(Jq), c = (0, Y.useContext)(oq), u = (0, Y.useCallback)((() => {
                "string" == typeof t && c.onOptionMouseEnter(t), lp(rp.hoverItem)
            }), [t, c]), d = (0, Y.useCallback)((() => {
                "string" == typeof t && c.onOptionMouseLeave(t)
            }), [t, c]);
            Dm();
            return (0, z.jsx)(OX, {
                debugName: "HEADER_" + t,
                children: (0, z.jsx)(Ip, {
                    focusKey: i ? void 0 : t,
                    className: Zu()(l.header, r && l.expandable, l.first, (!r || !s) && l.last),
                    children: (0, z.jsxs)("div", {
                        className: Zu()(l.titleBar, r && l.expandable),
                        onClick: r ? n : void 0,
                        onMouseEnter: u,
                        onMouseLeave: d,
                        children: [r && (0, z.jsx)("div", {
                            className: l.buttonSpace
                        }), (0, z.jsx)("div", {
                            className: l.title,
                            children: (0, z.jsxs)("div", {
                                className: Jq.dependency,
                                children: [o.icon && (0, z.jsx)("img", {
                                    src: o.icon
                                }), (0, z.jsxs)("div", {
                                    className: Jq.dependencyLabel,
                                    children: [(0, z.jsx)("div", {
                                        children: (0, z.jsx)(gu, {
                                            value: a
                                        })
                                    }), (0, z.jsx)("small", {
                                        children: (0, z.jsx)(gu, {
                                            value: o.version
                                        })
                                    })]
                                }), (0, z.jsxs)("div", {
                                    className: Jq.dependencyStatus,
                                    children: [(0, z.jsx)("small", {
                                        children: (0, z.jsx)(gu, {
                                            value: o.details
                                        })
                                    }), (0, z.jsx)(eX, {
                                        ...o
                                    })]
                                })]
                            })
                        }), (0, z.jsx)(Pf, {
                            action: s ? "Collapse Group" : "Expand Group",
                            active: !e.disabled && e.focused,
                            className: Jq.hint
                        }), r && (0, z.jsx)(ef, {
                            src: s ? l.collapseIcon : l.expandIcon,
                            className: l.toggleButton
                        })]
                    })
                })
            })
        };
        var sX = e => {
            const t = HA(e.parent, e.path);
            return (0, z.jsx)(tX, {
                ...e.props,
                id: e.path,
                combined: e.children.some((e => e.props.__Type === _l.ModdingToolchainDependency)),
                children: e.children.some((e => !e.props.hidden)) && (0, z.jsx)(bX, {
                    parent: t,
                    data: e.children
                })
            })
        };
        X.add("game-ui/menu/widgets/modding/modding-toolchain-dependency.tsx", {
            get ModdingToolchainDependency() {
                return tX
            },
            set ModdingToolchainDependency(e) {
                tX = e
            },
            get BoundModdingToolchainDependency() {
                return sX
            },
            set BoundModdingToolchainDependency(e) {
                sX = e
            }
        });
        let iX = {
            "multiline-text": "multiline-text_INX",
            multilineText: "multiline-text_INX"
        };
        X.add("game-ui/menu/widgets/multiline-text/multiline-text.module.scss", {
            get classes() {
                return iX
            },
            set classes(e) {
                Object.assign(iX, e)
            }
        });
        const aX = iX;
        var oX = e => (0, z.jsxs)(Ip, {
            className: aX.multilineText,
            children: [e.props.icon && (0, z.jsx)("img", {
                src: e.props.icon
            }), (0, z.jsx)(zf, {
                children: (0, z.jsx)(gu, {
                    value: e.props.displayName
                })
            })]
        });
        X.add("game-ui/menu/widgets/multiline-text/multiline-text.tsx", {
            get BoundMultilineText() {
                return oX
            },
            set BoundMultilineText(e) {
                oX = e
            }
        });
        let rX = {
            slider: "slider_fKm slider_pUS",
            range: "range_KXa range_iUN"
        };
        X.add("game-ui/menu/themes/slider.module.scss", {
            get classes() {
                return rX
            },
            set classes(e) {
                Object.assign(rX, e)
            }
        });
        const lX = rX;
        let cX = {
            value: "value_hdd",
            slider: "slider_KjX",
            hint: "hint_HoI"
        };
        X.add("game-ui/menu/widgets/slider-field/slider-field.module.scss", {
            get classes() {
                return cX
            },
            set classes(e) {
                Object.assign(cX, e)
            }
        });
        const uX = cX;

        function dX(e) {
            return (0, z.jsx)(hX, {
                ...e
            })
        }

        function mX(e) {
            return (0, z.jsx)(hX, {
                ...e
            })
        }
        const hX = e => {
            const t = (0, Y.useMemo)((() => Object.values(Oc).find((t => t === e.props.unit))), [e.props.unit]),
                n = OM(e.props.step ?? 1),
                s = e.props.scaleDragVolume ? SM : jM,
                [i, a] = (0, Y.useState)(e.props.value),
                o = xA(SA, HA(e.parent, e.path)),
                r = (0, Y.useCallback)((t => {
                    a(t), e.props.updateOnDragEnd || o(t)
                }), [o, e.props.updateOnDragEnd]),
                l = (0, Y.useCallback)((() => {
                    e.props.updateOnDragEnd && o(i)
                }), [i, o, e.props.updateOnDragEnd]);
            (0, Y.useEffect)((() => {
                a(e.props.value)
            }), [e.props.value]);
            const [c, u] = (0, Y.useState)(!1), [d, m] = (0, Y.useState)(!1);
            return (0, z.jsx)(Ah, {
                onFocusChange: u,
                children: (0, z.jsxs)(Eq, {
                    ...e.props,
                    id: e.path,
                    label: (0, z.jsx)(gu, {
                        value: e.props.displayName
                    }),
                    children: [(0, z.jsx)(Pf, {
                        action: "Select",
                        active: !e.props.disabled && !d && c,
                        className: uX.hint
                    }), (0, z.jsx)(Pf, {
                        action: "Back",
                        active: !e.props.disabled && d && c,
                        className: uX.hint
                    }), (0, z.jsx)("div", {
                        className: uX.value,
                        children: t !== Oc.Custom ? (0, z.jsx)(Gc, {
                            value: e.props.value,
                            unit: t
                        }) : (0, z.jsx)(Vc, {
                            value: e.props.value,
                            unit: t,
                            signed: e.props.signed,
                            fractionDigits: e.props.fractionDigits,
                            separateThousands: e.props.separateThousands,
                            maxValueWithFraction: e.props.maxValueWithFraction,
                            unitFormat: uc("CustomFormat", ((t, n) => Ec(t, `Options.FORMAT[${e.path}]`, "{SIGN}{VALUE}", {
                                VALUE: n.VALUE,
                                SIGN: n.SIGN
                            }, !0)), (() => !0))
                        })
                    }), (0, z.jsx)(Np, {
                        onSelectedStateChanged: m,
                        children: (0, z.jsx)(CM, {
                            value: i,
                            start: e.props.min,
                            end: e.props.max,
                            gamepadStep: e.props.step,
                            disabled: e.props.disabled,
                            valueTransformer: n,
                            sounds: s,
                            theme: lX,
                            className: uX.slider,
                            onChange: r,
                            onDragEnd: l
                        })
                    })]
                })
            })
        };
        X.add("game-ui/menu/widgets/slider-field/slider-field.tsx", {
            get BoundIntSliderField() {
                return dX
            },
            set BoundIntSliderField(e) {
                dX = e
            },
            get BoundFloatSliderField() {
                return mX
            },
            set BoundFloatSliderField(e) {
                mX = e
            }
        });
        let gX = {
            "string-field": "string-field_qxi",
            stringField: "string-field_qxi",
            hint: "hint_nEs"
        };
        X.add("game-ui/menu/widgets/string-input-field/string-input-field.module.scss", {
            get classes() {
                return gX
            },
            set classes(e) {
                Object.assign(gX, e)
            }
        });
        const pX = gX;
        var fX = e => {
            const t = xA(SA, HA(e.parent, e.path)),
                n = (0, Y.useCallback)((e => {
                    t(e.target.value)
                }), [t]),
                [s, i] = (0, Y.useState)(!1),
                [a, o] = (0, Y.useState)(!1),
                r = (0, Y.useCallback)((() => {
                    o(!1)
                }), []),
                l = (0, Y.useCallback)((() => {
                    o(!0)
                }), []),
                c = !e.props.disabled && s;
            return (0, z.jsx)(Ah, {
                onFocusChange: i,
                children: (0, z.jsxs)(Eq, {
                    ...e.props,
                    id: e.path,
                    label: (0, z.jsx)(gu, {
                        value: e.props.displayName
                    }),
                    children: [(0, z.jsx)(Pf, {
                        action: a ? "Back" : "Select",
                        active: c,
                        className: pX.hint
                    }), (0, z.jsx)(UE, {
                        ...e.props,
                        onChange: n,
                        className: Zu()(pX.stringField, e.props.disabled && "disabled"),
                        value: e.props.value,
                        multiline: e.props.multiline || void 0,
                        maxLength: e.props.maxLength || void 0,
                        onBlur: r,
                        onFocus: l
                    })]
                })
            })
        };
        X.add("game-ui/menu/widgets/string-input-field/string-input-field.tsx", {
            get BoundStringInputField() {
                return fX
            },
            set BoundStringInputField(e) {
                fX = e
            }
        });
        let xX = {
            toggle: "toggle_th_",
            "radio-toggle": "radio-toggle_M9z toggle_H7r item-mouse-states_Fmi",
            radioToggle: "radio-toggle_M9z toggle_H7r item-mouse-states_Fmi",
            bullet: "bullet_TAG bullet_rDK",
            hint: "hint_hz7"
        };
        X.add("game-ui/menu/widgets/toggle-field/toggle-field.module.scss", {
            get classes() {
                return xX
            },
            set classes(e) {
                Object.assign(xX, e)
            }
        });
        const vX = xX;

        function _X(e) {
            const t = xA(SA, HA(e.parent, e.path)),
                n = (0, Y.useCallback)((() => {
                    lp(rp.selectToggle), t(!e.props.value)
                }), [t, e.props.value]),
                s = Dm(),
                [i, a] = (0, Y.useState)(!1);
            return (0, z.jsx)(Ah, {
                onFocusChange: a,
                children: (0, z.jsxs)(Eq, {
                    ...e.props,
                    id: e.path,
                    label: (0, z.jsx)(gu, {
                        value: e.props.displayName
                    }),
                    onClick: n,
                    children: [(0, z.jsx)(Pf, {
                        action: "Select",
                        active: !e.props.disabled && s && i,
                        className: vX.hint
                    }), (0, z.jsx)(ox, {
                        checked: e.props.value,
                        className: vX.toggle,
                        onChange: t,
                        disabled: e.props.disabled
                    })]
                })
            })
        }
        X.add("game-ui/menu/widgets/toggle-field/toggle-field.tsx", {
            get BoundToggleField() {
                return _X
            },
            set BoundToggleField(e) {
                _X = e
            }
        });
        var bX = ({
                parent: e,
                data: t
            }) => {
                const n = (0, Y.useMemo)((() => {
                    let n, s = -1;
                    return t.reduce(((t, i, a) => {
                        if (i.props.__Type === _A.Label) {
                            const o = i.props.level,
                                r = e + ".breadcrumbs." + a;
                            0 === o ? (n = {
                                ...i,
                                path: r,
                                props: {
                                    __Type: _A.Breadcrumbs
                                },
                                children: [{
                                    ...i,
                                    path: r + "." + a
                                }]
                            }, t.push(n)) : n && o === s ? (n = {
                                ...n,
                                path: r,
                                children: n.children.filter((e => e.props.level !== o)).concat(i)
                            }, t.push(n)) : n?.children.push({
                                ...i,
                                path: r + "." + a
                            }), s = o
                        } else t.push(i);
                        return t
                    }), [])
                }), [t, e]);
                return (0, z.jsx)(ZA, {
                    parent: e,
                    components: TX,
                    data: n
                })
            },
            TX = {
                [_A.Button]: dq,
                [_A.ButtonRow]: hq,
                [_A.StringInputField]: fX,
                [_A.MultilineText]: oX,
                [_l.ButtonWithConfirmation]: mq,
                [_A.FloatSliderField]: mX,
                [_A.IntSliderField]: dX,
                [_A.Divider]: R$,
                [_A.Label]: tq,
                [_A.Breadcrumbs]: aq,
                [_A.ToggleField]: _X,
                [_A.EnumField]: Rq,
                [_l.InputBindingField]: Hq,
                [_l.DropdownField]: kq,
                [_A.ValueField]: bq,
                [_A.LocalizedValueField]: Tq,
                [_l.ScreenResolutionDropdownField]: kq,
                [_l.ModdingToolchainDependency]: sX,
                [_l.DirectoryPickerField]: jq
            };
        X.add("game-ui/menu/widgets/option-widget-renderer.tsx", {
            get OptionWidgetListRenderer() {
                return bX
            },
            set OptionWidgetListRenderer(e) {
                bX = e
            },
            get optionsWidgetComponents() {
                return TX
            },
            set optionsWidgetComponents(e) {
                TX = e
            }
        });
        let EX = {
            "option-page-header": "option-page-header_fSe",
            optionPageHeader: "option-page-header_fSe",
            "option-page-sub-header": "option-page-sub-header_FIo",
            optionPageSubHeader: "option-page-sub-header_FIo",
            "sections-tabs": "sections-tabs_EK2",
            sectionsTabs: "sections-tabs_EK2",
            shrink: "shrink_GWC",
            tab: "tab_P7S",
            first: "first_vLK",
            last: "last_BSJ"
        };
        X.add("game-ui/menu/components/options-screen/option-page/option-page-header.module.scss", {
            get classes() {
                return EX
            },
            set classes(e) {
                Object.assign(EX, e)
            }
        });
        const IX = EX;
        var yX = ({
            sections: e,
            subHeader: t,
            selectedId: n,
            className: s,
            onSelect: i
        }) => (0, z.jsxs)("div", {
            className: Zu()(IX.optionPageHeader, s),
            children: [e.length >= 2 ? (0, z.jsx)("div", {
                className: Zu()(IX.sectionsTabs, IX.shrink),
                children: (0, z.jsx)(I$, {
                    action: "Switch Tab",
                    children: e.map(((t, s) => (0, z.jsx)(jX, {
                        section: t,
                        selected: n === t.id,
                        first: 0 === s,
                        last: s === e.length - 1,
                        onSelect: i
                    }, s)))
                })
            }) : (0, z.jsx)("div", {}), !!t && (0, z.jsx)("div", {
                className: IX.optionPageSubHeader,
                children: t
            })]
        });
        const jX = ({
            section: e,
            selected: t,
            first: n,
            last: s,
            onSelect: i
        }) => {
            const a = TE(uE.PS, (0, z.jsx)(Pc.Options.TAB_PS, {
                    hash: e.id
                }), (0, z.jsx)(Pc.Options.TAB, {
                    hash: e.id
                })),
                o = (0, Y.useCallback)((() => i(e.id)), [i, e.id]);
            return (0, z.jsx)(Tg, {
                tooltip: a,
                children: (0, z.jsx)(Gp, {
                    focusKey: Ig,
                    selected: t,
                    className: Zu()(IX.tab, IX.shrink, n && IX.first, s && IX.last),
                    onSelect: o,
                    children: a
                })
            })
        };
        X.add("game-ui/menu/components/options-screen/option-page/option-page-header.tsx", {
            get OptionPageHeader() {
                return yX
            },
            set OptionPageHeader(e) {
                yX = e
            }
        });
        let SX = {
            "option-page": "option-page_CW8",
            optionPage: "option-page_CW8",
            "main-column": "main-column_D0A",
            mainColumn: "main-column_D0A",
            scrollable: "scrollable_Ptf",
            "info-column": "info-column_uQ0",
            infoColumn: "info-column_uQ0",
            "info-title": "info-title_a3p",
            infoTitle: "info-title_a3p",
            "info-description": "info-description_wwd",
            infoDescription: "info-description_wwd"
        };
        X.add("game-ui/menu/components/options-screen/option-page/option-page.module.scss", {
            get classes() {
                return SX
            },
            set classes(e) {
                Object.assign(SX, e)
            }
        });
        const CX = SX,
            NX = (e, t) => {
                if (e) {
                    for (let n = 0; n < t.length; n++)
                        if (t[n].path === e) return t[n];
                    for (let n = 0; n < t.length; n++)
                        if (t[n].children.length) {
                            const s = NX(e, t[n].children);
                            if (s) return s
                        }
                }
            };
        var wX = ({
                page: e,
                selectedSectionId: t,
                className: n,
                isSearch: s,
                subHeader: i,
                onSelectSection: a
            }) => {
                const o = e.sections.find((e => e.id === t)),
                    [r, l] = (0, Y.useState)(!1),
                    [c, u] = (0, Y.useState)(null),
                    [d, m] = (0, Y.useState)(null),
                    h = (0, Y.useCallback)((e => {
                        e && u(e)
                    }), []),
                    g = Dm(),
                    [p, f] = (0, Y.useState)(null),
                    x = g && r ? d ?? c : p,
                    v = (0, Y.useMemo)((() => ({
                        onOptionMouseEnter: f,
                        onOptionMouseLeave: e => f((t => t === e ? null : t)),
                        onFocusSet: m,
                        onFocusReset: e => m((t => t === e ? null : t))
                    })), []),
                    _ = VA("options"),
                    b = sl(Sl),
                    T = NX(x, b),
                    E = e.sections.filter((e => e.isVisible));
                (0, Y.useEffect)((() => () => {
                    nc(e.id)
                }), [e.id]);
                const I = "string" == typeof x ? x : null;
                return (0, z.jsx)(Ah, {
                    onFocusChange: l,
                    children: (0, z.jsx)("div", {
                        className: Zu()(CX.optionPage, n),
                        children: (0, z.jsxs)(tp, {
                            children: [(0, z.jsx)("div", {
                                className: CX.mainColumn,
                                children: (0, z.jsxs)(Qg, {
                                    activation: qu.Always,
                                    limits: Xu.Bounds,
                                    focused: c,
                                    direction: Rg.Vertical,
                                    onChange: h,
                                    onRefocus: Zg,
                                    children: [!s && (i || E.length > 1) && (0, z.jsx)(Ah, {
                                        children: (0, z.jsx)(yX, {
                                            sections: E,
                                            selectedId: t,
                                            className: CX.header,
                                            onSelect: a,
                                            subHeader: i
                                        })
                                    }), s && !b.length ? (0, z.jsx)(Z$, {
                                        children: (0, z.jsx)("div", {
                                            children: (0, z.jsx)(Pc.Options.SEARCH, {
                                                hash: "nothing found"
                                            })
                                        })
                                    }) : (0, z.jsx)(ff, {
                                        className: CX.scrollable,
                                        children: null != o && (0, z.jsx)(oq.Provider, {
                                            value: v,
                                            children: (0, z.jsx)(bX, {
                                                parent: _,
                                                data: b
                                            })
                                        })
                                    }, t)]
                                })
                            }), (0, z.jsx)("div", {
                                className: CX.infoColumn,
                                children: I && (0, z.jsxs)(z.Fragment, {
                                    children: [(0, z.jsx)("div", {
                                        className: CX.infoTitle,
                                        children: T && "displayName" in T.props && T.props.displayName ? (0, z.jsx)(gu, {
                                            value: T.props.displayName
                                        }) : (0, z.jsx)(Pc.Options.OPTION, {
                                            hash: I
                                        })
                                    }), (0, z.jsx)("div", {
                                        className: CX.infoDescription,
                                        children: (0, z.jsx)(zf, {
                                            focusKey: Ig,
                                            children: T && "description" in T.props && T.props.description ? (0, z.jsx)(gu, {
                                                value: T.props.description
                                            }) : (0, z.jsx)(Pc.Options.OPTION_DESCRIPTION, {
                                                hash: I
                                            })
                                        })
                                    })]
                                })
                            })]
                        })
                    })
                })
            },
            OX = ({
                focusKey: e,
                direction: t,
                children: n,
                debugName: s = "OptionPageFocusedKeyOverride"
            }) => {
                const i = (0, Y.useContext)(oq),
                    [a, o] = (0, Y.useState)(null),
                    r = (0, Y.useCallback)((e => {
                        "string" == typeof e && (o(e), i.onFocusSet(e))
                    }), [i]),
                    l = (0, Y.useCallback)((e => {
                        e || "string" != typeof a || (i.onFocusReset(a), o(null))
                    }), [a, i]);
                return (0, z.jsx)(Ah, {
                    onFocusChange: l,
                    children: (0, z.jsx)(tp, {
                        debugName: s,
                        focusKey: e,
                        onChange: r,
                        direction: t,
                        limits: Xu.Bounds,
                        children: n
                    })
                })
            };
        X.add("game-ui/menu/components/options-screen/option-page/option-page.tsx", {
            get OptionPage() {
                return wX
            },
            set OptionPage(e) {
                wX = e
            },
            get OptionPageFocusedKeyOverride() {
                return OX
            },
            set OptionPageFocusedKeyOverride(e) {
                OX = e
            }
        });
        let PX = {
            wrapper: "wrapper_dff wrapper_onO",
            container: "container_Hgg container_kOI",
            input: "input_sYI",
            label: "label_FEo"
        };
        X.add("game-ui/common/input/text/ellipsis-text-input/themes/default.module.scss", {
            get classes() {
                return PX
            },
            set classes(e) {
                Object.assign(PX, e)
            }
        });
        const LX = PX;

        function AX(e) {
            return (0, Y.useMemo)((() => ({
                ...LX,
                ...e
            })), [e])
        }
        X.add("game-ui/common/input/text/ellipsis-text-input/ellipsis-text-input-theme.tsx", {
            get useTextInputTheme() {
                return AX
            },
            set useTextInputTheme(e) {
                AX = e
            }
        });
        let MX = {
            "search-input": "search-input_Z06",
            searchInput: "search-input_Z06",
            hidden: "hidden_LPB",
            "search-input-clear": "search-input-clear_VxJ",
            searchInputClear: "search-input-clear_VxJ",
            hint: "hint_Oz8",
            "clear-input-hint": "clear-input-hint_m6F",
            clearInputHint: "clear-input-hint_m6F"
        };
        X.add("game-ui/menu/components/options-screen/options-search.module.scss", {
            get classes() {
                return MX
            },
            set classes(e) {
                Object.assign(MX, e)
            }
        });
        const RX = MX;
        var kX = new Eg("SEARCH_KEY");
        const DX = AT({
            Clear: "Media/Glyphs/Clear.svg"
        });
        var FX = "All results",
            UX = () => {
                const e = ac(),
                    t = sl(jl),
                    [n, s] = (0, Y.useState)(""),
                    [i, a] = (0, Y.useState)(),
                    [o, r] = (0, Y.useState)((() => new Set)),
                    l = (0, Y.useCallback)((e => {
                        e.length < 2 && a(void 0), s(e)
                    }), []);
                return (0, Y.useEffect)((() => {
                    const s = [],
                        a = new Set;
                    if (n.length >= 2) {
                        const o = n.trim().toLowerCase();
                        t.forEach((t => t.sections.forEach((n => {
                            n.items.forEach((n => {
                                if (!n.searchHidden) {
                                    const r = pu(e, n.displayName).toLowerCase();
                                    if (r?.includes(o)) return i && t.id !== i || s.push(n.id), void a.add(t.id)
                                }
                            }))
                        })))), zl(s, n), r(a)
                    } else zl([]), r(a)
                }), [t, n, i, e]), {
                    setSearchQuery: l,
                    searchQuery: n,
                    matchingPages: o,
                    focusedPage: i,
                    setFocusedPage: a,
                    isSearching: n.length >= 2
                }
            },
            BX = ({
                search: e
            }) => {
                const {
                    isSearching: t,
                    focusedPage: n,
                    setFocusedPage: s,
                    matchingPages: i
                } = e;
                let a = null;
                if (t && (i.size > 1 || n && !i.has(n) && i.size > 0)) {
                    const e = {
                        id: FX,
                        sections: []
                    };
                    a = (0, z.jsx)(qX, {
                        item: e,
                        selected: !n,
                        beta: e.beta,
                        onSelect: () => {
                            n && s(void 0)
                        }
                    }, e.id)
                }
                return a
            },
            GX = Y.forwardRef((function ({
                search: e,
                focusKey: t,
                onBack: n = (() => {}),
                hidden: s
            }, i) {
                const {
                    searchQuery: a,
                    setSearchQuery: o
                } = e, r = AX(), l = (0, Y.useCallback)((e => {
                    o(e)
                }), [o]), [c, u] = (0, Y.useState)(!1), [d, m] = (0, Y.useState)(!1), h = (0, Y.useCallback)((() => {
                    m(!1)
                }), []), g = (0, Y.useCallback)((() => {
                    m(!0)
                }), []);
                return (0, z.jsx)(z.Fragment, {
                    children: (0, z.jsx)(Ah, {
                        onFocusChange: u,
                        children: (0, z.jsx)(ip, {
                            focusKey: t,
                            children: (0, z.jsxs)(tp, {
                                direction: Rg.Horizontal,
                                children: [(0, z.jsx)(Pf, {
                                    action: d ? "Close" : "Select",
                                    active: c,
                                    showLabel: !0,
                                    className: RX.hint
                                }), (0, z.jsx)(UE, {
                                    value: a,
                                    onChange: e => o(e.target.value),
                                    onBack: () => n(),
                                    vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                                        hash: "Search"
                                    }),
                                    placeholder: (0, z.jsx)(Pc.Options.SEARCH, {
                                        hash: "input placeholder"
                                    }),
                                    className: Zu()(r.input, RX.searchInput, s && RX.hidden),
                                    ref: i,
                                    onBlur: h,
                                    onFocus: g
                                }), (0, z.jsx)(Pf, {
                                    action: "Clear Search",
                                    active: c && e.isSearching,
                                    className: Zu()(RX.hint, RX.clearInputHint)
                                }), a && (0, z.jsx)(sf, {
                                    tinted: !0,
                                    src: DX.Clear,
                                    className: RX.searchInputClear,
                                    onSelect: () => l("")
                                })]
                            })
                        })
                    })
                })
            }));
        X.add("game-ui/menu/components/options-screen/options-search.tsx", {
            get SEARCH_KEY() {
                return kX
            },
            set SEARCH_KEY(e) {
                kX = e
            },
            get allResultsId() {
                return FX
            },
            set allResultsId(e) {
                FX = e
            },
            get useSearch() {
                return UX
            },
            set useSearch(e) {
                UX = e
            },
            get AllResultsMenuItem() {
                return BX
            },
            set AllResultsMenuItem(e) {
                BX = e
            },
            get OptionsSearch() {
                return GX
            },
            set OptionsSearch(e) {
                GX = e
            }
        });
        let VX = {
            content: "content_Mtn",
            menu: "menu_hb1 child-opacity-transition_nkS",
            scrollable: "scrollable_Fma",
            item: "item_pq7",
            primary: "primary_Q54",
            detail: "detail_eTp child-opacity-transition_nkS",
            "option-section": "option-section_VzQ",
            optionSection: "option-section_VzQ",
            "advanced-toggle": "advanced-toggle_fyX",
            advancedToggle: "advanced-toggle_fyX",
            "advanced-toggle-checked": "advanced-toggle-checked_FFb",
            advancedToggleChecked: "advanced-toggle-checked_FFb",
            "menu-item-left": "menu-item-left_g1u",
            menuItemLeft: "menu-item-left_g1u",
            "menu-item-right": "menu-item-right_vNX",
            menuItemRight: "menu-item-right_vNX"
        };
        X.add("game-ui/menu/components/options-screen/options-screen.module.scss", {
            get classes() {
                return VX
            },
            set classes(e) {
                Object.assign(VX, e)
            }
        });
        const HX = VX,
            KX = new Eg("MENU_KEY"),
            WX = new Eg("CONTENT_KEY");
        let zX = !1;
        var YX = Y.forwardRef((function ({
            focusKey: e,
            className: t,
            onClose: n
        }, s) {
            const i = sl(jl),
                a = sl(Cl),
                o = i.find((e => e.id === a)),
                r = sl(Nl),
                [l, c] = (0, Y.useState)(zX),
                {
                    translate: u
                } = ac(),
                d = UX(),
                {
                    isSearching: m,
                    setSearchQuery: h,
                    focusedPage: g,
                    setFocusedPage: p,
                    matchingPages: f
                } = d,
                [x, v] = (0, Y.useState)(KX),
                [_, b] = (0, Y.useState)(!1),
                [T, E] = (0, Y.useState)(),
                I = (0, Y.useMemo)((() => ({
                    setFocusedKey: () => {}
                })), []),
                y = (0, Y.useCallback)((() => {
                    I.setFocusedKey(z$), v(WX)
                }), [I]),
                j = (0, Y.useCallback)((() => {
                    I.setFocusedKey(z$), v(KX)
                }), [I]),
                S = (0, Y.useCallback)((() => {
                    T === KX ? j() : y()
                }), [T, j, y]),
                C = (0, Y.useCallback)((() => {
                    h(""), n()
                }), [n, h]),
                N = (0, Y.useCallback)(((e, t = "") => {
                    if (m && e === FX) return void p(void 0);
                    const n = i.find((t => t.id === e)),
                        s = t || null != n && n.sections.length > 0 ? n?.sections[0]?.id : null;
                    n && (m ? p(n.id) : s && g !== n.id && Wl(n.id, s, zX))
                }), [g, m, i, p]),
                w = (0, Y.useCallback)((e => {
                    if (o) {
                        const t = o.sections.find((t => t.id === e));
                        t && (Wl(o.id, t.id, zX), y())
                    }
                }), [y, o]),
                O = _p(N),
                P = (0, Y.useCallback)((e => {
                    r && (c(e), zX = e, w(r))
                }), [w, r]),
                L = (0, Y.useMemo)((() => null != o ? o.sections.filter((e => e.isVisible)).map((e => e.id)) : []), [o]),
                A = (0, Y.useMemo)((() => !!o?.sections.some((e => e.items.some((e => e.isAdvanced && e.isVisible))))), [o]),
                M = i.filter((e => (!m || f.has(e.id) || g === e.id) && e.builtIn)),
                R = i.filter((e => (!m || f.has(e.id) || g === e.id) && !e.builtIn)).sort(((e, t) => u(`Options.SECTION[${e.id}]`)?.localeCompare(u(`Options.SECTION[${t.id}]`) || "") || 1)),
                k = Dm(),
                D = (0, Y.useMemo)((() => ({
                    [l ? "Hide Advanced" : "Show Advanced"]: () => P(!l)
                })), [P, l]),
                F = (0, Y.useRef)(null),
                U = (0, Y.useMemo)((() => ({
                    "Search Options": () => {
                        document.activeElement !== F.current ? (E(x), F.current?.focus(), b(!0), I.setFocusedKey(kX)) : (F.current?.blur(), b(!1), S())
                    }
                })), [S, x, I]),
                B = (0, Y.useMemo)((() => ({
                    "Clear Search": () => {
                        F.current?.blur(), b(!1), h(""), S()
                    }
                })), [S, h]),
                G = (0, Y.useCallback)((e => {
                    b(e === kX)
                }), []),
                V = (0, Y.useCallback)((() => {
                    b(!1), S()
                }), [S]),
                H = (0, Y.useMemo)((() => ({
                    "Switch Option Section": e => {
                        let t = M.findIndex((e => e.id === a));
                        if (-1 === t) {
                            if (t = R.findIndex((e => e.id === a)), -1 === t) return;
                            t += M.length
                        }
                        const n = M.length + R.length;
                        t = (t + n + e) % n, t < M.length ? N(M[t].id) : N(R[t - M.length].id), y()
                    }
                })), [M, R, N, y, a]);
            return (0, z.jsx)(Ag, {
                actions: H,
                disabled: !k || _ || M.length + R.length <= 1,
                children: (0, z.jsx)(Ag, {
                    actions: U,
                    disabled: !k || _,
                    children: (0, z.jsx)(Ag, {
                        actions: B,
                        disabled: !k || !m,
                        children: (0, z.jsx)($$.Provider, {
                            value: I,
                            children: (0, z.jsx)(q$, {
                                ref: s,
                                focusKey: e,
                                title: (0, z.jsx)(Pc.Options.SCREEN_TITLE, {}),
                                className: t,
                                onClose: C,
                                onFocusChanged: G,
                                header: (0, z.jsx)(GX, {
                                    search: d,
                                    focusKey: !k || _ ? kX : Ig,
                                    ref: F,
                                    onBack: V,
                                    hidden: k && !_ && !m
                                }),
                                children: (0, z.jsx)("div", {
                                    className: HX.content,
                                    children: (0, z.jsx)(O$, {
                                        tabs: m ? [] : L,
                                        selectedTab: r,
                                        onSelect: w,
                                        children: (0, z.jsxs)(tp, {
                                            forceFocus: x,
                                            direction: Rg.Horizontal,
                                            onChange: v,
                                            onRefocus: () => x,
                                            children: [(0, z.jsx)(Ep, {
                                                className: HX.menu,
                                                children: (0, z.jsx)(ff, {
                                                    className: HX.scrollable,
                                                    children: (0, z.jsxs)(Qg, {
                                                        focusKey: KX,
                                                        focused: m ? g || FX : a,
                                                        allowLooping: !0,
                                                        direction: Rg.Vertical,
                                                        onChange: O,
                                                        children: [(0, z.jsx)(BX, {
                                                            search: d
                                                        }), M.map((e => (0, z.jsx)(qX, {
                                                            item: e,
                                                            beta: e.beta,
                                                            selected: g === e.id || !m && a === e.id || M.length + R.length === 1,
                                                            onSelect: N
                                                        }, e.id))), !(!M.length || !R.length) && (0, z.jsx)(R$, {}), R.map((e => (0, z.jsx)(qX, {
                                                            item: e,
                                                            beta: e.beta,
                                                            selected: g === e.id || !m && a === e.id || M.length + R.length === 1,
                                                            onSelect: N
                                                        }, e.id + "mod")))]
                                                    })
                                                })
                                            }), (0, z.jsx)(Ep, {
                                                className: HX.detail,
                                                children: (0, z.jsx)(ip, {
                                                    focusKey: WX,
                                                    children: null != o && (0, z.jsx)(Ag, {
                                                        actions: D,
                                                        disabled: !A || m,
                                                        children: (0, z.jsx)(wX, {
                                                            page: o,
                                                            selectedSectionId: r,
                                                            onSelectSection: w,
                                                            className: HX.optionSection,
                                                            isSearch: m,
                                                            subHeader: !k && A && (0, z.jsx)($X, {
                                                                value: l,
                                                                onChange: P
                                                            })
                                                        }, a)
                                                    })
                                                })
                                            })]
                                        })
                                    })
                                })
                            })
                        })
                    })
                })
            })
        }));
        const $X = ({
            value: e,
            onChange: t
        }) => {
            const n = (0, Y.useCallback)((() => t(!e)), [t, e]);
            return (0, z.jsx)(Gp, {
                className: Zu()(HX.advancedToggle, e && HX.advancedToggleChecked),
                onSelect: n,
                children: (0, z.jsx)(Pc.Options.SEARCH, {
                    hash: e ? "hide advanced" : "show advanced"
                })
            })
        };
        var qX = ({
            item: e,
            selected: t,
            suffix: n,
            beta: s,
            onSelect: i
        }) => {
            const a = (0, Y.useCallback)((() => i(e.id)), [e.id, i]),
                o = Dm();
            return (0, z.jsxs)(Gp, {
                disableHint: !0,
                focusKey: e.id,
                selected: t,
                className: Zu()(HX.item, !o && HX.primary),
                onSelect: a,
                children: [(0, z.jsxs)("div", {
                    className: HX.menuItemLeft,
                    children: [(0, z.jsx)("span", {
                        children: (0, z.jsx)(Pc.Options.SECTION, {
                            hash: e.id
                        })
                    }), n && (0, z.jsx)("span", {
                        children: n
                    })]
                }), s && (0, z.jsx)("div", {
                    className: HX.menuItemRight,
                    children: (0, z.jsx)(T$, {})
                })]
            })
        };
        X.add("game-ui/menu/components/options-screen/options-screen.tsx", {
            get OptionsScreen() {
                return YX
            },
            set OptionsScreen(e) {
                YX = e
            },
            get MenuItem() {
                return qX
            },
            set MenuItem(e) {
                qX = e
            }
        });
        let XX = {
            base: "base_KL3",
            enter: "enter_VtK",
            "exit-active": "exit-active_ZDb",
            exitActive: "exit-active_ZDb",
            "enter-active": "enter-active_VOn",
            enterActive: "enter-active_VOn",
            exit: "exit_qAg"
        };
        X.add("game-ui/menu/transitions/shrink-fade.module.scss", {
            get classes() {
                return XX
            },
            set classes(e) {
                Object.assign(XX, e)
            }
        });
        const QX = XX;
        let ZX = {
            "pause-menu": "pause-menu_uzz menu-theme_k91",
            pauseMenu: "pause-menu_uzz menu-theme_k91",
            "content-container": "content-container_Ake",
            contentContainer: "content-container_Ake",
            content: "content_X6U",
            "action-hints": "action-hints_o79 child-opacity-transition_nkS",
            actionHints: "action-hints_o79 child-opacity-transition_nkS",
            version: "version_Vtb"
        };
        X.add("game-ui/menu/components/pause-menu/pause-menu.module.scss", {
            get classes() {
                return ZX
            },
            set classes(e) {
                Object.assign(ZX, e)
            }
        });
        const JX = ZX;
        var eQ = ({
            className: e,
            children: t
        }) => {
            dp(B$.value !== U$.Loading ? up : void 0);
            const [n, s] = (0, Y.useState)(!1), i = Dm(), a = sl(ek);
            return Xx(!n), Qx(!n), (0, z.jsx)(Ah, {
                onFocusChange: s,
                children: (0, z.jsx)(Cp, {
                    children: (0, z.jsx)(mh, {
                        styles: QX,
                        children: (0, z.jsxs)("div", {
                            className: Zu()(JX.pauseMenu, e),
                            children: [(0, z.jsxs)("div", {
                                className: JX.contentContainer,
                                children: [(0, z.jsx)("div", {
                                    className: JX.content,
                                    children: t
                                }), i && (0, z.jsx)(Gx, {
                                    className: JX.actionHints
                                })]
                            }), (0, z.jsx)("div", {
                                className: JX.version,
                                children: a
                            })]
                        })
                    })
                })
            })
        };
        X.add("game-ui/menu/components/pause-menu/pause-menu.tsx", {
            get PauseMenu() {
                return eQ
            },
            set PauseMenu(e) {
                eQ = e
            }
        });
        var tQ = e => (0, z.jsx)(ud, {
            children: e.children
        });
        X.add("game-ui/modding/modding-hook.tsx", {
            get ModdingHook() {
                return tQ
            },
            set ModdingHook(e) {
                tQ = e
            }
        });
        const nQ = "editorHierarchy";
        var sQ, iQ;
        ! function (e) {
            e[e.None = 0] = "None", e[e.Map = 1] = "Map", e[e.Climate = 2] = "Climate", e[e.Water = 3] = "Water", e[e.Resources = 4] = "Resources", e[e.ObjectContainer = 5] = "ObjectContainer", e[e.Object = 6] = "Object", e[e.SubMesh = 7] = "SubMesh"
        }(sQ || (sQ = {})),
        function (e) {
            e[e.Default = 0] = "Default", e[e.FirstPerson = 1] = "FirstPerson", e[e.Orbit = 2] = "Orbit"
        }(iQ || (iQ = {}));
        var aQ = $r(nQ, "width"),
            oQ = $r(nQ, "totalCount"),
            rQ = $r(nQ, "selectedId"),
            lQ = $r(nQ, "viewport"),
            cQ = el(nQ, "setWidth"),
            uQ = el(nQ, "setViewportRange"),
            dQ = el(nQ, "setSelectedId"),
            mQ = el(nQ, "setExpanded"),
            hQ = el(nQ, "bulldoze"),
            gQ = el(nQ, "save"),
            pQ = $r(nQ, "cameraMode"),
            fQ = el(nQ, "toggleCameraMode"),
            xQ = $r("editorTutorials", "tutorialsEnabled"),
            vQ = Jr("editorTutorials", "toggleTutorials");

        function _Q(e, t) {
            return e.type === t.type && Ur(e.entity, t.entity) && e.subIndex === t.subIndex
        }
        X.add("game-ui/editor/data-binding/editor-hierarchy-bindings.ts", {
            get ItemType() {
                return sQ
            },
            set ItemType(e) {
                sQ = e
            },
            get EditorCameraMode() {
                return iQ
            },
            set EditorCameraMode(e) {
                iQ = e
            },
            get hierarchyWidth() {
                return hierarchyWidth
            },
            set hierarchyWidth(e) {
                hierarchyWidth = e
            },
            get totalCount() {
                return totalCount
            },
            set totalCount(e) {
                totalCount = e
            },
            get selectedId() {
                return selectedId
            },
            set selectedId(e) {
                selectedId = e
            },
            get viewport() {
                return viewport
            },
            set viewport(e) {
                viewport = e
            },
            get setWidth() {
                return cQ
            },
            set setWidth(e) {
                cQ = e
            },
            get setViewportRange() {
                return uQ
            },
            set setViewportRange(e) {
                uQ = e
            },
            get setSelectedId() {
                return dQ
            },
            set setSelectedId(e) {
                dQ = e
            },
            get setExpanded() {
                return mQ
            },
            set setExpanded(e) {
                mQ = e
            },
            get bulldoze() {
                return hQ
            },
            set bulldoze(e) {
                hQ = e
            },
            get save() {
                return gQ
            },
            set save(e) {
                gQ = e
            },
            get editorCameraMode() {
                return editorCameraMode
            },
            set editorCameraMode(e) {
                editorCameraMode = e
            },
            get toggleEditorCameraMode() {
                return fQ
            },
            set toggleEditorCameraMode(e) {
                fQ = e
            },
            get tutorialsEnabled() {
                return tutorialsEnabled
            },
            set tutorialsEnabled(e) {
                tutorialsEnabled = e
            },
            get toggleTutorials() {
                return vQ
            },
            set toggleTutorials(e) {
                vQ = e
            },
            get itemIdEquals() {
                return _Q
            },
            set itemIdEquals(e) {
                _Q = e
            }
        });
        let bQ = {
            "bulldoze-cursor": "bulldoze-cursor_uNU",
            bulldozeCursor: "bulldoze-cursor_uNU",
            "replace-cursor": "replace-cursor_jgP",
            replaceCursor: "replace-cursor_jgP",
            "complex-curve-cursor": "complex-curve-cursor_N47",
            complexCurveCursor: "complex-curve-cursor_N47",
            "continuous-cursor": "continuous-cursor_wVn",
            continuousCursor: "continuous-cursor_wVn",
            "grid-cursor": "grid-cursor_zBe",
            gridCursor: "grid-cursor_zBe",
            "parallel-mode-cursor": "parallel-mode-cursor_kzY",
            parallelModeCursor: "parallel-mode-cursor_kzY",
            "simple-curve-cursor": "simple-curve-cursor_JKS",
            simpleCurveCursor: "simple-curve-cursor_JKS",
            "straight-cursor": "straight-cursor_AcO",
            straightCursor: "straight-cursor_AcO",
            "no-cursor": "no-cursor_qkL",
            noCursor: "no-cursor_qkL",
            crosshair: "crosshair_gJi",
            "crosshair-default": "crosshair-default_S39",
            crosshairDefault: "crosshair-default_S39",
            "bulldoze-crosshair": "bulldoze-crosshair_C1X",
            bulldozeCrosshair: "bulldoze-crosshair_C1X",
            "replace-crosshair": "replace-crosshair_VpJ",
            replaceCrosshair: "replace-crosshair_VpJ",
            "complex-curve-crosshair": "complex-curve-crosshair_Yhl",
            complexCurveCrosshair: "complex-curve-crosshair_Yhl",
            "continuous-crosshair": "continuous-crosshair_DwR",
            continuousCrosshair: "continuous-crosshair_DwR",
            "grid-crosshair": "grid-crosshair_V69",
            gridCrosshair: "grid-crosshair_V69",
            "parallel-mode-crosshair": "parallel-mode-crosshair_lYy",
            parallelModeCrosshair: "parallel-mode-crosshair_lYy",
            "simple-curve-crosshair": "simple-curve-crosshair_BYp",
            simpleCurveCrosshair: "simple-curve-crosshair_BYp",
            "straight-crosshair": "straight-crosshair_IEJ",
            straightCrosshair: "straight-crosshair_IEJ"
        };
        X.add("game-ui/game/components/tool-cursors/tool-cursors.module.scss", {
            get classes() {
                return bQ
            },
            set classes(e) {
                Object.assign(bQ, e)
            }
        });
        const TQ = bQ;

        function EQ(e) {
            const t = sl(PO),
                n = sl(bm),
                s = sl(GO);
            tv(!n && e ? jQ(s, t, "Cursor") : void 0)
        }

        function IQ(e) {
            const t = sl(PO),
                n = jQ(sl(GO), t, "Crosshair");
            tv(e && n ? `${n} ${TQ.crosshair}` : void 0)
        }
        var yQ = ({
            blockingPanelActive: e = !1
        }) => {
            const t = Dm(),
                n = sl(Tm);
            return EQ(!t && !n), IQ(t && !n && !e), null
        };

        function jQ(e, t, n) {
            return t.id === hP && e ? "Cursor" === n ? TQ.parallelModeCursor : TQ.parallelModeCrosshair : t.id === cP ? "Cursor" === n ? TQ.bulldozeCursor : TQ.bulldozeCrosshair : t.id === hP && "Replace" === t.modes.find((e => e.index === t.modeIndex))?.id ? "Cursor" === n ? TQ.replaceCursor : TQ.replaceCrosshair : t.id === hP && "Straight" === t.modes.find((e => e.index === t.modeIndex))?.id ? "Cursor" === n ? TQ.straightCursor : TQ.straightCrosshair : t.id === hP && "SimpleCurve" === t.modes.find((e => e.index === t.modeIndex))?.id ? "Cursor" === n ? TQ.simpleCurveCursor : TQ.simpleCurveCrosshair : t.id === hP && "ComplexCurve" === t.modes.find((e => e.index === t.modeIndex))?.id ? "Cursor" === n ? TQ.complexCurveCursor : TQ.complexCurveCrosshair : t.id === hP && "Continuous" === t.modes.find((e => e.index === t.modeIndex))?.id ? "Cursor" === n ? TQ.continuousCursor : TQ.continuousCrosshair : t.id === hP && "Grid" === t.modes.find((e => e.index === t.modeIndex))?.id ? "Cursor" === n ? TQ.gridCursor : TQ.gridCrosshair : "Cursor" === n ? void 0 : TQ.crosshairDefault
        }
        X.add("game-ui/game/components/tool-cursors/tool-cursors.tsx", {
            get useToolCursor() {
                return EQ
            },
            set useToolCursor(e) {
                EQ = e
            },
            get useToolCrosshair() {
                return IQ
            },
            set useToolCrosshair(e) {
                IQ = e
            },
            get CursorProvider() {
                return yQ
            },
            set CursorProvider(e) {
                yQ = e
            }
        });
        let SQ = {
            "color-field": "color-field_due",
            colorField: "color-field_due",
            alpha: "alpha_R9X",
            disabled: "disabled_QDB",
            wrapper: "wrapper_ZiM",
            "color-picker-container": "color-picker-container_Sj5",
            colorPickerContainer: "color-picker-container_Sj5",
            "bound-color-field": "bound-color-field_RVj",
            boundColorField: "bound-color-field_RVj",
            hint: "hint_v_n"
        };
        X.add("game-ui/common/input/color-picker/color-field/color-field.module.scss", {
            get classes() {
                return SQ
            },
            set classes(e) {
                Object.assign(SQ, e)
            }
        });
        const CQ = SQ,
            NQ = new Eg("BUTTON_KEY"),
            wQ = new Eg("PICKER_KEY");

        function OQ(e) {
            const t = xA(SA, HA(e.parent, e.path));
            return (0, z.jsx)(PQ, {
                value: e.props.value,
                onChange: t,
                disabled: e.props.disabled,
                alpha: e.props.showAlpha,
                popupDirection: "up",
                className: CQ.boundColorField
            })
        }
        var PQ = ({
            focusKey: e,
            disabled: t,
            value: n,
            className: s,
            selectAction: i = "Select",
            alpha: a = !1,
            popupDirection: o = "down",
            hideHint: r = !1,
            onChange: l,
            onClick: c,
            onMouseEnter: u,
            onMouseLeave: d,
            onClosePicker: m
        }) => {
            const [h, g] = (0, Y.useState)(!1), p = (0, Y.useCallback)((() => {
                g((e => !e)), h && m && m()
            }), [m, h]), f = (0, Y.useCallback)((() => {
                g(!1), m && m()
            }), [m]);
            (0, Y.useEffect)((() => {
                t && h && (g(!1), m && m())
            }), [t, m, h]);
            const x = (0, Y.useRef)(0),
                v = (0, Y.useCallback)((e => {
                    x.current = e.h, l(XC(e))
                }), [l]),
                _ = (0, Y.useMemo)((() => ({
                    [i]: () => p(),
                    Back: f
                })), [f, p, i]),
                b = (0, Y.useRef)(null),
                T = (0, z.jsx)(Ag, {
                    actions: _,
                    children: (0, z.jsx)("div", {
                        ref: b,
                        className: CQ.colorPickerContainer,
                        children: (0, z.jsx)(mH, {
                            focusKey: wQ,
                            color: LQ(n, x.current),
                            alpha: a,
                            onChange: v,
                            colorWheel: !1,
                            sliderTextInput: !1,
                            mode: dH.Hsv,
                            hexInput: !1,
                            allowFocusExit: !1
                        })
                    })
                }),
                E = (0, Y.useCallback)((() => g(!1)), []),
                [I, y] = (0, Y.useState)(!1);
            return (0, z.jsxs)("div", {
                className: Zu()(s, CQ.wrapper),
                children: [(0, z.jsx)(Pf, {
                    action: h ? "Back" : "Select",
                    active: (I || h) && !r,
                    className: CQ.hint
                }), h && (0, z.jsx)(dT, {
                    onClick: E
                }), (0, z.jsx)(ap, {
                    focusKey: e,
                    focused: h ? wQ : NQ,
                    children: (0, z.jsx)(BI, {
                        visible: h,
                        content: T,
                        direction: o,
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: y,
                            children: (0, z.jsx)(Gp, {
                                disableHint: !0,
                                focusKey: NQ,
                                selectAction: i,
                                onClick: c,
                                onMouseEnter: u,
                                onMouseLeave: d,
                                className: Zu()(CQ.colorField, {
                                    [CQ.disabled]: t,
                                    [CQ.alpha]: n.a < 1
                                }),
                                onSelect: t ? void 0 : p,
                                children: (0, z.jsx)("div", {
                                    style: {
                                        backgroundColor: WC(n)
                                    }
                                })
                            })
                        })
                    })
                })]
            })
        };

        function LQ(e, t) {
            const n = QC(e, t);
            return 0 === n.h && t > .99 ? {
                ...n,
                h: 1
            } : n
        }
        X.add("game-ui/common/input/color-picker/color-field/color-field.tsx", {
            get BoundColorField() {
                return OQ
            },
            set BoundColorField(e) {
                OQ = e
            },
            get ColorField() {
                return PQ
            },
            set ColorField(e) {
                PQ = e
            },
            get rgbaToHsvaWithStrongFallbackHue() {
                return LQ
            },
            set rgbaToHsvaWithStrongFallbackHue(e) {
                LQ = e
            }
        });
        var AQ = ({
            min: e = _d,
            max: t = bd,
            unit: n,
            ...s
        }) => {
            const i = (0, Y.useCallback)((n => function (e, t, n) {
                    if ("-" === e) return;
                    if ("" === e) return t <= 0 && n >= 0 ? 0 : void 0;
                    const s = parseInt(e, 10);
                    return isNaN(s) ? void 0 : Od(s, t, n)
                }(n, e, t)), [e, t]),
                a = Kc(n, !1);
            return (0, z.jsx)(WG, {
                ...s,
                valueFormatter: a,
                inputParser: i,
                inputValidator: e < 0 ? MQ : RQ
            })
        };

        function MQ(e) {
            return /^-?[0-9]*$/.test(e)
        }

        function RQ(e) {
            return /^[0-9]*$/.test(e)
        }
        X.add("game-ui/common/input/text/localized-int-input.tsx", {
            get LocalizedIntInput() {
                return AQ
            },
            set LocalizedIntInput(e) {
                AQ = e
            }
        });
        let kQ = {
            "unlock-highlight-badge": "unlock-highlight-badge_D9D",
            unlockHighlightBadge: "unlock-highlight-badge_D9D"
        };
        X.add("game-ui/game/components/asset-menu/badges/unlock-highlight-badge.module.scss", {
            get classes() {
                return kQ
            },
            set classes(e) {
                Object.assign(kQ, e)
            }
        });
        const DQ = kQ;
        var FQ = ({
            className: e
        }) => sl(Rl) ? (0, z.jsx)("div", {
            className: Zu()(DQ.unlockHighlightBadge, e)
        }) : null;
        X.add("game-ui/game/components/asset-menu/badges/unlock-highlight-badge.tsx", {
            get UnlockHighlightBadge() {
                return FQ
            },
            set UnlockHighlightBadge(e) {
                FQ = e
            }
        });
        let UQ = {
            indicatorNormalColor: "#424242",
            indicatorSelectedColor: "#1e83aa",
            button: "button_KVN",
            icon: "icon_Ysc",
            "multi-select": "multi-select_Roq",
            multiSelect: "multi-select_Roq",
            badge: "badge_IEE",
            indicator: "indicator_ySy"
        };
        X.add("game-ui/game/components/tool-options/tool-button/tool-button.module.scss", {
            get classes() {
                return UQ
            },
            set classes(e) {
                Object.assign(UQ, e)
            }
        });
        const BQ = UQ;
        var GQ = ({
            focusKey: e,
            src: t,
            selected: n,
            multiSelect: s,
            disabled: i,
            tooltip: a,
            selectSound: o,
            uiTag: r,
            className: l,
            children: c,
            onSelect: u,
            shortcut: d
        }) => {
            const m = (0, Y.useCallback)((() => {
                u && u(), r && ag(r)
            }), [u, r]);
            return (0, z.jsx)(wx, {
                uiTag: r,
                children: (0, z.jsx)(Tg, {
                    tooltip: a,
                    children: (0, z.jsx)(sf, {
                        disableHint: !0,
                        focusKey: e,
                        src: t,
                        disabled: i,
                        selected: n,
                        theme: BQ,
                        selectSound: o,
                        className: Zu()(s && BQ.multiSelect, l),
                        onSelect: m,
                        shortcut: d,
                        children: c
                    })
                })
            })
        };

        function VQ({
            focusKey: e,
            value: t,
            src: n,
            selected: s,
            disabled: i,
            highlight: a,
            multiSelect: o,
            uiTag: r,
            shortcut: l,
            className: c,
            children: u,
            onSelect: d,
            onClick: m
        }) {
            const h = (0, Y.useCallback)((() => {
                    d && d(t), r && ag(r)
                }), [d, t, r]),
                g = (0, Y.useCallback)((e => {
                    m && (e.stopPropagation(), m(t))
                }), [t, m]);
            return (0, z.jsx)(wx, {
                uiTag: r,
                children: (0, z.jsxs)(sf, {
                    disableHint: !0,
                    focusKey: e,
                    src: n,
                    selected: s,
                    theme: BQ,
                    disabled: i,
                    className: Zu()(o && BQ.multiSelect, c),
                    onSelect: h,
                    onClick: g,
                    shortcut: l,
                    children: [u, a && (0, z.jsx)(FQ, {
                        className: BQ.badge
                    })]
                })
            })
        }
        var HQ = ({
            focusKey: e,
            selectedValue: t,
            values: n,
            tooltip: s,
            uiTag: i,
            onSelect: a
        }) => {
            const o = (0, Y.useCallback)((() => {
                    a(function (e, t) {
                        if (0 === t.length) return e;
                        for (const n of t)
                            if (n < e) return n;
                        return t[0]
                    }(t, n)), i && ag(i)
                }), [a, t, i, n]),
                r = n.findIndex((e => e <= t));
            return (0, z.jsx)(wx, {
                uiTag: i,
                children: (0, z.jsx)(Tg, {
                    tooltip: s,
                    children: (0, z.jsx)(Gp, {
                        focusKey: e,
                        theme: BQ,
                        onSelect: o,
                        children: (0, z.jsxs)("svg", {
                            viewBox: "0 0 20 16",
                            className: BQ.indicator,
                            children: [(0, z.jsx)("path", {
                                d: "M0,12h4v4h-4Z",
                                fill: r <= 3 ? BQ.indicatorSelectedColor : BQ.indicatorNormalColor
                            }), (0, z.jsx)("path", {
                                d: "M5,8h4v8h-4Z",
                                fill: r <= 2 ? BQ.indicatorSelectedColor : BQ.indicatorNormalColor
                            }), (0, z.jsx)("path", {
                                d: "M10,4h4v12h-4Z",
                                fill: r <= 1 ? BQ.indicatorSelectedColor : BQ.indicatorNormalColor
                            }), (0, z.jsx)("path", {
                                d: "M15,0h4v16h-4Z",
                                fill: r <= 0 ? BQ.indicatorSelectedColor : BQ.indicatorNormalColor
                            })]
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/tool-options/tool-button/tool-button.tsx", {
            get ToolButton() {
                return GQ
            },
            set ToolButton(e) {
                GQ = e
            },
            get ValueToolButton() {
                return VQ
            },
            set ValueToolButton(e) {
                VQ = e
            },
            get StepToolButton() {
                return HQ
            },
            set StepToolButton(e) {
                HQ = e
            }
        });
        let KQ = {
            item: "item_bZY",
            label: "label_RZX",
            content: "content_ZIz",
            "number-field": "number-field__Hd",
            numberField: "number-field__Hd",
            "number-input-field": "number-input-field_cnU",
            numberInputField: "number-input-field_cnU",
            "start-button": "start-button_F6t",
            startButton: "start-button_F6t",
            "end-button": "end-button_ztm",
            endButton: "end-button_ztm",
            "dropdown-toggle": "dropdown-toggle_ZAi",
            dropdownToggle: "dropdown-toggle_ZAi"
        };
        X.add("game-ui/game/components/tool-options/mouse-tool-options/mouse-tool-options.module.scss", {
            get classes() {
                return KQ
            },
            set classes(e) {
                Object.assign(KQ, e)
            }
        });
        const WQ = KQ;
        var zQ = () => ((0, Y.useEffect)((() => sL(!1)), []), (0, z.jsxs)(tp, {
                children: [(0, z.jsx)($Q, {}), (0, z.jsx)(XQ, {}), (0, z.jsx)(JQ, {}), (0, z.jsx)(ZQ, {}), (0, z.jsx)(eZ, {}), (0, z.jsx)(oZ, {}), (0, z.jsx)(aZ, {}), (0, z.jsx)(cZ, {}), (0, z.jsx)(nZ, {}), (0, z.jsx)(uZ, {})]
            })),
            YQ = ({
                title: e,
                uiTag: t,
                children: n
            }) => (0, z.jsxs)(Ip, {
                className: WQ.item,
                children: [(0, z.jsx)("div", {
                    className: WQ.label,
                    children: e
                }), (0, z.jsx)(wx, {
                    uiTag: t,
                    children: (0, z.jsx)("div", {
                        className: WQ.content,
                        children: n
                    })
                })]
            });
        const $Q = () => {
                const e = sl(VP),
                    t = sl(GP),
                    n = (0, Y.useCallback)((t => {
                        e.length > 1 && void 0 !== e.find((e => Ur(t, e))) ? QP(e.filter((e => !Ur(t, e)))) : void 0 === e.find((e => Ur(t, e))) && QP([...e, t])
                    }), [e]);
                return t.length ? (0, z.jsx)(YQ, {
                    title: (0, z.jsx)(Pc.Toolbar.THEME_PANEL_TITLE, {}),
                    uiTag: kx.value?.toolOptionsThemes,
                    children: (0, z.jsx)(tp, {
                        children: t.map((t => (0, z.jsx)(kY, {
                            title: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_TITLE, {
                                hash: t.name
                            }),
                            description: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_DESCRIPTION, {
                                hash: t.name
                            }),
                            children: (0, z.jsx)(VQ, {
                                multiSelect: !0,
                                focusKey: Dr(t.entity),
                                value: t.entity,
                                src: t.icon,
                                selected: void 0 !== e.find((e => Ur(t.entity, e))),
                                highlight: t.highlight,
                                disabled: 1 === e.length && void 0 !== e.find((e => Ur(t.entity, e))),
                                onClick: n
                            })
                        }, Dr(t.entity))))
                    })
                }) : null
            },
            qQ = [],
            XQ = () => {
                const e = sl(WP),
                    t = sl(KP),
                    n = (0, Y.useCallback)((n => {
                        Ur(n, Lx) ? e.length > 0 ? ZP(qQ) : ZP(t.map((e => e.entity))) : void 0 !== e.find((e => Ur(n, e))) ? ZP(e.filter((e => !Ur(n, e)))) : ZP([...e, n])
                    }), [e, t]);
                return t.length ? (0, z.jsx)(YQ, {
                    title: (0, z.jsx)(Pc.Toolbar.ASSET_PACKS_PANEL_TITLE, {}),
                    uiTag: kx.value?.toolOptionsAssetPacks,
                    children: (0, z.jsxs)(tp, {
                        direction: Rg.Both,
                        children: [t.length > 1 && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_TITLE, {
                                hash: "AssetPack.All"
                            }),
                            children: (0, z.jsx)(VQ, {
                                focusKey: Dr(Lx),
                                value: Lx,
                                src: "Media/Tools/Snap Options/All.svg",
                                selected: Gr(t.map((e => e.entity)), e),
                                onClick: n
                            })
                        }), t.map(((t, s) => (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Assets.NAME, {
                                hash: t.name
                            }),
                            children: (0, z.jsx)(VQ, {
                                focusKey: `${Dr(t.entity)}-${s}`,
                                value: t.entity,
                                src: t.icon,
                                selected: void 0 !== e.find((e => Ur(t.entity, e))),
                                highlight: t.highlight,
                                onClick: n
                            })
                        }, s)))]
                    })
                }) : null
            };
        var QQ = [{
            value: DP.Child,
            src: "Media/Tools/Vegetation Options/TreeChild.svg",
            tooltipHash: "Sapling"
        }, {
            value: DP.Teen,
            src: "Media/Tools/Vegetation Options/TreeTeen.svg",
            tooltipHash: "Young"
        }, {
            value: DP.Adult,
            src: "Media/Tools/Vegetation Options/TreeAdult.svg",
            tooltipHash: "Mature"
        }, {
            value: DP.Elderly,
            src: "Media/Tools/Vegetation Options/TreeElderly.svg",
            tooltipHash: "Elderly"
        }];
        const ZQ = () => {
                const e = sl(qP),
                    t = (0, Y.useRef)(e);
                t.current = e;
                const n = (0, Y.useCallback)((e => {
                    let n = t.current;
                    n & e ? n ^= e : n |= e, XP(n || 1)
                }), []);
                return e === DP.Disabled ? null : (0, z.jsx)(YQ, {
                    title: (0, z.jsx)(Pc.Toolbar.VEGETATION_AGE_PANEL_TITLE, {}),
                    uiTag: kx.value?.toolOptionsVegatationAge,
                    children: (0, z.jsx)(tp, {
                        children: QQ.map((t => (0, z.jsx)(kY, {
                            title: null,
                            description: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_DESCRIPTION, {
                                hash: t.tooltipHash
                            }),
                            children: (0, z.jsx)(VQ, {
                                focusKey: `vegetation-age:${t.value}`,
                                value: t.value,
                                src: t.src,
                                selected: !!(e & t.value),
                                onClick: n
                            })
                        }, t.tooltipHash)))
                    })
                })
            },
            JQ = () => {
                rg(kx.value?.toolOptionsModes);
                const e = sl(PO),
                    t = (0, Y.useCallback)((e => ZO(e)), []),
                    n = (0, Y.useCallback)((e => {
                        "number" == typeof e && t(e)
                    }), [t]);
                return e.modes.length < 2 ? null : (0, z.jsx)(YQ, {
                    title: e.modes.length <= 7 ? (0, z.jsx)(Pc.Toolbar.TOOL_MODE_TITLE, {}) : null,
                    uiTag: kx.value?.toolOptionsModes,
                    children: (0, z.jsx)(Qg, {
                        focused: e.modeIndex,
                        direction: Rg.Horizontal,
                        onChange: n,
                        children: e.modes.map((n => (0, z.jsx)(wx, {
                            uiTag: kx.value?.toolOptionsModes + n.id,
                            children: (0, z.jsx)(kY, {
                                title: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_TITLE, {
                                    hash: n.id
                                }),
                                description: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_DESCRIPTION, {
                                    hash: n.id
                                }),
                                children: (0, z.jsx)(VQ, {
                                    uiTag: kx.value?.toolOptionsModes + n.id,
                                    focusKey: n.index,
                                    value: n.index,
                                    src: n.icon,
                                    selected: n.index === e.modeIndex,
                                    onSelect: t
                                })
                            })
                        }, n.id)))
                    })
                })
            },
            eZ = () => {
                const e = sl(qO),
                    t = sl(bP),
                    n = sl(EP),
                    s = sl(IP),
                    i = sl(yP),
                    a = sl(jP),
                    o = sl(SP),
                    r = sl(NP),
                    l = sl(wP),
                    c = i <= a,
                    u = i >= o,
                    d = (0, Y.useCallback)((() => MP(Od(tZ(i, -10), a, o))), [i, o, a]),
                    m = (0, Y.useCallback)((() => MP(Od(tZ(i, 10), a, o))), [i, o, a]),
                    h = n <= r,
                    g = n >= l,
                    p = (0, Y.useCallback)((() => {
                        let e;
                        e = n > 550 ? 100 : n > 125 ? 50 : 10, PP(Od(tZ(n, -e), r, l))
                    }), [n, r, l]),
                    f = (0, Y.useCallback)((() => {
                        let e;
                        e = n > 475 ? 100 : n > 95 ? 50 : 10, PP(Od(tZ(n, e), r, l))
                    }), [n, l, r]),
                    x = s <= .01,
                    v = s >= 1,
                    _ = (0, Y.useCallback)((() => {
                        LP(Od(tZ(s, -(s > .11 ? .05 : .01)), .01, 1))
                    }), [s]),
                    b = (0, Y.useCallback)((() => {
                        LP(Od(tZ(s, +(s > .095 ? .05 : .01)), .01, 1))
                    }), [s]),
                    T = (0, Y.useCallback)((e => {
                        LP(e / 100)
                    }), []),
                    E = sl(TP),
                    I = (0, Y.useMemo)((() => E.find((e => Ur(e.entity, t)))), [E, t]),
                    y = sl(CP),
                    j = (0, Y.useCallback)((() => AP(tZ(y, 15) % 360)), [y]),
                    S = (0, Y.useCallback)((() => AP((tZ(y, -15) + 360) % 360)), [y]);
                return Ur(t, Lx) ? null : (0, z.jsxs)(z.Fragment, {
                    children: [e && (0, z.jsx)(YQ, {
                        title: (0, z.jsx)(Pc.Toolbar.BRUSH, {}),
                        children: (0, z.jsx)(qI, {
                            theme: sF,
                            content: E.map((e => (0, z.jsx)(JI, {
                                focusKey: e.name,
                                value: e.entity,
                                selected: Ur(e.entity, t),
                                onChange: OP,
                                children: e.name
                            }, e.name))),
                            children: (0, z.jsx)(XI, {
                                className: Zu()(sF.dropdownToggle, WQ.dropdownToggle),
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_CHANGE_BRUSH, {}),
                                children: I?.name
                            })
                        })
                    }), null !== i && (0, z.jsx)(YQ, {
                        title: (0, z.jsx)(Pc.Toolbar.BRUSH_HEIGHT, {}),
                        uiTag: kx.value?.toolOptionsBrushSize,
                        children: (0, z.jsxs)(tp, {
                            direction: Rg.Horizontal,
                            children: [(0, z.jsx)(GQ, {
                                src: "Media/Glyphs/ThickStrokeArrowDown.svg",
                                disabled: c,
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_DECREASE_BRUSH_HEIGHT, {}),
                                selectSound: rp.decreaseElevation,
                                className: WQ.startButton,
                                onSelect: d
                            }), (0, z.jsx)("div", {
                                className: WQ.numberField,
                                children: (0, z.jsx)(AQ, {
                                    unit: Oc.NetElevation,
                                    value: i,
                                    className: WQ.numberInputField,
                                    onChange: MP,
                                    min: a,
                                    max: o
                                })
                            }), (0, z.jsx)(GQ, {
                                src: "Media/Glyphs/ThickStrokeArrowUp.svg",
                                disabled: u,
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_INCREASE_BRUSH_HEIGHT, {}),
                                selectSound: rp.increaseElevation,
                                className: WQ.endButton,
                                onSelect: m
                            })]
                        })
                    }), (0, z.jsx)(YQ, {
                        title: (0, z.jsx)(Pc.Toolbar.BRUSH_SIZE, {}),
                        uiTag: kx.value?.toolOptionsBrushSize,
                        children: (0, z.jsxs)(tp, {
                            direction: Rg.Horizontal,
                            children: [(0, z.jsx)(GQ, {
                                src: "Media/Glyphs/ThickStrokeArrowDown.svg",
                                disabled: h,
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_DECREASE_BRUSH_SIZE, {}),
                                selectSound: rp.decreaseElevation,
                                className: WQ.startButton,
                                onSelect: p
                            }), (0, z.jsx)("div", {
                                className: WQ.numberField,
                                children: (0, z.jsx)(AQ, {
                                    unit: Oc.Integer,
                                    value: n,
                                    className: WQ.numberInputField,
                                    onChange: PP,
                                    min: r,
                                    max: l
                                })
                            }), (0, z.jsx)(GQ, {
                                src: "Media/Glyphs/ThickStrokeArrowUp.svg",
                                disabled: g,
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_INCREASE_BRUSH_SIZE, {}),
                                selectSound: rp.increaseElevation,
                                className: WQ.endButton,
                                onSelect: f
                            })]
                        })
                    }), (0, z.jsx)(YQ, {
                        title: (0, z.jsx)(Pc.Toolbar.BRUSH_STRENGTH, {}),
                        uiTag: kx.value?.toolOptionsBrushStrength,
                        children: (0, z.jsxs)(tp, {
                            direction: Rg.Horizontal,
                            children: [(0, z.jsx)(GQ, {
                                src: "Media/Glyphs/ThickStrokeArrowDown.svg",
                                disabled: x,
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_DECREASE_BRUSH_STRENGTH, {}),
                                selectSound: rp.decreaseElevation,
                                className: WQ.startButton,
                                onSelect: _
                            }), (0, z.jsx)("div", {
                                className: WQ.numberField,
                                children: (0, z.jsx)(AQ, {
                                    unit: Oc.Percentage,
                                    value: 100 * s,
                                    className: WQ.numberInputField,
                                    onChange: T,
                                    min: 1,
                                    max: 100
                                })
                            }), (0, z.jsx)(GQ, {
                                src: "Media/Glyphs/ThickStrokeArrowUp.svg",
                                disabled: v,
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_INCREASE_BRUSH_STRENGTH, {}),
                                selectSound: rp.increaseElevation,
                                className: WQ.endButton,
                                onSelect: b
                            })]
                        })
                    }), e && (0, z.jsx)(YQ, {
                        title: (0, z.jsx)(Pc.Toolbar.BRUSH_ANGLE, {}),
                        children: (0, z.jsxs)(tp, {
                            direction: Rg.Horizontal,
                            children: [(0, z.jsx)(GQ, {
                                src: "Media/Glyphs/ThickStrokeArrowDown.svg",
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_ROTATE_BRUSH_COUNTER_CLOCKWISE, {}),
                                selectSound: rp.decreaseElevation,
                                className: WQ.startButton,
                                onSelect: S
                            }), (0, z.jsx)("div", {
                                className: WQ.numberField,
                                children: (0, z.jsx)(AQ, {
                                    unit: Oc.Integer,
                                    value: y,
                                    className: WQ.numberInputField,
                                    onChange: AP,
                                    min: 0,
                                    max: 360
                                })
                            }), (0, z.jsx)(GQ, {
                                src: "Media/Glyphs/ThickStrokeArrowUp.svg",
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_ROTATE_BRUSH_CLOCKWISE, {}),
                                selectSound: rp.increaseElevation,
                                className: WQ.endButton,
                                onSelect: j
                            })]
                        })
                    })]
                })
            };

        function tZ(e, t) {
            return t * Math.round(e / t) + t
        }
        const nZ = () => {
                const e = sl(AO),
                    t = sl(RO),
                    n = sl(MO),
                    s = sl(kO),
                    i = sZ(e),
                    a = (n & t) === t,
                    o = (0, Y.useCallback)((() => {
                        aP(a ? n & ~t : n | t)
                    }), [a, t, n]),
                    r = (0, Y.useCallback)((e => {
                        const t = 1 << e;
                        aP(0 != (n & t) ? n & ~t : n | t)
                    }), [n]);
                if (!i.length) return null;
                const l = i.filter((e => "ContourLines" !== s[e])),
                    c = i.filter((e => "ContourLines" === s[e]));
                return (0, z.jsxs)(z.Fragment, {
                    children: [!!l.length && (0, z.jsx)(YQ, {
                        title: (0, z.jsx)(Pc.Toolbar.SNAPPING_TITLE, {}),
                        uiTag: kx.value?.toolOptionsSnapping,
                        children: (0, z.jsxs)(tp, {
                            direction: Rg.Horizontal,
                            children: [i.length > 1 && (0, z.jsx)(GQ, {
                                multiSelect: !0,
                                src: "Media/Tools/Snap Options/All.svg",
                                selected: a,
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_SNAP_ALL, {}),
                                onSelect: o
                            }), l.map((e => (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP, {
                                    hash: s[e]
                                }),
                                children: (0, z.jsx)(VQ, {
                                    focusKey: e,
                                    value: e,
                                    src: "Media/Tools/Snap Options/" + s[e] + ".svg",
                                    selected: 0 != (n & 1 << e),
                                    multiSelect: !0,
                                    onSelect: r
                                }, e)
                            }, e)))]
                        })
                    }), !!c.length && (0, z.jsx)(YQ, {
                        title: (0, z.jsx)(Pc.Toolbar.CONTOUR_LINES_TITLE, {}),
                        children: (0, z.jsx)(tp, {
                            direction: Rg.Horizontal,
                            children: c.map((e => (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP, {
                                    hash: s[e]
                                }),
                                children: (0, z.jsx)(VQ, {
                                    focusKey: e,
                                    value: e,
                                    src: "Media/Tools/Snap Options/" + s[e] + ".svg",
                                    selected: 0 != (n & 1 << e),
                                    multiSelect: !0,
                                    shortcut: "Toggle Contour Lines",
                                    onSelect: r
                                }, e)
                            }, e)))
                        })
                    })]
                })
            },
            sZ = e => (0, Y.useMemo)((() => {
                const t = [];
                let n = 0;
                for (; e >> n > 0;) 0 != (e >> n & 1) && t.push(n), n++;
                return t
            }), [e]),
            iZ = [10, 5, 2.5, 1.25],
            aZ = () => {
                const e = sl(DO),
                    t = sl(FO),
                    n = sl(UO),
                    s = t <= e.min,
                    i = t >= e.max,
                    a = (0, Y.useCallback)((e => iP(e)), []),
                    o = (0, Y.useCallback)((() => nP()), []),
                    r = (0, Y.useCallback)((() => tP()), []);
                return e.min >= e.max ? null : (0, z.jsx)(YQ, {
                    title: (0, z.jsx)(Pc.Toolbar.ELEVATION_TITLE, {}),
                    uiTag: kx.value?.toolOptionsElevation,
                    children: (0, z.jsxs)(tp, {
                        direction: Rg.Horizontal,
                        children: [(0, z.jsx)(GQ, {
                            src: "Media/Glyphs/ThickStrokeArrowDown.svg",
                            disabled: s,
                            tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_DECREASE_ELEVATION, {}),
                            selectSound: rp.decreaseElevation,
                            uiTag: kx.value?.toolOptionsElevationDecrease,
                            className: WQ.startButton,
                            onSelect: o,
                            shortcut: "Decrease Elevation"
                        }), (0, z.jsx)("div", {
                            className: WQ.numberField,
                            children: (0, z.jsx)(Gc, {
                                value: t,
                                unit: Oc.NetElevation
                            })
                        }), (0, z.jsx)(GQ, {
                            src: "Media/Glyphs/ThickStrokeArrowUp.svg",
                            disabled: i,
                            tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_INCREASE_ELEVATION, {}),
                            selectSound: rp.increaseElevation,
                            uiTag: kx.value?.toolOptionsElevationIncrease,
                            className: WQ.endButton,
                            onSelect: r,
                            shortcut: "Increase Elevation"
                        }), (0, z.jsx)(HQ, {
                            selectedValue: n,
                            values: iZ,
                            uiTag: kx.value?.toolOptionsElevationStep,
                            tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_ELEVATION_STEP, {}),
                            onSelect: a
                        })]
                    })
                })
            },
            oZ = () => {
                const e = sl(PO),
                    t = sl(HO),
                    n = sl(KO),
                    s = (0, Y.useCallback)((() => lP(!n)), [n]);
                return e.id !== uP && t ? (0, z.jsx)(YQ, {
                    title: (0, z.jsx)(Pc.Toolbar.UNDERGROUND_MODE_TITLE, {}),
                    children: (0, z.jsx)(GQ, {
                        src: "Media/Tools/Net Tool/Underground.svg",
                        disabled: !t,
                        selected: n,
                        multiSelect: !0,
                        uiTag: kx.value?.toolOptionsUnderground,
                        tooltip: (0, z.jsx)(Pc.Toolbar.TOGGLE_UNDERGROUND_MODE, {}),
                        selectSound: n ? rp.increaseElevation : rp.decreaseElevation,
                        onSelect: s
                    })
                }) : null
            },
            rZ = new Eg("PARALLEL_MODE_TOGGLE"),
            lZ = [2, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96],
            cZ = () => {
                const e = sl(BO),
                    t = sl(GO),
                    n = sl(VO),
                    s = (0, Y.useMemo)((() => lZ.sort(((e, t) => e - t))), []),
                    i = n <= s[0],
                    a = (0, Y.useCallback)((() => {
                        for (let e = s.length - 1; e >= 0; e--)
                            if (s[e] < n) {
                                rP(s[e]);
                                break
                            }
                    }), [n, s]),
                    o = n >= s[s.length - 1],
                    r = (0, Y.useCallback)((() => {
                        for (let e = 0; e < s.length; e++)
                            if (s[e] > n) {
                                rP(s[e]);
                                break
                            }
                    }), [n, s]);
                return e ? (0, z.jsx)(YQ, {
                    title: (0, z.jsx)(Pc.Toolbar.PARALLEL_MODE_TITLE, {}),
                    children: (0, z.jsxs)(tp, {
                        initialFocused: rZ,
                        direction: Rg.Horizontal,
                        children: [t && (0, z.jsxs)(z.Fragment, {
                            children: [(0, z.jsx)(GQ, {
                                src: "Media/Tools/Net Tool/ParallelMinus.svg",
                                tooltip: (0, z.jsx)(Pc.Toolbar.DECREASE_PARALLEL_OFFSET, {}),
                                className: WQ.startButton,
                                disabled: i,
                                onSelect: a,
                                uiTag: kx.value?.toolOptionsParallelModeOffsetDecrease
                            }), (0, z.jsx)(wx, {
                                uiTag: kx.value?.toolOptionsParallelModeOffset,
                                children: (0, z.jsx)("div", {
                                    className: WQ.numberField,
                                    children: (0, z.jsx)(Gc, {
                                        value: n / 8,
                                        unit: Oc.FloatTwoFractions
                                    })
                                })
                            }), (0, z.jsx)(GQ, {
                                src: "Media/Tools/Net Tool/ParallelPlus.svg",
                                tooltip: (0, z.jsx)(Pc.Toolbar.INCREASE_PARALLEL_OFFSET, {}),
                                className: WQ.endButton,
                                disabled: o,
                                onSelect: r,
                                uiTag: kx.value?.toolOptionsParallelModeOffsetIncrease
                            })]
                        }), (0, z.jsx)(GQ, {
                            focusKey: rZ,
                            src: "Media/Tools/Net Tool/Parallel.svg",
                            tooltip: (0, z.jsx)(Pc.Toolbar.TOGGLE_PARALLEL_MODE, {}),
                            selected: t,
                            multiSelect: !0,
                            onSelect: oP,
                            uiTag: kx.value?.toolOptionsParallelMode
                        })]
                    })
                }) : null
            },
            uZ = () => {
                const e = sl(PO),
                    t = sl(YO),
                    n = sl($O),
                    s = (0, Y.useCallback)((e => XO(e)), []);
                return e.id !== uP && t ? (0, z.jsx)(YQ, {
                    title: (0, z.jsx)(Pc.ToolOptions.COLOR_TITLE, {
                        hash: e.id
                    }),
                    children: (0, z.jsx)(Tg, {
                        tooltip: (0, z.jsx)(Pc.ToolOptions.COLOR_TOOLTIP, {
                            hash: e.id
                        }),
                        children: (0, z.jsx)(PQ, {
                            popupDirection: "up",
                            value: n,
                            onChange: s
                        })
                    })
                }) : null
            };
        X.add("game-ui/game/components/tool-options/mouse-tool-options/mouse-tool-options.tsx", {
            get MouseToolOptions() {
                return zQ
            },
            set MouseToolOptions(e) {
                zQ = e
            },
            get Section() {
                return YQ
            },
            set Section(e) {
                YQ = e
            },
            get vegetationAgeOptions() {
                return QQ
            },
            set vegetationAgeOptions(e) {
                QQ = e
            }
        });
        let dZ = {
            group: "group_fXk",
            item: "item_RBL item-focused_FuT",
            "item-content": "item-content__FJ",
            itemContent: "item-content__FJ",
            readonly: "readonly_jlY",
            label: "label_EcW",
            content: "content_I1Y",
            "arrow-button": "arrow-button_V0s",
            arrowButton: "arrow-button_V0s",
            field: "field_hZA",
            "wide-field": "wide-field_jm1 field_hZA",
            wideField: "wide-field_jm1 field_hZA",
            hidden: "hidden_o8e",
            "color-field": "color-field_zGk",
            colorField: "color-field_zGk"
        };
        X.add("game-ui/game/components/tool-options/gamepad-tool-options/gamepad-tool-options.module.scss", {
            get classes() {
                return dZ
            },
            set classes(e) {
                Object.assign(dZ, e)
            }
        });
        const mZ = dZ;
        var hZ = () => {
                const e = Dm(),
                    [t, n] = (0, Y.useState)(!1),
                    s = e && !t;
                return rg(kx.value?.toolOptions, t), (0, Y.useEffect)((() => {
                    e && sL(t)
                }), [t, e]), (0, z.jsx)(Ah, {
                    onFocusChange: n,
                    children: (0, z.jsxs)(tp, {
                        children: [(0, z.jsx)(pZ, {
                            readonly: s
                        }), (0, z.jsx)(fZ, {
                            readonly: s
                        }), (0, z.jsx)(vZ, {
                            readonly: s
                        }), (0, z.jsx)(TZ, {
                            readonly: s
                        }), (0, z.jsx)(_Z, {
                            readonly: s
                        }), (0, z.jsx)(CZ, {
                            readonly: s
                        }), (0, z.jsx)(SZ, {
                            readonly: s
                        }), (0, z.jsx)(wZ, {
                            readonly: s
                        }), (0, z.jsx)(IZ, {
                            readonly: s
                        }), (0, z.jsx)(OZ, {})]
                    })
                })
            },
            gZ = ({
                focusKey: e,
                title: t,
                readonly: n,
                hidden: s,
                leftDisabled: i,
                rightDisabled: a,
                hideArrows: o,
                uiTag: r,
                uiTagLeft: l,
                uiTagRight: c,
                children: u,
                onSelectLeft: d,
                onSelectRight: m
            }) => {
                const h = (i || !d) && (a || !m),
                    g = (0, Y.useMemo)((() => ({
                        "Change Tool Option": h ? null : e => {
                            lp(rp.dragSlider), e < 0 ? d && !i && (d(), l && ag(l)) : e > 0 && m && !a && (m(), c && ag(c))
                        }
                    })), [h, i, d, m, a, l, c]);
                return (0, z.jsx)(Ag, {
                    actions: g,
                    children: (0, z.jsx)(Ip, {
                        focusKey: e,
                        className: Zu()(mZ.item, n && mZ.readonly, s && mZ.hidden),
                        children: (0, z.jsxs)("div", {
                            className: mZ.itemContent,
                            children: [null != t && (0, z.jsx)("div", {
                                className: mZ.label,
                                children: t
                            }), (0, z.jsx)(wx, {
                                uiTag: s ? void 0 : r,
                                disableBlinking: !0,
                                children: (0, z.jsxs)("div", {
                                    className: mZ.content,
                                    children: [!n && !o && (0, z.jsx)(wx, {
                                        uiTag: l,
                                        children: (0, z.jsx)(sf, {
                                            disableHint: !0,
                                            tinted: !0,
                                            focusKey: Ig,
                                            src: "Media/Glyphs/ThickStrokeArrowLeft.svg",
                                            disabled: i,
                                            className: mZ.arrowButton,
                                            onSelect: d
                                        })
                                    }), u, !n && !o && (0, z.jsx)(wx, {
                                        uiTag: c,
                                        children: (0, z.jsx)(sf, {
                                            disableHint: !0,
                                            tinted: !0,
                                            focusKey: Ig,
                                            src: "Media/Glyphs/ThickStrokeArrowRight.svg",
                                            disabled: a,
                                            className: mZ.arrowButton,
                                            onSelect: m
                                        })
                                    })]
                                })
                            })]
                        })
                    })
                })
            };
        const pZ = ({
                readonly: e
            }) => {
                const t = sl(VP),
                    n = sl(GP),
                    s = (0, Y.useCallback)((e => {
                        t.length > 1 && void 0 !== t.find((t => Ur(e, t))) ? QP(t.filter((t => !Ur(e, t)))) : void 0 === t.find((t => Ur(e, t))) && QP([...t, e])
                    }), [t]);
                return n.length ? (0, z.jsx)(gZ, {
                    leftDisabled: !0,
                    rightDisabled: !0,
                    title: (0, z.jsx)(Pc.Toolbar.THEME_PANEL_TITLE, {}),
                    readonly: e,
                    uiTag: kx.value?.toolOptionsThemes,
                    children: (0, z.jsx)(tp, {
                        direction: Rg.Horizontal,
                        children: n.map((e => (0, z.jsx)(kY, {
                            title: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_TITLE, {
                                hash: e.name
                            }),
                            description: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_DESCRIPTION, {
                                hash: e.name
                            }),
                            children: (0, z.jsx)(VQ, {
                                multiSelect: !0,
                                focusKey: Dr(e.entity),
                                value: e.entity,
                                src: e.icon,
                                highlight: e.highlight,
                                selected: void 0 !== t.find((t => Ur(e.entity, t))),
                                disabled: 1 === t.length && void 0 !== t.find((t => Ur(e.entity, t))),
                                onSelect: s
                            })
                        }, Dr(e.entity))))
                    })
                }) : null
            },
            fZ = ({
                readonly: e
            }) => {
                const t = sl(WP),
                    n = sl(KP),
                    s = (0, Y.useCallback)((e => {
                        Ur(e, Lx) ? t.length > 0 ? ZP([]) : ZP(n.map((e => e.entity))) : void 0 !== t.find((t => Ur(e, t))) ? ZP(t.filter((t => !Ur(e, t)))) : ZP([...t, e])
                    }), [t, n]);
                return n.length ? (0, z.jsx)(gZ, {
                    title: (0, z.jsx)(Pc.Toolbar.ASSET_PACKS_PANEL_TITLE, {}),
                    readonly: e,
                    uiTag: kx.value?.toolOptionsAssetPacks,
                    hideArrows: !0,
                    children: (0, z.jsxs)(tp, {
                        direction: Rg.Both,
                        children: [n.length > 1 && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_TITLE, {
                                hash: "AssetPack.All"
                            }),
                            children: (0, z.jsx)(VQ, {
                                multiSelect: !0,
                                focusKey: Dr(Lx),
                                value: Lx,
                                src: "Media/Tools/Snap Options/All.svg",
                                selected: Gr(n.map((e => e.entity)), t),
                                onSelect: s
                            })
                        }), n.map(((e, n) => (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Assets.NAME, {
                                hash: e.name
                            }),
                            children: (0, z.jsx)(VQ, {
                                multiSelect: !0,
                                focusKey: `${Dr(e.entity)}-${n}`,
                                value: e.entity,
                                src: e.icon,
                                selected: void 0 !== t.find((t => Ur(e.entity, t))),
                                highlight: e.highlight,
                                onSelect: s
                            })
                        }, n)))]
                    })
                }) : null
            },
            xZ = () => {},
            vZ = ({
                readonly: e
            }) => {
                const t = sl(PO);
                rg(kx.value?.toolOptionsModes);
                const n = (0, Y.useCallback)((e => ZO(e)), []),
                    s = (0, Y.useCallback)((() => {
                        const e = XN(t.modes, t.modes.findIndex((e => e.index === t.modeIndex)), !0);
                        e && n(e.index)
                    }), [t.modeIndex, t.modes, n]),
                    i = (0, Y.useCallback)((() => {
                        const e = $N(t.modes, t.modes.findIndex((e => e.index === t.modeIndex)), !0);
                        e && n(e.index)
                    }), [t.modeIndex, t.modes, n]);
                if (t.modes.length < 2) return null;
                const a = t.modes.find((e => e.index === t.modeIndex)) || t.modes[0];
                return (0, z.jsx)(gZ, {
                    title: t.modes.length <= 7 ? (0, z.jsx)(Pc.Toolbar.TOOL_MODE_TITLE, {}) : null,
                    readonly: e,
                    uiTag: kx.value?.toolOptionsModes,
                    onSelectLeft: s,
                    onSelectRight: i,
                    children: (0, z.jsx)(Qg, {
                        focused: a.id,
                        onChange: xZ,
                        children: t.modes.map((e => (0, z.jsx)(wx, {
                            uiTag: kx.value?.toolOptionsModes + e.id,
                            children: (0, z.jsx)(kY, {
                                title: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_TITLE, {
                                    hash: e.id
                                }),
                                description: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_DESCRIPTION, {
                                    hash: e.id
                                }),
                                children: (0, z.jsx)(VQ, {
                                    focusKey: e.id,
                                    value: e.index,
                                    src: e.icon,
                                    selected: e.index === t.modeIndex,
                                    onSelect: n,
                                    uiTag: kx.value?.toolOptionsModes + e.id
                                })
                            }, e.id)
                        }, e.id)))
                    })
                })
            },
            _Z = ({
                readonly: e
            }) => {
                const t = sl(bP),
                    n = sl(EP),
                    s = sl(IP),
                    i = sl(yP),
                    a = sl(jP),
                    o = sl(SP),
                    r = sl(NP),
                    l = sl(wP),
                    c = i <= a,
                    u = i >= o,
                    d = (0, Y.useCallback)((() => MP(Od(EZ(i, -10), a, o))), [i, o, a]),
                    m = (0, Y.useCallback)((() => MP(Od(EZ(i, 10), a, o))), [i, o, a]),
                    h = n <= r,
                    g = n >= l,
                    p = (0, Y.useCallback)((() => {
                        let e;
                        e = n > 550 ? 100 : n > 125 ? 50 : 10, PP(Od(EZ(n, -e), r, l))
                    }), [n, r, l]),
                    f = (0, Y.useCallback)((() => {
                        let e;
                        e = n > 475 ? 100 : n > 95 ? 50 : 10, PP(Od(EZ(n, e), r, l))
                    }), [n, l, r]),
                    x = s <= .01,
                    v = s >= 1,
                    _ = (0, Y.useCallback)((() => {
                        LP(Od(EZ(s, -(s > .11 ? .05 : .01)), .01, 1))
                    }), [s]),
                    b = (0, Y.useCallback)((() => {
                        LP(Od(EZ(s, +(s > .095 ? .05 : .01)), .01, 1))
                    }), [s]),
                    T = sl(CP),
                    E = (0, Y.useCallback)((() => AP(EZ(T, 15) % 360)), [T]),
                    I = (0, Y.useCallback)((() => AP((EZ(T, -15) + 360) % 360)), [T]),
                    y = sl(qO);
                return Ur(t, Lx) ? null : (0, z.jsxs)(z.Fragment, {
                    children: [y && (0, z.jsx)(bZ, {
                        selectedBrush: t,
                        readonly: e
                    }), null != i && (0, z.jsx)(gZ, {
                        title: (0, z.jsx)(Pc.Toolbar.BRUSH_HEIGHT, {}),
                        readonly: e,
                        uiTag: kx.value?.toolOptionsBrushSize,
                        leftDisabled: c,
                        onSelectLeft: d,
                        rightDisabled: u,
                        onSelectRight: m,
                        children: (0, z.jsx)("div", {
                            className: mZ.field,
                            children: (0, z.jsx)(Gc, {
                                value: i,
                                unit: Oc.NetElevation
                            })
                        })
                    }), (0, z.jsx)(gZ, {
                        title: (0, z.jsx)(Pc.Toolbar.BRUSH_SIZE, {}),
                        readonly: e,
                        uiTag: kx.value?.toolOptionsBrushSize,
                        leftDisabled: h,
                        onSelectLeft: p,
                        rightDisabled: g,
                        onSelectRight: f,
                        children: (0, z.jsx)("div", {
                            className: mZ.field,
                            children: (0, z.jsx)(Gc, {
                                value: n,
                                unit: Oc.Integer
                            })
                        })
                    }), (0, z.jsx)(gZ, {
                        title: (0, z.jsx)(Pc.Toolbar.BRUSH_STRENGTH, {}),
                        readonly: e,
                        uiTag: kx.value?.toolOptionsBrushStrength,
                        leftDisabled: x,
                        onSelectLeft: _,
                        rightDisabled: v,
                        onSelectRight: b,
                        children: (0, z.jsx)("div", {
                            className: mZ.field,
                            children: (0, z.jsx)(Gc, {
                                value: 100 * s,
                                unit: Oc.Percentage
                            })
                        })
                    }), y && (0, z.jsx)(gZ, {
                        title: (0, z.jsx)(Pc.Toolbar.BRUSH_ANGLE, {}),
                        readonly: e,
                        onSelectLeft: I,
                        onSelectRight: E,
                        children: (0, z.jsx)("div", {
                            className: mZ.field,
                            children: (0, z.jsx)(Gc, {
                                value: T,
                                unit: Oc.Integer
                            })
                        })
                    })]
                })
            },
            bZ = ({
                selectedBrush: e,
                readonly: t
            }) => {
                const n = sl(TP),
                    s = (0, Y.useMemo)((() => n.find((t => Ur(t.entity, e)))), [n, e]),
                    i = (0, Y.useCallback)((() => {
                        if (n.length > 1) {
                            const t = n.findIndex((t => Ur(t.entity, e))),
                                s = Math.max(t + 1, 0) % n.length;
                            OP(n[s].entity)
                        }
                    }), [n, e]),
                    a = (0, Y.useCallback)((() => {
                        if (n.length > 1) {
                            const t = n.findIndex((t => Ur(t.entity, e))),
                                s = Math.max(t + n.length - 1, 0) % n.length;
                            OP(n[s].entity)
                        }
                    }), [n, e]);
                return (0, z.jsx)(gZ, {
                    title: (0, z.jsx)(Pc.Toolbar.BRUSH, {}),
                    readonly: t,
                    leftDisabled: n.length <= 1,
                    onSelectLeft: a,
                    rightDisabled: n.length <= 1,
                    onSelectRight: i,
                    children: (0, z.jsx)("div", {
                        className: mZ.wideField,
                        children: s?.name
                    })
                })
            },
            TZ = ({
                readonly: e
            }) => {
                const t = sl(qP),
                    n = (0, Y.useRef)(t);
                n.current = t;
                const s = (0, Y.useCallback)((e => {
                    let t = n.current;
                    t & e ? t ^= e : t |= e, XP(t || 1)
                }), []);
                return t === DP.Disabled ? null : (0, z.jsx)(gZ, {
                    leftDisabled: !0,
                    rightDisabled: !0,
                    readonly: e,
                    title: (0, z.jsx)(Pc.Toolbar.VEGETATION_AGE_PANEL_TITLE, {}),
                    uiTag: kx.value?.toolOptionsVegatationAge,
                    children: (0, z.jsx)(tp, {
                        direction: Rg.Horizontal,
                        children: QQ.map((e => (0, z.jsx)(kY, {
                            title: null,
                            description: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_DESCRIPTION, {
                                hash: e.tooltipHash
                            }),
                            children: (0, z.jsx)(VQ, {
                                multiSelect: !0,
                                focusKey: `vegetation-age:${e.value}`,
                                value: e.value,
                                src: e.src,
                                selected: !!(t & e.value),
                                onSelect: s
                            })
                        }, e.tooltipHash)))
                    })
                })
            };

        function EZ(e, t) {
            return t * Math.round(e / t) + t
        }
        const IZ = ({
                readonly: e
            }) => {
                const t = sl(AO),
                    n = sl(RO),
                    s = sl(MO),
                    i = sl(kO),
                    a = yZ(t),
                    o = (s & n) === n,
                    r = (0, Y.useCallback)((() => {
                        aP(o ? s & ~n : s | n)
                    }), [o, n, s]),
                    l = (0, Y.useCallback)((e => {
                        const t = 1 << e;
                        aP(0 != (s & t) ? s & ~t : s | t)
                    }), [s]);
                return a.length ? (0, z.jsx)(wx, {
                    uiTag: kx.value?.toolOptionsSnapping,
                    children: (0, z.jsxs)("div", {
                        children: [e && (0, z.jsxs)(gZ, {
                            title: a.length <= 6 ? (0, z.jsx)(Pc.Toolbar.SNAPPING_TITLE, {}) : null,
                            readonly: !0,
                            children: [a.length > 1 && (0, z.jsx)(GQ, {
                                focusKey: Ig,
                                src: "Media/Tools/Snap Options/All.svg",
                                selected: o
                            }), a.map((e => (0, z.jsx)(VQ, {
                                focusKey: Ig,
                                value: e,
                                src: "Media/Tools/Snap Options/" + i[e] + ".svg",
                                selected: 0 != (s & 1 << e)
                            }, e)))]
                        }), a.length > 1 && (0, z.jsx)(gZ, {
                            title: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_SNAP_ALL, {}),
                            readonly: e,
                            hidden: e,
                            onSelectLeft: r,
                            onSelectRight: r,
                            children: (0, z.jsx)(GQ, {
                                src: "Media/Tools/Snap Options/All.svg",
                                selected: o,
                                onSelect: r
                            })
                        }), a.map((t => {
                            const n = () => l(t);
                            return (0, z.jsx)(gZ, {
                                title: (0, z.jsx)(Pc.ToolOptions.TOOLTIP, {
                                    hash: i[t]
                                }),
                                readonly: e,
                                hidden: e,
                                onSelectLeft: n,
                                onSelectRight: n,
                                children: (0, z.jsx)(VQ, {
                                    value: t,
                                    src: "Media/Tools/Snap Options/" + i[t] + ".svg",
                                    selected: 0 != (s & 1 << t),
                                    onSelect: l
                                })
                            }, t)
                        }))]
                    })
                }) : null
            },
            yZ = e => (0, Y.useMemo)((() => {
                const t = [];
                let n = 0;
                for (; e >> n > 0;) 0 != (e >> n & 1) && t.push(n), n++;
                return t
            }), [e]),
            jZ = [10, 5, 2.5, 1.25],
            SZ = ({
                readonly: e
            }) => {
                const t = sl(DO),
                    n = sl(FO),
                    s = sl(UO),
                    i = n <= t.min,
                    a = n >= t.max,
                    o = s <= jZ[jZ.length - 1],
                    r = (0, Y.useCallback)((() => {
                        for (let e = 0; e < jZ.length; e++)
                            if (jZ[e] < s) {
                                iP(jZ[e]), lp(rp.decreaseElevation), kx.value?.toolOptionsElevationStep && ag(kx.value?.toolOptionsElevationStep);
                                break
                            }
                    }), [s]),
                    l = s >= jZ[0],
                    c = (0, Y.useCallback)((() => {
                        for (let e = jZ.length - 1; e >= 0; e--)
                            if (jZ[e] > s) {
                                iP(jZ[e]), lp(rp.increaseElevation), kx.value?.toolOptionsElevationStep && ag(kx.value?.toolOptionsElevationStep);
                                break
                            }
                    }), [s]);
                return t.min >= t.max ? null : (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(gZ, {
                        title: (0, z.jsx)(Pc.Toolbar.ELEVATION_TITLE, {}),
                        uiTag: kx.value?.toolOptionsElevation,
                        uiTagLeft: kx.value?.toolOptionsElevationDecrease,
                        uiTagRight: kx.value?.toolOptionsElevationIncrease,
                        readonly: e,
                        leftDisabled: i,
                        onSelectLeft: nP,
                        rightDisabled: a,
                        onSelectRight: tP,
                        children: (0, z.jsx)("div", {
                            className: mZ.field,
                            children: (0, z.jsx)(Gc, {
                                value: n,
                                unit: Oc.NetElevation
                            })
                        })
                    }, "elevation"), (0, z.jsx)(gZ, {
                        title: (0, z.jsx)(Pc.ToolOptions.TOOLTIP_ELEVATION_STEP, {}),
                        hidden: e,
                        uiTag: kx.value?.toolOptionsElevationStep,
                        onSelectLeft: o ? void 0 : r,
                        onSelectRight: l ? void 0 : c,
                        children: (0, z.jsx)("div", {
                            className: mZ.field,
                            children: (0, z.jsx)(Gc, {
                                value: s,
                                unit: Oc.NetElevation
                            })
                        })
                    }, "elevationStep")]
                })
            },
            CZ = ({
                readonly: e
            }) => {
                const t = sl(PO),
                    n = sl(HO),
                    s = sl(KO),
                    i = (0, Y.useCallback)((() => {
                        lP(!s), lp(s ? rp.increaseElevation : rp.decreaseElevation)
                    }), [s]);
                return t.id !== uP && n ? (0, z.jsx)(gZ, {
                    title: (0, z.jsx)(Pc.Toolbar.UNDERGROUND_MODE_TITLE, {}),
                    readonly: e,
                    uiTag: kx.value?.toolOptionsUnderground,
                    onSelectLeft: i,
                    onSelectRight: i,
                    children: (0, z.jsx)(GQ, {
                        src: "Media/Tools/Net Tool/Underground.svg",
                        disabled: !n,
                        selected: s,
                        onSelect: i,
                        shortcut: t.id === cP ? s ? "Exit Underground Mode" : "Enter Underground Mode" : void 0
                    })
                }) : null
            },
            NZ = [2, 4, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96],
            wZ = ({
                readonly: e
            }) => {
                const t = sl(BO),
                    n = sl(GO),
                    s = sl(VO),
                    i = NZ,
                    a = s <= i[0],
                    o = (0, Y.useCallback)((() => {
                        for (let e = i.length - 1; e >= 0; e--)
                            if (i[e] < s) {
                                rP(i[e]);
                                break
                            }
                    }), [s, i]),
                    r = s >= i[i.length - 1],
                    l = (0, Y.useCallback)((() => {
                        for (let e = 0; e < i.length; e++)
                            if (i[e] > s) {
                                rP(i[e]);
                                break
                            }
                    }), [s, i]);
                return t ? (0, z.jsxs)("div", {
                    className: Zu()(e && !n && mZ.hidden),
                    children: [(0, z.jsx)(gZ, {
                        title: (0, z.jsx)(Pc.Toolbar.PARALLEL_MODE_TITLE, {}),
                        hidden: e,
                        onSelectLeft: oP,
                        onSelectRight: oP,
                        children: (0, z.jsx)(GQ, {
                            src: "Media/Tools/Net Tool/Parallel.svg",
                            selected: n,
                            onSelect: oP,
                            uiTag: e ? void 0 : kx.value?.toolOptionsParallelMode
                        })
                    }, "parallelMode"), n && (0, z.jsx)(gZ, {
                        title: (0, z.jsx)(Pc.Toolbar.PARALLEL_OFFSET_TITLE, {}),
                        readonly: e,
                        leftDisabled: a,
                        onSelectLeft: o,
                        rightDisabled: r,
                        onSelectRight: l,
                        uiTag: kx.value?.toolOptionsParallelModeOffset,
                        uiTagLeft: kx.value?.toolOptionsParallelModeOffsetDecrease,
                        uiTagRight: kx.value?.toolOptionsParallelModeOffsetIncrease,
                        children: (0, z.jsx)("div", {
                            className: mZ.field,
                            children: (0, z.jsx)(Gc, {
                                value: s / 8,
                                unit: Oc.FloatTwoFractions
                            })
                        })
                    }, "parallelOffset")]
                }) : null
            },
            OZ = () => {
                const e = sl(PO),
                    t = sl(YO),
                    n = sl($O),
                    s = (0, Y.useCallback)((e => XO(e)), []);
                return e.id !== uP && t ? (0, z.jsx)(Ip, {
                    className: Zu()(mZ.item, mZ.readonly),
                    children: (0, z.jsxs)("div", {
                        className: mZ.itemContent,
                        children: [(0, z.jsx)("div", {
                            className: mZ.label,
                            children: (0, z.jsx)(Pc.ToolOptions.COLOR_TITLE, {
                                hash: e.id
                            })
                        }), (0, z.jsx)("div", {
                            className: mZ.content,
                            children: (0, z.jsx)(PQ, {
                                className: mZ.colorField,
                                selectAction: "Toggle Tool Color Picker",
                                popupDirection: "up",
                                value: n,
                                onChange: s
                            })
                        })]
                    })
                }) : null
            };
        X.add("game-ui/game/components/tool-options/gamepad-tool-options/gamepad-tool-options.tsx", {
            get GamepadToolOptions() {
                return hZ
            },
            set GamepadToolOptions(e) {
                hZ = e
            },
            get Section() {
                return gZ
            },
            set Section(e) {
                gZ = e
            }
        });
        let PZ = {
            "tool-options-panel": "tool-options-panel_Se6",
            toolOptionsPanel: "tool-options-panel_Se6",
            "gamepad-active": "gamepad-active_Qvi",
            gamepadActive: "gamepad-active_Qvi",
            enter: "enter_YDH",
            "exit-active": "exit-active_hKG",
            exitActive: "exit-active_hKG",
            "enter-active": "enter-active_bG3",
            enterActive: "enter-active_bG3",
            exit: "exit_oe7",
            wrapper: "wrapper_eKY",
            hints: "hints_R2B",
            "tool-options": "tool-options_s9S",
            toolOptions: "tool-options_s9S",
            back: "back_QCv",
            hint: "hint_Bep",
            "left-hint": "left-hint_FnK",
            leftHint: "left-hint_FnK"
        };
        X.add("game-ui/game/components/tool-options/tool-options-panel.module.scss", {
            get classes() {
                return PZ
            },
            set classes(e) {
                Object.assign(PZ, e)
            }
        });
        const LZ = PZ;
        var AZ = Y.forwardRef((function ({
                focusKey: e,
                className: t,
                onClose: n,
                showOpenHint: s,
                showBackHint: i
            }, a) {
                const o = sl(wm),
                    r = o.find((e => "Tool Options" === e.name)),
                    l = o.find((e => "Close" === e.name));
                return (0, z.jsxs)("div", {
                    className: LZ.wrapper,
                    children: [(0, z.jsx)("div", {
                        className: Zu()(LZ.hints, LZ.toolOptions),
                        children: (0, z.jsx)(Pf, {
                            action: "Tool Options",
                            active: s && !!r?.items.length,
                            className: LZ.leftHint
                        })
                    }), (0, z.jsx)("div", {
                        className: Zu()(LZ.hints, LZ.back),
                        children: (0, z.jsx)(Pf, {
                            action: "Close",
                            active: i && !!l?.items.length,
                            className: LZ.leftHint
                        })
                    }), (0, z.jsx)(wx, {
                        uiTag: kx.value?.toolOptions,
                        disableBlinking: !0,
                        children: (0, z.jsx)(mh, {
                            styles: LZ,
                            children: (0, z.jsx)(MZ, {
                                focusKey: e,
                                className: t,
                                onClose: n,
                                ref: a
                            })
                        })
                    })]
                })
            })),
            MZ = Y.forwardRef((function (e, t) {
                const [n, s] = (0, Y.useState)(!1), i = Dm();
                return (0, z.jsx)(ip, {
                    focusKey: e.focusKey,
                    children: (0, z.jsx)(Dg, {
                        onAction: e.onClose,
                        children: (0, z.jsxs)(Ep, {
                            ref: t,
                            onFocusChange: s,
                            className: Zu()(LZ.toolOptionsPanel, i && LZ.gamepadActive, e.className),
                            children: [(0, z.jsx)(Op, {
                                children: i ? (0, z.jsx)(hZ, {}) : (0, z.jsx)(zQ, {})
                            }), (0, z.jsx)(Pf, {
                                action: "Move Horizontal",
                                active: n,
                                className: LZ.hint
                            })]
                        })
                    })
                })
            }));

        function RZ() {
            const e = sl(GP),
                t = sl(KP),
                n = sl(PO),
                s = sl(bP),
                i = sl(AO),
                a = sl(DO),
                o = sl(BO),
                r = sl(HO),
                l = sl(YO);
            return n.id !== xP && (e.length > 0 || t.length > 0 || n.modes.length > 1 || 0 !== i || a.min < a.max || o || l || n.id !== uP && r || !Ur(s, Lx))
        }
        X.add("game-ui/game/components/tool-options/tool-options-panel.tsx", {
            get ToolOptionsPanel() {
                return AZ
            },
            set ToolOptionsPanel(e) {
                AZ = e
            },
            get ToolOptions() {
                return MZ
            },
            set ToolOptions(e) {
                MZ = e
            },
            get useToolOptionsVisible() {
                return RZ
            },
            set useToolOptionsVisible(e) {
                RZ = e
            }
        });
        const kZ = "editorTutorials";
        var DZ = $r(kZ, "tutorialsDisabled"),
            FZ = $r(kZ, "tutorialsEnabled"),
            UZ = $r(kZ, "introActive"),
            BZ = ($r(kZ, "activeList"), $r(kZ, "next"), $r(kZ, "categories")),
            GZ = $r(kZ, "listIntroActive"),
            VZ = $r(kZ, "listOutroActive"),
            HZ = $r(kZ, "activeTutorial"),
            KZ = ($r(kZ, "activeTutorialPhase"), $r(kZ, "advisorPanelVisible"), el(kZ, "completeListIntro"));
        X.add("game-ui/game/data-binding/editor-tutorial-bindings.ts", {
            get tutorialsDisabled() {
                return tutorialsDisabled
            },
            set tutorialsDisabled(e) {
                tutorialsDisabled = e
            },
            get tutorialsEnabled() {
                return tutorialsEnabled
            },
            set tutorialsEnabled(e) {
                tutorialsEnabled = e
            },
            get tutorialIntroActive() {
                return tutorialIntroActive
            },
            set tutorialIntroActive(e) {
                tutorialIntroActive = e
            },
            get activeTutorialList() {
                return activeTutorialList
            },
            set activeTutorialList(e) {
                activeTutorialList = e
            },
            get nextTutorial() {
                return nextTutorial
            },
            set nextTutorial(e) {
                nextTutorial = e
            },
            get tutorialCategories() {
                return tutorialCategories
            },
            set tutorialCategories(e) {
                tutorialCategories = e
            },
            get listIntroActive() {
                return listIntroActive
            },
            set listIntroActive(e) {
                listIntroActive = e
            },
            get listOutroActive() {
                return listOutroActive
            },
            set listOutroActive(e) {
                listOutroActive = e
            },
            get activeTutorial() {
                return activeTutorial
            },
            set activeTutorial(e) {
                activeTutorial = e
            },
            get activeTutorialPhase() {
                return activeTutorialPhase
            },
            set activeTutorialPhase(e) {
                activeTutorialPhase = e
            },
            get advisorPanelVisible() {
                return advisorPanelVisible
            },
            set advisorPanelVisible(e) {
                advisorPanelVisible = e
            },
            get completeListIntro() {
                return KZ
            },
            set completeListIntro(e) {
                KZ = e
            }
        });
        let WZ = {
            "background-process-indicator": "background-process-indicator_NS7",
            backgroundProcessIndicator: "background-process-indicator_NS7",
            spinner: "spinner_TZP",
            rotate: "rotate_dOE",
            message: "message_UX3"
        };
        X.add("game-ui/common/background-process-indicator/background-process-indicator.module.scss", {
            get classes() {
                return WZ
            },
            set classes(e) {
                Object.assign(WZ, e)
            }
        });
        const zZ = WZ;
        var YZ = (0, Y.memo)((function ({
            className: e
        }) {
            const t = sl(vE);
            return t ? (0, z.jsxs)("div", {
                className: Zu()(zZ.backgroundProcessIndicator, e),
                children: [(0, z.jsx)("div", {
                    className: zZ.message,
                    children: (0, z.jsx)(Tc, {
                        id: t
                    })
                }), (0, z.jsx)(ef, {
                    src: "Media/Glyphs/ArrowCircular.svg",
                    className: zZ.spinner
                })]
            }) : null
        }));
        X.add("game-ui/common/background-process-indicator/background-process-indicator.tsx", {
            get BackgroundProcessIndicator() {
                return YZ
            },
            set BackgroundProcessIndicator(e) {
                YZ = e
            }
        });
        let $Z = {
            "climate-field": "climate-field_dIy field_eKJ",
            climateField: "climate-field_dIy field_eKJ",
            weather: "weather_dXo",
            "weather-container": "weather-container_L1D",
            weatherContainer: "weather-container_L1D",
            "celestial-object": "celestial-object_su7",
            celestialObject: "celestial-object_su7",
            active: "active_k1G",
            obstructed: "obstructed_oBa",
            sun: "sun_XMt celestial-object_su7",
            moon: "moon_TlF celestial-object_su7",
            "weather-icon": "weather-icon_BeV",
            weatherIcon: "weather-icon_BeV",
            temperature: "temperature_CiN",
            season: "season_js3",
            "season-hidden": "season-hidden_Y_1",
            seasonHidden: "season-hidden_Y_1"
        };
        X.add("game-ui/game/components/toolbar/bottom/climate-field/climate-field.module.scss", {
            get classes() {
                return $Z
            },
            set classes(e) {
                Object.assign($Z, e)
            }
        });
        const qZ = $Z;
        var XZ = ({
            hideSeason: e,
            theme: t
        }) => {
            const n = sl(Fj),
                s = sl(Uj),
                i = ol(Bj, ((e, t) => {
                    Math.round(e) !== Math.round(t) && o(e)
                })),
                [a, o] = (0, Y.useState)(i),
                r = function (e) {
                    switch (e) {
                    case hO.Sunrise:
                    case hO.Day:
                    case hO.Sunset:
                        return !1;
                    default:
                        return !0
                    }
                }(sl(xO));
            return (0, z.jsx)(kY, {
                title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_WEATHER, {}),
                description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_WEATHER, {}),
                children: (0, z.jsxs)(Ip, {
                    className: Zu()(qZ.climateField, t?.climateField, {
                        [qZ.seasonHidden]: e
                    }),
                    children: [(0, z.jsx)("div", {
                        className: Zu()(qZ.weather, t?.weather),
                        children: (0, z.jsxs)("div", {
                            className: qZ.weatherContainer,
                            children: [(0, z.jsx)("img", {
                                src: "Media/Game/Climate/Sun.svg",
                                className: Zu()(qZ.sun, !r && qZ.active, s > Dj.Few && qZ.obstructed)
                            }), (0, z.jsx)("img", {
                                src: "Media/Game/Climate/Moon.svg",
                                className: Zu()(qZ.moon, r && qZ.active, s > Dj.Few && qZ.obstructed)
                            }), (0, z.jsx)("img", {
                                src: "Media/Game/Climate/Few.svg",
                                className: Zu()(qZ.weatherIcon, s === Dj.Few && qZ.active)
                            }), (0, z.jsx)("img", {
                                src: "Media/Game/Climate/Scattered.svg",
                                className: Zu()(qZ.weatherIcon, s === Dj.Scattered && qZ.active)
                            }), (0, z.jsx)("img", {
                                src: "Media/Game/Climate/Broken.svg",
                                className: Zu()(qZ.weatherIcon, s === Dj.Broken && qZ.active)
                            }), (0, z.jsx)("img", {
                                src: "Media/Game/Climate/Overcast.svg",
                                className: Zu()(qZ.weatherIcon, s === Dj.Overcast && qZ.active)
                            }), (0, z.jsx)("img", {
                                src: "Media/Game/Climate/Rain.svg",
                                className: Zu()(qZ.weatherIcon, s === Dj.Rain && qZ.active)
                            }), (0, z.jsx)("img", {
                                src: "Media/Game/Climate/Snow.svg",
                                className: Zu()(qZ.weatherIcon, s === Dj.Snow && qZ.active)
                            }), (0, z.jsx)("img", {
                                src: "Media/Game/Climate/Hail.svg",
                                className: Zu()(qZ.weatherIcon, s === Dj.Hail && qZ.active)
                            }), (0, z.jsx)("img", {
                                src: "Media/Game/Climate/Storm.svg",
                                className: Zu()(qZ.weatherIcon, s === Dj.Storm && qZ.active)
                            }), (0, z.jsx)("div", {
                                className: Zu()(qZ.temperature, t?.temperature),
                                children: (0, z.jsx)(Gc, {
                                    value: a,
                                    unit: Oc.Temperature
                                })
                            })]
                        })
                    }), !e && (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(GY, {}), (0, z.jsx)("div", {
                            className: Zu()(qZ.season, t?.season),
                            children: null != n && (0, z.jsx)(Tc, {
                                id: n
                            })
                        })]
                    })]
                })
            })
        };
        X.add("game-ui/game/components/toolbar/bottom/climate-field/climate-field.tsx", {
            get ClimateField() {
                return XZ
            },
            set ClimateField(e) {
                XZ = e
            }
        });
        const QZ = "editorBottomBar";
        var ZZ = $r(QZ, "timeOfDay", 0),
            JZ = $r(QZ, "date", 0),
            eJ = $r(QZ, "cloudiness", 0),
            tJ = e => tl(QZ, "setTimeOfDay", e),
            nJ = () => tl(QZ, "resetTimeOfDay"),
            sJ = e => tl(QZ, "setDate", e),
            iJ = () => tl(QZ, "resetDate"),
            aJ = e => tl(QZ, "setCloudiness", e),
            oJ = () => tl(QZ, "resetCloudiness");
        X.add("game-ui/editor/data-binding/editor-bottom-bar-bindings.ts", {
            get timeOfDay() {
                return timeOfDay
            },
            set timeOfDay(e) {
                timeOfDay = e
            },
            get date() {
                return date
            },
            set date(e) {
                date = e
            },
            get cloudiness() {
                return cloudiness
            },
            set cloudiness(e) {
                cloudiness = e
            },
            get setTimeOfDay() {
                return tJ
            },
            set setTimeOfDay(e) {
                tJ = e
            },
            get resetTimeOfDay() {
                return nJ
            },
            set resetTimeOfDay(e) {
                nJ = e
            },
            get setDate() {
                return sJ
            },
            set setDate(e) {
                sJ = e
            },
            get resetDate() {
                return iJ
            },
            set resetDate(e) {
                iJ = e
            },
            get setCloudiness() {
                return aJ
            },
            set setCloudiness(e) {
                aJ = e
            },
            get resetCloudiness() {
                return oJ
            },
            set resetCloudiness(e) {
                oJ = e
            }
        });
        let rJ = {
            "bottom-bar": "bottom-bar_ODl",
            bottomBar: "bottom-bar_ODl",
            "bp-indicator": "bp-indicator_RBs",
            bpIndicator: "bp-indicator_RBs",
            space: "space_u2B",
            button: "button_wKY",
            "button-highlight": "button-highlight_lZc",
            buttonHighlight: "button-highlight_lZc",
            sliders: "sliders_H5X",
            slider: "slider_aPR",
            "slider-container": "slider-container_Fkn",
            sliderContainer: "slider-container_Fkn",
            aside: "aside_uAL",
            icon: "icon_KvW item-mouse-states_Fmi item-focused_FuT",
            controls: "controls_tq0",
            modes: "modes_Bd5",
            "inspector-modes": "inspector-modes_ur5",
            inspectorModes: "inspector-modes_ur5"
        };
        X.add("game-ui/editor/components/bottom-bar/bottom-bar.module.scss", {
            get classes() {
                return rJ
            },
            set classes(e) {
                Object.assign(rJ, e)
            }
        });
        const lJ = rJ;
        var cJ = ({
            className: e,
            onPauseMenuToggle: t
        }) => {
            const n = sl(JZ),
                s = sl(ZZ),
                i = sl(eJ),
                a = sl(DZ);
            return (0, z.jsx)(tp, {
                children: (0, z.jsxs)("div", {
                    className: Zu()(lJ.bottomBar, e),
                    children: [(0, z.jsxs)("div", {
                        className: lJ.controls,
                        children: [(0, z.jsxs)("div", {
                            className: lJ.aside,
                            children: [(0, z.jsx)(YY, {
                                disablePauseAnimation: !0,
                                editor: !0
                            }), (0, z.jsx)(Tp, {
                                children: (0, z.jsx)(XZ, {
                                    hideSeason: !0
                                })
                            })]
                        }), (0, z.jsxs)("div", {
                            className: lJ.sliders,
                            children: [(0, z.jsx)(wx, {
                                uiTag: kx.value?.resetTODButton,
                                editor: !0,
                                children: (0, z.jsx)(uJ, {
                                    value: s,
                                    onChange: tJ,
                                    icon: "Media/Editor/Time.svg",
                                    onReset: nJ,
                                    sliderTooltip: (0, z.jsx)(Pc.Editor.TIME_OF_DAY, {}),
                                    resetTooltip: (0, z.jsx)(Pc.Editor.RESET_TIME_OF_DAY, {})
                                })
                            }), (0, z.jsx)(uJ, {
                                value: n,
                                onChange: sJ,
                                icon: "Media/Editor/Date.svg",
                                onReset: iJ,
                                sliderTooltip: (0, z.jsx)(Pc.Editor.TIME_OF_YEAR, {}),
                                resetTooltip: (0, z.jsx)(Pc.Editor.RESET_TIME_OF_YEAR, {})
                            }), (0, z.jsx)(uJ, {
                                value: i,
                                onChange: aJ,
                                icon: "Media/Editor/Weather.svg",
                                onReset: oJ,
                                sliderTooltip: (0, z.jsx)(Pc.Editor.CLOUDINESS, {}),
                                resetTooltip: (0, z.jsx)(Pc.Editor.RESET_CLOUDINESS, {})
                            })]
                        }), (0, z.jsx)("div", {
                            children: (0, z.jsx)(YZ, {
                                className: lJ.bpIndicator
                            })
                        })]
                    }), (0, z.jsxs)("div", {
                        className: lJ.modes,
                        children: [(0, z.jsxs)("div", {
                            className: lJ.inspectorModes,
                            children: [!a && (0, z.jsx)(wx, {
                                uiTag: kx.value?.tutorialsToggle,
                                editor: !0,
                                children: (0, z.jsx)(mJ, {})
                            }), (0, z.jsx)(dJ, {
                                cameraMode: iQ.FirstPerson,
                                icon: "Media/Editor/CinematicCameraOn.svg",
                                offIcon: "Media/Editor/CinematicCameraOff.svg",
                                tooltip: (0, z.jsx)(Pc.PhotoMode.TOGGLE_FIRST_PERSON_MODE, {})
                            }), (0, z.jsx)(dJ, {
                                cameraMode: iQ.Orbit,
                                icon: "Media/Game/Icons/Orbit.svg",
                                tooltip: (0, z.jsx)(Pc.PhotoMode.TOGGLE_ORBIT_MODE, {})
                            })]
                        }), (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Common.PAUSE_MENU_TOGGLE_TOOLTIP, {}),
                            children: (0, z.jsx)(sf, {
                                tinted: !0,
                                src: "Media/Glyphs/Gear.svg",
                                className: lJ.button,
                                onSelect: t
                            })
                        })]
                    })]
                })
            })
        };
        const uJ = ({
                value: e,
                onChange: t,
                icon: n,
                onReset: s,
                sliderTooltip: i,
                resetTooltip: a
            }) => (0, z.jsxs)("div", {
                className: lJ.slider,
                children: [(0, z.jsx)(Tg, {
                    tooltip: a,
                    children: (0, z.jsx)(sf, {
                        src: n,
                        className: lJ.icon,
                        onSelect: s
                    })
                }), (0, z.jsx)(Ep, {
                    className: lJ.sliderContainer,
                    children: (0, z.jsx)(Np, {
                        children: (0, z.jsx)(Tg, {
                            tooltip: i,
                            children: (0, z.jsx)(CM, {
                                value: e,
                                start: 0,
                                end: 1,
                                noFill: !0,
                                onChange: t
                            })
                        })
                    })
                })]
            }),
            dJ = ({
                cameraMode: e,
                icon: t,
                offIcon: n,
                tooltip: s
            }) => {
                const i = sl(pQ) === e,
                    a = (0, Y.useCallback)((() => {
                        fQ(i ? iQ.Default : e)
                    }), [i, e]),
                    o = void 0 === n || i ? t : n;
                return (0, z.jsx)(Tg, {
                    tooltip: s,
                    children: (0, z.jsx)(sf, {
                        src: o,
                        className: Zu()(lJ.button, i && lJ.buttonHighlight),
                        onSelect: a
                    })
                })
            },
            mJ = () => {
                const e = sl(xQ),
                    t = "Media/Glyphs/Close.svg",
                    n = (0, Y.useCallback)((() => {
                        vQ()
                    }), []),
                    s = e ? t : "Media/Glyphs/Advisor.svg";
                return (0, z.jsx)(Tg, {
                    tooltip: (0, z.jsx)(Pc.Tutorials.ADVISOR_TITLE, {}),
                    children: (0, z.jsx)(sf, {
                        tinted: !0,
                        src: s,
                        className: Zu()(lJ.button),
                        onSelect: n
                    })
                })
            };
        X.add("game-ui/editor/components/bottom-bar/bottom-bar.tsx", {
            get BottomBar() {
                return cJ
            },
            set BottomBar(e) {
                cJ = e
            }
        });
        var hJ = Y.forwardRef((function ({
            theme: e = GT,
            onClose: t,
            expanded: n = !0,
            headerText: s,
            onToggleExpanded: i,
            className: a,
            children: o,
            isFocusRoot: r,
            headerIcon: l,
            togglable: c = !0,
            ...u
        }, d) {
            const m = UT(e),
                [h, g] = (0, Y.useState)(n),
                p = (0, Y.useCallback)((() => {
                    lp(rp.expandPanel), g((e => !e)), i && i(!h)
                }), [h, i]),
                f = (0, Y.useMemo)((() => ({
                    theme: m,
                    onClose: t,
                    expanded: h,
                    toggleExpanded: p
                })), [m, t, h, p]);
            (0, Y.useEffect)((() => {
                g(n)
            }), [n]);
            const x = r ? yp : Ah;
            return (0, z.jsx)(x, {
                children: (0, z.jsx)(Fg, {
                    onAction: t,
                    children: (0, z.jsx)(FT.Provider, {
                        value: f,
                        children: (0, z.jsx)(YT, {
                            theme: m,
                            ref: d,
                            header: (0, z.jsx)(gJ, {
                                togglable: c,
                                icon: l,
                                children: s
                            }),
                            ...u,
                            className: Zu()(h ? "expanded" : "collapsed", "collapsible", a),
                            children: h ? o : void 0
                        })
                    })
                })
            })
        }));
        const gJ = ({
            icon: e,
            theme: t,
            togglable: n = !0,
            className: s,
            children: i
        }) => {
            const a = (0, Y.useContext)(FT),
                o = !Dm() && null != a.onClose,
                r = t ?? a.theme;
            return (0, z.jsxs)("div", {
                onClick: a.toggleExpanded,
                className: Zu()(r.titleBar, s),
                children: [null != e ? "string" == typeof e ? (0, z.jsx)("img", {
                    src: e,
                    className: r.icon
                }) : e : o && (0, z.jsx)("div", {
                    className: r.iconSpace
                }), (0, z.jsx)("div", {
                    className: r.iconSpace
                }), (0, z.jsx)("div", {
                    className: r.title,
                    children: i
                }), n && (0, z.jsx)(ef, {
                    className: r.toggle,
                    src: a.expanded ? r.toggleIconExpanded : r.toggleIcon
                }), o ? (0, z.jsx)(sf, {
                    tinted: !0,
                    focusKey: Ig,
                    src: r.closeIcon,
                    theme: of ,
                    className: r.closeButton,
                    onSelect: a.onClose,
                    onClick: nx
                }) : null != e && (0, z.jsx)("div", {
                    className: r.iconSpace
                })]
            })
        };
        X.add("game-ui/common/panel/collapsible-panel.tsx", {
            get CollapsiblePanel() {
                return hJ
            },
            set CollapsiblePanel(e) {
                hJ = e
            }
        });
        let pJ = {
            panel: "panel_WVw panel_YqS",
            header: "header_IuN header_Bpo child-opacity-transition_nkS",
            content: "content_yeu content_AD7 child-opacity-transition_nkS",
            footer: "footer_j9m footer_pD5 child-opacity-transition_nkS",
            title: "title_q1x title_zQN"
        };
        X.add("game-ui/editor/themes/editor-panel.module.scss", {
            get classes() {
                return pJ
            },
            set classes(e) {
                Object.assign(pJ, e)
            }
        });
        const fJ = pJ;
        let xJ = {
            "foldout-item": "foldout-item_EBr foldout-item_wOF",
            foldoutItem: "foldout-item_EBr foldout-item_wOF",
            category: "category_Zf1",
            header: "header_h0B header_8H_ item-mouse-states_Fmi item-focused_FuT",
            "header-content": "header-content_owU header-content_wUX",
            headerContent: "header-content_owU header-content_wUX",
            icon: "icon_pQQ undefined",
            toggle: "toggle_NYV toggle_yQv"
        };
        X.add("game-ui/common/foldout/themes/advisor-item.module.scss", {
            get classes() {
                return xJ
            },
            set classes(e) {
                Object.assign(xJ, e)
            }
        });
        const vJ = xJ;
        let _J = {
            "advisor-panel": "advisor-panel_dXi",
            advisorPanel: "advisor-panel_dXi",
            scrollable: "scrollable_jAA",
            content: "content_Q2v",
            icon: "icon_l_s",
            hint: "hint_o1P",
            label: "label_D2b"
        };
        X.add("game-ui/game/components/advisor-panel/advisor-panel.module.scss", {
            get classes() {
                return _J
            },
            set classes(e) {
                Object.assign(_J, e)
            }
        });
        const bJ = _J;
        var TJ = ({
            expanded: e,
            className: t,
            focusKey: n,
            localization: s,
            theme: i,
            onClose: a,
            onToggle: o
        }) => {
            const r = sl(s === Pc.Tutorials ? Bh : BZ),
                l = sl(s === Pc.Tutorials ? Rh : FZ),
                c = Dm();
            return (0, z.jsx)(hJ, {
                isFocusRoot: !0,
                onClose: s === Pc.Tutorials ? a : void 0,
                theme: i,
                expanded: e,
                onToggleExpanded: o,
                focusKey: n,
                headerText: (0, z.jsx)(Pc.Tutorials.ADVISOR_TITLE, {}),
                transitionSounds: cp,
                className: Zu()(bJ.advisorPanel, t),
                showCloseHint: !0,
                togglable: !c,
                children: (0, z.jsx)(Zx, {
                    children: (0, z.jsx)(tp, {
                        children: (0, z.jsx)(ff, {
                            className: bJ.scrollable,
                            children: r.filter((e => !l || e.shown && !e.locked)).map(((e, t) => (0, z.jsx)(EJ, {
                                category: e,
                                showAll: !l,
                                localization: s
                            }, t)))
                        })
                    })
                })
            })
        };
        const EJ = ({
                category: e,
                localization: t,
                showAll: n
            }) => (0, z.jsx)(hy, {
                initialExpanded: !0,
                header: t === Pc.Tutorials && (0, z.jsx)(gy, {
                    children: (0, z.jsx)(t.TITLE, {
                        hash: e.name
                    })
                }),
                theme: vJ,
                type: "Category",
                children: e.children.filter((e => (n || e.shown) && !e.locked)).map(((e, s) => e.type === cg.Tutorial ? (0, z.jsx)(yJ, {
                    item: e,
                    showAll: n,
                    localization: t
                }, s) : (0, z.jsx)(IJ, {
                    item: e,
                    showAll: n,
                    localization: t
                }, s)))
            }),
            IJ = ({
                item: e,
                type: t = "Group",
                nesting: n = 1,
                showAll: s,
                localization: i
            }) => {
                const a = (0, Y.useMemo)((() => n + 1), [n]);
                return (0, z.jsx)(hy, {
                    header: (0, z.jsxs)(gy, {
                        children: [e.icon && (0, z.jsx)("img", {
                            src: e.icon,
                            className: bJ.icon
                        }), (0, z.jsx)("div", {
                            className: bJ.label,
                            children: (0, z.jsx)(i.TITLE, {
                                hash: e.name
                            })
                        })]
                    }),
                    theme: vJ,
                    nesting: n,
                    type: t,
                    children: e.children.filter((e => (s || e.shown) && !e.locked)).map(((e, t) => e.type === cg.Tutorial ? (0, z.jsx)(yJ, {
                        item: e,
                        showAll: s,
                        nesting: a,
                        localization: i
                    }, t) : (0, z.jsx)(IJ, {
                        item: e,
                        showAll: s,
                        nesting: a,
                        localization: i
                    }, t)))
                })
            },
            yJ = ({
                item: e,
                type: t = "Item",
                nesting: n = 1,
                showAll: s,
                localization: i
            }) => {
                const [a, o] = (0, Y.useState)(!1), r = Dm(), l = ll(Kh, e.entity), c = r && 1 === l?.phases.length, u = sl(Em), d = (0, Y.useMemo)((() => n + 1), [n]), m = (0, Y.useCallback)((() => {
                    l?.active ? qh(Lx) : Qh(e.entity, Lx, !0)
                }), [e.entity, l?.active]);
                return (0, z.jsx)(z.Fragment, {
                    children: l && SJ(l, u) ? (0, z.jsx)(hy, {
                        header: (0, z.jsxs)(gy, {
                            onFocusChange: o,
                            children: [(0, z.jsx)(Pf, {
                                action: "Select",
                                active: a && c,
                                className: bJ.hint
                            }), e.icon && (0, z.jsx)("img", {
                                src: e.icon,
                                className: bJ.icon
                            }), (0, z.jsx)("div", {
                                className: bJ.label,
                                children: (0, z.jsx)(i.TITLE, {
                                    hash: e.name
                                })
                            })]
                        }),
                        theme: vJ,
                        nesting: n,
                        type: t,
                        onSelect: l.phases.length > 1 ? void 0 : m,
                        children: l.phases.length > 1 ? l.phases.filter((e => s || e.shown)).map(((e, t) => (0, z.jsx)(jJ, {
                            tutorial: l,
                            phase: e,
                            nesting: d,
                            localization: i
                        }, t))) : void 0
                    }) : void 0
                })
            },
            jJ = ({
                tutorial: e,
                phase: t,
                nesting: n,
                localization: s
            }) => {
                const [i, a] = (0, Y.useState)(!1), o = (0, Y.useCallback)((() => {
                    t?.active ? qh(Lx) : Qh(e.entity, t.entity, !0)
                }), [e, t]), r = e.phases.findIndex((e => Ur(e.entity, t.entity))), l = e.phases.findIndex((e => e.trigger?.phaseBranching)), c = l >= 0 && r > l ? t.isBranch ? n + 1 : n + 2 : n;
                return (0, z.jsx)(hy, {
                    header: (0, z.jsxs)(gy, {
                        onFocusChange: a,
                        children: [(0, z.jsx)(Pf, {
                            action: "Select",
                            active: i,
                            className: bJ.hint
                        }), (0, z.jsx)("img", {
                            src: "Media/Game/Icons/TutorialPhase.svg",
                            className: bJ.icon
                        }), (0, z.jsx)("div", {
                            className: bJ.label,
                            children: (0, z.jsx)(s.TITLE, {
                                hash: t.name
                            })
                        })]
                    }),
                    theme: vJ,
                    nesting: c,
                    onSelect: o,
                    className: Zu()(t?.active && "selected")
                })
            },
            SJ = (e, t) => {
                switch (t) {
                case vm.gamepad:
                    return !e.filters?.includes("KeyboardAndMouse");
                case vm.keyboardAndMouse:
                    return !e.filters?.includes("Gamepad");
                default:
                    return !1
                }
            };
        X.add("game-ui/game/components/advisor-panel/advisor-panel.tsx", {
            get AdvisorPanel() {
                return TJ
            },
            set AdvisorPanel(e) {
                TJ = e
            }
        });
        let CJ = {
            button: "button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "toggle-states": "toggle-states_DTm",
            toggleStates: "toggle-states_DTm",
            icon: "icon_soN icon_Iwk",
            locked: "locked_H2O locked_dBl"
        };
        X.add("game-ui/game/themes/transparent-button.module.scss", {
            get classes() {
                return CJ
            },
            set classes(e) {
                Object.assign(CJ, e)
            }
        });
        const NJ = CJ,
            wJ = ["#DF2E3890", "#5D9C5990", "#0081C990"],
            OJ = ["#DF2E38", "#5D9C59", "#0081C9"];
        var PJ = (e, t = [], n) => {
            const s = t.length > 1 ? e : 1;
            return n ? OJ[s % OJ.length] : wJ[s % wJ.length]
        };
        X.add("game-ui/editor/widgets/fields/animation-curve-field/utils/animation-curve-colors.ts", {
            get getCurveColorForIndex() {
                return PJ
            },
            set getCurveColorForIndex(e) {
                PJ = e
            }
        });
        let LJ = {
            hiddenIcon: '"Media/PhotoMode/Dropdown.svg"',
            visibleIcon: '"Media/PhotoMode/Dropdown.svg"',
            "dropdown-toggle": "dropdown-toggle_oMB dropdown-toggle_prl",
            dropdownToggle: "dropdown-toggle_oMB dropdown-toggle_prl",
            indicator: "indicator_czv",
            "dropdown-menu": "dropdown-menu_m7l dropdown-menu_Swd",
            dropdownMenu: "dropdown-menu_m7l dropdown-menu_Swd",
            "dropdown-item": "dropdown-item_JVW undefined",
            dropdownItem: "dropdown-item_JVW undefined"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-dropdown.theme.module.scss", {
            get classes() {
                return LJ
            },
            set classes(e) {
                Object.assign(LJ, e)
            }
        });
        const AJ = LJ;
        let MJ = {
            "cinematic-camera-main-panel": "cinematic-camera-main-panel_jpU",
            cinematicCameraMainPanel: "cinematic-camera-main-panel_jpU",
            "curve-editor": "curve-editor_Ay4",
            curveEditor: "curve-editor_Ay4",
            "curve-editor-wrapper": "curve-editor-wrapper__lJ item-selected_tAM item-focused_FuT",
            curveEditorWrapper: "curve-editor-wrapper__lJ item-selected_tAM item-focused_FuT",
            timeline: "timeline_Zcy",
            title: "title_MaW",
            "curve-selector": "curve-selector_YdT",
            curveSelector: "curve-selector_YdT",
            "curve-controls": "curve-controls_AqW",
            curveControls: "curve-controls_AqW",
            toggle: "toggle_Mkg",
            "button-panel": "button-panel_UUV",
            buttonPanel: "button-panel_UUV",
            button: "button_R8g",
            "controls-group": "controls-group_nLN",
            controlsGroup: "controls-group_nLN",
            "controls-separator": "controls-separator_eet",
            controlsSeparator: "controls-separator_eet",
            icon: "icon__8f",
            label: "label_Heh",
            spacing: "spacing_l1z",
            bottom: "bottom__Hh",
            left: "left_gIb",
            right: "right_fUY",
            "dropdown-toggle": "dropdown-toggle_Fww item-states_QjV",
            dropdownToggle: "dropdown-toggle_Fww item-states_QjV",
            "property-legend": "property-legend_yOI",
            propertyLegend: "property-legend_yOI",
            "property-component": "property-component_Y36 item-states_QjV",
            propertyComponent: "property-component_Y36 item-states_QjV",
            "property-component-indicator": "property-component-indicator_TYv",
            propertyComponentIndicator: "property-component-indicator_TYv"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-main-panel.module.scss", {
            get classes() {
                return MJ
            },
            set classes(e) {
                Object.assign(MJ, e)
            }
        });
        const RJ = MJ;
        var kJ = ({
            groupedModifierData: e,
            onSelectProperty: t,
            activePropertyIndex: n
        }) => {
            const {
                selectActiveCurve: s,
                data: i
            } = _G(), {
                svg: a
            } = iU(), o = (0, Y.useRef)(n), r = (0, Y.useRef)(e.length), l = e[n];
            if ((0, Y.useEffect)((() => {
                    n !== o.current && (a?.viewport?.resetViewport(), s(0), o.current = n)
                }), [n, s, a]), (0, Y.useEffect)((() => {
                    r.current && r.current !== e.length && e.length > 0 && t(e.length - 1), r.current = e.length
                }), [e.length, t]), !i.curves.length || !l) return null;
            const c = !!l?.children;
            return (0, z.jsxs)("div", {
                className: RJ.curveSelector,
                children: [(0, z.jsx)(qI, {
                    theme: AJ,
                    content: e.map(((e, s) => {
                        const i = s === n;
                        return (0, z.jsx)(JI, {
                            focusKey: s,
                            value: s,
                            selected: i,
                            onChange: () => t(s),
                            children: (0, z.jsx)(Pc.PhotoMode.PROPERTY_TITLE, {
                                hash: e.id
                            })
                        }, s)
                    })),
                    children: (0, z.jsx)(XI, {
                        className: RJ.dropdownToggle,
                        children: (0, z.jsx)(Pc.PhotoMode.PROPERTY_TITLE, {
                            hash: l.id
                        })
                    })
                }), c && (0, z.jsx)("div", {
                    className: RJ.propertyLegend,
                    children: l.children?.map(((e, t) => (0, z.jsx)(DJ, {
                        index: t,
                        onSelect: s,
                        id: e.id,
                        color: PJ(t, i.curves, !0)
                    }, e.id)))
                })]
            })
        };
        const DJ = ({
            index: e,
            onSelect: t,
            id: n,
            color: s
        }) => {
            const i = (0, Y.useCallback)((() => t(e)), [e, t]),
                a = (0, Y.useMemo)((() => n.endsWith("/r") ? "Red" : n.endsWith("/g") ? "Green" : n.endsWith("/b") ? "Blue" : n.endsWith("/a") ? "Alpha" : n), [n]);
            return (0, z.jsxs)(Gp, {
                className: RJ.propertyComponent,
                onSelect: i,
                children: [(0, z.jsx)("div", {
                    className: RJ.propertyComponentIndicator,
                    style: {
                        backgroundColor: s
                    }
                }), (0, z.jsx)(Pc.PhotoMode.PROPERTY_TITLE, {
                    hash: a
                })]
            })
        };
        X.add("game-ui/game/components/cinematic-camera/components/curve-selector.tsx", {
            get CurveSelector() {
                return kJ
            },
            set CurveSelector(e) {
                kJ = e
            }
        });
        let FJ = {
            button: "button_Ytr item-states_QjV",
            active: "active_Arq",
            inactive: "inactive_Kj2",
            hint: "hint_rNg"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-icon-button-theme.module.scss", {
            get classes() {
                return FJ
            },
            set classes(e) {
                Object.assign(FJ, e)
            }
        });
        const UJ = FJ,
            BJ = () => "",
            GJ = {
                top: 50,
                left: 10,
                right: 10,
                bottom: 10
            },
            VJ = new Eg("CINEMATIC CURVE CONTROLS"),
            HJ = new Eg("CINEMATIC CURVE EDITOR");
        var KJ = ({
            label: e,
            modifierData: t,
            canAddKeyframes: n,
            tutorialTag: s
        }) => {
            const i = sl(Hy),
                [a, o] = (0, Y.useState)(0),
                [r, l] = (0, Y.useState)(0),
                c = sl(Ml),
                u = t.grouped[r],
                d = (0, Y.useMemo)((() => u ? u.children ? u.children.map((e => e.curve)) : [u.curve] : []), [u]),
                m = `${r}-${a}`,
                h = aV(d, {
                    minX: 0,
                    maxX: i,
                    minY: isFinite(u?.min) && u?.min !== u?.max ? u.min : void 0,
                    maxY: isFinite(u?.max) && u?.min !== u?.max ? u.max : void 0,
                    wrapMode: "clamp",
                    hash: m
                }),
                g = bj(e, a),
                p = (0, Y.useCallback)(((e, t) => {
                    let n = t.time;
                    return n = Math.max(0, n), n = Math.min(i, n), {
                        ...t,
                        time: n
                    }
                }), [i]),
                [f, x] = (0, Y.useState)(VJ),
                v = (0, Y.useMemo)((() => ({
                    "Move Vertical": () => {
                        x((e => e === VJ ? HJ : VJ))
                    }
                })), []),
                _ = (0, Y.useCallback)((async () => {
                    const e = await oj();
                    return {
                        x: e[0],
                        y: e[1]
                    }
                }), []),
                b = (0, Y.useCallback)((async () => {
                    const e = await lj();
                    return {
                        x: e[0],
                        y: e[1]
                    }
                }), []),
                T = (0, Y.useCallback)((async () => {
                    const e = await rj();
                    return {
                        x: e,
                        y: e
                    }
                }), []),
                E = Dm();
            return (0, z.jsx)(wx, {
                uiTag: s,
                children: (0, z.jsx)(Ip, {
                    className: RJ.curveEditorWrapper,
                    children: (0, z.jsx)(Np, {
                        children: (0, z.jsx)(Ag, {
                            actions: v,
                            children: (0, z.jsx)(ap, {
                                focused: f,
                                children: (0, z.jsx)(sU, {
                                    children: (0, z.jsxs)(vG, {
                                        data: h,
                                        parseKeyframe: p,
                                        canAddKeyframes: n,
                                        onSetActiveCurve: e => {
                                            o(u.index + e)
                                        },
                                        ...g,
                                        children: [(0, z.jsxs)(tp, {
                                            direction: Rg.Horizontal,
                                            focusKey: VJ,
                                            children: [(d.length > 0 || "Position" === e) && (0, z.jsx)(WJ, {
                                                label: e,
                                                property: u ? u.id : ""
                                            }), (0, z.jsx)(kJ, {
                                                activePropertyIndex: r,
                                                onSelectProperty: e => {
                                                    o(t.grouped[e].index), l(e)
                                                },
                                                groupedModifierData: t.grouped
                                            })]
                                        }), (0, z.jsx)(LG, {
                                            zoomable: "y",
                                            panable: "y",
                                            showTooltipOnDrag: !0,
                                            className: RJ.curveEditor,
                                            padding: GJ,
                                            formatLabelX: BJ,
                                            textScale: c,
                                            keyframeMoveCallback: E ? _ : void 0,
                                            panCallback: E ? b : void 0,
                                            zoomCallback: E ? T : void 0,
                                            OnFocusChange: cj,
                                            focusKey: HJ
                                        })]
                                    })
                                })
                            })
                        })
                    })
                })
            })
        };
        const WJ = ({
            label: e,
            property: t
        }) => {
            const {
                activeKeyframe: n,
                activeCurve: s,
                removeKeyframe: i
            } = _G(), a = (0, Y.useCallback)((() => {
                i(n, s)
            }), [i, n, s]), o = (0, Y.useCallback)((() => {
                ej(e, t)
            }), [e, t]);
            return (0, z.jsx)("div", {
                className: RJ.curveControls,
                children: (0, z.jsx)(wx, {
                    uiTag: kx.value?.cinematicCameraPanelCaptureKey,
                    children: n < 0 ? (0, z.jsx)(Tg, {
                        tooltip: (0, z.jsx)(Pc.CinematicCamera.CAPTURE, {}),
                        children: (0, z.jsx)(sf, {
                            src: "Media/PhotoMode/AddKeyframe.svg",
                            onSelect: o,
                            theme: UJ
                        })
                    }) : (0, z.jsx)(Tg, {
                        tooltip: (0, z.jsx)(Pc.CinematicCamera.DELETE_KEY, {}),
                        children: (0, z.jsx)(sf, {
                            src: "Media/PhotoMode/DeleteKeyframe.svg",
                            onSelect: a,
                            theme: UJ
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-curve-editor.tsx", {
            get CinematicCameraCurveEditor() {
                return KJ
            },
            set CinematicCameraCurveEditor(e) {
                KJ = e
            }
        });
        let zJ = {
            "curve-timeline-editor": "curve-timeline-editor_pYg",
            curveTimelineEditor: "curve-timeline-editor_pYg",
            wrapper: "wrapper_aL2 item-selected_tAM item-focused_FuT"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-curve-timeline.module.scss", {
            get classes() {
                return zJ
            },
            set classes(e) {
                Object.assign(zJ, e)
            }
        });
        const YJ = zJ,
            $J = {
                left: 0,
                right: 0,
                top: 0,
                bottom: 15
            },
            qJ = e => (0, z.jsx)(gG, {
                keyframe: e,
                hide: "value"
            }),
            XJ = ({
                data: e
            }, t, n) => (0, z.jsx)("g", {
                children: (0, z.jsx)(IG, {
                    origin: "center",
                    x: e.time,
                    y: -1.8,
                    fill: "#eee",
                    width: 10,
                    height: 17,
                    onSelect: t,
                    collisionThreshold: 12,
                    children: (0, z.jsx)(IG, {
                        x: e.time,
                        y: -.525,
                        origin: "center",
                        fill: "#eee",
                        width: 7.8,
                        height: 7.8,
                        transform: "rotate(45)"
                    })
                })
            });
        var QJ = () => {
            const e = sl(Ky),
                t = sl(Hy),
                n = (0, Y.useRef)(!1),
                [s, i] = (0, Y.useState)(),
                a = sl(Ml),
                {
                    parseKeyframe: o,
                    emptyString: r,
                    labelFormatter: l,
                    goToPoint: c
                } = (0, Y.useMemo)((() => ({
                    parseKeyframe: (e, n) => ({
                        ...n,
                        value: 0,
                        time: Math.min(Math.max(n.time, 0), t || 1)
                    }),
                    emptyString: () => "",
                    labelFormatter: e => Math.round(10 * e) / 10 + "s",
                    goToPoint: ({
                        point: e
                    }) => {
                        Qy(e.x)
                    }
                })), [t]),
                u = (0, Y.useCallback)((() => {
                    n.current = !0;
                    const e = () => {
                        n.current = !1, i(void 0), window.removeEventListener("mouseup", e)
                    };
                    window.addEventListener("mouseup", e)
                }), []),
                d = (0, Y.useCallback)((({
                    point: e
                }) => {
                    if (n.current) {
                        const n = Math.max(0, Math.min(e.x, t));
                        Qy(n), i({
                            time: n
                        })
                    }
                }), [t]),
                m = (0, Y.useMemo)((() => ({
                    bounds: {
                        min: {
                            x: 0,
                            y: -1
                        },
                        max: {
                            x: t || 1,
                            y: 1
                        }
                    },
                    curves: [{
                        keys: [{
                            time: e,
                            value: 0,
                            inTangent: 1 / 0,
                            outTangent: 1 / 0,
                            inWeight: .33,
                            outWeight: .33,
                            weightedMode: mG.Both
                        }],
                        postWrapMode: hG.Default,
                        preWrapMode: hG.Default
                    }]
                })), [t, e]),
                h = (0, Y.useMemo)((() => ({
                    "Move Horizontal": n => {
                        const s = Od(e + n * (t / 30), 0, t);
                        Qy(s)
                    }
                })), [t, e]);
            return (0, z.jsx)(Ip, {
                className: YJ.wrapper,
                children: (0, z.jsx)(Np, {
                    children: (0, z.jsx)(Ag, {
                        actions: h,
                        children: (0, z.jsx)(vG, {
                            data: m,
                            parseKeyframe: o,
                            keyframeRenderer: XJ,
                            children: (0, z.jsx)(LG, {
                                formatLabelX: l,
                                formatLabelY: r,
                                className: YJ.curveTimelineEditor,
                                padding: $J,
                                gridLines: !1,
                                onClick: c,
                                showTooltipOnDrag: !0,
                                tooltipKeyframe: s,
                                formatTooltip: qJ,
                                onMouseDown: u,
                                onWindowMouseMove: d,
                                textScale: a,
                                children: (0, z.jsx)(YB, {
                                    drawAxes: "x"
                                })
                            })
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-curve-timeline.tsx", {
            get CinematicCameraCurveTimeline() {
                return QJ
            },
            set CinematicCameraCurveTimeline(e) {
                QJ = e
            }
        });
        let ZJ = {
            "cinematic-camera-slider": "cinematic-camera-slider_yuq",
            cinematicCameraSlider: "cinematic-camera-slider_yuq",
            "slider-container": "slider-container_GDX",
            sliderContainer: "slider-container_GDX",
            value: "value_uvb"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-slider.module.scss", {
            get classes() {
                return ZJ
            },
            set classes(e) {
                Object.assign(ZJ, e)
            }
        });
        const JJ = ZJ;
        var e0 = ({
            focusKey: e,
            value: t,
            start: n,
            end: s,
            className: i,
            onChange: a,
            onDragEnd: o
        }) => (0, z.jsx)(Tg, {
            tooltip: (0, z.jsx)(Pc.CinematicCamera.SEGMENT_DURATION, {}),
            children: (0, z.jsxs)(Ep, {
                className: Zu()(JJ.cinematicCameraSlider, i),
                children: [(0, z.jsx)("div", {
                    className: JJ.sliderContainer,
                    children: (0, z.jsx)(Np, {
                        children: (0, z.jsx)(CM, {
                            focusKey: e,
                            value: t,
                            start: n,
                            end: s,
                            onChange: a,
                            onDragEnd: o
                        })
                    })
                }), (0, z.jsxs)("div", {
                    className: JJ.value,
                    children: [t.toFixed(1), "s"]
                })]
            })
        });
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-slider.tsx", {
            get CinematicCameraSlider() {
                return e0
            },
            set CinematicCameraSlider(e) {
                e0 = e
            }
        });
        var t0 = () => {
            const e = sl($y) ? "Pause" : "Play";
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)(wx, {
                    uiTag: kx.value?.cinematicCameraPanelPlay,
                    children: (0, z.jsx)(sf, {
                        src: `Media/PhotoMode/${e}.svg`,
                        theme: UJ,
                        onSelect: Jy
                    })
                }), (0, z.jsx)(wx, {
                    uiTag: kx.value?.cinematicCameraPanelStop,
                    children: (0, z.jsx)(sf, {
                        src: "Media/PhotoMode/Stop.svg",
                        theme: UJ,
                        onSelect: Zy
                    })
                })]
            })
        };
        X.add("game-ui/game/components/cinematic-camera/components/cinematic-camera-playback-controls.tsx", {
            get CinematicCameraPlaybackControls() {
                return t0
            },
            set CinematicCameraPlaybackControls(e) {
                t0 = e
            }
        });
        const n0 = /^(Position|Rotation|(\w|\.)+\/)/,
            s0 = e => {
                const t = sl(e);
                return (0, Y.useMemo)((() => {
                    const e = {},
                        n = [],
                        s = Array.isArray(t) ? t.reduce(((t, s, i) => {
                            const a = s.id ? s.id.match(n0)?. [1] : null;
                            let o;
                            if (a) {
                                let n = e[a];
                                e[a] || (n = {
                                    ...s,
                                    index: i,
                                    children: [],
                                    id: a.replace("/", "")
                                }, e[a] = n, t.push(e[a])), o = {
                                    ...s,
                                    index: i,
                                    groupIndex: t.length - 1,
                                    curveIndex: n.children.length
                                }, n.children.push(o)
                            } else o = {
                                ...s,
                                index: i,
                                curveIndex: 0
                            }, t.push(o);
                            return n.push(o), t
                        }), []) : [];
                    return {
                        grouped: s,
                        flat: n
                    }
                }), [t])
            };
        var i0 = ({
            toggleSaveLoadPopupVisibility: e
        }) => {
            const t = sl(Hy),
                n = sl(zy),
                s = sl($y),
                [i, a] = (0, Y.useState)(!0),
                o = s0(vj),
                r = s0(_j);
            r$(s && i), (0, Y.useEffect)((() => () => {
                Zy(), KS()
            }), []);
            const l = (0, Y.useMemo)((() => ({
                Back: s ? () => {
                    Zy()
                } : null
            })), [s]);
            return (0, z.jsx)(Ag, {
                actions: l,
                children: (0, z.jsx)(tp, {
                    direction: Rg.Vertical,
                    children: (0, z.jsxs)("div", {
                        className: RJ.cinematicCameraMainPanel,
                        children: [(0, z.jsx)(tp, {
                            direction: Rg.Horizontal,
                            children: (0, z.jsxs)("div", {
                                className: RJ.buttonPanel,
                                children: [(0, z.jsxs)("div", {
                                    className: RJ.controlsGroup,
                                    children: [(0, z.jsx)(t0, {}), (0, z.jsx)("div", {
                                        className: RJ.controlsSeparator
                                    }), (0, z.jsx)(wx, {
                                        uiTag: kx.value?.cinematicCameraPanelSaveLoad,
                                        children: (0, z.jsx)(Tg, {
                                            tooltip: (0, z.jsx)(Pc.CinematicCamera.SAVE_LOAD_TOOLTIP, {}),
                                            children: (0, z.jsx)(sf, {
                                                src: "Media/Glyphs/Save.svg",
                                                onSelect: e,
                                                theme: UJ,
                                                tinted: !0
                                            })
                                        })
                                    }), (0, z.jsx)(wx, {
                                        uiTag: kx.value?.cinematicCameraPanelReset,
                                        children: (0, z.jsx)(Tg, {
                                            tooltip: (0, z.jsx)(Pc.CinematicCamera.RESET_TOOLTIP, {}),
                                            children: (0, z.jsx)(sf, {
                                                src: "Media/Glyphs/Trash.svg",
                                                onSelect: aj,
                                                theme: UJ,
                                                tinted: !0
                                            })
                                        })
                                    })]
                                }), (0, z.jsxs)("div", {
                                    className: RJ.controlsGroup,
                                    children: [(0, z.jsx)(wx, {
                                        uiTag: kx.value?.cinematicCameraPanelHideUI,
                                        children: (0, z.jsx)(Tg, {
                                            tooltip: (0, z.jsx)(Pc.CinematicCamera.HIDE_UI, {}),
                                            children: (0, z.jsx)(sf, {
                                                src: i ? "Media/PhotoMode/HideUIOn.svg" : "Media/PhotoMode/HideUIOff.svg",
                                                onSelect: () => a((e => !e)),
                                                theme: UJ,
                                                className: i ? UJ.active : UJ.inactive,
                                                tinted: !0
                                            })
                                        })
                                    }), (0, z.jsx)(Tg, {
                                        tooltip: (0, z.jsx)(Pc.CinematicCamera.LOOP, {}),
                                        children: (0, z.jsx)(sf, {
                                            src: n ? "Media/PhotoMode/LoopOn.svg" : "Media/PhotoMode/LoopOff.svg",
                                            onSelect: () => Yy(!n),
                                            theme: UJ,
                                            className: n ? UJ.active : UJ.inactive,
                                            tinted: !0
                                        })
                                    }), (0, z.jsx)(wx, {
                                        uiTag: kx.value?.cinematicCameraPanelPlaybackDurationSlider,
                                        children: (0, z.jsx)(e0, {
                                            label: (0, z.jsx)(Pc.CinematicCamera.PLAYBACK_DURATION, {}),
                                            value: t,
                                            start: 1,
                                            end: 120,
                                            onChange: qy,
                                            onDragEnd: Xy
                                        })
                                    })]
                                })]
                            })
                        }), (0, z.jsx)(KJ, {
                            label: "Position",
                            canAddKeyframes: !0,
                            modifierData: o,
                            tutorialTag: kx.value?.cinematicCameraPanelTransformCurves
                        }), (0, z.jsx)(KJ, {
                            label: "Property",
                            canAddKeyframes: !0,
                            modifierData: r,
                            tutorialTag: kx.value?.cinematicCameraPanelPropertyCurves
                        }), (0, z.jsx)(wx, {
                            uiTag: kx.value?.cinematicCameraPanelTimelineSlider,
                            children: (0, z.jsx)(QJ, {})
                        })]
                    })
                })
            })
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-main-panel.tsx", {
            get CinematicCameraMainPanel() {
                return i0
            },
            set CinematicCameraMainPanel(e) {
                i0 = e
            }
        });
        var a0 = {
                theme: zq,
                expanded: !1
            },
            o0 = Y.createContext(a0);
        X.add("game-ui/common/section/section-context.ts", {
            get defaultSectionContext() {
                return a0
            },
            set defaultSectionContext(e) {
                a0 = e
            },
            get SectionContext() {
                return o0
            },
            set SectionContext(e) {
                o0 = e
            }
        });
        let r0 = {
            section: "section_sop section_gUk",
            header: "header_l0j undefined",
            content: "content_flM content_owQ",
            locked: "locked_UXm",
            first: "first_l25",
            last: "last_ZNw",
            "title-bar": "title-bar_J7X title-bar_wU9",
            titleBar: "title-bar_J7X title-bar_wU9",
            title: "title_PYv title_bwV",
            "toggle-button": "toggle-button_UA2 toggle-button_sQk",
            toggleButton: "toggle-button_UA2 toggle-button_sQk"
        };
        X.add("game-ui/common/section/themes/panel-section.module.scss", {
            get classes() {
                return r0
            },
            set classes(e) {
                Object.assign(r0, e)
            }
        });
        const l0 = r0;
        var c0 = Y.forwardRef((function ({
            focusKey: e,
            header: t,
            tooltip: n,
            theme: s = l0,
            initialFocused: i,
            direction: a = Rg.Vertical,
            className: o,
            children: r,
            onFocusChange: l,
            onRefocus: c,
            ...u
        }, d) {
            const m = Yq(s),
                h = Y.Children.count(t) > 0,
                g = Y.Children.count(r) > 0,
                p = (0, Y.useMemo)((() => ({
                    theme: m,
                    expanded: g
                })), [g, m]);
            return (0, z.jsx)(Tg, {
                tooltip: n,
                children: (0, z.jsx)(Ip, {
                    ref: d,
                    focusKey: e,
                    className: Zu()(m.section, o),
                    onFocusChange: l,
                    ...u,
                    children: (0, z.jsx)(o0.Provider, {
                        value: p,
                        children: (0, z.jsxs)(tp, {
                            direction: a,
                            initialFocused: i,
                            onRefocus: c,
                            children: [h && (0, z.jsx)("div", {
                                className: Zu()(m.header, m.first),
                                children: t
                            }), (0, z.jsx)("div", {
                                className: Zu()(m.content, !h && m.first, m.last),
                                children: r
                            })]
                        })
                    })
                })
            })
        }));
        X.add("game-ui/common/section/section.tsx", {
            get Section() {
                return c0
            },
            set Section(e) {
                c0 = e
            }
        });
        let u0 = {
            "item-picker-section": "item-picker-section_y66",
            itemPickerSection: "item-picker-section_y66",
            "panel-content": "panel-content_vkN",
            panelContent: "panel-content_vkN",
            "button-row": "button-row_odR",
            buttonRow: "button-row_odR",
            input: "input_xwy item-states_QjV",
            "cloud-picker": "cloud-picker_mqV item-states_QjV",
            cloudPicker: "cloud-picker_mqV item-states_QjV",
            "cloud-picker-dropdown": "cloud-picker-dropdown_ibN",
            cloudPickerDropdown: "cloud-picker-dropdown_ibN"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-save-load-panel.module.scss", {
            get classes() {
                return u0
            },
            set classes(e) {
                Object.assign(u0, e)
            }
        });
        const d0 = u0;

        function m0({
            onClose: e
        }) {
            const t = sl(gj),
                n = sl(hj),
                [s, i] = (0, Y.useState)(function (e, t) {
                    if (!Vr(e)) {
                        const n = t.findIndex((t => t.guid === e));
                        return n >= 0 ? n : 0
                    }
                    return 0
                }(null !== n ? n.guid : null, t)),
                a = function (e) {
                    const t = (0, Y.useCallback)((t => {
                        const n = e[t],
                            s = $K(n.cloudTarget, n.isReadOnly) ?? "",
                            i = YK(n.cloudTarget);
                        return {
                            displayName: bc(n.name),
                            image: s ?? "",
                            tinted: i,
                            directory: !1,
                            favorite: !1,
                            badge: null
                        }
                    }), [e]);
                    return {
                        length: e.length,
                        get: t
                    }
                }(t),
                o = oc((0, z.jsx)(Pc.CinematicCamera.NEW_SEQUENCE_PLACEHOLDER, {})),
                [r, l] = (0, Y.useState)(t.length > s ? t[s].name : o),
                c = (0, Y.useContext)(sE),
                u = sl(pj),
                d = sl(fj),
                m = (0, Y.useCallback)((e => l(e.target.value)), []),
                h = (0, Y.useCallback)((() => {
                    s >= 0 && s < t.length && c.showDialog((0, z.jsx)(jI, {
                        title: (0, z.jsx)(Pc.Common.WARNING, {}),
                        message: (0, z.jsx)(Pc.CinematicCamera.UNSAVED_DISCLAIMER, {}),
                        onConfirm: () => dj(t[s].guid, t[s].cloudTarget)
                    }))
                }), [s, t, c]),
                g = (0, Y.useCallback)((() => {
                    s >= 0 && s < t.length && c.showDialog((0, z.jsx)(jI, {
                        title: (0, z.jsx)(Pc.Common.WARNING, {}),
                        message: (0, z.jsx)(Pc.CinematicCamera.DELETE_DISCLAIMER, {
                            NAME: t[s].name
                        }),
                        onConfirm: () => mj(t[s].guid, t[s].cloudTarget)
                    }))
                }), [s, t, c]),
                p = (0, Y.useCallback)((() => {
                    if (!Vr(r)) {
                        const e = t.find((e => !e.isReadOnly && e.cloudTarget === d && e.name === r));
                        e ? c.showDialog((0, z.jsx)(jI, {
                            title: (0, z.jsx)(Pc.Common.WARNING, {}),
                            message: (0, z.jsx)(Pc.CinematicCamera.OVERRIDE_DISCLAIMER, {
                                NAME: r
                            }),
                            onConfirm: () => uj(r, e.guid)
                        })) : uj(r, null)
                    }
                }), [r, t, c, d]),
                f = (0, Y.useCallback)((e => {
                    i(e), l(t[e].name)
                }), [t]),
                x = AX(),
                v = sl(Ek);
            return (0, z.jsx)(YT, {
                onClose: e,
                header: (0, z.jsx)(QT, {
                    children: (0, z.jsx)(Pc.CinematicCamera.SAVE_LOAD_TOOLTIP, {})
                }),
                contentClassName: d0.panelContent,
                allowFocusExit: !0,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)(h0, {
                        targets: u,
                        selectedTarget: d,
                        onSelectTarget: xj
                    }), (0, z.jsx)(c0, {
                        className: d0.itemPickerSection,
                        children: (0, z.jsx)(Np, {
                            children: (0, z.jsx)(tW, {
                                selectedIndex: s,
                                columnCount: 1,
                                data: a,
                                onSelect: f,
                                hasImages: !0
                            })
                        })
                    }), (0, z.jsx)(UE, {
                        value: r,
                        onChange: m,
                        className: Zu()(x.input, d0.input)
                    }), (0, z.jsxs)("div", {
                        className: d0.buttonRow,
                        children: [(0, z.jsx)(Tg, {
                            tooltip: v.reasonHash ? (0, z.jsx)(Pc.Common.SAVEABILITY_REASON, {
                                hash: v.reasonHash
                            }) : (0, z.jsx)(Pc.CinematicCamera.SAVE_TOOLTIP, {}),
                            children: (0, z.jsx)(sf, {
                                src: "Media/Glyphs/Save.svg",
                                onSelect: p,
                                disabled: !v.canSave || Vr(r),
                                tinted: !0,
                                theme: UJ
                            })
                        }), (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.CinematicCamera.LOAD_TOOLTIP, {}),
                            children: (0, z.jsx)(sf, {
                                src: "Media/Glyphs/School.svg",
                                disabled: s < 0 || s >= t.length,
                                onSelect: h,
                                tinted: !0,
                                theme: UJ
                            })
                        }), (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.CinematicCamera.DELETE_TOOLTIP, {}),
                            children: (0, z.jsx)(sf, {
                                src: "Media/Glyphs/Trash.svg",
                                disabled: s < 0 || s >= t.length || t[s].isReadOnly,
                                onSelect: g,
                                tinted: !0,
                                theme: UJ
                            })
                        })]
                    })]
                })
            })
        }

        function h0({
            targets: e,
            selectedTarget: t,
            onSelectTarget: n
        }) {
            return (0, z.jsxs)("div", {
                className: d0.cloudPicker,
                children: [(0, z.jsx)("div", {
                    children: (0, z.jsx)(Pc.Menu.CLOUD_TARGET_LABEL, {})
                }), (0, z.jsx)("div", {
                    className: d0.cloudPickerDropdown,
                    children: (0, z.jsx)(qI, {
                        content: e.map(((e, t) => (0, z.jsx)(JI, {
                            value: e,
                            onChange: n,
                            children: (0, z.jsx)(Pc.Menu.CLOUD_TARGET, {
                                hash: e
                            })
                        }, t))),
                        theme: xW,
                        children: (0, z.jsx)(XI, {
                            value: t,
                            children: (0, z.jsx)(Pc.Menu.CLOUD_TARGET, {
                                hash: t
                            })
                        })
                    })
                })]
            })
        }
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-save-load-panel.tsx", {
            get CinematicCameraSaveLoadPanel() {
                return m0
            },
            set CinematicCameraSaveLoadPanel(e) {
                m0 = e
            }
        });
        let g0 = {
            "cinematic-panel-layout": "cinematic-panel-layout_e2g",
            cinematicPanelLayout: "cinematic-panel-layout_e2g"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-panel.module.scss", {
            get classes() {
                return g0
            },
            set classes(e) {
                Object.assign(g0, e)
            }
        });
        const p0 = g0;
        let f0 = {
            base: "base_iGt",
            enter: "enter_F0S",
            "exit-active": "exit-active__9F",
            exitActive: "exit-active__9F",
            "enter-active": "enter-active_Dkv",
            enterActive: "enter-active_Dkv",
            exit: "exit_tDP",
            wrapper: "wrapper_bAS"
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-panel-transitions.module.scss", {
            get classes() {
                return f0
            },
            set classes(e) {
                Object.assign(f0, e)
            }
        });
        const x0 = f0;
        var v0 = ({
            isVisible: e,
            onClose: t
        }) => {
            og(kx.value?.cinematicCameraPanel);
            const [n, s] = (0, Y.useState)(!1);
            (0, Y.useEffect)((() => {
                e || s(!1)
            }), [e]);
            const i = (0, Y.useCallback)((() => s((e => !e))), []);
            return (0, z.jsxs)("div", {
                className: p0.cinematicPanelLayout,
                children: [(0, z.jsx)(ud, {
                    children: n && (0, z.jsx)(m0, {
                        onClose: i
                    }, "CinematicCameraSaveLoad")
                }), (0, z.jsx)(ud, {
                    children: e && (0, z.jsx)(wx, {
                        uiTag: kx.value?.cinematicCameraPanel,
                        children: (0, z.jsx)(YT, {
                            transitionSounds: cp,
                            onClose: t,
                            transition: x0,
                            allowFocusExit: !0,
                            children: (0, z.jsx)(i0, {
                                toggleSaveLoadPopupVisibility: i
                            })
                        }, "CinematicCameraPanel")
                    })
                })]
            }, "CinematicCameraLayout")
        };
        X.add("game-ui/game/components/cinematic-camera/cinematic-camera-panel.tsx", {
            get CinematicCameraPanel() {
                return v0
            },
            set CinematicCameraPanel(e) {
                v0 = e
            }
        });
        let _0 = {
            field: "field_Y9F undefined",
            label: "label_6SZ label_eX_"
        };
        X.add("game-ui/game/widgets/field/row-field.module.scss", {
            get classes() {
                return _0
            },
            set classes(e) {
                Object.assign(_0, e)
            }
        });
        const b0 = _0;
        var T0 = {
            ...Bp,
            hover: null,
            focus: null
        };

        function E0(e) {
            return (0, z.jsx)(I0, {
                ...e.props,
                children: e.props.value
            })
        }
        var I0 = ({
            theme: e = b0,
            disabled: t,
            className: n,
            children: s,
            onClick: i,
            onFocusChange: a
        }) => {
            const o = (0, Y.useCallback)((e => {
                !t && i && i(e)
            }), [t, i]);
            return (0, z.jsx)(Ip, {
                focusKey: t ? Ig : void 0,
                focusSound: rp.hoverItem,
                className: Zu()(e.field, t && "disabled", n),
                onClick: o,
                onFocusChange: a,
                children: (0, z.jsx)("div", {
                    children: s
                })
            })
        };
        X.add("game-ui/game/widgets/field/field.tsx", {
            get optionButtonSounds() {
                return T0
            },
            set optionButtonSounds(e) {
                T0 = e
            },
            get ValueField() {
                return E0
            },
            set ValueField(e) {
                E0 = e
            },
            get Field() {
                return I0
            },
            set Field(e) {
                I0 = e
            }
        });
        let y0 = {
            container: "container_eL2",
            dropdown: "dropdown_pJu item-states_QjV",
            hint: "hint_t2G"
        };
        X.add("game-ui/game/widgets/dropdown-field/dropdown-field.module.scss", {
            get classes() {
                return y0
            },
            set classes(e) {
                Object.assign(y0, e)
            }
        });
        const j0 = y0;

        function S0(e) {
            return (0, z.jsx)(N0, {
                items: e.props.enumMembers,
                value: e.props.value,
                ...e
            })
        }

        function C0(e) {
            return (0, z.jsx)(N0, {
                items: e.props.items,
                value: e.props.value,
                ...e
            })
        }

        function N0(e) {
            const t = e.items.findIndex((t => Kr(t.value, e.value))),
                n = -1 !== t ? e.items[t] : null,
                s = xA(SA, HA(e.parent, e.path)),
                [i, a] = (0, Y.useState)(!1),
                [o, r] = (0, Y.useState)(!1),
                [l, c] = (0, Y.useState)(t);
            return (0, z.jsxs)(I0, {
                ...e.props,
                onFocusChange: a,
                className: j0.container,
                children: [(0, z.jsx)(Pf, {
                    action: o ? "Back" : "Select",
                    active: !e.props.disabled && i,
                    className: j0.hint
                }), (0, z.jsx)(qI, {
                    focusKey: e.props.disabled ? Ig : yg,
                    initialFocused: t,
                    theme: Lq,
                    content: (0, z.jsx)(tp, {
                        onChange: c,
                        allowLooping: !0,
                        children: e.items.filter(((e, n) => !e.disabled && (0 !== n || 0 === t))).map(((t, a) => (0, z.jsxs)(JI, {
                            focusKey: a,
                            value: t.value,
                            selected: !!n && Kr(n.value, t.value),
                            onChange: s,
                            children: [(0, z.jsx)(Pf, {
                                action: "Select",
                                active: !e.props.disabled && l === a && i,
                                className: j0.hint
                            }), w0(t)]
                        }, a)))
                    }),
                    onToggle: r,
                    children: (0, z.jsx)(XI, {
                        disabled: e.props.disabled,
                        sounds: T0,
                        className: j0.dropdown,
                        children: w0(n)
                    })
                })]
            })
        }

        function w0(e) {
            return e ? (0, z.jsx)(gu, {
                value: e.displayName
            }) : null
        }
        X.add("game-ui/game/widgets/dropdown-field/dropdown-field.tsx", {
            get BoundEnumField() {
                return S0
            },
            set BoundEnumField(e) {
                S0 = e
            },
            get BoundDropdownField() {
                return C0
            },
            set BoundDropdownField(e) {
                C0 = e
            }
        });
        let O0 = {
            row: "row_l3P",
            input: "input_JvC",
            label: "label_eX_",
            checkbox: "checkbox_mm1",
            container: "container_ex5",
            hint: "hint_zmA"
        };
        X.add("game-ui/game/widgets/field/field.module.scss", {
            get classes() {
                return O0
            },
            set classes(e) {
                Object.assign(O0, e)
            }
        });
        const P0 = O0;
        var L0 = e => {
            const [t, n] = (0, Y.useState)(!1), s = xA(SA, HA(e.parent, e.path)), i = (0, Y.useCallback)((() => {
                n(!0)
            }), []), a = (0, Y.useCallback)((() => {
                n(!1)
            }), []), o = (0, Y.useMemo)((() => ({
                "Change Value": t ? t => {
                    if (t > 0) {
                        const t = e.props.max ? Math.min(e.props.value + e.props.step, e.props.max) : e.props.value + e.props.step;
                        s(t)
                    }
                    if (t < 0) {
                        const t = e.props.min ? Math.max(e.props.value - e.props.step, e.props.min) : e.props.value - e.props.step;
                        s(t)
                    }
                } : null
            })), [t, s, e.props.max, e.props.min, e.props.step, e.props.value]), [r, l] = (0, Y.useState)(!1);
            return (0, z.jsx)(Cp, {
                disabled: !t,
                children: (0, z.jsx)(Ag, {
                    actions: o,
                    children: (0, z.jsxs)("div", {
                        className: P0.container,
                        children: [(0, z.jsx)(Pf, {
                            action: t ? "Back" : "Select",
                            active: r,
                            className: P0.hint
                        }), (0, z.jsx)(Ep, {
                            className: `${P0.row} row-number-input`,
                            onFocusChange: l,
                            children: (0, z.jsx)(YG, {
                                focusKey: e.props.disabled ? Ig : yg,
                                value: e.props.value,
                                min: e.props.min,
                                max: e.props.max,
                                fractionDigits: e.props.fractionDigits,
                                disabled: e.props.disabled,
                                className: P0.input,
                                onFocus: i,
                                onBlur: a,
                                onChange: s
                            })
                        })]
                    })
                })
            })
        };
        X.add("game-ui/game/widgets/field/float-input-field.tsx", {
            get BoundFloatInputField() {
                return L0
            },
            set BoundFloatInputField(e) {
                L0 = e
            }
        });
        var A0 = e => {
            const [t, n] = (0, Y.useState)(!1), s = xA(SA, HA(e.parent, e.path)), i = (0, Y.useCallback)((() => {
                n(!0)
            }), []), a = (0, Y.useCallback)((() => {
                n(!1)
            }), []), o = (0, Y.useMemo)((() => ({
                "Change Value": t ? t => {
                    if (t > 0) {
                        const t = e.props.max ? Math.min(e.props.value + e.props.step, e.props.max) : e.props.value + e.props.step;
                        s(t)
                    }
                    if (t < 0) {
                        const t = e.props.min ? Math.max(e.props.value - e.props.step, e.props.min) : e.props.value - e.props.step;
                        s(t)
                    }
                } : null
            })), [t, s, e.props.max, e.props.min, e.props.step, e.props.value]), [r, l] = (0, Y.useState)(!1);
            return (0, z.jsx)(Cp, {
                disabled: !t,
                children: (0, z.jsx)(Ag, {
                    actions: o,
                    children: (0, z.jsxs)("div", {
                        className: P0.container,
                        children: [(0, z.jsx)(Pf, {
                            action: t ? "Back" : "Select",
                            active: r,
                            className: P0.hint
                        }), (0, z.jsx)(Ep, {
                            className: `${P0.row} row-number-input`,
                            onFocusChange: l,
                            children: (0, z.jsx)(cV, {
                                focusKey: e.props.disabled ? Ig : yg,
                                value: e.props.value,
                                min: e.props.min,
                                max: e.props.max,
                                disabled: e.props.disabled,
                                className: P0.input,
                                onFocus: i,
                                onBlur: a,
                                onChange: s
                            })
                        })]
                    })
                })
            })
        };
        X.add("game-ui/game/widgets/field/int-input-field.tsx", {
            get BoundIntInputField() {
                return A0
            },
            set BoundIntInputField(e) {
                A0 = e
            }
        });
        var M0 = Y.createContext({
            addAction: () => ({})
        });
        X.add("game-ui/game/widgets/widget-actions-context.tsx", {
            get WidgetActionsContext() {
                return M0
            },
            set WidgetActionsContext(e) {
                M0 = e
            }
        });
        let R0 = {
            "game-icon-button-group": "game-icon-button-group_RE4",
            gameIconButtonGroup: "game-icon-button-group_RE4",
            button: "button_C2v",
            hidden: "hidden_D1T"
        };
        X.add("game-ui/game/widgets/icon-button/icon-button.module.scss", {
            get classes() {
                return R0
            },
            set classes(e) {
                Object.assign(R0, e)
            }
        });
        const k0 = R0;
        var D0 = e => (0, z.jsx)(B0, {
                children: (0, z.jsx)(U0, {
                    ...e
                })
            }),
            F0 = ({
                parent: e,
                path: t,
                children: n
            }) => {
                const s = HA(e, t);
                return (0, z.jsx)(B0, {
                    children: n.map((({
                        path: e,
                        ...t
                    }) => (0, z.jsx)(U0, {
                        parent: s,
                        path: e,
                        ...t
                    }, e)))
                })
            };
        const U0 = ({
            parent: e,
            path: t,
            props: n
        }) => {
            const s = xA(jA, HA(e, t)),
                {
                    addAction: i
                } = (0, Y.useContext)(M0),
                a = sl(JS),
                o = Dm(),
                r = n.tooltip?.__Type === hc.String && "PhotoMode.CAPTURE_PROPERTY_TOOLTIP" === n.tooltip.id,
                l = n.tooltip?.__Type === hc.String && "PhotoMode.RESET_PROPERTY_TOOLTIP" === n.tooltip.id,
                c = o && (l || r);
            return (0, Y.useEffect)((() => {
                (r || l) && i({
                    [r ? "Capture Keyframe" : "Reset Property"]: !r || a ? s : null
                })
            }), [i, r, a, s, l]), (0, z.jsx)(wx, {
                uiTag: n.tutorialTag || void 0,
                children: (0, z.jsx)(Tg, {
                    tooltip: null != n.tooltip ? (0, z.jsx)(gu, {
                        value: n.tooltip
                    }) : null,
                    children: (0, z.jsx)(G0, {
                        src: n.icon,
                        selected: n.selected,
                        disabled: n.disabled,
                        focusKey: r || l ? Ig : void 0,
                        onSelect: s,
                        className: Zu()(c && k0.hidden)
                    })
                })
            })
        };
        var B0 = ({
                children: e
            }) => (0, z.jsx)("div", {
                className: k0.gameIconButtonGroup,
                children: e
            }),
            G0 = ({
                src: e,
                selected: t,
                disabled: n,
                focusKey: s = yg,
                className: i,
                onSelect: a
            }) => (0, z.jsx)(sf, {
                focusKey: s,
                tinted: !0,
                src: e,
                selected: t,
                disabled: n,
                theme: NJ,
                className: Zu()(k0.button, i),
                onSelect: a
            });
        X.add("game-ui/game/widgets/icon-button/icon-button.tsx", {
            get BoundIconButton() {
                return D0
            },
            set BoundIconButton(e) {
                D0 = e
            },
            get BoundIconButtonGroup() {
                return F0
            },
            set BoundIconButtonGroup(e) {
                F0 = e
            },
            get GameIconButtonGroup() {
                return B0
            },
            set GameIconButtonGroup(e) {
                B0 = e
            },
            get GameIconButton() {
                return G0
            },
            set GameIconButton(e) {
                G0 = e
            }
        });
        let V0 = {
            "toggle-field": "toggle-field_D6P",
            toggleField: "toggle-field_D6P",
            toggle: "toggle_CGE toggle_cca item-mouse-states_Fmi",
            hint: "hint_ef0",
            checkmark: "checkmark_y64 checkmark_NXV"
        };
        X.add("game-ui/game/widgets/toggle-field/toggle-field.module.scss", {
            get classes() {
                return V0
            },
            set classes(e) {
                Object.assign(V0, e)
            }
        });
        const H0 = V0;

        function K0(e) {
            const t = xA(SA, HA(e.parent, e.path)),
                n = (0, Y.useCallback)((() => {
                    t(!e.props.value)
                }), [t, e.props.value]),
                [s, i] = (0, Y.useState)(!1);
            return (0, z.jsx)(I0, {
                onFocusChange: i,
                ...e.props,
                onClick: n,
                children: (0, z.jsx)(wx, {
                    uiTag: e.props.tutorialTag || void 0,
                    active: !e.props.disabled,
                    children: (0, z.jsxs)("div", {
                        className: H0.toggleField,
                        children: [(0, z.jsx)(Pf, {
                            action: "Select",
                            active: s,
                            className: H0.hint
                        }), (0, z.jsx)(Tg, {
                            tooltip: e.props.tooltip && (0, z.jsx)(gu, {
                                value: e.props.tooltip
                            }),
                            children: (0, z.jsx)(ox, {
                                checked: e.props.value,
                                theme: H0,
                                onChange: t,
                                disabled: e.props.disabled
                            })
                        })]
                    })
                })
            })
        }
        X.add("game-ui/game/widgets/toggle-field/toggle-field.tsx", {
            get BoundToggleField() {
                return K0
            },
            set BoundToggleField(e) {
                K0 = e
            }
        });
        let W0 = {
            container: "container_X0Y item-focused_FuT",
            group: "group_exT",
            title: "title_Ymv",
            "group-title": "group-title_kBL",
            groupTitle: "group-title_kBL",
            children: "children_OGU",
            draggable: "draggable_ujB",
            "before-title-group": "before-title-group_QfP",
            beforeTitleGroup: "before-title-group_QfP",
            active: "active_J2S",
            tooltip: "tooltip_Cyv",
            "tooltip-content": "tooltip-content_DIt",
            tooltipContent: "tooltip-content_DIt",
            "tooltip-content-row": "tooltip-content-row_giV",
            tooltipContentRow: "tooltip-content-row_giV",
            "dummy-toggle": "dummy-toggle_QBX",
            dummyToggle: "dummy-toggle_QBX"
        };
        X.add("game-ui/game/components/photo-mode/widgets/photo-mode-container.module.scss", {
            get classes() {
                return W0
            },
            set classes(e) {
                Object.assign(W0, e)
            }
        });
        const z0 = W0;
        var Y0 = (0, Y.memo)((function ({
                parent: e,
                path: t,
                children: n,
                props: s
            }) {
                const [i, a] = (0, Y.useState)(!1), [o, r] = (0, Y.useState)({}), l = HA(e, t);
                let c = !1,
                    u = !1;
                const d = -1 !== n.findIndex((e => "PhotoMode.ENABLE_PROPERTY_TOOLTIP" === e.props?.tooltip?.id && "Game.UI.Widgets.ToggleField" === e.props.__Type && Number(e.path) < 2)),
                    [m, h] = n.reduce(((e, t) => {
                        const n = "Game.UI.Widgets.IconButton" === t.props.__Type && "PhotoMode.CAPTURE_PROPERTY_TOOLTIP" === t.props?.tooltip?.id,
                            s = "Game.UI.Widgets.ToggleField" === t.props.__Type && Number(t.path) < 2;
                        return n || s ? ("PhotoMode.ENABLE_PROPERTY_TOOLTIP" === t.props?.tooltip?.id && (c = !!t.props.value, u = t.props.disabled), e[0].find((e => "PhotoMode.CAPTURE_PROPERTY_TOOLTIP" === e.props?.tooltip?.id)) ? e[1].push(t) : e[0].push(t)) : e[1].push(t), e
                    }), [
                        [],
                        []
                    ]),
                    g = (0, Y.useCallback)((e => {
                        r((t => ({
                            ...t,
                            ...e
                        })))
                    }), []),
                    p = (0, z.jsx)(gu, {
                        value: s.displayName
                    }),
                    f = s.tooltip && (0, z.jsx)(gu, {
                        value: s.tooltip
                    }),
                    x = (0, Y.useMemo)((() => ({
                        addAction: g
                    })), [g]);
                return (0, z.jsx)(Ag, {
                    actions: c ? o : null,
                    children: (0, z.jsx)(Ip, {
                        onFocusChange: a,
                        focusKey: 0 === n.length || u ? Ig : void 0,
                        className: Zu()(z0.container, {
                            [z0.active]: c || !d,
                            [z0.group]: !h.length
                        }),
                        children: (0, z.jsx)("div", {
                            className: z0.children,
                            children: (0, z.jsx)(Tp, {
                                disabled: !i,
                                children: (0, z.jsx)(M0.Provider, {
                                    value: x,
                                    children: (0, z.jsxs)(tp, {
                                        direction: Rg.Both,
                                        children: [!!m.length && (0, z.jsxs)("div", {
                                            className: z0.beforeTitleGroup,
                                            children: [1 === m.length && "Game.UI.Widgets.IconButton" === m[0].props.__Type && (0, z.jsx)("div", {
                                                className: z0.dummyToggle
                                            }), (0, z.jsx)(ZA, {
                                                parent: l,
                                                components: s1,
                                                data: m
                                            })]
                                        }), (0, z.jsx)(kY, {
                                            alignment: "start",
                                            direction: "left",
                                            title: p,
                                            description: f,
                                            className: z0.tooltip,
                                            children: (0, z.jsx)("div", {
                                                className: Zu()(z0.title, {
                                                    [z0.groupTitle]: !h.length
                                                }, u && "disabled"),
                                                children: p
                                            })
                                        }), (0, z.jsx)(Tp, {
                                            disabled: d && !c,
                                            children: (0, z.jsx)(ZA, {
                                                parent: l,
                                                components: s1,
                                                data: h
                                            })
                                        })]
                                    })
                                })
                            })
                        })
                    })
                })
            }), ((e, t) => Kr(e, t, 20))),
            $0 = ({
                title: e,
                tooltip: t,
                tooltipPos: n = TA.Container,
                children: s
            }) => {
                let i = null;
                e && (i = n === TA.Title && t ? (0, z.jsx)(Tg, {
                    tooltip: t,
                    children: (0, z.jsx)("div", {
                        className: z0.title,
                        children: e
                    })
                }) : (0, z.jsx)("div", {
                    className: z0.title,
                    children: e
                }));
                const a = (0, z.jsx)(Ip, {
                    className: z0.container,
                    children: (0, z.jsx)(tp, {
                        children: (0, z.jsxs)("div", {
                            className: z0.children,
                            children: [i, s]
                        })
                    })
                });
                return t && n !== TA.Title ? (0, z.jsx)(Tg, {
                    tooltip: t,
                    children: a
                }) : a
            };
        X.add("game-ui/game/components/photo-mode/widgets/photo-mode-container.tsx", {
            get BoundPhotoModeContainer() {
                return Y0
            },
            set BoundPhotoModeContainer(e) {
                Y0 = e
            },
            get PhotoModeContainer() {
                return $0
            },
            set PhotoModeContainer(e) {
                $0 = e
            }
        });
        const q0 = 1e4,
            X0 = (e, t) => [isFinite(e) ? e : Math.sign(e) * q0, isFinite(t) ? t > e ? t : q0 : Math.sign(t) * q0],
            Q0 = (e, t) => Math.pow(Math.abs(e) / t, 3);

        function Z0(e) {
            const [t, n] = (0, Y.useMemo)((() => X0(e.props.min, e.props.max)), [e.props.min, e.props.max]), s = (0, Y.useCallback)(((e, s) => Od(e + (s < 0 ? t - e : n - e) * Q0(s, .1), t, n)), [t, n]);
            return (0, z.jsx)(e1, {
                ...e,
                dragTransformation: s
            })
        }

        function J0(e) {
            const [t, n] = (0, Y.useMemo)((() => X0(e.props.min, e.props.max)), [e.props.min, e.props.max]), s = (0, Y.useCallback)(((e, s) => Od(e + (s < 0 ? t - e : n - e) * Q0(s, .1), t, n)), [t, n]);
            return (0, z.jsx)(e1, {
                ...e,
                dragTransformation: s
            })
        }
        const e1 = ({
            parent: e,
            path: t,
            props: n,
            dragTransformation: s
        }) => {
            const i = xA(SA, HA(e, t)),
                a = (0, z.jsx)(KG, {
                    className: z0.draggable,
                    value: n.value,
                    disabled: n.disabled,
                    dragTransformation: s,
                    onChange: i
                }),
                o = (0, z.jsx)(gu, {
                    value: n.displayName
                }),
                r = n.tooltip && (0, z.jsx)(gu, {
                    value: n.tooltip
                }),
                l = (0, z.jsx)(t1, {
                    min: n.min,
                    max: n.max,
                    fractionDigits: 0
                });
            return o || r || l ? (0, z.jsx)(kY, {
                alignment: "start",
                direction: "left",
                title: o,
                description: r,
                content: l,
                className: z0.tooltip,
                children: a
            }) : a
        };

        function t1({
            min: e,
            max: t,
            fractionDigits: n
        }) {
            const s = isFinite(e),
                i = isFinite(t) && (t > e || !s);
            return s || i ? (0, z.jsxs)("div", {
                className: z0.tooltipContent,
                children: [s && (0, z.jsxs)("div", {
                    className: z0.tooltipContentRow,
                    children: [(0, z.jsx)("div", {
                        children: (0, z.jsx)(Pc.PhotoMode.PROPERTY_LIMIT_MIN, {})
                    }), (0, z.jsx)("div", {
                        children: e.toFixed(n)
                    })]
                }), i && (0, z.jsxs)("div", {
                    className: z0.tooltipContentRow,
                    children: [(0, z.jsx)("div", {
                        children: (0, z.jsx)(Pc.PhotoMode.PROPERTY_LIMIT_MAX, {})
                    }), (0, z.jsx)("div", {
                        children: t.toFixed(n)
                    })]
                })]
            }) : null
        }
        X.add("game-ui/game/components/photo-mode/widgets/photo-mode-draggable-slider.tsx", {
            get BoundIntDraggableSliderField() {
                return Z0
            },
            set BoundIntDraggableSliderField(e) {
                Z0 = e
            },
            get BoundFloatDraggableSliderField() {
                return J0
            },
            set BoundFloatDraggableSliderField(e) {
                J0 = e
            }
        });
        var n1 = ({
                displayName: e,
                parent: t,
                data: n
            }) => {
                const {
                    scrollTo: s
                } = (0, Y.useContext)(mp);
                return (0, Y.useEffect)((() => {
                    s(0, 0)
                }), [e, s]), (0, z.jsx)(ZA, {
                    parent: t,
                    components: s1,
                    data: n
                }, e)
            },
            s1 = {
                [_A.Group]: Y0,
                [_A.FloatSliderField]: J0,
                [_A.IntSliderField]: Z0,
                [_A.ToggleField]: K0,
                [_A.IconButton]: D0,
                [ZS.DropdownField]: C0,
                [_A.FloatInputField]: L0,
                [_A.IntInputField]: A0,
                [_A.EnumField]: S0,
                [_A.ColorField]: OQ
            };
        X.add("game-ui/game/components/photo-mode/photo-widget-renderer.tsx", {
            get PhotoWidgetListRenderer() {
                return n1
            },
            set PhotoWidgetListRenderer(e) {
                n1 = e
            },
            get photoModeWidgetComponents() {
                return s1
            },
            set photoModeWidgetComponents(e) {
                s1 = e
            }
        });
        let i1 = {
            label: "label_fnL",
            "photo-mode-panel": "photo-mode-panel_oo_",
            photoModePanel: "photo-mode-panel_oo_",
            "photo-mode-content": "photo-mode-content_LMM",
            photoModeContent: "photo-mode-content_LMM",
            "simulation-warning": "simulation-warning_t8O",
            simulationWarning: "simulation-warning_t8O",
            scrollable: "scrollable_eMn",
            "button-panel": "button-panel_dnD",
            buttonPanel: "button-panel_dnD",
            header: "header_TTs",
            "cinematic-camera-button": "cinematic-camera-button_ctq item-states_QjV",
            cinematicCameraButton: "cinematic-camera-button_ctq item-states_QjV",
            "expand-icon": "expand-icon_y2O",
            expandIcon: "expand-icon_y2O",
            "cinematic-camera-icon": "cinematic-camera-icon_thU",
            cinematicCameraIcon: "cinematic-camera-icon_thU",
            "tab-bar": "tab-bar_wDc",
            tabBar: "tab-bar_wDc",
            tabs: "tabs_asW",
            "tab-button": "tab-button_D0T",
            tabButton: "tab-button_D0T",
            icon: "icon_KWo",
            locked: "locked_y0b",
            "footer-button": "footer-button_TNQ",
            footerButton: "footer-button_TNQ",
            "footer-button-hint": "footer-button-hint_poK",
            footerButtonHint: "footer-button-hint_poK",
            hint: "hint_XyY"
        };
        X.add("game-ui/game/components/photo-mode/photo-mode-panel.module.scss", {
            get classes() {
                return i1
            },
            set classes(e) {
                Object.assign(i1, e)
            }
        });
        const a1 = i1;
        var o1 = ({
                onClose: e
            }) => {
                const t = sl(JS),
                    n = sl($y);
                lg(kx.value?.photoModePanel);
                const s = (0, Y.useCallback)((() => {
                        QS(!t)
                    }), [t]),
                    i = (0, Y.useCallback)((() => {
                        QS(!1)
                    }), []),
                    a = (0, Y.useCallback)((() => {
                        n ? Zy() : t ? i() : e()
                    }), [t, i, e, n]),
                    o = (0, Y.useMemo)((() => ({
                        [t ? "Photo Mode" : "Cinematic Mode"]: s
                    })), [t, s]);
                return (0, z.jsx)(Dg, {
                    onAction: a,
                    children: (0, z.jsx)(Ag, {
                        actions: o,
                        children: (0, z.jsxs)(tp, {
                            children: [(0, z.jsx)(v0, {
                                isVisible: t,
                                onClose: i
                            }), (0, z.jsx)(wx, {
                                uiTag: kx.value?.photoModePanel,
                                children: (0, z.jsx)(YT, {
                                    className: a1.photoModePanel,
                                    transitionSounds: cp,
                                    onClose: a,
                                    allowFocusExit: !0,
                                    header: (0, z.jsx)(l1, {
                                        toggleCinematicCameraPanel: s
                                    }),
                                    children: (0, z.jsx)(r1, {})
                                })
                            })]
                        })
                    })
                })
            },
            r1 = ({
                simulationWarning: e = !0
            }) => {
                const t = sl(sC),
                    n = VA(HS),
                    s = sl(eC),
                    i = sl(tC),
                    a = (0, Y.useCallback)((e => {
                        const t = s.findIndex((e => e.id === i));
                        if (t >= 0) {
                            const n = (t + e) % s.length;
                            XS(s[n < 0 ? n + s.length : n].id)
                        } else XS(s[s.length - 1].id)
                    }), [i, s]),
                    o = (0, Y.useMemo)((() => ({
                        "Switch Tab": a
                    })), [a]);
                return (0, Y.useEffect)((() => (zS(!0), () => {
                    KS(), zS(!1)
                })), []), (0, z.jsx)(Ag, {
                    actions: o,
                    children: (0, z.jsxs)(tp, {
                        children: [(0, z.jsx)(c1, {}), (0, z.jsxs)("div", {
                            className: a1.photoModeContent,
                            children: ["Environment" === i && e && (0, z.jsx)("div", {
                                className: a1.simulationWarning,
                                children: (0, z.jsx)(Pc.PhotoMode.ENVIRONMENT_DISCLAIMER, {})
                            }), (0, z.jsx)(ff, {
                                className: a1.scrollable,
                                children: null != t && (0, z.jsx)(n1, {
                                    displayName: i,
                                    parent: n,
                                    data: t
                                })
                            }), (0, z.jsx)(u1, {})]
                        })]
                    })
                })
            };
        const l1 = ({
                toggleCinematicCameraPanel: e
            }) => {
                const t = sl(JS),
                    n = t ? "ExpandRight" : "ExpandLeft";
                return (0, z.jsxs)("div", {
                    className: a1.header,
                    children: [(0, z.jsx)(wx, {
                        uiTag: kx.value?.photoModeCinematicCameraToggle,
                        children: (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.CinematicCamera.TITLE, {}),
                            children: (0, z.jsxs)(kI, {
                                focusKey: Ig,
                                theme: NJ,
                                onSelect: e,
                                className: a1.cinematicCameraButton,
                                children: [(0, z.jsx)(Pf, {
                                    action: t ? "Photo Mode" : "Cinematic Mode",
                                    className: a1.hint
                                }), (0, z.jsx)(ef, {
                                    src: `Media/PhotoMode/${n}.svg`,
                                    className: a1.expandIcon
                                }), (0, z.jsx)(ef, {
                                    src: "Media/Game/Icons/CinematicCamera.svg",
                                    className: a1.cinematicCameraIcon
                                })]
                            })
                        })
                    }), (0, z.jsx)(wx, {
                        uiTag: kx.value?.photoModePanelTitle,
                        children: (0, z.jsx)(QT, {
                            children: t ? (0, z.jsx)(Pc.CinematicCamera.TITLE, {}) : (0, z.jsx)(Pc.PhotoMode.TITLE, {})
                        })
                    })]
                })
            },
            c1 = () => {
                const e = sl(tC),
                    t = sl(eC),
                    n = (0, Y.useCallback)((e => XS(e)), []);
                return (0, z.jsx)("div", {
                    className: a1.header,
                    children: (0, z.jsx)(Tp, {
                        children: (0, z.jsx)("div", {
                            className: a1.tabBar,
                            children: (0, z.jsx)("div", {
                                className: a1.tabs,
                                children: (0, z.jsx)(I$, {
                                    children: t.map(((t, s) => (0, z.jsx)(d1, {
                                        id: t.id,
                                        icon: t.icon,
                                        tooltip: (0, z.jsx)(Pc.PhotoMode.TAB, {
                                            hash: t.id
                                        }),
                                        selected: t.id === e,
                                        onSelect: n,
                                        tutorialTag: 0 === s ? kx.value?.photoModeTab : void 0
                                    }, s)))
                                })
                            })
                        })
                    })
                })
            },
            u1 = () => {
                const e = sl(YS),
                    t = sl(qO),
                    n = (0, Y.useCallback)((() => {
                        t ? AY(CY.freeCamera) : Pb(Nb.freeCamera)
                    }), [t]);
                return (0, z.jsx)("div", {
                    className: a1.buttonPanel,
                    children: (0, z.jsxs)(tp, {
                        direction: Rg.Horizontal,
                        children: [(0, z.jsx)(m1, {
                            tutorialTag: kx.value?.photoModePanelTakePicture,
                            tooltip: (0, z.jsx)(Pc.PhotoMode.TAKE_PHOTO, {}),
                            icon: "Media/PhotoMode/TakePicture.svg",
                            onSelect: qS,
                            selectSound: rp.takePhoto
                        }), (0, z.jsx)(m1, {
                            tutorialTag: kx.value?.photoModePanelHideUI,
                            tooltip: (0, z.jsx)(Pc.PhotoMode.HIDE_UI, {}),
                            icon: "Media/PhotoMode/HideUIOn.svg",
                            onSelect: n
                        }), (0, z.jsx)(m1, {
                            tooltip: (0, z.jsx)(Pc.PhotoMode.TOGGLE_ORBIT_MODE, {}),
                            icon: "Media/Game/Icons/Orbit.svg",
                            selected: e,
                            onSelect: $S
                        })]
                    })
                })
            },
            d1 = ({
                id: e,
                icon: t,
                tooltip: n,
                selected: s,
                disabled: i,
                className: a,
                onSelect: o,
                tutorialTag: r
            }) => {
                const l = (0, Y.useCallback)((() => o(e)), [e, o]),
                    c = (0, Y.useMemo)((() => "PhotoModeTab+" + e), [e]);
                return (0, z.jsx)(wx, {
                    uiTag: r,
                    children: (0, z.jsx)(wx, {
                        uiTag: c,
                        children: (0, z.jsx)(Tg, {
                            tooltip: n,
                            children: (0, z.jsx)(sf, {
                                src: t,
                                disabled: i,
                                selected: s,
                                className: Zu()(a, a1.tabButton),
                                onSelect: l
                            })
                        })
                    })
                })
            },
            m1 = ({
                icon: e,
                tooltip: t,
                selected: n,
                tutorialTag: s,
                selectSound: i,
                hint: a = "Select",
                onSelect: o
            }) => {
                const [r, l] = (0, Y.useState)(!1);
                return (0, z.jsx)(wx, {
                    uiTag: s,
                    children: (0, z.jsx)(Tg, {
                        tooltip: t,
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: l,
                            children: (0, z.jsx)(sf, {
                                disableHint: !0,
                                tinted: !0,
                                theme: NJ,
                                src: e,
                                selected: n,
                                onSelect: o,
                                selectSound: i,
                                className: a1.footerButton,
                                children: (0, z.jsx)(Pf, {
                                    action: a,
                                    active: r,
                                    className: a1.footerButtonHint
                                })
                            })
                        })
                    })
                })
            };
        X.add("game-ui/game/components/photo-mode/photo-mode-panel.tsx", {
            get PhotoModePanel() {
                return o1
            },
            set PhotoModePanel(e) {
                o1 = e
            },
            get PhotoModePanelContent() {
                return r1
            },
            set PhotoModePanelContent(e) {
                r1 = e
            }
        });
        let h1 = {
            "resize-container": "resize-container_AAw",
            resizeContainer: "resize-container_AAw",
            "drag-handle": "drag-handle_enz",
            dragHandle: "drag-handle_enz",
            left: "left_jHP",
            right: "right_fxN",
            "resize-cursor": "resize-cursor_YOy",
            resizeCursor: "resize-cursor_YOy"
        };
        X.add("game-ui/editor/components/resize-container/resize-container.module.scss", {
            get classes() {
                return h1
            },
            set classes(e) {
                Object.assign(h1, e)
            }
        });
        const g1 = h1;
        var p1 = ({
            width: e,
            minWidth: t,
            maxWidth: n,
            direction: s,
            className: i,
            children: a,
            onResize: o
        }) => {
            const r = "left" === s ? -1 : 1,
                [l, c] = (0, Y.useState)(0),
                u = (0, Y.useCallback)((e => c(e)), []),
                d = (0, Y.useCallback)((() => c(0)), []),
                m = (0, Y.useCallback)((s => {
                    o(Od(e + r * s, t, n)), c(0)
                }), [o, e, r, t, n]);
            return (0, z.jsxs)("div", {
                className: Zu()(g1.resizeContainer, i),
                style: {
                    width: Od(e + r * l, t, n)
                },
                children: [a, "none" !== s && (0, z.jsx)(f1, {
                    className: g1[s],
                    onChange: u,
                    onDragStart: d,
                    onDragEnd: m
                })]
            })
        };
        const f1 = ({
            className: e,
            onChange: t,
            onDragStart: n,
            onDragEnd: s
        }) => {
            const i = (0, Y.useRef)(null),
                a = (0, Y.useCallback)((({
                    clientX: e
                }) => (document.activeElement instanceof HTMLElement && document.activeElement.blur(), i.current = e, n(), !0)), [n]),
                o = (0, Y.useCallback)((({
                    clientX: e
                }) => {
                    null != i.current && (s(e - i.current), i.current = null)
                }), [s]),
                r = (0, Y.useCallback)((({
                    clientX: e
                }) => {
                    null != i.current && t(e - i.current)
                }), [t]),
                [l, c] = uf(a, r, o);
            return ev(l ? g1.resizeCursor : void 0), (0, z.jsx)("div", {
                className: Zu()(g1.dragHandle, l && "dragging", e),
                onMouseDown: c
            })
        };
        X.add("game-ui/editor/components/resize-container/resize-container.tsx", {
            get ResizeContainer() {
                return p1
            },
            set ResizeContainer(e) {
                p1 = e
            }
        });
        let x1 = {
            minWidth: "250rem",
            maxWidth: "800rem",
            container: "container_bUn",
            panel: "panel_R8J",
            content: "content_Mxn"
        };
        X.add("game-ui/editor/components/editor-panel/editor-panel.module.scss", {
            get classes() {
                return x1
            },
            set classes(e) {
                Object.assign(x1, e)
            }
        });
        const v1 = x1;
        var _1 = Y.forwardRef((function ({
            active: e,
            resizeDirection: t,
            className: n,
            displayFooter: s,
            focusKey: i
        }, a) {
            const [o, r] = (0, Y.useState)(!0), l = Vm(v1.minWidth), c = Vm(v1.maxWidth), u = sl(nD), d = Hm(), m = (0, Y.useCallback)((e => {
                aD(Math.round(e / d))
            }), [d]), h = sl(tD), g = sl(iD), p = sl(DZ), f = (0, Y.useCallback)((e => {}), []), x = s ? (0, z.jsx)("div", {
                ref: a
            }) : void 0;
            return (0, z.jsx)(p1, {
                width: u * d,
                minWidth: l,
                maxWidth: c,
                direction: o ? t : "none",
                className: n,
                onResize: m,
                children: (0, z.jsxs)("div", {
                    className: v1.container,
                    children: [!p && (0, z.jsx)(TJ, {
                        focusKey: Ig,
                        expanded: !0,
                        onToggle: f,
                        onClose: hg,
                        theme: fJ,
                        localization: Pc.EditorTutorials
                    }), e && (0, z.jsx)(hJ, {
                        expanded: o,
                        headerText: null != h && (0, z.jsx)(gu, {
                            value: h
                        }),
                        footer: x,
                        theme: fJ,
                        className: v1.panel,
                        contentClassName: v1.content,
                        onToggleExpanded: r,
                        onClose: rD,
                        focusKey: i,
                        children: (0, z.jsx)(Dg, {
                            onAction: oD,
                            children: (0, z.jsx)(tp, {
                                children: g === Zk.Editor ? (0, z.jsx)(b1, {}) : (0, z.jsx)(T1, {})
                            })
                        })
                    })]
                })
            })
        }));
        const b1 = () => {
                const e = sl(sD),
                    t = VA(Jk);
                return (0, z.jsx)(fz, {
                    parent: t,
                    data: e
                })
            },
            T1 = () => (0, z.jsx)(r1, {
                simulationWarning: !1
            });

        function E1(e) {
            const [t, n] = (0, Y.useState)(Fb.value?.__Type === e);
            (0, Y.useEffect)((() => {
                const t = Fb.subscribe((t => {
                    n(Gu(t, e))
                }));
                return () => {
                    t.dispose()
                }
            }), [e]);
            const s = (0, Y.useCallback)((() => Gb(e)), [e]);
            return (0, Y.useMemo)((() => ({
                visible: t,
                toggle: s
            })), [t, s])
        }

        function I1(e, t) {
            const n = Gu(t, e),
                s = (0, Y.useCallback)((() => Gb(e)), [e]);
            return (0, Y.useMemo)((() => ({
                visible: n,
                toggle: s
            })), [n, s])
        }
        X.add("game-ui/editor/components/editor-panel/editor-panel.tsx", {
            get EditorPanel() {
                return _1
            },
            set EditorPanel(e) {
                _1 = e
            }
        }), X.add("game-ui/common/hooks/use-game-panel-state.tsx", {
            get useGamePanelState() {
                return E1
            },
            set useGamePanelState(e) {
                E1 = e
            },
            get useGamePanelStateControlled() {
                return I1
            },
            set useGamePanelStateControlled(e) {
                I1 = e
            }
        });
        let y1 = {
            "infomode-item": "infomode-item_K8b item-focused_FuT item-mouse-states_Fmi",
            infomodeItem: "infomode-item_K8b item-focused_FuT item-mouse-states_Fmi",
            checkbox: "checkbox_JWP",
            header: "header_dAd",
            title: "title_tX0",
            "title-text": "title-text_uCA",
            titleText: "title-text_uCA",
            color: "color_Q5Z",
            legend: "legend_K3N",
            "color-legend": "color-legend_PQU legend_K3N",
            colorLegend: "color-legend_PQU legend_K3N",
            "color-legend-item": "color-legend-item__ty",
            colorLegendItem: "color-legend-item__ty",
            label: "label_oSR",
            gradient: "gradient_HaQ",
            type: "type_puL",
            "active-opacity": "active-opacity_cfv",
            activeOpacity: "active-opacity_cfv",
            active: "active_m64",
            hint: "hint_R8p",
            "hint-icon": "hint-icon_Smd",
            hintIcon: "hint-icon_Smd"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/infomode-item/infomode-item.module.scss", {
            get classes() {
                return y1
            },
            set classes(e) {
                Object.assign(y1, e)
            }
        });
        const j1 = y1,
            S1 = {
                icon: j1.hintIcon,
                hint: j1.hint
            };
        var C1 = ({
            focusKey: e,
            infomode: t
        }) => {
            const [n, s] = (0, Y.useState)(!1), {
                id: i,
                active: a
            } = t, o = (0, Y.useCallback)((() => {
                lv(t.entity, !t.active, t.priority)
            }), [t.entity, t.active, t.priority]);
            return (0, z.jsx)(Tg, {
                direction: "right",
                tooltip: (0, z.jsx)(zf, {
                    children: (0, z.jsx)(Pc.Infoviews.INFOMODE_TOOLTIP, {
                        hash: i
                    })
                }),
                children: (0, z.jsx)(Ah, {
                    onFocusChange: s,
                    children: (0, z.jsxs)(Gp, {
                        disableHint: !0,
                        focusKey: e,
                        onSelect: o,
                        theme: NJ,
                        selectSound: rp.toggleInfoMode,
                        selectAction: a ? "Disable Info Mode" : "Enable Info Mode",
                        className: Zu()(j1.infomodeItem, a && j1.active),
                        children: [(0, z.jsxs)("div", {
                            className: j1.header,
                            children: [(0, z.jsxs)("div", {
                                className: Zu()(j1.title, j1.activeOpacity),
                                children: [t.color && (0, z.jsx)(jR, {
                                    color: WC(t.color),
                                    className: j1.color
                                }), (0, z.jsx)("div", {
                                    className: j1.titleText,
                                    children: (0, z.jsx)(Pc.Infoviews.INFOMODE, {
                                        hash: i
                                    })
                                })]
                            }), (0, z.jsxs)("div", {
                                className: j1.type,
                                children: [(0, z.jsx)("div", {
                                    className: Zu()(j1.activeOpacity),
                                    children: (0, z.jsx)(Pc.Infoviews.INFOMODE_TYPE, {
                                        hash: t.type
                                    })
                                }), (0, z.jsx)(Pf, {
                                    action: a ? "Disable Info Mode" : "Enable Info Mode",
                                    active: n,
                                    theme: S1
                                }), (0, z.jsx)(ox, {
                                    checked: a,
                                    focusKey: Ig,
                                    className: Zu()(j1.checkbox, j1.activeOpacity)
                                })]
                            })]
                        }), t.gradientLegend && (0, z.jsx)(N1, {
                            ...t.gradientLegend
                        }), t.colorLegends.length > 0 && (0, z.jsx)("div", {
                            className: j1.colorLegend,
                            children: t.colorLegends.map(((e, t) => (0, z.jsx)(yR, {
                                color: WC(e.color),
                                label: (0, z.jsx)(gu, {
                                    value: e.label
                                }),
                                className: j1.colorLegendItem
                            }, t)))
                        })]
                    })
                })
            })
        };
        const N1 = ({
            lowLabel: e,
            highLabel: t,
            gradient: n
        }) => (0, z.jsxs)("div", {
            className: Zu()(j1.legend, j1.activeOpacity),
            children: [e && (0, z.jsx)("div", {
                className: j1.label,
                children: (0, z.jsx)(gu, {
                    value: e
                })
            }), (0, z.jsx)("div", {
                className: j1.gradient,
                style: {
                    backgroundImage: eN(n)
                }
            }), t && (0, z.jsx)("div", {
                className: j1.label,
                children: (0, z.jsx)(gu, {
                    value: t
                })
            })]
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/infomode-item/infomode-item.tsx", {
            get InfomodeItem() {
                return C1
            },
            set InfomodeItem(e) {
                C1 = e
            }
        });
        let w1 = {
            "small-space": "small-space_DCq",
            smallSpace: "small-space_DCq",
            space: "space_uKL"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/infoview-panel-space.module.scss", {
            get classes() {
                return w1
            },
            set classes(e) {
                Object.assign(w1, e)
            }
        });
        const O1 = w1;
        var P1 = ({
            small: e = !1
        }) => (0, z.jsx)("div", {
            className: e ? O1.smallSpace : O1.space
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/infoview-panel-space.tsx", {
            get InfoviewPanelSpace() {
                return P1
            },
            set InfoviewPanelSpace(e) {
                P1 = e
            }
        });
        let L1 = {
            labels: "labels_L7Q",
            row: "row_S2v",
            "left-icon": "left-icon_fKY",
            leftIcon: "left-icon_fKY",
            left: "left_Lgw",
            uppercase: "uppercase_RJI",
            right: "right_k3O",
            centered: "centered_j4I",
            small: "small_ExK",
            label: "label_NuH",
            tiny: "tiny_m9B",
            "icon-label": "icon-label_J_h",
            iconLabel: "icon-label_J_h",
            icon: "icon_W7O"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/labels/labels.module.scss", {
            get classes() {
                return L1
            },
            set classes(e) {
                Object.assign(L1, e)
            }
        });
        const A1 = L1;
        var M1 = ({
                icon: e,
                text: t,
                rightText: n,
                uppercase: s = !1,
                centered: i = !1,
                small: a = !1,
                tiny: o = !1
            }) => (0, z.jsxs)("div", {
                className: Zu()(A1.labels, A1.row, s && A1.uppercase, i && A1.centered, a && A1.small, o && A1.tiny),
                children: [e && (0, z.jsx)("img", {
                    src: e,
                    className: A1.leftIcon
                }), t && (0, z.jsx)("div", {
                    className: Zu()(A1.left, A1.row),
                    children: t
                }), n && (0, z.jsx)("div", {
                    className: Zu()(A1.right, A1.row),
                    children: n
                })]
            }),
            R1 = ({
                icon: e,
                label: t
            }) => (0, z.jsxs)("div", {
                className: A1.iconLabel,
                children: [(0, z.jsx)(ef, {
                    src: e,
                    className: A1.icon
                }), (0, z.jsx)("div", {
                    className: A1.label,
                    children: t
                })]
            });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/labels/labels.tsx", {
            get InfoviewPanelLabel() {
                return M1
            },
            set InfoviewPanelLabel(e) {
                M1 = e
            },
            get InfoviewPanelIconLabel() {
                return R1
            },
            set InfoviewPanelIconLabel(e) {
                R1 = e
            }
        });
        var k1 = {
                stops: [{
                    color: "#0331fc",
                    offset: 0
                }, {
                    color: "#0331fc",
                    offset: .333
                }, {
                    color: "#fcba03",
                    offset: .333
                }, {
                    color: "#fcba03",
                    offset: .666
                }, {
                    color: "#a15800",
                    offset: .666
                }, {
                    color: "#a15800",
                    offset: 1
                }]
            },
            D1 = {
                stops: [{
                    color: "#479436",
                    offset: 0
                }, {
                    color: "#63B506",
                    offset: .66
                }, {
                    color: "#FF831B",
                    offset: .33
                }, {
                    color: "#FF4E18",
                    offset: 1
                }]
            },
            F1 = {
                stops: [{
                    color: "#FF4E18",
                    offset: 0
                }, {
                    color: "#FF831B",
                    offset: .33
                }, {
                    color: "#63B506",
                    offset: .66
                }, {
                    color: "#479436",
                    offset: 1
                }]
            },
            U1 = {
                stops: [{
                    color: "#FF4E18",
                    offset: 0
                }, {
                    color: "#FF4E18",
                    offset: .9
                }, {
                    color: "#479436",
                    offset: 1
                }]
            },
            B1 = {
                stops: [{
                    color: "#e8f6e5",
                    offset: 0
                }, {
                    color: "#479436",
                    offset: 1
                }]
            },
            G1 = {
                stops: [{
                    color: "#FF4E18",
                    offset: 0
                }, {
                    color: "#FF4E18",
                    offset: .4
                }, {
                    color: "#FF831B",
                    offset: .4
                }, {
                    color: "#FF831B",
                    offset: .5
                }, {
                    color: "#63B506",
                    offset: .5
                }, {
                    color: "#63B506",
                    offset: .6
                }, {
                    color: "#479436",
                    offset: .6
                }, {
                    color: "#479436",
                    offset: 1
                }]
            },
            V1 = {
                stops: [{
                    color: "#FF4E18",
                    offset: 0
                }, {
                    color: "#FF4E18",
                    offset: .8
                }, {
                    color: "#FF831B",
                    offset: .8
                }, {
                    color: "#FF831B",
                    offset: .9
                }, {
                    color: "#63B506",
                    offset: .9
                }, {
                    color: "#63B506",
                    offset: 1
                }]
            };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/infoview-panels-util.tsx", {
            get pollutionGradient() {
                return k1
            },
            set pollutionGradient(e) {
                k1 = e
            },
            get malusGradient() {
                return D1
            },
            set malusGradient(e) {
                D1 = e
            },
            get bonusGradient() {
                return F1
            },
            set bonusGradient(e) {
                F1 = e
            },
            get transmissionGradient() {
                return U1
            },
            set transmissionGradient(e) {
                U1 = e
            },
            get greenGradient() {
                return B1
            },
            set greenGradient(e) {
                B1 = e
            },
            get availabilityGradient() {
                return G1
            },
            set availabilityGradient(e) {
                G1 = e
            },
            get exportGradient() {
                return V1
            },
            set exportGradient(e) {
                V1 = e
            }
        });
        let H1 = {
            bar: "bar_nW3",
            gradient: "gradient_P8C",
            overlay: "overlay_UV7",
            diagonalMask: "diagonalMask_osp",
            pointer: "pointer_SV2",
            pointerIcon: "pointerIcon_i8i"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/bars/bars.module.scss", {
            get classes() {
                return H1
            },
            set classes(e) {
                Object.assign(H1, e)
            }
        });
        const K1 = H1;
        var W1 = ({
                value: e,
                gradient: t = G1
            }) => (0, z.jsxs)("div", {
                className: K1.bar,
                children: [(0, z.jsx)("div", {
                    className: Zu()(K1.gradient),
                    style: {
                        backgroundImage: eN(t)
                    }
                }), (0, z.jsx)("div", {
                    className: K1.pointer,
                    style: Y1(e),
                    children: (0, z.jsx)("img", {
                        src: "Media/Misc/IndicatorBarPointer.svg",
                        className: K1.pointerIcon
                    })
                })]
            }),
            z1 = ({
                gradient: e,
                value: t
            }) => {
                const n = (0, Y.useMemo)((() => {
                    const e = t.max - t.min;
                    return {
                        left: `${(t.current-t.min)/e*100||0}%`
                    }
                }), [t]);
                return (0, z.jsxs)("div", {
                    className: K1.bar,
                    children: [(0, z.jsx)("div", {
                        className: K1.gradient,
                        style: {
                            backgroundImage: eN(e)
                        }
                    }), (0, z.jsx)("div", {
                        className: K1.pointer,
                        style: n,
                        children: (0, z.jsx)("img", {
                            src: "Media/Misc/IndicatorBarPointer.svg",
                            className: K1.pointerIcon
                        })
                    })]
                })
            };

        function Y1(e) {
            return (0, Y.useMemo)((() => {
                const t = e.max - e.min;
                return {
                    left: `${(e.current-e.min)/t*100||0}%`
                }
            }), [e])
        }
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/bars/bars.tsx", {
            get AvailabilityBar() {
                return W1
            },
            set AvailabilityBar(e) {
                W1 = e
            },
            get ValueBar() {
                return z1
            },
            set ValueBar(e) {
                z1 = e
            }
        });
        let $1 = {
            "infoview-panel-section": "infoview-panel-section_RXJ",
            infoviewPanelSection: "infoview-panel-section_RXJ",
            content: "content_1xS",
            "focusable-border": "focusable-border_rVm",
            focusableBorder: "focusable-border_rVm",
            focusable: "focusable_GEc item-focused_FuT"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/sections/infoview-panel-section.module.scss", {
            get classes() {
                return $1
            },
            set classes(e) {
                Object.assign($1, e)
            }
        });
        const q1 = $1;
        var X1 = ({
            disableFocus: e = !1,
            tooltip: t,
            focusableBorder: n,
            children: s
        }) => {
            const i = Y.Children.count(t) > 0;
            return (0, z.jsx)(Tg, {
                tooltip: i ? (0, z.jsx)(zf, {
                    children: t
                }) : void 0,
                direction: "right",
                children: (0, z.jsx)("div", {
                    className: q1.infoviewPanelSection,
                    children: e ? (0, z.jsx)("div", {
                        className: q1.content,
                        children: s
                    }) : (0, z.jsx)(Ip, {
                        className: Zu()(q1.content, n ? q1.focusableBorder : q1.focusable),
                        children: s
                    })
                })
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/sections/infoview-panel-section.tsx", {
            get InfoviewPanelSection() {
                return X1
            },
            set InfoviewPanelSection(e) {
                X1 = e
            }
        });
        var Q1 = ({
            title: e,
            value: t,
            gradient: n,
            tooltip: s,
            children: i
        }) => (0, z.jsxs)(X1, {
            tooltip: s,
            children: [e, (0, z.jsx)(z1, {
                gradient: n,
                value: t
            }), i]
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/sections/value-bar-section.tsx", {
            get ValueBarSection() {
                return Q1
            },
            set ValueBarSection(e) {
                Q1 = e
            }
        });
        var Z1 = () => {
            const e = sl(p_);
            return (0, z.jsx)(Q1, {
                title: (0, z.jsx)(M1, {
                    uppercase: !0,
                    text: (0, z.jsx)(Pc.AirPollutionInfoPanel.AVERAGE_AIR_POLLUTION, {}),
                    rightText: (0, z.jsx)($u, {
                        value: e.current,
                        max: e.max
                    })
                }),
                tooltip: (0, z.jsx)(Pc.Infoviews.AVERAGE_AIR_POLLUTION_TOOLTIP, {}),
                value: e,
                gradient: k1
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/air-pollution-infoview-panel.tsx", {
            get AirPollutionInfoviewPanel() {
                return Z1
            },
            set AirPollutionInfoviewPanel(e) {
                Z1 = e
            }
        });
        var J1 = () => (0, z.jsxs)(z.Fragment, {
            children: [(0, z.jsx)(e2, {}), (0, z.jsx)(t2, {}), (0, z.jsx)(n2, {})]
        });
        const e2 = () => {
                const e = sl(sb);
                return (0, z.jsx)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.CompanyInfoPanel.COMMERCIAL_PROFITABILITY, {}),
                        rightText: (0, z.jsx)($u, {
                            value: e.current,
                            max: e.max
                        })
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.AVERAGE_COMMERCIAL_PROFIT_TOOLTIP, {}),
                    value: e,
                    gradient: F1
                })
            },
            t2 = () => {
                const e = sl(ib);
                return (0, z.jsx)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.CompanyInfoPanel.INDUSTRIAL_PROFITABILITY, {}),
                        rightText: (0, z.jsx)($u, {
                            value: e.current,
                            max: e.max
                        })
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.AVERAGE_INDUSTRIAL_PROFIT_TOOLTIP, {}),
                    value: e,
                    gradient: F1
                })
            },
            n2 = () => {
                const e = sl(ab);
                return (0, z.jsx)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.CompanyInfoPanel.OFFICE_PROFITABILITY, {}),
                        rightText: (0, z.jsx)($u, {
                            value: e.current,
                            max: e.max
                        })
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.AVERAGE_OFFICE_PROFIT_TOOLTIP, {}),
                    value: e,
                    gradient: F1
                })
            };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/company-infoview-panel.tsx", {
            get CompanyInfoviewPanel() {
                return J1
            },
            set CompanyInfoviewPanel(e) {
                J1 = e
            }
        });
        var s2 = () => {
            const e = sl(B_),
                t = sl(F_),
                n = sl(U_);
            return (0, z.jsxs)(Q1, {
                title: (0, z.jsx)(M1, {
                    uppercase: !0,
                    text: (0, z.jsx)(Pc.DisasterInfoPanel.SHELTER_AVAILABILITY, {}),
                    rightText: (0, z.jsx)($u, {
                        value: e.current,
                        max: e.max
                    })
                }),
                tooltip: (0, z.jsx)(Pc.Infoviews.SHELTER_AVAILABILITY_TOOLTIP, {}),
                value: e,
                gradient: F1,
                children: [(0, z.jsx)(P1, {
                    small: !0
                }), (0, z.jsx)(M1, {
                    small: !0,
                    text: (0, z.jsx)(Pc.DisasterInfoPanel.EVACUATED, {}),
                    rightText: t
                }), (0, z.jsx)(M1, {
                    small: !0,
                    text: (0, z.jsx)(Pc.DisasterInfoPanel.CAPACITY, {}),
                    rightText: n
                })]
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/disaster-infoview-panel.tsx", {
            get DisasterInfoviewPanel() {
                return s2
            },
            set DisasterInfoviewPanel(e) {
                s2 = e
            }
        });
        let i2 = {
            "bar-chart": "bar-chart_tZ6",
            barChart: "bar-chart_tZ6",
            bar: "bar_z48",
            fill: "fill_sr0",
            empty: "empty_HP3"
        };
        X.add("game-ui/common/charts/bar-chart/bar-chart.module.scss", {
            get classes() {
                return i2
            },
            set classes(e) {
                Object.assign(i2, e)
            }
        });
        const a2 = i2;
        var o2 = ({
            colors: e,
            data: t,
            className: n
        }) => (0, z.jsx)("div", {
            className: Zu()(a2.barChart, n),
            children: (0, z.jsxs)("div", {
                className: a2.bar,
                children: [0 === t.values.filter((e => e > 0)).length && (0, z.jsx)("div", {
                    className: a2.empty
                }), t.values.map(((n, s) => (0, z.jsx)("div", {
                    style: {
                        backgroundColor: e[s],
                        width: r2(n, t.total) + "%"
                    },
                    className: a2.fill
                }, s)))]
            })
        });

        function r2(e, t) {
            return t > 0 ? 100 * Od(e / t, 0, 1) : 0
        }
        X.add("game-ui/common/charts/bar-chart/bar-chart.tsx", {
            get BarChart() {
                return o2
            },
            set BarChart(e) {
                o2 = e
            }
        });
        let l2 = {
            "info-bar-chart": "info-bar-chart_fj2",
            infoBarChart: "info-bar-chart_fj2",
            content: "content_I1q",
            bar: "bar_yR2",
            legends: "legends_jy_",
            legend: "legend_efO",
            empty: "empty_LPh"
        };
        X.add("game-ui/common/charts/bar-chart/info-bar-chart.module.scss", {
            get classes() {
                return l2
            },
            set classes(e) {
                Object.assign(l2, e)
            }
        });
        const c2 = l2;
        var u2 = ({
            title: e,
            colors: t,
            labels: n,
            data: s,
            ignoreZero: i = !1,
            usePercentageValue: a = !1,
            customLegend: o,
            className: r
        }) => {
            const l = a && s.total > 0 ? 100 / s.total : 1;
            return (0, z.jsxs)("div", {
                className: Zu()(c2.infoBarChart, r),
                children: [e && (0, z.jsx)(Ey, {
                    uppercase: !0,
                    left: e
                }), (0, z.jsxs)("div", {
                    className: c2.content,
                    children: [(0, z.jsx)("div", {
                        className: c2.bar,
                        children: (0, z.jsx)(o2, {
                            data: s,
                            colors: t
                        })
                    }), (0, z.jsx)("div", {
                        className: c2.legends,
                        children: o || s.values.filter((e => !i || e > 0)).map(((e, s) => (0, z.jsxs)("div", {
                            className: c2.legend,
                            children: [(0, z.jsx)(yR, {
                                color: t[s],
                                label: n[s]
                            }), (0, z.jsx)(Gc, {
                                value: e * l,
                                unit: a ? Oc.PercentageSingleFraction : Oc.Integer
                            })]
                        }, s)))
                    })]
                })]
            })
        };
        X.add("game-ui/common/charts/bar-chart/info-bar-chart.tsx", {
            get InfoBarChart() {
                return u2
            },
            set InfoBarChart(e) {
                u2 = e
            }
        });
        var d2 = ["#808080", "#b09868", "#368a2e", "#b981c0", "#5796d1"],
            m2 = [(0, z.jsx)(Pc.EducationInfoPanel.LEVEL, {
                hash: "Uneducated"
            }), (0, z.jsx)(Pc.EducationInfoPanel.LEVEL, {
                hash: "Poorly Educated"
            }), (0, z.jsx)(Pc.EducationInfoPanel.LEVEL, {
                hash: "Educated"
            }), (0, z.jsx)(Pc.EducationInfoPanel.LEVEL, {
                hash: "Well Educated"
            }), (0, z.jsx)(Pc.EducationInfoPanel.LEVEL, {
                hash: "Highly Educated"
            })];
        X.add("game-ui/common/charts/pie-chart/education-pie-chart.tsx", {
            get educationPieChartColors() {
                return d2
            },
            set educationPieChartColors(e) {
                d2 = e
            },
            get educationPieChartLabels() {
                return m2
            },
            set educationPieChartLabels(e) {
                m2 = e
            }
        });
        var h2 = ({
            title: e,
            supplyLabel: t,
            demandLabel: n,
            supplyValue: s,
            demandValue: i,
            availability: a,
            gradient: o,
            tooltip: r,
            children: l
        }) => (0, z.jsxs)(X1, {
            tooltip: r,
            children: [e, (0, z.jsx)(W1, {
                value: a,
                gradient: o
            }), (0, z.jsx)(M1, {
                tiny: !0,
                text: (0, z.jsx)(Pc.Infoviews.LABEL_VALUE_FORMAT, {
                    LABEL: n,
                    VALUE: i
                }),
                rightText: (0, z.jsx)(Pc.Infoviews.LABEL_VALUE_FORMAT, {
                    LABEL: t,
                    VALUE: s
                })
            }), (0, z.jsx)(P1, {
                small: !0
            }), l]
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/components/sections/availability-bar-section.tsx", {
            get AvailabilityBarSection() {
                return h2
            },
            set AvailabilityBarSection(e) {
                h2 = e
            }
        });
        var g2 = () => {
            const e = sl(Dv),
                t = sl(Fv),
                n = sl(Uv),
                s = sl(Bv),
                i = sl(Nv),
                a = sl(wv),
                o = sl(Ov),
                r = sl(Pv),
                l = sl(Lv),
                c = sl(Av),
                u = sl(Mv),
                d = sl(Rv),
                m = sl(Gv),
                h = sl(Vv),
                g = sl(Hv),
                p = sl(Kv),
                f = sl(kv);
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)(p2, {
                    localeKey: "Elementary",
                    availability: m,
                    eligible: i,
                    capacity: l,
                    students: e,
                    tooltip: (0, z.jsx)(Pc.Infoviews.ELEMENTARY_SCHOOL_AVAILABILITY_TOOLTIP, {})
                }), (0, z.jsx)(p2, {
                    localeKey: "High School",
                    availability: h,
                    eligible: a,
                    capacity: c,
                    students: t,
                    tooltip: (0, z.jsx)(Pc.Infoviews.HIGH_SCHOOL_AVAILABILITY_TOOLTIP, {})
                }), (0, z.jsx)(p2, {
                    localeKey: "College",
                    availability: g,
                    eligible: o,
                    capacity: u,
                    students: n,
                    tooltip: (0, z.jsx)(Pc.Infoviews.COLLEGE_AVAILABILITY_TOOLTIP, {})
                }), (0, z.jsx)(p2, {
                    localeKey: "University",
                    availability: p,
                    eligible: r,
                    capacity: d,
                    students: s,
                    tooltip: (0, z.jsx)(Pc.Infoviews.UNIVERSITY_AVAILABILITY_TOOLTIP, {})
                }), (0, z.jsxs)(X1, {
                    tooltip: (0, z.jsx)(Pc.Infoviews.EDUCATION_DISTRIBUTION_TOOLTIP, {}),
                    children: [(0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.EducationInfoPanel.EDUCATION_DISTRIBUTION, {})
                    }), (0, z.jsx)(u2, {
                        usePercentageValue: !0,
                        colors: d2,
                        labels: m2,
                        data: f
                    })]
                })]
            })
        };
        const p2 = ({
            localeKey: e,
            availability: t,
            eligible: n,
            capacity: s,
            students: i,
            tooltip: a
        }) => (0, z.jsx)(z.Fragment, {
            children: (0, z.jsx)(h2, {
                title: (0, z.jsx)(M1, {
                    uppercase: !0,
                    text: (0, z.jsx)(Pc.EducationInfoPanel.EDUCATION_LEVEL, {
                        hash: e
                    }),
                    rightText: (0, z.jsx)(R1, {
                        icon: "Media/Game/Icons/Citizen.svg",
                        label: (0, z.jsx)(Gc, {
                            value: i,
                            unit: Oc.Integer
                        })
                    })
                }),
                demandLabel: (0, z.jsx)(Pc.EducationInfoPanel.ELIGIBLE, {}),
                demandValue: (0, z.jsx)(Gc, {
                    value: n,
                    unit: Oc.Integer
                }),
                supplyLabel: (0, z.jsx)(Pc.InfoPanels.CAPACITY, {}),
                supplyValue: (0, z.jsx)(Gc, {
                    value: s,
                    unit: Oc.Integer
                }),
                availability: t,
                tooltip: a
            })
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/education-infoview-panel.tsx", {
            get EducationInfoviewPanel() {
                return g2
            },
            set EducationInfoviewPanel(e) {
                g2 = e
            }
        });
        var f2 = () => {
            const e = sl(cv),
                t = sl(uv),
                n = sl(mv),
                s = sl(hv),
                i = sl(gv),
                a = sl(fv),
                o = sl(xv);
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.ElectricityInfoPanel.ELECTRICITY_AVAILABILITY, {})
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.ELECTRICITY_AVAILABILITY_TOOLTIP, {}),
                    availability: i,
                    supplyLabel: (0, z.jsx)(Pc.InfoPanels.PRODUCTION, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: t,
                        unit: Oc.Power
                    }),
                    demandLabel: (0, z.jsx)(Pc.InfoPanels.CONSUMPTION, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: e,
                        unit: Oc.Power
                    })
                }), (0, z.jsx)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.ElectricityInfoPanel.ELECTRICITY_TRADE, {})
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.ELECTRICITY_TRADE_TOOLTIP, {}),
                    availability: a,
                    supplyLabel: (0, z.jsx)(Pc.ElectricityInfoPanel.ELECTRICITY_EXPORT, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: n,
                        unit: Oc.Power
                    }),
                    demandLabel: (0, z.jsx)(Pc.ElectricityInfoPanel.ELECTRICITY_IMPORT, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.Power
                    })
                }), (0, z.jsx)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.ElectricityInfoPanel.BATTERY_CHARGE, {}),
                        rightText: (0, z.jsx)(cu, {
                            value: o.current,
                            total: o.max,
                            unit: Oc.Energy
                        })
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.BATTERY_CHARGE_TOOLTIP, {}),
                    value: o,
                    gradient: B1
                })]
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/electricity-infoview-panel.tsx", {
            get ElectricityInfoviewPanel() {
                return f2
            },
            set ElectricityInfoviewPanel(e) {
                f2 = e
            }
        });
        var x2 = () => {
            const e = sl(v_);
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.infoviewsFireHazard,
                children: (0, z.jsx)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.FireAndRescueInfoPanel.AVERAGE_FIRE_HAZARD, {}),
                        rightText: (0, z.jsx)($u, {
                            value: e.current,
                            max: e.max
                        })
                    }),
                    value: e,
                    gradient: D1,
                    tooltip: (0, z.jsx)(Pc.Infoviews.AVERAGE_FIRE_HAZARD_TOOLTIP, {})
                })
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/fire-and-rescue-infoview-panel.tsx", {
            get FireAndRescueInfoPanel() {
                return x2
            },
            set FireAndRescueInfoPanel(e) {
                x2 = e
            }
        });
        var v2 = () => (0, z.jsxs)(z.Fragment, {
            children: [(0, z.jsx)(_2, {}), (0, z.jsx)(b2, {})]
        });
        const _2 = () => {
                const e = sl(r_),
                    t = sl(s_),
                    n = sl(a_);
                return (0, z.jsx)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.GarbageInfoPanel.PROCESSING_STATUS, {})
                    }),
                    demandLabel: (0, z.jsx)(Pc.GarbageInfoPanel.GARBAGE_RATE, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: e,
                        unit: Oc.WeightPerMonth
                    }),
                    supplyLabel: (0, z.jsx)(Pc.InfoPanels.PROCESSING, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: t,
                        unit: Oc.WeightPerMonth
                    }),
                    availability: n,
                    tooltip: (0, z.jsx)(Pc.Infoviews.GARBAGE_PROCESSING_STATUS_TOOLTIP, {})
                })
            },
            b2 = () => {
                const e = sl(i_),
                    t = sl(l_),
                    n = sl(o_);
                return (0, z.jsx)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.GarbageInfoPanel.LANDFILL_AVAILABILITY, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: 100 * n.current,
                            unit: Oc.Percentage
                        })
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.LANDFILL_AVAILABILITY_TOOLTIP, {}),
                    value: n,
                    gradient: F1,
                    children: (0, z.jsx)(M1, {
                        tiny: !0,
                        text: (0, z.jsx)(Pc.Infoviews.LABEL_VALUE_FORMAT, {
                            LABEL: (0, z.jsx)(Pc.GarbageInfoPanel.STORED_GARBAGE, {}),
                            VALUE: (0, z.jsx)(Gc, {
                                value: t,
                                unit: Oc.Weight
                            })
                        }),
                        rightText: (0, z.jsx)(Pc.Infoviews.LABEL_VALUE_FORMAT, {
                            LABEL: (0, z.jsx)(Pc.InfoPanels.CAPACITY, {}),
                            VALUE: (0, z.jsx)(Gc, {
                                value: e,
                                unit: Oc.Weight
                            })
                        })
                    })
                })
            };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/garbage-infoview-panel.tsx", {
            get GarbageInfoviewPanel() {
                return v2
            },
            set GarbageInfoviewPanel(e) {
                v2 = e
            }
        });
        var T2 = () => {
            const e = sl(g_);
            return (0, z.jsx)(z.Fragment, {
                children: (0, z.jsx)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.GroundPollutionInfoPanel.AVERAGE_GROUND_POLLUTION, {}),
                        rightText: (0, z.jsx)($u, {
                            value: e.current,
                            max: e.max
                        })
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.AVERAGE_GROUND_POLLUTION_TOOLTIP, {}),
                    value: e,
                    gradient: k1
                })
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/ground-pollution-infoview-panel.tsx", {
            get GroundPollutionInfoviewPanel() {
                return T2
            },
            set GroundPollutionInfoviewPanel(e) {
                T2 = e
            }
        });
        let E2 = {
            positive: "positive_zrK",
            negative: "negative_YWY"
        };
        X.add("game-ui/game/themes/sign-style-theme.module.scss", {
            get classes() {
                return E2
            },
            set classes(e) {
                Object.assign(E2, e)
            }
        });
        const I2 = E2;
        var y2 = () => {
            const e = sl(Rj);
            return (0, z.jsxs)(X1, {
                tooltip: (0, z.jsx)(Pc.Infoviews.HAPPINESS_FACTORS_TOOLTIP, {}),
                children: [(0, z.jsx)(M1, {
                    uppercase: !0,
                    text: (0, z.jsx)(Pc.Common.HAPPINESS_FACTORS, {})
                }), (0, z.jsx)(P1, {}), e.map(((e, t) => (0, z.jsx)(M1, {
                    small: !0,
                    text: e.weight > 0 ? (0, z.jsx)(Pc.Common.HAPPINESS_FACTOR_POSITIVE, {
                        hash: e.factor
                    }) : (0, z.jsx)(Pc.Common.HAPPINESS_FACTOR_NEGATIVE, {
                        hash: e.factor
                    }),
                    rightText: (0, z.jsx)("div", {
                        className: Jx(I2, e.weight),
                        children: (0, z.jsx)(Gc, {
                            value: e.weight,
                            signed: !0
                        })
                    })
                }, t)))]
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/happiness-infoview-panel.tsx", {
            get HappinessInfoviewPanel() {
                return y2
            },
            set HappinessInfoviewPanel(e) {
                y2 = e
            }
        });
        var j2 = () => (0, z.jsxs)(z.Fragment, {
            children: [(0, z.jsx)(S2, {}), (0, z.jsx)(C2, {}), (0, z.jsx)(N2, {})]
        });
        const S2 = () => {
                const e = sl(Zv),
                    t = sl(Jv),
                    n = sl(e_),
                    s = sl(zv),
                    i = sl(Qv);
                return (0, z.jsxs)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.HealthcareInfoPanel.HEALTHCARE_AVAILABILITY, {})
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.HEALTHCARE_AVAILABILITY_TOOLTIP, {}),
                    demandLabel: (0, z.jsx)(Pc.HealthcareInfoPanel.SICK_OR_INJURED, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: i,
                        unit: Oc.Integer
                    }),
                    supplyLabel: (0, z.jsx)(Pc.InfoPanels.CAPACITY, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: t,
                        unit: Oc.Integer
                    }),
                    availability: n,
                    children: [(0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.HealthcareInfoPanel.AVERAGE_HEALTH, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: s,
                            unit: Oc.Percentage
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.HealthcareInfoPanel.PATIENTS, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: e,
                            unit: Oc.Integer
                        })
                    })]
                })
            },
            C2 = () => {
                const e = sl(qv),
                    t = sl(Xv),
                    n = sl(t_);
                return (0, z.jsx)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.HealthcareInfoPanel.CREMATORIUM_AVAILABILITY, {})
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.CREMATORIUM_AVAILABILITY_TOOLTIP, {}),
                    demandLabel: (0, z.jsx)(Pc.HealthcareInfoPanel.DEATH_RATE, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: e,
                        unit: Oc.IntegerPerMonth
                    }),
                    supplyLabel: (0, z.jsx)(Pc.HealthcareInfoPanel.PROCESSING_RATE, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: t,
                        unit: Oc.IntegerPerMonth
                    }),
                    availability: n
                })
            },
            N2 = () => {
                const e = sl(Yv),
                    t = sl($v),
                    n = sl(n_);
                return (0, z.jsx)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.HealthcareInfoPanel.CEMETERY_AVAILABILITY, {}),
                        rightText: (0, z.jsx)($u, {
                            value: t - e,
                            max: t
                        })
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.CEMETERY_AVAILABILITY_TOOLTIP, {}),
                    value: n,
                    gradient: F1,
                    children: (0, z.jsx)(M1, {
                        tiny: !0,
                        text: (0, z.jsx)(Pc.Infoviews.LABEL_VALUE_FORMAT, {
                            LABEL: (0, z.jsx)(Pc.HealthcareInfoPanel.OCCUPIED, {}),
                            VALUE: (0, z.jsx)(Gc, {
                                value: e,
                                unit: Oc.Integer
                            })
                        }),
                        rightText: (0, z.jsx)(Pc.Infoviews.LABEL_VALUE_FORMAT, {
                            LABEL: (0, z.jsx)(Pc.InfoPanels.CAPACITY, {}),
                            VALUE: (0, z.jsx)(Gc, {
                                value: t,
                                unit: Oc.Integer
                            })
                        })
                    })
                })
            };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/healthcare-infoview-panel.tsx", {
            get HealthcareInfoviewPanel() {
                return j2
            },
            set HealthcareInfoviewPanel(e) {
                j2 = e
            }
        });
        var w2 = () => {
            const e = sl(A_);
            return (0, z.jsx)(X1, {
                tooltip: (0, z.jsx)(Pc.Infoviews.AVERAGE_LAND_VALUE_TOOLTIP, {}),
                children: (0, z.jsx)(M1, {
                    uppercase: !0,
                    text: (0, z.jsx)(Pc.LandValueInfoPanel.AVERAGE_LAND_VALUE, {}),
                    rightText: (0, z.jsx)(Gc, {
                        value: 240 * e,
                        unit: Oc.MoneyPerCell
                    })
                })
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/landvalue-infoview-panel.tsx", {
            get LandValueInfoviewPanel() {
                return w2
            },
            set LandValueInfoviewPanel(e) {
                w2 = e
            }
        });
        let O2 = {
            "requirement-field": "requirement-field_e7h",
            requirementField: "requirement-field_e7h",
            "progress-bounds": "progress-bounds_MkW",
            progressBounds: "progress-bounds_MkW",
            progress: "progress_jYy",
            content: "content_OHh",
            icon: "icon_IKb",
            label: "label_DwS",
            checkmark: "checkmark_Nhp"
        };
        X.add("game-ui/game/components/progression/requirement-field/requirement-field.module.scss", {
            get classes() {
                return O2
            },
            set classes(e) {
                Object.assign(O2, e)
            }
        });
        const P2 = O2;
        var L2 = e => {
                const t = sl(iN);
                return (0, z.jsx)(U2, {
                    icon: "Media/Game/Icons/Trophy.svg",
                    progress: e.locked ? t : e.index,
                    max: e.index,
                    locked: e.locked,
                    children: (0, z.jsx)(Pc.Progression.MILESTONE_UNLOCK_REQUIREMENT, {
                        INDEX: (0, z.jsx)(Gc, {
                            value: e.index,
                            unit: Oc.Integer
                        }),
                        NAME: (0, z.jsx)(Pc.Progression.MILESTONE_NAME, {
                            index: e.index
                        })
                    })
                })
            },
            A2 = e => (0, z.jsx)(U2, {
                icon: "Media/Game/Icons/DevPoint.svg",
                progress: e.locked ? 0 : 1,
                max: 1,
                locked: e.locked,
                children: (0, z.jsx)(Pc.Progression.NODE_UNLOCK_REQUIREMENT, {
                    NAME: (0, z.jsx)(Pc.Progression.NODE_NAME, {
                        hash: e.name
                    })
                })
            }),
            M2 = e => {
                const t = (0, Y.useMemo)((() => {
                    const t = {
                        NAME: (0, z.jsx)(Pc.Assets.NAME, {
                            hash: e.requirement
                        }),
                        CURRENT: (0, z.jsx)(Gc, {
                            value: e.progress,
                            unit: Oc.Integer
                        }),
                        TARGET: (0, z.jsx)(Gc, {
                            value: e.minimumCount,
                            unit: Oc.Integer
                        })
                    };
                    return null != e.labelId ? (0, z.jsx)(Tc, {
                        id: e.labelId,
                        args: t
                    }) : (0, z.jsx)(Pc.Progression.STRICT_OBJECT_BUILT_REQUIREMENT, {
                        ...t
                    })
                }), [e.labelId, e.requirement, e.progress, e.minimumCount]);
                return (0, z.jsx)(U2, {
                    icon: e.icon,
                    progress: e.progress,
                    max: e.minimumCount,
                    locked: e.locked,
                    children: t
                })
            },
            R2 = e => {
                const t = (0, Y.useMemo)((() => {
                    const t = {
                        ZONE: null != e.requiredZone ? (0, z.jsx)(Pc.Assets.NAME, {
                            hash: e.requiredZone
                        }) : "",
                        CURRENT: (0, z.jsx)(Gc, {
                            value: e.progress,
                            unit: Oc.Integer
                        }),
                        TARGET: (0, z.jsx)(Gc, {
                            value: e.minimumSquares > 0 ? e.minimumSquares : e.minimumCount,
                            unit: Oc.Integer
                        }),
                        LEVEL: (0, z.jsx)(Gc, {
                            value: e.minimumLevel,
                            unit: Oc.Integer
                        })
                    };
                    return null != e.labelId ? (0, z.jsx)(Tc, {
                        id: e.labelId,
                        args: t
                    }) : e.minimumSquares > 0 || 0 === e.minimumCount ? e.minimumLevel > 1 ? (0, z.jsx)(Pc.Progression.ZONE_BUILT_REQUIREMENT_CELLS_LEVEL, {
                        ...t
                    }) : (0, z.jsx)(Pc.Progression.ZONE_BUILT_REQUIREMENT_CELLS, {
                        ...t
                    }) : e.minimumLevel > 1 ? (0, z.jsx)(Pc.Progression.ZONE_BUILT_REQUIREMENT_COUNT_LEVEL, {
                        ...t
                    }) : (0, z.jsx)(Pc.Progression.ZONE_BUILT_REQUIREMENT_COUNT, {
                        ...t
                    })
                }), [e.labelId, e.minimumCount, e.minimumLevel, e.minimumSquares, e.progress, e.requiredZone]);
                return (0, z.jsx)(U2, {
                    icon: e.icon,
                    progress: e.progress,
                    max: e.minimumSquares > 0 ? e.minimumSquares : e.minimumCount,
                    locked: e.locked,
                    children: t
                })
            },
            k2 = e => {
                const t = (0, Y.useMemo)((() => {
                    if (e.minimumPopulation > 0 || 0 === e.minimumHappiness) {
                        const t = {
                            VALUE: (0, z.jsx)(Gc, {
                                value: e.minimumPopulation,
                                unit: Oc.Integer
                            })
                        };
                        return null != e.labelId ? (0, z.jsx)(Tc, {
                            id: e.labelId,
                            args: t
                        }) : (0, z.jsx)(Pc.Progression.POPULATION_REQUIREMENT, {
                            ...t
                        })
                    } {
                        const t = {
                            VALUE: (0, z.jsx)(Gc, {
                                value: e.minimumHappiness,
                                unit: Oc.PercentageSingleFraction
                            })
                        };
                        return null != e.labelId ? (0, z.jsx)(Tc, {
                            id: e.labelId,
                            args: t
                        }) : (0, z.jsx)(Pc.Progression.HAPPINESS_REQUIREMENT, {
                            ...t
                        })
                    }
                }), [e.minimumPopulation, e.minimumHappiness, e.labelId]);
                return (0, z.jsx)(U2, {
                    icon: e.minimumPopulation > 0 || 0 === e.minimumHappiness ? "Media/Game/Icons/Citizen.svg" : "Media/Game/Icons/Happy.svg",
                    progress: e.progress,
                    max: e.minimumPopulation > 0 ? e.minimumPopulation : e.minimumHappiness,
                    locked: e.locked,
                    children: t
                })
            },
            D2 = e => {
                const t = (0, Y.useMemo)((() => {
                    const t = {
                        RESOURCE: (0, z.jsx)(Pc.Resources.TITLE, {
                            hash: e.resourceType
                        }),
                        CURRENT: (0, z.jsx)(Gc, {
                            value: e.progress,
                            unit: Oc.Integer
                        }),
                        TARGET: (0, z.jsx)(Gc, {
                            value: e.minimumProducedAmount,
                            unit: Oc.Integer
                        })
                    };
                    return null != e.labelId ? (0, z.jsx)(Tc, {
                        id: e.labelId,
                        args: t
                    }) : (0, z.jsx)(Pc.Progression.PROCESSING_REQUIREMENT, {
                        ...t
                    })
                }), [e.labelId, e.resourceType, e.progress, e.minimumProducedAmount]);
                return (0, z.jsx)(U2, {
                    icon: "Media/Game/Icons/Company.svg",
                    progress: e.progress,
                    max: e.minimumProducedAmount,
                    locked: e.locked,
                    children: t
                })
            },
            F2 = e => {
                const t = (0, Y.useMemo)((() => {
                    const t = {
                        CURRENT: (0, z.jsx)(Gc, {
                            value: e.progress,
                            unit: Oc.Integer
                        }),
                        TARGET: (0, z.jsx)(Gc, {
                            value: e.minimumCount,
                            unit: Oc.Integer
                        })
                    };
                    return null != e.labelId ? (0, z.jsx)(Tc, {
                        id: e.labelId,
                        args: t
                    }) : (0, z.jsx)(Pc.Progression.OBJECT_BUILT_REQUIREMENT, {
                        hash: e.name,
                        ...t
                    })
                }), [e.labelId, e.name, e.progress, e.minimumCount]);
                return (0, z.jsx)(U2, {
                    icon: "Media/Game/Icons/Build.svg",
                    progress: e.progress,
                    max: e.minimumCount,
                    locked: e.locked,
                    children: t
                })
            },
            U2 = ({
                icon: e,
                progress: t,
                max: n,
                locked: s,
                children: i
            }) => {
                const a = s ? Od(t / n, 0, 1) : n;
                return (0, z.jsxs)("div", {
                    className: P2.requirementField,
                    children: [(0, z.jsx)("div", {
                        className: P2.progressBounds,
                        style: {
                            width: 100 * a + "%"
                        },
                        children: (0, z.jsx)("div", {
                            className: P2.progress,
                            style: {
                                width: (a > 0 ? 100 / a : 0) + "%"
                            }
                        })
                    }), (0, z.jsxs)("div", {
                        className: P2.content,
                        children: [e && (0, z.jsx)("img", {
                            src: e,
                            className: P2.icon
                        }), (0, z.jsx)("div", {
                            className: P2.label,
                            children: i
                        }), !s && (0, z.jsx)(ef, {
                            src: "Media/Glyphs/Checkmark.svg",
                            className: P2.checkmark
                        })]
                    })]
                })
            },
            B2 = ({
                locked: e
            }) => (0, z.jsx)(U2, {
                icon: "Media/Game/Icons/Build.svg",
                progress: 0,
                max: 1,
                locked: e,
                children: (0, z.jsx)(Pc.Progression.TUTORIAL_REQUIREMENT, {})
            }),
            G2 = {
                [bC.Milestone]: L2,
                [bC.DevTreeNode]: A2,
                [bC.StrictObjectBuilt]: M2,
                [bC.ZoneBuilt]: R2,
                [bC.Citizen]: k2,
                [bC.Processing]: D2,
                [bC.ObjectBuilt]: F2,
                [bC.Unlock]: () => null,
                [bC.Tutorial]: B2
            };
        X.add("game-ui/game/components/progression/requirement-field/requirement-field.tsx", {
            get MilestoneRequirementField() {
                return L2
            },
            set MilestoneRequirementField(e) {
                L2 = e
            },
            get DevTreeNodeRequirementField() {
                return A2
            },
            set DevTreeNodeRequirementField(e) {
                A2 = e
            },
            get StrictObjectBuiltRequirementField() {
                return M2
            },
            set StrictObjectBuiltRequirementField(e) {
                M2 = e
            },
            get ZoneBuiltRequirementField() {
                return R2
            },
            set ZoneBuiltRequirementField(e) {
                R2 = e
            },
            get CitizenRequirementField() {
                return k2
            },
            set CitizenRequirementField(e) {
                k2 = e
            },
            get ProcessingRequirementField() {
                return D2
            },
            set ProcessingRequirementField(e) {
                D2 = e
            },
            get ObjectBuiltRequirementField() {
                return F2
            },
            set ObjectBuiltRequirementField(e) {
                F2 = e
            },
            get RequirementField() {
                return U2
            },
            set RequirementField(e) {
                U2 = e
            },
            get TutorialRequirementField() {
                return B2
            },
            set TutorialRequirementField(e) {
                B2 = e
            },
            get prefabRequirementComponents() {
                return G2
            },
            set prefabRequirementComponents(e) {
                G2 = e
            }
        });
        let V2 = {
            "unlocking-requirements": "unlocking-requirements_xaC",
            unlockingRequirements: "unlocking-requirements_xaC",
            row: "row_fam",
            title: "title_grF",
            divider: "divider_Cqj"
        };
        X.add("game-ui/game/components/progression/unlocking-requirements/unlocking-requirements.module.scss", {
            get classes() {
                return V2
            },
            set classes(e) {
                Object.assign(V2, e)
            }
        });
        const H2 = V2;
        var K2 = ({
            requirements: e,
            theme: t,
            className: n
        }) => {
            const s = (0, Y.useMemo)((() => ({
                    ...H2,
                    ...t
                })), [t]),
                i = e.requireAny.length > 0,
                a = e.requireAll.length > 0;
            return (0, z.jsxs)("div", {
                className: Zu()(s.unlockingRequirements, n),
                children: [i && (0, z.jsxs)("div", {
                    className: s.row,
                    children: [(0, z.jsx)("div", {
                        className: s.title,
                        children: (0, z.jsx)(Pc.Progression.REQUIRES_ANY, {})
                    }), (0, z.jsx)($A, {
                        components: G2,
                        data: e.requireAny
                    })]
                }), i && a && (0, z.jsx)("div", {
                    className: H2.divider
                }), a && (0, z.jsxs)("div", {
                    className: s.row,
                    children: [(0, z.jsx)("div", {
                        className: s.title,
                        children: i ? (0, z.jsx)(Pc.Progression.REQUIRES_ALL, {}) : e.requireAll.length > 1 ? (0, z.jsx)(Pc.Progression.REQUIREMENTS, {}) : (0, z.jsx)(Pc.Progression.REQUIREMENT, {})
                    }), (0, z.jsx)($A, {
                        components: G2,
                        data: e.requireAll
                    })]
                })]
            })
        };

        function W2(e) {
            return e.requireAll.length > 0 || e.requireAny.length > 0
        }
        X.add("game-ui/game/components/progression/unlocking-requirements/unlocking-requirements.tsx", {
            get Requirements() {
                return K2
            },
            set Requirements(e) {
                K2 = e
            },
            get hasRequirements() {
                return W2
            },
            set hasRequirements(e) {
                W2 = e
            }
        });
        let z2 = {
            balloon: "balloon_ltu balloon_qJY balloon_H23",
            enter: "enter_tT_ enter_ZTk",
            "enter-active": "enter-active_r4U enter-active_AJs",
            enterActive: "enter-active_r4U enter-active_AJs",
            exit: "exit_OtI undefined",
            "exit-active": "exit-active_Dqt exit-active_RfZ",
            exitActive: "exit-active_Dqt exit-active_RfZ",
            container: "container_eNL container_zgM container_jfe",
            locked: "locked_UbY",
            arrow: "arrow_R9U arrow_SVb arrow_Xfn",
            content: "content_wfU content_A82 content_JQV",
            main: "main_F2U",
            lock: "lock_Gqk",
            requirements: "requirements_dsk"
        };
        X.add("game-ui/game/components/progression/unlocking-tooltip/unlocking-tooltip.module.scss", {
            get classes() {
                return z2
            },
            set classes(e) {
                Object.assign(z2, e)
            }
        });
        const Y2 = z2;
        var $2 = ({
            title: e,
            description: t,
            content: n,
            shortcut: s,
            locked: i = !1,
            requirements: a,
            className: o,
            children: r,
            forceVisible: l,
            ...c
        }) => {
            const u = Y.Children.count(e) > 0 || Y.Children.count(t) > 0 || Y.Children.count(n) > 0,
                d = (0, Y.useMemo)((() => i && a && a.requireAll.length + a.requireAny.length > 0), [i, a]);
            return (0, z.jsx)(Tg, {
                ...c,
                forceVisible: l,
                theme: Y2,
                className: Zu()(d && Y2.locked, o),
                tooltip: (u || d) && (0, z.jsxs)(z.Fragment, {
                    children: [u && (0, z.jsx)(DY, {
                        title: e,
                        description: t,
                        content: n,
                        shortcut: s,
                        className: Y2.main
                    }), u && d && (0, z.jsx)(C$, {
                        className: Y2.lock
                    }), d && a && (0, z.jsx)(K2, {
                        requirements: a,
                        className: Y2.requirements
                    })]
                }),
                children: r
            })
        };
        X.add("game-ui/game/components/progression/unlocking-tooltip/unlocking-tooltip.tsx", {
            get UnlockingTooltip() {
                return $2
            },
            set UnlockingTooltip(e) {
                $2 = e
            }
        });
        var q2 = () => {
            const e = sl(M_),
                t = sl(R_),
                n = sl(k_),
                s = sl(D_),
                i = MC("ZonesOffice"),
                a = [(0, z.jsx)(Pc.LevelInfoPanel.LEVEL1, {}), (0, z.jsx)(Pc.LevelInfoPanel.LEVEL2, {}), (0, z.jsx)(Pc.LevelInfoPanel.LEVEL3, {}), (0, z.jsx)(Pc.LevelInfoPanel.LEVEL4, {}), (0, z.jsx)(Pc.LevelInfoPanel.LEVEL5, {})];
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsxs)(X1, {
                    tooltip: (0, z.jsx)(Pc.Infoviews.RESIDENTIAL_LEVEL_TOOLTIP, {}),
                    children: [(0, z.jsx)(M1, {
                        uppercase: !0,
                        centered: !0,
                        text: (0, z.jsx)(Pc.LevelInfoPanel.RESIDENTIAL, {})
                    }), (0, z.jsx)(u2, {
                        colors: ["#86FB14", "#64B805", "#3C8F1A", "#2F7512", "#20550C"],
                        labels: a,
                        data: e,
                        usePercentageValue: !0
                    })]
                }), (0, z.jsxs)(X1, {
                    tooltip: (0, z.jsx)(Pc.Infoviews.COMMERCIAL_LEVEL_TOOLTIP, {}),
                    children: [(0, z.jsx)(M1, {
                        uppercase: !0,
                        centered: !0,
                        text: (0, z.jsx)(Pc.LevelInfoPanel.COMMERCIAL, {})
                    }), (0, z.jsx)(u2, {
                        colors: ["#43D4FF", "#2393B8", "#1B748E", "#116075", "#0A4254"],
                        labels: a,
                        data: t,
                        usePercentageValue: !0
                    })]
                }), (0, z.jsxs)(X1, {
                    tooltip: (0, z.jsx)(Pc.Infoviews.INDUSTRIAL_LEVEL_TOOLTIP, {}),
                    children: [(0, z.jsx)(M1, {
                        uppercase: !0,
                        centered: !0,
                        text: (0, z.jsx)(Pc.LevelInfoPanel.INDUSTRIAL, {})
                    }), (0, z.jsx)(u2, {
                        colors: ["#FCCE1A", "#B59923", "#90781C", "#766315", "#55450D"],
                        labels: a,
                        data: n,
                        usePercentageValue: !0
                    })]
                }), (0, z.jsx)($2, {
                    locked: i.locked,
                    requirements: i.requirements,
                    children: (0, z.jsxs)(X1, {
                        tooltip: (0, z.jsx)(Pc.Infoviews.OFFICE_LEVEL_TOOLTIP, {}),
                        children: [(0, z.jsx)(M1, {
                            uppercase: !0,
                            centered: !0,
                            text: (0, z.jsx)(Pc.LevelInfoPanel.OFFICE, {})
                        }), (0, z.jsx)(u2, {
                            colors: ["#7941FF", "#4E22B3", "#3D1C92", "#311376", "#200B54"],
                            labels: a,
                            data: s,
                            usePercentageValue: !0
                        })]
                    })
                })]
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/level-infoview-panel.tsx", {
            get LevelInfoviewPanel() {
                return q2
            },
            set LevelInfoviewPanel(e) {
                q2 = e
            }
        });
        var X2 = () => {
            const e = sl(mb),
                t = sl(hb),
                n = sl(gb),
                s = sl(pb),
                i = sl(fb),
                a = sl(xb),
                o = sl(vb),
                r = sl(_b),
                l = sl(bb),
                c = sl(Tb);
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)(Q2, {
                    text: (0, z.jsx)(M1, {
                        icon: "Media/Game/Icons/Fertility.svg",
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.FERTILITY, {}),
                        uppercase: !0
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.FERTILE_LAND_RESOURCE_TOOLTIP, {}),
                    available: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.AVAILABLE, {}),
                        rightText: s > 0 ? (0, z.jsx)(Gc, {
                            value: s,
                            unit: Oc.Area
                        }) : 0
                    }),
                    extractionRate: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.RATE, {}),
                        rightText: r > 0 ? (0, z.jsx)(Gc, {
                            value: r,
                            unit: Oc.WeightPerMonth
                        }) : 0
                    }),
                    renewalRate: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.RENEWAL_RATE, {}),
                        rightText: c > 0 ? (0, z.jsx)(Gc, {
                            value: c,
                            unit: Oc.WeightPerMonth
                        }) : 0
                    })
                }), (0, z.jsx)(Q2, {
                    text: (0, z.jsx)(M1, {
                        icon: "Media/Game/Icons/Forest.svg",
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.FOREST, {}),
                        uppercase: !0
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.WOOD_RESOURCE_TOOLTIP, {}),
                    available: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.AVAILABLE, {}),
                        rightText: n > 0 ? (0, z.jsx)(Gc, {
                            value: n,
                            unit: Oc.Weight
                        }) : 0
                    }),
                    extractionRate: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.RATE, {}),
                        rightText: o > 0 ? (0, z.jsx)(Gc, {
                            value: o,
                            unit: Oc.WeightPerMonth
                        }) : 0
                    }),
                    renewalRate: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.RENEWAL_RATE, {}),
                        rightText: l > 0 ? (0, z.jsx)(Gc, {
                            value: l,
                            unit: Oc.WeightPerMonth
                        }) : 0
                    })
                }), (0, z.jsx)(Q2, {
                    text: (0, z.jsx)(M1, {
                        icon: "Media/Game/Icons/Ore.svg",
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.ORE, {}),
                        uppercase: !0
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.ORE_RESOURCE_TOOLTIP, {}),
                    available: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.AVAILABLE, {}),
                        rightText: t > 0 ? (0, z.jsx)(Gc, {
                            value: t,
                            unit: Oc.Weight
                        }) : 0
                    }),
                    extractionRate: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.RATE, {}),
                        rightText: a > 0 ? (0, z.jsx)(Gc, {
                            value: a,
                            unit: Oc.WeightPerMonth
                        }) : 0
                    })
                }), (0, z.jsx)(Q2, {
                    text: (0, z.jsx)(M1, {
                        icon: "Media/Game/Icons/Oil.svg",
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.OIL, {}),
                        uppercase: !0
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.OIL_RESOURCE_TOOLTIP, {}),
                    available: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.AVAILABLE, {}),
                        rightText: e > 0 ? (0, z.jsx)(Gc, {
                            value: e,
                            unit: Oc.Weight
                        }) : 0
                    }),
                    extractionRate: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.NaturalResourcesInfoPanel.RATE, {}),
                        rightText: i > 0 ? (0, z.jsx)(Gc, {
                            value: i,
                            unit: Oc.WeightPerMonth
                        }) : 0
                    })
                })]
            })
        };
        const Q2 = ({
            text: e,
            available: t,
            extractionRate: n,
            renewalRate: s,
            tooltip: i
        }) => (0, z.jsxs)(X1, {
            tooltip: i,
            children: [e, t, n, s]
        });
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/natural-resources-infoview-panel.tsx", {
            get NaturalResourcesInfoviewPanel() {
                return X2
            },
            set NaturalResourcesInfoviewPanel(e) {
                X2 = e
            }
        });
        var Z2 = () => {
            const e = sl(x_);
            return (0, z.jsx)(z.Fragment, {
                children: (0, z.jsx)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.NoisePollutionInfoPanel.AVERAGE_NOISE_POLLUTION, {}),
                        rightText: (0, z.jsx)($u, {
                            value: e.current,
                            max: e.max
                        })
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.AVERAGE_NOISE_POLLUTION_TOOLTIP, {}),
                    value: e,
                    gradient: J2
                })
            })
        };
        const J2 = {
            stops: [{
                color: "#FFF",
                offset: 0
            }, {
                color: "#F00",
                offset: 1
            }]
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/noise-infoview-panel.tsx", {
            get NoiseInfoviewPanel() {
                return Z2
            },
            set NoiseInfoviewPanel(e) {
                Z2 = e
            }
        });
        var e5 = () => {
            const e = sl(ob),
                t = sl(rb),
                n = sl(lb),
                s = sl(cb),
                i = sl(ub),
                a = sl(db);
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsxs)(X1, {
                    tooltip: (0, z.jsx)(Pc.Infoviews.IMPORT_DISTRIBUTION_TOOLTIP, {}),
                    children: [(0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.OutsideConnectionsInfoPanel.TOP_IMPORTS, {})
                    }), (0, z.jsx)(u2, {
                        colors: t,
                        data: n,
                        labels: e.map((e => (0, z.jsx)(Pc.Resources.TITLE, {
                            hash: e.replace("Resource", "")
                        }, e))),
                        ignoreZero: !0,
                        usePercentageValue: !0
                    })]
                }), (0, z.jsxs)(X1, {
                    tooltip: (0, z.jsx)(Pc.Infoviews.EXPORT_DISTRIBUTION_TOOLTIP, {}),
                    children: [(0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.OutsideConnectionsInfoPanel.TOP_EXPORTS, {})
                    }), (0, z.jsx)(u2, {
                        colors: i,
                        data: a,
                        labels: s.map((e => (0, z.jsx)(Pc.Resources.TITLE, {
                            hash: e.replace("Resource", "")
                        }, e))),
                        ignoreZero: !0,
                        usePercentageValue: !0
                    })]
                })]
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/outside-connections-infoview-panel.tsx", {
            get OutsideConnectionsInfoviewPanel() {
                return e5
            },
            set OutsideConnectionsInfoviewPanel(e) {
                e5 = e
            }
        });
        var t5 = () => {
            const e = sl(__),
                t = sl(b_),
                n = sl(T_),
                s = sl(y_),
                i = sl(j_),
                a = sl(S_),
                o = sl(w_),
                r = sl(O_),
                l = sl(P_),
                c = sl(L_),
                u = sl(C_),
                d = sl(N_);
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.PoliceInfoPanel.JAIL_AVAILABILITY, {})
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.JAIL_AVAILABILITY_TOOLTIP, {}),
                    demandLabel: (0, z.jsx)(Pc.PoliceInfoPanel.ARRESTED_CRIMINALS, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: i,
                        unit: Oc.Integer
                    }),
                    supplyLabel: (0, z.jsx)(Pc.InfoPanels.CAPACITY, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.Integer
                    }),
                    availability: t,
                    children: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PoliceInfoPanel.IN_JAIL, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: a,
                            unit: Oc.Integer
                        })
                    })
                }), (0, z.jsx)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.PoliceInfoPanel.PRISON_AVAILABILITY, {})
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.PRISON_AVAILABILITY_TOOLTIP, {}),
                    demandLabel: (0, z.jsx)(Pc.PoliceInfoPanel.PRISONERS, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: d,
                        unit: Oc.Integer
                    }),
                    supplyLabel: (0, z.jsx)(Pc.InfoPanels.CAPACITY, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: u,
                        unit: Oc.Integer
                    }),
                    availability: n,
                    children: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PoliceInfoPanel.IN_PRISON, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: o,
                            unit: Oc.Integer
                        })
                    })
                }), (0, z.jsxs)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.PoliceInfoPanel.AVERAGE_CRIME_PROBABILITY, {}),
                        rightText: (0, z.jsx)($u, {
                            value: e.current,
                            max: e.max
                        })
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.CRIME_PROBABILITY_TOOLTIP, {}),
                    value: e,
                    gradient: D1,
                    children: [(0, z.jsx)(P1, {
                        small: !0
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PoliceInfoPanel.CURRENT_NUMBER_OF_CRIMINALS, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: r,
                            unit: Oc.Integer
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PoliceInfoPanel.NUMBER_OF_CRIMES_PER_MONTH, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: l,
                            unit: Oc.IntegerPerMonth
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PoliceInfoPanel.CRIME_SUCCESS_RATE, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: c,
                            unit: Oc.PercentageSingleFraction
                        })
                    })]
                })]
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/police-infoview-panel.tsx", {
            get PoliceInfoviewPanel() {
                return t5
            },
            set PoliceInfoviewPanel(e) {
                t5 = e
            }
        });
        var n5 = ["#3a91c7", "#8bb9d6", "#5fb844", "#a3b844"],
            s5 = [(0, z.jsx)(Pc.PopulationInfoPanel.CHILDREN, {}), (0, z.jsx)(Pc.PopulationInfoPanel.TEENS, {}), (0, z.jsx)(Pc.PopulationInfoPanel.ADULTS, {}), (0, z.jsx)(Pc.PopulationInfoPanel.SENIORS, {})];
        X.add("game-ui/common/charts/pie-chart/age-pie-chart.tsx", {
            get agePieChartColors() {
                return n5
            },
            set agePieChartColors(e) {
                n5 = e
            },
            get agePieChartLabels() {
                return s5
            },
            set agePieChartLabels(e) {
                s5 = e
            }
        });
        var i5 = () => {
            const e = sl(q_),
                t = sl(X_),
                n = sl(Q_),
                s = sl(Z_),
                i = sl(J_),
                a = sl(qv),
                o = sl(eb),
                r = sl(tb),
                l = sl(nb);
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsxs)(X1, {
                    tooltip: (0, z.jsx)(Pc.Infoviews.POPULATION_STATISTICS_TOOLTIP, {}),
                    children: [(0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.PopulationInfoPanel.POPULATION, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: e,
                            unit: Oc.Integer
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PopulationInfoPanel.BIRTH_RATE, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: i,
                            unit: Oc.IntegerPerMonth
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PopulationInfoPanel.DEATH_RATE, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: a,
                            unit: Oc.IntegerPerMonth
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PopulationInfoPanel.MOVED_IN, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: o,
                            unit: Oc.IntegerPerMonth
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PopulationInfoPanel.MOVED_AWAY, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: r,
                            unit: Oc.IntegerPerMonth
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PopulationInfoPanel.JOBS, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: n,
                            unit: Oc.Integer
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PopulationInfoPanel.EMPLOYED, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: t,
                            unit: Oc.Integer
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.PopulationInfoPanel.UNEMPLOYMENT, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: s,
                            unit: Oc.PercentageSingleFraction
                        })
                    })]
                }), (0, z.jsxs)(X1, {
                    tooltip: (0, z.jsx)(Pc.Infoviews.POPULATION_DISTRIBUTION_TOOLTIP, {}),
                    children: [(0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.PopulationInfoPanel.AGE_DISTRIBUTION, {})
                    }), (0, z.jsx)(P1, {
                        small: !0
                    }), (0, z.jsx)(u2, {
                        usePercentageValue: !0,
                        colors: n5,
                        labels: s5,
                        data: l
                    })]
                })]
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/population-infoview-panel.tsx", {
            get PopulationInfoviewPanel() {
                return i5
            },
            set PopulationInfoviewPanel(e) {
                i5 = e
            }
        });
        var a5 = () => {
            const e = sl(W_),
                t = sl(z_),
                n = sl(Y_),
                s = sl($_);
            return (0, z.jsx)(z.Fragment, {
                children: (0, z.jsx)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.PostInfoPanel.MAIL_SERVICE_AVAILABILITY, {})
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.MAIL_SERVICE_AVAILABILITY_TOOLTIP, {}),
                    demandLabel: (0, z.jsx)(Pc.PostInfoPanel.MAIL_RATE, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: e,
                        unit: Oc.IntegerPerMonth
                    }),
                    supplyLabel: (0, z.jsx)(Pc.InfoPanels.PROCESSING, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: t + n,
                        unit: Oc.IntegerPerMonth
                    }),
                    availability: s
                })
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/post-infoview-panel.tsx", {
            get PostInfoviewPanel() {
                return a5
            },
            set PostInfoviewPanel(e) {
                a5 = e
            }
        });
        var o5 = () => {
            const e = sl(c_),
                t = sl(d_),
                n = sl(m_),
                s = sl(u_);
            return (0, z.jsx)(z.Fragment, {
                children: (0, z.jsx)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.RoadsInfoPanel.PARKING_AVAILABILITY, {})
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.PARKING_AVAILABILITY_TOOLTIP, {}),
                    demandLabel: (0, z.jsx)(Pc.RoadsInfoPanel.PARKED_CARS, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: t,
                        unit: Oc.Integer
                    }),
                    supplyLabel: (0, z.jsx)(Pc.InfoPanels.CAPACITY, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: e,
                        unit: Oc.Integer
                    }),
                    availability: n,
                    children: (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.RoadsInfoPanel.PARKING_INCOME, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: s,
                            unit: Oc.MoneyPerMonth
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/roads-infoview-panel.tsx", {
            get RoadsInfoviewPanel() {
                return o5
            },
            set RoadsInfoviewPanel(e) {
                o5 = e
            }
        });
        var r5 = () => {
            const e = sl(H_),
                t = sl(V_),
                n = sl(G_),
                s = sl(K_);
            return (0, z.jsx)(z.Fragment, {
                children: (0, z.jsxs)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.TourismInfoPanel.ATTRACTIVENESS, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: n.current
                        })
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.CITY_ATTRACTIVENESS_TOOLTIP, {}),
                    value: n,
                    gradient: B1,
                    children: [(0, z.jsx)(P1, {
                        small: !0
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.TourismInfoPanel.TOURISM_RATE, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: e,
                            unit: Oc.IntegerPerMonth
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.TourismInfoPanel.WEATHER_EFFECT, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: s,
                            unit: Oc.Percentage,
                            signed: !0
                        })
                    }), (0, z.jsx)(M1, {
                        small: !0,
                        text: (0, z.jsx)(Pc.TourismInfoPanel.AVERAGE_HOTEL_PRICE, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: t,
                            unit: Oc.Money
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/tourism-infoview-panel.tsx", {
            get TourismInfoviewPanel() {
                return r5
            },
            set TourismInfoviewPanel(e) {
                r5 = e
            }
        });
        let l5 = {
            chartFontColor: "rgba(255, 255, 255, 0.6)",
            chartLineColor: "rgba(255, 255, 255, 0.1)",
            trafficVolumeBorderColor: "rgba(29, 130, 184, 1)",
            trafficVolumeBackgroundColor: "rgba(29, 130, 184, 0.5)",
            trafficFlowBorderColor: "rgba(30, 179, 184, 1)",
            trafficFlowBackgroundColor: "rgba(30, 179, 184, 0.5)",
            "traffic-chart": "traffic-chart_r8c",
            trafficChart: "traffic-chart_r8c"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/traffic-charts/traffic-chart.module.scss", {
            get classes() {
                return l5
            },
            set classes(e) {
                Object.assign(l5, e)
            }
        });
        const c5 = l5;
        var u5 = ({
                data: e,
                className: t
            }) => {
                const n = p5(e),
                    s = g5(Oc.IntegerPerHour, 5, c5.trafficVolumeBorderColor, c5.trafficVolumeBackgroundColor);
                return (0, z.jsx)(SR, {
                    type: "line",
                    data: n,
                    options: s,
                    className: Zu()(c5.trafficChart, t)
                })
            },
            d5 = ({
                data: e,
                className: t
            }) => {
                const n = p5(e),
                    s = g5(Oc.Percentage, 100, c5.trafficFlowBorderColor, c5.trafficFlowBackgroundColor);
                return (0, z.jsx)(SR, {
                    type: "line",
                    data: n,
                    options: s,
                    className: Zu()(c5.trafficChart, t)
                })
            };
        const m5 = 10,
            h5 = 10;

        function g5(e, t, n, s) {
            const i = Kc(e),
                a = sl(Ml);
            return (0, Y.useMemo)((() => {
                const e = {
                    elements: {
                        line: {
                            borderColor: n,
                            backgroundColor: s,
                            borderWidth: 2,
                            fill: !0
                        },
                        point: {
                            borderColor: n,
                            backgroundColor: n,
                            radius: 2,
                            hoverRadius: 2,
                            borderWidth: 2,
                            hoverBorderWidth: 2
                        }
                    },
                    scales: {
                        x: {
                            beginAtZero: !0,
                            grid: {
                                lineWidth: 2,
                                color: c5.chartLineColor
                            },
                            ticks: {
                                font: {
                                    size: m5 * a,
                                    weight: "bold"
                                },
                                color: c5.chartFontColor,
                                padding: h5,
                                autoSkip: !1
                            }
                        },
                        y: {
                            min: 0,
                            suggestedMax: t,
                            grid: {
                                lineWidth: 2,
                                color: c5.chartLineColor
                            },
                            ticks: {
                                font: {
                                    size: m5 * a,
                                    weight: "bold"
                                },
                                color: c5.chartFontColor,
                                padding: h5,
                                autoSkip: !1,
                                callback: function (e) {
                                    return i(e)
                                },
                                maxTicksLimit: 6
                            }
                        }
                    }
                };
                return e
            }), [s, n, i, t, a])
        }

        function p5(e) {
            const t = Ou();
            return (0, Y.useMemo)((() => ({
                labels: [t({
                    hour: 0,
                    minute: 0
                }), t({
                    hour: 6,
                    minute: 0
                }), t({
                    hour: 12,
                    minute: 0
                }), t({
                    hour: 18,
                    minute: 0
                }), t({
                    hour: 0,
                    minute: 0
                })],
                datasets: [{
                    label: "data",
                    data: e
                }]
            })), [e, t])
        }
        X.add("game-ui/game/components/selected-info-panel/shared-components/traffic-charts/traffic-chart.tsx", {
            get TrafficVolumeChart() {
                return u5
            },
            set TrafficVolumeChart(e) {
                u5 = e
            },
            get TrafficFlowChart() {
                return d5
            },
            set TrafficFlowChart(e) {
                d5 = e
            }
        });
        var f5 = () => {
            const e = sl(h_);
            return (0, z.jsxs)(X1, {
                focusableBorder: !0,
                tooltip: (0, z.jsx)(Pc.Infoviews.TRAFFIC_FLOW, {}),
                children: [(0, z.jsx)(M1, {
                    uppercase: !0,
                    text: (0, z.jsx)(Pc.SelectedInfoPanel.ROAD_TRAFFIC_FLOW, {})
                }), (0, z.jsx)(d5, {
                    data: e
                })]
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/traffic-infoview-panel.tsx", {
            get TrafficInfoviewPanel() {
                return f5
            },
            set TrafficInfoviewPanel(e) {
                f5 = e
            }
        });
        let x5 = {
            "line-summary": "line-summary_tW5",
            lineSummary: "line-summary_tW5",
            row: "row_Pqo",
            "disable-states": "disable-states_FlS",
            disableStates: "disable-states_FlS",
            locked: "locked_dOC",
            header: "header_Sxm",
            "secondary-row": "secondary-row_bfC",
            secondaryRow: "secondary-row_bfC",
            value: "value_p4t",
            "fifty-percent": "fifty-percent_dQ2",
            fiftyPercent: "fifty-percent_dQ2",
            "thirty-percent": "thirty-percent_pPg",
            thirtyPercent: "thirty-percent_pPg",
            "total-label": "total-label_QwL",
            totalLabel: "total-label_QwL",
            icon: "icon_Rph icon_Iwk",
            lock: "lock_eZg"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/transport-infoview-panel/transport-infoview-panel.module.scss", {
            get classes() {
                return x5
            },
            set classes(e) {
                Object.assign(x5, e)
            }
        });
        const v5 = x5;
        var _5 = ({
            summaries: e
        }) => (0, z.jsxs)(X1, {
            disableFocus: !0,
            children: [(0, z.jsx)(M1, {
                uppercase: !0,
                text: (0, z.jsx)(Pc.TransportInfoPanel.CARGO_TRANSPORT_TITLE, {})
            }), (0, z.jsx)(b5, {}), (0, z.jsxs)(tp, {
                children: [e.map((e => (0, z.jsx)(T5, {
                    summary: e
                }, e.id))), (0, z.jsx)(T5, {
                    lastRow: !0,
                    summary: e.reduce(((e, t) => ({
                        id: "Total",
                        icon: "",
                        locked: !1,
                        cargoCount: e.cargoCount + t.cargoCount,
                        lineCount: e.lineCount + t.lineCount,
                        requirements: {
                            requireAny: [],
                            requireAll: []
                        }
                    })))
                })]
            })]
        });
        const b5 = () => (0, z.jsxs)("div", {
                className: Zu()(v5.row, v5.disableStates, v5.header),
                children: [(0, z.jsx)("div", {
                    className: v5.icon
                }), (0, z.jsxs)("div", {
                    className: v5.secondaryRow,
                    children: [(0, z.jsx)("div", {
                        className: Zu()(v5.value, v5.fiftyPercent),
                        children: (0, z.jsx)(Pc.TransportInfoPanel.ROUTES_LABEL, {})
                    }), (0, z.jsx)("div", {
                        className: Zu()(v5.value, v5.fiftyPercent),
                        children: (0, z.jsx)(Pc.TransportInfoPanel.CARGO_LABEL, {})
                    })]
                })]
            }),
            T5 = ({
                summary: e,
                lastRow: t = !1
            }) => {
                const n = !t && "Bus" !== e.id,
                    s = (0, Y.useCallback)((() => {
                        OL(e.id), Zb(Xb.Cargo)
                    }), [e.id]);
                return (0, z.jsx)($2, {
                    description: (0, z.jsx)(Pc.TransportInfoPanel.SUMMARY_TOOLTIP_CARGO, {
                        hash: e.id
                    }),
                    locked: e.locked,
                    requirements: e.requirements,
                    direction: "right",
                    children: (0, z.jsx)(Gp, {
                        focusKey: e.locked || !n ? Ig : yg,
                        theme: NJ,
                        onSelect: n ? s : void 0,
                        disabled: e.locked,
                        className: Zu()(v5.row, e.locked && NJ.locked, e.locked && v5.locked, !n && v5.disableStates),
                        children: (0, z.jsxs)(Zx, {
                            ifFocused: !0,
                            ifGamepad: !0,
                            children: [t ? (0, z.jsx)("div", {
                                className: v5.totalLabel,
                                children: (0, z.jsx)(Pc.TransportInfoPanel.TOTAL, {})
                            }) : (0, z.jsx)("img", {
                                src: e.icon,
                                className: Zu()(NJ.icon, v5.icon)
                            }), e.locked && (0, z.jsx)(C$, {
                                className: v5.lock
                            }), (0, z.jsxs)("div", {
                                className: v5.secondaryRow,
                                children: [(0, z.jsx)("div", {
                                    className: Zu()(v5.value, v5.fiftyPercent),
                                    children: "Bus" === e.id || 0 === e.lineCount && !t ? "—" : e.lineCount
                                }), (0, z.jsx)("div", {
                                    className: Zu()(v5.value, v5.fiftyPercent),
                                    children: e.cargoCount > 0 || t ? (0, z.jsx)(Gc, {
                                        value: e.cargoCount,
                                        unit: Oc.WeightPerMonth
                                    }) : "—"
                                })]
                            })]
                        })
                    })
                })
            };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/transport-infoview-panel/cargo-transport-summary.tsx", {
            get CargoTransportSummary() {
                return _5
            },
            set CargoTransportSummary(e) {
                _5 = e
            }
        });
        var E5 = ({
            summaries: e
        }) => (0, z.jsxs)(X1, {
            disableFocus: !0,
            children: [(0, z.jsx)(M1, {
                uppercase: !0,
                text: (0, z.jsx)(Pc.TransportInfoPanel.PUBLIC_TRANSPORT_TITLE, {})
            }), (0, z.jsx)(I5, {}), (0, z.jsxs)(tp, {
                children: [e.map((e => (0, z.jsx)(y5, {
                    summary: e
                }, e.id))), (0, z.jsx)(y5, {
                    lastRow: !0,
                    summary: e.reduce(((e, t) => ({
                        id: "Total",
                        icon: "",
                        locked: !1,
                        touristCount: e.touristCount + t.touristCount,
                        citizenCount: e.citizenCount + t.citizenCount,
                        lineCount: e.lineCount + t.lineCount,
                        requirements: {
                            requireAny: [],
                            requireAll: []
                        }
                    })))
                })]
            })]
        });
        const I5 = () => (0, z.jsxs)("div", {
                className: Zu()(v5.row, v5.disableStates, v5.header),
                children: [(0, z.jsx)("div", {
                    className: v5.icon
                }), (0, z.jsxs)("div", {
                    className: v5.secondaryRow,
                    children: [(0, z.jsx)("div", {
                        className: Zu()(v5.value, v5.thirtyPercent),
                        children: (0, z.jsx)(Pc.TransportInfoPanel.LINES, {})
                    }), (0, z.jsx)("div", {
                        className: Zu()(v5.value, v5.thirtyPercent),
                        children: (0, z.jsx)(Pc.TransportInfoPanel.TOURISTS, {})
                    }), (0, z.jsx)("div", {
                        className: Zu()(v5.value, v5.thirtyPercent),
                        children: (0, z.jsx)(Pc.TransportInfoPanel.CITIZENS, {})
                    })]
                })]
            }),
            y5 = ({
                summary: e,
                lastRow: t = !1
            }) => {
                const n = !t && "Taxi" !== e.id,
                    s = (0, Y.useCallback)((() => {
                        wL(e.id), Zb(Xb.PublicTransport)
                    }), [e.id]);
                return (0, z.jsx)($2, {
                    description: (0, z.jsx)(Pc.TransportInfoPanel.SUMMARY_TOOLTIP_PUBLICTRANSPORT, {
                        hash: e.id
                    }),
                    locked: e.locked,
                    requirements: e.requirements,
                    direction: "right",
                    children: (0, z.jsx)(Gp, {
                        focusKey: e.locked || !n ? Ig : yg,
                        onSelect: n ? s : void 0,
                        disabled: e.locked,
                        theme: NJ,
                        className: Zu()(v5.row, e.locked && NJ.locked, e.locked && v5.locked, !n && v5.disableStates),
                        children: (0, z.jsxs)(Zx, {
                            ifFocused: !0,
                            ifGamepad: !0,
                            children: [t ? (0, z.jsx)("div", {
                                className: v5.totalLabel,
                                children: (0, z.jsx)(Pc.TransportInfoPanel.TOTAL, {})
                            }) : (0, z.jsx)("img", {
                                src: e.icon,
                                className: Zu()(NJ.icon, v5.icon)
                            }), e.locked && (0, z.jsx)(C$, {
                                className: v5.lock
                            }), (0, z.jsxs)("div", {
                                className: v5.secondaryRow,
                                children: [(0, z.jsx)("div", {
                                    className: Zu()(v5.value, v5.thirtyPercent),
                                    children: "Taxi" === e.id || 0 === e.lineCount && !t ? "—" : e.lineCount
                                }), (0, z.jsx)("div", {
                                    className: Zu()(v5.value, v5.thirtyPercent),
                                    children: e.touristCount > 0 || t ? (0, z.jsx)(Gc, {
                                        value: e.touristCount,
                                        unit: Oc.IntegerPerMonth
                                    }) : "—"
                                }), (0, z.jsx)("div", {
                                    className: Zu()(v5.value, v5.thirtyPercent),
                                    children: e.citizenCount > 0 || t ? (0, z.jsx)(Gc, {
                                        value: e.citizenCount,
                                        unit: Oc.IntegerPerMonth
                                    }) : "—"
                                })]
                            })]
                        })
                    })
                })
            };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/transport-infoview-panel/public-transport-summary.tsx", {
            get PublicTransportSummary() {
                return E5
            },
            set PublicTransportSummary(e) {
                E5 = e
            }
        });
        var j5 = () => {
            const e = sl(Wv);
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)(E5, {
                    summaries: e.passengerSummaries
                }), (0, z.jsx)(_5, {
                    summaries: e.cargoSummaries
                })]
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/transport-infoview-panel/transport-infoview-panel.tsx", {
            get TransportInfoviewPanel() {
                return j5
            },
            set TransportInfoviewPanel(e) {
                j5 = e
            }
        });
        var S5 = () => (0, z.jsxs)(z.Fragment, {
            children: [(0, z.jsx)(C5, {}), (0, z.jsx)(w5, {}), (0, z.jsx)(N5, {}), (0, z.jsx)(O5, {})]
        });
        const C5 = () => {
                const e = sl(vv),
                    t = sl(_v),
                    n = sl(Sv);
                return (0, z.jsx)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.WaterInfoPanel.WATER_AVAILABILITY, {})
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.WATER_AVAILABILITY_TOOLTIP, {}),
                    supplyLabel: (0, z.jsx)(Pc.InfoPanels.OUTPUT, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: e,
                        unit: Oc.VolumePerMonth
                    }),
                    demandLabel: (0, z.jsx)(Pc.InfoPanels.CONSUMPTION, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: t,
                        unit: Oc.VolumePerMonth
                    }),
                    availability: n
                })
            },
            N5 = () => {
                const e = sl(bv),
                    t = sl(Tv),
                    n = sl(jv);
                return (0, z.jsx)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.WaterInfoPanel.SEWAGE_TREATMENT, {})
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.SEWAGE_TREATMENT_TOOLTIP, {}),
                    supplyLabel: (0, z.jsx)(Pc.InfoPanels.PROCESSING, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: e,
                        unit: Oc.VolumePerMonth
                    }),
                    demandLabel: (0, z.jsx)(Pc.InfoPanels.PRODUCTION, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: t,
                        unit: Oc.VolumePerMonth
                    }),
                    availability: n
                })
            },
            w5 = () => {
                const e = sl(Ev),
                    t = sl(Iv),
                    n = sl(Cv);
                return (0, z.jsx)(h2, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.WaterInfoPanel.WATER_TRADE, {})
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.WATER_TRADE_TOOLTIP, {}),
                    supplyLabel: (0, z.jsx)(Pc.WaterInfoPanel.WATER_EXPORT, {}),
                    supplyValue: (0, z.jsx)(Gc, {
                        value: e,
                        unit: Oc.VolumePerMonth
                    }),
                    demandLabel: (0, z.jsx)(Pc.WaterInfoPanel.WATER_IMPORT, {}),
                    demandValue: (0, z.jsx)(Gc, {
                        value: t,
                        unit: Oc.VolumePerMonth
                    }),
                    availability: n
                })
            },
            O5 = () => {
                const e = sl(yv),
                    t = {
                        min: sl(Tv),
                        max: 0,
                        current: e
                    };
                return (0, z.jsx)(Q1, {
                    title: (0, z.jsx)(M1, {
                        uppercase: !0,
                        text: (0, z.jsx)(Pc.WaterInfoPanel.SEWAGE_TRADE, {}),
                        rightText: (0, z.jsx)(Gc, {
                            value: e,
                            unit: Oc.VolumePerMonth
                        })
                    }),
                    tooltip: (0, z.jsx)(Pc.Infoviews.SEWAGE_TRADE_TOOLTIP, {}),
                    value: t,
                    gradient: V1
                })
            };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/water-infoview-panel.tsx", {
            get WaterInfoviewPanel() {
                return S5
            },
            set WaterInfoviewPanel(e) {
                S5 = e
            }
        });
        var P5 = () => {
            const e = sl(f_);
            return (0, z.jsx)(Q1, {
                title: (0, z.jsx)(M1, {
                    uppercase: !0,
                    text: (0, z.jsx)(Pc.WaterPollutionInfoPanel.AVERAGE_WATER_POLLUTION, {}),
                    rightText: (0, z.jsx)($u, {
                        value: e.current,
                        max: e.max
                    })
                }),
                tooltip: (0, z.jsx)(Pc.Infoviews.AVERAGE_WATER_POLLUTION_TOOLTIP, {}),
                value: e,
                gradient: k1
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/water-pollution-infoview-panel.tsx", {
            get WaterPollutionInfoviewPanel() {
                return P5
            },
            set WaterPollutionInfoviewPanel(e) {
                P5 = e
            }
        });
        let L5 = {
            "info-piechart": "info-piechart_wXd",
            infoPiechart: "info-piechart_wXd",
            content: "content__L_",
            pie: "pie_WkN",
            legends: "legends_pVz",
            legend: "legend_fqG"
        };
        X.add("game-ui/common/charts/pie-chart/info-piechart.module.scss", {
            get classes() {
                return L5
            },
            set classes(e) {
                Object.assign(L5, e)
            }
        });
        const A5 = L5;
        var M5 = ["#808080", "#b09868", "#368a2e", "#b981c0", "#5796d1", "#FFFFFF33"],
            R5 = [(0, z.jsx)(Pc.EducationInfoPanel.LEVEL, {
                hash: "Uneducated"
            }), (0, z.jsx)(Pc.EducationInfoPanel.LEVEL, {
                hash: "Poorly Educated"
            }), (0, z.jsx)(Pc.EducationInfoPanel.LEVEL, {
                hash: "Educated"
            }), (0, z.jsx)(Pc.EducationInfoPanel.LEVEL, {
                hash: "Well Educated"
            }), (0, z.jsx)(Pc.EducationInfoPanel.LEVEL, {
                hash: "Highly Educated"
            }), (0, z.jsx)(Pc.SelectedInfoPanel.OPEN_POSITIONS, {})];
        X.add("game-ui/common/charts/pie-chart/workplaces-pie-charts.tsx", {
            get workplacesPieChartColors() {
                return M5
            },
            set workplacesPieChartColors(e) {
                M5 = e
            },
            get workplacesPieChartLabels() {
                return R5
            },
            set workplacesPieChartLabels(e) {
                R5 = e
            }
        });
        var k5 = () => {
            const e = sl(Eb),
                t = sl(Ib),
                n = sl(yb),
                s = sl(jb);
            return (0, z.jsxs)(X1, {
                tooltip: (0, z.jsx)(Pc.Infoviews.WORKPLACE_DISTRIBUTION_TOOLTIP, {}),
                children: [(0, z.jsx)(M1, {
                    uppercase: !0,
                    text: (0, z.jsx)(Pc.WorkplacesInfoPanel.WORKPLACE_DISTRIBUTION, {})
                }), (0, z.jsx)(u2, {
                    colors: M5,
                    labels: R5,
                    data: t,
                    customLegend: t.values.map(((n, s) => (e.values[s] > 0 || s === t.values.length - 1) && (0, z.jsxs)("div", {
                        className: A5.legend,
                        children: [(0, z.jsx)(yR, {
                            color: M5[s],
                            label: R5[s]
                        }), s < t.values.length - 1 ? (0, z.jsx)(cu, {
                            value: n,
                            total: e.values[s],
                            unit: Oc.Integer
                        }) : (0, z.jsx)(Gc, {
                            value: n,
                            unit: Oc.Integer
                        })]
                    }, s)))
                }), (0, z.jsx)(P1, {}), (0, z.jsx)(M1, {
                    small: !0,
                    text: (0, z.jsx)(Pc.WorkplacesInfoPanel.WORKPLACES, {}),
                    rightText: (0, z.jsx)(Gc, {
                        value: n,
                        unit: Oc.Integer
                    })
                }), (0, z.jsx)(M1, {
                    small: !0,
                    text: (0, z.jsx)(Pc.WorkplacesInfoPanel.WORKERS, {}),
                    rightText: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.Integer
                    })
                })]
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/panels/workplaces-infoview-panel.tsx", {
            get WorkplacesInfoviewPanel() {
                return k5
            },
            set WorkplacesInfoviewPanel(e) {
                k5 = e
            }
        });
        let D5 = {
            title: "title_HFc",
            "active-infoview-panel": "active-infoview-panel_aTq",
            activeInfoviewPanel: "active-infoview-panel_aTq",
            "infomodes-panel": "infomodes-panel_B0O",
            infomodesPanel: "infomodes-panel_B0O",
            scrollable: "scrollable_wt8"
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/active-infoview-panel.module.scss", {
            get classes() {
                return D5
            },
            set classes(e) {
                Object.assign(D5, e)
            }
        });
        const F5 = D5;
        var U5 = ({
            focusKey: e,
            className: t,
            onClose: n,
            transition: s,
            allowFocusExit: i,
            scrollable: a = !0
        }) => {
            const o = E1(kb.PhotoMode),
                r = wp(sl(iv)),
                l = (0, Y.useMemo)((() => function (e) {
                    switch (e?.id) {
                    case "Electricity":
                        return (0, z.jsx)(f2, {});
                    case "WaterPipes":
                        return (0, z.jsx)(S5, {});
                    case "Transport":
                        return (0, z.jsx)(j5, {});
                    case "Education":
                        return (0, z.jsx)(g2, {});
                    case "Healthcare":
                        return (0, z.jsx)(j2, {});
                    case "Garbage":
                        return (0, z.jsx)(v2, {});
                    case "Roads":
                        return (0, z.jsx)(o5, {});
                    case "Traffic":
                        return (0, z.jsx)(f5, {});
                    case "AirPollution":
                        return (0, z.jsx)(Z1, {});
                    case "GroundPollution":
                        return (0, z.jsx)(T2, {});
                    case "WaterPollution":
                        return (0, z.jsx)(P5, {});
                    case "NoisePollution":
                        return (0, z.jsx)(Z2, {});
                    case "FireRescue":
                        return (0, z.jsx)(x2, {});
                    case "Police":
                        return (0, z.jsx)(t5, {});
                    case "LandValue":
                        return (0, z.jsx)(w2, {});
                    case "Level":
                        return (0, z.jsx)(q2, {});
                    case "DisasterControl":
                        return (0, z.jsx)(s2, {});
                    case "Tourism":
                        return (0, z.jsx)(r5, {});
                    case "PostService":
                        return (0, z.jsx)(a5, {});
                    case "Population":
                        return (0, z.jsx)(i5, {});
                    case "Extractors":
                        return (0, z.jsx)(X2, {});
                    case "OutsideConnections":
                        return (0, z.jsx)(e5, {});
                    case "Profitability":
                        return (0, z.jsx)(J1, {});
                    case "Workplaces":
                        return (0, z.jsx)(k5, {});
                    case "Happiness":
                        return (0, z.jsx)(y2, {});
                    default:
                        return null
                    }
                }(r)), [r]),
                c = (0, Y.useCallback)((() => n()), [n]),
                u = (0, Y.useMemo)((() => r ? `${kx.value?.infoviewsPanel}+${r.uiTag}` : void 0), [r]);
            rg(u, null != r);
            const d = r && !o.visible,
                m = d && (0, z.jsx)(Dg, {
                    onAction: c,
                    children: (0, z.jsxs)(tp, {
                        allowLooping: !0,
                        children: [l, r.infomodes.length > 0 && (0, z.jsxs)("div", {
                            className: F5.infomodesPanel,
                            children: [(0, z.jsx)(M1, {
                                text: (0, z.jsx)(Pc.Infoviews.MAP_LEGEND, {}),
                                uppercase: !0
                            }), (0, z.jsx)(P1, {}), r?.infomodes.map((e => (0, z.jsx)(C1, {
                                focusKey: e.id,
                                infomode: e
                            }, e.id)))]
                        })]
                    })
                });
            return (0, z.jsx)(z.Fragment, {
                children: d && (0, z.jsx)(wx, {
                    uiTag: u,
                    children: (0, z.jsx)(YT, {
                        focusKey: e,
                        className: Zu()(F5.activeInfoviewPanel, t),
                        onClose: c,
                        header: (0, z.jsx)(QT, {
                            icon: r?.icon,
                            className: F5.title,
                            children: (0, z.jsx)(Pc.Infoviews.INFOVIEW, {
                                hash: r?.id || ""
                            })
                        }),
                        transition: s,
                        allowFocusExit: i,
                        showCloseHint: !0,
                        children: a ? (0, z.jsx)(ff, {
                            className: F5.scrollable,
                            children: m
                        }) : m
                    })
                })
            })
        };
        X.add("game-ui/game/components/infoviews/active-infoview-panel/active-infoview-panel.tsx", {
            get ActiveInfoviewPanel() {
                return U5
            },
            set ActiveInfoviewPanel(e) {
                U5 = e
            }
        });
        let B5 = {
            button: "button_FBo button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT toggle-states_DTm",
            icon: "icon_ZjN icon_soN icon_Iwk",
            locked: "locked_Tjl locked_H2O locked_dBl",
            item: "item_IYJ",
            lock: "lock_OBe",
            container: "container_Mil",
            hint: "hint_XjU",
            "hint-icon": "hint-icon_t5h",
            hintIcon: "hint-icon_t5h"
        };
        X.add("game-ui/game/components/infoviews/infoviews-button/infoview-button.module.scss", {
            get classes() {
                return B5
            },
            set classes(e) {
                Object.assign(B5, e)
            }
        });
        const G5 = B5,
            V5 = {
                hint: G5.hint,
                icon: G5.hintIcon
            };
        var H5 = ({
            infoview: e,
            selected: t,
            onSelect: n,
            bypassLocking: s
        }) => {
            const [i, a] = (0, Y.useState)(!1), o = (0, Y.useCallback)((() => {
                n(t ? Lx : e.entity), ag(e.uiTag)
            }), [n, t, e.entity, e.uiTag]), r = !s && e.locked;
            return (0, z.jsx)(wx, {
                uiTag: e.uiTag,
                children: (0, z.jsx)($2, {
                    title: (0, z.jsx)(Pc.Infoviews.INFOVIEW, {
                        hash: e.id
                    }),
                    locked: r,
                    requirements: e.requirements,
                    direction: "up",
                    alignment: "end",
                    children: (0, z.jsx)(Ah, {
                        onFocusChange: a,
                        children: (0, z.jsxs)("div", {
                            className: G5.container,
                            children: [(0, z.jsx)(Pf, {
                                action: "Select",
                                active: i && !e.locked,
                                theme: V5
                            }), (0, z.jsx)(sf, {
                                disableHint: !0,
                                focusKey: e.id,
                                src: e.icon ?? "Media/Placeholder.svg",
                                disabled: r,
                                selected: t,
                                theme: G5,
                                onSelect: o,
                                className: Zu()(G5.item, r && G5.locked),
                                children: r && (0, z.jsx)(C$, {
                                    className: G5.lock
                                })
                            })]
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/infoviews/infoviews-button/infoview-button.tsx", {
            get InfoviewButton() {
                return H5
            },
            set InfoviewButton(e) {
                H5 = e
            }
        });
        let K5 = {
            "infoview-menu": "infoview-menu_LhU",
            infoviewMenu: "infoview-menu_LhU",
            "menu-column": "menu-column_VJk",
            menuColumn: "menu-column_VJk",
            menu: "menu_O_M",
            content: "content_Hzl",
            row: "row_B8G"
        };
        X.add("game-ui/game/components/infoviews/infoview-menu.module.scss", {
            get classes() {
                return K5
            },
            set classes(e) {
                Object.assign(K5, e)
            }
        });
        const W5 = K5,
            z5 = new Eg("INFOVIEWS"),
            Y5 = new Eg("ACTIVE_INFOVIEW");
        var $5 = ({
            className: e,
            onClose: t
        }) => {
            const n = sl(iv),
                s = (0, Y.useCallback)((() => {
                    null != n ? ov(Lx) : t()
                }), [n, t]);
            return (0, z.jsx)(Dg, {
                onAction: s,
                children: (0, z.jsx)(ap, {
                    focused: null != n ? Y5 : z5,
                    children: (0, z.jsxs)("div", {
                        className: Zu()(W5.infoviewMenu, e),
                        children: [(0, z.jsx)(q5, {
                            focusKey: z5
                        }), (0, z.jsx)(ly, {
                            in: null != n,
                            children: (0, z.jsx)(U5, {
                                focusKey: Y5,
                                onClose: rv
                            })
                        })]
                    })
                })
            })
        };
        const q5 = ({
                focusKey: e,
                className: t
            }) => {
                const n = Dm(),
                    [s, i] = (0, Y.useState)(!1);
                Qx(!s || !n), og(kx.value?.infoviewsMenu), rg(kx.value?.infoviewsMenu);
                const a = sl(sv),
                    o = sl(iv),
                    r = o?.id ?? null,
                    [l, c] = (0, Y.useState)(r);
                (0, Y.useEffect)((() => {
                    null != r && c(r)
                }), [r]);
                const u = a.reduce(((e, t) => (e[t.group] || (e[t.group] = []), e[t.group].push(t), e)), []);
                return (0, z.jsx)(wx, {
                    uiTag: kx.value?.infoviewsMenu,
                    children: (0, z.jsx)(YT, {
                        focusKey: e,
                        transitionSounds: cp,
                        className: Zu()(W5.menu, t),
                        contentClassName: W5.content,
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: i,
                            children: (0, z.jsx)(Qg, {
                                allowLooping: !0,
                                focused: l,
                                onChange: c,
                                onRefocus: Zg,
                                direction: Rg.Vertical,
                                children: u.map(((e, t) => (0, z.jsx)(X5, {
                                    infoviews: e,
                                    activeId: r
                                }, t)))
                            })
                        })
                    })
                })
            },
            X5 = ({
                infoviews: e,
                activeId: t
            }) => (0, z.jsx)(tp, {
                allowLooping: !0,
                direction: Rg.Horizontal,
                children: (0, z.jsx)("div", {
                    className: W5.row,
                    children: e.map((e => (0, z.jsx)(H5, {
                        infoview: e,
                        selected: e.id === t,
                        onSelect: ov
                    }, e.id)))
                })
            });
        var Q5 = ({
            className: e,
            onSelect: t
        }) => {
            const n = sl(sv),
                s = sl(iv),
                i = s?.id ?? null,
                [a, o] = (0, Y.useState)(i),
                r = n.filter((e => e.editor)).map((e => (0, z.jsx)(H5, {
                    infoview: e,
                    selected: e.id === i,
                    onSelect: t,
                    bypassLocking: !0
                }, e.id)));
            return 0 === r.length ? null : (0, z.jsx)(YT, {
                transitionSounds: cp,
                className: e,
                contentClassName: W5.content,
                allowFocusExit: !0,
                showCloseHint: !0,
                children: (0, z.jsx)(Qg, {
                    focused: a,
                    onChange: o,
                    direction: Rg.Horizontal,
                    children: (0, z.jsx)(ff, {
                        horizontal: !0,
                        vertical: !1,
                        children: (0, z.jsx)("div", {
                            className: W5.row,
                            children: r
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/infoviews/infoview-menu.tsx", {
            get InfoviewMenu() {
                return $5
            },
            set InfoviewMenu(e) {
                $5 = e
            },
            get EditorInfoviewMenu() {
                return Q5
            },
            set EditorInfoviewMenu(e) {
                Q5 = e
            }
        });
        let Z5 = {
            itemHeight: "30rem",
            hierarchy: "hierarchy_vuK",
            item: "item_Ksl",
            "item-label": "item-label_GTI",
            itemLabel: "item-label_GTI",
            "arrow-container": "arrow-container_Mio",
            arrowContainer: "arrow-container_Mio",
            arrow: "arrow_wix",
            expanded: "expanded_YQt",
            bullet: "bullet_B3F",
            title: "title_THo",
            placeholder: "placeholder_bdR",
            actions: "actions_Qtv",
            "action-button": "action-button_irO item-states_QjV",
            actionButton: "action-button_irO item-states_QjV"
        };
        X.add("game-ui/editor/components/hierarchy/hierarchy.module.scss", {
            get classes() {
                return Z5
            },
            set classes(e) {
                Object.assign(Z5, e)
            }
        });
        const J5 = Z5;
        var e3 = ({
            className: e
        }) => {
            const t = sl(oQ),
                n = TK(Vm(J5.itemHeight), t, 10),
                s = sl(lQ),
                i = sl(rQ),
                a = function (e, t) {
                    const n = e.items.findIndex((e => _Q(e.id, t)));
                    return -1 !== n ? e.startIndex + n : null
                }(s, i),
                o = (0, Y.useCallback)((e => {
                    const t = e - s.startIndex;
                    if (t >= 0 && t < s.items.length) {
                        const n = s.items[t];
                        return (0, z.jsx)(t3, {
                            index: e,
                            data: n,
                            selected: _Q(n.id, i),
                            onSelect: dQ,
                            onToggleExpanded: mQ
                        }, e)
                    }
                    return (0, z.jsx)(n3, {}, e)
                }), [i, s.items, s.startIndex]),
                r = (0, Y.useCallback)(((e, t) => {
                    uQ(e, t)
                }), []);
            return (0, z.jsx)(tp, {
                direction: Rg.Vertical,
                initialFocused: a,
                children: (0, z.jsx)(vK, {
                    className: Zu()(J5.hierarchy, e),
                    sizeProvider: n,
                    renderItem: o,
                    onRenderedRangeChange: r
                })
            })
        };
        const t3 = ({
                index: e,
                data: t,
                selected: n,
                onSelect: s,
                onToggleExpanded: i
            }) => {
                const a = Dm(),
                    o = (0, Y.useCallback)((() => {
                        t.selectable || a ? s(t.id) : t.expandable && i(t.id, !t.expanded)
                    }), [t.expandable, t.expanded, t.id, t.selectable, a, s, i]),
                    r = (0, Y.useCallback)((() => {
                        i(t.id, !t.expanded), lp(rp.expandPanel)
                    }), [t.expanded, t.id, i]),
                    l = (0, Y.useMemo)((() => ({
                        [t.expanded ? "Collapse Group" : "Expand Group"]: t.expandable ? r : null
                    })), [t.expanded, t.expandable, r]);
                return (0, z.jsx)("div", {
                    className: Zu()(J5.item, {
                        [J5.expanded]: t.expanded,
                        selected: n
                    }),
                    style: {
                        "--level": t.level
                    },
                    onClick: o,
                    children: (0, z.jsx)(tp, {
                        direction: Rg.Horizontal,
                        focusKey: e,
                        children: (0, z.jsx)(Ag, {
                            actions: l,
                            children: (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(gu, {
                                    value: t.tooltip
                                }),
                                children: (0, z.jsxs)(Gp, {
                                    className: J5.itemLabel,
                                    selected: n,
                                    onSelect: o,
                                    children: [t.expandable ? (0, z.jsx)("div", {
                                        className: J5.arrowContainer,
                                        children: (0, z.jsx)("img", {
                                            src: "Media/Editor/HierarchyExpand.svg",
                                            className: J5.arrow,
                                            onClick: r
                                        })
                                    }) : (0, z.jsx)("img", {
                                        src: "Media/Editor/HierarchyNode.svg",
                                        className: J5.bullet
                                    }), (0, z.jsx)("div", {
                                        className: J5.title,
                                        children: (0, z.jsx)(gu, {
                                            value: t.name
                                        })
                                    })]
                                })
                            })
                        })
                    })
                })
            },
            n3 = () => (0, z.jsx)("div", {
                className: J5.placeholder
            });
        X.add("game-ui/editor/components/hierarchy/hierarchy.tsx", {
            get Hierarchy() {
                return e3
            },
            set Hierarchy(e) {
                e3 = e
            }
        });
        let s3 = {
            panel: "panel_Qoc",
            content: "content_taQ",
            hierarchy: "hierarchy_QwS"
        };
        X.add("game-ui/editor/components/hierarchy/hierarchy-panel.module.scss", {
            get classes() {
                return s3
            },
            set classes(e) {
                Object.assign(s3, e)
            }
        });
        const i3 = s3;
        var a3 = ({
            onClose: e,
            forceExpanded: t
        }) => (0, z.jsx)(Tp, {
            disabled: !1 === t,
            children: (0, z.jsx)(Dg, {
                onAction: e,
                children: (0, z.jsx)(wx, {
                    uiTag: kx.value?.workspaceTitleBar,
                    editor: !0,
                    children: (0, z.jsx)(hJ, {
                        theme: fJ,
                        headerText: (0, z.jsx)(Pc.Editor.WORKSPACE, {}),
                        className: i3.panel,
                        contentClassName: i3.content,
                        onClose: e,
                        allowFocusExit: !0,
                        expanded: t,
                        children: (0, z.jsx)(e3, {
                            className: i3.hierarchy
                        })
                    })
                })
            })
        });
        X.add("game-ui/editor/components/hierarchy/hierarchy-panel.tsx", {
            get HierarchyPanel() {
                return a3
            },
            set HierarchyPanel(e) {
                a3 = e
            }
        });
        let o3 = {
            minWidth: "200rem",
            maxWidth: "500rem",
            "top-panel-row": "top-panel-row_NFs",
            topPanelRow: "top-panel-row_NFs",
            "top-panel-column": "top-panel-column_zGK",
            topPanelColumn: "top-panel-column_zGK",
            "infoview-menu": "infoview-menu_CKL",
            infoviewMenu: "infoview-menu_CKL",
            "infoview-panel-transition-wrapper": "infoview-panel-transition-wrapper_mRB",
            infoviewPanelTransitionWrapper: "infoview-panel-transition-wrapper_mRB",
            enter: "enter_y8_",
            "exit-active": "exit-active_vMy",
            exitActive: "exit-active_vMy",
            "enter-active": "enter-active_wJ0",
            enterActive: "enter-active_wJ0",
            exit: "exit_AML",
            "active-infoview-menu": "active-infoview-menu_ds8",
            activeInfoviewMenu: "active-infoview-menu_ds8",
            "action-hints": "action-hints_Ttj",
            actionHints: "action-hints_Ttj"
        };
        X.add("game-ui/editor/components/editor-top-panels.module.scss", {
            get classes() {
                return o3
            },
            set classes(e) {
                Object.assign(o3, e)
            }
        });
        const r3 = o3;
        var l3 = ({
            onExitInfoviewFocus: e
        }) => {
            const t = sl(iv),
                n = (0, Y.useCallback)((() => {
                    ov(Lx)
                }), []),
                s = (0, Y.useCallback)((e => {
                    ov(e)
                }), []),
                i = Vm(r3.minWidth),
                a = Vm(r3.maxWidth),
                o = sl(aQ),
                r = Hm(),
                l = (0, Y.useCallback)((e => cQ(Math.round(e / r))), [r]),
                c = Dm();
            return (0, z.jsxs)("div", {
                className: r3.topPanelRow,
                children: [(0, z.jsxs)(p1, {
                    width: o * r,
                    minWidth: i,
                    maxWidth: a,
                    direction: "right",
                    onResize: l,
                    className: r3.topPanelColumn,
                    children: [(0, z.jsx)(Dg, {
                        onAction: e,
                        children: (0, z.jsxs)(tp, {
                            focusKey: npe,
                            children: [(0, z.jsx)(wx, {
                                uiTag: kx.value?.editorInfoViewsPanel,
                                editor: !0,
                                children: (0, z.jsx)(Q5, {
                                    className: r3.infoviewMenu,
                                    onSelect: s
                                })
                            }), (0, z.jsx)(ly, {
                                in: null !== t,
                                children: (0, z.jsx)(ry, {
                                    styles: r3,
                                    children: (0, z.jsx)("div", {
                                        className: r3.infoviewPanelTransitionWrapper,
                                        children: (0, z.jsx)(U5, {
                                            className: r3.activeInfoviewMenu,
                                            onClose: n,
                                            transition: null,
                                            scrollable: !0,
                                            allowFocusExit: !0
                                        })
                                    })
                                })
                            })]
                        })
                    }), (0, z.jsx)(a3, {
                        forceExpanded: null === t && void 0
                    })]
                }), (0, z.jsx)(Gx, {
                    disabled: !c,
                    className: r3.actionHints,
                    excludedActions: Bx
                })]
            })
        };

        function c3(e = !1) {
            (0, Y.useEffect)((() => {
                if (!e) {
                    const e = () => {},
                        t = bO.subscribe(e);
                    return () => {
                        t?.dispose()
                    }
                }
            }), [e])
        }
        X.add("game-ui/editor/components/editor-top-panels.tsx", {
            get EditorTopPanels() {
                return l3
            },
            set EditorTopPanels(e) {
                l3 = e
            }
        }), X.add("game-ui/common/hooks/use-simulation-paused-barrier.tsx", {
            get useSimulationPausedBarrier() {
                return c3
            },
            set useSimulationPausedBarrier(e) {
                c3 = e
            }
        });
        var u3 = ({
            ...e
        }) => (0, z.jsx)(sf, {
            ...e,
            tinted: !0,
            theme: CI
        });
        X.add("game-ui/common/input/button/floating-icon-button.tsx", {
            get FloatingIconButton() {
                return u3
            },
            set FloatingIconButton(e) {
                u3 = e
            }
        });
        var d3, m3, h3, g3 = "tooltip",
            p3 = $r(g3, "groups", []);
        ! function (e) {
            e[e.Start = 0] = "Start", e[e.Center = 1] = "Center", e[e.End = 2] = "End"
        }(d3 || (d3 = {})),
        function (e) {
            e[e.Info = 0] = "Info", e[e.Success = 1] = "Success", e[e.Warning = 2] = "Warning", e[e.Error = 3] = "Error"
        }(m3 || (m3 = {})),
        function (e) {
            e.Number = "Game.UI.Tooltip.NumberTooltip", e.Progress = "Game.UI.Tooltip.ProgressTooltip", e.String = "Game.UI.Tooltip.StringTooltip", e.Name = "Game.UI.Tooltip.NameTooltip", e.Notification = "Game.UI.Tooltip.NotificationTooltip", e.ZoningEvaluation = "Game.UI.Tooltip.ZoningEvaluationTooltip"
        }(h3 || (h3 = {})), X.add("game-ui/common/data-binding/tooltip-bindings.ts", {
            get tooltipGroup() {
                return g3
            },
            set tooltipGroup(e) {
                g3 = e
            },
            get tooltipGroups() {
                return tooltipGroups
            },
            set tooltipGroups(e) {
                tooltipGroups = e
            },
            get TooltipGroupAlignment() {
                return d3
            },
            set TooltipGroupAlignment(e) {
                d3 = e
            },
            get TooltipColor() {
                return m3
            },
            set TooltipColor(e) {
                m3 = e
            },
            get TooltipType() {
                return h3
            },
            set TooltipType(e) {
                h3 = e
            }
        });
        var f3 = (e, t) => {
            let n = null,
                s = -1;
            const i = a => {
                n || (n = a);
                a - n >= t ? e() : s = requestAnimationFrame(i)
            };
            return s = requestAnimationFrame(i), () => {
                cancelAnimationFrame(s)
            }
        };
        X.add("game-ui/common/utils/wait.ts", {
            get wait() {
                return f3
            },
            set wait(e) {
                f3 = e
            }
        });
        let x3 = {
            showDelay: "100ms",
            "group-container": "group-container_Fl2 tooltip-fade-in_S9n",
            groupContainer: "group-container_Fl2 tooltip-fade-in_S9n",
            group: "group_zcS",
            gamepad: "gamepad_kHF",
            item: "item_k3Z tooltip-base_zwi",
            "row-item": "row-item_oHU item_k3Z tooltip-base_zwi",
            rowItem: "row-item_oHU item_k3Z tooltip-base_zwi",
            icon: "icon_Blg",
            "score-indicator": "score-indicator_i6X",
            scoreIndicator: "score-indicator_i6X",
            positive: "positive_Uf2",
            negative: "negative_pRC",
            label: "label_zet",
            value: "value_uLz",
            success: "success_bHA",
            warning: "warning_e1p",
            error: "error_NkQ",
            paragraphs: "paragraphs_LK4",
            hint: "hint_l_F"
        };
        X.add("game-ui/common/tooltip/tooltip-renderer/tooltip-renderer.module.scss", {
            get classes() {
                return x3
            },
            set classes(e) {
                Object.assign(x3, e)
            }
        });
        const v3 = x3,
            _3 = parseInt(v3.showDelay),
            b3 = [!1, null];
        var T3 = ({
                disabled: e
            }) => {
                const [t, n] = (0, Y.useState)(p3.value), s = Um(), i = VA(g3), a = (0, Y.useCallback)((e => {
                    n((t => {
                        const [n, s] = function (e, t) {
                            if (e.length !== t.length) return b3;
                            const n = [];
                            for (let s = 0; s < e.length; s++) {
                                const i = e[s],
                                    a = t[s];
                                if (!Kr(i.props, a.props, 2)) {
                                    if (i.children.length !== a.children.length) return b3;
                                    if (!Kr(i.children, a.children, 4)) return b3;
                                    if (!Kr({
                                            ...i.props,
                                            position: void 0
                                        }, {
                                            ...a.props,
                                            position: void 0
                                        }, 4)) return b3;
                                    n.push(t[s])
                                }
                            }
                            return n.length !== e.length ? b3 : [!0, n]
                        }(t, e);
                        if (n) {
                            if (null !== s)
                                for (let e = 0; e < s.length; e++) {
                                    const n = s[e],
                                        i = document.querySelector(`#tooltip-${e}`);
                                    if (i) i.style.transform = `translate(${n.props.position.x}px, ${n.props.position.y}px)`;
                                    else {
                                        const e = t.find((e => e.path === n.path));
                                        e && (e.props.position = n.props.position)
                                    }
                                }
                            return t
                        }
                        return e
                    }))
                }), []);
                return ol(p3, a), (0, z.jsx)(z.Fragment, {
                    children: !e && t.map(((e, t) => function (e, t) {
                        return e.x > -.1 * t.x && e.x < 1.1 * t.x && e.y > -.1 * t.y && e.y < 1.1 * t.y
                    }(e.props.position, s) ? (0, z.jsx)(E3, {
                        parent: i,
                        indexId: t,
                        ...e
                    }, e.path) : void 0))
                })
            },
            E3 = ({
                parent: e,
                path: t,
                props: n,
                children: s,
                indexId: i
            }) => {
                const a = HA(e, t),
                    [o, r] = (0, Y.useState)(!1),
                    l = Dm(),
                    c = (0, Y.useMemo)((() => o ? {
                        container: {
                            transform: `translate(${n.position.x}px, ${n.position.y}px)`,
                            justifyContent: I3(n.verticalAlignment),
                            alignItems: I3(n.horizontalAlignment)
                        },
                        group: {
                            alignItems: I3(n.horizontalAlignment)
                        }
                    } : {}), [n, o]);
                return (0, Y.useEffect)((() => f3((() => r(!0)), _3)), []), o ? (0, z.jsx)("div", {
                    id: `tooltip-${i}`,
                    className: v3.groupContainer,
                    style: c.container,
                    children: (0, z.jsx)("div", {
                        className: Zu()(v3.group, l && v3.gamepad),
                        style: c.group,
                        children: (0, z.jsx)(ZA, {
                            parent: a,
                            components: N3,
                            data: s
                        })
                    })
                }) : null
            };

        function I3(e) {
            switch (e) {
            case d3.Start:
                return "flex-start";
            case d3.Center:
                return "center";
            case d3.End:
                return "flex-end";
            default:
                return "center"
            }
        }

        function y3(e) {
            return e > 0 ? "+" : e < 0 ? "−" : "±"
        }
        const j3 = {
                hint: v3.hint
            },
            S3 = ({
                icon: e,
                label: t,
                color: n = m3.Info,
                className: s,
                children: i
            }) => {
                const a = Dm(),
                    o = sl(wm).find((e => "Default Tool" === e.name.toString())),
                    r = !!o?.items.length && a;
                return (0, z.jsxs)("div", {
                    className: Zu()(v3.rowItem, s),
                    children: [r && (0, z.jsx)(If, {
                        modifiers: o.items[0].modifiers,
                        bindings: o.items[0].bindings,
                        theme: j3
                    }), e && (0, z.jsx)("img", {
                        src: e,
                        className: v3.icon
                    }), t && (0, z.jsx)("div", {
                        className: v3.label,
                        children: (0, z.jsx)(gu, {
                            value: t
                        })
                    }), (0, z.jsx)("div", {
                        className: Zu()(v3.value, C3[n]),
                        children: i
                    })]
                })
            },
            C3 = [void 0, v3.success, v3.warning, v3.error];
        var N3 = {
            [h3.Number]: w3((({
                value: e,
                unit: t,
                signed: n,
                ...s
            }) => (0, z.jsx)(S3, {
                ...s,
                children: (0, z.jsx)(Gc, {
                    value: e,
                    unit: t,
                    signed: n
                })
            }))),
            [h3.Progress]: w3((({
                value: e,
                max: t,
                unit: n,
                omitMax: s,
                ...i
            }) => {
                const a = !s || e !== t;
                return (0, z.jsx)(S3, {
                    ...i,
                    children: a ? (0, z.jsx)(cu, {
                        value: e,
                        total: t,
                        unit: n
                    }) : (0, z.jsx)(Gc, {
                        value: e,
                        unit: n
                    })
                })
            })),
            [h3.String]: w3((({
                value: e,
                ...t
            }) => (0, z.jsx)(S3, {
                ...t,
                children: (0, z.jsx)(zf, {
                    className: v3.paragraphs,
                    children: (0, z.jsx)(gu, {
                        value: e
                    })
                })
            }))),
            [h3.Name]: w3((({
                icon: e,
                name: t
            }) => (0, z.jsx)(S3, {
                icon: e,
                children: (0, z.jsx)(Ku, {
                    value: t
                })
            }))),
            [h3.Notification]: w3((({
                name: e,
                color: t,
                verbose: n
            }) => n ? (0, z.jsx)("div", {
                className: v3.item,
                children: (0, z.jsx)(DY, {
                    title: (0, z.jsx)(Pc.Notifications.TITLE, {
                        hash: e
                    }),
                    description: (0, z.jsx)(Pc.Notifications.DESCRIPTION, {
                        hash: e
                    })
                })
            }) : (0, z.jsx)(S3, {
                color: t,
                children: (0, z.jsx)(Pc.Notifications.TITLE, {
                    hash: e
                })
            }))),
            [h3.ZoningEvaluation]: w3((({
                factor: e,
                score: t
            }) => (0, z.jsxs)("div", {
                className: v3.rowItem,
                children: [(0, z.jsx)("div", {
                    className: Zu()(v3.scoreIndicator, t >= 0 ? v3.positive : v3.negative),
                    children: y3(t)
                }), (0, z.jsx)("div", {
                    className: v3.value,
                    children: t >= 0 ? (0, z.jsx)(Pc.ZoningFactors.POSITIVE, {
                        hash: e
                    }) : (0, z.jsx)(Pc.ZoningFactors.NEGATIVE, {
                        hash: e
                    })
                })]
            })))
        };

        function w3(e) {
            const t = e,
                n = ({
                    props: e
                }) => (0, z.jsx)(t, {
                    ...e
                });
            return n.displayName = e.displayName ?? e.name, n
        }
        X.add("game-ui/common/tooltip/tooltip-renderer/tooltip-renderer.tsx", {
            get TooltipRenderer() {
                return T3
            },
            set TooltipRenderer(e) {
                T3 = e
            },
            get BoundTooltipGroup() {
                return E3
            },
            set BoundTooltipGroup(e) {
                E3 = e
            },
            get tooltipComponents() {
                return N3
            },
            set tooltipComponents(e) {
                N3 = e
            }
        });
        let O3 = {
            base: "base_USz",
            enter: "enter_HYB",
            "exit-active": "exit-active_hp7",
            exitActive: "exit-active_hp7",
            "enter-active": "enter-active_fw8",
            enterActive: "enter-active_fw8",
            exit: "exit_N8B"
        };
        X.add("game-ui/menu/transitions/expand-fade.module.scss", {
            get classes() {
                return O3
            },
            set classes(e) {
                Object.assign(O3, e)
            }
        });
        const P3 = O3;
        let L3 = {
            base: "base_mxi",
            enter: "enter_H6J",
            "exit-active": "exit-active_jeC",
            exitActive: "exit-active_jeC",
            "enter-active": "enter-active_YSl",
            enterActive: "enter-active_YSl",
            exit: "exit_OM8",
            "achievements-warning-row": "achievements-warning-row_p2C",
            achievementsWarningRow: "achievements-warning-row_p2C",
            "achievements-warning": "achievements-warning_Gp9",
            achievementsWarning: "achievements-warning_Gp9",
            space: "space_qhY"
        };
        X.add("game-ui/menu/components/shared/game-options/achievements-warning.module.scss", {
            get classes() {
                return L3
            },
            set classes(e) {
                Object.assign(L3, e)
            }
        });
        const A3 = L3;
        var M3 = ({
                modsEnabled: e = !1,
                pastModsEnabled: t = !1,
                unlockAll: n = !1,
                unlimitedMoney: s = !1,
                unlockMapTiles: i = !1
            }) => (0, z.jsx)(ly, {
                in: e || t || n || s || i,
                children: (0, z.jsx)(ry, {
                    styles: A3,
                    children: (0, z.jsxs)("div", {
                        className: A3.achievementsWarningRow,
                        children: [(0, z.jsx)(R3, {
                            modsEnabled: e,
                            pastModsEnabled: t,
                            unlimitedMoney: s,
                            unlockAll: n,
                            unlockMapTiles: i,
                            autoHide: !1
                        }), (0, z.jsx)("div", {
                            className: A3.space
                        })]
                    })
                })
            }),
            R3 = ({
                modsEnabled: e,
                pastModsEnabled: t,
                unlockAll: n,
                unlimitedMoney: s,
                unlockMapTiles: i,
                className: a,
                autoHide: o = !0,
                loadGame: r = !1
            }) => {
                const l = sl(bE),
                    c = !!(n || s || i);
                if (o && !e && !t && !c) return null;
                const u = k3(e, !!t, c, r, l);
                return (0, z.jsx)("div", {
                    className: Zu()(A3.achievementsWarning, a),
                    children: u
                })
            };
        const k3 = (e, t, n, s, i) => e ? 0 != (i & uE.PS) ? (0, z.jsx)(Pc.Menu.ACHIEVEMENTS_WARNING_MODS_PS, {}) : (0, z.jsx)(Pc.Menu.ACHIEVEMENTS_WARNING_MODS, {}) : t ? 0 != (i & uE.PS) ? (0, z.jsx)(Pc.Menu.ACHIEVEMENTS_WARNING_PAST_MODS_PS, {}) : (0, z.jsx)(Pc.Menu.ACHIEVEMENTS_WARNING_PAST_MODS, {}) : s ? 0 != (i & uE.PS) ? (0, z.jsx)(Pc.Menu.ACHIEVEMENTS_WARNING_PAST_OPTIONS_PS, {}) : (0, z.jsx)(Pc.Menu.ACHIEVEMENTS_WARNING_PAST_OPTIONS, {}) : 0 != (i & uE.PS) ? (0, z.jsx)(Pc.Menu.ACHIEVEMENTS_WARNING_GAME_OPTIONS_PS, {}) : (0, z.jsx)(Pc.Menu.ACHIEVEMENTS_WARNING_GAME_OPTIONS, {});
        X.add("game-ui/menu/components/shared/game-options/achievements-warning.tsx", {
            get AchievementsWarning() {
                return M3
            },
            set AchievementsWarning(e) {
                M3 = e
            },
            get AchievementsWarningBanner() {
                return R3
            },
            set AchievementsWarningBanner(e) {
                R3 = e
            }
        });
        let D3 = {
            buttons: "buttons_vR9",
            button: "button_GlF"
        };
        X.add("game-ui/menu/components/shared/game-options/button/buttons-row.module.scss", {
            get classes() {
                return D3
            },
            set classes(e) {
                Object.assign(D3, e)
            }
        });
        const F3 = D3;
        var U3 = ({
            buttons: e,
            onSelect: t
        }) => (0, z.jsx)("div", {
            className: F3.buttons,
            children: e.map((e => (0, z.jsx)(B3, {
                item: e,
                onSelect: t
            }, e.id)))
        });
        const B3 = ({
            item: e,
            onSelect: t
        }) => {
            const n = (0, Y.useContext)(sE),
                s = (0, Y.useContext)(oq),
                i = (0, Y.useCallback)((() => s.onOptionMouseEnter(e.id)), [e.id, s]),
                a = (0, Y.useCallback)((() => s.onOptionMouseLeave(e.id)), [e.id, s]),
                o = (0, Y.useCallback)((() => t(e.id)), [e.id, t]),
                r = (0, Y.useCallback)((() => {
                    e.confirm ? n.showDialog((0, z.jsx)(jI, {
                        title: (0, z.jsx)(Pc.Common.WARNING, {}),
                        message: (0, z.jsx)(Pc.Options.WARNING, {
                            hash: e.id
                        }),
                        onConfirm: o
                    })) : t(e.id)
                }), [n, o, e.confirm, e.id, t]);
            return (0, z.jsx)(Gp, {
                focusKey: e.id,
                disabled: e.disabled,
                theme: lq,
                className: F3.button,
                onSelect: r,
                onMouseEnter: i,
                onMouseLeave: a,
                children: (0, z.jsx)(Pc.Options.OPTION, {
                    hash: e.id
                })
            })
        };
        X.add("game-ui/menu/components/shared/game-options/button/buttons-row.tsx", {
            get ButtonRow() {
                return U3
            },
            set ButtonRow(e) {
                U3 = e
            }
        });
        let G3 = {
            wrapper: "wrapper_onO",
            container: "container_kOI",
            input: "input_MMV",
            label: "label_qsp",
            hint: "hint_aHi"
        };
        X.add("game-ui/common/input/text/ellipsis-text-input/ellipsis-text-input.module.scss", {
            get classes() {
                return G3
            },
            set classes(e) {
                Object.assign(G3, e)
            }
        });
        const V3 = G3;
        var H3 = Y.forwardRef((function ({
            value: e,
            maxLength: t = 64,
            theme: n = LX,
            disableHint: s = !1,
            forceHint: i = !1,
            className: a,
            onFocus: o,
            onBlur: r,
            ...l
        }, c) {
            const [u, d] = (0, Y.useState)(!1), [m, h] = (0, Y.useState)(!1), g = AX(n), p = (0, Y.useCallback)((e => {
                d(!0), o && o(e)
            }), [o]), f = (0, Y.useCallback)((e => {
                d(!1), r && r(e)
            }), [r]);
            return (0, z.jsxs)("div", {
                className: Zu()(V3.wrapper, g.wrapper, a),
                children: [(0, z.jsx)(Pf, {
                    action: u ? "Back" : "Select",
                    active: !s && (m || i),
                    className: V3.hint
                }), (0, z.jsxs)(Ep, {
                    onFocusChange: h,
                    className: Zu()(V3.container, g.container),
                    children: [(0, z.jsx)(UE, {
                        ref: c,
                        value: e,
                        maxLength: t,
                        className: Zu()(V3.input, g.input),
                        onFocus: p,
                        onBlur: f,
                        ...l
                    }), (0, z.jsx)("div", {
                        className: Zu()(V3.label, g.label),
                        children: e || " "
                    })]
                })]
            })
        }));
        X.add("game-ui/common/input/text/ellipsis-text-input/ellipsis-text-input.tsx", {
            get EllipsisTextInput() {
                return H3
            },
            set EllipsisTextInput(e) {
                H3 = e
            }
        });
        var K3 = function (e, t) {
                return e < t ? -1 : e > t ? 1 : 0
            },
            W3 = function (e, t) {
                var n = e.localeCompare(t);
                return n ? n / Math.abs(n) : 0
            },
            z3 = /(^0x[\da-fA-F]+$|^([+-]?(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?(?!\.\d+)(?=\D|\s|$))|\d+)/g,
            Y3 = /^\s+|\s+$/g,
            $3 = /\s+/g,
            q3 = /^[+-]?(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?$/,
            X3 = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[/-]\d{1,4}[/-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,
            Q3 = /^0+[1-9]{1}[0-9]*$/,
            Z3 = /[^\x00-\x80]/,
            J3 = function (e, t) {
                return e < t ? -1 : e > t ? 1 : 0
            },
            e4 = function (e, t) {
                return e.value === t.value ? 0 : void 0 !== e.parsedNumber && void 0 !== t.parsedNumber ? K3(e.parsedNumber, t.parsedNumber) : e.chunks && t.chunks ? function (e, t) {
                    for (var n = e.length, s = t.length, i = Math.min(n, s), a = 0; a < i; a++) {
                        var o = e[a],
                            r = t[a];
                        if (o.normalizedString !== r.normalizedString) {
                            if ("" === o.normalizedString != ("" === r.normalizedString)) return "" === o.normalizedString ? -1 : 1;
                            if (void 0 !== o.parsedNumber && void 0 !== r.parsedNumber) {
                                var l = K3(o.parsedNumber, r.parsedNumber);
                                return 0 === l ? J3(o.normalizedString, r.normalizedString) : l
                            }
                            return void 0 !== o.parsedNumber || void 0 !== r.parsedNumber ? void 0 !== o.parsedNumber ? -1 : 1 : Z3.test(o.normalizedString + r.normalizedString) ? W3(o.normalizedString, r.normalizedString) : J3(o.normalizedString, r.normalizedString)
                        }
                    }
                    return n > i || s > i ? n <= i ? -1 : 1 : 0
                }(e.chunks, t.chunks) : function (e, t) {
                    return (e.chunks ? !t.chunks : t.chunks) ? e.chunks ? -1 : 1 : (e.isNaN ? !t.isNaN : t.isNaN) ? e.isNaN ? -1 : 1 : (e.isSymbol ? !t.isSymbol : t.isSymbol) ? e.isSymbol ? -1 : 1 : (e.isObject ? !t.isObject : t.isObject) ? e.isObject ? -1 : 1 : (e.isArray ? !t.isArray : t.isArray) ? e.isArray ? -1 : 1 : (e.isFunction ? !t.isFunction : t.isFunction) ? e.isFunction ? -1 : 1 : (e.isNull ? !t.isNull : t.isNull) ? e.isNull ? -1 : 1 : 0
                }(e, t)
            },
            t4 = function (e) {
                return e.replace($3, " ").replace(Y3, "")
            },
            n4 = function (e) {
                if (0 !== e.length) {
                    var t = Number(e);
                    if (!Number.isNaN(t)) return t
                }
            },
            s4 = function (e, t, n) {
                if (q3.test(e) && (!Q3.test(e) || 0 === t || "." !== n[t - 1])) return n4(e) || 0
            },
            i4 = function (e, t, n) {
                return {
                    parsedNumber: s4(e, t, n),
                    normalizedString: t4(e)
                }
            },
            a4 = function (e) {
                var t = function (e) {
                    return e.replace(z3, "\0$1\0").replace(/\0$/, "").replace(/^\0/, "").split("\0")
                }(e).map(i4);
                return t
            },
            o4 = function (e) {
                return "function" == typeof e
            },
            r4 = function (e) {
                return Number.isNaN(e) || e instanceof Number && Number.isNaN(e.valueOf())
            },
            l4 = function (e) {
                return null === e
            },
            c4 = function (e) {
                return !(null === e || "object" != typeof e || Array.isArray(e) || e instanceof Number || e instanceof String || e instanceof Boolean || e instanceof Date)
            },
            u4 = function (e) {
                return "symbol" == typeof e
            },
            d4 = function (e) {
                return void 0 === e
            },
            m4 = function (e) {
                var t = n4(e);
                return void 0 !== t ? t : function (e) {
                    if (X3.test(e)) {
                        var t = Date.parse(e);
                        if (!Number.isNaN(t)) return t
                    }
                }(e)
            },
            h4 = function (e) {
                if ("string" == typeof e || e instanceof String || ("number" == typeof e || e instanceof Number) && !r4(e) || "boolean" == typeof e || e instanceof Boolean || e instanceof Date) {
                    var t = function (e) {
                            return "boolean" == typeof e || e instanceof Boolean ? Number(e).toString() : "number" == typeof e || e instanceof Number ? e.toString() : e instanceof Date ? e.getTime().toString() : "string" == typeof e || e instanceof String ? e.toLowerCase().replace(Y3, "") : ""
                        }(e),
                        n = m4(t);
                    return {
                        parsedNumber: n,
                        chunks: a4(n ? "" + n : t),
                        value: e
                    }
                }
                return {
                    isArray: Array.isArray(e),
                    isFunction: o4(e),
                    isNaN: r4(e),
                    isNull: l4(e),
                    isObject: c4(e),
                    isSymbol: u4(e),
                    isUndefined: d4(e),
                    value: e
                }
            },
            g4 = function (e) {
                return function (t, n) {
                    var s = h4(t),
                        i = h4(n);
                    return e4(s, i) * ("desc" === e.order ? -1 : 1)
                }
            },
            p4 = function (e) {
                return "string" == typeof e && ("asc" === e || "desc" === e)
            },
            f4 = function (e) {
                var t = "asc";
                return "string" == typeof e && p4(e) ? t = e : e && "object" == typeof e && e.order && p4(e.order) && (t = e.order), {
                    order: t
                }
            };

        function x4(e) {
            var t = f4(e);
            return g4(t)
        }
        let v4 = {
            field: "field_zMw",
            header: "header__eC",
            icon: "icon_Aag",
            label: "label_aUL",
            content: "content_KQe",
            "value-icon": "value-icon_BcL",
            valueIcon: "value-icon_BcL"
        };
        X.add("game-ui/common/property-field/themes/resource-field.module.scss", {
            get classes() {
                return v4
            },
            set classes(e) {
                Object.assign(v4, e)
            }
        });
        const _4 = v4;
        var b4 = Y.createContext(_4),
            T4 = ({
                valueIcon: e,
                icon: t,
                tinted: n,
                label: s,
                theme: i,
                focusable: a = !1,
                className: o,
                children: r
            }) => {
                const l = (0, Y.useContext)(b4),
                    c = i ?? l;
                return (0, z.jsx)(xd, {
                    children: (0, z.jsxs)(Ip, {
                        focusKey: a ? yg : Ig,
                        className: Zu()(c.field, o),
                        children: [(t || s) && (0, z.jsxs)("div", {
                            className: c.header,
                            children: [t && (n ? (0, z.jsx)(ef, {
                                src: t,
                                className: c.icon
                            }) : (0, z.jsx)("img", {
                                src: t,
                                className: c.icon
                            })), s && (0, z.jsx)("div", {
                                className: c.label,
                                children: s
                            })]
                        }), (0, z.jsxs)("div", {
                            className: c.content,
                            children: [e && (0, z.jsx)("img", {
                                src: e,
                                className: c.valueIcon
                            }), r]
                        })]
                    })
                })
            };
        X.add("game-ui/common/property-field/property-field.tsx", {
            get PropertyFieldThemeContext() {
                return b4
            },
            set PropertyFieldThemeContext(e) {
                b4 = e
            },
            get PropertyField() {
                return T4
            },
            set PropertyField(e) {
                T4 = e
            }
        });
        let E4 = {
            "detail-section": "detail-section_aIw child-opacity-transition_nkS",
            detailSection: "detail-section_aIw child-opacity-transition_nkS",
            title: "title_eSB",
            image: "image_xzf",
            scrollable: "scrollable_zgX",
            "scrollable-content": "scrollable-content_lJB",
            scrollableContent: "scrollable-content_lJB",
            description: "description_dxc",
            field: "field_rvA",
            label: "label_Sfx",
            value: "value_TJa",
            ellipsis: "ellipsis_MBL",
            "theme-icon": "theme-icon_mTh",
            themeIcon: "theme-icon_mTh",
            "humidity-icon": "humidity-icon_jtJ",
            humidityIcon: "humidity-icon_jtJ",
            "scrollable-footer": "scrollable-footer_VMh",
            scrollableFooter: "scrollable-footer_VMh",
            footer: "footer_uQp",
            "footer-button": "footer-button_d4A",
            footerButton: "footer-button_d4A",
            "achievement-warning-banner": "achievement-warning-banner_lKw",
            achievementWarningBanner: "achievement-warning-banner_lKw",
            "achievement-warning-banner-container": "achievement-warning-banner-container_e0d",
            achievementWarningBannerContainer: "achievement-warning-banner-container_e0d"
        };
        X.add("game-ui/menu/components/shared/detail-section/detail-section.module.scss", {
            get classes() {
                return E4
            },
            set classes(e) {
                Object.assign(E4, e)
            }
        });
        const I4 = E4;
        var y4 = ({
                title: e,
                preview: t,
                content: n,
                footer: s,
                className: i
            }) => {
                const a = Y.Children.count(e) > 0,
                    o = Y.Children.count(n) > 0,
                    r = Y.Children.count(s) > 0;
                return (0, z.jsxs)("div", {
                    className: Zu()(I4.detailSection, i),
                    children: [a && (0, z.jsx)("div", {
                        className: I4.title,
                        children: e
                    }), null != t && (0, z.jsx)(qp, {
                        src: t,
                        className: I4.image
                    }), (0, z.jsx)(ff, {
                        autoScroll: !0,
                        className: I4.scrollable,
                        children: o && (0, z.jsxs)("div", {
                            className: I4.scrollableContent,
                            children: [n, !r && (0, z.jsx)("div", {
                                className: I4.scrollableFooter
                            })]
                        })
                    }), r && (0, z.jsx)("div", {
                        className: I4.footer,
                        children: s
                    })]
                })
            },
            j4 = ({
                label: e,
                ellipsis: t,
                children: n
            }) => (0, z.jsxs)("div", {
                className: I4.field,
                children: [(0, z.jsx)("div", {
                    className: I4.label,
                    children: e
                }), (0, z.jsx)("div", {
                    className: Zu()(I4.value, {
                        [I4.ellipsis]: t
                    }),
                    children: n
                })]
            }),
            S4 = ({
                disabled: e,
                children: t,
                className: n,
                onSelect: s
            }) => (0, z.jsx)(Gp, {
                focusKey: Ig,
                theme: LI,
                className: Zu()(I4.footerButton, n),
                disabled: e,
                onSelect: s,
                children: t
            });
        X.add("game-ui/menu/components/shared/detail-section/detail-section.tsx", {
            get DetailSection() {
                return y4
            },
            set DetailSection(e) {
                y4 = e
            },
            get Field() {
                return j4
            },
            set Field(e) {
                j4 = e
            },
            get FooterButton() {
                return S4
            },
            set FooterButton(e) {
                S4 = e
            }
        });
        let C4 = {
            field: "field_xlu",
            header: "header_iiq",
            icon: "icon_lom",
            label: "label_BcU",
            content: "content_q4e"
        };
        X.add("game-ui/menu/components/new-game-screen/map-detail/resource-list-item.module.scss", {
            get classes() {
                return C4
            },
            set classes(e) {
                Object.assign(C4, e)
            }
        });
        const N4 = C4;
        var w4, O4 = ({
            selectedMap: e,
            selectedTheme: t,
            activeStep: n,
            className: s,
            onContinue: i,
            onStartGameSelect: a
        }) => {
            const o = Dm(),
                r = sl(Lb);
            return (0, z.jsx)(y4, {
                className: s,
                title: null != e ? (0, z.jsx)(Pc.Maps.MAP_TITLE, {
                    hash: e.displayName,
                    fallback: e.displayName
                }) : void 0,
                preview: e?.preview,
                content: null != e ? (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)("div", {
                        className: I4.description,
                        children: (0, z.jsx)(Pc.Maps.MAP_DESCRIPTION, {
                            hash: e.displayName,
                            fallback: ""
                        })
                    }), null != t && (0, z.jsxs)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.THEME_LABEL, {}),
                        children: [(0, z.jsx)(FK, {
                            src: t.icon,
                            className: I4.themeIcon
                        }), (0, z.jsx)(Pc.Assets.THEME, {
                            hash: t.id
                        })]
                    }), (0, z.jsxs)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.CLIMATE_LABEL, {}),
                        children: [(0, z.jsx)("img", {
                            src: P4(e.cloudiness, e.precipitation),
                            className: I4.humidityIcon
                        }), (0, z.jsx)(au, {
                            ...e.temperatureRange,
                            unit: Oc.Temperature
                        })]
                    }), (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.LATITUDE_LABEL, {}),
                        children: L4(e.latitude)
                    }), (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.BUILDABLE_AREA_LABEL, {}),
                        children: (0, z.jsx)(Gc, {
                            value: Math.round(e.area > 0 ? e.buildableLand / e.area * 100 : 0),
                            unit: Oc.Percentage
                        })
                    }), (0, z.jsxs)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.CONNECTIONS_LABEL, {}),
                        children: [e.connections.road && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Road"
                            }),
                            children: (0, z.jsx)(T4, {
                                icon: "Media/Game/Icons/Roads.svg",
                                theme: N4
                            })
                        }), e.connections.train && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Train"
                            }),
                            children: (0, z.jsx)(T4, {
                                icon: "Media/Game/Icons/Train.svg",
                                theme: N4
                            })
                        }), e.connections.ship && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Ship"
                            }),
                            children: (0, z.jsx)(T4, {
                                icon: "Media/Game/Icons/Ship.svg",
                                theme: N4
                            })
                        }), e.connections.air && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Air"
                            }),
                            children: (0, z.jsx)(T4, {
                                icon: "Media/Game/Icons/Airplane.svg",
                                theme: N4
                            })
                        }), e.connections.electricity && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Electricity"
                            }),
                            children: (0, z.jsx)(T4, {
                                icon: "Media/Game/Icons/Electricity.svg",
                                theme: N4
                            })
                        }), e.connections.water && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Maps.OUTSIDE_CONNECTIONS, {
                                hash: "Water"
                            }),
                            children: (0, z.jsx)(T4, {
                                icon: "Media/Game/Icons/Water.svg",
                                theme: N4
                            })
                        })]
                    }), (0, z.jsxs)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.RESOURCES_LABEL, {}),
                        children: [e.resources.fertile >= .1 && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Maps.RESOURCE, {
                                hash: "Fertility"
                            }),
                            children: (0, z.jsx)(T4, {
                                icon: "Media/Game/Icons/Fertility.svg",
                                theme: N4,
                                children: (0, z.jsx)(Gc, {
                                    value: e.resources.fertile,
                                    unit: Oc.Area
                                })
                            })
                        }), e.resources.forest >= .1 && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Maps.RESOURCE, {
                                hash: "Forest"
                            }),
                            children: (0, z.jsx)(T4, {
                                icon: "Media/Game/Icons/Forest.svg",
                                theme: N4,
                                children: (0, z.jsx)(Gc, {
                                    value: e.resources.forest,
                                    unit: Oc.Weight
                                })
                            })
                        }), e.resources.ore >= .1 && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Maps.RESOURCE, {
                                hash: "Ore"
                            }),
                            children: (0, z.jsx)(T4, {
                                icon: "Media/Game/Icons/Ore.svg",
                                theme: N4,
                                children: (0, z.jsx)(Gc, {
                                    value: e.resources.ore,
                                    unit: Oc.Weight
                                })
                            })
                        }), e.resources.oil >= .1 && (0, z.jsx)(Tg, {
                            tooltip: (0, z.jsx)(Pc.Maps.RESOURCE, {
                                hash: "Oil"
                            }),
                            children: (0, z.jsx)(T4, {
                                icon: "Media/Game/Icons/Oil.svg",
                                theme: N4,
                                children: (0, z.jsx)(Gc, {
                                    value: e.resources.oil,
                                    unit: Oc.Weight
                                })
                            })
                        })]
                    })]
                }) : void 0,
                footer: null == e || o ? void 0 : n === q4.mapSelection ? (0, z.jsx)(S4, {
                    onSelect: i,
                    children: (0, z.jsx)(Pc.Menu.SELECT_MAP_BUTTON, {})
                }) : (0, z.jsx)(S4, {
                    onSelect: a,
                    disabled: !r,
                    children: (0, z.jsx)(Pc.Menu.START_GAME_BUTTON, {})
                })
            }, e?.id)
        };

        function P4(e, t) {
            const n = .25 * e + .75 * t;
            return n < .1 ? "Media/Game/Icons/Arid.svg" : n < .15 ? "Media/Game/Icons/SemiArid.svg" : n < .2 ? "Media/Game/Icons/SemiHumid.svg" : "Media/Game/Icons/Humid.svg"
        }

        function L4(e) {
            return e > 15 ? (0, z.jsx)(Pc.GameListScreen.HEMISPHERE_N, {}) : e < -15 ? (0, z.jsx)(Pc.GameListScreen.HEMISPHERE_S, {}) : (0, z.jsx)(Pc.GameListScreen.EQUATOR, {})
        }

        function A4(e, t) {
            const n = x4();
            return (t === w4.Downloaded || t === w4.Name ? A4(e, w4.LastModified) : e).sort(((e, s) => {
                switch (t) {
                case w4.LastModified:
                    return new Date(s.lastModified).getTime() - new Date(e.lastModified).getTime() || n(e.displayName, s.displayName);
                case w4.Population:
                    return s.population - e.population || n(e.displayName, s.displayName);
                case w4.Downloaded:
                    return "ParadoxMods" === s.cloudTarget ? 1 : -1;
                default:
                    return n(e.displayName, s.displayName)
                }
            }))
        }
        X.add("game-ui/menu/components/new-game-screen/map-detail/map-detail.tsx", {
                get MapDetail() {
                    return O4
                },
                set MapDetail(e) {
                    O4 = e
                }
            }),
            function (e) {
                e[e.Name = 0] = "Name", e[e.LastModified = 1] = "LastModified", e[e.Population = 2] = "Population", e[e.Downloaded = 3] = "Downloaded"
            }(w4 || (w4 = {})), X.add("game-ui/menu/components/shared/save-list-header/save-list-ordering.ts", {
                get Ordering() {
                    return w4
                },
                set Ordering(e) {
                    w4 = e
                },
                get sort() {
                    return A4
                },
                set sort(e) {
                    A4 = e
                }
            });
        let M4 = {
            "save-list-header": "save-list-header_f5S",
            saveListHeader: "save-list-header_f5S",
            "sort-label": "sort-label_KDJ",
            sortLabel: "sort-label_KDJ",
            "sort-buttons": "sort-buttons_vQU",
            sortButtons: "sort-buttons_vQU",
            "sort-button": "sort-button_UDY",
            sortButton: "sort-button_UDY"
        };
        X.add("game-ui/menu/components/shared/save-list-header/save-list-header.module.scss", {
            get classes() {
                return M4
            },
            set classes(e) {
                Object.assign(M4, e)
            }
        });
        const R4 = M4;
        var k4 = [w4.Name, w4.Population, w4.LastModified, w4.Downloaded],
            D4 = ({
                selectedOrdering: e,
                className: t,
                options: n,
                onSelectOrdering: s
            }) => (0, z.jsx)(B4, {
                label: (0, z.jsx)(Pc.Menu.SAVE_ORDERING_LABEL, {}),
                options: n,
                selectedOption: e,
                onSelectOption: s,
                getOptionLabel: e => (0, z.jsx)(Pc.Menu.SAVE_ORDERING, {
                    hash: w4[e]
                }),
                className: t
            }),
            F4 = ({
                targets: e,
                selectedTarget: t,
                className: n,
                onSelectTarget: s
            }) => (0, z.jsx)(B4, {
                label: (0, z.jsx)(Pc.Menu.CLOUD_TARGET_LABEL, {}),
                options: e,
                selectedOption: t,
                onSelectOption: s,
                getOptionLabel: e => (0, z.jsx)(Pc.Menu.CLOUD_TARGET, {
                    hash: e
                }),
                className: n
            }),
            U4 = ({
                categories: e,
                selectedCategory: t,
                className: n,
                onSelectCategory: s
            }) => (0, z.jsx)(B4, {
                label: "",
                options: e,
                selectedOption: t,
                onSelectOption: s,
                getOptionLabel: e => (0, z.jsx)(Pc.GameListScreen.MAP_FILTER, {
                    hash: QR[e]
                }),
                className: n
            });

        function B4({
            label: e,
            options: t,
            selectedOption: n,
            className: s,
            onSelectOption: i,
            getOptionLabel: a
        }) {
            return (0, z.jsxs)("div", {
                className: Zu()(R4.saveListHeader, s),
                children: [(0, z.jsx)("div", {
                    className: R4.sortLabel,
                    children: e
                }), (0, z.jsx)(I$, {
                    children: (0, z.jsx)("div", {
                        className: R4.sortButtons,
                        children: t.map(((e, t) => (0, z.jsx)(Gp, {
                            focusKey: Ig,
                            selected: n === e,
                            className: R4.sortButton,
                            onSelect: () => i(e),
                            children: a(e)
                        }, t)))
                    })
                })]
            })
        }
        X.add("game-ui/menu/components/shared/save-list-header/save-list-header.tsx", {
            get orderings() {
                return k4
            },
            set orderings(e) {
                k4 = e
            },
            get OrderingSaveListHeader() {
                return D4
            },
            set OrderingSaveListHeader(e) {
                D4 = e
            },
            get CloudTargetSaveListHeader() {
                return F4
            },
            set CloudTargetSaveListHeader(e) {
                F4 = e
            },
            get NewGameMapsSaveListHeader() {
                return U4
            },
            set NewGameMapsSaveListHeader(e) {
                U4 = e
            }
        });
        let G4 = {
            item: "item_6bQ",
            locked: "locked_llh",
            thumbnail: "thumbnail_jir",
            "theme-icon": "theme-icon__ST",
            themeIcon: "theme-icon__ST",
            "thumbnail-container": "thumbnail-container_JcP",
            thumbnailContainer: "thumbnail-container_JcP",
            vignette: "vignette_Gss",
            title: "title_DFa",
            "state-icon": "state-icon_Owl",
            stateIcon: "state-icon_Owl",
            prerequisites: "prerequisites_zXb",
            prerequisite: "prerequisite_sTj",
            hint: "hint_TVt"
        };
        X.add("game-ui/menu/components/new-game-screen/map-grid/map-item.module.scss", {
            get classes() {
                return G4
            },
            set classes(e) {
                Object.assign(G4, e)
            }
        });
        const V4 = G4;
        var H4 = ({
            map: e,
            locked: t,
            selected: n,
            onClick: s
        }) => {
            const i = (0, Y.useCallback)((() => s(e.id)), [e.id, s]),
                a = $K(e.cloudTarget, !1) ?? "",
                o = YK(e.cloudTarget),
                [r, l] = (0, Y.useState)(!1);
            return (0, z.jsx)(Ah, {
                onFocusChange: l,
                children: (0, z.jsxs)(Gp, {
                    disableHint: !0,
                    focusKey: e.id,
                    selected: n,
                    className: Zu()(V4.item, t && V4.locked),
                    onClick: i,
                    children: [(0, z.jsxs)("div", {
                        className: V4.thumbnailContainer,
                        children: [(0, z.jsx)(qp, {
                            src: e.thumbnail,
                            className: V4.thumbnail
                        }), (0, z.jsx)("div", {
                            className: V4.vignette
                        }), (0, z.jsx)(Pf, {
                            action: "Select",
                            active: r,
                            className: V4.hint
                        })]
                    }), (0, z.jsx)("div", {
                        className: V4.title,
                        children: (0, z.jsx)(Pc.Maps.MAP_TITLE, {
                            hash: e.displayName,
                            fallback: e.displayName
                        })
                    }), (0, z.jsx)(Sy, {
                        src: a,
                        className: V4.stateIcon,
                        tinted: o
                    }), e.contentPrerequisite?.length > 0 && (0, z.jsx)("div", {
                        className: V4.prerequisites,
                        children: e.contentPrerequisite.map(((e, t) => (0, z.jsx)("img", {
                            src: `Media/DLC/${e}.svg`,
                            className: V4.prerequisite
                        }, t)))
                    })]
                })
            })
        };
        X.add("game-ui/menu/components/new-game-screen/map-grid/map-item.tsx", {
            get MapItem() {
                return H4
            },
            set MapItem(e) {
                H4 = e
            }
        });
        let K4 = {
            "map-grid": "map-grid_EhO child-opacity-transition_nkS",
            mapGrid: "map-grid_EhO child-opacity-transition_nkS",
            scrollable: "scrollable_Wdh",
            content: "content_V7r",
            header: "header_pAC"
        };
        X.add("game-ui/menu/components/new-game-screen/map-grid/map-grid.module.scss", {
            get classes() {
                return K4
            },
            set classes(e) {
                Object.assign(K4, e)
            }
        });
        const W4 = K4;
        var z4 = Y.forwardRef((function ({
            focusKey: e,
            maps: t,
            filters: n,
            selectedMap: s,
            selectedFilter: i,
            className: a,
            onSelectMap: o,
            onSelectFilter: r
        }, l) {
            const c = (0, Y.useCallback)((e => {
                "string" == typeof e && o(e)
            }), [o]);
            return (0, z.jsx)("div", {
                ref: l,
                className: Zu()(W4.mapGrid, a),
                children: (0, z.jsxs)(ff, {
                    className: W4.scrollable,
                    children: [n.length >= 2 && (0, z.jsx)(U4, {
                        categories: n,
                        selectedCategory: i,
                        onSelectCategory: r,
                        className: W4.header
                    }), (0, z.jsx)("div", {
                        className: W4.content,
                        children: (0, z.jsx)(Qg, {
                            focusKey: e,
                            focused: s,
                            onChange: c,
                            children: t.map((e => (0, z.jsx)(H4, {
                                map: e,
                                locked: e.locked,
                                selected: e.id === s,
                                onClick: o
                            }, e.id)))
                        })
                    })]
                })
            })
        }));
        X.add("game-ui/menu/components/new-game-screen/map-grid/map-grid.tsx", {
            get MapGrid() {
                return z4
            },
            set MapGrid(e) {
                z4 = e
            }
        });
        let Y4 = {
            content: "content_bgM",
            "step-container": "step-container_NnT",
            stepContainer: "step-container_NnT",
            step: "step_QIP",
            detail: "detail_OCx",
            header: "header_mQE",
            "no-gamepad": "no-gamepad_nYD",
            noGamepad: "no-gamepad_nYD",
            title: "title_KQ_",
            tabs: "tabs_BJl",
            tab: "tab_COL",
            selected: "selected_s7w"
        };
        X.add("game-ui/menu/components/new-game-screen/new-game-screen.module.scss", {
            get classes() {
                return Y4
            },
            set classes(e) {
                Object.assign(Y4, e)
            }
        });
        const $4 = Y4;
        var q4, X4 = "Assets.CITY_NAME";
        ! function (e) {
            e[e.mapSelection = 0] = "mapSelection", e[e.mapOptions = 1] = "mapOptions"
        }(q4 || (q4 = {}));
        var Q4 = Y.forwardRef((function ({
            focusKey: e,
            className: t,
            onClose: n
        }, s) {
            const [i, a] = (0, Y.useState)(q4.mapSelection), o = J4(), [r, l] = (0, Y.useState)(YN(o, "id"));
            (0, Y.useEffect)((() => {
                null !== r && o.findIndex((e => e.id === r)) < 0 && l(YN(o, "id"))
            }), [o, r]);
            const c = o.find((e => e.id === r)) ?? null,
                u = sl(fk),
                d = sl(mk),
                m = ac(),
                h = e6(),
                [g, p] = (0, Y.useState)(""),
                [f, x] = (0, Y.useState)(""),
                [v, _] = (0, Y.useState)({
                    ...d
                }),
                b = u.find((e => e.id === f)) ?? null,
                T = sl(rk),
                E = sl(VE),
                I = sl(vk),
                y = sl(_k);
            (0, Y.useEffect)((() => {
                null != c?.theme && x(c?.theme)
            }), [c?.theme]), (0, Y.useEffect)((() => {
                null != c?.displayName && (c.nameAsCityName ? p(Pc.Maps.MAP_TITLE.renderString(m, {
                    hash: c.displayName
                }) ?? h()) : p(h()))
            }), [h, m, c?.displayName, c?.nameAsCityName]);
            const j = (0, Y.useCallback)((() => {
                    i === q4.mapOptions ? (a(q4.mapSelection), lp(rp.closeMenu)) : n()
                }), [i, n]),
                S = (0, Y.useCallback)((() => {
                    a(q4.mapOptions), lp(rp.openMenu)
                }), []),
                C = (0, Y.useCallback)((() => {
                    Ok(c.id)
                }), [c]),
                [N, w] = kk(),
                O = (0, Y.useCallback)((() => {
                    null != r && (Rk(N), jk({
                        mapId: r,
                        cityName: g,
                        theme: f,
                        options: v
                    }))
                }), [r, N, g, f, v]),
                P = (0, Y.useMemo)((() => ({
                    Select: i === q4.mapSelection ? () => {
                        lp(rp.selectItem), S()
                    } : null,
                    "Start Game": i === q4.mapOptions ? () => {
                        lp(rp.selectItem), O()
                    } : null,
                    "Switch Tab": i === q4.mapSelection && I.length >= 2 ? e => {
                        const t = I.indexOf(y);
                        Hk(t >= 0 ? I[(t + e + I.length) % I.length] : I[0])
                    } : null
                })), [i, I, S, O, y]);
            return (0, z.jsx)(q$, {
                ref: s,
                focusKey: e,
                title: Z4(i),
                className: t,
                onClose: j,
                children: (0, z.jsx)(Ag, {
                    actions: P,
                    children: (0, z.jsx)(ap, {
                        focused: i,
                        activation: qu.Always,
                        children: (0, z.jsxs)("div", {
                            className: $4.content,
                            children: [(0, z.jsx)("div", {
                                className: $4.stepContainer,
                                children: (0, z.jsxs)(ud, {
                                    children: [i === q4.mapSelection && (0, z.jsx)(mh, {
                                        styles: P3,
                                        children: (0, z.jsx)(z4, {
                                            focusKey: q4.mapSelection,
                                            maps: o,
                                            filters: I,
                                            selectedMap: r,
                                            selectedFilter: y,
                                            className: $4.step,
                                            onSelectMap: l,
                                            onSelectFilter: Hk
                                        })
                                    }, q4.mapSelection), i === q4.mapOptions && (0, z.jsx)(mh, {
                                        styles: QX,
                                        children: (0, z.jsx)(w6, {
                                            focusKey: q4.mapOptions,
                                            cityName: g,
                                            theme: f,
                                            options: v,
                                            className: $4.step,
                                            onCityNameChange: p,
                                            onThemeChange: x,
                                            onOptionsChange: _,
                                            tutorialState: N,
                                            setTutorialState: w,
                                            onShareGame: T || c?.isReadonly || !E ? void 0 : C,
                                            shareGameLocaleKey: "shareMap"
                                        })
                                    }, q4.mapOptions)]
                                })
                            }), (0, z.jsx)(O4, {
                                selectedMap: c,
                                selectedTheme: b,
                                activeStep: i,
                                className: $4.detail,
                                onContinue: S,
                                onStartGameSelect: O
                            })]
                        })
                    })
                })
            })
        }));

        function Z4(e) {
            return e === q4.mapSelection ? (0, z.jsx)(Pc.Menu.NEW_GAME, {}) : e === q4.mapOptions ? (0, z.jsx)(Pc.Menu.MAP_OPTIONS, {}) : null
        }

        function J4() {
            const e = ac(),
                t = sl(xk),
                n = x4();
            return (0, Y.useMemo)((() => t.map((t => ({
                value: t,
                name: Pc.Maps.MAP_TITLE.renderString(e, {
                    hash: t.displayName
                })
            }))).sort(((e, t) => n(e.name, t.name))).map((e => e.value))), [e, t, n])
        }

        function e6() {
            const e = ac(),
                t = ll(xc, X4);
            return (0, Y.useCallback)((n => {
                if (0 === t) return "";
                let s = Math.floor(Math.random() * t),
                    i = Pc.Assets.CITY_NAME.renderString(e, {
                        index: s
                    });
                return i === n && (s = (s + 1) % t, i = Pc.Assets.CITY_NAME.renderString(e, {
                    index: s
                })), i
            }), [t, e])
        }
        X.add("game-ui/menu/components/new-game-screen/new-game-screen.tsx", {
            get cityNameLocId() {
                return X4
            },
            set cityNameLocId(e) {
                X4 = e
            },
            get NewGameStep() {
                return q4
            },
            set NewGameStep(e) {
                q4 = e
            },
            get NewGameScreen() {
                return Q4
            },
            set NewGameScreen(e) {
                Q4 = e
            },
            get useSortedMaps() {
                return J4
            },
            set useSortedMaps(e) {
                J4 = e
            },
            get useCityNameGenerator() {
                return e6
            },
            set useCityNameGenerator(e) {
                e6 = e
            }
        });
        let t6 = {
            wrapper: "wrapper_ER5",
            container: "container_AwD",
            input: "input_Hft",
            label: "label_lus"
        };
        X.add("game-ui/menu/themes/menu-input-field.module.scss", {
            get classes() {
                return t6
            },
            set classes(e) {
                Object.assign(t6, e)
            }
        });
        const n6 = t6;
        let s6 = {
            field: "field_amr field_cjf",
            label: "label_VSW label_T__"
        };
        X.add("game-ui/menu/components/shared/game-options/field/row-field.module.scss", {
            get classes() {
                return s6
            },
            set classes(e) {
                Object.assign(s6, e)
            }
        });
        const i6 = s6;
        var a6 = {
                ...Bp,
                hover: null,
                focus: null
            },
            o6 = ({
                id: e,
                label: t,
                theme: n = i6,
                disabled: s,
                className: i,
                children: a,
                onClick: o,
                sound: r = rp.selectToggle
            }) => {
                const l = (0, Y.useContext)(oq),
                    c = (0, Y.useCallback)((() => {
                        e && l.onOptionMouseEnter(e), lp(rp.hoverItem)
                    }), [e, l]),
                    u = (0, Y.useCallback)((() => e && l.onOptionMouseLeave(e)), [e, l]),
                    d = (0, Y.useCallback)((e => {
                        !s && o && o(e), lp(r)
                    }), [s, o, r]);
                return (0, z.jsxs)(Ip, {
                    focusKey: s ? Ig : e,
                    focusSound: rp.hoverItem,
                    className: Zu()(n.field, s && "disabled", i),
                    onMouseEnter: c,
                    onMouseLeave: u,
                    onClick: d,
                    children: [(0, z.jsx)("div", {
                        className: n.label,
                        children: t ?? (null != e && (0, z.jsx)(Pc.Options.OPTION, {
                            hash: e
                        }))
                    }), a]
                })
            };
        X.add("game-ui/menu/components/shared/game-options/field/field.tsx", {
            get optionButtonSounds() {
                return a6
            },
            set optionButtonSounds(e) {
                a6 = e
            },
            get OptionField() {
                return o6
            },
            set OptionField(e) {
                o6 = e
            }
        });
        let r6 = {
            field: "field_iTK field_cjf",
            label: "label_TLv label_T__"
        };
        X.add("game-ui/menu/components/shared/game-options/field/column-field.module.scss", {
            get classes() {
                return r6
            },
            set classes(e) {
                Object.assign(r6, e)
            }
        });
        const l6 = r6;
        let c6 = {
            "city-name-field": "city-name-field_H7e value-field_yJi",
            cityNameField: "city-name-field_H7e value-field_yJi",
            "dice-button": "dice-button_U3N secondary-button_Kvj",
            diceButton: "dice-button_U3N secondary-button_Kvj",
            "hint-right": "hint-right_k5k",
            hintRight: "hint-right_k5k",
            "hint-left": "hint-left_Bnq",
            hintLeft: "hint-left_Bnq",
            container: "container_cNd"
        };
        X.add("game-ui/menu/components/shared/game-options/city-name-field/city-name-field.module.scss", {
            get classes() {
                return c6
            },
            set classes(e) {
                Object.assign(c6, e)
            }
        });
        const u6 = c6,
            d6 = new Eg("INPUT_KEY"),
            m6 = new Eg("BUTTON_KEY");
        var h6 = ({
            id: e,
            label: t,
            value: n,
            disabled: s,
            onChange: i
        }) => {
            const [a, o] = (0, Y.useState)(n);
            (0, Y.useEffect)((() => o(n)), [n]);
            const r = (0, Y.useCallback)((e => {
                    o(e.target.value), i(e.target.value)
                }), [i]),
                l = e6(),
                c = (0, Y.useCallback)((() => i(l(n))), [l, i, n]),
                [u, d] = (0, Y.useState)(!1),
                [m, h] = (0, Y.useState)(!1),
                [g, p] = (0, Y.useState)(null),
                f = g === d6,
                x = g === m6,
                v = (0, Y.useCallback)((() => {
                    d(!0)
                }), []),
                _ = (0, Y.useCallback)((() => {
                    d(!1)
                }), []);
            return (0, z.jsx)(Ah, {
                onFocusChange: h,
                children: (0, z.jsx)(o6, {
                    id: e,
                    label: t,
                    theme: l6,
                    disabled: s,
                    children: (0, z.jsxs)("div", {
                        className: u6.container,
                        children: [(0, z.jsx)(Pf, {
                            action: u ? "Back" : "Select",
                            active: f && m,
                            className: u6.hintLeft
                        }), (0, z.jsx)("div", {
                            className: u6.cityNameField,
                            children: (0, z.jsxs)(tp, {
                                direction: Rg.Horizontal,
                                onChange: p,
                                initialFocused: d6,
                                children: [(0, z.jsx)(H3, {
                                    focusKey: d6,
                                    disableHint: !0,
                                    value: a,
                                    vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                                        hash: "CityName"
                                    }),
                                    theme: n6,
                                    onChange: r,
                                    onFocus: v,
                                    onBlur: _,
                                    maxLength: 85
                                }), (0, z.jsx)(Tg, {
                                    tooltip: (0, z.jsx)(Pc.Menu.RANDOM_CITY_NAME_BUTTON_TOOLTIP, {}),
                                    children: (0, z.jsx)(sf, {
                                        disableHint: !0,
                                        focusKey: m6,
                                        tinted: !0,
                                        src: "Media/Glyphs/Dice.svg",
                                        sounds: a6,
                                        selectSound: rp.generateRandomName,
                                        className: u6.diceButton,
                                        onSelect: c
                                    })
                                })]
                            })
                        }), (0, z.jsx)(Pf, {
                            action: "Select",
                            active: !u && x && m,
                            className: u6.hintLeft
                        })]
                    })
                })
            })
        };
        X.add("game-ui/menu/components/shared/game-options/city-name-field/city-name-field.tsx", {
            get CityNameField() {
                return h6
            },
            set CityNameField(e) {
                h6 = e
            }
        });
        let g6 = {
            "theme-item": "theme-item_qct",
            themeItem: "theme-item_qct",
            "theme-icon": "theme-icon_jJ9",
            themeIcon: "theme-icon_jJ9",
            "theme-name": "theme-name_hYf",
            themeName: "theme-name_hYf",
            hint: "hint_Gtz",
            "dropdown-item-hint": "dropdown-item-hint_ia7",
            dropdownItemHint: "dropdown-item-hint_ia7"
        };
        X.add("game-ui/menu/components/shared/game-options/theme-field/theme-field.module.scss", {
            get classes() {
                return g6
            },
            set classes(e) {
                Object.assign(g6, e)
            }
        });
        const p6 = g6;
        var f6 = ({
            id: e,
            label: t,
            value: n,
            disabled: s,
            onChange: i
        }) => {
            const a = sl(fk),
                o = a.find((e => e.id === n)),
                [r, l] = (0, Y.useState)(!1),
                [c, u] = (0, Y.useState)(o?.id ?? null),
                [d, m] = (0, Y.useState)(!1);
            return (0, z.jsx)(Ah, {
                onFocusChange: l,
                children: (0, z.jsx)(o6, {
                    id: e,
                    label: t,
                    theme: l6,
                    disabled: s,
                    className: p6.themeField,
                    children: (0, z.jsx)(qI, {
                        focusKey: s ? Ig : yg,
                        initialFocused: n,
                        theme: Lq,
                        content: (0, z.jsx)(tp, {
                            initialFocused: o?.id || null,
                            onChange: u,
                            allowLooping: !0,
                            children: a.map((e => (0, z.jsxs)(JI, {
                                focusKey: e.id,
                                value: e.id,
                                className: p6.themeItem,
                                onChange: i,
                                children: [(0, z.jsx)(Pf, {
                                    action: "Select",
                                    active: r && c === e.id,
                                    className: Zu()(p6.hint, p6.dropdownItemHint)
                                }), (0, z.jsx)(FK, {
                                    src: e.icon,
                                    className: p6.themeIcon
                                }), (0, z.jsx)("div", {
                                    className: p6.themeName,
                                    children: (0, z.jsx)(Pc.Assets.THEME, {
                                        hash: e.id
                                    })
                                })]
                            }, e.id)))
                        }),
                        onToggle: m,
                        children: (0, z.jsx)(XI, {
                            disabled: s,
                            sounds: a6,
                            openIconComponent: (0, z.jsx)(Pf, {
                                action: "Select",
                                active: !d && r,
                                className: p6.hint
                            }),
                            closeIconComponent: (0, z.jsx)(Pf, {
                                action: "Back",
                                active: d && r,
                                className: p6.hint
                            }),
                            children: (0, z.jsxs)("div", {
                                className: p6.themeItem,
                                children: [(0, z.jsx)(FK, {
                                    src: o?.icon ?? "Media/Placeholder.svg",
                                    className: p6.themeIcon
                                }), (0, z.jsx)("div", {
                                    className: p6.themeName,
                                    children: (0, z.jsx)(Pc.Assets.THEME, {
                                        hash: n
                                    })
                                })]
                            })
                        })
                    })
                })
            })
        };

        function x6({
            component: e,
            value: t,
            groupValue: n,
            onChange: s,
            onToggleSelected: i,
            ...a
        }) {
            const o = (0, Y.useCallback)((e => {
                e ? s && s(t) : i && i(t)
            }), [t, s, i]);
            return Y.createElement(e, {
                ...a,
                checked: t === n,
                onChange: o
            })
        }
        X.add("game-ui/menu/components/shared/game-options/theme-field/theme-field.tsx", {
            get ThemeField() {
                return f6
            },
            set ThemeField(e) {
                f6 = e
            }
        }), X.add("game-ui/common/input/toggle/group-toggle.tsx", {
            get GroupToggle() {
                return x6
            },
            set GroupToggle(e) {
                x6 = e
            }
        });
        let v6 = {
            toggle: "toggle_H7r item-mouse-states_Fmi",
            bullet: "bullet_rDK"
        };
        X.add("game-ui/common/input/toggle/radio-toggle/radio-toggle.module.scss", {
            get classes() {
                return v6
            },
            set classes(e) {
                Object.assign(v6, e)
            }
        });
        const _6 = v6;
        var b6 = ({
            checked: e,
            disabled: t,
            theme: n,
            style: s,
            className: i,
            ...a
        }) => {
            const o = (0, Y.useMemo)((() => ({
                ..._6,
                ...n
            })), [n]);
            return (0, z.jsx)(sx, {
                ...a,
                checked: e,
                disabled: t,
                style: s,
                className: Zu()(o.toggle, i),
                children: (0, z.jsx)("div", {
                    className: Zu()(o.bullet, e && "checked", t && "disabled")
                })
            })
        };
        X.add("game-ui/common/input/toggle/radio-toggle/radio-toggle.tsx", {
            get RadioToggle() {
                return b6
            },
            set RadioToggle(e) {
                b6 = e
            }
        });
        let T6 = {
            toggle: "toggle_ATa",
            "radio-toggle": "radio-toggle_TY5 toggle_H7r item-mouse-states_Fmi",
            radioToggle: "radio-toggle_TY5 toggle_H7r item-mouse-states_Fmi",
            bullet: "bullet_DoE bullet_rDK"
        };
        X.add("game-ui/menu/components/shared/game-options/toggle-field/toggle-field.module.scss", {
            get classes() {
                return T6
            },
            set classes(e) {
                Object.assign(T6, e)
            }
        });
        const E6 = T6;
        var I6 = ({
            value: e,
            disabled: t,
            onChange: n,
            ...s
        }) => {
            const [i, a] = (0, Y.useState)(!1), o = (0, Y.useCallback)((() => {
                n(!e)
            }), [n, e]);
            return (0, z.jsx)(Ah, {
                onFocusChange: a,
                children: (0, z.jsxs)(o6, {
                    ...s,
                    onClick: o,
                    disabled: t,
                    children: [(0, z.jsx)(Pf, {
                        action: "Select",
                        active: i
                    }), (0, z.jsx)(ox, {
                        checked: e,
                        className: E6.toggle,
                        onChange: n,
                        disabled: t
                    })]
                })
            })
        };

        function y6({
            value: e,
            groupValue: t,
            disabled: n,
            onChange: s,
            onToggleSelected: i,
            ...a
        }) {
            const [o, r] = (0, Y.useState)(!1), l = (0, Y.useCallback)((() => {
                s(e)
            }), [s, e]);
            return (0, z.jsx)(Ah, {
                onFocusChange: r,
                children: (0, z.jsxs)(o6, {
                    ...a,
                    onClick: l,
                    disabled: n,
                    children: [(0, z.jsx)(Pf, {
                        action: "Select",
                        active: o && e !== t
                    }), (0, z.jsx)(x6, {
                        theme: {
                            toggle: E6.radioToggle,
                            bullet: E6.bullet
                        },
                        component: b6,
                        onChange: s,
                        onToggleSelected: i,
                        value: e,
                        groupValue: t,
                        disabled: n,
                        className: E6.radioToggle
                    })]
                })
            })
        }
        X.add("game-ui/menu/components/shared/game-options/toggle-field/toggle-field.tsx", {
            get ToggleField() {
                return I6
            },
            set ToggleField(e) {
                I6 = e
            },
            get RadioGroupToggleField() {
                return y6
            },
            set RadioGroupToggleField(e) {
                y6 = e
            }
        });
        let j6 = {
            "game-options": "game-options_iDr child-opacity-transition_nkS",
            gameOptions: "game-options_iDr child-opacity-transition_nkS",
            "main-row": "main-row_a1n",
            mainRow: "main-row_a1n",
            "options-column": "options-column_l0j",
            optionsColumn: "options-column_l0j",
            "city-name-field": "city-name-field_L2K",
            cityNameField: "city-name-field_L2K",
            "city-name-input": "city-name-input_aS0",
            cityNameInput: "city-name-input_aS0",
            "dice-button": "dice-button_W27 item-mouse-states_Fmi",
            diceButton: "dice-button_W27 item-mouse-states_Fmi",
            "theme-item": "theme-item_W3X",
            themeItem: "theme-item_W3X",
            "theme-icon": "theme-icon_h7K",
            themeIcon: "theme-icon_h7K",
            "theme-name": "theme-name_gDK",
            themeName: "theme-name_gDK",
            "toggle-item": "toggle-item_uwk",
            toggleItem: "toggle-item_uwk",
            "info-column": "info-column_IaC",
            infoColumn: "info-column_IaC",
            "info-title": "info-title_oAQ",
            infoTitle: "info-title_oAQ",
            "tutorial-options-title": "tutorial-options-title_qO8 info-title_oAQ",
            tutorialOptionsTitle: "tutorial-options-title_qO8 info-title_oAQ",
            "info-description": "info-description_NL4",
            infoDescription: "info-description_NL4"
        };
        X.add("game-ui/menu/components/shared/game-options/game-options.module.scss", {
            get classes() {
                return j6
            },
            set classes(e) {
                Object.assign(j6, e)
            }
        });
        const S6 = j6,
            C6 = "cityName",
            N6 = "theme";
        var w6 = Y.forwardRef((function ({
                focusKey: e,
                cityName: t,
                theme: n,
                options: s,
                tutorialState: i,
                disabledOptions: a = [],
                className: o,
                onCityNameChange: r,
                onThemeChange: l,
                onOptionsChange: c,
                onDeleteGame: u,
                onShareGame: d,
                setTutorialState: m,
                shareGameLocaleKey: h,
                pastModsEnabled: g
            }, p) {
                const [f, x] = (0, Y.useState)(!1), v = Dm(), _ = sl(ik), b = sl(ak), T = (0, Y.useCallback)(((e, t) => {
                    c && c({
                        ...s,
                        [e]: t
                    })
                }), [s, c]), [E, I] = (0, Y.useState)(C6), y = (0, Y.useCallback)((e => {
                    "string" == typeof e && I(e)
                }), []), [j, S] = (0, Y.useState)(null), C = (0, Y.useMemo)((() => ({
                    onOptionMouseEnter: e => S(e),
                    onOptionMouseLeave: e => S((t => t === e ? null : t)),
                    onFocusSet: () => {},
                    onFocusReset: () => {}
                })), []), N = f && v ? E : j, w = sl(nk), O = h ?? "shareSave", P = (0, Y.useCallback)((e => {
                    "deleteSave" === e && u(), e === O && d()
                }), [u, d, O]);
                return (0, z.jsx)(Ah, {
                    onFocusChange: x,
                    children: (0, z.jsxs)("div", {
                        ref: p,
                        className: Zu()(S6.gameOptions, o),
                        children: [(0, z.jsxs)("div", {
                            className: S6.mainRow,
                            children: [(0, z.jsx)("div", {
                                className: S6.optionsColumn,
                                children: (0, z.jsx)(oq.Provider, {
                                    value: C,
                                    children: (0, z.jsx)(ff, {
                                        children: (0, z.jsxs)(Qg, {
                                            focusKey: e,
                                            focused: E,
                                            onChange: y,
                                            direction: Rg.Both,
                                            allowLooping: !0,
                                            children: [(0, z.jsx)(h6, {
                                                id: C6,
                                                label: (0, z.jsx)(Pc.GameListScreen.GAME_OPTION, {
                                                    hash: C6
                                                }),
                                                value: t,
                                                disabled: a.includes(C6),
                                                onChange: r
                                            }), (0, z.jsx)(f6, {
                                                id: N6,
                                                label: (0, z.jsx)(Pc.GameListScreen.GAME_OPTION, {
                                                    hash: N6
                                                }),
                                                value: n,
                                                disabled: a.includes(N6),
                                                onChange: l
                                            }), (0, z.jsx)(R$, {}), Object.entries(s).filter((([e, t]) => "__Type" !== e)).map((([e, t]) => (0, z.jsx)(O6, {
                                                id: e,
                                                value: t,
                                                disabled: a.includes(e),
                                                onChange: T
                                            }, e))), (0, z.jsx)(R$, {}), (0, z.jsx)("div", {
                                                className: Zu()(S6.infoTitle, S6.tutorialOptionsTitle),
                                                children: (0, z.jsx)(Pc.GameListScreen.TUTORIAL_OPTIONS, {})
                                            }), (0, z.jsx)(y6, {
                                                id: w ? "continueTutorials" : "beginTutorials",
                                                label: (0, z.jsx)(Pc.GameListScreen.GAME_OPTION, {
                                                    hash: w ? "continueTutorials" : "beginTutorials"
                                                }),
                                                value: ZR.Continue,
                                                groupValue: i,
                                                className: S6.toggleItem,
                                                onChange: m
                                            }), w && (0, z.jsx)(y6, {
                                                id: "restartTutorials",
                                                label: (0, z.jsx)(Pc.GameListScreen.GAME_OPTION, {
                                                    hash: "restartTutorials"
                                                }),
                                                value: ZR.Reset,
                                                groupValue: i,
                                                className: S6.toggleItem,
                                                onChange: m
                                            }), (0, z.jsx)(y6, {
                                                id: "disableTutorials",
                                                label: (0, z.jsx)(Pc.GameListScreen.GAME_OPTION, {
                                                    hash: "disableTutorials"
                                                }),
                                                value: ZR.Disable,
                                                groupValue: i,
                                                className: S6.toggleItem,
                                                onChange: m
                                            }), (null != u || null != d) && (0, z.jsxs)(z.Fragment, {
                                                children: [(0, z.jsx)(R$, {}), (0, z.jsx)(U3, {
                                                    buttons: [null != u ? {
                                                        id: "deleteSave",
                                                        disabled: !1,
                                                        confirm: !0
                                                    } : null, null != d ? {
                                                        id: O,
                                                        disabled: !b,
                                                        confirm: !1
                                                    } : null].filter(ew),
                                                    onSelect: P
                                                })]
                                            })]
                                        })
                                    })
                                })
                            }), (0, z.jsx)("div", {
                                className: S6.infoColumn,
                                children: null != N && (0, z.jsxs)(z.Fragment, {
                                    children: [(0, z.jsx)("div", {
                                        className: S6.infoTitle,
                                        children: (0, z.jsx)(Pc.GameListScreen.GAME_OPTION, {
                                            hash: N
                                        })
                                    }), (0, z.jsx)("div", {
                                        className: S6.infoDescription,
                                        children: (0, z.jsx)(Pc.GameListScreen.GAME_OPTION_DESCRIPTION, {
                                            hash: N
                                        })
                                    })]
                                })
                            })]
                        }), (0, z.jsx)(M3, {
                            modsEnabled: _,
                            pastModsEnabled: void 0 !== g && g.length > 0,
                            unlockAll: s.unlockAll,
                            unlimitedMoney: s.unlimitedMoney,
                            unlockMapTiles: s.unlockMapTiles
                        })]
                    })
                })
            })),
            O6 = ({
                id: e,
                value: t,
                disabled: n,
                onChange: s
            }) => {
                const i = (0, Y.useCallback)((t => s(e, t)), [e, s]);
                return (0, z.jsx)(I6, {
                    id: e,
                    value: t,
                    label: (0, z.jsx)(Pc.GameListScreen.GAME_OPTION, {
                        hash: e
                    }),
                    disabled: n,
                    className: S6.toggleItem,
                    onChange: i
                })
            };

        function P6(e, t) {
            return e.split(" ").map((e => {
                if (e.length > t) {
                    let n = "";
                    for (let s = 0; s < e.length; s += t) n += e.substring(s, s + t) + " ";
                    return n.trim()
                }
                return e
            })).join(" ")
        }
        X.add("game-ui/menu/components/shared/game-options/game-options.tsx", {
            get GameOptions() {
                return w6
            },
            set GameOptions(e) {
                w6 = e
            },
            get ToggleItem() {
                return O6
            },
            set ToggleItem(e) {
                O6 = e
            }
        }), X.add("game-ui/common/utils/strings.ts", {
            get breakLongWords() {
                return P6
            },
            set breakLongWords(e) {
                P6 = e
            }
        });
        var L6 = ({
            save: e,
            activeStep: t,
            className: n,
            onOptionsToggle: s,
            onLoadGameSelect: i
        }) => {
            const a = sl(Lb),
                o = Dm(),
                r = null != e && e.locked,
                l = sl(fk).find((t => t.id === e?.theme)) ?? null,
                c = sl(ik);
            return (0, z.jsx)(y4, {
                className: n,
                title: null != e ? P6(e.displayName, 28) : void 0,
                preview: e?.preview,
                content: null != e ? (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)("div", {
                        className: I4.achievementWarningBannerContainer,
                        children: (0, z.jsx)(R3, {
                            modsEnabled: c,
                            pastModsEnabled: e.modsEnabled.length > 0,
                            unlockAll: e.options?.unlockAll,
                            unlimitedMoney: e.options?.unlimitedMoney,
                            loadGame: !0,
                            className: I4.achievementWarningBanner
                        })
                    }), (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.Menu.CITY_NAME_LABEL, {}),
                        ellipsis: !0,
                        children: e.cityName
                    }), (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.POPULATION_LABEL, {}),
                        children: (0, z.jsx)(Gc, {
                            value: e.population,
                            unit: Oc.Integer
                        })
                    }), (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.Menu.SIMULATION_DATE_LABEL, {}),
                        children: (0, z.jsx)(Lu, {
                            value: e.simulationDate
                        })
                    }), (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.MONEY_LABEL, {}),
                        children: e.options?.unlimitedMoney ? (0, z.jsx)(Pc.Menu.UNLIMITED_MONEY_LABEL, {}) : (0, z.jsx)(Gc, {
                            value: e.money,
                            unit: Oc.Money
                        })
                    }), (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.XP_LABEL, {}),
                        children: (0, z.jsx)(Gc, {
                            value: e.xp,
                            unit: Oc.Integer
                        })
                    }), null != e.mapName && (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.MAP_LABEL, {}),
                        children: (0, z.jsx)(Pc.Maps.MAP_TITLE, {
                            hash: e.mapName,
                            fallback: e.mapName
                        })
                    }), null != l && (0, z.jsxs)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.THEME_LABEL, {}),
                        children: [(0, z.jsx)(FK, {
                            src: l.icon,
                            className: I4.themeIcon
                        }), (0, z.jsx)(Pc.Assets.THEME, {
                            hash: l.id
                        })]
                    })]
                }) : void 0,
                footer: null == e || o ? void 0 : (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(S4, {
                        disabled: r || !a,
                        onSelect: i,
                        children: (0, z.jsx)(Pc.Menu.LOAD_GAME_BUTTON, {})
                    }), (0, z.jsx)(S4, {
                        disabled: r,
                        onSelect: s,
                        children: t === y8.options ? (0, z.jsx)(Pc.Menu.SAVE_LIST, {}) : (0, z.jsx)(Pc.Menu.SAVE_OPTIONS, {})
                    })]
                })
            })
        };
        X.add("game-ui/menu/components/load-game-screen/save-detail/save-detail.tsx", {
            get SaveDetail() {
                return L6
            },
            set SaveDetail(e) {
                L6 = e
            }
        });
        let A6 = {
            itemHeight: "50rem",
            "save-list": "save-list_gdH child-opacity-transition_nkS",
            saveList: "save-list_gdH child-opacity-transition_nkS",
            scrollable: "scrollable_C4r"
        };
        X.add("game-ui/menu/components/load-game-screen/save-list/save-list.module.scss", {
            get classes() {
                return A6
            },
            set classes(e) {
                Object.assign(A6, e)
            }
        });
        const M6 = A6;
        var R6 = (0, Y.forwardRef)((function ({
            selectedSave: e,
            ordering: t,
            className: n,
            onSelectSave: s,
            onSelectOrdering: i,
            onDoubleClick: a
        }, o) {
            const r = sl(bk),
                l = (0, Y.useMemo)((() => A4(r, t)), [t, r]),
                c = (0, Y.useMemo)((() => r.find((e => "ParadoxMods" === e.cloudTarget)) ? k4 : k4.filter((e => e !== w4.Downloaded))), [r]),
                u = TK(Vm(M6.itemHeight), l.length, 3),
                d = (0, Y.useMemo)((() => ({
                    "Switch Ordering": e => {
                        lp(rp.dragSlider), e < 0 ? (lp(rp.selectPreviousItem), i(XN(c, c.indexOf(t), !0) ?? c[c.length - 1])) : e > 0 && (lp(rp.selectNextItem), i($N(c, c.indexOf(t), !0) ?? c[0]))
                    }
                })), [i, t, c]),
                m = (0, Y.useCallback)((e => {
                    "string" == typeof e && s(e)
                }), [s]),
                h = (0, Y.useCallback)((e => s(e.id)), [s]),
                g = (0, Y.useCallback)((t => {
                    const n = l[t];
                    return (0, z.jsx)(zK, {
                        save: n,
                        selected: e === n.displayName || e === n.id,
                        locked: !1,
                        tooltipsInactive: !0,
                        inputAction: "Load Game",
                        onClick: h,
                        onDoubleClick: a
                    }, n.id)
                }), [h, e, l, t]);
            return (0, z.jsx)(Ag, {
                actions: d,
                children: (0, z.jsxs)("div", {
                    ref: o,
                    className: Zu()(M6.saveList, n),
                    children: [(0, z.jsx)(D4, {
                        options: c,
                        selectedOrdering: t,
                        onSelectOrdering: i
                    }), (0, z.jsx)(Qg, {
                        focused: e,
                        onChange: m,
                        activation: qu.Always,
                        children: (0, z.jsx)(vK, {
                            className: Zu()(M6.scrollable),
                            sizeProvider: u,
                            renderItem: g
                        })
                    })]
                })
            })
        }));
        X.add("game-ui/menu/components/load-game-screen/save-list/save-list.tsx", {
            get SaveList() {
                return R6
            },
            set SaveList(e) {
                R6 = e
            }
        });
        var k6 = ({
            title: e,
            message: t,
            onConfirm: n
        }) => {
            const s = (0, Y.useContext)(iE),
                i = (0, Y.useCallback)((() => {
                    s.onClose(), n && n()
                }), [s, n]);
            return (0, z.jsx)(eE, {
                title: e,
                buttons: (0, z.jsx)("div", {
                    className: JT.buttons,
                    children: (0, z.jsx)(Gp, {
                        theme: AE,
                        className: JT.buttonOk,
                        onSelect: i,
                        children: (0, z.jsx)(Pc.Common.OK, {})
                    })
                }),
                onClose: s.onClose,
                children: (0, z.jsx)(zf, {
                    theme: JT,
                    children: t
                })
            })
        };
        X.add("game-ui/common/panel/dialog/message-dialog.tsx", {
            get MessageDialog() {
                return k6
            },
            set MessageDialog(e) {
                k6 = e
            }
        });
        var D6 = ({
            className: e,
            onSaveGameSelect: t
        }) => {
            const n = Dm(),
                s = sl(Lb),
                i = sl(ck),
                a = sl(lL),
                o = sl(iL),
                r = sl(oL),
                l = sl(rN),
                c = sl(uk),
                u = CO(sl(gO), sl(pO)),
                d = sl(cL),
                m = sl(Ek);
            return (0, z.jsx)(y4, {
                className: e,
                title: P6(a, 28),
                preview: i,
                content: (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.Menu.CITY_NAME_LABEL, {}),
                        ellipsis: !0,
                        children: a
                    }), (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.POPULATION_LABEL, {}),
                        children: (0, z.jsx)(Gc, {
                            value: o,
                            unit: Oc.Integer
                        })
                    }), (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.Menu.SIMULATION_DATE_LABEL, {}),
                        children: (0, z.jsx)(Lu, {
                            value: u
                        })
                    }), (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.MONEY_LABEL, {}),
                        children: d ? (0, z.jsx)(Pc.Menu.UNLIMITED_MONEY_LABEL, {}) : (0, z.jsx)(Gc, {
                            value: r,
                            unit: Oc.Money
                        })
                    }), (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.XP_LABEL, {}),
                        children: (0, z.jsx)(Gc, {
                            value: l,
                            unit: Oc.Integer
                        })
                    }), null != c && (0, z.jsx)(j4, {
                        label: (0, z.jsx)(Pc.GameListScreen.MAP_LABEL, {}),
                        children: (0, z.jsx)(Pc.Maps.MAP_TITLE, {
                            hash: c
                        })
                    })]
                }),
                footer: n ? void 0 : (0, z.jsx)(Tg, {
                    tooltip: m.reasonHash && (0, z.jsx)(Pc.Common.SAVEABILITY_REASON, {
                        hash: m.reasonHash
                    }),
                    children: (0, z.jsx)(S4, {
                        onSelect: t,
                        disabled: !m.canSave || !s,
                        children: (0, z.jsx)(Pc.GameListScreen.SAVE_GAME_BUTTON, {})
                    })
                })
            })
        };
        X.add("game-ui/menu/components/save-game-screen/game-detail/game-detail.tsx", {
            get GameDetail() {
                return D6
            },
            set GameDetail(e) {
                D6 = e
            }
        });
        let F6 = {
            wrapper: "wrapper_P37",
            container: "container_W62",
            input: "input_AhI",
            label: "label_quF"
        };
        X.add("game-ui/menu/themes/save-list-input-field.module.scss", {
            get classes() {
                return F6
            },
            set classes(e) {
                Object.assign(F6, e)
            }
        });
        const U6 = F6;
        let B6 = {
            itemHeight: "50rem",
            "save-list": "save-list_zHX child-opacity-transition_nkS",
            saveList: "save-list_zHX child-opacity-transition_nkS",
            scrollable: "scrollable_t4Z",
            "name-field": "name-field_FGr",
            nameField: "name-field_FGr"
        };
        X.add("game-ui/menu/components/save-game-screen/save-list/save-list.module.scss", {
            get classes() {
                return B6
            },
            set classes(e) {
                Object.assign(B6, e)
            }
        });
        const G6 = B6,
            V6 = new Eg("nameField");
        var H6 = Y.forwardRef((function ({
            saveName: e,
            cloudTarget: t,
            className: n,
            onSaveNameChange: s,
            onSelectCloudTarget: i
        }, a) {
            const o = sl(Uk),
                [r, l] = (0, Y.useState)(yg),
                c = sl(bk),
                u = (0, Y.useMemo)((() => A4(c.filter((e => !e.isReadonly && e.cloudTarget === t && !e.autoSave)), w4.LastModified)), [t, c]),
                [d, m] = (0, Y.useState)(u.find((t => t.displayName === e))?.id || ""),
                h = (0, Y.useRef)(null),
                g = TK(Vm(G6.itemHeight), u.length, 3),
                p = Dm(),
                f = (0, Y.useMemo)((() => o.length > 1 ? {
                    "Switch Savegame Location": e => {
                        lp(rp.dragSlider), e < 0 ? (lp(rp.selectPreviousItem), i(XN(o, o.indexOf(t), !0) ?? t)) : e > 0 && (lp(rp.selectNextItem), i($N(o, o.indexOf(t), !0) ?? t))
                    }
                } : {}), [i, o, t]),
                x = (0, Y.useCallback)((e => {
                    if ("string" != typeof e) m(r), l(V6), h.current && (s(a8()), h.current.focus());
                    else {
                        const t = c.find((t => t.id === e));
                        null != t && (r !== V6 && m(r), l(e), s(t.displayName), h.current && h.current.blur())
                    }
                }), [r, s, c]),
                v = (0, Y.useCallback)((e => {
                    l(e.id), s(e.displayName), h.current && h.current.blur()
                }), [s]),
                _ = (0, Y.useCallback)((e => {
                    m(e.id), l(V6), h.current && h.current.focus()
                }), []),
                b = (0, Y.useCallback)((e => s(e.target.value)), [s]),
                T = (0, Y.useCallback)((() => p && l(d)), [p, d]),
                E = (0, Y.useCallback)((t => {
                    const n = u[t];
                    return (0, z.jsx)(zK, {
                        save: n,
                        selected: e === n.displayName && r === n.id,
                        locked: !1,
                        tooltipsInactive: !0,
                        inputAction: "Save Game",
                        onClick: v,
                        onSelect: _
                    }, n.id)
                }), [r, v, _, e, u]);
            return (0, z.jsx)(Ag, {
                actions: f,
                children: (0, z.jsxs)("div", {
                    ref: a,
                    className: Zu()(G6.saveList, n),
                    children: [o.length > 1 && (0, z.jsx)(F4, {
                        targets: o,
                        selectedTarget: t,
                        onSelectTarget: i
                    }), (0, z.jsxs)(Qg, {
                        focused: r,
                        onChange: x,
                        onRefocus: Jg,
                        allowLooping: !0,
                        children: [(0, z.jsx)(vK, {
                            className: Zu()(G6.scrollable),
                            sizeProvider: g,
                            renderItem: E
                        }), (0, z.jsx)("div", {
                            className: G6.nameField,
                            children: (0, z.jsx)(H3, {
                                ref: h,
                                maxLength: 85,
                                focusKey: V6,
                                placeholder: (0, z.jsx)(Pc.Menu.NAME_FIELD_PLACEHOLDER, {}),
                                value: e,
                                onChange: b,
                                onBlur: T,
                                vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                                    hash: "SaveName"
                                }),
                                theme: U6,
                                forceHint: !0
                            })
                        })]
                    })]
                })
            })
        }));
        X.add("game-ui/menu/components/save-game-screen/save-list/save-list.tsx", {
            get SaveList() {
                return H6
            },
            set SaveList(e) {
                H6 = e
            }
        });
        let K6 = {
            "save-slot-list": "save-slot-list_MCn child-opacity-transition_nkS",
            saveSlotList: "save-slot-list_MCn child-opacity-transition_nkS",
            scrollable: "scrollable_W3E",
            "name-field": "name-field__Sm",
            nameField: "name-field__Sm",
            "name-input": "name-input_khn",
            nameInput: "name-input_khn"
        };
        X.add("game-ui/menu/components/save-game-screen/save-slot-list/save-slot-list.module.scss", {
            get classes() {
                return K6
            },
            set classes(e) {
                Object.assign(K6, e)
            }
        });
        const W6 = K6;
        var z6 = Y.forwardRef((function ({
            sortedSaves: e,
            saveName: t,
            cloudTarget: n,
            slots: s,
            selectedSlotId: i,
            className: a,
            onSaveNameChange: o,
            onSelectCloudTarget: r,
            onSelectSlot: l
        }, c) {
            const u = sl(Uk),
                d = (0, Y.useMemo)((() => u.length > 1 ? {
                    "Switch Savegame Location": e => {
                        lp(rp.dragSlider), e < 0 ? (lp(rp.selectPreviousItem), r(XN(u, u.indexOf(n), !0) ?? n)) : e > 0 && (lp(rp.selectNextItem), r($N(u, u.indexOf(n), !0) ?? n))
                    }
                } : {}), [r, u, n]);
            return (0, z.jsx)(Ag, {
                actions: d,
                children: (0, z.jsxs)("div", {
                    ref: c,
                    className: Zu()(W6.saveSlotList, a),
                    children: [u.length > 1 && (0, z.jsx)(F4, {
                        targets: u,
                        selectedTarget: n,
                        onSelectTarget: r
                    }), (0, z.jsx)(tp, {
                        initialFocused: i > e.length - 1 ? `Save->Empty:${i}` : `Save->${e[i].id}`,
                        children: (0, z.jsx)(ff, {
                            className: W6.scrollable,
                            children: Array.from({
                                length: s
                            }, ((n, s) => s > e.length - 1 ? (0, z.jsx)(d8, {
                                focusKey: `Save->Empty:${s}`,
                                slotId: s,
                                selected: i === s,
                                inputAction: "Save Game",
                                onSaveNameChange: o,
                                onSelect: l
                            }, s) : (0, z.jsx)(d8, {
                                focusKey: `Save->${e[s].id}`,
                                slotId: s,
                                selected: i === s,
                                saveGame: e[s],
                                saveName: t,
                                inputAction: "Save Game",
                                onSaveNameChange: o,
                                onSelect: l
                            }, s)))
                        })
                    })]
                })
            })
        }));
        X.add("game-ui/menu/components/save-game-screen/save-slot-list/save-slot-list.tsx", {
            get SaveSlotList() {
                return z6
            },
            set SaveSlotList(e) {
                z6 = e
            }
        });
        let Y6 = {
            container: "container_K3P",
            input: "input_f_x",
            label: "label_OFp"
        };
        X.add("game-ui/menu/themes/save-slot-input-field.module.scss", {
            get classes() {
                return Y6
            },
            set classes(e) {
                Object.assign(Y6, e)
            }
        });
        const $6 = Y6;
        let q6 = {
            "save-slot": "save-slot_vY4 child-opacity-transition_nkS",
            saveSlot: "save-slot_vY4 child-opacity-transition_nkS",
            locked: "locked_GCS",
            "theme-icon": "theme-icon_lGm",
            themeIcon: "theme-icon_lGm",
            "humidity-icon": "humidity-icon_zZV",
            humidityIcon: "humidity-icon_zZV",
            title: "title_L43",
            field: "field_Yxz",
            "population-icon": "population-icon_mlk",
            populationIcon: "population-icon_mlk",
            date: "date_tTu",
            "empty-label": "empty-label_OR4",
            emptyLabel: "empty-label_OR4",
            input: "input_q53",
            "title-content": "title-content_SFM",
            titleContent: "title-content_SFM",
            image: "image_u6c",
            scrollable: "scrollable_khn",
            "scrollable-content": "scrollable-content_hzP",
            scrollableContent: "scrollable-content_hzP",
            description: "description_DTi",
            label: "label_out",
            value: "value_wmH",
            "scrollable-footer": "scrollable-footer_nav",
            scrollableFooter: "scrollable-footer_nav"
        };
        X.add("game-ui/menu/components/save-game-screen/save-slots/save-slot/save-slot.module.scss", {
            get classes() {
                return q6
            },
            set classes(e) {
                Object.assign(q6, e)
            }
        });
        const X6 = q6;
        var Q6 = ({
            focusKey: e,
            slotId: t,
            saveName: n,
            saveGame: s,
            selected: i = !1,
            className: a,
            onSaveNameChange: o,
            onSelect: r
        }) => {
            const l = (0, Y.useRef)(null);
            (0, Y.useEffect)((() => {
                if (i) {
                    if (l.current) {
                        l.current.focus();
                        const e = l.current.value.length;
                        l.current.setSelectionRange(0, e)
                    }
                    s ? o && o(s.displayName) : n && o && o(n)
                }
            }), [o, r, s, n, i]);
            const c = sl(ck),
                u = sl(lL),
                d = sl(iL),
                m = sl(oL),
                h = sl(rN),
                g = sl(uk),
                p = CO(sl(gO), sl(pO)),
                f = sl(cL),
                x = (0, Y.useCallback)((e => o && o(e.target.value)), [o]),
                v = (0, Y.useCallback)((e => {
                    e && (r(t), s && o && o(s.displayName))
                }), [o, r, s, t]),
                _ = (0, Y.useCallback)((() => {
                    s && o && o(s.displayName), l.current && l.current.focus(), r(t)
                }), [o, r, s, t]),
                b = (0, Y.useCallback)((() => {
                    if (!n) {
                        const e = a8();
                        o && o(e)
                    }
                }), [o, n]);
            return (0, z.jsxs)(Ip, {
                focusKey: e,
                onFocusChange: v,
                onClick: _,
                className: Zu()(X6.saveSlot, i && "selected", a),
                children: [(s || i) && (0, z.jsx)("div", {
                    className: X6.title,
                    children: (0, z.jsx)("div", {
                        className: X6.titleContent,
                        children: !s && i ? (0, z.jsx)(H3, {
                            ref: l,
                            maxLength: 85,
                            placeholder: (0, z.jsx)(Pc.Menu.NAME_FIELD_PLACEHOLDER, {}),
                            value: n,
                            onChange: x,
                            onBlur: b,
                            vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                                hash: "SaveName"
                            }),
                            theme: $6
                        }) : s?.displayName
                    })
                }), s ? i ? null != c && (0, z.jsx)(qp, {
                    src: c,
                    className: X6.image
                }) : (0, z.jsx)(qp, {
                    src: s?.preview,
                    className: X6.image
                }) : null != c && i && (0, z.jsx)(qp, {
                    src: c,
                    className: X6.image
                }), (0, z.jsx)(ff, {
                    autoScroll: !0,
                    className: X6.scrollable,
                    children: (0, z.jsxs)("div", {
                        className: X6.scrollableContent,
                        children: [s || i ? (0, z.jsxs)(z.Fragment, {
                            children: [(0, z.jsx)(Z6, {
                                label: (0, z.jsx)(Pc.Menu.CITY_NAME_LABEL, {}),
                                children: s?.cityName ?? u
                            }), (0, z.jsx)(Z6, {
                                label: (0, z.jsx)(Pc.GameListScreen.POPULATION_LABEL, {}),
                                children: (0, z.jsx)(Gc, {
                                    value: s?.population ?? d,
                                    unit: Oc.Integer
                                })
                            }), (0, z.jsx)(Z6, {
                                label: (0, z.jsx)(Pc.Menu.SIMULATION_DATE_LABEL, {}),
                                children: (0, z.jsx)(Lu, {
                                    value: s?.simulationDate ?? p
                                })
                            }), (0, z.jsx)(Z6, {
                                label: (0, z.jsx)(Pc.GameListScreen.MONEY_LABEL, {}),
                                children: !s && f ? (0, z.jsx)(Pc.Menu.UNLIMITED_MONEY_LABEL, {}) : (0, z.jsx)(Gc, {
                                    value: s?.money ?? m,
                                    unit: Oc.Money
                                })
                            }), (0, z.jsx)(Z6, {
                                label: (0, z.jsx)(Pc.GameListScreen.XP_LABEL, {}),
                                children: (0, z.jsx)(Gc, {
                                    value: s?.xp ?? h,
                                    unit: Oc.Integer
                                })
                            }), null != s?.mapName ? (0, z.jsx)(Z6, {
                                label: (0, z.jsx)(Pc.GameListScreen.MAP_LABEL, {}),
                                children: (0, z.jsx)(Pc.Maps.MAP_TITLE, {
                                    hash: s.mapName,
                                    fallback: s.mapName
                                })
                            }) : null != g && (0, z.jsx)(Z6, {
                                label: (0, z.jsx)(Pc.GameListScreen.MAP_LABEL, {}),
                                children: (0, z.jsx)(Pc.Maps.MAP_TITLE, {
                                    hash: g,
                                    fallback: g
                                })
                            })]
                        }) : (0, z.jsx)("div", {
                            className: X6.emptyLabel,
                            children: (0, z.jsx)(Pc.Menu.EMPTY_SLOT, {})
                        }), (0, z.jsx)("div", {
                            className: X6.scrollableFooter
                        })]
                    })
                })]
            })
        };
        const Z6 = ({
            label: e,
            children: t
        }) => (0, z.jsxs)("div", {
            className: X6.field,
            children: [(0, z.jsx)("div", {
                className: X6.label,
                children: e
            }), (0, z.jsx)("div", {
                className: X6.value,
                children: t
            })]
        });
        X.add("game-ui/menu/components/save-game-screen/save-slots/save-slot/save-slot.tsx", {
            get SaveSlot() {
                return Q6
            },
            set SaveSlot(e) {
                Q6 = e
            }
        });
        let J6 = {
            "save-game-slots": "save-game-slots_y4R",
            saveGameSlots: "save-game-slots_y4R",
            header: "header_iE9 child-opacity-transition_nkS",
            slots: "slots_s__",
            slot: "slot_DnC",
            "name-field": "name-field_E4B child-opacity-transition_nkS",
            nameField: "name-field_E4B child-opacity-transition_nkS",
            footer: "footer_TH2 child-opacity-transition_nkS",
            "footer-button": "footer-button_qPc",
            footerButton: "footer-button_qPc"
        };
        X.add("game-ui/menu/components/save-game-screen/save-slots/save-slots.module.scss", {
            get classes() {
                return J6
            },
            set classes(e) {
                Object.assign(J6, e)
            }
        });
        const e8 = J6;
        var t8 = ({
            sortedSaves: e,
            saveName: t,
            cloudTarget: n,
            slots: s,
            selectedSlotId: i,
            className: a,
            onSaveNameChange: o,
            onSelectCloudTarget: r,
            onSelectSlot: l
        }) => {
            const c = sl(Uk),
                u = (0, Y.useMemo)((() => c.length > 1 ? {
                    "Switch Savegame Location": e => {
                        lp(rp.dragSlider), e < 0 ? (lp(rp.selectPreviousItem), r(XN(c, c.indexOf(n), !0) ?? n)) : e > 0 && (lp(rp.selectNextItem), r($N(c, c.indexOf(n), !0) ?? n))
                    }
                } : {}), [r, c, n]),
                d = (0, Y.useMemo)((() => !e || 0 === e.length || i > e.length - 1 ? `Save->Empty:${i}` : `Save->${e[i]?.id}`), [i, e]);
            return (0, z.jsx)(Ag, {
                actions: u,
                children: (0, z.jsxs)("div", {
                    className: Zu()(e8.saveGameSlots, a),
                    children: [c.length > 1 && (0, z.jsx)(F4, {
                        targets: c,
                        selectedTarget: n,
                        onSelectTarget: r,
                        className: e8.header
                    }), (0, z.jsx)("div", {
                        className: e8.slots,
                        children: (0, z.jsx)(tp, {
                            initialFocused: d,
                            children: Array.from({
                                length: s
                            }, ((n, s) => !e || 0 === e.length || s > e.length - 1 ? (0, z.jsx)(Q6, {
                                slotId: s,
                                saveName: t,
                                focusKey: `Save->Empty:${s}`,
                                className: e8.slot,
                                selected: i === s,
                                onSelect: l,
                                onSaveNameChange: o
                            }, s) : (0, z.jsx)(Q6, {
                                slotId: s,
                                focusKey: `Save->${e[s].id}`,
                                saveGame: e[s],
                                selected: i === s,
                                className: e8.slot,
                                onSelect: l,
                                onSaveNameChange: o
                            }, s)))
                        })
                    })]
                })
            })
        };
        X.add("game-ui/menu/components/save-game-screen/save-slots/save-slots.tsx", {
            get SaveSlots() {
                return t8
            },
            set SaveSlots(e) {
                t8 = e
            }
        });
        let n8 = {
            content: "content_ZK4",
            list: "list_Lyo",
            detail: "detail_LOs"
        };
        X.add("game-ui/menu/components/save-game-screen/save-game-screen.module.scss", {
            get classes() {
                return n8
            },
            set classes(e) {
                Object.assign(n8, e)
            }
        });
        const s8 = n8;
        var i8 = Y.forwardRef((function ({
            focusKey: e,
            className: t,
            onClose: n
        }, s) {
            (0, Y.useEffect)((() => (Mk(!0), () => Mk(!1))), []);
            const i = sl(gk),
                a = sl(bk),
                o = sl(Bk),
                r = (0, Y.useMemo)((() => A4(a.filter((e => !e.isReadonly && e.cloudTarget === o && !e.autoSave)), w4.LastModified)), [o, a]),
                [l, c] = (0, Y.useState)(a8),
                [u, d] = (0, Y.useState)(function (e, t) {
                    const n = e.findIndex((e => e.displayName === t));
                    return n > 0 ? n : 0
                }(r, l)),
                m = (0, Y.useContext)(sE),
                h = (0, Y.useCallback)((() => {
                    const e = l.trim();
                    Vr(l) ? m.showDialog((0, z.jsx)(k6, {
                        title: (0, z.jsx)(Pc.Common.ERROR, {}),
                        message: (0, z.jsx)(Pc.GameListScreen.INVALID_NAME_MESSAGE, {})
                    })) : Ck(e)
                }), [m, l]),
                g = sl(Ek),
                p = (0, Y.useMemo)((() => g.canSave ? {
                    "Save Game": () => {
                        lp(rp.selectItem), h()
                    }
                } : {}), [h, g.canSave]);
            return (0, z.jsx)(q$, {
                ref: s,
                focusKey: e,
                title: (0, z.jsx)(Pc.Menu.SAVE_GAME, {}),
                className: t,
                onClose: n,
                children: (0, z.jsx)(Ag, {
                    actions: p,
                    children: (0, z.jsx)("div", {
                        className: s8.content,
                        children: i > 3 ? (0, z.jsxs)(z.Fragment, {
                            children: [(0, z.jsx)(z6, {
                                slots: i,
                                selectedSlotId: u,
                                sortedSaves: r,
                                saveName: l,
                                cloudTarget: o,
                                onSelectCloudTarget: Vk,
                                onSaveNameChange: c,
                                onSelectSlot: d,
                                className: s8.list
                            }), (0, z.jsx)(D6, {
                                className: s8.detail,
                                onSaveGameSelect: h
                            })]
                        }) : i > 0 ? (0, z.jsx)(t8, {
                            slots: i,
                            selectedSlotId: u,
                            sortedSaves: r,
                            saveName: l,
                            cloudTarget: o,
                            onSaveNameChange: c,
                            onSelectCloudTarget: Vk,
                            onSelectSlot: d
                        }) : (0, z.jsxs)(tp, {
                            children: [(0, z.jsx)(H6, {
                                saveName: l,
                                cloudTarget: o,
                                onSelectCloudTarget: Vk,
                                onSaveNameChange: c,
                                className: s8.list
                            }), (0, z.jsx)(D6, {
                                className: s8.detail,
                                onSaveGameSelect: h
                            })]
                        })
                    })
                })
            })
        }));

        function a8() {
            return dk.value ?? lL.value
        }

        function o8() {
            const e = sl(dk);
            return (0, Y.useCallback)((() => {
                Vr(e) ? Pb(Nb.saveGame) : Dk()
            }), [e])
        }
        X.add("game-ui/menu/components/save-game-screen/save-game-screen.tsx", {
            get SaveGameScreen() {
                return i8
            },
            set SaveGameScreen(e) {
                i8 = e
            },
            get getInitialSaveName() {
                return a8
            },
            set getInitialSaveName(e) {
                a8 = e
            },
            get useQuicksave() {
                return o8
            },
            set useQuicksave(e) {
                o8 = e
            }
        });
        let r8 = {
            container: "container_vNp",
            input: "input_Lfn",
            label: "label_F5D"
        };
        X.add("game-ui/menu/themes/save-slot-list-item-input-field.module.scss", {
            get classes() {
                return r8
            },
            set classes(e) {
                Object.assign(r8, e)
            }
        });
        const l8 = r8;
        let c8 = {
            "save-slot-item": "save-slot-item_oai",
            saveSlotItem: "save-slot-item_oai",
            locked: "locked_k9Y",
            "theme-icon": "theme-icon_tB3",
            themeIcon: "theme-icon_tB3",
            title: "title_Y9K",
            "population-value": "population-value_XhI",
            populationValue: "population-value_XhI",
            "population-icon": "population-icon_aqa",
            populationIcon: "population-icon_aqa",
            date: "date_Oac",
            "state-icon": "state-icon_zkF",
            stateIcon: "state-icon_zkF",
            "title-inner": "title-inner_nf4",
            titleInner: "title-inner_nf4",
            space: "space_evY",
            tooltip: "tooltip_N74",
            hint: "hint_iLn"
        };
        X.add("game-ui/menu/components/shared/save-slot-item/save-slot-item.module.scss", {
            get classes() {
                return c8
            },
            set classes(e) {
                Object.assign(c8, e)
            }
        });
        const u8 = c8;
        var d8 = ({
            focusKey: e,
            locked: t = !1,
            selected: n = !1,
            saveName: s,
            saveGame: i,
            slotId: a,
            inputAction: o,
            onSaveNameChange: r,
            onSelectSave: l,
            onSelect: c
        }) => {
            const u = (0, Y.useRef)(null),
                [d, m] = (0, Y.useState)(!1),
                h = sl(fk).find((e => e.id === i?.theme)),
                g = i ? $K(i.cloudTarget, i.isReadonly) : null,
                p = a8();
            (0, Y.useEffect)((() => {
                if (n) {
                    if (u.current) {
                        u.current.focus();
                        const e = u.current.value.length;
                        u.current.setSelectionRange(0, e)
                    }
                    i ? (r && r(i.displayName), l && l(i)) : s && r && r(s)
                }
            }), [r, c, l, i, s, n]);
            const f = (0, Y.useCallback)((e => r && r(e.target.value)), [r]),
                x = (0, Y.useCallback)((e => {
                    e && (i && (l && l(i), r && r(i.displayName)), c && c(a)), m(e)
                }), [r, c, l, i, a]),
                v = (0, Y.useCallback)((() => {
                    i && (t || l && l(i), r && r(i.displayName)), t || c && c(a)
                }), [t, r, c, l, i, a]),
                _ = (0, Y.useCallback)((() => {
                    s || r && r(p)
                }), [p, r, s]);
            return (0, z.jsxs)(Ip, {
                onClick: v,
                focusKey: t ? Ig : e || Ig,
                className: Zu()(u8.saveSlotItem, t && u8.locked, n && "selected"),
                onFocusChange: x,
                children: [(0, z.jsx)(Pf, {
                    action: o,
                    active: d,
                    className: u8.hint
                }), i && (0, z.jsx)(FK, {
                    src: h?.icon ?? "",
                    className: u8.themeIcon
                }), null != g && (0, z.jsx)(ef, {
                    src: g,
                    className: u8.stateIcon
                }), (0, z.jsx)("div", {
                    className: u8.title,
                    children: !i && n ? (0, z.jsx)(H3, {
                        ref: u,
                        maxLength: 85,
                        placeholder: (0, z.jsx)(Pc.Menu.NAME_FIELD_PLACEHOLDER, {}),
                        value: s || p,
                        onChange: f,
                        onBlur: _,
                        vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                            hash: "SaveName"
                        }),
                        theme: l8
                    }) : (0, z.jsx)("div", {
                        className: u8.titleInner,
                        children: i ? i.displayName : (0, z.jsx)(Pc.Menu.EMPTY_SLOT, {})
                    })
                }), i && (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)("div", {
                        className: u8.populationValue,
                        children: (0, z.jsx)(Gc, {
                            value: i.population,
                            unit: Oc.Integer
                        })
                    }), (0, z.jsx)(ef, {
                        src: "Media/Game/Icons/Citizen.svg",
                        className: u8.populationIcon
                    }), (0, z.jsx)(HK, {
                        className: u8.date,
                        children: (0, z.jsx)(Ru, {
                            value: i.lastModified
                        })
                    })]
                })]
            })
        };
        X.add("game-ui/menu/components/shared/save-slot-item/save-slot-item.tsx", {
            get SaveSlotItem() {
                return d8
            },
            set SaveSlotItem(e) {
                d8 = e
            }
        });
        let m8 = {
            "save-slot-list": "save-slot-list_QCI child-opacity-transition_nkS",
            saveSlotList: "save-slot-list_QCI child-opacity-transition_nkS",
            scrollable: "scrollable_yF6",
            "name-field": "name-field_c6v",
            nameField: "name-field_c6v",
            "name-input": "name-input_NmH",
            nameInput: "name-input_NmH"
        };
        X.add("game-ui/menu/components/load-game-screen/save-slot-list/save-slot-list.module.scss", {
            get classes() {
                return m8
            },
            set classes(e) {
                Object.assign(m8, e)
            }
        });
        const h8 = m8;
        var g8 = (0, Y.forwardRef)((function ({
            selectedSlot: e,
            sortedSaves: t,
            ordering: n,
            className: s,
            onSelectSave: i,
            onSelectOrdering: a,
            onSelectSlot: o
        }, r) {
            const l = (0, Y.useMemo)((() => t.find((e => "ParadoxMods" === e.cloudTarget)) ? k4 : k4.filter((e => e !== w4.Downloaded))), [t]),
                c = (0, Y.useMemo)((() => ({
                    "Switch Ordering": e => {
                        lp(rp.dragSlider), e < 0 ? (lp(rp.selectPreviousItem), a(XN(l, l.indexOf(n), !0) ?? l[l.length - 1])) : e > 0 && (lp(rp.selectNextItem), a($N(l, l.indexOf(n), !0) ?? l[0]))
                    }
                })), [l, a, n]),
                u = (0, Y.useCallback)((e => i(e.id)), [i]);
            return (0, z.jsx)(Ag, {
                actions: c,
                children: (0, z.jsxs)("div", {
                    ref: r,
                    className: Zu()(h8.saveSlotList, s),
                    children: [(0, z.jsx)(D4, {
                        options: l,
                        selectedOrdering: n,
                        onSelectOrdering: a
                    }), (0, z.jsx)(tp, {
                        initialFocused: e < t.length ? `Save->${t[e].id}` : void 0,
                        children: (0, z.jsx)(ff, {
                            className: h8.scrollable,
                            children: t.map(((t, n) => (0, z.jsx)(d8, {
                                slotId: n,
                                focusKey: `Save->${t.id}`,
                                locked: t.locked,
                                selected: e === n,
                                saveGame: t,
                                inputAction: "Load Game",
                                onSelectSave: u,
                                onSelect: o
                            }, n)))
                        })
                    })]
                })
            })
        }));
        X.add("game-ui/menu/components/load-game-screen/save-slot-list/save-slot-list.tsx", {
            get SaveSlotList() {
                return g8
            },
            set SaveSlotList(e) {
                g8 = e
            }
        });
        let p8 = {
            "save-slot": "save-slot_w9I child-opacity-transition_nkS",
            saveSlot: "save-slot_w9I child-opacity-transition_nkS",
            locked: "locked_ZDr",
            "theme-icon": "theme-icon_I6O",
            themeIcon: "theme-icon_I6O",
            "humidity-icon": "humidity-icon_cuF",
            humidityIcon: "humidity-icon_cuF",
            title: "title_BPq",
            field: "field_tWJ",
            "population-icon": "population-icon_TMS",
            populationIcon: "population-icon_TMS",
            date: "date_vy3",
            "empty-label": "empty-label_w3f",
            emptyLabel: "empty-label_w3f",
            input: "input_XA8",
            "title-content": "title-content_PH_",
            titleContent: "title-content_PH_",
            image: "image_H0A",
            scrollable: "scrollable_wz4",
            "scrollable-content": "scrollable-content_VzH",
            scrollableContent: "scrollable-content_VzH",
            description: "description_EAs",
            label: "label_W0E",
            value: "value_Azu",
            "scrollable-footer": "scrollable-footer_TG4",
            scrollableFooter: "scrollable-footer_TG4"
        };
        X.add("game-ui/menu/components/load-game-screen/save-slots/save-slot/save-slot.module.scss", {
            get classes() {
                return p8
            },
            set classes(e) {
                Object.assign(p8, e)
            }
        });
        const f8 = p8;
        var x8 = ({
            focusKey: e,
            locked: t = !1,
            saveGame: n,
            selected: s = !1,
            slotId: i,
            className: a,
            onSelectSave: o,
            onSelect: r
        }) => {
            const l = (0, Y.useCallback)((e => {
                    e && (r && r(i), n && o && o(n))
                }), [r, o, n, i]),
                c = (0, Y.useCallback)((() => {
                    t || (n && o && o(n), r && r(i))
                }), [t, r, o, n, i]);
            return (0, z.jsxs)(Ip, {
                focusKey: t ? Ig : e || Ig,
                onClick: c,
                onFocusChange: l,
                className: Zu()(f8.saveSlot, t && f8.locked, s && "selected", a),
                children: [n && (0, z.jsx)("div", {
                    className: f8.title,
                    children: (0, z.jsx)("div", {
                        className: f8.titleContent,
                        children: n?.displayName
                    })
                }), null != n && (0, z.jsx)(qp, {
                    src: n?.preview,
                    className: f8.image
                }), (0, z.jsx)(ff, {
                    autoScroll: !0,
                    className: f8.scrollable,
                    children: (0, z.jsxs)("div", {
                        className: f8.scrollableContent,
                        children: [n ? (0, z.jsxs)(z.Fragment, {
                            children: [(0, z.jsx)(v8, {
                                label: (0, z.jsx)(Pc.Menu.CITY_NAME_LABEL, {}),
                                children: n?.cityName
                            }), (0, z.jsx)(v8, {
                                label: (0, z.jsx)(Pc.GameListScreen.POPULATION_LABEL, {}),
                                children: (0, z.jsx)(Gc, {
                                    value: n?.population,
                                    unit: Oc.Integer
                                })
                            }), (0, z.jsx)(v8, {
                                label: (0, z.jsx)(Pc.Menu.SIMULATION_DATE_LABEL, {}),
                                children: (0, z.jsx)(Lu, {
                                    value: n?.simulationDate
                                })
                            }), (0, z.jsx)(v8, {
                                label: (0, z.jsx)(Pc.GameListScreen.MONEY_LABEL, {}),
                                children: (0, z.jsx)(Gc, {
                                    value: n?.money,
                                    unit: Oc.Money
                                })
                            }), (0, z.jsx)(v8, {
                                label: (0, z.jsx)(Pc.GameListScreen.XP_LABEL, {}),
                                children: (0, z.jsx)(Gc, {
                                    value: n?.xp,
                                    unit: Oc.Integer
                                })
                            }), null != n?.mapName && (0, z.jsx)(v8, {
                                label: (0, z.jsx)(Pc.GameListScreen.MAP_LABEL, {}),
                                children: (0, z.jsx)(Pc.Maps.MAP_TITLE, {
                                    hash: n.mapName,
                                    fallback: n.mapName
                                })
                            })]
                        }) : (0, z.jsx)("div", {
                            className: Zu()(f8.emptyLabel, f8.locked),
                            children: (0, z.jsx)(Pc.Menu.EMPTY_SLOT, {})
                        }), (0, z.jsx)("div", {
                            className: f8.scrollableFooter
                        })]
                    })
                })]
            })
        };
        const v8 = ({
            label: e,
            children: t
        }) => (0, z.jsxs)("div", {
            className: f8.field,
            children: [(0, z.jsx)("div", {
                className: f8.label,
                children: e
            }), (0, z.jsx)("div", {
                className: f8.value,
                children: t
            })]
        });
        X.add("game-ui/menu/components/load-game-screen/save-slots/save-slot/save-slot.tsx", {
            get SaveSlot() {
                return x8
            },
            set SaveSlot(e) {
                x8 = e
            }
        });
        let _8 = {
            "save-game-slots": "save-game-slots_bkN",
            saveGameSlots: "save-game-slots_bkN",
            header: "header_bYW child-opacity-transition_nkS",
            slots: "slots_qGG",
            slot: "slot_yiX",
            "name-field": "name-field_Tyf child-opacity-transition_nkS",
            nameField: "name-field_Tyf child-opacity-transition_nkS",
            footer: "footer_x7R child-opacity-transition_nkS",
            "footer-button": "footer-button_OFi",
            footerButton: "footer-button_OFi"
        };
        X.add("game-ui/menu/components/load-game-screen/save-slots/save-slots.module.scss", {
            get classes() {
                return _8
            },
            set classes(e) {
                Object.assign(_8, e)
            }
        });
        const b8 = _8;
        var T8 = (0, Y.forwardRef)((function ({
            slots: e,
            selectedSlot: t,
            sortedSaves: n,
            selectedSave: s,
            ordering: i,
            className: a,
            onSelectOrdering: o,
            onSelectSave: r,
            onLoadGameSelect: l,
            onOptionsToggle: c,
            onSelectSlot: u
        }, d) {
            const m = Dm(),
                h = null != s && s.locked,
                g = (0, Y.useMemo)((() => n.find((e => "ParadoxMods" === e.cloudTarget)) ? k4 : k4.filter((e => e !== w4.Downloaded))), [n]),
                p = (0, Y.useMemo)((() => ({
                    "Switch Ordering": e => {
                        lp(rp.dragSlider), e < 0 ? (lp(rp.selectPreviousItem), o(XN(g, g.indexOf(i), !0) ?? g[g.length - 1])) : e > 0 && (lp(rp.selectNextItem), o($N(g, g.indexOf(i), !0) ?? g[0]))
                    }
                })), [o, i, g]),
                f = (0, Y.useCallback)((e => r(e.id)), [r]),
                x = (0, Y.useMemo)((() => !n || 0 === n.length || t > n.length - 1 ? `Save->Empty:${t}` : `Save->${n[t]?.id}`), [t, n]);
            return (0, z.jsx)(Ag, {
                actions: p,
                children: (0, z.jsxs)("div", {
                    ref: d,
                    className: Zu()(b8.saveGameSlots, a),
                    children: [(0, z.jsx)(D4, {
                        options: g,
                        selectedOrdering: i,
                        onSelectOrdering: o,
                        className: b8.header
                    }), (0, z.jsx)("div", {
                        className: b8.slots,
                        children: (0, z.jsx)(tp, {
                            initialFocused: x,
                            children: Array.from({
                                length: e
                            }, ((e, s) => !n || 0 === n.length || s > n.length - 1 ? (0, z.jsx)(x8, {
                                slotId: s,
                                locked: !0,
                                className: b8.slot
                            }, s) : (0, z.jsx)(x8, {
                                slotId: s,
                                selected: t === s,
                                focusKey: `Save->${n[s].id}`,
                                locked: n[s].locked,
                                saveGame: n[s],
                                className: b8.slot,
                                onSelectSave: f,
                                onSelect: u
                            }, s)))
                        })
                    }), (0, z.jsx)("div", {
                        className: b8.footer,
                        children: null == s || m ? void 0 : (0, z.jsxs)(z.Fragment, {
                            children: [(0, z.jsx)(S4, {
                                className: b8.footerButton,
                                disabled: h,
                                onSelect: l,
                                children: (0, z.jsx)(Pc.Menu.LOAD_GAME_BUTTON, {})
                            }), (0, z.jsx)(S4, {
                                className: b8.footerButton,
                                disabled: h,
                                onSelect: c,
                                children: (0, z.jsx)(Pc.Menu.SAVE_OPTIONS, {})
                            })]
                        })
                    })]
                })
            })
        }));
        X.add("game-ui/menu/components/load-game-screen/save-slots/save-slots.tsx", {
            get SaveSlots() {
                return T8
            },
            set SaveSlots(e) {
                T8 = e
            }
        });
        let E8 = {
            content: "content_xXo",
            "step-container": "step-container_Cmk",
            stepContainer: "step-container_Cmk",
            step: "step_buR",
            detail: "detail_T2m"
        };
        X.add("game-ui/menu/components/load-game-screen/load-game-screen.module.scss", {
            get classes() {
                return E8
            },
            set classes(e) {
                Object.assign(E8, e)
            }
        });
        const I8 = E8;
        var y8;
        ! function (e) {
            e[e.selection = 0] = "selection", e[e.options = 1] = "options"
        }(y8 || (y8 = {}));
        var j8 = Y.forwardRef((function ({
            focusKey: e,
            className: t,
            onClose: n,
            requireConfirmation: s = !1
        }, i) {
            const [a, o] = (0, Y.useState)(y8.selection), [r, l] = (0, Y.useState)(w4.LastModified), c = sl(bk), u = (0, Y.useMemo)((() => A4(c, r)), [r, c]), [d, m] = (0, Y.useState)((() => function (e) {
                const t = A4(bk.value, e);
                return YN(t, "id")
            }(r))), [h, g] = (0, Y.useState)(u.findIndex((e => e.id === d))), p = c.reduce(((e, t) => "ParadoxMods" === t.cloudTarget ? e + 1 : e), 0), f = sl(gk) + p, x = f + p, v = (0, Y.useMemo)((() => c.find((e => e.id === d)) ?? null), [c, d]), [_, b] = (0, Y.useState)(v?.cityName ?? ""), [T, E] = (0, Y.useState)(v?.theme ?? ""), I = sl(mk), [y, j] = (0, Y.useState)(v?.options ? {
                ...I,
                ...v?.options
            } : {
                ...I
            }), S = function (e) {
                const t = ["theme", "leftHandTraffic"];
                null != e?.options && (e.options.unlockAll && t.push("unlockAll"), e.options.unlimitedMoney && t.push("unlimitedMoney"), e.options.unlockMapTiles && t.push("unlockMapTiles"));
                return t
            }(v), [C, N] = kk(), w = (0, Y.useContext)(sE), O = sl(rk), P = sl(VE), L = (0, Y.useCallback)((e => {
                const t = c.find((t => t.id === e));
                null != t && (b(t.cityName), E(t.theme), j(t?.options ? {
                    ...I,
                    ...t?.options
                } : {
                    ...I
                }), m(e))
            }), [I, c]), A = (0, Y.useCallback)((() => {
                a === y8.options ? (o(y8.selection), lp(rp.closeMenu)) : n()
            }), [a, n]), M = (0, Y.useCallback)((() => {
                a === y8.selection ? (o(y8.options), lp(rp.openMenu)) : (o(y8.selection), lp(rp.closeMenu))
            }), [a]), R = sl(Gk), k = (0, Y.useCallback)((e => {
                const t = e?.id || d;
                if (t) {
                    const e = e => {
                        Rk(C), Sk({
                            saveId: t,
                            cityName: _,
                            options: y
                        }, e)
                    };
                    if (s && !R) return void w.showDialog((0, z.jsx)(jI, {
                        zIndex: 100,
                        title: (0, z.jsx)(Pc.Common.WARNING, {}),
                        message: (0, z.jsx)(Pc.GameListScreen.CONFIRM_UNSAVED_MESSAGE, {}),
                        onConfirm: e,
                        dismissable: !0
                    }));
                    e(!1)
                }
            }), [d, s, R, C, _, y, w]), D = (0, Y.useCallback)((() => {
                const e = u.findIndex((e => e.id === v.id)),
                    t = u[e + 1] || u[e - 1] || void 0;
                Nk(v.id), m(t?.id), o(y8.selection)
            }), [v, u]), F = (0, Y.useCallback)((() => {
                wk(v.id)
            }), [v]), U = (0, Y.useMemo)((() => ({
                "Save Options": () => {
                    lp(rp.selectItem), M()
                },
                "Load Game": () => {
                    lp(rp.selectItem), k()
                }
            })), [k, M]);
            return (0, z.jsx)(q$, {
                ref: i,
                focusKey: e,
                title: S8(a),
                className: t,
                onClose: A,
                children: (0, z.jsx)(Ag, {
                    actions: U,
                    children: 3 !== f || x > 3 ? (0, z.jsx)("div", {
                        className: I8.content,
                        children: (0, z.jsxs)(tp, {
                            children: [(0, z.jsx)("div", {
                                className: I8.stepContainer,
                                children: (0, z.jsxs)(ud, {
                                    children: [a === y8.selection && (0, z.jsx)(mh, {
                                        styles: P3,
                                        children: -1 === f ? (0, z.jsx)(R6, {
                                            selectedSave: d,
                                            ordering: r,
                                            className: I8.step,
                                            onSelectSave: L,
                                            onSelectOrdering: l,
                                            onDoubleClick: k
                                        }) : (0, z.jsx)(g8, {
                                            selectedSlot: h,
                                            ordering: r,
                                            sortedSaves: u,
                                            className: I8.step,
                                            onSelectSave: L,
                                            onSelectOrdering: l,
                                            onSelectSlot: g
                                        })
                                    }, y8.selection), a === y8.options && (0, z.jsx)(mh, {
                                        styles: QX,
                                        children: (0, z.jsx)(w6, {
                                            cityName: _,
                                            theme: T,
                                            options: y,
                                            disabledOptions: S,
                                            className: I8.step,
                                            onCityNameChange: b,
                                            onThemeChange: E,
                                            onOptionsChange: j,
                                            tutorialState: C,
                                            setTutorialState: N,
                                            onDeleteGame: v?.isReadonly ? void 0 : D,
                                            onShareGame: O || v?.isReadonly || !P ? void 0 : F,
                                            pastModsEnabled: v?.modsEnabled
                                        })
                                    }, y8.options)]
                                })
                            }), (0, z.jsx)(L6, {
                                save: v,
                                activeStep: a,
                                className: I8.detail,
                                onOptionsToggle: M,
                                onLoadGameSelect: k
                            })]
                        })
                    }) : (0, z.jsx)(tp, {
                        children: (0, z.jsxs)(ud, {
                            children: [a === y8.selection && (0, z.jsx)(mh, {
                                styles: P3,
                                children: (0, z.jsx)("div", {
                                    className: I8.content,
                                    children: (0, z.jsx)(T8, {
                                        slots: x,
                                        selectedSlot: h,
                                        sortedSaves: u,
                                        ordering: r,
                                        selectedSave: v,
                                        onSelectSave: L,
                                        onLoadGameSelect: k,
                                        onOptionsToggle: M,
                                        onSelectOrdering: l,
                                        onSelectSlot: g
                                    })
                                })
                            }), a === y8.options && (0, z.jsx)(mh, {
                                styles: QX,
                                children: (0, z.jsxs)("div", {
                                    className: I8.content,
                                    children: [(0, z.jsx)("div", {
                                        className: I8.stepContainer,
                                        children: (0, z.jsx)(w6, {
                                            cityName: _,
                                            theme: T,
                                            options: y,
                                            disabledOptions: S,
                                            className: I8.step,
                                            onCityNameChange: b,
                                            onThemeChange: E,
                                            onOptionsChange: j,
                                            tutorialState: C,
                                            setTutorialState: N,
                                            onDeleteGame: v?.isReadonly ? void 0 : D,
                                            onShareGame: O || v?.isReadonly || !P ? void 0 : F,
                                            pastModsEnabled: v?.modsEnabled
                                        })
                                    }), (0, z.jsx)(L6, {
                                        save: v,
                                        className: I8.detail,
                                        onOptionsToggle: M,
                                        onLoadGameSelect: k
                                    })]
                                })
                            })]
                        })
                    })
                })
            })
        }));

        function S8(e) {
            return e === y8.selection ? (0, z.jsx)(Pc.Menu.LOAD_GAME, {}) : e === y8.options ? (0, z.jsx)(Pc.Menu.SAVE_OPTIONS, {}) : null
        }

        function C8() {
            const e = (0, Y.useContext)(sE),
                t = sl(Gk),
                n = sl(tk);
            return (0, Y.useCallback)((() => {
                n && (t ? Fk(!1) : e.showDialog((0, z.jsx)(jI, {
                    title: (0, z.jsx)(Pc.Common.WARNING, {}),
                    message: (0, z.jsx)(Pc.GameListScreen.CONFIRM_UNSAVED_MESSAGE, {}),
                    onConfirm: Fk,
                    dismissable: !0
                })))
            }), [e, t, n])
        }
        X.add("game-ui/menu/components/load-game-screen/load-game-screen.tsx", {
            get LoadGameStep() {
                return y8
            },
            set LoadGameStep(e) {
                y8 = e
            },
            get LoadGameScreen() {
                return j8
            },
            set LoadGameScreen(e) {
                j8 = e
            },
            get useQuickLoad() {
                return C8
            },
            set useQuickLoad(e) {
                C8 = e
            }
        });
        let N8 = {
            enter: "enter_C0S enter_kO6",
            "enter-active": "enter-active_ule enter-active_lrI",
            enterActive: "enter-active_ule enter-active_lrI",
            exit: "exit_TO8 exit_Von",
            "exit-active": "exit-active_KS9 exit-active_jtN",
            exitActive: "exit-active_KS9 exit-active_jtN"
        };
        X.add("game-ui/game/transitions/toolbar-panel-children.module.scss", {
            get classes() {
                return N8
            },
            set classes(e) {
                Object.assign(N8, e)
            }
        });
        const w8 = N8;
        var O8 = Y.createContext(null);
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/asset-detail-panel-context.ts", {
            get AssetDetailPanelContext() {
                return O8
            },
            set AssetDetailPanelContext(e) {
                O8 = e
            }
        });
        let P8 = {
            "asset-category-tab-bar": "asset-category-tab-bar_IGA",
            assetCategoryTabBar: "asset-category-tab-bar_IGA",
            "tab-icon": "tab-icon_YCN",
            tabIcon: "tab-icon_YCN",
            locked: "locked_u4O",
            lock: "lock_4IG",
            items: "items_gPf",
            "close-button": "close-button_kMj",
            closeButton: "close-button_kMj"
        };
        X.add("game-ui/game/components/asset-menu/asset-category-tab-bar/asset-category-tab-bar.module.scss", {
            get classes() {
                return P8
            },
            set classes(e) {
                Object.assign(P8, e)
            }
        });
        const L8 = P8;
        let A8 = {
            button: "button_Yym",
            icon: "icon_LAz",
            locked: "locked_jsF",
            "item-inner": "item-inner_NKx",
            itemInner: "item-inner_NKx",
            highlight: "highlight_Y8Z",
            lock: "lock_HjE",
            "single-tab": "single-tab_l6M",
            singleTab: "single-tab_l6M"
        };
        X.add("game-ui/game/components/asset-menu/asset-category-tab-bar/category-item.module.scss", {
            get classes() {
                return A8
            },
            set classes(e) {
                Object.assign(A8, e)
            }
        });
        const M8 = A8;
        var R8 = (0, Y.memo)((function ({
            categories: e,
            selectedCategory: t,
            onChange: n,
            onClose: s
        }) {
            const i = Dm();
            return (0, z.jsxs)("div", {
                className: L8.assetCategoryTabBar,
                children: [(0, z.jsx)("div", {
                    className: L8.items,
                    children: (0, z.jsx)(I$, {
                        hidden: e.length < 2,
                        children: e.map((s => (0, z.jsx)(k8, {
                            singleTab: 1 === e.length,
                            subCategory: s,
                            selected: Ur(t, s.entity),
                            onSelect: n
                        }, Dr(s.entity))))
                    })
                }), !i && (0, z.jsx)(sf, {
                    tinted: !0,
                    focusKey: Ig,
                    src: kT.closeIcon,
                    theme: of ,
                    className: Zu()(kT.closeButton, L8.closeButton),
                    onSelect: s
                })]
            })
        }));
        const k8 = ({
            subCategory: e,
            selected: t,
            singleTab: n = !1,
            onSelect: s
        }) => {
            og(e.uiTag, t && !e.locked), rg(e.uiTag, t && !e.locked);
            const i = (0, Y.useCallback)((() => s(e.entity)), [s, e.entity]),
                a = (0, Y.useContext)(O8),
                o = (0, Y.useCallback)((() => a && a.showDetails(e.entity)), [e.entity, a]),
                r = (0, Y.useCallback)((() => a && a.hideDetails(e.entity)), [e.entity, a]);
            return (0, z.jsx)(Tg, {
                tooltip: !a && (0, z.jsx)(Pc.SubServices.NAME, {
                    hash: e.name
                }),
                children: n ? (0, z.jsxs)("div", {
                    className: M8.singleTab,
                    onMouseOver: o,
                    onMouseLeave: r,
                    children: [(0, z.jsx)(wx, {
                        uiTag: e.uiTag,
                        active: !e.locked,
                        disableBlinking: n,
                        children: (0, z.jsx)("div", {
                            className: M8.itemInner
                        })
                    }), (0, z.jsx)("img", {
                        src: e.icon,
                        className: Zu()(L8.tabIcon, e.locked && L8.locked)
                    }), e.locked && (0, z.jsx)(C$, {
                        className: L8.lock
                    })]
                }) : (0, z.jsxs)(sf, {
                    disableHint: !0,
                    focusKey: Ig,
                    src: e.icon,
                    selected: t,
                    theme: M8,
                    className: Zu()(e.locked && M8.locked),
                    onSelect: i,
                    onMouseOver: o,
                    onMouseLeave: r,
                    children: [(0, z.jsx)(wx, {
                        uiTag: e.uiTag,
                        active: !e.locked,
                        disableBlinking: n,
                        children: (0, z.jsx)("div", {
                            className: M8.itemInner
                        })
                    }), e.highlight && (0, z.jsx)(FQ, {
                        className: M8.highlight
                    }), e.locked && (0, z.jsx)(C$, {
                        className: M8.lock
                    })]
                })
            })
        };
        X.add("game-ui/game/components/asset-menu/asset-category-tab-bar/asset-category-tab-bar.tsx", {
            get AssetCategoryTabBar() {
                return R8
            },
            set AssetCategoryTabBar(e) {
                R8 = e
            }
        });
        var D8 = "Game.UI.Common.NumberProperty",
            F8 = "Game.UI.Common.Number2Property",
            U8 = "Game.UI.Common.Number2Property",
            B8 = "Game.UI.Common.StringProperty";

        function G8(e) {
            return "minValue" in e && "maxValue" in e
        }

        function V8(e) {
            return "value" in e && "number" == typeof e.value
        }
        X.add("game-ui/common/property-field/typed-property.ts", {
            get NUMBER_PROPERTY() {
                return D8
            },
            set NUMBER_PROPERTY(e) {
                D8 = e
            },
            get NUMBER2_PROPERTY() {
                return F8
            },
            set NUMBER2_PROPERTY(e) {
                F8 = e
            },
            get NUMBER_RANGE_PROPERTY() {
                return U8
            },
            set NUMBER_RANGE_PROPERTY(e) {
                U8 = e
            },
            get STRING_PROPERTY() {
                return B8
            },
            set STRING_PROPERTY(e) {
                B8 = e
            },
            get isNumberRange() {
                return G8
            },
            set isNumberRange(e) {
                G8 = e
            },
            get isNumber() {
                return V8
            },
            set isNumber(e) {
                V8 = e
            }
        });
        let H8 = {
            field: "field_AjF",
            icon: "icon_WOc",
            content: "content_dov"
        };
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/effect-field.module.scss", {
            get classes() {
                return H8
            },
            set classes(e) {
                Object.assign(H8, e)
            }
        });
        const K8 = H8,
            W8 = ({
                type: e,
                delta: t,
                unit: n
            }) => {
                const s = (0, Y.useMemo)((() => function (e) {
                    switch (e) {
                    case cC.Attractiveness:
                        return "Media/Game/Icons/Tourism.svg";
                    case cC.CrimeAccumulation:
                    case cC.PoliceStationUpkeep:
                        return "Media/Game/Icons/Police.svg";
                    case cC.DisasterWarningTime:
                    case cC.DisasterDamageRate:
                        return "Media/Game/Icons/Disaster.svg";
                    case cC.DiseaseProbability:
                        return "Media/Game/Icons/Healthcare.svg";
                    case cC.ParkEntertainment:
                        return "Media/Game/Icons/ParksAndRecreation.svg";
                    case cC.CriminalMonitorProbability:
                        return "Media/Game/Icons/Police.svg";
                    case cC.IndustrialAirPollution:
                        return "Media/Game/Icons/AirPollution.svg";
                    case cC.IndustrialGroundPollution:
                        return "Media/Game/Icons/GroundPollution.svg";
                    case cC.IndustrialGarbage:
                        return "Media/Game/Icons/Garbage.svg";
                    case cC.RecoveryFailChange:
                        return "Media/Game/Icons/Healthcare.svg";
                    case cC.OreResourceAmount:
                        return "Media/Game/Icons/Coal.svg";
                    case cC.OilResourceAmount:
                        return "Media/Game/Icons/Oil.svg";
                    case cC.UniversityInterest:
                        return "Media/Game/Icons/Education.svg";
                    case cC.OfficeSoftwareDemand:
                        return "Media/Game/Icons/ZoneOfficeHigh.svg";
                    case cC.IndustrialElectronicsDemand:
                        return "Media/Game/Icons/ZoneIndustrialManufacturing.svg";
                    case cC.OfficeSoftwareEfficiency:
                        return "Media/Game/Icons/ZoneOfficeHigh.svg";
                    case cC.IndustrialElectronicsEfficiency:
                        return "Media/Game/Icons/ZoneIndustrialManufacturing.svg";
                    case cC.TelecomCapacity:
                        return "Media/Game/Icons/Telecom.svg";
                    case cC.Entertainment:
                        return "Media/Game/Icons/Entertainment.svg";
                    case cC.HighwayTrafficSafety:
                        return "Media/Game/Icons/Roads.svg";
                    case cC.PrisonTime:
                    case cC.CrimeProbability:
                        return "Media/Game/Icons/Police.svg";
                    case cC.CollegeGraduation:
                    case cC.UniversityGraduation:
                        return "Media/Game/Icons/Graduation.svg";
                    case cC.ImportCost:
                        return "Media/Game/Icons/OutsideConnections.svg";
                    case cC.LoanInterest:
                        return "Media/Game/Icons/Money.svg";
                    case cC.BuildingLevelingCost:
                        return "Media/Game/Icons/BuildingLevel.svg";
                    case cC.ExportCost:
                        return "Media/Game/Icons/OutsideConnections.svg";
                    case cC.TaxiStartingFee:
                        return "Media/Game/Icons/Taxi.svg";
                    case cC.IndustrialEfficiency:
                        return "Media/Game/Icons/ZoneIndustrial.svg";
                    case cC.OfficeEfficiency:
                        return "Media/Game/Icons/ZoneOffice.svg";
                    case cC.PollutionHealthAffect:
                        return "Media/Game/Icons/AirPollution.svg";
                    case cC.HospitalEfficiency:
                        return "Media/Game/Icons/Healthcare.svg";
                    default:
                        return console.warn(`Missing icon for CityModifierType.${e}!`), "Media/Placeholder.svg"
                    }
                }(e)), [e]);
                return (0, z.jsxs)("div", {
                    className: K8.field,
                    children: [(0, z.jsx)("img", {
                        src: s,
                        className: K8.icon
                    }), (0, z.jsx)("div", {
                        className: K8.content,
                        children: (0, z.jsx)(Pc.Properties.CITY_MODIFIER_EFFECT, {
                            TYPE: (0, z.jsx)(Pc.Properties.CITY_MODIFIER, {
                                hash: e
                            }),
                            DELTA: (0, z.jsx)(Gc, {
                                value: t,
                                unit: n,
                                signed: !0
                            })
                        })
                    })]
                })
            };
        const z8 = ({
            type: e,
            delta: t,
            unit: n,
            radius: s
        }) => {
            const i = (0, Y.useMemo)((() => function (e) {
                switch (e) {
                case uC.CrimeAccumulation:
                    return "Media/Game/Icons/Police.svg";
                case uC.ForestFireResponseTime:
                case uC.ForestFireHazard:
                    return "Media/Game/Icons/FireSafety.svg";
                case uC.Wellbeing:
                    return "Media/Game/Icons/WellBeing.svg";
                case uC.Health:
                    return "Media/Game/Icons/Healthcare.svg";
                default:
                    return console.warn(`Missing icon for LocalModifierType.${e}!`), "Media/Placeholder.svg"
                }
            }(e)), [e]);
            return (0, z.jsxs)("div", {
                className: K8.field,
                children: [(0, z.jsx)("img", {
                    src: i,
                    className: K8.icon
                }), (0, z.jsx)("div", {
                    className: K8.content,
                    children: (0, z.jsx)(Pc.Properties.LOCAL_MODIFIER_EFFECT, {
                        TYPE: (0, z.jsx)(Pc.Properties.LOCAL_MODIFIER, {
                            hash: e
                        }),
                        DELTA: (0, z.jsx)(Gc, {
                            value: t,
                            unit: n,
                            signed: !0
                        }),
                        RADIUS: (0, z.jsx)(Gc, {
                            value: s,
                            unit: Oc.Length
                        })
                    })
                })]
            })
        };
        const Y8 = ({
            type: e,
            efficiency: t
        }) => {
            const n = (0, Y.useMemo)((() => function (e) {
                switch (e) {
                case dC.Meals:
                    return "Media/Game/Icons/Meals.svg";
                case dC.Entertainment:
                    return "Media/Game/Icons/Entertainment.svg";
                case dC.Commercial:
                    return "Media/Game/Icons/Commercial.svg";
                case dC.CityIndoors:
                    return "Media/Game/Icons/CityIndoors.svg";
                case dC.Travel:
                    return "Media/Game/Icons/Travel.svg";
                case dC.CityPark:
                    return "Media/Game/Icons/CityPark.svg";
                case dC.CityBeach:
                    return "Media/Game/Icons/CityBeach.svg";
                case dC.Attractions:
                    return "Media/Game/Icons/Attractions.svg";
                case dC.Relaxation:
                    return "Media/Game/Icons/Relaxation.svg";
                case dC.Sightseeing:
                    return "Media/Game/Icons/Sightseeing.svg";
                default:
                    return console.warn(`Missing icon for LeisureType.${e}!`), "Media/Placeholder.svg"
                }
            }(e)), [e]);
            return (0, z.jsxs)("div", {
                className: K8.field,
                children: [(0, z.jsx)("img", {
                    src: n,
                    className: K8.icon
                }), (0, z.jsx)("div", {
                    className: K8.content,
                    children: (0, z.jsx)(Pc.Properties.LEISURE_PROVIDER_EFFECT, {
                        TYPE: (0, z.jsx)(Pc.Properties.LEISURE_TYPE, {
                            hash: e
                        }),
                        EFFICIENCY: (0, z.jsx)(Gc, {
                            value: t,
                            unit: Oc.Integer,
                            signed: !0
                        })
                    })
                })]
            })
        };
        const $8 = ({
            effect: e,
            targetKey: t,
            icon: n,
            typeKey: s
        }) => (0, z.jsxs)("div", {
            className: K8.field,
            children: [(0, z.jsx)("img", {
                src: n,
                className: K8.icon
            }), (0, z.jsx)("div", {
                className: K8.content,
                children: (0, z.jsx)(Pc.Properties.ADJUST_HAPPINESS_MODIFIER_EFFECT, {
                    TYPE: (0, z.jsx)(Pc.Properties.ADJUST_HAPPINESS_MODIFIER_TYPE, {
                        hash: s
                    }),
                    DELTA: (0, z.jsx)(Gc, {
                        value: e,
                        unit: Oc.Percentage,
                        signed: !0
                    }),
                    TARGET: (0, z.jsx)(Pc.Properties.ADJUST_HAPPINESS_MODIFIER_TARGET, {
                        hash: t
                    })
                })
            })]
        });
        var q8 = {
            [lC.CityModifier]: ({
                modifiers: e
            }) => (0, z.jsx)(z.Fragment, {
                children: e.map(((e, t) => (0, z.jsx)(W8, {
                    ...e
                }, t)))
            }),
            [lC.LocalModifier]: ({
                modifiers: e
            }) => (0, z.jsx)(z.Fragment, {
                children: e.map(((e, t) => (0, z.jsx)(z8, {
                    ...e
                }, t)))
            }),
            [lC.LeisureProvider]: ({
                providers: e
            }) => (0, z.jsx)(z.Fragment, {
                children: e.map(((e, t) => (0, z.jsx)(Y8, {
                    ...e
                }, t)))
            }),
            [lC.AdjustHappinessEffect]: ({
                wellbeingEffect: e,
                healthEffect: t,
                targets: n
            }) => (0, z.jsxs)(z.Fragment, {
                children: [e > 0 && n.map((t => (0, z.jsx)($8, {
                    effect: e,
                    targetKey: t,
                    icon: "Media/Game/Icons/WellBeing.svg",
                    typeKey: "Wellbeing"
                }, t))), t > 0 && n.map((e => (0, z.jsx)($8, {
                    effect: t,
                    targetKey: e,
                    icon: "Media/Game/Icons/Healthcare.svg",
                    typeKey: "Health"
                }, e)))]
            })
        };
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/effect-field.tsx", {
            get prefabEffectComponents() {
                return q8
            },
            set prefabEffectComponents(e) {
                q8 = e
            }
        });
        var X8 = ({
                labelId: e,
                unit: t,
                value: n,
                signed: s,
                icon: i,
                valueIcon: a
            }) => (0, z.jsx)(T4, {
                label: (0, z.jsx)(Tc, {
                    id: e
                }),
                icon: i,
                valueIcon: a,
                children: (0, z.jsx)(Gc, {
                    value: n,
                    unit: t,
                    signed: s
                })
            }),
            Q8 = ({
                labelId: e,
                unit: t,
                value: n,
                signed: s,
                icon: i,
                valueIcon: a
            }) => {
                const o = t.includes("money");
                return (0, z.jsxs)(T4, {
                    label: (0, z.jsx)(Tc, {
                        id: e
                    }),
                    icon: i,
                    valueIcon: a,
                    children: [(0, z.jsx)(Gc, {
                        value: n.x,
                        unit: o ? Oc.Money : void 0
                    }), "–", (0, z.jsx)(Gc, {
                        value: n.y,
                        unit: t,
                        signed: s
                    })]
                })
            },
            Z8 = ({
                labelId: e,
                valueId: t,
                icon: n,
                valueIcon: s
            }) => (0, z.jsx)(T4, {
                label: (0, z.jsx)(Tc, {
                    id: e
                }),
                icon: n,
                valueIcon: s,
                children: (0, z.jsx)(Tc, {
                    id: t
                })
            }),
            J8 = {
                [D8]: X8,
                [F8]: Q8,
                [B8]: Z8
            };
        X.add("game-ui/common/property-field/typed-property-field.tsx", {
            get NumberPropertyField() {
                return X8
            },
            set NumberPropertyField(e) {
                X8 = e
            },
            get Number2PropertyField() {
                return Q8
            },
            set Number2PropertyField(e) {
                Q8 = e
            },
            get StringPropertyField() {
                return Z8
            },
            set StringPropertyField(e) {
                Z8 = e
            },
            get propertyFieldComponents() {
                return J8
            },
            set propertyFieldComponents(e) {
                J8 = e
            }
        });
        let e9 = {
            field: "field_rIn",
            header: "header_lrj",
            content: "content_RIT",
            icon: "icon_tiy",
            "value-icon": "value-icon_Yob",
            valueIcon: "value-icon_Yob",
            value: "value_Yc3"
        };
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/property-field.module.scss", {
            get classes() {
                return e9
            },
            set classes(e) {
                Object.assign(e9, e)
            }
        });
        const t9 = e9,
            n9 = {
                ...J8,
                [EC]: X8,
                [IC]: Q8,
                [pC]: ({
                    electricityConsumption: e,
                    waterConsumption: t,
                    garbageAccumulation: n
                }) => (0, z.jsxs)(z.Fragment, {
                    children: [e > 0 && (0, z.jsx)(T4, {
                        label: (0, z.jsx)(Pc.Properties.ELECTRICITY_CONSUMPTION, {}),
                        children: (0, z.jsx)(Gc, {
                            value: e,
                            unit: Oc.Power
                        })
                    }), t > 0 && (0, z.jsx)(T4, {
                        label: (0, z.jsx)(Pc.Properties.WATER_CONSUMPTION, {}),
                        children: (0, z.jsx)(Gc, {
                            value: t,
                            unit: Oc.VolumePerMonth
                        })
                    }), n > 0 && (0, z.jsx)(T4, {
                        label: (0, z.jsx)(Pc.Properties.GARBAGE_ACCUMULATION, {}),
                        children: (0, z.jsx)(Gc, {
                            value: n,
                            unit: Oc.WeightPerMonth
                        })
                    })]
                }),
                [fC]: ({
                    groundPollution: e,
                    airPollution: t,
                    noisePollution: n
                }) => (0, z.jsxs)(z.Fragment, {
                    children: [e > gC.none && (0, z.jsxs)(T4, {
                        label: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS_GROUND, {}),
                        children: [(0, z.jsx)("img", {
                            src: "Media/Game/Icons/GroundPollution.svg",
                            className: t9.icon
                        }), (0, z.jsx)("div", {
                            className: t9.value,
                            children: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS, {
                                index: e
                            })
                        })]
                    }), t > gC.none && (0, z.jsxs)(T4, {
                        label: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS_AIR, {}),
                        children: [(0, z.jsx)("img", {
                            src: "Media/Game/Icons/AirPollution.svg",
                            className: t9.icon
                        }), (0, z.jsx)("div", {
                            className: t9.value,
                            children: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS, {
                                index: t
                            })
                        })]
                    }), n > gC.none && (0, z.jsxs)(T4, {
                        label: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS_NOISE, {}),
                        children: [(0, z.jsx)("img", {
                            src: "Media/Game/Icons/NoisePollution.svg",
                            className: t9.icon
                        }), (0, z.jsx)("div", {
                            className: t9.value,
                            children: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS, {
                                index: n
                            })
                        })]
                    })]
                }),
                [vC]: ({
                    labelId: e,
                    minCapacity: t,
                    maxCapacity: n,
                    voltage: s
                }) => (0, z.jsx)(T4, {
                    label: (0, z.jsx)(Tc, {
                        id: e
                    }),
                    children: (0, z.jsx)(Pc.Properties.POWER_VOLTAGE_FORMAT, {
                        VALUE: (0, z.jsx)(au, {
                            min: t,
                            max: n,
                            unit: Oc.Power
                        }),
                        VOLTAGE: (0, z.jsx)(Pc.Properties.VOLTAGE, {
                            index: s
                        })
                    })
                }),
                [TC]: ({
                    stops: e
                }) => (0, z.jsx)(z.Fragment, {
                    children: Object.entries(e).map((([e, t], n) => t > 0 && (0, z.jsx)(T4, {
                        label: (0, z.jsx)(Pc.Properties.TRANSPORT_STOP_COUNT, {
                            hash: e
                        }),
                        children: (0, z.jsx)(Gc, {
                            value: t,
                            unit: Oc.Integer
                        })
                    }, n)))
                })
            };
        var s9 = ({
            data: e
        }) => (0, z.jsx)(b4.Provider, {
            value: t9,
            children: (0, z.jsx)($A, {
                components: n9,
                data: e
            })
        });
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/property-field.tsx", {
            get PrefabPropertyFields() {
                return s9
            },
            set PrefabPropertyFields(e) {
                s9 = e
            }
        });
        let i9 = {
            "asset-detail-panel": "asset-detail-panel_hf8",
            assetDetailPanel: "asset-detail-panel_hf8",
            "title-bar": "title-bar_I7O child-opacity-transition_nkS",
            titleBar: "title-bar_I7O child-opacity-transition_nkS",
            title: "title_qub",
            "construction-cost-field": "construction-cost-field_I8G",
            constructionCostField: "construction-cost-field_I8G",
            "not-enough-money": "not-enough-money_vtd",
            notEnoughMoney: "not-enough-money_vtd",
            "construction-cost-value": "construction-cost-value_u95",
            constructionCostValue: "construction-cost-value_u95",
            "construction-cost-icon": "construction-cost-icon_hgB",
            constructionCostIcon: "construction-cost-icon_hgB",
            row: "row_H0d child-opacity-transition_nkS",
            content: "content_rep row_H0d child-opacity-transition_nkS",
            "preview-container": "preview-container_sPA",
            previewContainer: "preview-container_sPA",
            preview: "preview_MDY",
            column: "column_dTT",
            description: "description_ZQn",
            effects: "effects_y8n",
            "stats-row": "stats-row_Q3F row_H0d child-opacity-transition_nkS",
            statsRow: "stats-row_Q3F row_H0d child-opacity-transition_nkS",
            "requirements-row": "requirements-row_yaX row_H0d child-opacity-transition_nkS",
            requirementsRow: "requirements-row_yaX row_H0d child-opacity-transition_nkS",
            "already-built-row": "already-built-row_NJp row_H0d child-opacity-transition_nkS",
            alreadyBuiltRow: "already-built-row_NJp row_H0d child-opacity-transition_nkS"
        };
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/asset-detail-panel.module.scss", {
            get classes() {
                return i9
            },
            set classes(e) {
                Object.assign(i9, e)
            }
        });
        const a9 = i9;
        var o9 = Y.forwardRef((function ({
                entity: e,
                selectedCategory: t,
                className: n,
                upgrade: s = !1
            }, i) {
                const a = Dm(),
                    o = ll(Rx, e) ?? Dx,
                    r = ll(AL, e) ?? Dx,
                    l = ll(Rx, t) ?? void 0,
                    c = s ? r : o,
                    u = c.properties.length > 0,
                    d = c.locked && c.requirements.requireAll.length + c.requirements.requireAny.length > 0;
                return (0, z.jsxs)("div", {
                    className: Zu()(a9.assetDetailPanel, n),
                    ref: i,
                    children: [a && l && (0, z.jsxs)("div", {
                        children: [(0, z.jsx)("div", {
                            className: a9.titleBar,
                            children: (0, z.jsx)("div", {
                                className: a9.title,
                                children: (0, z.jsx)(Tc, {
                                    id: l.titleId
                                })
                            })
                        }), (0, z.jsx)("div", {
                            className: a9.content,
                            children: (0, z.jsx)("div", {
                                className: a9.column,
                                children: null != l.descriptionId && (0, z.jsx)(zf, {
                                    className: a9.description,
                                    children: (0, z.jsx)(Tc, {
                                        id: l.descriptionId
                                    })
                                })
                            })
                        })]
                    }), (0, z.jsxs)("div", {
                        children: [(0, z.jsxs)("div", {
                            className: a9.titleBar,
                            children: [(0, z.jsx)("div", {
                                className: a9.title,
                                children: (0, z.jsx)(Tc, {
                                    id: c.titleId
                                })
                            }), null != c.constructionCost && (G8(c.constructionCost) ? (0, z.jsx)(l9, {
                                minValue: c.constructionCost.minValue,
                                maxValue: c.constructionCost.maxValue,
                                unit: c.constructionCost.unit
                            }) : V8(c.constructionCost) ? (0, z.jsx)(r9, {
                                value: c.constructionCost.value,
                                unit: c.constructionCost.unit
                            }) : (0, z.jsx)(c9, {
                                value: c.constructionCost.value,
                                unit: c.constructionCost.unit
                            }))]
                        }), (0, z.jsxs)("div", {
                            className: a9.content,
                            children: [(0, z.jsx)("div", {
                                className: a9.previewContainer,
                                children: (0, z.jsx)("img", {
                                    src: c.icon,
                                    className: a9.preview
                                })
                            }), (0, z.jsxs)("div", {
                                className: a9.column,
                                children: [null != c.descriptionId && (0, z.jsx)(zf, {
                                    className: a9.description,
                                    children: (0, z.jsx)(Tc, {
                                        id: c.descriptionId
                                    })
                                }), c.effects.length > 0 && (0, z.jsx)("div", {
                                    className: a9.effects,
                                    children: (0, z.jsx)($A, {
                                        components: q8,
                                        data: c.effects
                                    })
                                })]
                            })]
                        }), u && (0, z.jsx)("div", {
                            className: a9.statsRow,
                            children: (0, z.jsx)(s9, {
                                data: c.properties
                            })
                        }), d && (0, z.jsx)(K2, {
                            requirements: c.requirements,
                            className: a9.requirementsRow
                        }), c.uniquePlaced && (0, z.jsx)("div", {
                            className: a9.alreadyBuiltRow,
                            children: (0, z.jsx)(Pc.Toolbar.ASSET_ALREADY_BUILT, {})
                        })]
                    })]
                })
            })),
            r9 = ({
                value: e,
                unit: t
            }) => {
                const n = sl(oL);
                return (0, z.jsxs)("div", {
                    className: Zu()(a9.constructionCostField, e > 0 && n < e && a9.notEnoughMoney),
                    children: [(0, z.jsx)("div", {
                        children: (0, z.jsx)(Gc, {
                            value: e,
                            unit: t
                        })
                    }), (0, z.jsx)(ef, {
                        src: "Media/Glyphs/Money.svg",
                        className: a9.constructionCostIcon
                    })]
                })
            },
            l9 = ({
                minValue: e,
                maxValue: t,
                unit: n
            }) => {
                const s = sl(oL);
                return (0, z.jsxs)("div", {
                    className: Zu()(a9.constructionCostField, t > 0 && s < t && a9.notEnoughMoney),
                    children: [(0, z.jsxs)("div", {
                        className: a9.constructionCostValue,
                        children: [(0, z.jsx)(Gc, {
                            value: e,
                            unit: n
                        }), t !== e && (0, z.jsxs)(z.Fragment, {
                            children: ["-", (0, z.jsx)(Gc, {
                                value: t,
                                unit: n
                            })]
                        })]
                    }), (0, z.jsx)(ef, {
                        src: "Media/Glyphs/Money.svg",
                        className: a9.constructionCostIcon
                    })]
                })
            },
            c9 = ({
                value: e,
                unit: t
            }) => {
                const n = sl(oL);
                return (0, z.jsxs)("div", {
                    className: Zu()(a9.constructionCostField, e.x > 0 && n < e.x && a9.notEnoughMoney),
                    children: [(0, z.jsx)("div", {
                        children: (0, z.jsx)(Gc, {
                            value: e.y,
                            unit: t
                        })
                    }), (0, z.jsx)(ef, {
                        src: "Media/Glyphs/Money.svg",
                        className: a9.constructionCostIcon
                    })]
                })
            };

        function u9(e, t, n) {
            return (0, Y.useMemo)((() => {
                if (null == n) return [];
                const s = n * t;
                if (s >= e.length) return [];
                const i = Math.min(s + t, e.length);
                return e.slice(s, i)
            }), [n, t, e])
        }
        X.add("game-ui/game/components/asset-menu/asset-detail-panel/asset-detail-panel.tsx", {
            get AssetDetailPanel() {
                return o9
            },
            set AssetDetailPanel(e) {
                o9 = e
            },
            get ConstructionCost() {
                return r9
            },
            set ConstructionCost(e) {
                r9 = e
            },
            get ConstructionRangeCost() {
                return l9
            },
            set ConstructionRangeCost(e) {
                l9 = e
            },
            get NetConstructionCost() {
                return c9
            },
            set NetConstructionCost(e) {
                c9 = e
            }
        }), X.add("game-ui/common/hooks/use-page-items.ts", {
            get usePageItems() {
                return u9
            },
            set usePageItems(e) {
                u9 = e
            }
        });
        var d9 = (e, t = "min") => e && e.constructionCost ? G8(e.constructionCost) ? e.constructionCost.maxValue : V8(e.constructionCost) ? e.constructionCost.value : e.constructionCost.value["min" === t ? "x" : "y"] : 0;
        X.add("game-ui/common/utils/getters.ts", {
            get getConstructionCost() {
                return d9
            },
            set getConstructionCost(e) {
                d9 = e
            }
        });
        let m9 = {
            "dlc-badge": "dlc-badge_bHS",
            dlcBadge: "dlc-badge_bHS"
        };
        X.add("game-ui/game/components/asset-menu/badges/dlc-badge.module.scss", {
            get classes() {
                return m9
            },
            set classes(e) {
                Object.assign(m9, e)
            }
        });
        const h9 = m9;
        var g9 = ({
            icon: e,
            style: t,
            className: n
        }) => (0, z.jsx)("img", {
            src: e,
            className: Zu()(h9.dlcBadge, n),
            style: t
        });
        X.add("game-ui/game/components/asset-menu/badges/dlc-badge.tsx", {
            get DlcBadge() {
                return g9
            },
            set DlcBadge(e) {
                g9 = e
            }
        });
        let p9 = {
            "asset-grid": "asset-grid_H7_",
            assetGrid: "asset-grid_H7_",
            content: "content_O28",
            row: "row_nrc",
            item: "item_KJ3 item-hover_WK8 item-active_Spn",
            thumbnail: "thumbnail_kkU",
            "not-enough-money": "not-enough-money__6E",
            notEnoughMoney: "not-enough-money__6E",
            "item-inner": "item-inner_hCN",
            itemInner: "item-inner_hCN",
            highlight: "highlight_VDQ",
            lock: "lock_w5T",
            dlc: "dlc_iKq",
            theme: "theme_lZg",
            "already-built": "already-built_NqB",
            alreadyBuilt: "already-built_NqB",
            "not-enough-money-badge": "not-enough-money-badge_S3U",
            notEnoughMoneyBadge: "not-enough-money-badge_S3U",
            "page-indicators": "page-indicators_Z3v",
            pageIndicators: "page-indicators_Z3v",
            "page-indicator": "page-indicator_zOa",
            pageIndicator: "page-indicator_zOa"
        };
        X.add("game-ui/game/components/asset-menu/asset-grid/asset-grid.module.scss", {
            get classes() {
                return p9
            },
            set classes(e) {
                Object.assign(p9, e)
            }
        });
        const f9 = p9,
            x9 = 18;
        var v9 = ({
            className: e
        }) => {
            const [t, n] = (0, Y.useState)(!1);
            rg(kx.value?.assetGrid, t);
            const s = sl(YP),
                i = sl($P),
                a = ll(BP, s),
                o = vp(tL),
                r = Math.ceil(a.length / x9),
                l = b9(a, x9, i),
                c = u9(a, x9, l),
                u = (0, Y.useCallback)((e => {
                    const t = a.findIndex((e => Ur(e.entity, i))) % 2;
                    if (e < 0) {
                        if (l < r - 1) {
                            const e = Math.min((l + 1) * x9 + t, a.length - 1);
                            return tL(a[e].entity), !0
                        }
                    } else if (e > 0 && l > 0) {
                        return tL(a[(l - 1) * x9 + 9 + t].entity), !0
                    }
                    return !1
                }), [a, r, i, l]),
                [d, m] = (0, Y.useState)(),
                h = (0, Y.useMemo)((() => ({
                    "Move Vertical": u,
                    "Scroll Assets": d ? u : () => {}
                })), [d, u]),
                g = (0, Y.useMemo)((() => (0, z.jsxs)(Ah, {
                    onFocusChange: n,
                    children: [(0, z.jsx)("div", {
                        className: f9.content,
                        onMouseEnter: () => m(!0),
                        onMouseLeave: () => m(!1),
                        children: (0, z.jsx)(Qg, {
                            focused: Dr(i),
                            onChange: o,
                            children: [...Array(2)].map(((e, t) => (0, z.jsx)("div", {
                                className: f9.row,
                                children: c.slice(9 * t, 9 * (t + 1)).map((e => (0, z.jsx)(_9, {
                                    asset: e,
                                    selected: Ur(e.entity, i),
                                    onSelect: tL
                                }, Dr(e.entity))))
                            }, t)))
                        })
                    }), (0, z.jsx)("div", {
                        className: f9.pageIndicators,
                        children: r > 1 && [...Array(r).keys()].map((e => (0, z.jsx)("div", {
                            onClick: () => tL(a[e * x9].entity),
                            className: Zu()(f9.pageIndicator, e === l && "selected")
                        }, e)))
                    })]
                })), [a, o, r, c, i, l]);
            return (0, z.jsx)(z.Fragment, {
                children: (0, z.jsx)(Ag, {
                    actions: h,
                    disabled: r < 2,
                    children: (0, z.jsx)("div", {
                        className: Zu()(f9.assetGrid, e),
                        children: wp(g)
                    })
                })
            })
        };
        const _9 = ({
            asset: e,
            selected: t,
            onSelect: n
        }) => {
            og(e.uiTag, t && !e.locked), rg(e.uiTag, t && !e.locked);
            const [s, i] = (0, Y.useState)(!1), a = (0, Y.useContext)(O8), o = sl(oL), r = (0, Y.useCallback)((() => n(e.entity)), [e.entity, n]), l = (0, Y.useCallback)((() => a && a.showDetails(e.entity)), [e.entity, a]), c = (0, Y.useCallback)((() => a && a.hideDetails(e.entity)), [e.entity, a]), u = d9(e), d = !e.locked && u > 0 && o < u, m = Dm() && s;
            (0, Y.useEffect)((() => {
                null != a && (m ? a.showDetails(e.entity) : a.hideDetails(e.entity))
            }), [e.entity, a, m]);
            const h = e.locked || e.uniquePlaced;
            return (0, z.jsx)(wx, {
                uiTag: e.uiTag,
                disableBlinking: t,
                active: !e.locked,
                children: (0, z.jsx)(Ah, {
                    onFocusChange: i,
                    children: (0, z.jsx)(Tg, {
                        tooltip: !a && (0, z.jsx)(Pc.Assets.NAME, {
                            hash: e.name
                        }),
                        children: (0, z.jsxs)(Gp, {
                            disableHint: !0,
                            focusKey: Dr(e.entity),
                            selected: t,
                            className: Zu()(f9.item, d && f9.notEnoughMoney),
                            onClick: r,
                            disabled: h,
                            onMouseOver: l,
                            onMouseLeave: c,
                            children: [(0, z.jsx)("div", {
                                className: f9.itemInner
                            }), (0, z.jsx)("img", {
                                src: e.icon,
                                onError: Qp,
                                className: f9.thumbnail
                            }), e.uniquePlaced && (0, z.jsx)("img", {
                                src: "Media/Game/Icons/AlreadyBuilt.svg",
                                className: f9.alreadyBuilt
                            }), d && !h && (0, z.jsx)("img", {
                                src: "Media/Game/Icons/NoMoney.svg",
                                className: f9.notEnoughMoneyBadge
                            }), e.highlight && (0, z.jsx)(FQ, {
                                className: f9.highlight
                            }), e.locked && (0, z.jsx)(C$, {
                                className: f9.lock
                            }), e.dlc && (0, z.jsx)(g9, {
                                icon: e.dlc,
                                className: f9.dlc
                            }), e.theme && (0, z.jsx)(g9, {
                                icon: e.theme,
                                className: f9.theme
                            })]
                        })
                    })
                })
            })
        };

        function b9(e, t, n) {
            if (0 === t) return 0;
            const s = e.findIndex((e => Ur(e.entity, n)));
            return -1 === s ? 0 : Math.trunc(s / t)
        }
        X.add("game-ui/game/components/asset-menu/asset-grid/asset-grid.tsx", {
            get AssetGrid() {
                return v9
            },
            set AssetGrid(e) {
                v9 = e
            },
            get getSelectedPage() {
                return b9
            },
            set getSelectedPage(e) {
                b9 = e
            }
        });
        let T9 = {
            "asset-panel": "asset-panel_VFR",
            assetPanel: "asset-panel_VFR",
            "gamepad-active": "gamepad-active_KKW",
            gamepadActive: "gamepad-active_KKW",
            "detail-container": "detail-container_E9q",
            detailContainer: "detail-container_E9q",
            "detail-panel": "detail-panel_izf",
            detailPanel: "detail-panel_izf",
            hints: "hints_v_M",
            back: "back_VjD",
            hint: "hint_ByX"
        };
        X.add("game-ui/game/components/asset-menu/asset-menu.module.scss", {
            get classes() {
                return T9
            },
            set classes(e) {
                Object.assign(T9, e)
            }
        });
        const E9 = T9;
        var I9 = ({
            focusKey: e,
            className: t,
            onClose: n,
            showBackHint: s
        }) => {
            dp(cp);
            const i = wp(sl(zP)),
                a = wp(sl(YP)),
                o = ll(UP, i),
                r = Dm(),
                [l, c] = (0, Y.useState)(Lx),
                u = !Ur(l, Lx),
                d = (0, Y.useMemo)((() => ({
                    showDetails: e => c(e),
                    hideDetails: e => c((t => Ur(t, e) ? Lx : t))
                })), []);
            (0, Y.useEffect)((() => {
                if (r && u) {
                    const e = jm.subscribe((e => {
                            e && c(Lx)
                        })),
                        t = Sm.subscribe((e => {
                            e && c(Lx)
                        }));
                    return () => {
                        e.dispose(), t.dispose()
                    }
                }
            }), [r, u]);
            const m = ll(Rx, i);
            og(m?.uiTag, !m?.locked), rg(m?.uiTag);
            const h = (0, Y.useMemo)((() => ({
                    Close: n,
                    "Switch Tab": o.length >= 2 ? e => {
                        const t = o.findIndex((e => Ur(e.entity, a)));
                        if (e < 0) {
                            const e = QN(t, o.length, !0);
                            null != e && (eL(o[e].entity), lp(rp.selectPreviousItem))
                        } else if (e > 0) {
                            const e = qN(t, o.length, !0);
                            null != e && (eL(o[e].entity), lp(rp.selectNextItem))
                        }
                    } : null
                })), [o, n, a]),
                g = sl(wm).find((e => "Back" === e.name)),
                p = s && !!g?.items.length && r;
            return (0, z.jsx)(Ag, {
                actions: h,
                children: (0, z.jsx)(mh, {
                    styles: w8,
                    children: (0, z.jsxs)(Ip, {
                        focusKey: e,
                        className: t,
                        children: [(0, z.jsx)("div", {
                            className: Zu()(E9.hints, E9.back),
                            children: p && (0, z.jsx)(If, {
                                modifiers: g.items[0].modifiers,
                                bindings: g.items[0].bindings,
                                className: E9.hint
                            })
                        }), (0, z.jsx)("div", {
                            className: E9.detailContainer,
                            children: u && (0, z.jsx)(o9, {
                                entity: l,
                                selectedCategory: a,
                                className: E9.detailPanel
                            }, "details")
                        }), (0, z.jsx)(O8.Provider, {
                            value: d,
                            children: (0, z.jsx)(YT, {
                                className: Zu()(E9.assetPanel, r && E9.gamepadActive),
                                header: o.length > 0 ? (0, z.jsx)(R8, {
                                    categories: o,
                                    selectedCategory: a,
                                    onChange: eL,
                                    onClose: n
                                }) : void 0,
                                children: (0, z.jsx)(v9, {})
                            })
                        })]
                    })
                })
            })
        };
        X.add("game-ui/game/components/asset-menu/asset-menu.tsx", {
            get AssetMenu() {
                return I9
            },
            set AssetMenu(e) {
                I9 = e
            }
        });
        let y9 = {
            header: "header_emp header_Bpo child-opacity-transition_nkS",
            content: "content__Ej content_AD7 child-opacity-transition_nkS",
            footer: "footer_kk9 footer_pD5 child-opacity-transition_nkS",
            title: "title_h2h title_zQN"
        };
        X.add("game-ui/common/panel/themes/light-opaque.module.scss", {
            get classes() {
                return y9
            },
            set classes(e) {
                Object.assign(y9, e)
            }
        });
        const j9 = y9;
        var S9 = Xr("avatars", "avatarsMap");
        X.add("game-ui/game/data-binding/avatars.ts", {
            get avatars() {
                return avatars
            },
            set avatars(e) {
                avatars = e
            }
        });
        let C9 = {
            avatar: "avatar_zAS",
            initial: "initial_SNA"
        };
        X.add("game-ui/game/components/avatars/avatars.module.scss", {
            get classes() {
                return C9
            },
            set classes(e) {
                Object.assign(C9, e)
            }
        });
        const N9 = C9;
        var w9 = ({
                entity: e,
                className: t
            }) => {
                const n = ll(S9, e);
                return (0, z.jsx)("div", {
                    className: Zu()(N9.avatar, t),
                    style: {
                        backgroundColor: WC(n.color)
                    },
                    children: (0, z.jsx)("img", {
                        src: n.picture ?? "Media/Game/Misc/ChirperBlankAvatar.svg"
                    })
                })
            },
            O9 = ({
                entity: e,
                className: t
            }) => {
                const n = ll(S9, e),
                    s = Wu(n.name).split(" ");
                return (0, z.jsx)("div", {
                    className: Zu()(N9.avatar, t),
                    style: {
                        backgroundColor: WC(n.color)
                    },
                    children: s.map(((e, t) => (0, z.jsx)("div", {
                        className: N9.initial,
                        children: e.substring(0, 1)
                    }, t)))
                })
            },
            P9 = ({
                entity: e,
                focusKey: t,
                showHint: n = !1,
                disabled: s,
                className: i,
                onSelect: a
            }) => {
                const o = ll(S9, e);
                return (0, z.jsx)(sf, {
                    disableHint: !n,
                    focusKey: t,
                    src: o.picture ?? "Media/Game/Misc/ChirperBlankAvatar.svg",
                    disabled: s,
                    className: Zu()(N9.avatar, o.picture?.endsWith(".svg") && N9.padded, i),
                    style: {
                        backgroundColor: WC(o.color)
                    },
                    onSelect: a
                })
            };
        X.add("game-ui/game/components/avatars/avatars.tsx", {
            get Avatar() {
                return w9
            },
            set Avatar(e) {
                w9 = e
            },
            get AvatarInitials() {
                return O9
            },
            set AvatarInitials(e) {
                O9 = e
            },
            get AvatarButton() {
                return P9
            },
            set AvatarButton(e) {
                P9 = e
            }
        });
        let L9 = {
            "chirp-layout": "chirp-layout_IRk",
            chirpLayout: "chirp-layout_IRk",
            content: "content_ysS",
            header: "header_eEy",
            sender: "sender_lDZ",
            date: "date_GKh",
            message: "message_Y0C",
            footer: "footer_3qO",
            "like-button": "like-button_LNZ",
            likeButton: "like-button_LNZ",
            liked: "liked_F9N",
            "select-hint": "select-hint_Y13",
            selectHint: "select-hint_Y13",
            "likes-hint": "likes-hint_Pko",
            likesHint: "likes-hint_Pko",
            "hint-icon": "hint-icon_wIk",
            hintIcon: "hint-icon_wIk"
        };
        X.add("game-ui/game/components/chirper/items/chirp-layout.module.scss", {
            get classes() {
                return L9
            },
            set classes(e) {
                Object.assign(L9, e)
            }
        });
        const A9 = L9,
            M9 = {
                tension: 30,
                friction: 10
            },
            R9 = {
                icon: A9.hintIcon
            };
        var k9 = (0, Y.memo)((function ({
            focusKey: e,
            chirp: t,
            className: n
        }) {
            const [s, i] = (0, Y.useState)(!1), a = (0, Y.useCallback)((() => {
                t.liked ? By(t.entity) : Uy(t.entity)
            }), [t.entity, t.liked]), o = (0, Y.useCallback)((() => {
                Gy(t.sender.link.target)
            }), [t]), r = (0, Y.useMemo)((() => ({
                "Select Chirp Sender": () => {
                    lp(rp.selectItem), o()
                },
                "Like Chirp": t.liked ? null : () => {
                    lp(rp.likeChirp), Uy(t.entity)
                },
                "Unlike Chirp": t.liked ? () => {
                    lp(rp.likeChirp), By(t.entity)
                } : null
            })), [t.entity, t.liked, o]), l = sl(gO), c = jO(l, sl(fO)), u = (0, Y.useMemo)((() => CO(l, t.date)), [t.date, l]), d = zu(), m = (0, Y.useMemo)((() => d(t.sender.link.name)), [t.sender.link.name, d]), h = function (e, t) {
                const n = (0, Y.useMemo)((() => e.links.reduce(((e, n, s) => {
                    const i = t(n.name);
                    return e[`LINK_${s}`] = `<${n.target}|${i}>`, e[`LINK_NAME_${s}`] = i, e[`LINK_TARGET_${s}`] = n.target, e
                }), {})), [e.links, t]);
                return (0, z.jsx)(zf, {
                    onLinkSelect: Gy,
                    renderer: D9,
                    children: (0, z.jsx)(Tc, {
                        id: e.messageId,
                        args: n
                    })
                })
            }(t, d), g = Math.round(RW(M9, t.likes, void 0, !0));
            return (0, z.jsx)(Ag, {
                actions: r,
                children: (0, z.jsxs)(Ip, {
                    focusKey: e,
                    className: Zu()(A9.chirpLayout, n),
                    onFocusChange: i,
                    children: [(0, z.jsx)(Pf, {
                        action: "Select Chirp Sender",
                        active: s,
                        className: A9.selectHint,
                        theme: R9
                    }), (0, z.jsx)(P9, {
                        focusKey: Ig,
                        entity: t.sender.entity,
                        disabled: "" === t.sender.link.target,
                        onSelect: o
                    }), (0, z.jsxs)("div", {
                        className: A9.content,
                        children: [(0, z.jsxs)("div", {
                            className: A9.header,
                            children: [(0, z.jsx)(Gp, {
                                disableHint: !0,
                                focusKey: Ig,
                                className: A9.sender,
                                onSelect: o,
                                disabled: "" === t.sender.link.target,
                                children: m
                            }), (0, z.jsx)("div", {
                                className: A9.date,
                                children: IO(c, u) ? (0, z.jsx)(wu, {
                                    value: u
                                }) : (0, z.jsx)(Su, {
                                    value: u
                                })
                            })]
                        }), (0, z.jsx)("div", {
                            className: A9.message,
                            children: h
                        }), (0, z.jsxs)("div", {
                            className: A9.footer,
                            children: [(0, z.jsx)(Gc, {
                                value: t.liked ? g + 1 : g,
                                unit: Oc.IntegerRounded
                            }), (0, z.jsx)(sf, {
                                disableHint: !0,
                                tinted: !0,
                                focusKey: Ig,
                                src: t.liked ? "Media/Glyphs/HeartFilled.svg" : "Media/Glyphs/HeartOutline.svg",
                                className: Zu()(A9.likeButton, t.liked && A9.liked),
                                selectSound: rp.likeChirp,
                                onSelect: a
                            }), (0, z.jsx)(Pf, {
                                action: "Like Chirp",
                                active: s,
                                className: A9.likesHint,
                                theme: R9
                            })]
                        })]
                    })]
                })
            })
        }), ((e, t) => e.chirp.liked === t.chirp.liked && e.chirp.likes === t.chirp.likes));
        const D9 = new Mf(((e, t, n) => (0, z.jsx)(Hf, {
            disableHint: !0,
            linkData: e,
            children: t
        }, n)));
        X.add("game-ui/game/components/chirper/items/chirp-layout.tsx", {
            get ChirpLayout() {
                return k9
            },
            set ChirpLayout(e) {
                k9 = e
            }
        });
        let F9 = {
            "item-transition": "item-transition_UXZ",
            itemTransition: "item-transition_UXZ",
            enter: "enter_eca",
            "enter-active": "enter-active_bH4",
            enterActive: "enter-active_bH4",
            exit: "exit_Jp9",
            "exit-active": "exit-active_rih",
            exitActive: "exit-active_rih",
            container: "container_Z2a",
            space: "space_emJ",
            "event-item": "event-item_q35",
            eventItem: "event-item_q35",
            "event-date": "event-date_xTF",
            eventDate: "event-date_xTF",
            "event-label": "event-label_BDa container_Z2a",
            eventLabel: "event-label_BDa container_Z2a"
        };
        X.add("game-ui/game/components/chirper/items/chirper-items.module.scss", {
            get classes() {
                return F9
            },
            set classes(e) {
                Object.assign(F9, e)
            }
        });
        const U9 = F9;
        var B9 = ({
                focusKey: e,
                style: t,
                children: n
            }) => (0, z.jsx)(ry, {
                styles: U9,
                children: (0, z.jsxs)("div", {
                    className: U9.itemTransition,
                    style: t,
                    children: [(0, z.jsx)(Ip, {
                        focusKey: e,
                        focusSound: rp.hoverItem,
                        className: U9.container,
                        children: n
                    }), (0, z.jsx)("div", {
                        className: U9.space
                    })]
                })
            }),
            G9 = ({
                focusKey: e,
                date: t,
                children: n
            }) => (0, z.jsx)(ry, {
                styles: U9,
                children: (0, z.jsxs)("div", {
                    className: U9.itemTransition,
                    children: [(0, z.jsxs)("div", {
                        className: U9.eventItem,
                        children: [(0, z.jsx)("div", {
                            className: U9.eventDate,
                            children: (0, z.jsx)(Su, {
                                value: t
                            })
                        }), (0, z.jsx)(Ip, {
                            focusKey: e,
                            focusSound: rp.hoverItem,
                            className: U9.eventLabel,
                            children: n
                        })]
                    }), (0, z.jsx)("div", {
                        className: U9.space
                    })]
                })
            });
        X.add("game-ui/game/components/chirper/items/chirper-items.tsx", {
            get ContainerItem() {
                return B9
            },
            set ContainerItem(e) {
                B9 = e
            },
            get EventItem() {
                return G9
            },
            set EventItem(e) {
                G9 = e
            }
        });
        let V9 = {
            "chirper-panel": "chirper-panel_kDN",
            chirperPanel: "chirper-panel_kDN",
            scrollable: "scrollable_SAp"
        };
        X.add("game-ui/game/components/chirper/chirper-panel.module.scss", {
            get classes() {
                return V9
            },
            set classes(e) {
                Object.assign(V9, e)
            }
        });
        const H9 = V9;
        var K9 = ({
            className: e,
            onClose: t
        }) => {
            const n = Hm(),
                s = sl(Dy),
                i = (0, Y.useRef)(s[0]?.date);
            !i.current && s.length && (i.current = s[0].date);
            const a = PE(),
                o = (0, Y.useContext)(cd),
                r = TK(130 * n, s.length, 2);
            og(kx.value?.chirperPanel, s.length > 0);
            const l = (0, Y.useCallback)((e => {
                const t = s[e];
                return e >= 0 && t ? (0, z.jsx)(W9, {
                    chirp: t,
                    isFirst: 0 === e && t.date > i.current
                }, e) : null
            }), [s]);
            return (0, Y.useEffect)((() => {
                if (!o) {
                    const e = Fy.subscribe((() => {
                        a.smoothScrollTo(0, 0), lp(rp.chirpEvent)
                    }));
                    return () => e.dispose()
                }
            }), [o, a]), (0, z.jsx)(wx, {
                uiTag: kx.value?.chirperPanel,
                disableBlinking: !0,
                children: (0, z.jsx)(YT, {
                    theme: j9,
                    header: (0, z.jsx)(QT, {
                        children: (0, z.jsx)(Pc.Chirper.PANEL_TITLE, {})
                    }),
                    transitionSounds: cp,
                    className: Zu()(H9.chirperPanel, e),
                    onClose: t,
                    children: s.length > 0 ? (0, z.jsx)(wx, {
                        uiTag: kx.value?.chirperPanelChirps,
                        children: (0, z.jsx)(tp, {
                            direction: Rg.Vertical,
                            children: (0, z.jsx)(vK, {
                                renderItem: l,
                                sizeProvider: r,
                                className: H9.scrollable
                            })
                        })
                    }) : (0, z.jsx)(Z$, {
                        children: (0, z.jsx)(zf, {
                            children: (0, z.jsx)(Pc.Chirper.OPENING_MESSAGE, {})
                        })
                    })
                })
            })
        };
        const W9 = ({
            chirp: e,
            isFirst: t
        }) => t ? (0, z.jsx)(ud, {
            children: (0, z.jsx)(B9, {
                children: (0, z.jsx)(k9, {
                    chirp: e
                })
            }, Dr(e.entity))
        }) : (0, z.jsx)(B9, {
            children: (0, z.jsx)(k9, {
                chirp: e
            })
        }, Dr(e.entity));
        X.add("game-ui/game/components/chirper/chirper-panel.tsx", {
            get ChirperPanel() {
                return K9
            },
            set ChirperPanel(e) {
                K9 = e
            }
        });
        let z9 = {
            "detail-layout": "detail-layout_vME",
            detailLayout: "detail-layout_vME",
            scrollable: "scrollable_sRo",
            header: "header_Vle",
            "icon-container": "icon-container_FJv",
            iconContainer: "icon-container_FJv",
            icon: "icon_IKT",
            title: "title_UOl",
            description: "description_VWf",
            content: "content_AGf",
            bottom: "bottom_fjL"
        };
        X.add("game-ui/common/section/detail-layout/detail-layout.module.scss", {
            get classes() {
                return z9
            },
            set classes(e) {
                Object.assign(z9, e)
            }
        });
        const Y9 = z9;
        var $9 = ({
            icon: e,
            title: t,
            description: n,
            bottom: s,
            className: i,
            children: a
        }) => {
            const o = Y.Children.count(a) > 0,
                r = Y.Children.count(s) > 0;
            return (0, z.jsxs)("div", {
                className: Zu()(Y9.detailLayout, i),
                children: [(0, z.jsxs)(ff, {
                    autoScroll: !0,
                    className: Y9.scrollable,
                    children: [(0, z.jsxs)("div", {
                        className: Y9.header,
                        children: [e && (0, z.jsx)("div", {
                            className: Y9.iconContainer,
                            children: (0, z.jsx)("img", {
                                src: e,
                                className: Y9.icon
                            })
                        }), (0, z.jsx)("div", {
                            className: Y9.title,
                            children: t
                        })]
                    }), (0, z.jsx)("div", {
                        className: Y9.description,
                        children: (0, z.jsx)(zf, {
                            children: n
                        })
                    }), o && (0, z.jsx)("div", {
                        className: Y9.content,
                        children: a
                    })]
                }), r && (0, z.jsx)("div", {
                    className: Y9.bottom,
                    children: s
                })]
            })
        };
        X.add("game-ui/common/section/detail-layout/detail-layout.tsx", {
            get DetailLayout() {
                return $9
            },
            set DetailLayout(e) {
                $9 = e
            }
        });
        let q9 = {
            "unlocking-label": "unlocking-label_ctB",
            unlockingLabel: "unlocking-label_ctB",
            locked: "locked_rgX",
            unlocked: "unlocked_rws"
        };
        X.add("game-ui/game/components/progression/unlocking-label/unlocking-label.module.scss", {
            get classes() {
                return q9
            },
            set classes(e) {
                Object.assign(q9, e)
            }
        });
        const X9 = q9;
        var Q9 = ({
            state: e
        }) => (0, z.jsx)("div", {
            className: Zu()("Locked" === e ? X9.locked : X9.unlocked, X9.unlockingLabel),
            children: "Locked" === e ? (0, z.jsx)(Pc.Common.LOCKED, {}) : (0, z.jsx)(Pc.Common.UNLOCKED, {})
        });
        X.add("game-ui/game/components/progression/unlocking-label/unlocking-label.tsx", {
            get UnlockingLabel() {
                return Q9
            },
            set UnlockingLabel(e) {
                Q9 = e
            }
        });
        let Z9 = {
            "unlocking-requirements": "unlocking-requirements_Usp",
            unlockingRequirements: "unlocking-requirements_Usp"
        };
        X.add("game-ui/game/components/progression/unlocking-requirements/themes/detail-layout-unlocking-requirements.module.scss", {
            get classes() {
                return Z9
            },
            set classes(e) {
                Object.assign(Z9, e)
            }
        });
        const J9 = Z9;
        let e7 = {
            "demand-bar": "demand-bar_WmU",
            demandBar: "demand-bar_WmU",
            icon: "icon_b9Y",
            locked: "locked_Lrk",
            lock: "lock_ezp"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-bar.module.scss", {
            get classes() {
                return e7
            },
            set classes(e) {
                Object.assign(e7, e)
            }
        });
        const t7 = e7;
        var n7 = ({
            icon: e,
            color: t,
            demand: n,
            locked: s = !1
        }) => {
            const i = Hm(),
                a = 99 * i,
                o = 444 * i,
                r = a / 2,
                l = o - r,
                c = n * o,
                u = c < a ? c - r * (c / a) : c - r;
            return (0, z.jsxs)("div", {
                className: t7.demandBar,
                children: [(0, z.jsx)("img", {
                    src: e,
                    onError: Qp,
                    className: Zu()(t7.icon, s && t7.locked)
                }), (0, z.jsxs)("svg", {
                    viewBox: `0 0 ${o} ${a}`,
                    className: t7.svg,
                    height: `${a}`,
                    width: `${o}`,
                    children: [(0, z.jsxs)("linearGradient", {
                        id: "monochrome",
                        gradientUnits: "userSpaceOnUse",
                        x1: 0,
                        x2: o,
                        y1: 0,
                        y2: 0,
                        children: [(0, z.jsx)("stop", {
                            offset: "0%",
                            stopColor: "rgba(0, 0, 0, 0.2)"
                        }), (0, z.jsx)("stop", {
                            offset: "100%",
                            stopColor: "rgba(0, 0, 0, 0)"
                        })]
                    }), (0, z.jsx)("polygon", {
                        points: `0,0 0,${a} ${l},${a} ${o},${r} ${l},0 0,0`,
                        fill: s ? "rgb(45, 46, 54)" : "rgba(0, 0, 0, 0.45)"
                    }), !s && (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)("polygon", {
                            points: `0,0 0,${a} ${[u]},${a} ${[c]},${r} ${[u]},0 0,0`,
                            fill: t
                        }), (0, z.jsx)("polygon", {
                            points: `0,0 0,${a} ${[u]},${a} ${[c]},${r} ${[u]},0 0,0`,
                            fill: "url(#monochrome)"
                        })]
                    })]
                }), s && (0, z.jsx)(C$, {
                    className: t7.lock
                })]
            })
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-bar.tsx", {
            get DemandBar() {
                return n7
            },
            set DemandBar(e) {
                n7 = e
            }
        });
        let s7 = {
            "demand-factors": "demand-factors_RlK",
            demandFactors: "demand-factors_RlK",
            factor: "factor_iZk",
            label: "label_qWr",
            icon: "icon_d3_"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-factors.module.scss", {
            get classes() {
                return s7
            },
            set classes(e) {
                Object.assign(s7, e)
            }
        });
        const i7 = s7;
        var a7 = ({
                factors: e,
                locked: t = !1
            }) => (0, z.jsx)("div", {
                className: i7.demandFactors,
                children: !t && e.filter((e => null != e.factor)).map(((e, t) => (0, z.jsx)(o7, {
                    factor: e
                }, t)))
            }),
            o7 = ({
                factor: e
            }) => (0, z.jsxs)("div", {
                className: i7.factor,
                children: [(0, z.jsx)("img", {
                    className: i7.icon,
                    src: e.weight < 0 ? "Media/Game/Misc/DemandFactorNegative.svg" : "Media/Game/Misc/DemandFactorPositive.svg",
                    onError: Qp
                }), (0, z.jsx)("div", {
                    className: i7.label,
                    children: e.weight < 0 ? (0, z.jsx)(Pc.CityInfoPanel.DEMAND_FACTOR_NEGATIVE, {
                        hash: e.factor
                    }) : (0, z.jsx)(Pc.CityInfoPanel.DEMAND_FACTOR_POSITIVE, {
                        hash: e.factor
                    })
                })]
            });
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-factors.tsx", {
            get DemandFactors() {
                return a7
            },
            set DemandFactors(e) {
                a7 = e
            },
            get DemandFactorDetail() {
                return o7
            },
            set DemandFactorDetail(e) {
                o7 = e
            }
        });
        let r7 = {
            "demand-section": "demand-section_xG1",
            demandSection: "demand-section_xG1",
            title: "title_TAF title_PYv title_bwV",
            content: "content_Bmx"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-section.module.scss", {
            get classes() {
                return r7
            },
            set classes(e) {
                Object.assign(r7, e)
            }
        });
        const l7 = r7;
        let c7 = {
            section: "section_egX section_sop section_gUk",
            header: "header_LLa header_l0j undefined",
            content: "content_lbR content_flM content_owQ",
            locked: "locked_dpm"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-section-theme.module.scss", {
            get classes() {
                return c7
            },
            set classes(e) {
                Object.assign(c7, e)
            }
        });
        const u7 = c7;
        var d7 = ({
            type: e,
            demand: t,
            unlocking: n,
            factors: s,
            className: i,
            onSelect: a,
            onHover: o
        }) => {
            const r = (0, Y.useCallback)((() => o(e)), [o, e]),
                l = (0, Y.useCallback)((() => lp(rp.hoverItem)), []),
                c = (0, Y.useCallback)((() => o(g7.None)), [o]),
                u = (0, Y.useCallback)((t => {
                    t && (a(e), lp(rp.hoverItem))
                }), [a, e]),
                d = (0, Y.useCallback)((() => {
                    a(e), lp(rp.selectItem)
                }), [a, e]),
                m = {
                    ...l0,
                    ...u7
                };
            return (0, z.jsx)(c0, {
                theme: m,
                header: (0, z.jsx)("div", {
                    className: l7.title,
                    children: (0, z.jsx)(Pc.CityInfoPanel.DEMAND_TITLE, {
                        hash: g7[e]
                    })
                }),
                onClick: d,
                onMouseOver: r,
                onMouseEnter: l,
                onMouseLeave: c,
                onFocusChange: u,
                className: Zu()(l7.demandSection, n?.locked && m.locked, i),
                children: (0, z.jsxs)("div", {
                    className: l7.content,
                    children: [(0, z.jsx)(n7, {
                        icon: f7[e],
                        color: p7[e],
                        demand: n?.locked ? 0 : t,
                        locked: n?.locked
                    }), (0, z.jsx)(a7, {
                        factors: s,
                        locked: n?.locked
                    })]
                })
            })
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-section/demand-section.tsx", {
            get DemandSection() {
                return d7
            },
            set DemandSection(e) {
                d7 = e
            }
        });
        let m7 = {
            "demand-page": "demand-page_X1J",
            demandPage: "demand-page_X1J",
            "main-column": "main-column_cMY",
            mainColumn: "main-column_cMY",
            scrollable: "scrollable_VIF",
            "info-column": "info-column_dEc",
            infoColumn: "info-column_dEc",
            "demand-row": "demand-row_CQi",
            demandRow: "demand-row_CQi"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-page.module.scss", {
            get classes() {
                return m7
            },
            set classes(e) {
                Object.assign(m7, e)
            }
        });
        const h7 = m7;
        var g7;
        ! function (e) {
            e[e.None = 0] = "None", e[e.ResidentialLow = 1] = "ResidentialLow", e[e.ResidentialMedium = 2] = "ResidentialMedium", e[e.ResidentialHigh = 3] = "ResidentialHigh", e[e.Commercial = 4] = "Commercial", e[e.Industrial = 5] = "Industrial", e[e.Office = 6] = "Office"
        }(g7 || (g7 = {}));
        var p7 = ["", "#8BDB46", "#00AE1A", "#2B7600", "#46B2DB", "#DBC246", "#8D44AD"],
            f7 = ["", "Media/Game/Icons/ZoneResidentialLow.svg", "Media/Game/Icons/ZoneResidentialMedium.svg", "Media/Game/Icons/ZoneResidentialHigh.svg", "Media/Game/Icons/ZoneCommercial.svg", "Media/Game/Icons/ZoneIndustrial.svg", "Media/Game/Icons/ZoneOffice.svg"];

        function x7() {
            const e = Dm(),
                t = sl(Ej),
                n = sl(Ij),
                s = sl(yj),
                i = sl(jj),
                a = sl(Sj),
                o = sl(Cj),
                r = sl(Nj),
                l = sl(wj),
                c = sl(Oj),
                u = sl(Pj),
                d = sl(Lj),
                m = sl(Aj),
                h = MC("ZonesOffice"),
                g = MC("Residential Medium"),
                p = MC("Residential High"),
                [f, x] = (0, Y.useState)(g7.ResidentialLow),
                [v, _] = (0, Y.useState)(g7.None),
                b = (0, Y.useCallback)((t => {
                    e || _(t)
                }), [e]);
            (0, Y.useEffect)((() => {
                e && _(g7.None)
            }), [e]);
            const T = (0, Y.useMemo)((() => v !== g7.None ? v : f), [v, f]);
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.cityInfoPanelDemandPage,
                children: (0, z.jsx)("div", {
                    className: h7.demandPage,
                    children: (0, z.jsxs)(tp, {
                        children: [(0, z.jsx)("div", {
                            className: h7.mainColumn,
                            children: (0, z.jsxs)(ff, {
                                className: h7.scrollable,
                                children: [(0, z.jsx)(d7, {
                                    type: g7.ResidentialLow,
                                    demand: t,
                                    factors: r,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === g7.ResidentialLow && "selected", h7.demandRow)
                                }), (0, z.jsx)(d7, {
                                    type: g7.ResidentialMedium,
                                    demand: n,
                                    factors: l,
                                    unlocking: g,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === g7.ResidentialMedium && "selected", h7.demandRow)
                                }), (0, z.jsx)(d7, {
                                    type: g7.ResidentialHigh,
                                    demand: s,
                                    factors: c,
                                    unlocking: p,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === g7.ResidentialHigh && "selected", h7.demandRow)
                                }), (0, z.jsx)(d7, {
                                    type: g7.Commercial,
                                    demand: i,
                                    factors: u,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === g7.Commercial && "selected", h7.demandRow)
                                }), (0, z.jsx)(d7, {
                                    type: g7.Industrial,
                                    demand: a,
                                    factors: d,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === g7.Industrial && "selected", h7.demandRow)
                                }), (0, z.jsx)(d7, {
                                    type: g7.Office,
                                    demand: o,
                                    factors: m,
                                    unlocking: h,
                                    onHover: b,
                                    onSelect: x,
                                    className: Zu()(f === g7.Office && "selected", h7.demandRow)
                                })]
                            })
                        }), (0, z.jsx)(v7, {
                            id: g7[T],
                            icon: f7[T],
                            unlocking: T === g7.Office && h || T === g7.ResidentialMedium && g || T === g7.ResidentialHigh && p || void 0
                        })]
                    })
                })
            })
        }
        const v7 = ({
            id: e,
            icon: t,
            unlocking: n
        }) => (0, z.jsx)(c0, {
            focusKey: Ig,
            theme: l0,
            className: h7.infoColumn,
            children: (0, z.jsx)($9, {
                icon: t,
                title: (0, z.jsx)(Pc.CityInfoPanel.DEMAND_TITLE, {
                    hash: e
                }),
                description: (0, z.jsx)(Pc.CityInfoPanel.DEMAND_DESCRIPTION, {
                    hash: e
                }),
                bottom: null != n && W2(n.requirements) ? (0, z.jsx)(K2, {
                    theme: J9,
                    requirements: n.requirements
                }) : void 0,
                children: n?.locked ? (0, z.jsx)(Q9, {
                    state: "Locked"
                }) : void 0
            }, e)
        });
        X.add("game-ui/game/components/city-info-panel/city-info-demand/demand-page.tsx", {
            get DemandType() {
                return g7
            },
            set DemandType(e) {
                g7 = e
            },
            get demandColors() {
                return p7
            },
            set demandColors(e) {
                p7 = e
            },
            get demandIcons() {
                return f7
            },
            set demandIcons(e) {
                f7 = e
            },
            get CityInfoDemand() {
                return x7
            },
            set CityInfoDemand(e) {
                x7 = e
            }
        });
        let _7 = {
            "city-policy": "city-policy_QlE item-states_QjV",
            cityPolicy: "city-policy_QlE item-states_QjV",
            "disable-mouse-states": "disable-mouse-states_O0k",
            disableMouseStates: "disable-mouse-states_O0k",
            content: "content_Epe",
            left: "left_MRp",
            right: "right_Xny",
            icon: "icon_pZC",
            disabled: "disabled_mRJ",
            locked: "locked_qsG",
            lock: "lock_q6f",
            checkbox: "checkbox_nNF",
            control: "control_box",
            slider: "slider_RcP",
            gamepad: "gamepad_BRZ",
            label: "label_SXQ",
            hint: "hint_DZH"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-policies/city-policy.module.scss", {
            get classes() {
                return _7
            },
            set classes(e) {
                Object.assign(_7, e)
            }
        });
        const b7 = _7;
        var T7 = ({
            policy: e,
            selected: t,
            className: n,
            onSelect: s,
            onHover: i
        }) => {
            const [a, o] = (0, Y.useState)(e.active), [r, l] = (0, Y.useState)(e.data?.value ?? 0), [c, u] = (0, Y.useState)(!1), [d, m] = (0, Y.useState)(!1), [h, g] = (0, Y.useState)(!1), p = Dm(), f = (0, Y.useCallback)((() => {
                rC(e.entity, !a, r), o(!a)
            }), [a, e, r]), x = (0, Y.useCallback)((t => {
                l(t), p && rC(e.entity, a, t)
            }), [a, p, e]), v = (0, Y.useCallback)((() => m(!0)), []), _ = (0, Y.useCallback)((() => {
                rC(e.entity, a, r), m(!1)
            }), [a, e, r]), b = (0, Y.useCallback)((() => {
                f(), lp(rp.selectItem)
            }), [f]), T = (0, Y.useCallback)((() => lp(rp.hoverItem)), []), E = (0, Y.useCallback)((() => i(null)), [i]), I = (0, Y.useCallback)((() => i(e)), [i, e]), y = (0, Y.useCallback)((t => {
                g(t), t && s(e)
            }), [s, e]), j = (0, Y.useCallback)((() => {
                s(e), lp(rp.selectItem)
            }), [s, e]), S = (0, Y.useCallback)((() => u(!1)), []), C = (0, Y.useCallback)((() => u(!0)), []);
            return (0, z.jsx)(wx, {
                uiTag: e.uiTag,
                children: (0, z.jsx)(kg, {
                    onAction: b,
                    children: (0, z.jsx)(Ip, {
                        onClick: j,
                        onFocusChange: y,
                        onMouseOver: I,
                        onMouseEnter: T,
                        onMouseLeave: E,
                        className: Zu()(b7.cityPolicy, t && "selected", e.locked && b7.locked, !a && b7.disabled, (c || d) && b7.disableMouseStates, n),
                        children: (0, z.jsxs)("div", {
                            className: b7.content,
                            children: [(0, z.jsxs)("div", {
                                className: b7.left,
                                children: [(0, z.jsx)("img", {
                                    src: e.icon,
                                    className: b7.icon
                                }), (0, z.jsx)("div", {
                                    className: b7.label,
                                    children: (0, z.jsx)(Pc.Policy.TITLE, {
                                        hash: e.id
                                    })
                                })]
                            }), (0, z.jsxs)("div", {
                                className: b7.right,
                                children: [e.data && r && (0, z.jsxs)("div", {
                                    className: b7.control,
                                    children: [(0, z.jsx)("div", {
                                        className: b7.label,
                                        children: (0, z.jsx)(Gc, {
                                            value: !e.locked && a ? r : 0,
                                            unit: e.data.unit
                                        })
                                    }), (0, z.jsx)(CM, {
                                        value: !e.locked && a ? r : 0,
                                        start: !e.locked && a ? e.data.range.min : 0,
                                        end: !e.locked && a ? e.data.range.max : 1,
                                        gamepadStep: e.data.step,
                                        onDragEnd: _,
                                        onDragStart: v,
                                        onChange: x,
                                        onMouseOver: C,
                                        onMouseLeave: S,
                                        disabled: !a || e.locked,
                                        className: Zu()(b7.slider, h && p && b7.gamepad)
                                    })]
                                }), e.locked && (0, z.jsx)(C$, {
                                    className: b7.lock
                                }), !e.locked && (0, z.jsxs)(z.Fragment, {
                                    children: [(0, z.jsx)(Pf, {
                                        action: "Select",
                                        active: !e.locked && h,
                                        className: b7.hint
                                    }), (0, z.jsx)(ox, {
                                        onMouseOver: C,
                                        onMouseLeave: S,
                                        checked: a,
                                        onChange: f,
                                        focusKey: Ig,
                                        className: b7.checkbox
                                    })]
                                })]
                            })]
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/city-info-panel/city-info-policies/city-policy.tsx", {
            get CityPolicy() {
                return T7
            },
            set CityPolicy(e) {
                T7 = e
            }
        });
        let E7 = {
            "policies-page": "policies-page_YYY",
            policiesPage: "policies-page_YYY",
            "main-column": "main-column_Pve",
            mainColumn: "main-column_Pve",
            "info-column": "info-column_G8F",
            infoColumn: "info-column_G8F",
            scrollable: "scrollable_SFL"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-policies/policies-page.module.scss", {
            get classes() {
                return E7
            },
            set classes(e) {
                Object.assign(E7, e)
            }
        });
        const I7 = E7;
        var y7 = () => {
            const e = Dm(),
                t = sl(aC),
                [n, s] = (0, Y.useState)(t.length > 0 ? t.find((e => !e.locked)) ?? t[0] : null),
                [i, a] = (0, Y.useState)(null),
                o = (0, Y.useCallback)((t => {
                    e || a(t)
                }), [e]);
            (0, Y.useEffect)((() => {
                e && a(null)
            }), [e]);
            const r = (0, Y.useMemo)((() => i ?? n), [i, n]);
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.cityInfoPanelPoliciesPage,
                children: (0, z.jsxs)("div", {
                    className: I7.policiesPage,
                    children: [(0, z.jsx)(c0, {
                        theme: l0,
                        className: I7.mainColumn,
                        children: (0, z.jsx)(tp, {
                            children: (0, z.jsx)(ff, {
                                className: I7.scrollable,
                                children: t.map((e => (0, z.jsx)(T7, {
                                    policy: e,
                                    selected: Ur(e.entity, n?.entity),
                                    onSelect: s,
                                    onHover: o
                                }, e.id)))
                            })
                        })
                    }), (0, z.jsx)(j7, {
                        policy: r
                    })]
                })
            })
        };
        const j7 = ({
            policy: e
        }) => (0, z.jsx)(c0, {
            focusKey: Ig,
            theme: l0,
            className: I7.infoColumn,
            children: e && (0, z.jsx)($9, {
                icon: e.icon,
                title: (0, z.jsx)(Pc.Policy.TITLE, {
                    hash: e.id
                }),
                description: (0, z.jsx)(Pc.Policy.DESCRIPTION, {
                    hash: e.id
                }),
                bottom: e.locked && (0, z.jsx)(K2, {
                    theme: J9,
                    requirements: e.requirements
                }),
                children: e.locked && (0, z.jsx)(Q9, {
                    state: "Locked"
                })
            }, Dr(e.entity))
        });
        X.add("game-ui/game/components/city-info-panel/city-info-policies/policies-page.tsx", {
            get CityInfoPolicies() {
                return y7
            },
            set CityInfoPolicies(e) {
                y7 = e
            }
        });
        let S7 = {
            "city-info-panel": "city-info-panel_Eha",
            cityInfoPanel: "city-info-panel_Eha"
        };
        X.add("game-ui/game/components/city-info-panel/city-info-panel.module.scss", {
            get classes() {
                return S7
            },
            set classes(e) {
                Object.assign(S7, e)
            }
        });
        const C7 = S7;
        var N7 = ({
            selectedTab: e,
            onSelectTab: t,
            onClose: n
        }) => {
            lg(kx.value?.cityInfoPanel);
            const s = MC("Policies"),
                i = Dm();
            return (0, z.jsx)(YT, {
                header: (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(QT, {
                        children: (0, z.jsx)(Pc.CityInfoPanel.TITLE, {})
                    }), (0, z.jsxs)(P$, {
                        children: [(0, z.jsx)(L$, {
                            id: $b.Demand,
                            uiTag: kx.value?.cityInfoPanelDemandTab,
                            selectedId: e,
                            onSelect: t,
                            children: (0, z.jsx)(Pc.CityInfoPanel.TAB, {
                                hash: $b[$b.Demand]
                            })
                        }), (0, z.jsx)($2, {
                            locked: s.locked,
                            requirements: s.requirements,
                            forceVisible: i && e === $b.Policies,
                            children: (0, z.jsx)(L$, {
                                id: $b.Policies,
                                uiTag: kx.value?.cityInfoPanelPoliciesTab,
                                selectedId: e,
                                disabled: s.locked,
                                locked: s.locked,
                                onSelect: t,
                                children: (0, z.jsx)(Pc.CityInfoPanel.TAB, {
                                    hash: $b[$b.Policies]
                                })
                            })
                        })]
                    })]
                }),
                transitionSounds: cp,
                className: C7.cityInfoPanel,
                onClose: n,
                children: (0, z.jsx)(O$, {
                    tabs: [$b.Demand, $b.Policies],
                    selectedTab: e,
                    onSelect: t,
                    children: w7(s.locked ? $b.Demand : e)
                })
            })
        };

        function w7(e) {
            switch (e) {
            case $b.Demand:
                return (0, z.jsx)(x7, {});
            case $b.Policies:
                return (0, z.jsx)(y7, {});
            default:
                return
            }
        }
        X.add("game-ui/game/components/city-info-panel/city-info-panel.tsx", {
            get CityInfoPanel() {
                return N7
            },
            set CityInfoPanel(e) {
                N7 = e
            }
        });
        let O7 = {
            "money-field": "money-field_bzk",
            moneyField: "money-field_bzk",
            primary: "primary__xr",
            secondary: "secondary_HCa",
            positive: "positive_HL9",
            negative: "negative_PiU",
            sign: "sign__wn",
            content: "content_pa5"
        };
        X.add("game-ui/game/components/economy-panel/components/money-field/money-field.module.scss", {
            get classes() {
                return O7
            },
            set classes(e) {
                Object.assign(O7, e)
            }
        });
        const P7 = O7;
        var L7 = ({
            value: e,
            importance: t,
            className: n
        }) => (0, z.jsxs)("div", {
            className: Zu()(P7.moneyField, t && P7[t], Jx(P7, e), n),
            children: [(0, z.jsx)("div", {
                className: P7.sign,
                children: A7(e)
            }), (0, z.jsx)("div", {
                className: P7.content,
                children: (0, z.jsx)(Gc, {
                    value: Math.abs(e),
                    unit: Oc.Money
                })
            })]
        });

        function A7(e) {
            return e < 0 ? "−" : e > 0 ? "+" : ""
        }
        X.add("game-ui/game/components/economy-panel/components/money-field/money-field.tsx", {
            get NumberField() {
                return L7
            },
            set NumberField(e) {
                L7 = e
            },
            get sign() {
                return A7
            },
            set sign(e) {
                A7 = e
            }
        });
        let M7 = {
            chartFontColor: "rgba(255, 255, 255, 0.6)",
            chartLineColor: "rgba(255, 255, 255, 0.1)",
            "budget-chart": "budget-chart_CSi",
            budgetChart: "budget-chart_CSi",
            chart: "chart_xgb"
        };
        X.add("game-ui/game/components/economy-panel/budget-page/budget-chart/budget-chart.module.scss", {
            get classes() {
                return M7
            },
            set classes(e) {
                Object.assign(M7, e)
            }
        });
        const R7 = M7;
        var k7 = ({
            selectedId: e,
            className: t
        }) => {
            const n = sl(Kj),
                s = sl(Wj),
                i = sl(zj),
                a = sl(Yj),
                o = (0, Y.useMemo)((() => ({
                    labels: ["Budget"],
                    datasets: [...D7(n, s, 1, "income", e), ...D7(i, a, -1, "expenses", e)]
                })), [n, s, e, i, a]),
                r = function () {
                    const e = Kc(Oc.Money),
                        t = sl(Ml);
                    return {
                        layout: {
                            padding: {
                                top: 12,
                                right: 24,
                                bottom: 0,
                                left: 12
                            }
                        },
                        scales: {
                            y: {
                                stacked: !0,
                                suggestedMax: 1e3,
                                beginAtZero: !0,
                                grid: {
                                    color: R7.chartLineColor,
                                    lineWidth: 2
                                },
                                border: {
                                    color: R7.chartLineColor,
                                    width: 2
                                },
                                ticks: {
                                    maxTicksLimit: 10,
                                    font: {
                                        size: 10 * t
                                    },
                                    color: R7.chartFontColor,
                                    padding: 10,
                                    autoSkip: !1,
                                    callback: t => e(t)
                                }
                            },
                            x: {
                                stacked: !0,
                                grid: {
                                    display: !1
                                },
                                ticks: {
                                    display: !1
                                }
                            }
                        }
                    }
                }();
            return (0, z.jsx)(c0, {
                focusKey: Ig,
                theme: l0,
                className: Zu()(R7.budgetChart, t),
                children: (0, z.jsx)(SR, {
                    type: "bar",
                    data: o,
                    options: r,
                    className: R7.chart
                })
            })
        };

        function D7(e, t, n, s, i) {
            return e.map((e => ({
                label: e.id,
                data: [n * $j(e, t)],
                backgroundColor: WC(e.color),
                barPercentage: e.id === i ? .9 : .5,
                categoryPercentage: .7,
                stack: s
            }))).reverse()
        }
        X.add("game-ui/game/components/economy-panel/budget-page/budget-chart/budget-chart.tsx", {
            get BudgetChart() {
                return k7
            },
            set BudgetChart(e) {
                k7 = e
            }
        });
        let F7 = {
            field: "field_ZZV",
            header: "header_FoF",
            icon: "icon_Vso",
            label: "label_XR5",
            content: "content_N5U",
            positive: "positive_Deq",
            negative: "negative_iIx"
        };
        X.add("game-ui/game/components/economy-panel/components/table-row/table-row.module.scss", {
            get classes() {
                return F7
            },
            set classes(e) {
                Object.assign(F7, e)
            }
        });
        const U7 = F7;
        let B7 = {
            "detail-layout": "detail-layout_TAz",
            detailLayout: "detail-layout_TAz",
            label: "label_ETw"
        };
        X.add("game-ui/game/components/economy-panel/budget-page/budget-item-detail/budget-item-detail.module.scss", {
            get classes() {
                return B7
            },
            set classes(e) {
                Object.assign(B7, e)
            }
        });
        const G7 = B7,
            V7 = {
                ...U7,
                label: G7.label
            };
        var H7 = ({
            item: e,
            values: t,
            className: n
        }) => (0, z.jsx)(c0, {
            focusKey: Ig,
            theme: l0,
            className: Zu()(G7.budgetItemDetail, n),
            children: null != e && (0, z.jsx)($9, {
                icon: e.icon,
                title: (0, z.jsx)(Pc.EconomyPanel.BUDGET_ITEM, {
                    hash: e.id
                }),
                description: (0, z.jsx)(Pc.EconomyPanel.BUDGET_ITEM_DESCRIPTION, {
                    hash: e.id
                }),
                bottom: e.sources.map(((e, n) => (0, z.jsx)(T4, {
                    label: (0, z.jsx)(Pc.EconomyPanel.BUDGET_SUB_ITEM, {
                        hash: e.id
                    }),
                    theme: V7,
                    className: Jx(U7, t[e.index]),
                    children: (0, z.jsx)(Gc, {
                        value: t[e.index],
                        unit: Oc.Money
                    })
                }, n))),
                className: G7.detailLayout
            }, e.id)
        });
        X.add("game-ui/game/components/economy-panel/budget-page/budget-item-detail/budget-item-detail.tsx", {
            get BudgetItemDetail() {
                return H7
            },
            set BudgetItemDetail(e) {
                H7 = e
            }
        });
        let K7 = {
            "budget-section": "budget-section_F_L",
            budgetSection: "budget-section_F_L",
            header: "header__ZM",
            item: "item_fWX item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            selected: "selected_yiI",
            "title-column": "title-column_u4_",
            titleColumn: "title-column_u4_",
            title: "title_XJK",
            "legend-color": "legend-color_jK2",
            legendColor: "legend-color_jK2",
            "value-column": "value-column_Tid",
            valueColumn: "value-column_Tid",
            "value-field": "value-field_M8j",
            valueField: "value-field_M8j",
            "value-column-divider": "value-column-divider_afM",
            valueColumnDivider: "value-column-divider_afM"
        };
        X.add("game-ui/game/components/economy-panel/budget-page/budget-section/budget-section.module.scss", {
            get classes() {
                return K7
            },
            set classes(e) {
                Object.assign(K7, e)
            }
        });
        const W7 = K7;
        var z7 = Y.memo((function ({
            title: e,
            total: t,
            items: n,
            values: s,
            className: i,
            onMouseEnter: a,
            onMouseLeave: o,
            uiTag: r,
            selectedItem: l,
            onItemSelected: c
        }) {
            const u = (0, Y.useContext)(Ju);
            return (0, z.jsx)(c0, {
                focusKey: Ig,
                theme: l0,
                className: Zu()(W7.budgetSection, i),
                header: (0, z.jsx)(wx, {
                    uiTag: r,
                    children: (0, z.jsxs)("div", {
                        className: W7.header,
                        children: [(0, z.jsx)("div", {
                            className: W7.titleColumn,
                            children: e
                        }), (0, z.jsx)("div", {
                            className: W7.valueColumn,
                            children: (0, z.jsx)(L7, {
                                value: t,
                                importance: "secondary",
                                className: W7.valueField
                            })
                        })]
                    })
                }),
                children: (0, z.jsxs)(Ju.Provider, {
                    value: u,
                    children: [n.map((e => (0, z.jsx)(Y7, {
                        item: e,
                        values: s,
                        onMouseEnter: a,
                        onMouseLeave: o,
                        selected: l === e.id,
                        onSelect: c
                    }, e.id))), (0, z.jsx)("div", {
                        className: W7.valueColumnDivider
                    })]
                })
            })
        }), ((e, t) => Kr(e, t, 5)));
        const Y7 = ({
            item: e,
            values: t,
            onMouseEnter: n,
            onMouseLeave: s,
            selected: i,
            onSelect: a
        }) => {
            const o = $j(e, t),
                r = (0, Y.useCallback)((() => n(e.id)), [n, e.id]),
                l = (0, Y.useCallback)((() => s(e.id)), [s, e.id]),
                c = (0, Y.useCallback)((() => a(i ? null : e.id)), [e.id, a, i]);
            return (0, z.jsxs)(Ip, {
                focusKey: e.id,
                className: Zu()(W7.item, i && W7.selected),
                onMouseEnter: r,
                onMouseLeave: l,
                onClick: c,
                children: [(0, z.jsxs)("div", {
                    className: W7.titleColumn,
                    children: [(0, z.jsx)("div", {
                        className: W7.legendColor,
                        style: {
                            backgroundColor: WC(e.color)
                        }
                    }), (0, z.jsx)("div", {
                        className: W7.title,
                        children: (0, z.jsx)(Pc.EconomyPanel.BUDGET_ITEM, {
                            hash: e.id
                        })
                    })]
                }), (0, z.jsx)("div", {
                    className: W7.valueColumn,
                    children: (0, z.jsx)(L7, {
                        value: o,
                        className: W7.valueField
                    })
                })]
            })
        };
        X.add("game-ui/game/components/economy-panel/budget-page/budget-section/budget-section.tsx", {
            get BudgetSection() {
                return z7
            },
            set BudgetSection(e) {
                z7 = e
            }
        });
        let $7 = {
            "budget-page": "budget-page_SIZ",
            budgetPage: "budget-page_SIZ",
            "chart-column": "chart-column_Y0V",
            chartColumn: "chart-column_Y0V",
            "main-column": "main-column_unC",
            mainColumn: "main-column_unC",
            "info-column": "info-column_K89",
            infoColumn: "info-column_K89",
            "budget-section": "budget-section_zaZ",
            budgetSection: "budget-section_zaZ",
            "total-section": "total-section_TGf",
            totalSection: "total-section_TGf",
            "total-content": "total-content_GKQ",
            totalContent: "total-content_GKQ",
            "total-label": "total-label_Uhe",
            totalLabel: "total-label_Uhe",
            "total-column": "total-column_Ikw",
            totalColumn: "total-column_Ikw",
            "total-field": "total-field_zjM",
            totalField: "total-field_zjM"
        };
        X.add("game-ui/game/components/economy-panel/budget-page/budget-page.module.scss", {
            get classes() {
                return $7
            },
            set classes(e) {
                Object.assign($7, e)
            }
        });
        const q7 = $7;
        var X7 = () => {
            lg(kx.value?.economyPanelBudgetPage);
            const e = sl(Kj),
                t = sl(Wj),
                n = sl(zj),
                s = sl(Yj),
                i = sl(Vj),
                a = sl(Hj),
                o = i + a,
                [r, l] = (0, Y.useState)(null),
                [c, u] = (0, Y.useState)(YN(e, "id")),
                [d, m] = (0, Y.useState)(null),
                h = (0, Y.useCallback)((e => m(e)), []),
                g = (0, Y.useCallback)((e => m((t => t === e ? null : t))), []),
                p = (0, Y.useCallback)((e => "string" == typeof e && u(e)), []),
                f = Dm(),
                x = f ? c : d || r,
                v = e.find((e => e.id === x)),
                _ = n.find((e => e.id === x));
            return (0, z.jsxs)("div", {
                className: q7.budgetPage,
                children: [(0, z.jsx)(k7, {
                    selectedId: x,
                    className: q7.chartColumn
                }), (0, z.jsx)("div", {
                    className: q7.mainColumn,
                    children: (0, z.jsxs)(Qg, {
                        focused: c,
                        direction: Rg.Vertical,
                        onChange: p,
                        onRefocus: Zg,
                        children: [(0, z.jsx)(z7, {
                            title: (0, z.jsx)(Pc.EconomyPanel.INCOME_SECTION_TITLE, {}),
                            total: i,
                            items: e,
                            values: t,
                            className: q7.budgetSection,
                            onMouseEnter: h,
                            onMouseLeave: g,
                            selectedItem: f ? null : r,
                            onItemSelected: l,
                            uiTag: kx.value?.economyPanelBudgetRevenue
                        }), (0, z.jsx)(z7, {
                            title: (0, z.jsx)(Pc.EconomyPanel.EXPENSES_SECTION_TITLE, {}),
                            total: a,
                            items: n,
                            values: s,
                            className: q7.budgetSection,
                            onMouseEnter: h,
                            onMouseLeave: g,
                            selectedItem: f ? null : r,
                            onItemSelected: l,
                            uiTag: kx.value?.economyPanelBudgetExpenses
                        }), (0, z.jsx)(wx, {
                            uiTag: kx.value?.economyPanelBudgetBalance,
                            children: (0, z.jsx)(c0, {
                                focusKey: Ig,
                                theme: l0,
                                className: q7.totalSection,
                                children: (0, z.jsxs)("div", {
                                    className: q7.totalContent,
                                    children: [(0, z.jsx)("div", {
                                        className: q7.totalLabel,
                                        children: (0, z.jsx)(Pc.EconomyPanel.MONTHLY_BALANCE, {})
                                    }), (0, z.jsx)("div", {
                                        className: q7.totalColumn,
                                        children: (0, z.jsx)(L7, {
                                            value: o,
                                            importance: "primary",
                                            className: q7.totalField
                                        })
                                    })]
                                })
                            })
                        })]
                    })
                }), (0, z.jsx)(H7, {
                    item: v ?? _ ?? null,
                    values: null != v ? t : s,
                    className: q7.infoColumn
                })]
            })
        };
        X.add("game-ui/game/components/economy-panel/budget-page/budget-page.tsx", {
            get BudgetPage() {
                return X7
            },
            set BudgetPage(e) {
                X7 = e
            }
        });
        let Q7 = {
            "loan-form": "loan-form_Ohg",
            loanForm: "loan-form_Ohg",
            "slider-column": "slider-column_kts",
            sliderColumn: "slider-column_kts",
            gamepad: "gamepad_Gvj",
            slider: "slider_RYc",
            balloon: "balloon_Jlj",
            positive: "positive_WFM",
            negative: "negative_NTL",
            "balloon-content": "balloon-content_QEH",
            balloonContent: "balloon-content_QEH",
            limit: "limit_ZPi",
            "direction-labels": "direction-labels_KdN",
            directionLabels: "direction-labels_KdN",
            arrow: "arrow_AXM",
            "less-label": "less-label_ZOG",
            lessLabel: "less-label_ZOG",
            "less-arrow": "less-arrow_Oio arrow_AXM",
            lessArrow: "less-arrow_Oio arrow_AXM",
            space: "space_zFI",
            "more-label": "more-label_PtR",
            moreLabel: "more-label_PtR",
            "more-arrow": "more-arrow_odN arrow_AXM",
            moreArrow: "more-arrow_odN arrow_AXM",
            "button-column": "button-column_mFb",
            buttonColumn: "button-column_mFb",
            "button-row": "button-row_a78",
            buttonRow: "button-row_a78",
            button: "button_aQu",
            "accept-button": "accept-button_uUd button_aQu button_SsC item-states_QjV",
            acceptButton: "accept-button_uUd button_aQu button_SsC item-states_QjV",
            "reset-button": "reset-button_I2B button_aQu button_eqb item-states_QjV",
            resetButton: "reset-button_I2B button_aQu button_eqb item-states_QjV",
            "slider-container": "slider-container_f8H",
            sliderContainer: "slider-container_f8H",
            "slider-hint": "slider-hint_NMq",
            sliderHint: "slider-hint_NMq",
            "button-hint": "button-hint_qO6",
            buttonHint: "button-hint_qO6",
            "hint-spaceholder": "hint-spaceholder_iYD",
            hintSpaceholder: "hint-spaceholder_iYD"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-form/loan-form.module.scss", {
            get classes() {
                return Q7
            },
            set classes(e) {
                Object.assign(Q7, e)
            }
        });
        const Z7 = Q7;
        let J7 = {
            slider: "slider_iN8 slider_pUS",
            edge: "edge_Qvg",
            positive: "positive_kiJ",
            negative: "negative_HpK",
            "left-edge": "left-edge_Rrm edge_Qvg",
            leftEdge: "left-edge_Rrm edge_Qvg",
            "right-edge": "right-edge_ocL edge_Qvg",
            rightEdge: "right-edge_ocL edge_Qvg",
            "track-bounds": "track-bounds_Bp4",
            trackBounds: "track-bounds_Bp4",
            thumb: "thumb_yXN thumb_WZt"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-form/loan-slider.module.scss", {
            get classes() {
                return J7
            },
            set classes(e) {
                Object.assign(J7, e)
            }
        });
        const eee = J7;
        let tee = {
            balloon: "balloon__3G balloon_H23",
            container: "container_VsE container_jfe",
            arrow: "arrow_cyp arrow_Xfn",
            content: "content_tDr content_JQV"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-form/loan-slider-balloon.module.scss", {
            get classes() {
                return tee
            },
            set classes(e) {
                Object.assign(tee, e)
            }
        });
        const nee = tee;
        var see = () => {
            const e = Dm(),
                [t, n] = (0, Y.useState)(!1),
                [s, i] = (0, Y.useState)(!1),
                a = sl(Xj),
                o = sl(Qj),
                r = sl(Zj),
                l = r.amount - o.amount,
                c = Math.abs(l) > .5,
                u = (0, Y.useRef)(r.amount),
                d = function (e) {
                    const t = Math.pow(10, Math.max(aee(e) - aee(iee / 5), 0)),
                        n = t / 2,
                        s = t,
                        i = 5 * t;
                    return e / n <= iee ? Math.max(n, 1) : e / s <= iee ? Math.max(s, 1) : Math.max(i, 1)
                }(a),
                m = (0, Y.useCallback)(((e, t, n) => {
                    const s = e + n * (t - e),
                        i = e + Math.round(n * (t - e) / d) * d;
                    return Math.abs(o.amount - s) < Math.abs(i - s) ? o.amount : Od(i, Math.min(e, t), Math.max(e, t))
                }), [o.amount, d]),
                h = (0, Y.useMemo)((() => ({
                    "Change Slider Value": e => {
                        let t = r.amount;
                        e > 0 ? t = Math.floor((r.amount + d) / d) * d : e < 0 && (t = Math.ceil((r.amount - d) / d) * d), (o.amount > r.amount && t > o.amount || o.amount < r.amount && t < o.amount) && (t = o.amount), Jj(t)
                    }
                })), [o.amount, r.amount, d]);
            return (0, Y.useEffect)((() => {
                e && u.current !== r.amount && (lp(jM.drag), u.current = r.amount)
            }), [e, r.amount]), (0, z.jsx)(Ag, {
                actions: h,
                children: (0, z.jsxs)(Ip, {
                    className: Z7.loanForm,
                    children: [(0, z.jsxs)("div", {
                        className: Zu()(Z7.sliderColumn, e && Z7.gamepad),
                        children: [(0, z.jsx)("div", {
                            className: Z7.limit,
                            children: (0, z.jsx)(Pc.EconomyPanel.LOAN_FORM_LIMIT, {
                                LOAN_LIMIT: (0, z.jsx)(Gc, {
                                    value: a,
                                    unit: Oc.Money
                                })
                            })
                        }), (0, z.jsxs)("div", {
                            className: Z7.sliderContainer,
                            children: [(0, z.jsx)(Pf, {
                                action: "Change Slider Value",
                                className: Z7.sliderHint
                            }), (0, z.jsx)(wx, {
                                uiTag: kx.value?.economyPanelLoansSlider,
                                children: (0, z.jsxs)(CM, {
                                    focusKey: Ig,
                                    value: r.amount,
                                    start: 0,
                                    end: a,
                                    valueTransformer: m,
                                    thumb: (0, z.jsxs)(z.Fragment, {
                                        children: [(0, z.jsx)("div", {
                                            className: eee.thumb
                                        }), c && (0, z.jsx)(xh, {
                                            alignment: "center",
                                            direction: "down",
                                            theme: nee,
                                            className: Z7.balloon,
                                            children: (0, z.jsx)("div", {
                                                className: Zu()(Z7.balloonContent, Jx(Z7, l)),
                                                children: (0, z.jsx)(Gc, {
                                                    value: l,
                                                    unit: Oc.Money,
                                                    signed: !0
                                                })
                                            })
                                        })]
                                    }),
                                    theme: eee,
                                    className: Z7.slider,
                                    style: {
                                        "--stopPos": 100 * Od(o.amount / Math.max(a, 1), 0, 1) + "%"
                                    },
                                    onChange: Jj,
                                    children: [(0, z.jsx)("div", {
                                        className: Zu()(eee.leftEdge, o.amount > 0 ? eee.negative : eee.positive)
                                    }), (0, z.jsx)("div", {
                                        className: Zu()(eee.rightEdge, o.amount < a ? eee.positive : eee.negative)
                                    })]
                                })
                            })]
                        }), (0, z.jsxs)("div", {
                            className: Z7.directionLabels,
                            children: [o.amount > 0 && (0, z.jsxs)(z.Fragment, {
                                children: [(0, z.jsx)("div", {
                                    className: Z7.lessLabel,
                                    children: (0, z.jsx)(Pc.EconomyPanel.LOAN_FORM_LESS_LABEL, {})
                                }), (0, z.jsx)(ef, {
                                    src: "Media/Glyphs/ThickStrokeArrowLeft.svg",
                                    className: Z7.lessArrow
                                })]
                            }), (0, z.jsx)("div", {
                                className: Z7.space
                            }), o.amount < a && (0, z.jsxs)(z.Fragment, {
                                children: [(0, z.jsx)(ef, {
                                    src: "Media/Glyphs/ThickStrokeArrowRight.svg",
                                    className: Z7.moreArrow
                                }), (0, z.jsx)("div", {
                                    className: Z7.moreLabel,
                                    children: (0, z.jsx)(Pc.EconomyPanel.LOAN_FORM_MORE_LABEL, {})
                                })]
                            })]
                        })]
                    }), (0, z.jsx)("div", {
                        className: Z7.buttonColumn,
                        children: (0, z.jsxs)(tp, {
                            direction: Rg.Vertical,
                            children: [(0, z.jsxs)("div", {
                                className: Z7.buttonRow,
                                children: [(0, z.jsx)(Pf, {
                                    action: "Select",
                                    active: t,
                                    className: Z7.buttonHint
                                }), e && !t && (0, z.jsx)("div", {
                                    className: Zu()(Z7.hintSpaceholder, Z7.buttonHint)
                                }), (0, z.jsx)(Ah, {
                                    onFocusChange: n,
                                    children: (0, z.jsx)(wx, {
                                        uiTag: kx.value?.economyPanelLoansAccept,
                                        children: (0, z.jsx)(Gp, {
                                            disableHint: !0,
                                            selectSound: rp.takeLoan,
                                            className: Z7.acceptButton,
                                            disabled: !c,
                                            onSelect: eS,
                                            children: (0, z.jsx)(Pc.EconomyPanel.LOAN_FORM_ACCEPT, {})
                                        })
                                    })
                                })]
                            }), (0, z.jsxs)("div", {
                                className: Z7.buttonRow,
                                children: [(0, z.jsx)(Pf, {
                                    action: "Select",
                                    active: s,
                                    className: Z7.buttonHint
                                }), e && !s && (0, z.jsx)("div", {
                                    className: Zu()(Z7.hintSpaceholder, Z7.buttonHint)
                                }), (0, z.jsx)(Ah, {
                                    onFocusChange: i,
                                    children: (0, z.jsx)(Gp, {
                                        disableHint: !0,
                                        className: Z7.resetButton,
                                        disabled: !c,
                                        onSelect: tS,
                                        children: (0, z.jsx)(Pc.EconomyPanel.LOAN_FORM_RESET, {})
                                    })
                                })]
                            })]
                        })
                    })]
                })
            })
        };
        const iee = 75;

        function aee(e) {
            return Math.max(Math.floor(Math.log10(Math.abs(e))), 0) + 1
        }
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-form/loan-form.tsx", {
            get LoanForm() {
                return see
            },
            set LoanForm(e) {
                see = e
            }
        });
        let oee = {
            "table-header": "table-header_wsv",
            tableHeader: "table-header_wsv",
            "header-cell": "header-cell_ymh",
            headerCell: "header-cell_ymh",
            "table-content": "table-content_YfG",
            tableContent: "table-content_YfG",
            "content-cell": "content-cell_MZC",
            contentCell: "content-cell_MZC",
            "amount-column": "amount-column_kN8",
            amountColumn: "amount-column_kN8",
            "interest-rate-column": "interest-rate-column_jcI",
            interestRateColumn: "interest-rate-column_jcI",
            "monthly-cost-column": "monthly-cost-column_BPo",
            monthlyCostColumn: "monthly-cost-column_BPo",
            "monthly-cost-field": "monthly-cost-field_eRh",
            monthlyCostField: "monthly-cost-field_eRh",
            "new-value": "new-value_keh",
            newValue: "new-value_keh",
            negative: "negative_qB0",
            "loan-number": "loan-number_Mcp",
            loanNumber: "loan-number_Mcp",
            "current-value": "current-value_SLp",
            currentValue: "current-value_SLp",
            modified: "modified_rG6",
            "strikethrough-line": "strikethrough-line_Yh8",
            strikethroughLine: "strikethrough-line_Yh8",
            hidden: "hidden_RHn"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-table/loan-table.module.scss", {
            get classes() {
                return oee
            },
            set classes(e) {
                Object.assign(oee, e)
            }
        });
        const ree = oee;
        var lee = () => (0, z.jsxs)("div", {
                className: ree.tableHeader,
                children: [(0, z.jsx)("div", {
                    className: Zu()(ree.headerCell, ree.amountColumn),
                    children: (0, z.jsx)(Pc.EconomyPanel.LOAN_TABLE_AMOUNT, {})
                }), (0, z.jsx)("div", {
                    className: Zu()(ree.headerCell, ree.interestRateColumn),
                    children: (0, z.jsx)(Pc.EconomyPanel.LOAN_TABLE_INTEREST_RATE, {})
                }), (0, z.jsx)("div", {
                    className: Zu()(ree.headerCell, ree.monthlyCostColumn),
                    children: (0, z.jsx)(Pc.EconomyPanel.LOAN_TABLE_MONTHLY_COST, {})
                })]
            }),
            cee = () => {
                const e = sl(Qj),
                    t = sl(Zj),
                    n = Math.abs(t.amount - e.amount) > .5;
                return (0, z.jsxs)("div", {
                    className: ree.tableContent,
                    children: [(0, z.jsx)("div", {
                        className: Zu()(ree.contentCell, ree.amountColumn),
                        children: (0, z.jsx)(uee, {
                            currentValue: e.amount,
                            newValue: t.amount,
                            unit: Oc.Money,
                            modified: n
                        })
                    }), (0, z.jsx)("div", {
                        className: Zu()(ree.contentCell, ree.interestRateColumn),
                        children: (0, z.jsx)(uee, {
                            currentValue: 100 * e.dailyInterestRate,
                            newValue: 100 * t.dailyInterestRate,
                            unit: Oc.PercentageSingleFraction,
                            modified: n
                        })
                    }), (0, z.jsxs)("div", {
                        className: Zu()(ree.contentCell, ree.monthlyCostColumn),
                        children: [(0, z.jsxs)("div", {
                            className: Zu()(P7.moneyField, P7.primary, ree.monthlyCostField),
                            children: [(0, z.jsx)("div", {
                                className: Zu()(P7.sign, Jx(ree, -t.dailyPayment)),
                                children: su(-t.dailyPayment, !0)
                            }), (0, z.jsx)("div", {
                                className: Zu()(P7.content, Jx(ree, -e.dailyPayment)),
                                children: (0, z.jsx)(uee, {
                                    currentValue: e.dailyPayment,
                                    newValue: t.dailyPayment,
                                    unit: Oc.Money,
                                    modified: n,
                                    newClassName: Jx(ree, -t.dailyPayment)
                                })
                            })]
                        }), (0, z.jsx)("div", {})]
                    })]
                })
            };
        const uee = ({
            currentValue: e,
            newValue: t,
            unit: n,
            modified: s,
            newClassName: i
        }) => (0, z.jsxs)(z.Fragment, {
            children: [(0, z.jsxs)("div", {
                className: Zu()(ree.currentValue, s && ree.modified),
                children: [(0, z.jsx)(Gc, {
                    value: e,
                    unit: n
                }), s && (0, z.jsx)("div", {
                    className: ree.strikethroughLine
                })]
            }), (0, z.jsx)("div", {
                className: Zu()(ree.newValue, !s && ree.hidden, i),
                children: (0, z.jsx)(Gc, {
                    value: t,
                    unit: n
                })
            })]
        });
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-table/loan-table.tsx", {
            get LoanTableHeader() {
                return lee
            },
            set LoanTableHeader(e) {
                lee = e
            },
            get LoanTableContent() {
                return cee
            },
            set LoanTableContent(e) {
                cee = e
            }
        });
        let dee = {
            "loan-adjustment": "loan-adjustment_mqe",
            loanAdjustment: "loan-adjustment_mqe"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-adjustment.module.scss", {
            get classes() {
                return dee
            },
            set classes(e) {
                Object.assign(dee, e)
            }
        });
        const mee = dee;
        var hee = ({
            className: e
        }) => (0, z.jsxs)(c0, {
            header: (0, z.jsx)(lee, {}),
            theme: l0,
            className: Zu()(mee.loanAdjustment, e),
            children: [(0, z.jsx)(cee, {}), (0, z.jsx)(see, {})]
        });
        X.add("game-ui/game/components/economy-panel/loan-page/loan-adjustment/loan-adjustment.tsx", {
            get LoanAdjustment() {
                return hee
            },
            set LoanAdjustment(e) {
                hee = e
            }
        });
        let gee = {
            chartFontColor: "rgba(255, 255, 255, 0.6)",
            chartLineColor: "rgba(255, 255, 255, 0.1)",
            cityIncomeColor: "rgba(139, 219, 70, 0.6)",
            cityExpensesColor: "rgba(233, 95, 74, 0.6)",
            loanInterestColor: "rgba(233, 95, 74, 1)",
            "loan-chart": "loan-chart_IIu",
            loanChart: "loan-chart_IIu",
            content: "content_K6K",
            "chart-column": "chart-column_YvP",
            chartColumn: "chart-column_YvP",
            chart: "chart_nml",
            "summary-column": "summary-column_Wm0",
            summaryColumn: "summary-column_Wm0",
            "summary-item": "summary-item__T7",
            summaryItem: "summary-item__T7",
            warning: "warning_aXt",
            divider: "divider_s9s",
            legend: "legend_ots",
            "legend-item": "legend-item_OSA",
            legendItem: "legend-item_OSA"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-chart/loan-chart.module.scss", {
            get classes() {
                return gee
            },
            set classes(e) {
                Object.assign(gee, e)
            }
        });
        const pee = gee;
        var fee = ({
            className: e
        }) => {
            const t = sl(Qj),
                n = sl(Zj),
                s = sl(Vj),
                i = s > 0 ? n.dailyPayment / s * 100 : 0,
                a = Math.abs(sl(Hj)) - t.dailyPayment,
                o = a + n.dailyPayment,
                r = s - o,
                l = (0, Y.useMemo)((() => ({
                    labels: ["Budget"],
                    datasets: [{
                        label: "cityIncome",
                        data: [s],
                        backgroundColor: pee.cityIncomeColor,
                        barPercentage: .8,
                        categoryPercentage: .5,
                        stack: "income"
                    }, {
                        label: "cityExpenses",
                        data: [a],
                        backgroundColor: pee.cityExpensesColor,
                        barPercentage: .8,
                        categoryPercentage: .5,
                        stack: "expenses"
                    }, {
                        label: "loanInterest",
                        data: [n.dailyPayment],
                        backgroundColor: pee.loanInterestColor,
                        barPercentage: .8,
                        categoryPercentage: .5,
                        stack: "expenses"
                    }]
                })), [a, s, n.dailyPayment]),
                c = function () {
                    const e = Kc(Oc.Money),
                        t = sl(Ml);
                    return {
                        layout: {
                            padding: {
                                top: 24,
                                right: 36,
                                bottom: 0,
                                left: 12
                            }
                        },
                        scales: {
                            y: {
                                stacked: !0,
                                suggestedMax: 1e3,
                                beginAtZero: !0,
                                grid: {
                                    color: pee.chartLineColor,
                                    lineWidth: 2
                                },
                                border: {
                                    color: pee.chartLineColor,
                                    width: 2
                                },
                                ticks: {
                                    maxTicksLimit: 10,
                                    font: {
                                        size: 10 * t
                                    },
                                    color: pee.chartFontColor,
                                    padding: 10,
                                    autoSkip: !1,
                                    callback: t => e(t)
                                }
                            },
                            x: {
                                display: !1,
                                stacked: !0
                            }
                        }
                    }
                }();
            return (0, z.jsx)(c0, {
                focusKey: Ig,
                theme: l0,
                className: Zu()(pee.loanChart, e),
                children: (0, z.jsxs)("div", {
                    className: pee.content,
                    children: [(0, z.jsxs)("div", {
                        className: pee.chartColumn,
                        children: [(0, z.jsx)(SR, {
                            type: "bar",
                            data: l,
                            options: c,
                            className: pee.chart
                        }), (0, z.jsxs)("div", {
                            className: pee.legend,
                            children: [(0, z.jsx)(yR, {
                                color: pee.cityIncomeColor,
                                label: (0, z.jsx)(Pc.EconomyPanel.LOAN_CHART_LEGEND_INCOME, {}),
                                className: pee.legendItem
                            }), (0, z.jsx)(yR, {
                                color: pee.cityExpensesColor,
                                label: (0, z.jsx)(Pc.EconomyPanel.LOAN_CHART_LEGEND_EXPENSES, {}),
                                className: pee.legendItem
                            }), n.dailyPayment > 0 && (0, z.jsx)(yR, {
                                color: pee.loanInterestColor,
                                label: (0, z.jsx)(Pc.EconomyPanel.LOAN_CHART_LEGEND_LOAN_INTEREST, {}),
                                className: pee.legendItem
                            })]
                        })]
                    }), (0, z.jsxs)("div", {
                        className: pee.summaryColumn,
                        children: [0 !== i && (0, z.jsxs)(z.Fragment, {
                            children: [(0, z.jsx)(vee, {
                                children: (0, z.jsx)(Pc.EconomyPanel.LOAN_CHART_RELATIVE_COST, {
                                    RELATIVE_LOAN_COST: (0, z.jsx)(Gc, {
                                        value: i,
                                        unit: Oc.PercentageSingleFraction
                                    })
                                })
                            }), (0, z.jsx)("div", {
                                className: pee.divider
                            })]
                        }), (0, z.jsx)(vee, {
                            warning: r <= 0,
                            children: xee(r, n.amount)
                        }), .85 * s < o && (0, z.jsxs)(z.Fragment, {
                            children: [(0, z.jsx)("div", {
                                className: pee.divider
                            }), (0, z.jsx)(vee, {
                                warning: !0,
                                children: o > s ? (0, z.jsx)(Pc.EconomyPanel.LOAN_CHART_BUDGET_WARNING, {}) : (0, z.jsx)(Pc.EconomyPanel.LOAN_CHART_BUDGET_WARNING_MODIFIED, {})
                            })]
                        })]
                    })]
                })
            })
        };

        function xee(e, t) {
            const n = (0, z.jsx)(Gc, {
                value: e,
                unit: Oc.MoneyPerMonth
            });
            return e >= 0 ? t > 0 ? (0, z.jsx)(Pc.EconomyPanel.LOAN_CHART_REMAINING_SURPLUS, {
                TOTAL: n
            }) : (0, z.jsx)(Pc.EconomyPanel.LOAN_CHART_SURPLUS, {
                TOTAL: n
            }) : (0, z.jsx)(Pc.EconomyPanel.LOAN_CHART_DEFICIT, {
                TOTAL: n
            })
        }
        const vee = ({
            warning: e,
            children: t
        }) => (0, z.jsx)(zf, {
            className: Zu()(pee.summaryItem, e && pee.warning),
            children: t
        });
        X.add("game-ui/game/components/economy-panel/loan-page/loan-chart/loan-chart.tsx", {
            get LoanChart() {
                return fee
            },
            set LoanChart(e) {
                fee = e
            }
        });
        let _ee = {
            "loan-page": "loan-page_cyR",
            loanPage: "loan-page_cyR",
            "main-column": "main-column_NUx",
            mainColumn: "main-column_NUx",
            "info-column": "info-column_c8_",
            infoColumn: "info-column_c8_",
            chart: "chart_Dc8"
        };
        X.add("game-ui/game/components/economy-panel/loan-page/loan-page.module.scss", {
            get classes() {
                return _ee
            },
            set classes(e) {
                Object.assign(_ee, e)
            }
        });
        const bee = _ee;
        var Tee = () => (lg(kx.value?.economyPanelLoansPage), (0, Y.useEffect)((() => (tS(), () => tS())), []), (0, z.jsxs)("div", {
            className: bee.loanPage,
            children: [(0, z.jsxs)("div", {
                className: bee.mainColumn,
                children: [(0, z.jsx)(hee, {
                    className: bee.adjustment
                }), (0, z.jsx)(fee, {
                    className: bee.chart
                })]
            }), (0, z.jsx)(c0, {
                focusKey: Ig,
                theme: l0,
                className: bee.infoColumn,
                children: (0, z.jsx)($9, {
                    icon: "Media/Game/Icons/Money.svg",
                    title: (0, z.jsx)(Pc.EconomyPanel.LOAN_PAGE_TITLE, {}),
                    description: (0, z.jsx)(Pc.EconomyPanel.LOAN_PAGE_DESCRIPTION, {})
                })
            })]
        }));
        X.add("game-ui/game/components/economy-panel/loan-page/loan-page.tsx", {
            get LoanPage() {
                return Tee
            },
            set LoanPage(e) {
                Tee = e
            }
        });
        var Eee = Y.createContext({
            onFocusChange: () => {},
            onMouseEnter: () => {},
            onMouseLeave: () => {}
        });

        function Iee(e) {
            const t = (0, Y.useContext)(Eee);
            return {
                handleFocusChange: (0, Y.useCallback)((n => t.onFocusChange(e, n)), [e, t]),
                handleMouseEnter: (0, Y.useCallback)((() => t.onMouseEnter(e)), [e, t]),
                handleMouseLeave: (0, Y.useCallback)((() => t.onMouseLeave(e)), [e, t])
            }
        }
        X.add("game-ui/game/components/economy-panel/production-page/production-page-context.ts", {
            get ProductionPageContext() {
                return Eee
            },
            set ProductionPageContext(e) {
                Eee = e
            },
            get useItemListeners() {
                return Iee
            },
            set useItemListeners(e) {
                Iee = e
            }
        });
        let yee = {
            detail: "detail_sbO",
            chart: "chart_Eey",
            column: "column_N8A",
            "left-column": "left-column_GbN",
            leftColumn: "left-column_GbN",
            "right-column": "right-column_hq1",
            rightColumn: "right-column_hq1",
            "center-column": "center-column_M5Z",
            centerColumn: "center-column_M5Z",
            row: "row_PNm",
            "double-row": "double-row_kpL",
            doubleRow: "double-row_kpL",
            label: "label_qcd",
            "resource-label": "resource-label_b8b",
            resourceLabel: "resource-label_b8b",
            "left-label": "left-label_aR5",
            leftLabel: "left-label_aR5",
            "right-label": "right-label_q7r",
            rightLabel: "right-label_q7r",
            "label-padding": "label-padding_TU1",
            labelPadding: "label-padding_TU1",
            "label-extra-padding": "label-extra-padding_qhR",
            labelExtraPadding: "label-extra-padding_qhR",
            image: "image_k4T",
            icon: "icon_DSu",
            "resource-icon": "resource-icon_GIT",
            resourceIcon: "resource-icon_GIT",
            "icon-container": "icon-container_iMp",
            iconContainer: "icon-container_iMp",
            "left-icon-container": "left-icon-container_V3g",
            leftIconContainer: "left-icon-container_V3g",
            "icon-container-padding": "icon-container-padding_NGu",
            iconContainerPadding: "icon-container-padding_NGu",
            "icon-container-extra-padding": "icon-container-extra-padding_DY7",
            iconContainerExtraPadding: "icon-container-extra-padding_DY7",
            "right-icon-container": "right-icon-container_zrI",
            rightIconContainer: "right-icon-container_zrI",
            "top-icon-container": "top-icon-container_vrp",
            topIconContainer: "top-icon-container_vrp",
            "bottom-icon-container": "bottom-icon-container_Wzp",
            bottomIconContainer: "bottom-icon-container_Wzp"
        };
        X.add("game-ui/game/components/economy-panel/production-page/resource-detail/resource-detail.module.scss", {
            get classes() {
                return yee
            },
            set classes(e) {
                Object.assign(yee, e)
            }
        });
        const jee = yee;
        var See = ({
                entity: e,
                className: t
            }) => (0, z.jsx)(c0, {
                focusKey: Ig,
                theme: l0,
                className: Zu()(jee.resourceDetail, t),
                children: !Ur(e, Lx) && (0, z.jsx)(Cee, {
                    entity: e
                })
            }),
            Cee = ({
                entity: e
            }) => {
                const t = ll(oS, e),
                    n = ll(aS, e),
                    s = function (e, t) {
                        const n = t.inputs.flatMap((e => e));
                        let s = Math.max(n.length, 1),
                            i = t.outputs.length + t.serviceOutputs.length + e.consumers.length;
                        e.tradable && (s++, i++);
                        return Math.max(s, i)
                    }(t, n),
                    i = (40 * s + 8 * (s - 1)) * Hm();
                return (0, z.jsx)("div", {
                    className: jee.detail,
                    children: (0, z.jsxs)("div", {
                        className: jee.chart,
                        style: {
                            height: i
                        },
                        children: [(0, z.jsx)(Nee, {
                            resource: t,
                            details: n
                        }), (0, z.jsx)(Pee, {
                            resource: t,
                            details: n
                        }), (0, z.jsx)(Lee, {
                            resource: t,
                            details: n
                        })]
                    })
                })
            },
            Nee = ({
                resource: e,
                details: t
            }) => (0, z.jsxs)("div", {
                className: Zu()(jee.column, jee.leftColumn),
                children: [0 === t?.inputs.length && (0, z.jsx)(Dee, {
                    icon: e.producer.icon,
                    arrow: "ProductionArrow",
                    children: (0, z.jsx)(Pc.EconomyPanel.PRODUCTION_PAGE_PRODUCTIONLINK, {
                        hash: e.producer.name
                    })
                }), t?.inputs.map(((t, n) => (0, z.jsx)(wee, {
                    resource: e,
                    entities: t
                }, n))), e.tradable && (0, z.jsx)(Oee, {})]
            }),
            wee = ({
                resource: e,
                entities: t
            }) => {
                const n = cl(oS, t);
                return (0, z.jsxs)("div", {
                    className: Zu()(jee.row, n.length > 1 && jee.doubleRow),
                    style: {
                        flex: n.length
                    },
                    children: [n.map(((e, t) => (0, z.jsx)("div", {
                        className: jee.row,
                        children: (0, z.jsx)("div", {
                            className: Zu()(jee.iconContainer, jee.leftIconContainer, n.length > 1 && (0 === t ? jee.topIconContainer : jee.bottomIconContainer)),
                            children: (0, z.jsx)("img", {
                                src: e.icon,
                                className: jee.icon
                            })
                        })
                    }, Dr(e.entity)))), (0, z.jsx)("div", {
                        className: Zu()(jee.label, jee.rightLabel, jee.labelPadding, n.length > 1 && jee.labelExtraPadding),
                        children: (0, z.jsx)(Pc.EconomyPanel.PRODUCTION_PAGE_PRODUCTIONLINK, {
                            hash: e.producer.name
                        })
                    }), (0, z.jsx)("div", {
                        className: Zu()(jee.iconContainer, jee.leftIconContainer, jee.iconContainerPadding, n.length > 1 && jee.iconContainerExtraPadding),
                        children: (0, z.jsx)("img", {
                            src: e.producer.icon,
                            className: jee.icon
                        })
                    }), (0, z.jsx)("img", {
                        src: `Media/Game/Resources/Production/${1===n.length?"Input":"DoubleInput"}Arrow.png`,
                        className: jee.image
                    })]
                })
            },
            Oee = () => (0, z.jsxs)("div", {
                className: jee.row,
                children: [(0, z.jsx)("img", {
                    src: "Media/Game/Resources/Production/ImportArrow.png",
                    className: jee.image
                }), (0, z.jsx)("div", {
                    className: Zu()(jee.iconContainer, jee.leftIconContainer),
                    children: (0, z.jsx)("img", {
                        src: "Media/Game/Icons/Import.svg",
                        className: jee.icon
                    })
                }), (0, z.jsx)("div", {
                    className: Zu()(jee.label, jee.leftLabel),
                    children: (0, z.jsx)(Pc.EconomyPanel.PRODUCTION_PAGE_IMPORT, {})
                })]
            }),
            Pee = ({
                resource: e
            }) => (0, z.jsx)("div", {
                className: Zu()(jee.column, jee.centerColumn),
                children: (0, z.jsxs)("div", {
                    className: Zu()(jee.label, jee.resourceLabel),
                    children: [(0, z.jsx)("img", {
                        src: e.icon,
                        className: Zu()(jee.icon, jee.resourceIcon)
                    }), (0, z.jsx)(Pc.Resources.TITLE, {
                        hash: e.name
                    })]
                })
            }),
            Lee = ({
                resource: e,
                details: t
            }) => (0, z.jsxs)("div", {
                className: Zu()(jee.column, jee.rightColumn),
                children: [t?.serviceOutputs.map((e => (0, z.jsx)(Ree, {
                    entity: e
                }, Dr(e)))), (0, z.jsx)(Mee, {
                    resource: e,
                    details: t
                }), t?.outputs.map(((e, t) => (0, z.jsx)(Aee, {
                    entity: e
                }, t))), e.tradable && (0, z.jsx)(kee, {})]
            }),
            Aee = ({
                entity: e
            }) => {
                const t = ll(oS, e);
                return (0, z.jsxs)("div", {
                    className: jee.row,
                    children: [(0, z.jsx)("img", {
                        src: "Media/Game/Resources/Production/OutputArrow.png",
                        className: jee.image
                    }), (0, z.jsx)("div", {
                        className: Zu()(jee.iconContainer, jee.leftIconContainer),
                        children: (0, z.jsx)("img", {
                            src: t.producer.icon,
                            className: jee.icon
                        })
                    }), (0, z.jsx)("div", {
                        className: Zu()(jee.label, jee.leftLabel),
                        children: (0, z.jsx)(Pc.EconomyPanel.PRODUCTION_PAGE_PRODUCTIONLINK, {
                            hash: t.producer.name
                        })
                    }), (0, z.jsx)("div", {
                        className: Zu()(jee.iconContainer, jee.rightIconContainer),
                        children: (0, z.jsx)("img", {
                            src: t.icon,
                            className: jee.icon
                        })
                    })]
                })
            },
            Mee = ({
                resource: e
            }) => (0, z.jsx)(z.Fragment, {
                children: e.consumers.map(((e, t) => (0, z.jsx)(Dee, {
                    icon: e.icon,
                    arrow: "ConsumptionArrow",
                    children: (0, z.jsx)(Pc.EconomyPanel.PRODUCTION_PAGE_PRODUCTIONLINK, {
                        hash: e.name
                    })
                }, t)))
            });
        const Ree = ({
            entity: e
        }) => {
            const t = ll(rS, e);
            return (0, z.jsx)(Dee, {
                icon: t.icon,
                arrow: "ConsumptionArrow",
                children: (0, z.jsx)(Pc.Services.NAME, {
                    hash: t.name
                })
            })
        };
        var kee = () => (0, z.jsxs)("div", {
                className: jee.row,
                children: [(0, z.jsx)("img", {
                    src: "Media/Game/Resources/Production/ExportArrow.png",
                    className: jee.image
                }), (0, z.jsx)("div", {
                    className: Zu()(jee.iconContainer, jee.leftIconContainer),
                    children: (0, z.jsx)("img", {
                        src: "Media/Game/Icons/Export.svg",
                        className: jee.icon
                    })
                }), (0, z.jsx)("div", {
                    className: Zu()(jee.label, jee.leftLabel),
                    children: (0, z.jsx)(Pc.EconomyPanel.PRODUCTION_PAGE_EXPORT, {})
                })]
            }),
            Dee = ({
                icon: e,
                arrow: t,
                children: n
            }) => (0, z.jsxs)("div", {
                className: jee.row,
                children: [(0, z.jsx)("img", {
                    src: `Media/Game/Resources/Production/${t}.png`,
                    className: jee.image
                }), (0, z.jsx)("div", {
                    className: Zu()(jee.iconContainer, jee.leftIconContainer),
                    children: (0, z.jsx)("img", {
                        src: e,
                        className: jee.icon
                    })
                }), (0, z.jsx)("div", {
                    className: Zu()(jee.label, jee.rightLabel),
                    children: n
                })]
            });
        X.add("game-ui/game/components/economy-panel/production-page/resource-detail/resource-detail.tsx", {
            get ResourceDetail() {
                return See
            },
            set ResourceDetail(e) {
                See = e
            },
            get Detail() {
                return Cee
            },
            set Detail(e) {
                Cee = e
            },
            get InputsColumn() {
                return Nee
            },
            set InputsColumn(e) {
                Nee = e
            },
            get Input() {
                return wee
            },
            set Input(e) {
                wee = e
            },
            get Import() {
                return Oee
            },
            set Import(e) {
                Oee = e
            },
            get ResourceColumn() {
                return Pee
            },
            set ResourceColumn(e) {
                Pee = e
            },
            get OutputsColumn() {
                return Lee
            },
            set OutputsColumn(e) {
                Lee = e
            },
            get Output() {
                return Aee
            },
            set Output(e) {
                Aee = e
            },
            get Consumptions() {
                return Mee
            },
            set Consumptions(e) {
                Mee = e
            },
            get Export() {
                return kee
            },
            set Export(e) {
                kee = e
            },
            get ThroughPut() {
                return Dee
            },
            set ThroughPut(e) {
                Dee = e
            }
        });
        let Fee = {
            "progress-bar": "progress-bar_xWR",
            progressBar: "progress-bar_xWR",
            "progress-bounds": "progress-bounds_Fjq",
            progressBounds: "progress-bounds_Fjq",
            progress: "progress_JAQ",
            label: "label_nBK"
        };
        X.add("game-ui/common/progress-bar/progress-bar.module.scss", {
            get classes() {
                return Fee
            },
            set classes(e) {
                Object.assign(Fee, e)
            }
        });
        const Uee = Fee;
        let Bee = {
            "progress-bar": "progress-bar_d6t progress-bar_xWR",
            progressBar: "progress-bar_d6t progress-bar_xWR",
            progress: "progress_egi progress_JAQ"
        };
        X.add("game-ui/common/progress-bar/themes/default-progress-bar.module.scss", {
            get classes() {
                return Bee
            },
            set classes(e) {
                Object.assign(Bee, e)
            }
        });
        const Gee = Bee;
        var Vee = ({
            progress: e,
            max: t,
            theme: n = Gee,
            className: s,
            style: i,
            children: a,
            ...o
        }) => {
            const r = (0, Y.useMemo)((() => ({
                    ...Uee,
                    ...n
                })), [n]),
                l = t > 0 ? 100 * Od(e / t, 0, 1) : 0;
            return (0, z.jsxs)("div", {
                ...o,
                className: Zu()(r.progressBar, s),
                style: i,
                children: [r.progressLabel && null != a && (0, z.jsx)("div", {
                    className: r.label,
                    children: a
                }), (0, z.jsx)("div", {
                    className: r.progressBounds,
                    style: {
                        width: l + "%"
                    },
                    children: (0, z.jsx)("div", {
                        className: r.progress,
                        style: {
                            width: (l > 0 ? 100 / l * 100 : 0) + "%"
                        },
                        children: r.progressLabel && null != a && (0, z.jsx)("div", {
                            className: r.progressLabel,
                            children: a
                        })
                    })
                }), !r.progressLabel && null != a && (0, z.jsx)("div", {
                    className: r.label,
                    children: a
                })]
            })
        };
        X.add("game-ui/common/progress-bar/progress-bar.tsx", {
            get ProgressBar() {
                return Vee
            },
            set ProgressBar(e) {
                Vee = e
            }
        });
        var Hee = ({
            focusKey: e,
            forceFocusable: t,
            initialExpanded: n = !1,
            header: s,
            theme: i = l0,
            transition: a = qq,
            className: o,
            children: r,
            onToggleExpanded: l
        }) => {
            const c = Yq(i),
                u = Y.Children.toArray(r).filter(Boolean).length > 0,
                [d, m] = (0, Y.useState)(n),
                h = (0, Y.useCallback)((() => {
                    m((e => !e)), lp(rp.expandPanel), l && l(!d)
                }), [d, l]),
                g = (0, Y.useMemo)((() => ({
                    theme: c,
                    expandable: u,
                    expanded: d,
                    toggleExpanded: u ? h : void 0
                })), [u, d, c, h]);
            return (0, z.jsx)(Ep, {
                className: Zu()(c.section, u && c.expandable, u && c.expanded, o),
                children: (0, z.jsx)(o0.Provider, {
                    value: g,
                    children: (0, z.jsx)(Ug, {
                        expanded: d,
                        expandable: u,
                        onAction: h,
                        children: (0, z.jsxs)(tp, {
                            children: [(0, z.jsx)(Ip, {
                                focusKey: u || t ? e : Ig,
                                className: Zu()(c.header, u && c.expandable, c.first, (!u || !d) && c.last),
                                children: s
                            }), u && (0, z.jsx)(ly, {
                                in: d,
                                children: (0, z.jsx)(ry, {
                                    styles: a,
                                    children: (0, z.jsx)("div", {
                                        children: (0, z.jsx)(Ep, {
                                            className: Zu()(c.content, c.last, c.expandable),
                                            children: r
                                        })
                                    })
                                })
                            })]
                        })
                    })
                })
            })
        };
        X.add("game-ui/common/section/expandable-section.tsx", {
            get ExpandableSection() {
                return Hee
            },
            set ExpandableSection(e) {
                Hee = e
            }
        });
        var Kee = ({
            tooltip: e,
            handleMouseEnter: t,
            handleMouseLeave: n,
            className: s,
            children: i
        }) => {
            const [a, o] = (0, Y.useState)(!1), {
                expanded: r,
                toggleExpanded: l,
                theme: c
            } = (0, Y.useContext)(o0), u = null != l;
            return (0, z.jsx)(Tg, {
                tooltip: e,
                children: (0, z.jsxs)(Ip, {
                    focusKey: u ? yg : Ig,
                    className: Zu()(c.titleBar, u && c.expandable, s),
                    onClick: l,
                    onMouseEnter: t,
                    onMouseLeave: n,
                    onFocusChange: o,
                    children: [u && (0, z.jsx)("div", {
                        className: c.buttonSpace
                    }), (0, z.jsx)("div", {
                        className: c.title,
                        children: i
                    }), (0, z.jsx)(Pf, {
                        action: "Expand Group",
                        active: u && a
                    }), u && (0, z.jsx)(ef, {
                        src: r ? c.collapseIcon : c.expandIcon,
                        className: c.toggleButton
                    })]
                })
            })
        };
        X.add("game-ui/common/section/section-header.tsx", {
            get SectionHeader() {
                return Kee
            },
            set SectionHeader(e) {
                Kee = e
            }
        });
        let Wee = {
            "resource-list": "resource-list_Ra6",
            resourceList: "resource-list_Ra6",
            category: "category_nho",
            categoryHeader: "categoryHeader_YGs",
            "table-header": "table-header_Qbg",
            tableHeader: "table-header_Qbg",
            "header-cell": "header-cell_k7Z",
            headerCell: "header-cell_k7Z",
            table: "table_KZC",
            scrollable: "scrollable_Tuh",
            "table-lines": "table-lines_PGv",
            tableLines: "table-lines_PGv",
            name: "name_IJ7",
            production: "production_iuR",
            "surplus-deficit": "surplus-deficit_oEQ",
            surplusDeficit: "surplus-deficit_oEQ",
            "deficit-label": "deficit-label_CkA",
            deficitLabel: "deficit-label_CkA",
            "surplus-label": "surplus-label_U6j",
            surplusLabel: "surplus-label_U6j",
            "resource-item": "resource-item_oLG item-hover_WK8 item-focused_FuT",
            resourceItem: "resource-item_oLG item-hover_WK8 item-focused_FuT",
            "icon-container": "icon-container_Bnw",
            iconContainer: "icon-container_Bnw",
            icon: "icon_J9H icon_Iwk",
            title: "title_l1U",
            "name-column": "name-column_Jt4",
            nameColumn: "name-column_Jt4",
            "data-column": "data-column_k1t",
            dataColumn: "data-column_k1t",
            "production-bar": "production-bar_PrU",
            productionBar: "production-bar_PrU"
        };
        X.add("game-ui/game/components/economy-panel/production-page/resource-list/resource-list.module.scss", {
            get classes() {
                return Wee
            },
            set classes(e) {
                Object.assign(Wee, e)
            }
        });
        const zee = Wee;
        let Yee = {
            "progress-bar": "progress-bar_oCn progress-bar_RG2 progress-bar_xWR",
            progressBar: "progress-bar_oCn progress-bar_RG2 progress-bar_xWR",
            progress: "progress_gQv progress_GLS progress_JAQ"
        };
        X.add("game-ui/game/components/economy-panel/production-page/resource-list/themes/negative-progress-bar.module.scss", {
            get classes() {
                return Yee
            },
            set classes(e) {
                Object.assign(Yee, e)
            }
        });
        const $ee = Yee;
        let qee = {
            "progress-bar": "progress-bar_P_j progress-bar_RG2 progress-bar_xWR",
            progressBar: "progress-bar_P_j progress-bar_RG2 progress-bar_xWR",
            progress: "progress_zGB progress_GLS progress_JAQ"
        };
        X.add("game-ui/game/components/economy-panel/production-page/resource-list/themes/positive-progress-bar.module.scss", {
            get classes() {
                return qee
            },
            set classes(e) {
                Object.assign(qee, e)
            }
        });
        const Xee = qee;
        let Qee = {
            "progress-bar": "progress-bar_RG2 progress-bar_xWR",
            progressBar: "progress-bar_RG2 progress-bar_xWR",
            progress: "progress_GLS progress_JAQ"
        };
        X.add("game-ui/game/components/economy-panel/production-page/resource-list/themes/production-progress-bar.module.scss", {
            get classes() {
                return Qee
            },
            set classes(e) {
                Object.assign(Qee, e)
            }
        });
        const Zee = Qee;
        var Jee = ({
            className: e
        }) => {
            const t = sl(iS),
                n = sl(sS);
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.economyPanelProductionResources,
                children: (0, z.jsx)(ff, {
                    className: Zu()(zee.resourceList, zee.scrollable, e),
                    children: (0, z.jsx)(tp, {
                        direction: Rg.Vertical,
                        children: t.map(((e, t) => (0, z.jsx)(ete, {
                            max: n,
                            category: e,
                            initialExpanded: 0 === t
                        }, Dr(e.entity))))
                    })
                })
            })
        };
        const ete = ({
                category: e,
                max: t,
                initialExpanded: n
            }) => (0, z.jsxs)(Hee, {
                focusKey: Dr(e.entity),
                initialExpanded: n,
                header: (0, z.jsx)(Kee, {
                    className: zee.categoryHeader,
                    children: (0, z.jsx)(Pc.EconomyPanel.RESOURCE_CATEGORY, {
                        hash: e.name
                    })
                }),
                theme: l0,
                className: zee.category,
                children: [(0, z.jsxs)("div", {
                    className: zee.tableHeader,
                    children: [(0, z.jsx)("div", {
                        className: Zu()(zee.headerCell, zee.name)
                    }), (0, z.jsx)("div", {
                        className: Zu()(zee.headerCell, zee.production),
                        children: (0, z.jsx)(Pc.EconomyPanel.PRODUCTION_PAGE_PRODUCTION, {})
                    }), (0, z.jsx)("div", {
                        className: Zu()(zee.headerCell, zee.surplusDeficit),
                        children: (0, z.jsx)("span", {
                            className: zee.surplusLabel,
                            children: (0, z.jsx)(Pc.EconomyPanel.PRODUCTION_PAGE_SURPLUS, {})
                        })
                    }), (0, z.jsx)("div", {
                        className: Zu()(zee.headerCell, zee.surplusDeficit),
                        children: (0, z.jsx)("span", {
                            className: zee.deficitLabel,
                            children: (0, z.jsx)(Pc.EconomyPanel.PRODUCTION_PAGE_DEFICIT, {})
                        })
                    })]
                }), (0, z.jsx)(tp, {
                    direction: Rg.Vertical,
                    children: e.resources.map((e => (0, z.jsx)(tte, {
                        resource: e,
                        max: t
                    }, Dr(e.entity))))
                }), (0, z.jsxs)("div", {
                    className: zee.tableLines,
                    children: [(0, z.jsx)("div", {
                        className: zee.name
                    }), (0, z.jsx)("div", {
                        className: zee.production
                    }), (0, z.jsx)("div", {
                        className: zee.surplusDeficit
                    }), (0, z.jsx)("div", {
                        className: zee.surplusDeficit
                    })]
                })]
            }),
            tte = ({
                resource: e,
                max: t
            }) => {
                const {
                    handleFocusChange: n,
                    handleMouseEnter: s,
                    handleMouseLeave: i
                } = Iee(e.entity), a = ll(lS, e.entity);
                return (0, z.jsx)(Ah, {
                    onFocusChange: n,
                    children: (0, z.jsxs)(Ip, {
                        focusKey: Dr(e.entity),
                        className: zee.resourceItem,
                        onMouseEnter: s,
                        onMouseLeave: i,
                        children: [(0, z.jsx)("div", {
                            className: Zu()(zee.nameColumn),
                            children: (0, z.jsx)("div", {
                                className: zee.iconContainer,
                                children: (0, z.jsx)("img", {
                                    src: e.icon,
                                    className: zee.icon
                                })
                            })
                        }), (0, z.jsx)("div", {
                            className: Zu()(zee.dataColumn),
                            children: (0, z.jsx)(Vee, {
                                progress: a.production,
                                max: t,
                                theme: Zee,
                                className: zee.productionBar,
                                children: (0, z.jsx)(Gc, {
                                    value: a.production,
                                    unit: Oc.WeightPerMonth
                                })
                            })
                        }), (0, z.jsx)("div", {
                            className: Zu()(zee.dataColumn),
                            children: (0, z.jsx)(Vee, {
                                progress: a.surplus,
                                max: t,
                                theme: Xee,
                                className: zee.productionBar,
                                children: (0, z.jsx)(Gc, {
                                    value: a.surplus,
                                    unit: Oc.WeightPerMonth
                                })
                            })
                        }), (0, z.jsx)("div", {
                            className: Zu()(zee.dataColumn),
                            children: (0, z.jsx)(Vee, {
                                progress: a.deficit,
                                max: t,
                                theme: $ee,
                                className: zee.productionBar,
                                children: (0, z.jsx)(Gc, {
                                    value: a.deficit,
                                    unit: Oc.WeightPerMonth
                                })
                            })
                        })]
                    })
                })
            };
        X.add("game-ui/game/components/economy-panel/production-page/resource-list/resource-list.tsx", {
            get ResourceList() {
                return Jee
            },
            set ResourceList(e) {
                Jee = e
            }
        });
        let nte = {
            "production-page": "production-page_A9T",
            productionPage: "production-page_A9T",
            "main-column": "main-column_FBD",
            mainColumn: "main-column_FBD",
            "info-column": "info-column_jLZ",
            infoColumn: "info-column_jLZ"
        };
        X.add("game-ui/game/components/economy-panel/production-page/production-page.module.scss", {
            get classes() {
                return nte
            },
            set classes(e) {
                Object.assign(nte, e)
            }
        });
        const ste = nte;
        var ite, ate = () => {
            lg(kx.value?.economyPanelProductionPage);
            const [e, t] = (0, Y.useState)(Lx), n = (0, Y.useMemo)((() => ({
                onFocusChange: (e, n) => n && t(e),
                onMouseEnter: e => t(e),
                onMouseLeave: e => t((t => Ur(t, e) ? Lx : t))
            })), []);
            return (0, z.jsxs)("div", {
                className: ste.productionPage,
                children: [(0, z.jsx)(Eee.Provider, {
                    value: n,
                    children: (0, z.jsx)(Jee, {
                        className: ste.mainColumn
                    })
                }), (0, z.jsx)(See, {
                    entity: e,
                    className: ste.infoColumn
                })]
            })
        };
        X.add("game-ui/game/components/economy-panel/production-page/production-page.tsx", {
                get ProductionPage() {
                    return ate
                },
                set ProductionPage(e) {
                    ate = e
                }
            }),
            function (e) {
                e[e.Service = 0] = "Service", e[e.BudgetSlider = 1] = "BudgetSlider", e[e.ServiceFee = 2] = "ServiceFee", e[e.FeeRevenue = 3] = "FeeRevenue", e[e.ExportRevenue = 4] = "ExportRevenue", e[e.ServiceUpkeep = 5] = "ServiceUpkeep", e[e.ImportExpense = 6] = "ImportExpense"
            }(ite || (ite = {}));
        var ote = {
                type: ite.BudgetSlider
            },
            rte = {
                type: ite.FeeRevenue
            },
            lte = {
                type: ite.ExportRevenue
            },
            cte = {
                type: ite.ServiceUpkeep
            },
            ute = {
                type: ite.ImportExpense
            },
            dte = Y.createContext({
                onFocusChange: () => {},
                onMouseEnter: () => {},
                onMouseLeave: () => {}
            });

        function mte(e) {
            const t = (0, Y.useContext)(dte);
            return {
                handleFocusChange: (0, Y.useCallback)((n => t.onFocusChange(e, n)), [e, t]),
                handleMouseEnter: (0, Y.useCallback)((() => t.onMouseEnter(e)), [e, t]),
                handleMouseLeave: (0, Y.useCallback)((() => t.onMouseLeave(e)), [e, t])
            }
        }
        X.add("game-ui/game/components/economy-panel/service-page/service-page-context.ts", {
            get ServicePageItemType() {
                return ite
            },
            set ServicePageItemType(e) {
                ite = e
            },
            get BUDGET_SLIDER() {
                return ote
            },
            set BUDGET_SLIDER(e) {
                ote = e
            },
            get FEE_REVENUE_FIELD() {
                return rte
            },
            set FEE_REVENUE_FIELD(e) {
                rte = e
            },
            get EXPORT_REVENUE_FIELD() {
                return lte
            },
            set EXPORT_REVENUE_FIELD(e) {
                lte = e
            },
            get SERVICE_UPKEEP_FIELD() {
                return cte
            },
            set SERVICE_UPKEEP_FIELD(e) {
                cte = e
            },
            get IMPORT_EXPENSE_FIELD() {
                return ute
            },
            set IMPORT_EXPENSE_FIELD(e) {
                ute = e
            },
            get ServicePageContext() {
                return dte
            },
            set ServicePageContext(e) {
                dte = e
            },
            get useItemListeners() {
                return mte
            },
            set useItemListeners(e) {
                mte = e
            }
        });
        let hte = {
            "service-item-detail": "service-item-detail_iHg",
            serviceItemDetail: "service-item-detail_iHg",
            "detail-layout": "detail-layout_yS8",
            detailLayout: "detail-layout_yS8"
        };
        X.add("game-ui/game/components/economy-panel/service-page/item-detail/service-item-detail.module.scss", {
            get classes() {
                return hte
            },
            set classes(e) {
                Object.assign(hte, e)
            }
        });
        const gte = hte;
        var pte = ({
            service: e,
            itemId: t,
            className: n
        }) => {
            const s = ll(dS, e);
            return (0, z.jsx)(c0, {
                focusKey: Ig,
                theme: l0,
                className: Zu()(gte.serviceItemDetail, n),
                children: fte(t, s)
            })
        };

        function fte(e, t) {
            switch (e?.type) {
            case ite.Service:
                return (0, z.jsx)(xte, {
                    entity: e.entity
                });
            case ite.BudgetSlider:
                return null != t ? (0, z.jsx)(vte, {
                    serviceDetails: t
                }) : null;
            case ite.ServiceFee:
                if (null != t) {
                    const n = t.fees.find((t => t.name === e.name));
                    if (null != n) return (0, z.jsx)(_te, {
                        fee: n,
                        serviceDetails: t
                    })
                }
                return null;
            case ite.FeeRevenue:
                return (0, z.jsx)(bte, {});
            case ite.ExportRevenue:
                return (0, z.jsx)(Tte, {});
            case ite.ServiceUpkeep:
                return (0, z.jsx)(Ete, {});
            case ite.ImportExpense:
                return (0, z.jsx)(Ite, {});
            default:
                return null
            }
        }
        const xte = ({
                entity: e
            }) => {
                const t = ll(Rx, e);
                return t ? (0, z.jsx)($9, {
                    icon: t.icon,
                    title: (0, z.jsx)(Tc, {
                        id: t.titleId
                    }),
                    description: t.descriptionId ? (0, z.jsx)(Tc, {
                        id: t.descriptionId
                    }) : void 0
                }) : null
            },
            vte = ({
                serviceDetails: e
            }) => {
                const t = e.efficiency - 100;
                return (0, z.jsx)($9, {
                    icon: e.icon,
                    title: (0, z.jsx)(Pc.EconomyPanel.SERVICE_BUDGET_SLIDER_TITLE, {
                        hash: e.name
                    }),
                    description: (0, z.jsx)(Pc.EconomyPanel.SERVICE_BUDGET_SLIDER_DESCRIPTION, {
                        hash: e.name
                    }),
                    className: gte.detailLayout,
                    bottom: (0, z.jsx)(T4, {
                        label: (0, z.jsx)(Pc.EconomyPanel.SERVICE_BUDGET_EFFICIENCY, {}),
                        theme: U7,
                        className: Jx(U7, t),
                        children: (0, z.jsx)(Gc, {
                            signed: !0,
                            value: t,
                            unit: Oc.Percentage
                        })
                    })
                }, "budget")
            },
            _te = ({
                serviceDetails: e,
                fee: t
            }) => {
                const n = 100 * (t.consumptionMultiplier - 1),
                    s = 100 * (t.efficiencyMultiplier - 1);
                return t ? (0, z.jsx)($9, {
                    icon: e.icon,
                    title: (0, z.jsx)(Pc.EconomyPanel.SERVICES_RESOURCE_FEE_LABEL, {
                        hash: t.name
                    }),
                    description: (0, z.jsx)(Pc.EconomyPanel.SERVICES_RESOURCE_FEE_DESCRIPTION, {
                        hash: t.name
                    }),
                    bottom: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(T4, {
                            label: (0, z.jsx)(Pc.EconomyPanel.SERVICES_RESOURCE_FEE_CONSUMPTION, {
                                hash: t.name
                            }),
                            theme: U7,
                            className: Jx(U7, -n),
                            children: (0, z.jsx)(Gc, {
                                signed: !0,
                                value: n,
                                unit: Oc.Percentage
                            })
                        }), (0, z.jsx)(T4, {
                            label: (0, z.jsx)(Pc.EconomyPanel.SERVICES_RESOURCE_FEE_EFFICIENCY, {}),
                            theme: U7,
                            className: Jx(U7, s),
                            children: (0, z.jsx)(Gc, {
                                signed: !0,
                                value: s,
                                unit: Oc.Percentage
                            })
                        }), (0, z.jsx)(T4, {
                            label: (0, z.jsx)(Pc.EconomyPanel.SERVICES_RESOURCE_FEE_HAPPINESS, {}),
                            theme: U7,
                            className: Jx(U7, t.happinessEffect),
                            children: (0, z.jsx)(Gc, {
                                signed: !0,
                                value: t.happinessEffect,
                                unit: Oc.Integer
                            })
                        })]
                    }),
                    className: gte.detailLayout
                }) : null
            },
            bte = () => (0, z.jsx)($9, {
                icon: "Media/Game/Icons/ServiceFees.svg",
                title: (0, z.jsx)(Pc.EconomyPanel.SERVICES_FEES_LABEL_FEES, {}),
                description: (0, z.jsx)(Pc.EconomyPanel.SERVICE_FEES_REVENUE_DESCRIPTION, {}),
                className: gte.detailLayout
            }),
            Tte = () => (0, z.jsx)($9, {
                icon: "Media/Game/Icons/Export.svg",
                title: (0, z.jsx)(Pc.EconomyPanel.SERVICES_FEES_LABEL_EXPORT, {}),
                description: (0, z.jsx)(Pc.EconomyPanel.SERVICE_EXPORT_REVENUE_DESCRIPTION, {}),
                className: gte.detailLayout
            }),
            Ete = () => (0, z.jsx)($9, {
                icon: "Media/Game/Icons/ServiceUpkeep.svg",
                title: (0, z.jsx)(Pc.EconomyPanel.SERVICES_TITLE_EXPENSES, {}),
                description: (0, z.jsx)(Pc.EconomyPanel.SERVICE_UPKEEP_EXPENSE_DESCRIPTION, {}),
                className: gte.detailLayout
            }),
            Ite = () => (0, z.jsx)($9, {
                icon: "Media/Game/Icons/Import.svg",
                title: (0, z.jsx)(Pc.EconomyPanel.SERVICES_FEES_LABEL_IMPORT, {}),
                description: (0, z.jsx)(Pc.EconomyPanel.SERVICE_IMPORT_EXPENSE_DESCRIPTION, {}),
                className: gte.detailLayout
            });
        X.add("game-ui/game/components/economy-panel/service-page/item-detail/service-item-detail.tsx", {
            get ServiceItemDetail() {
                return pte
            },
            set ServiceItemDetail(e) {
                pte = e
            }
        });
        let yte = {
            "budget-item": "budget-item_b_g item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            budgetItem: "budget-item_b_g item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            label: "label_vC7",
            field: "field_s_O"
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/budget-item/budget-item.module.scss", {
            get classes() {
                return yte
            },
            set classes(e) {
                Object.assign(yte, e)
            }
        });
        const jte = yte;
        var Ste = ({
            identifier: e,
            label: t,
            value: n
        }) => {
            const {
                handleFocusChange: s,
                handleMouseEnter: i,
                handleMouseLeave: a
            } = mte(e);
            return (0, z.jsx)(Ah, {
                onFocusChange: s,
                children: (0, z.jsxs)(Ip, {
                    className: jte.budgetItem,
                    onMouseEnter: i,
                    onMouseLeave: a,
                    children: [(0, z.jsx)("div", {
                        className: jte.label,
                        children: t
                    }), (0, z.jsx)(L7, {
                        value: n,
                        className: jte.field
                    })]
                })
            })
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/budget-item/budget-item.tsx", {
            get BudgetItem() {
                return Ste
            },
            set BudgetItem(e) {
                Ste = e
            }
        });
        let Cte = {
            slider: "slider_Pjj slider_pUS",
            thumb: "thumb_skm"
        };
        X.add("game-ui/game/components/economy-panel/components/gradient-slider/gradient-slider.module.scss", {
            get classes() {
                return Cte
            },
            set classes(e) {
                Object.assign(Cte, e)
            }
        });
        const Nte = Cte;
        let wte = {
            "slider-item": "slider-item_pCt item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            sliderItem: "slider-item_pCt item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            gamepad: "gamepad_oWK",
            label: "label_IRx",
            value: "value_jjh",
            slider: "slider_TyY",
            "select-hint": "select-hint_oco",
            selectHint: "select-hint_oco"
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/slider-item/slider-item.module.scss", {
            get classes() {
                return wte
            },
            set classes(e) {
                Object.assign(wte, e)
            }
        });
        const Ote = wte;
        var Pte = ({
            identifier: e,
            label: t,
            value: n,
            min: s,
            max: i,
            gradient: a,
            locked: o,
            onValueChange: r
        }) => {
            const [l, c] = (0, Y.useState)(!1), [u, d] = (0, Y.useState)(!1), {
                handleFocusChange: m,
                handleMouseEnter: h,
                handleMouseLeave: g
            } = mte(e), p = OM(2);
            return (0, z.jsx)(Ah, {
                onFocusChange: m,
                children: (0, z.jsxs)(Ip, {
                    className: Ote.sliderItem,
                    onMouseEnter: h,
                    onMouseLeave: g,
                    onFocusChange: d,
                    children: [(0, z.jsx)(Pf, {
                        action: l ? "Back" : "Select",
                        active: u,
                        className: Ote.selectHint
                    }), (0, z.jsx)("div", {
                        className: Ote.label,
                        children: t
                    }), (0, z.jsx)("div", {
                        className: Ote.value,
                        children: (0, z.jsx)(Gc, {
                            value: n,
                            unit: Oc.Percentage
                        })
                    }), (0, z.jsx)(Np, {
                        onSelectedStateChanged: c,
                        children: (0, z.jsx)(HV, {
                            value: n,
                            start: s,
                            end: i,
                            gamepadStep: 2,
                            valueTransformer: p,
                            gradient: a,
                            theme: Nte,
                            className: Ote.slider,
                            disabled: o,
                            onChange: r
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/slider-item/slider-item.tsx", {
            get SliderItem() {
                return Pte
            },
            set SliderItem(e) {
                Pte = e
            }
        });
        const Lte = {
            stops: [{
                offset: 0,
                color: "var(--negativeColor)"
            }, {
                offset: .5,
                color: "#bfac6f"
            }, {
                offset: 1,
                color: "var(--positiveColor)"
            }]
        };
        var Ate = ({
            service: e,
            value: t,
            locked: n
        }) => {
            const s = (0, Y.useCallback)((t => mS(e, t)), [e]);
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.economyPanelServicesBudget,
                children: (0, z.jsx)(Pte, {
                    identifier: ote,
                    label: (0, z.jsx)(Pc.EconomyPanel.SERVICES_TITLE_BUDGET, {}),
                    value: t,
                    min: 50,
                    max: 150,
                    gradient: Lte,
                    locked: n,
                    onValueChange: s
                })
            })
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/slider-item/budget-slider-item.tsx", {
            get BudgetSliderItem() {
                return Ate
            },
            set BudgetSliderItem(e) {
                Ate = e
            }
        });
        const Mte = {
            stops: [{
                offset: 0,
                color: "var(--positiveColor)"
            }, {
                offset: .5,
                color: "#bfac6f"
            }, {
                offset: 1,
                color: "var(--negativeColor)"
            }]
        };
        var Rte = ({
            item: e,
            locked: t
        }) => {
            const n = (0, Y.useCallback)((t => {
                    hS(e.resource, Pd(e.min, e.max, t / 200))
                }), [e.max, e.min, e.resource]),
                s = (0, Y.useMemo)((() => ({
                    type: ite.ServiceFee,
                    name: e.name
                })), [e.name]),
                i = 200 * (e.fee - e.min) / (e.max - e.min);
            return (0, z.jsx)(Pte, {
                identifier: s,
                label: (0, z.jsx)(Pc.EconomyPanel.SERVICES_RESOURCE_FEE_LABEL, {
                    hash: e.name
                }),
                value: i,
                min: 0,
                max: 200,
                gradient: Mte,
                locked: t,
                onValueChange: n
            })
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/slider-item/service-fee-slider-item.tsx", {
            get ServiceFeeSliderItem() {
                return Rte
            },
            set ServiceFeeSliderItem(e) {
                Rte = e
            }
        });
        let kte = {
            header: "header_hMN",
            title: "title_mu8",
            "reset-button": "reset-button_UEO button_eqb item-states_QjV",
            resetButton: "reset-button_UEO button_eqb item-states_QjV",
            scrollable: "scrollable_S7e",
            content: "content_SjM",
            adjustment: "adjustment_mUK",
            space: "space_nob",
            budget: "budget_EG1",
            "budget-title": "budget-title_Qqo",
            budgetTitle: "budget-title_Qqo",
            hint: "hint_LNW"
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/service-detail.module.scss", {
            get classes() {
                return kte
            },
            set classes(e) {
                Object.assign(kte, e)
            }
        });
        const Dte = kte;
        var Fte = ({
                service: e,
                className: t
            }) => {
                const n = (0, Y.useCallback)((() => gS(e)), [e]),
                    s = ll(dS, e),
                    i = null != s && (s.budgetAdjustable || s.fees.some((e => e.adjustable)));
                return (0, z.jsx)(c0, {
                    theme: l0,
                    className: Zu()(Dte.serviceDetail, s?.locked && l0.locked, t),
                    header: s && (0, z.jsxs)("div", {
                        className: Dte.header,
                        children: [(0, z.jsx)("div", {
                            className: Dte.title,
                            children: (0, z.jsx)(Pc.Services.NAME, {
                                hash: s.name
                            })
                        }), i ? (0, z.jsx)(Gp, {
                            className: Dte.resetButton,
                            disabled: !1,
                            onSelect: n,
                            children: (0, z.jsx)(Pc.EconomyPanel.LOAN_FORM_RESET, {})
                        }) : null]
                    }),
                    children: (0, z.jsx)(ff, {
                        className: Dte.scrollable,
                        children: (0, z.jsx)(tp, {
                            direction: Rg.Vertical,
                            onRefocus: ep,
                            children: s && (0, z.jsxs)("div", {
                                className: Dte.content,
                                children: [i ? (0, z.jsx)(z.Fragment, {
                                    children: (0, z.jsxs)("div", {
                                        className: Dte.adjustment,
                                        children: [s.budgetAdjustable && (0, z.jsx)(Ate, {
                                            service: s.entity,
                                            value: s.budgetPercentage,
                                            locked: s.locked
                                        }), s.fees.filter((e => e.adjustable)).map((e => (0, z.jsx)(Rte, {
                                            item: e,
                                            locked: s.locked
                                        }, e.resource)))]
                                    })
                                }) : null, (0, z.jsx)("div", {
                                    className: Dte.space
                                }), s.fees.length > 0 && (0, z.jsxs)("div", {
                                    className: Dte.budget,
                                    children: [(0, z.jsx)("div", {
                                        className: Dte.budgetTitle,
                                        children: (0, z.jsx)(Pc.EconomyPanel.SERVICES_TITLE_INCOME, {})
                                    }), (0, z.jsx)(Ute, {
                                        fees: s.fees
                                    })]
                                }), (0, z.jsxs)("div", {
                                    className: Dte.budget,
                                    children: [(0, z.jsx)("div", {
                                        className: Dte.budgetTitle,
                                        children: (0, z.jsx)(Pc.EconomyPanel.SERVICES_TITLE_EXPENSES, {})
                                    }), (0, z.jsx)(Ste, {
                                        identifier: cte,
                                        label: (0, z.jsx)(Pc.EconomyPanel.SERVICES_LABEL_UPKEEP, {}),
                                        value: s.upkeep
                                    }), (0, z.jsx)(Bte, {
                                        fees: s.fees
                                    })]
                                })]
                            })
                        })
                    })
                })
            },
            Ute = ({
                fees: e
            }) => {
                if (e.length > 0) {
                    const t = e.reduce(((e, t) => e + t.incomeInternal), 0),
                        n = e.reduce(((e, t) => e + t.incomeExports), 0);
                    return (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(Ste, {
                            identifier: rte,
                            label: (0, z.jsx)(Pc.EconomyPanel.SERVICES_FEES_LABEL_FEES, {}),
                            value: t
                        }), e.some((e => e.exportable || 0 !== e.incomeExports)) && (0, z.jsx)(Ste, {
                            identifier: lte,
                            label: (0, z.jsx)(Pc.EconomyPanel.SERVICES_FEES_LABEL_EXPORT, {}),
                            value: n
                        })]
                    })
                }
                return null
            },
            Bte = ({
                fees: e
            }) => {
                if (e.some((e => e.importable || 0 !== e.expenseImports))) {
                    const t = e.reduce(((e, t) => e + t.expenseImports), 0);
                    return (0, z.jsx)(z.Fragment, {
                        children: (0, z.jsx)(Ste, {
                            identifier: ute,
                            label: (0, z.jsx)(Pc.EconomyPanel.SERVICES_FEES_LABEL_IMPORT, {}),
                            value: t
                        })
                    })
                }
                return null
            };
        X.add("game-ui/game/components/economy-panel/service-page/service-detail/service-detail.tsx", {
            get ServiceDetail() {
                return Fte
            },
            set ServiceDetail(e) {
                Fte = e
            },
            get FeeRevenues() {
                return Ute
            },
            set FeeRevenues(e) {
                Ute = e
            },
            get FeeExpenses() {
                return Bte
            },
            set FeeExpenses(e) {
                Bte = e
            }
        });
        let Gte = {
            "service-list": "service-list_xm3",
            serviceList: "service-list_xm3",
            "list-section": "list-section_BJP",
            listSection: "list-section_BJP",
            scrollable: "scrollable_rmv",
            item: "item_JFN button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            locked: "locked_ZXT locked_H2O locked_dBl",
            icon: "icon_HoD icon_soN icon_Iwk",
            title: "title_sB9",
            field: "field_Edk",
            "value-column-divider": "value-column-divider_PmA",
            valueColumnDivider: "value-column-divider_PmA",
            "total-section": "total-section_VPy",
            totalSection: "total-section_VPy",
            "total-content": "total-content_gSd",
            totalContent: "total-content_gSd",
            "total-label": "total-label_mVx",
            totalLabel: "total-label_mVx",
            "total-column": "total-column_k3X",
            totalColumn: "total-column_k3X",
            "total-field": "total-field_rfq",
            totalField: "total-field_rfq"
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-list/service-list.module.scss", {
            get classes() {
                return Gte
            },
            set classes(e) {
                Object.assign(Gte, e)
            }
        });
        const Vte = Gte;
        var Hte = ({
            selectedService: e,
            className: t,
            onSelectService: n
        }) => {
            const s = sl(uS),
                i = vp(n),
                a = s.reduce(((e, t) => e + t.budget), 0);
            return (0, z.jsxs)("div", {
                className: Zu()(Vte.serviceList, t),
                children: [(0, z.jsx)(wx, {
                    uiTag: kx.value?.economyPanelServicesList,
                    children: (0, z.jsx)(c0, {
                        theme: l0,
                        className: Vte.listSection,
                        children: (0, z.jsx)(ff, {
                            className: Vte.scrollable,
                            children: (0, z.jsx)(Qg, {
                                focused: Dr(e),
                                direction: Rg.Vertical,
                                onChange: i,
                                children: s.map((t => (0, z.jsx)(Kte, {
                                    item: t,
                                    selected: Ur(t.entity, e),
                                    onSelect: n
                                }, Dr(t.entity))))
                            })
                        })
                    })
                }), (0, z.jsx)(c0, {
                    focusKey: Ig,
                    theme: l0,
                    className: Vte.totalSection,
                    children: (0, z.jsxs)("div", {
                        className: Vte.totalContent,
                        children: [(0, z.jsx)("div", {
                            className: Vte.totalLabel,
                            children: (0, z.jsx)(Pc.EconomyPanel.MONTHLY_BALANCE, {})
                        }), (0, z.jsx)("div", {
                            className: Vte.totalColumn,
                            children: (0, z.jsx)(L7, {
                                value: a,
                                importance: "primary",
                                className: Vte.totalField
                            })
                        })]
                    })
                })]
            })
        };
        const Kte = ({
            item: e,
            selected: t,
            onSelect: n
        }) => {
            const s = (0, Y.useCallback)((() => n(e.entity)), [e.entity, n]),
                i = (0, Y.useMemo)((() => ({
                    type: ite.Service,
                    entity: e.entity
                })), [e.entity]),
                {
                    handleFocusChange: a,
                    handleMouseEnter: o,
                    handleMouseLeave: r
                } = mte(i);
            return (0, z.jsx)(Ah, {
                onFocusChange: a,
                children: (0, z.jsxs)(Gp, {
                    disableHint: !0,
                    focusKey: Dr(e.entity),
                    selected: t,
                    className: Zu()(Vte.item, e.locked && Vte.locked),
                    onClick: s,
                    onMouseEnter: o,
                    onMouseLeave: r,
                    children: [(0, z.jsx)("img", {
                        src: e.icon,
                        className: Vte.icon
                    }), (0, z.jsx)("div", {
                        className: Vte.title,
                        children: (0, z.jsx)(Pc.Services.NAME, {
                            hash: e.name
                        })
                    }), (0, z.jsx)(L7, {
                        value: e.budget,
                        importance: "secondary",
                        className: Vte.field
                    })]
                })
            })
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-list/service-list.tsx", {
            get ServiceList() {
                return Hte
            },
            set ServiceList(e) {
                Hte = e
            }
        });
        let Wte = {
            "service-page": "service-page_a6r",
            servicePage: "service-page_a6r",
            "list-column": "list-column_PCc",
            listColumn: "list-column_PCc",
            "main-column": "main-column_WYi",
            mainColumn: "main-column_WYi",
            "info-column": "info-column_oLC",
            infoColumn: "info-column_oLC"
        };
        X.add("game-ui/game/components/economy-panel/service-page/service-page.module.scss", {
            get classes() {
                return Wte
            },
            set classes(e) {
                Object.assign(Wte, e)
            }
        });
        const zte = Wte;
        var Yte = () => {
            lg(kx.value?.economyPanelServicesPage);
            const [e, t] = (0, Y.useState)($te), n = Dm(), [s, i] = (0, Y.useState)(null), [a, o] = (0, Y.useState)(null), r = (0, Y.useMemo)((() => ({
                onFocusChange: (e, t) => {
                    i(t ? e : t => Kr(e, t, 2) ? null : t)
                },
                onMouseEnter: e => o(e),
                onMouseLeave: e => o((t => Kr(e, t, 2) ? null : t))
            })), []), l = n ? s : a;
            return (0, z.jsx)("div", {
                className: zte.servicePage,
                children: (0, z.jsx)(dte.Provider, {
                    value: r,
                    children: (0, z.jsxs)(tp, {
                        direction: Rg.Horizontal,
                        children: [(0, z.jsx)(Hte, {
                            selectedService: e,
                            className: zte.listColumn,
                            onSelectService: t
                        }), (0, z.jsx)(Fte, {
                            service: e,
                            className: zte.mainColumn
                        }), (0, z.jsx)(pte, {
                            service: e,
                            itemId: l,
                            className: zte.infoColumn
                        })]
                    })
                })
            })
        };

        function $te() {
            return zN(uS.value)?.entity ?? Lx
        }
        X.add("game-ui/game/components/economy-panel/service-page/service-page.tsx", {
            get ServicePage() {
                return Yte
            },
            set ServicePage(e) {
                Yte = e
            }
        });
        let qte = {
            colorMinus10: "#1e83aa",
            colorMinus0: "#4bc3f1",
            colorPlus0: "#8bdb46",
            colorPlus30: "#e95f4a",
            "tax-slider": "tax-slider_HNg",
            taxSlider: "tax-slider_HNg",
            rate: "rate_lAq",
            range: "range_EHE",
            "slider-column": "slider-column_XmW",
            sliderColumn: "slider-column_XmW",
            slider: "slider_lZg",
            "estimate-column": "estimate-column_DQB",
            estimateColumn: "estimate-column_DQB",
            "estimate-value": "estimate-value_grH",
            estimateValue: "estimate-value_grH"
        };
        X.add("game-ui/game/components/economy-panel/taxation-page/tax-slider.module.scss", {
            get classes() {
                return qte
            },
            set classes(e) {
                Object.assign(qte, e)
            }
        });
        const Xte = qte;
        var Qte = ({
            min: e,
            max: t,
            rate: n,
            income: s,
            range: i,
            primary: a,
            className: o,
            disabled: r,
            onValueChanged: l
        }) => {
            const c = (0, Y.useMemo)((() => function (e, t) {
                const n = qC(Xte.colorMinus10) ?? DC,
                    s = qC(Xte.colorMinus0) ?? DC,
                    i = qC(Xte.colorPlus0) ?? DC,
                    a = qC(Xte.colorPlus30) ?? DC;
                if (e < 0 && t <= 0) return {
                    stops: [{
                        offset: 0,
                        color: WC(ZC(s, n, Od(e / -10, 0, 1)))
                    }, {
                        offset: 1,
                        color: WC(ZC(s, n, Od(t / -10, 0, 1)))
                    }]
                };
                if (e < 0 && t > 0) {
                    const o = e / (e - t);
                    return {
                        stops: [{
                            offset: 0,
                            color: WC(ZC(s, n, Od(e / -10, 0, 1)))
                        }, {
                            offset: o,
                            color: WC(s)
                        }, {
                            offset: o,
                            color: WC(i)
                        }, {
                            offset: 1,
                            color: WC(ZC(i, a, Od(t / 30, 0, 1)))
                        }]
                    }
                }
                return {
                    stops: [{
                        offset: 0,
                        color: WC(ZC(i, a, Od(e / 30, 0, 1)))
                    }, {
                        offset: 1,
                        color: WC(ZC(i, a, Od(t / 30, 0, 1)))
                    }]
                }
            }(e, t)), [e, t]);
            return (0, z.jsxs)("div", {
                className: Zu()(Xte.taxSlider, a && Xte.primary, o),
                children: [(0, z.jsxs)("div", {
                    className: Xte.sliderColumn,
                    onClick: nx,
                    children: [(0, z.jsx)("div", {
                        className: Zu()(Xte.rate, null != i && i.max - i.min > .1 && Xte.range, r && "disabled"),
                        children: Zte(n, i)
                    }), (0, z.jsx)(HV, {
                        value: n,
                        start: e,
                        end: t,
                        gamepadStep: 1,
                        valueTransformer: wM,
                        theme: Nte,
                        className: Zu()(Xte.slider, r && "disabled"),
                        gradient: c,
                        onChange: l,
                        disabled: r
                    })]
                }), (0, z.jsx)("div", {
                    className: Xte.estimateColumn,
                    children: (0, z.jsx)(L7, {
                        value: s,
                        importance: a ? "secondary" : void 0,
                        className: Zu()(Xte.estimateValue, r && "disabled")
                    })
                })]
            })
        };

        function Zte(e, t) {
            return null == t ? (0, z.jsx)(Gc, {
                value: e,
                unit: Oc.PercentageSingleFraction
            }) : t.max - t.min > .1 ? (0, z.jsx)(au, {
                min: t.min,
                max: t.max,
                unit: Oc.PercentageSingleFraction
            }) : (0, z.jsx)(Gc, {
                value: t.min,
                unit: Oc.PercentageSingleFraction
            })
        }
        X.add("game-ui/game/components/economy-panel/taxation-page/tax-slider.tsx", {
            get TaxSlider() {
                return Qte
            },
            set TaxSlider(e) {
                Qte = e
            }
        });
        let Jte = {
            "taxation-item": "taxation-item_p0I item-hover_WK8 item-focused_FuT",
            taxationItem: "taxation-item_p0I item-hover_WK8 item-focused_FuT",
            icon: "icon_Eeh",
            title: "title_EA9",
            slider: "slider_rbN"
        };
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-item.module.scss", {
            get classes() {
                return Jte
            },
            set classes(e) {
                Object.assign(Jte, e)
            }
        });
        const ene = Jte;
        var tne = ({
            areaType: e,
            resource: t
        }) => {
            const n = ll(oO, t),
                s = ll(rO, t),
                i = ll(lO, t),
                a = (0, Y.useCallback)((e => dO(t.resource, t.area, e)), [t]);
            return (0, z.jsxs)(Ip, {
                className: ene.taxationItem,
                children: [(0, z.jsx)("img", {
                    className: ene.icon,
                    src: i.icon
                }), (0, z.jsx)("div", {
                    className: ene.title,
                    children: 1 !== e.index ? (0, z.jsx)(Pc.Resources.TITLE, {
                        hash: i.id
                    }) : (0, z.jsx)(Pc.EconomyPanel.TAXATION_RESIDENTIAL_SLIDER_JOBLEVEL, {
                        index: t.resource
                    })
                }), (0, z.jsx)(Qte, {
                    effect: 0,
                    rate: n,
                    min: e.resourceTaxRateMin,
                    max: e.resourceTaxRateMax,
                    income: s,
                    className: ene.slider,
                    onValueChanged: a
                })]
            })
        };
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-item.tsx", {
            get TaxationItem() {
                return tne
            },
            set TaxationItem(e) {
                tne = e
            }
        });
        let nne = {
            "taxation-group": "taxation-group_aQb",
            taxationGroup: "taxation-group_aQb",
            header: "header_cPd item-hover_WK8 item-focused_FuT",
            icon: "icon_vPX",
            "icon-disabled": "icon-disabled_lo2",
            iconDisabled: "icon-disabled_lo2",
            title: "title_WQ0",
            "toggle-button": "toggle-button_hTU",
            toggleButton: "toggle-button_hTU",
            "header-slider": "header-slider_wLI",
            headerSlider: "header-slider_wLI",
            content: "content_NUa",
            enter: "enter_C0R",
            "exit-active": "exit-active_CJ6",
            exitActive: "exit-active_CJ6",
            "enter-active": "enter-active_kty",
            enterActive: "enter-active_kty",
            exit: "exit_xDo",
            item: "item_YKG",
            hint: "hint_yGN",
            locked: "locked_RSM"
        };
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-group.module.scss", {
            get classes() {
                return nne
            },
            set classes(e) {
                Object.assign(nne, e)
            }
        });
        const sne = nne;
        var ine = ({
            areaType: e,
            focused: t,
            setFocusedGroup: n
        }) => {
            const [s, i] = (0, Y.useState)(!1), a = (0, Y.useCallback)((() => {
                i((e => !e)), lp(rp.expandPanel)
            }), []), o = (0, Y.useCallback)((() => n(e.id)), [e.id, n]), r = (0, Y.useCallback)((() => n(null)), [n]), l = ll(tO, e.index), c = ll(iO, e.index), u = ll(nO, e.index), d = ll(sO, e.index), m = (0, Y.useCallback)((t => uO(e.index, t)), [e]), h = ll(aO, e.index), g = h.length > 0 && !e.locked, p = MC("ZonesOffice");
            return (0, z.jsx)(Ug, {
                expanded: s,
                expandable: g,
                onAction: a,
                children: (0, z.jsx)("div", {
                    className: sne.taxationGroup,
                    onMouseEnter: o,
                    onMouseLeave: r,
                    children: (0, z.jsxs)(tp, {
                        onChange: o,
                        activation: qu.AnyChildren,
                        children: [(0, z.jsx)($2, {
                            locked: e.locked,
                            requirements: "Office" === e.id ? p.requirements : void 0,
                            children: (0, z.jsxs)(Ip, {
                                className: sne.header,
                                children: [(0, z.jsx)("img", {
                                    className: Zu()(sne.icon, e.locked && sne.iconDisabled),
                                    src: e.icon
                                }), (0, z.jsx)("div", {
                                    className: Zu()(sne.title, e.locked && "disabled"),
                                    children: (0, z.jsx)(Pc.EconomyPanel.TAX_AREA_TITLE, {
                                        hash: e.id
                                    })
                                }), (0, z.jsx)(Pf, {
                                    action: "Expand Group",
                                    active: !e.locked && t,
                                    className: sne.hint
                                }), g && (0, z.jsx)(sf, {
                                    disableHint: !0,
                                    tinted: !0,
                                    focusKey: Ig,
                                    src: s ? "Media/Glyphs/ThickStrokeArrowUp.svg" : "Media/Glyphs/ThickStrokeArrowDown.svg",
                                    theme: of ,
                                    className: sne.toggleButton,
                                    onSelect: a
                                }), e.locked && (0, z.jsx)(C$, {
                                    className: sne.locked
                                }), (0, z.jsx)(Qte, {
                                    primary: !0,
                                    effect: d,
                                    rate: l,
                                    min: e.taxRateMin,
                                    max: e.taxRateMax,
                                    income: u,
                                    range: c,
                                    className: sne.headerSlider,
                                    onValueChanged: m,
                                    disabled: e.locked
                                })]
                            })
                        }), g && (0, z.jsx)(ly, {
                            in: s,
                            children: (0, z.jsx)(ry, {
                                styles: sne,
                                children: (0, z.jsx)("div", {
                                    className: sne.content,
                                    children: h.map((t => (0, z.jsx)(tne, {
                                        areaType: e,
                                        resource: t
                                    }, t.resource)))
                                })
                            })
                        })]
                    })
                })
            })
        };
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-group.tsx", {
            get TaxationGroup() {
                return ine
            },
            set TaxationGroup(e) {
                ine = e
            }
        });
        let ane = {
            "taxation-page": "taxation-page_hmd",
            taxationPage: "taxation-page_hmd",
            "main-column": "main-column_JuD",
            mainColumn: "main-column_JuD",
            "info-column": "info-column_e7N",
            infoColumn: "info-column_e7N",
            "table-section": "table-section_D_X",
            tableSection: "table-section_D_X",
            "table-header": "table-header_qcq",
            tableHeader: "table-header_qcq",
            "header-cell": "header-cell_ori",
            headerCell: "header-cell_ori",
            table: "table_Gl9",
            scrollable: "scrollable_Xqt",
            "table-lines": "table-lines_Abv",
            tableLines: "table-lines_Abv",
            name: "name_DfR",
            rate: "rate_U86",
            estimate: "estimate_d79",
            "total-section": "total-section_IIZ",
            totalSection: "total-section_IIZ",
            "total-content": "total-content_a5i",
            totalContent: "total-content_a5i",
            "total-label": "total-label_hxK",
            totalLabel: "total-label_hxK",
            "total-column": "total-column_rXB",
            totalColumn: "total-column_rXB",
            "total-value": "total-value_hzh",
            totalValue: "total-value_hzh"
        };
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-page.module.scss", {
            get classes() {
                return ane
            },
            set classes(e) {
                Object.assign(ane, e)
            }
        });
        const one = ane;
        var rne = () => {
            const e = sl(eO),
                t = sl(Qw),
                [n, s] = (0, Y.useState)(YN(e, "id")),
                i = e.find((e => e.id === n));
            return og(kx.value?.economyPanelTaxationPage), (0, z.jsxs)("div", {
                className: one.taxationPage,
                children: [(0, z.jsxs)("div", {
                    className: one.mainColumn,
                    children: [(0, z.jsxs)(c0, {
                        header: (0, z.jsxs)("div", {
                            className: one.tableHeader,
                            children: [(0, z.jsx)(wx, {
                                uiTag: kx.value?.economyPanelTaxationType,
                                children: (0, z.jsx)("div", {
                                    className: Zu()(one.headerCell, one.name),
                                    children: (0, z.jsx)(Pc.EconomyPanel.TAX_AREA_COLUMN_TITLE, {})
                                })
                            }), (0, z.jsx)(wx, {
                                uiTag: kx.value?.economyPanelTaxationRate,
                                children: (0, z.jsx)("div", {
                                    className: Zu()(one.headerCell, one.rate),
                                    children: (0, z.jsx)(Pc.EconomyPanel.TAX_RATE_TITLE, {})
                                })
                            }), (0, z.jsx)(wx, {
                                uiTag: kx.value?.economyPanelTaxationEstimate,
                                children: (0, z.jsx)("div", {
                                    className: Zu()(one.headerCell, one.estimate),
                                    children: (0, z.jsx)(Pc.EconomyPanel.TAX_INCOME_ESTIMATE_TITLE, {})
                                })
                            })]
                        }),
                        theme: l0,
                        className: one.tableSection,
                        children: [(0, z.jsx)(ff, {
                            className: one.scrollable,
                            children: (0, z.jsx)(tp, {
                                children: e.map((e => (0, z.jsx)(ine, {
                                    focused: n === e.id,
                                    areaType: e,
                                    setFocusedGroup: s
                                }, e.id)))
                            })
                        }), (0, z.jsxs)("div", {
                            className: one.tableLines,
                            children: [(0, z.jsx)("div", {
                                className: one.name
                            }), (0, z.jsx)("div", {
                                className: one.rate
                            }), (0, z.jsx)("div", {
                                className: one.estimate
                            })]
                        })]
                    }), (0, z.jsx)(c0, {
                        focusKey: Ig,
                        theme: l0,
                        className: one.totalSection,
                        children: (0, z.jsxs)("div", {
                            className: one.totalContent,
                            children: [(0, z.jsx)("div", {
                                className: one.totalLabel,
                                children: (0, z.jsx)(Pc.EconomyPanel.TAX_INCOME_TOTAL_TITLE, {})
                            }), (0, z.jsx)("div", {
                                className: one.totalColumn,
                                children: (0, z.jsx)(L7, {
                                    value: t,
                                    importance: "primary",
                                    className: one.totalValue
                                })
                            })]
                        })
                    })]
                }), (0, z.jsx)(c0, {
                    focusKey: Ig,
                    theme: l0,
                    className: one.infoColumn,
                    children: i && (0, z.jsx)($9, {
                        icon: i.icon,
                        title: (0, z.jsx)(Pc.EconomyPanel.TAX_AREA_TITLE, {
                            hash: i.id
                        }),
                        description: (0, z.jsx)(Pc.EconomyPanel.TAX_AREA_DESCRIPTION, {
                            hash: i.id
                        })
                    })
                })]
            })
        };
        X.add("game-ui/game/components/economy-panel/taxation-page/taxation-page.tsx", {
            get TaxationPage() {
                return rne
            },
            set TaxationPage(e) {
                rne = e
            }
        });
        let lne = {
            "economy-panel": "economy-panel_e08",
            economyPanel: "economy-panel_e08"
        };
        X.add("game-ui/game/components/economy-panel/economy-panel.module.scss", {
            get classes() {
                return lne
            },
            set classes(e) {
                Object.assign(lne, e)
            }
        });
        const cne = lne;
        var une = ({
            selectedTab: e,
            onSelectTab: t,
            onClose: n
        }) => {
            const s = sl(cL),
                i = sl(PS),
                a = (0, Y.useMemo)((() => [{
                    tab: zb.Budget,
                    feature: "City Budget",
                    uiTag: kx.value?.economyPanelBudgetTab
                }, {
                    tab: zb.Loan,
                    feature: "Loan",
                    uiTag: kx.value?.economyPanelLoansTab
                }, {
                    tab: zb.Taxation,
                    feature: "Taxation",
                    uiTag: kx.value?.economyPanelTaxationTab
                }, {
                    tab: zb.Services,
                    feature: "Service Budgets",
                    uiTag: kx.value?.economyPanelServicesTab
                }, {
                    tab: zb.Production,
                    feature: "Production Panel",
                    uiTag: kx.value?.economyPanelProductionTab
                }]), []),
                o = (0, Y.useMemo)((() => a.filter((e => !s || e.tab !== zb.Loan))), [a, s]),
                r = (0, Y.useMemo)((() => ({
                    "Switch Tab": n => {
                        if (0 !== n) {
                            const s = o.findIndex((t => t.tab === e)),
                                i = hne(n, o, s);
                            i >= 0 && i < o.length && i !== s && (t(o[i].tab), lp(n < 0 ? rp.selectPreviousItem : rp.selectNextItem))
                        }
                    }
                })), [o, t, e]),
                l = (0, Y.useCallback)((() => {
                    n(), i && BS(!0)
                }), [n, i]);
            return (0, z.jsx)(YT, {
                header: (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(QT, {
                        children: (0, z.jsx)(Pc.EconomyPanel.TITLE, {})
                    }), (0, z.jsx)(P$, {
                        children: o.map((n => (0, z.jsx)(dne, {
                            tab: n.tab,
                            onSelect: t,
                            selectedTab: e,
                            feature: n.feature,
                            uiTag: n.uiTag
                        }, n.tab)))
                    })]
                }),
                transitionSounds: cp,
                className: cne.economyPanel,
                onClose: l,
                children: (0, z.jsx)(Ag, {
                    actions: r,
                    children: mne(e)
                })
            })
        };
        const dne = ({
            tab: e,
            selectedTab: t,
            feature: n,
            uiTag: s,
            onSelect: i
        }) => {
            const a = MC(n);
            return (0, z.jsx)($2, {
                locked: a.locked,
                requirements: a.requirements,
                children: (0, z.jsx)(L$, {
                    id: e,
                    uiTag: s,
                    selectedId: t,
                    selectSound: rp.economy,
                    disabled: a.locked,
                    locked: a.locked,
                    onSelect: i,
                    children: (0, z.jsx)(Pc.EconomyPanel.TAB, {
                        hash: zb[e]
                    })
                })
            })
        };

        function mne(e) {
            switch (e) {
            case zb.Budget:
                return (0, z.jsx)(X7, {});
            case zb.Loan:
                return (0, z.jsx)(Tee, {});
            case zb.Taxation:
                return (0, z.jsx)(rne, {});
            case zb.Services:
                return (0, z.jsx)(Yte, {});
            case zb.Production:
                return (0, z.jsx)(ate, {});
            default:
                return null
            }
        }
        const hne = (e, t, n) => {
            const s = n < 0 ? e < 0 ? 0 : -1 : n;
            for (let n = 1; n <= t.length; n += 1) {
                const i = ((e < 0 ? s - n : s + n) + t.length) % t.length;
                if (!kC(t[i].feature)) return i
            }
            return -1
        };
        X.add("game-ui/game/components/economy-panel/economy-panel.tsx", {
            get EconomyPanel() {
                return une
            },
            set EconomyPanel(e) {
                une = e
            }
        });
        let gne = {
            "event-journal-entry": "event-journal-entry_swm",
            eventJournalEntry: "event-journal-entry_swm",
            header: "header_YTt",
            icon: "icon_TDT",
            title: "title_CGf",
            date: "date_euC",
            info: "info_fKt",
            entry: "entry_oxi"
        };
        X.add("game-ui/game/components/event-journal/event-journal-entry.module.scss", {
            get classes() {
                return gne
            },
            set classes(e) {
                Object.assign(gne, e)
            }
        });
        const pne = gne;
        var fne = ({
            event: e
        }) => {
            const t = ll(fS, e),
                n = sl(gO),
                s = jO(n, sl(fO)),
                i = (0, Y.useMemo)((() => CO(n, t.date)), [t.date, n]);
            let a = 0;
            return (0, z.jsxs)(Ip, {
                className: pne.eventJournalEntry,
                children: [(0, z.jsxs)("div", {
                    className: pne.header,
                    children: [(0, z.jsx)("img", {
                        className: pne.icon,
                        src: "" !== t.icon ? t.icon : "Media/Game/Icons/Calendar.svg"
                    }), (0, z.jsx)("div", {
                        className: pne.title,
                        children: (0, z.jsx)(Pc.EventJournal.EVENT_TITLE, {
                            hash: t.id
                        })
                    }), (0, z.jsx)("div", {
                        className: pne.date,
                        children: IO(s, i) ? (0, z.jsx)(wu, {
                            value: i
                        }) : (0, z.jsx)(Su, {
                            value: i
                        })
                    })]
                }), (0, z.jsxs)("div", {
                    className: pne.info,
                    children: [t.data?.map((e => (0, z.jsxs)("div", {
                        className: pne.entry,
                        children: [(0, z.jsx)(Pc.EventJournal.EFFECT, {
                            hash: e.type
                        }), " : ", e.value]
                    }, a++))), t.effects?.map((e => (0, z.jsxs)("div", {
                        className: pne.entry,
                        children: [(0, z.jsx)(Pc.EventJournal.EFFECT, {
                            hash: e.type
                        }), " : ", (0, z.jsx)(Gc, {
                            value: e.value,
                            unit: Oc.PercentageSingleFraction
                        })]
                    }, a++)))]
                })]
            })
        };
        X.add("game-ui/game/components/event-journal/event-journal-entry.tsx", {
            get EventJournalEntry() {
                return fne
            },
            set EventJournalEntry(e) {
                fne = e
            }
        });
        let xne = {
            "event-journal": "event-journal_yee",
            eventJournal: "event-journal_yee",
            scrollable: "scrollable_XJ4"
        };
        X.add("game-ui/game/components/event-journal/event-journal.module.scss", {
            get classes() {
                return xne
            },
            set classes(e) {
                Object.assign(xne, e)
            }
        });
        const vne = xne;
        var _ne = ({
            onClose: e
        }) => {
            og(kx.value?.eventJournalPanel);
            const t = sl(xS),
                n = (0, Y.useCallback)((() => {
                    _S(), e()
                }), [e]);
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.eventJournalPanel,
                children: (0, z.jsx)(YT, {
                    theme: j9,
                    transitionSounds: cp,
                    className: vne.eventJournal,
                    header: (0, z.jsx)(QT, {
                        children: (0, z.jsx)(Pc.EventJournal.PANEL_TITLE, {})
                    }),
                    onClose: n,
                    children: (0, z.jsx)(tp, {
                        children: t.length > 0 ? (0, z.jsx)(ff, {
                            className: vne.scrollable,
                            children: t.map((e => (0, z.jsx)(fne, {
                                event: e
                            }, Dr(e))))
                        }) : (0, z.jsx)(Z$, {
                            children: (0, z.jsx)(zf, {
                                children: (0, z.jsx)(Pc.EventJournal.OPENING_MESSAGE, {})
                            })
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/event-journal/event-journal.tsx", {
            get EventJournal() {
                return _ne
            },
            set EventJournal(e) {
                _ne = e
            }
        });
        let bne = {
            "placeholder-chirp-layout": "placeholder-chirp-layout_BAl",
            placeholderChirpLayout: "placeholder-chirp-layout_BAl",
            avatar: "avatar_Cbz",
            content: "content_fgv",
            header: "header_LnA",
            sender: "sender_mvI",
            date: "date_IvA",
            message: "message_F8E",
            word: "word_ift",
            footer: "footer_jEC",
            likes: "likes_Bzb"
        };
        X.add("game-ui/game/components/chirper/items/placeholder-chirp-layout.module.scss", {
            get classes() {
                return bne
            },
            set classes(e) {
                Object.assign(bne, e)
            }
        });
        const Tne = bne,
            Ene = [1, 4, 2, 7, 3, 3, 5, 4, 2, 3, 4, 2, 8, 5, 6, 3, 1, 2, 3];
        var Ine = ({
            length: e,
            className: t
        }) => (0, z.jsxs)("div", {
            className: Zu()(Tne.placeholderChirpLayout, t),
            children: [(0, z.jsx)("div", {
                className: Tne.avatar
            }), (0, z.jsxs)("div", {
                className: Tne.content,
                children: [(0, z.jsxs)("div", {
                    className: Tne.header,
                    children: [(0, z.jsx)("div", {
                        className: Tne.sender,
                        style: {
                            width: 25 + e % 4 * 6 + "%"
                        }
                    }), (0, z.jsx)("div", {
                        className: Tne.date
                    })]
                }), (0, z.jsx)("div", {
                    className: Tne.message,
                    children: Array.from(Array(e).keys()).map(((t, n) => (0, z.jsx)("div", {
                        className: Tne.word,
                        style: {
                            width: 5 * Ene[(t + e) % Ene.length] + "%"
                        }
                    }, n)))
                }), (0, z.jsx)("div", {
                    className: Tne.footer,
                    children: (0, z.jsx)("div", {
                        className: Tne.likes
                    })
                })]
            })]
        });
        X.add("game-ui/game/components/chirper/items/placeholder-chirp-layout.tsx", {
            get PlaceholderChirpLayout() {
                return Ine
            },
            set PlaceholderChirpLayout(e) {
                Ine = e
            }
        });
        let yne = {
            "life-path-detail": "life-path-detail_PR3",
            lifePathDetail: "life-path-detail_PR3",
            "info-column": "info-column_pYj",
            infoColumn: "info-column_pYj",
            avatar: "avatar_FMV",
            name: "name_I32",
            age: "age_Wdj",
            description: "description_svN",
            activity: "activity_QvV",
            status: "status_JZS",
            "status-item": "status-item_aJC",
            statusItem: "status-item_aJC",
            "status-icon": "status-icon_ftq",
            statusIcon: "status-icon_ftq",
            "status-label": "status-label_oIB",
            statusLabel: "status-label_oIB",
            "icon-label": "icon-label_HgD",
            iconLabel: "icon-label_HgD",
            link: "link_Zls",
            icon: "icon_b3A",
            label: "label_lMl",
            "feed-column": "feed-column_Idv",
            feedColumn: "feed-column_Idv",
            "back-button": "back-button_HMQ",
            backButton: "back-button_HMQ",
            hint: "hint_AvR",
            "back-hint": "back-hint_WQz",
            backHint: "back-hint_WQz"
        };
        X.add("game-ui/game/components/life-path/life-path-detail/life-path-detail.module.scss", {
            get classes() {
                return yne
            },
            set classes(e) {
                Object.assign(yne, e)
            }
        });
        const jne = yne,
            Sne = new Eg("FEED_KEY"),
            Cne = new Eg("RESIDENCE_KEY"),
            Nne = new Eg("WORKPLACE_KEY"),
            wne = {
                [TS.Chirp]: e => (0, z.jsx)(B9, {
                    focusKey: Dr(e.entity),
                    children: (0, z.jsx)(k9, {
                        chirp: e
                    })
                }),
                [TS.LogEntry]: e => {
                    const t = sl(gO);
                    return (0, z.jsx)(G9, {
                        focusKey: Dr(e.entity),
                        date: SO(t, e.date),
                        children: (0, z.jsx)(Tc, {
                            id: e.messageId
                        })
                    })
                }
            };
        var One = Y.forwardRef((function ({
            selectedCitizen: e,
            details: t,
            className: n,
            onBack: s
        }, i) {
            lg(kx.value?.lifePathPanelDetail);
            const a = sl(gO),
                o = wp(ll(yS, e)),
                r = Wu(t?.name ?? null),
                l = Wu(t?.workplaceName ?? null),
                c = Wu(t?.schoolName ?? null),
                u = Wu(t?.residenceName ?? null),
                d = (0, Y.useCallback)((() => t?.entity && Tw(t?.entity)), [t]),
                m = (0, Y.useCallback)((() => t?.residenceEntity && Tw(t?.residenceEntity)), [t]),
                h = (0, Y.useCallback)((() => t?.schoolEntity && Tw(t?.schoolEntity)), [t]),
                g = (0, Y.useCallback)((() => t?.workplaceEntity && Tw(t?.workplaceEntity)), [t]),
                p = PE(),
                f = (0, Y.useRef)(!0),
                x = vf(YN(o, "entity"));
            (0, Y.useEffect)((() => {
                f.current ? f.current = !1 : p.smoothScrollTo(0, 0)
            }), [x, p]);
            const [v, _] = (0, Y.useState)(!1), [b, T] = (0, Y.useState)(null);
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.lifePathPanelDetail,
                children: (0, z.jsxs)("div", {
                    ref: i,
                    className: Zu()(jne.lifePathDetail, n),
                    children: [(0, z.jsxs)(tp, {
                        direction: Rg.Horizontal,
                        initialFocused: Sne,
                        children: [(0, z.jsx)(Ep, {
                            onFocusChange: _,
                            className: jne.infoColumn,
                            children: (0, z.jsxs)(tp, {
                                direction: Rg.Vertical,
                                onChange: T,
                                children: [(0, z.jsx)(w9, {
                                    entity: t.entity,
                                    className: jne.avatar
                                }), (0, z.jsx)(Gp, {
                                    className: jne.name,
                                    onSelect: d,
                                    children: r
                                }), (0, z.jsx)("div", {
                                    className: jne.age,
                                    children: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_AGE, {
                                        hash: t.age
                                    })
                                }), (t.happiness || t.conditions.length > 0) && (0, z.jsxs)("div", {
                                    className: jne.status,
                                    children: [t.happiness && (0, z.jsx)(Pne, {
                                        icon: t.happiness.iconPath,
                                        label: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_HAPPINESS_TITLE, {
                                            hash: t.happiness.key
                                        })
                                    }), t.conditions.length > 0 ? t.conditions?.map((e => (0, z.jsx)(Pne, {
                                        icon: e.iconPath,
                                        label: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_CONDITION_TITLE, {
                                            hash: e.key
                                        })
                                    }, e.key))) : void 0]
                                }), (0, z.jsx)("div", {
                                    className: jne.activity,
                                    children: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_STATE, {
                                        hash: t.state
                                    })
                                }), (0, z.jsxs)("div", {
                                    className: jne.iconLabel,
                                    children: [(0, z.jsx)(ef, {
                                        className: jne.icon,
                                        src: "Media/Glyphs/Education.svg"
                                    }), (0, z.jsx)("div", {
                                        className: jne.label,
                                        children: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_EDUCATION, {
                                            hash: t.education
                                        })
                                    })]
                                }), (0, z.jsxs)("div", {
                                    className: jne.iconLabel,
                                    children: [(0, z.jsx)(ef, {
                                        className: jne.icon,
                                        src: "Student" === t?.occupation ? "Media/Glyphs/School.svg" : "Media/Glyphs/Workplace.svg"
                                    }), (0, z.jsx)("div", {
                                        className: jne.label,
                                        children: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_OCCUPATION, {
                                            hash: t.occupation
                                        })
                                    })]
                                }), ("Student" === t?.occupation || "Worker" === t?.occupation) && (0, z.jsxs)("div", {
                                    className: jne.iconLabel,
                                    children: [(0, z.jsx)(ef, {
                                        className: jne.icon,
                                        src: "Student" === t?.occupation ? "Media/Glyphs/School.svg" : "Media/Glyphs/Workplace.svg"
                                    }), (0, z.jsx)(Pf, {
                                        action: "Select",
                                        active: v && b === Nne,
                                        className: jne.hint
                                    }), (0, z.jsx)("div", {
                                        className: jne.label,
                                        children: (0, z.jsx)(Gp, {
                                            focusKey: Nne,
                                            disableHint: !0,
                                            className: jne.link,
                                            onSelect: "Student" === t?.occupation ? h : g,
                                            children: "Student" === t?.occupation ? c : l
                                        })
                                    })]
                                }), null != t.residenceEntity && (0, z.jsxs)("div", {
                                    className: jne.iconLabel,
                                    children: [(0, z.jsx)(ef, {
                                        className: jne.icon,
                                        src: "Media/Glyphs/Residence.svg"
                                    }), (0, z.jsx)(Pf, {
                                        action: "Select",
                                        active: v && b === Cne,
                                        className: jne.hint
                                    }), (0, z.jsx)("div", {
                                        className: jne.label,
                                        children: (0, z.jsx)(Gp, {
                                            focusKey: Cne,
                                            disableHint: !0,
                                            className: jne.link,
                                            onSelect: m,
                                            children: u
                                        })
                                    })]
                                }), (0, z.jsxs)("div", {
                                    className: jne.iconLabel,
                                    children: [(0, z.jsx)(ef, {
                                        className: jne.icon,
                                        src: "Media/Glyphs/Money.svg"
                                    }), (0, z.jsx)("div", {
                                        className: jne.label,
                                        children: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_WEALTH, {
                                            hash: t.wealth
                                        })
                                    })]
                                })]
                            })
                        }), (0, z.jsx)(wx, {
                            uiTag: kx.value?.lifePathPanelChirps,
                            children: (0, z.jsx)(ff, {
                                controller: p,
                                className: jne.feedColumn,
                                children: (0, z.jsxs)(tp, {
                                    focusKey: Sne,
                                    direction: Rg.Vertical,
                                    children: [(0, z.jsx)($A, {
                                        components: wne,
                                        data: o,
                                        keyProvider: zA
                                    }), !o.length && (0, z.jsxs)(z.Fragment, {
                                        children: [(0, z.jsx)(B9, {
                                            focusKey: Ig,
                                            style: {
                                                opacity: .75
                                            },
                                            children: (0, z.jsx)(Ine, {
                                                length: 7
                                            })
                                        }, "placeholder1"), (0, z.jsx)(B9, {
                                            focusKey: Ig,
                                            style: {
                                                opacity: .4
                                            },
                                            children: (0, z.jsx)(Ine, {
                                                length: 12
                                            })
                                        }, "placeholder2")]
                                    }), (0, z.jsx)(G9, {
                                        focusKey: Ig,
                                        date: jO(a, t.birthDay),
                                        children: (0, z.jsx)(Pc.LifePath.CITIZEN_BIRTH, {})
                                    }, "birth")]
                                })
                            })
                        })]
                    }), s && (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(Pf, {
                            action: "Back",
                            className: jne.backHint
                        }), (0, z.jsx)(wx, {
                            uiTag: kx.value?.lifePathPanelBackButton,
                            children: (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.LifePath.BACK_BUTTON_TOOLTIP, {}),
                                children: (0, z.jsx)(sf, {
                                    tinted: !0,
                                    focusKey: Ig,
                                    src: "Media/Glyphs/ArrowRight.svg",
                                    className: jne.backButton,
                                    onSelect: s
                                })
                            })
                        })]
                    })]
                })
            })
        }));
        const Pne = ({
            icon: e,
            label: t
        }) => (0, z.jsxs)("div", {
            className: jne.statusItem,
            children: [(0, z.jsx)("img", {
                className: jne.statusIcon,
                src: e
            }), (0, z.jsx)("div", {
                className: jne.statusLabel,
                children: t
            })]
        });
        X.add("game-ui/game/components/life-path/life-path-detail/life-path-detail.tsx", {
            get LifePathDetail() {
                return One
            },
            set LifePathDetail(e) {
                One = e
            }
        });
        let Lne = {
            scrollable: "scrollable_ANx",
            item: "item_nV8",
            avatar: "avatar_K_x",
            "main-column": "main-column_Dzj",
            mainColumn: "main-column_Dzj",
            name: "name_ALg",
            description: "description_UGS",
            action: "action_oRB",
            hint: "hint_RGc"
        };
        X.add("game-ui/game/components/life-path/life-path-list/life-path-list.module.scss", {
            get classes() {
                return Lne
            },
            set classes(e) {
                Object.assign(Lne, e)
            }
        });
        const Ane = Lne,
            Mne = {
                ...Bp,
                hover: null,
                focus: null
            };
        var Rne = Y.forwardRef((function ({
            selectedCitizen: e,
            className: t,
            onSelectCitizen: n
        }, s) {
            const i = sl(ES),
                a = sl(My),
                o = (0, Y.useRef)(),
                r = (0, Y.useCallback)((e => {
                    n(e), o.current = e.index
                }), [n]),
                l = (0, Y.useCallback)((e => {
                    let t = null;
                    if (o.current) {
                        for (const n of e.children.keys())
                            if (n === `lifepath-item:${o.current}`) {
                                t = n;
                                break
                            } o.current = void 0
                    }
                    return !t && e.children.size && (t = e.children.keys().next().value || null), t
                }), []);
            return (0, z.jsx)("div", {
                ref: s,
                className: t,
                children: i.length > 0 ? (0, z.jsx)(ff, {
                    className: Ane.scrollable,
                    children: (0, z.jsx)(tp, {
                        onRefocus: l,
                        children: i.map((t => (0, z.jsx)(kne, {
                            item: t,
                            selected: Ur(t.entity, e),
                            focused: Ur(t.entity, a),
                            onSelect: r
                        }, Dr(t.entity))))
                    })
                }) : (0, z.jsx)(Z$, {
                    children: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.LifePath.OPENING_MESSAGE, {})
                    })
                })
            })
        }));
        const kne = ({
            item: e,
            selected: t,
            focused: n,
            onSelect: s
        }) => {
            const i = Wu(e.name),
                a = (0, Y.useCallback)((() => {
                    lp(rp.selectItem), s(e.entity)
                }), [e.entity, s]),
                o = (0, Y.useCallback)((() => {
                    Ry(n ? Lx : e.entity)
                }), [n, e.entity]),
                r = (0, Y.useCallback)((() => CS(e.entity)), [e.entity]),
                l = (0, Y.useCallback)((() => {
                    lp(rp.hoverItem)
                }), []),
                c = (0, Y.useMemo)((() => ({
                    Select: a,
                    "Focus Citizen": n ? null : () => Ry(e.entity),
                    "Unfocus Citizen": n ? () => Ry(Lx) : null,
                    "Unfollow Citizen": () => {
                        lp(rp.removeItem), r()
                    }
                })), [n, a, r, e.entity]),
                [u, d] = (0, Y.useState)(!1);
            return (0, z.jsx)(Ag, {
                actions: c,
                children: (0, z.jsxs)(Ip, {
                    focusSound: rp.hoverItem,
                    focusKey: `lifepath-item:${e.entity.index}`,
                    className: Zu()(Ane.item, t && "selected"),
                    onClick: a,
                    onMouseEnter: l,
                    onFocusChange: d,
                    children: [(0, z.jsx)(Pf, {
                        action: "Select",
                        active: u,
                        className: Ane.hint
                    }), (0, z.jsx)(w9, {
                        entity: e.entity,
                        className: Ane.avatar
                    }), (0, z.jsxs)("div", {
                        className: Ane.mainColumn,
                        children: [(0, z.jsx)("div", {
                            className: Ane.name,
                            children: i
                        }), (0, z.jsx)("div", {
                            className: Ane.description,
                            children: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_AGE, {
                                hash: e.age
                            })
                        })]
                    }), (0, z.jsx)(Pf, {
                        action: "Focus Citizen",
                        active: u,
                        className: Ane.hint
                    }), (0, z.jsx)(Tg, {
                        tooltip: n ? (0, z.jsx)(Pc.SelectedInfoPanel.UNFOCUS, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.FOCUS, {}),
                        children: (0, z.jsx)(sf, {
                            disableHint: !0,
                            focusKey: Ig,
                            selected: n,
                            src: "Media/Game/Icons/MapMarker.svg",
                            sounds: Mne,
                            className: Ane.action,
                            onSelect: o,
                            onClick: nx
                        })
                    }), (0, z.jsx)(Pf, {
                        action: "Unfollow Citizen",
                        active: u,
                        className: Ane.hint
                    }), (0, z.jsx)(Tg, {
                        tooltip: (0, z.jsx)(Pc.LifePath.UNFOLLOW_BUTTON_TOOLTIP, {}),
                        children: (0, z.jsx)(sf, {
                            disableHint: !0,
                            tinted: !0,
                            focusKey: Ig,
                            src: "Media/Game/Icons/Unfollow.svg",
                            sounds: Mne,
                            selectSound: rp.removeItem,
                            className: Ane.action,
                            onSelect: r,
                            onClick: nx
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/life-path/life-path-list/life-path-list.tsx", {
            get LifePathList() {
                return Rne
            },
            set LifePathList(e) {
                Rne = e
            }
        });
        let Dne = {
            "life-path-panel": "life-path-panel_C3E",
            lifePathPanel: "life-path-panel_C3E",
            content: "content_auJ",
            "detail-visible": "detail-visible_Hku",
            detailVisible: "detail-visible_Hku",
            list: "list_V2f",
            detail: "detail_H5A",
            inactive: "inactive_OSs",
            enter: "enter_w5W",
            "exit-active": "exit-active_c34",
            exitActive: "exit-active_c34",
            "enter-active": "enter-active_Qj1",
            enterActive: "enter-active_Qj1",
            exit: "exit_hrP"
        };
        X.add("game-ui/game/components/life-path/life-path-panel/life-path-panel.module.scss", {
            get classes() {
                return Dne
            },
            set classes(e) {
                Object.assign(Dne, e)
            }
        });
        const Fne = Dne,
            Une = new Eg("LIST"),
            Bne = new Eg("DETAIL");
        var Gne = ({
            selectedCitizen: e,
            onClose: t
        }) => {
            lg(kx.value?.lifePathPanel);
            const n = ll(IS, e),
                s = null != n && !Ur(e, Lx);
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.lifePathPanel,
                disableBlinking: !0,
                children: (0, z.jsx)(YT, {
                    theme: j9,
                    header: (0, z.jsx)(QT, {
                        children: (0, z.jsx)(Pc.LifePath.LIST_PANEL_TITLE, {})
                    }),
                    transitionSounds: cp,
                    className: Fne.lifePathPanel,
                    contentClassName: Zu()(Fne.content, s && Fne.detailVisible),
                    onClose: t,
                    children: (0, z.jsx)(Dg, {
                        onAction: s ? eT : void 0,
                        children: (0, z.jsxs)(ap, {
                            focused: s ? Bne : Une,
                            children: [(0, z.jsx)(ip, {
                                focusKey: Bne,
                                children: (0, z.jsx)(ud, {
                                    children: n && (0, z.jsx)(mh, {
                                        styles: Fne,
                                        children: (0, z.jsx)(One, {
                                            selectedCitizen: e,
                                            details: n,
                                            className: Fne.detail,
                                            onBack: eT
                                        })
                                    }, "detail")
                                })
                            }), (0, z.jsx)(ip, {
                                focusKey: Une,
                                children: (0, z.jsx)(Rne, {
                                    selectedCitizen: e,
                                    className: Zu()(Fne.list, s && Fne.inactive),
                                    onSelectCitizen: tT
                                })
                            })]
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/life-path/life-path-panel/life-path-panel.tsx", {
            get LifePathPanel() {
                return Gne
            },
            set LifePathPanel(e) {
                Gne = e
            }
        });
        const Vne = "notification";
        var Hne, Kne = $r(Vne, "notifications");

        function Wne(e) {
            tl(Vne, "selectNotification", e)
        }! function (e) {
            e[e.None = 0] = "None", e[e.Progressing = 1] = "Progressing", e[e.Indeterminate = 2] = "Indeterminate", e[e.Complete = 3] = "Complete", e[e.Failure = 4] = "Failure", e[e.Warning = 5] = "Warning"
        }(Hne || (Hne = {})), X.add("game-ui/menu/data-binding/notification-bindings.ts", {
            get notifications() {
                return notifications
            },
            set notifications(e) {
                notifications = e
            },
            get selectNotification() {
                return Wne
            },
            set selectNotification(e) {
                Wne = e
            },
            get ProgressState() {
                return Hne
            },
            set ProgressState(e) {
                Hne = e
            }
        });
        let zne = {
            "progress-circle": "progress-circle_lIZ progress-circle_OLN",
            progressCircle: "progress-circle_lIZ progress-circle_OLN",
            progress: "progress_EdA progress_mlv",
            complete: "complete_yk6",
            failure: "failure_Zlz"
        };
        X.add("game-ui/menu/components/notifications-panel/notification-progress.module.scss", {
            get classes() {
                return zne
            },
            set classes(e) {
                Object.assign(zne, e)
            }
        });
        const Yne = zne;
        let $ne = {
            "notifications-panel": "notifications-panel_AtV",
            notificationsPanel: "notifications-panel_AtV",
            header: "header_JLb",
            wrapper: "wrapper_x8D",
            scrollable: "scrollable_aqz",
            "item-transition": "item-transition_kWi",
            itemTransition: "item-transition_kWi",
            enter: "enter_imo",
            "enter-active": "enter-active_KuO",
            enterActive: "enter-active_KuO",
            exit: "exit_Dv6",
            "exit-active": "exit-active_QeX",
            exitActive: "exit-active_QeX",
            item: "item_tYE",
            thumbnail: "thumbnail_MaF",
            "main-column": "main-column_j77",
            mainColumn: "main-column_j77",
            title: "title_wMV",
            text: "text__0z",
            "progress-container": "progress-container_Trw",
            progressContainer: "progress-container_Trw",
            "progress-circle": "progress-circle_MKN",
            progressCircle: "progress-circle_MKN",
            "progress-label": "progress-label_bgv",
            progressLabel: "progress-label_bgv",
            "progress-icon": "progress-icon_KDy",
            progressIcon: "progress-icon_KDy",
            "complete-icon": "complete-icon_CuU progress-icon_KDy",
            completeIcon: "complete-icon_CuU progress-icon_KDy",
            "failure-icon": "failure-icon_Pny progress-icon_KDy",
            failureIcon: "failure-icon_Pny progress-icon_KDy",
            "warning-icon": "warning-icon_dBU progress-icon_KDy",
            warningIcon: "warning-icon_dBU progress-icon_KDy"
        };
        X.add("game-ui/menu/components/notifications-panel/notifications-panel.module.scss", {
            get classes() {
                return $ne
            },
            set classes(e) {
                Object.assign($ne, e)
            }
        });
        const qne = $ne,
            Xne = AT({
                Checkmark: "Media/Glyphs/Checkmark.svg",
                Close: "Media/Glyphs/Close.svg",
                Warning: "Media/Glyphs/Warning.svg"
            });
        var Qne = ({
            className: e
        }) => {
            const t = sl(Kne);
            return (0, z.jsxs)("div", {
                className: Zu()(qne.notificationsPanel, e),
                children: [(0, z.jsx)("div", {
                    className: qne.header,
                    children: (0, z.jsx)(Pc.Menu.NOTIFICATIONS_TITLE, {})
                }), (0, z.jsx)("div", {
                    className: qne.wrapper,
                    children: (0, z.jsx)(ff, {
                        className: qne.scrollable,
                        children: (0, z.jsx)(tp, {
                            children: (0, z.jsx)(ud, {
                                children: t.map((e => (0, z.jsx)(Jne, {
                                    item: e
                                }, e.id)))
                            })
                        })
                    })
                })]
            })
        };
        const Zne = {
            tension: 30,
            friction: 10
        };
        var Jne = ({
            item: e
        }) => {
            const t = RW(Zne, e.progress, e.progress, !0),
                n = (0, Y.useCallback)((() => {
                    Wne(e.id)
                }), [e.id]);
            return (0, z.jsx)(ry, {
                styles: qne,
                children: (0, z.jsx)("div", {
                    className: qne.itemTransition,
                    children: (0, z.jsxs)(Gp, {
                        onSelect: n,
                        className: qne.item,
                        children: [e.thumbnail && (0, z.jsx)("div", {
                            className: qne.thumbnail,
                            children: (0, z.jsx)("div", {
                                style: {
                                    backgroundImage: `url('${e.thumbnail}')`
                                }
                            })
                        }), (0, z.jsxs)("div", {
                            className: qne.mainColumn,
                            children: [(0, z.jsx)("div", {
                                className: qne.title,
                                children: ese(e)
                            }), (0, z.jsx)("div", {
                                className: qne.text,
                                children: tse(e)
                            })]
                        }), e.progressState !== Hne.None && (0, z.jsxs)("div", {
                            className: qne.progressContainer,
                            children: [(0, z.jsx)(EF, {
                                progress: e.progressState !== Hne.Complete ? t : 100,
                                max: 100,
                                indeterminate: e.progressState === Hne.Indeterminate,
                                theme: Yne,
                                className: Zu()(qne.progressCircle, nse(e))
                            }), sse(e)]
                        })]
                    })
                })
            })
        };

        function ese(e) {
            return null != e.title ? (0, z.jsx)(gu, {
                value: e.title
            }) : void 0
        }

        function tse(e) {
            return null != e.text ? (0, z.jsx)(gu, {
                value: e.text
            }) : void 0
        }

        function nse(e) {
            switch (e.progressState) {
            case Hne.Complete:
                return Yne.complete;
            case Hne.Failure:
                return Yne.failure;
            default:
                return
            }
        }

        function sse(e) {
            switch (e.progressState) {
            case Hne.Complete:
                return (0, z.jsx)(ef, {
                    src: Xne.Checkmark,
                    className: qne.completeIcon
                });
            case Hne.Failure:
                return (0, z.jsx)(ef, {
                    src: Xne.Close,
                    className: qne.failureIcon
                });
            case Hne.Warning:
                return (0, z.jsx)(ef, {
                    src: Xne.Warning,
                    className: qne.warningIcon
                });
            case Hne.Indeterminate:
                return;
            default:
                return (0, z.jsx)("div", {
                    className: qne.progressLabel,
                    children: (0, z.jsx)(Gc, {
                        value: e.progress,
                        unit: Oc.Percentage
                    })
                })
            }
        }
        X.add("game-ui/menu/components/notifications-panel/notifications-panel.tsx", {
            get NotificationsPanel() {
                return Qne
            },
            set NotificationsPanel(e) {
                Qne = e
            },
            get NotificationItem() {
                return Jne
            },
            set NotificationItem(e) {
                Jne = e
            }
        });
        let ise = {
            "notifications-panel": "notifications-panel_LaL",
            notificationsPanel: "notifications-panel_LaL",
            content: "content_QBu",
            empty: "empty_KiN"
        };
        X.add("game-ui/game/components/notifications-panel/notifications-panel.module.scss", {
            get classes() {
                return ise
            },
            set classes(e) {
                Object.assign(ise, e)
            }
        });
        const ase = ise;
        var ose = ({
            className: e,
            onClose: t
        }) => {
            const n = sl(Kne);
            return (0, z.jsxs)(YT, {
                header: (0, z.jsx)(QT, {
                    children: (0, z.jsx)(Pc.Menu.NOTIFICATIONS_TITLE, {})
                }),
                transitionSounds: cp,
                className: Zu()(ase.notificationsPanel, e),
                onClose: t,
                children: [(0, z.jsx)(ff, {
                    className: ase.content,
                    children: (0, z.jsx)(tp, {
                        children: (0, z.jsx)(ud, {
                            children: n.map((e => (0, z.jsx)(Jne, {
                                item: e
                            }, e.id)))
                        })
                    })
                }), (0, z.jsx)(ly, {
                    in: !n.length,
                    children: (0, z.jsx)(mh, {
                        styles: P3,
                        children: (0, z.jsx)(Z$, {
                            className: ase.empty,
                            children: (0, z.jsx)(zf, {
                                children: (0, z.jsx)(Pc.Menu.NOTIFICATIONS_OPENING_MESSAGE, {})
                            })
                        })
                    })
                })]
            })
        };
        X.add("game-ui/game/components/notifications-panel/notifications-panel.tsx", {
            get NotificationsPanel() {
                return ose
            },
            set NotificationsPanel(e) {
                ose = e
            }
        });
        const rse = "achievements";
        var lse = $r(rse, "showAchievementsTab"),
            cse = $r(rse, "achievements");
        X.add("game-ui/game/data-binding/achievement-bindings.ts", {
            get showAchievementsTab() {
                return showAchievementsTab
            },
            set showAchievementsTab(e) {
                showAchievementsTab = e
            },
            get achievements() {
                return achievements
            },
            set achievements(e) {
                achievements = e
            }
        });
        let use = {
            "progress-bar": "progress-bar_VAk",
            progressBar: "progress-bar_VAk",
            "progress-bounds": "progress-bounds_aKD",
            progressBounds: "progress-bounds_aKD",
            progress: "progress_gG0",
            label: "label_D0Y",
            "progress-label": "progress-label_SHL",
            progressLabel: "progress-label_SHL"
        };
        X.add("game-ui/game/components/progression/progression-panel/shared-components/progress-bar/progress-bar.module.scss", {
            get classes() {
                return use
            },
            set classes(e) {
                Object.assign(use, e)
            }
        });
        const dse = use;
        let mse = {
            achievement: "achievement_BUQ item-states_QjV",
            content: "content_n2n",
            left: "left_tyE",
            right: "right_wLd",
            icon: "icon_fbN",
            disabled: "disabled_Jh2",
            locked: "locked_tfQ",
            label: "label_hdQ",
            "progress-bar": "progress-bar_MqT",
            progressBar: "progress-bar_MqT"
        };
        X.add("game-ui/game/components/progression/progression-panel/achievements-page/achievement.module.scss", {
            get classes() {
                return mse
            },
            set classes(e) {
                Object.assign(mse, e)
            }
        });
        const hse = mse;
        var gse = ({
            achievement: e,
            selected: t,
            onHover: n,
            onSelect: s
        }) => {
            const i = (0, Y.useCallback)((() => n(e)), [n, e]),
                a = (0, Y.useCallback)((() => lp(rp.hoverItem)), []),
                o = (0, Y.useCallback)((() => n(null)), [n]),
                r = (0, Y.useCallback)((t => {
                    t && (s(e), lp(rp.hoverItem))
                }), [e, s]),
                l = (0, Y.useCallback)((() => {
                    s(e), lp(rp.selectItem)
                }), [e, s]);
            return (0, z.jsx)(Ip, {
                onClick: l,
                onMouseOver: i,
                onMouseEnter: a,
                onMouseLeave: o,
                onFocusChange: r,
                className: Zu()(hse.achievement, t && "selected", e.locked && hse.locked),
                children: (0, z.jsxs)("div", {
                    className: hse.content,
                    children: [(0, z.jsxs)("div", {
                        className: hse.left,
                        children: [(0, z.jsx)("img", {
                            className: hse.icon,
                            src: e.imagePath
                        }), (0, z.jsx)("div", {
                            className: hse.label,
                            children: (0, z.jsx)(Pc.Achievements.TITLE, {
                                hash: e.localeKey
                            })
                        })]
                    }), (0, z.jsx)("div", {
                        className: hse.right,
                        children: e.isIncremental && (0, z.jsx)(Vee, {
                            theme: dse,
                            className: hse.progressBar,
                            progress: e.locked ? e.progress : e.maxProgress,
                            max: e.maxProgress,
                            children: (0, z.jsx)(cu, {
                                value: e.locked ? e.progress : e.maxProgress,
                                total: e.maxProgress,
                                unit: Oc.Integer
                            })
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/progression/progression-panel/achievements-page/achievement.tsx", {
            get Achievement() {
                return gse
            },
            set Achievement(e) {
                gse = e
            }
        });
        let pse = {
            "achievements-page": "achievements-page_jWM",
            achievementsPage: "achievements-page_jWM",
            "main-column": "main-column_tzh",
            mainColumn: "main-column_tzh",
            "info-column": "info-column_Ufp",
            infoColumn: "info-column_Ufp",
            scrollable: "scrollable_AyZ"
        };
        X.add("game-ui/game/components/progression/progression-panel/achievements-page/achievements-page.module.scss", {
            get classes() {
                return pse
            },
            set classes(e) {
                Object.assign(pse, e)
            }
        });
        const fse = pse;
        var xse = () => {
            const e = Dm(),
                t = sl(cse),
                [n, s] = (0, Y.useState)(t[0]),
                [i, a] = (0, Y.useState)(null),
                o = (0, Y.useCallback)((t => {
                    e || a(t)
                }), [e]);
            (0, Y.useEffect)((() => {
                e && a(null)
            }), [e]);
            const r = (0, Y.useMemo)((() => null != i ? i : n), [i, n]);
            return (0, z.jsxs)("div", {
                className: fse.achievementsPage,
                children: [(0, z.jsx)(c0, {
                    theme: l0,
                    className: fse.mainColumn,
                    children: (0, z.jsx)(ff, {
                        className: fse.scrollable,
                        children: (0, z.jsx)(tp, {
                            children: t.map((e => (0, z.jsx)(gse, {
                                selected: n.localeKey === e.localeKey,
                                achievement: e,
                                onSelect: s,
                                onHover: o
                            }, e.localeKey)))
                        })
                    })
                }), (0, z.jsx)(vse, {
                    achievement: r
                })]
            })
        };
        const vse = ({
            achievement: e
        }) => (0, z.jsx)(c0, {
            focusKey: Ig,
            theme: l0,
            className: fse.infoColumn,
            children: e && (0, z.jsx)($9, {
                icon: e.imagePath,
                title: (0, z.jsx)(Pc.Achievements.TITLE, {
                    hash: e.localeKey
                }),
                description: (0, z.jsx)(Pc.Achievements.DESCRIPTION, {
                    hash: e.localeKey
                })
            })
        });

        function _se() {
            return (0, Y.createContext)({
                onItemMouseOver: () => {},
                onItemMouseLeave: () => {},
                onItemSelect: () => {},
                clear: () => {}
            })
        }

        function bse(e) {
            const [t, n] = (0, Y.useState)(null), [s, i] = (0, Y.useState)(null), a = Dm();
            return [(0, Y.useMemo)((() => ({
                onItemMouseOver: e => n(e),
                onItemMouseLeave: t => n((n => null === n || e(t, n) ? null : n)),
                onItemSelect: e => i(e),
                clear: () => {
                    n(null), i(null)
                }
            })), [e]), s, a ? s : t ?? s]
        }

        function Tse(e, t) {
            const n = (0, Y.useContext)(e);
            return (0, Y.useMemo)((() => ({
                onMouseOver: () => n.onItemMouseOver(t),
                onMouseLeave: () => n.onItemMouseLeave(t),
                onClick: () => n.onItemSelect(t)
            })), [n, t])
        }
        X.add("game-ui/game/components/progression/progression-panel/achievements-page/achievements-page.tsx", {
            get AchievementsPage() {
                return xse
            },
            set AchievementsPage(e) {
                xse = e
            }
        }), X.add("game-ui/common/section/detail-layout/detail-context.ts", {
            get createDetailContext() {
                return _se
            },
            set createDetailContext(e) {
                _se = e
            },
            get useDetailContext() {
                return bse
            },
            set useDetailContext(e) {
                bse = e
            },
            get useElementCallbacks() {
                return Tse
            },
            set useElementCallbacks(e) {
                Tse = e
            }
        });
        var Ese = _se(),
            Ise = 0;

        function yse(e, t) {
            return "number" == typeof e || "number" == typeof t ? e === t : Ur(e, t)
        }

        function jse(e) {
            return "number" == typeof e ? e : Dr(e)
        }

        function Sse(e) {
            return e === Ise ? Ise : Fr(e)
        }
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-page-context.ts", {
            get MilestonePageContext() {
                return Ese
            },
            set MilestonePageContext(e) {
                Ese = e
            },
            get LOAN_LIMIT() {
                return Ise
            },
            set LOAN_LIMIT(e) {
                Ise = e
            },
            get idEquals() {
                return yse
            },
            set idEquals(e) {
                yse = e
            },
            get idKey() {
                return jse
            },
            set idKey(e) {
                jse = e
            },
            get parseIdKey() {
                return Sse
            },
            set parseIdKey(e) {
                Sse = e
            }
        });
        let Cse = {
            "milestone-detail-header": "milestone-detail-header_CQr",
            milestoneDetailHeader: "milestone-detail-header_CQr",
            "progress-bar": "progress-bar_jbW",
            progressBar: "progress-bar_jbW",
            subtitle: "subtitle_qwG",
            title: "title_oo7",
            rewards: "rewards_du7",
            "reward-field": "reward-field_SPU",
            rewardField: "reward-field_SPU"
        };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/milestone-detail-header/milestone-detail-header.module.scss", {
            get classes() {
                return Cse
            },
            set classes(e) {
                Object.assign(Cse, e)
            }
        });
        const Nse = Cse;
        var wse = ({
            details: e
        }) => (0, z.jsx)(Ep, {
            className: Nse.milestoneDetailHeader,
            style: {
                backgroundImage: e.image ? `url(${e.image})` : void 0,
                backgroundColor: WC(e.backgroundColor),
                color: WC(e.textColor)
            },
            children: (0, z.jsxs)(tp, {
                children: [(0, z.jsx)(Pse, {
                    xpRequirement: e.xpRequirement
                }), (0, z.jsx)("div", {
                    className: Nse.subtitle,
                    children: (0, z.jsx)(Pc.Progression.MILESTONE_DETAIL_SUBTITLE, {
                        INDEX: (0, z.jsx)(Gc, {
                            value: e.index,
                            unit: Oc.Integer
                        })
                    })
                }), (0, z.jsx)("div", {
                    className: Nse.title,
                    children: (0, z.jsx)(Pc.Progression.MILESTONE_NAME, {
                        index: e.index
                    })
                }), (0, z.jsxs)("div", {
                    className: Nse.rewards,
                    children: [e.reward > 0 && (0, z.jsx)(wx, {
                        uiTag: kx.value?.progressionPanelMilestoneRewardsMoney,
                        children: (0, z.jsx)(kY, {
                            title: (0, z.jsx)(Pc.Progression.TOOLTIP_TITLE_MONEY, {}),
                            description: (0, z.jsx)(Pc.Progression.TOOLTIP_DESCRIPTION_MONEY, {}),
                            children: (0, z.jsx)(T4, {
                                focusable: !0,
                                icon: "Media/Game/Icons/Money.svg",
                                className: Nse.rewardField,
                                children: (0, z.jsx)(Gc, {
                                    value: e.reward,
                                    unit: Oc.Money
                                })
                            })
                        })
                    }), e.devTreePoints > 0 && (0, z.jsx)(wx, {
                        uiTag: kx.value?.progressionPanelMilestoneRewardsDevPoints,
                        children: (0, z.jsx)(kY, {
                            title: (0, z.jsx)(Pc.Progression.TOOLTIP_TITLE_POINTS, {}),
                            description: (0, z.jsx)(Pc.Progression.TOOLTIP_DESCRIPTION_POINTS, {}),
                            children: (0, z.jsx)(T4, {
                                focusable: !0,
                                icon: "Media/Game/Icons/DevPoint.svg",
                                className: Nse.rewardField,
                                children: (0, z.jsx)(Gc, {
                                    value: e.devTreePoints,
                                    unit: Oc.Integer,
                                    signed: !0
                                })
                            })
                        })
                    }), e.mapTiles > 0 && (0, z.jsx)(wx, {
                        uiTag: kx.value?.progressionPanelMilestoneRewardsMapTiles,
                        children: (0, z.jsx)(kY, {
                            title: (0, z.jsx)(Pc.Progression.TOOLTIP_TITLE_EXPANSION_PERMITS, {}),
                            description: (0, z.jsx)(Pc.Progression.TOOLTIP_DESCRIPTION_EXPANSION_PERMITS, {}),
                            children: (0, z.jsx)(T4, {
                                focusable: !0,
                                icon: "Media/Game/Icons/ExpansionPermit.svg",
                                className: Nse.rewardField,
                                children: (0, z.jsx)(Gc, {
                                    value: e.mapTiles,
                                    unit: Oc.Integer,
                                    signed: !0
                                })
                            })
                        })
                    })]
                })]
            })
        });
        const Ose = {
                tension: 150,
                friction: 20
            },
            Pse = ({
                xpRequirement: e
            }) => {
                const t = sl(rN),
                    n = Od(t, 0, e),
                    s = Od(RW(Ose, t), 0, e),
                    [i, a] = (0, Y.useState)(!1);
                return (0, z.jsx)(wx, {
                    uiTag: kx.value?.progressionPanelMilestoneXP,
                    children: (0, z.jsx)(kY, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_XP, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_XP, {}),
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: a,
                            children: (0, z.jsx)(Ip, {
                                children: (0, z.jsx)(Vee, {
                                    progress: s,
                                    max: e,
                                    theme: dse,
                                    className: Zu()(Nse.progressBar, i && "focused"),
                                    children: (0, z.jsx)(cu, {
                                        value: n,
                                        total: e,
                                        unit: Oc.XP
                                    })
                                })
                            })
                        })
                    })
                })
            };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/milestone-detail-header/milestone-detail-header.tsx", {
            get MilestoneDetailHeader() {
                return wse
            },
            set MilestoneDetailHeader(e) {
                wse = e
            }
        });
        let Lse = {
            "unlock-item": "unlock-item_cKn item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT item-states_QjV",
            unlockItem: "unlock-item_cKn item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT item-states_QjV",
            icon: "icon_dN7",
            small: "small_cfi",
            title: "title_tnS"
        };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/unlock-item/unlock-item.module.scss", {
            get classes() {
                return Lse
            },
            set classes(e) {
                Object.assign(Lse, e)
            }
        });
        const Ase = Lse;
        var Mse = ({
            id: e,
            selected: t,
            small: n,
            icon: s,
            title: i,
            children: a
        }) => {
            const o = Tse(Ese, e);
            return (0, z.jsxs)(Gp, {
                disableHint: !0,
                focusKey: jse(e),
                selected: t,
                className: Zu()(Ase.unlockItem, n && Ase.small),
                ...o,
                children: [(0, z.jsx)("div", {
                    className: Ase.icon,
                    children: (0, z.jsx)("img", {
                        src: s
                    })
                }), (0, z.jsx)("div", {
                    className: Ase.title,
                    children: i
                }), a]
            })
        };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/unlock-item/unlock-item.tsx", {
            get UnlockItem() {
                return Mse
            },
            set UnlockItem(e) {
                Mse = e
            }
        });
        let Rse = {
            "milestone-detail": "milestone-detail_kYc",
            milestoneDetail: "milestone-detail_kYc",
            scrollable: "scrollable_uML",
            badge: "badge_Dd7",
            theme: "theme_CAs",
            "theme-icon": "theme-icon_c1W",
            themeIcon: "theme-icon_c1W"
        };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/milestone-detail.module.scss", {
            get classes() {
                return Rse
            },
            set classes(e) {
                Object.assign(Rse, e)
            }
        });
        const kse = Rse,
            Dse = new Eg("UnlocksList");
        var Fse = ({
            details: e,
            unlocks: t,
            selectedUnlock: n,
            className: s
        }) => {
            const {
                onItemSelect: i
            } = (0, Y.useContext)(Ese), a = xp(Sse, i);
            return (0, z.jsx)(c0, {
                theme: l0,
                className: Zu()(kse.milestoneDetail, s),
                children: (0, z.jsxs)(tp, {
                    initialFocused: Dse,
                    children: [null != e && (0, z.jsx)(wse, {
                        details: e
                    }), (0, z.jsx)(wx, {
                        uiTag: kx.value?.progressionPanelMilestoneRewards,
                        children: (0, z.jsx)(ff, {
                            className: kse.scrollable,
                            children: (0, z.jsxs)(Qg, {
                                focusKey: Dse,
                                focused: null != n ? jse(n) : null,
                                direction: Rg.Vertical,
                                onChange: a,
                                onRefocus: Zg,
                                children: [e && e.loanLimit > 0 && (0, z.jsx)(Bse, {
                                    loanLimit: e.loanLimit,
                                    selected: yse(n, Ise)
                                }), (0, z.jsx)($A, {
                                    components: Use,
                                    data: t,
                                    props: {
                                        selectedUnlock: n
                                    }
                                })]
                            })
                        })
                    })]
                })
            })
        };
        const Use = {
                [nN.Feature]: ({
                    selectedUnlock: e,
                    ...t
                }) => (0, z.jsx)(Gse, {
                    entity: t.entity,
                    icon: t.icon,
                    title: (0, z.jsx)(Pc.Assets.NAME, {
                        hash: t.name
                    }),
                    devTreeUnlocked: !1,
                    selected: yse(t.entity, e)
                }),
                [nN.Policy]: ({
                    selectedUnlock: e,
                    ...t
                }) => (0, z.jsx)(Gse, {
                    entity: t.entity,
                    icon: t.icon,
                    title: (0, z.jsx)(Pc.Policy.TITLE, {
                        hash: t.name
                    }),
                    devTreeUnlocked: !1,
                    selected: yse(t.entity, e)
                }),
                [nN.Service]: ({
                    selectedUnlock: e,
                    ...t
                }) => (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(Gse, {
                        entity: t.entity,
                        icon: t.icon,
                        title: (0, z.jsx)(Pc.Services.NAME, {
                            hash: t.name
                        }),
                        devTreeUnlocked: t.devTreeUnlocked ?? !1,
                        selected: yse(t.entity, e)
                    }), t.assets.map((t => (0, z.jsx)(Vse, {
                        item: t,
                        selected: yse(t.entity, e)
                    }, Dr(t.entity))))]
                }),
                [nN.Zone]: ({
                    selectedUnlock: e,
                    ...t
                }) => (0, z.jsx)(Vse, {
                    zone: !0,
                    item: t,
                    selected: yse(t.entity, e)
                })
            },
            Bse = ({
                loanLimit: e,
                selected: t
            }) => (0, z.jsx)(Mse, {
                id: Ise,
                icon: "Media/Game/Icons/Money.svg",
                title: (0, z.jsx)(Pc.Progression.LOAN_LIMIT, {}),
                selected: t,
                children: (0, z.jsx)("div", {
                    className: kse.badge,
                    children: (0, z.jsx)(Gc, {
                        value: e,
                        unit: Oc.Money,
                        signed: !0
                    })
                })
            }),
            Gse = ({
                entity: e,
                icon: t,
                title: n,
                devTreeUnlocked: s,
                selected: i
            }) => (0, z.jsx)(Mse, {
                id: e,
                selected: i,
                icon: t,
                title: n,
                children: s && (0, z.jsx)("div", {
                    className: kse.badge,
                    children: (0, z.jsx)(Pc.Progression.DEV_TREE_UNLOCK_BADGE, {})
                })
            }),
            Vse = ({
                item: e,
                selected: t,
                zone: n
            }) => {
                const s = sl(Mx).filter((t => e.themes.some((e => Ur(e, t.entity)))));
                return (0, z.jsx)(Mse, {
                    small: !n,
                    id: e.entity,
                    selected: t,
                    icon: e.icon,
                    title: (0, z.jsx)(Pc.Assets.NAME, {
                        hash: e.name
                    }),
                    children: s.map((e => (0, z.jsx)(Tg, {
                        tooltip: (0, z.jsx)(Pc.Assets.THEME, {
                            hash: e.name
                        }),
                        children: (0, z.jsx)("div", {
                            className: kse.theme,
                            children: (0, z.jsx)("img", {
                                src: e.icon,
                                className: kse.themeIcon
                            })
                        })
                    }, Dr(e.entity))))
                })
            };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-detail/milestone-detail.tsx", {
            get MilestoneDetail() {
                return Fse
            },
            set MilestoneDetail(e) {
                Fse = e
            }
        });
        let Hse = {
            "milestone-list": "milestone-list_tfM",
            milestoneList: "milestone-list_tfM",
            scrollable: "scrollable_UGT",
            item: "item_LnT item-states_QjV",
            "circle-layout": "circle-layout_Xmw",
            circleLayout: "circle-layout_Xmw",
            line: "line_jbQ",
            unlocked: "unlocked_gJI",
            first: "first_JVl",
            last: "last_gAq",
            circle: "circle_yGr",
            major: "major_RSg",
            title: "title_UOA"
        };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-list/milestone-list.module.scss", {
            get classes() {
                return Hse
            },
            set classes(e) {
                Object.assign(Hse, e)
            }
        });
        const Kse = Hse;
        var Wse = ({
            selectedMilestone: e,
            className: t,
            onSelectMilestone: n
        }) => {
            const s = vp(n),
                i = sl(uN),
                a = (0, Y.useRef)(null),
                o = PE();
            return (0, Y.useEffect)((() => {
                window.requestAnimationFrame((() => {
                    null != a.current && o.scrollIntoView(a.current)
                }))
            }), [o]), (0, z.jsx)(wx, {
                uiTag: kx.value?.progressionPanelMilestonesList,
                children: (0, z.jsx)(c0, {
                    theme: l0,
                    className: Zu()(Kse.milestoneList, t),
                    children: (0, z.jsx)(ff, {
                        className: Kse.scrollable,
                        controller: o,
                        children: (0, z.jsx)(Qg, {
                            focused: Dr(e),
                            direction: Rg.Vertical,
                            onChange: s,
                            children: i.map(((t, s) => (0, z.jsx)(zse, {
                                ref: i.length > s + 1 && !i[s + 1].locked ? a : void 0,
                                milestone: t,
                                nextUnlocked: i.length > s + 1 && !i[s + 1].locked,
                                selected: Ur(t.entity, e),
                                first: 0 === s,
                                last: i.length === s + 1,
                                onSelect: n
                            }, Dr(t.entity))))
                        })
                    })
                })
            })
        };
        const zse = Y.forwardRef((function ({
            milestone: e,
            nextUnlocked: t,
            selected: n,
            first: s,
            last: i,
            onSelect: a,
            ...o
        }, r) {
            const l = (0, Y.useCallback)((() => a(e.entity)), [e.entity, a]);
            return (0, z.jsxs)(Gp, {
                disableHint: !0,
                ref: r,
                focusKey: Dr(e.entity),
                selected: n,
                className: Zu()(Kse.item, e.major && Kse.major, !e.locked && Kse.unlocked),
                onClick: l,
                ...o,
                children: [(0, z.jsxs)("div", {
                    className: Kse.circleLayout,
                    children: [(0, z.jsx)("div", {
                        className: Zu()(Kse.line, !e.locked && Kse.unlocked, s && Kse.first)
                    }), (0, z.jsx)("div", {
                        className: Kse.circle
                    }), (0, z.jsx)("div", {
                        className: Zu()(Kse.line, t && Kse.unlocked, i && Kse.last)
                    })]
                }), (0, z.jsx)("div", {
                    className: Kse.title,
                    children: (0, z.jsx)(Pc.Progression.MILESTONE_NAME, {
                        index: e.index
                    })
                })]
            })
        }));
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-list/milestone-list.tsx", {
            get MilestoneList() {
                return Wse
            },
            set MilestoneList(e) {
                Wse = e
            }
        });
        var Yse = ({
            id: e,
            milestoneDetails: t,
            className: n
        }) => (0, z.jsx)(c0, {
            focusKey: Ig,
            theme: l0,
            className: n,
            children: $se(e, t)
        });

        function $se(e, t) {
            return e === Ise ? (0, z.jsx)(Xse, {
                milestoneDetails: t
            }) : null != e ? (0, z.jsx)(qse, {
                entity: e
            }) : null
        }
        const qse = ({
                entity: e
            }) => {
                const t = ll(pN, e);
                return null != t ? (0, z.jsx)($9, {
                    icon: t.icon,
                    title: (0, z.jsx)(Tc, {
                        id: t.titleId
                    }),
                    description: (0, z.jsx)(Tc, {
                        id: t.descriptionId
                    }),
                    children: (0, z.jsx)(Q9, {
                        state: t.locked ? "Locked" : "Unlocked"
                    })
                }) : null
            },
            Xse = ({
                milestoneDetails: e
            }) => (0, z.jsx)($9, {
                icon: "Media/Game/Icons/Money.svg",
                title: (0, z.jsx)(Pc.Progression.LOAN_LIMIT, {}),
                description: (0, z.jsx)(Pc.EconomyPanel.LOAN_PAGE_DESCRIPTION, {}),
                children: (0, z.jsx)(Q9, {
                    state: e?.locked ? "Locked" : "Unlocked"
                })
            });
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/unlock-detail/unlock-detail.tsx", {
            get UnlockDetail() {
                return Yse
            },
            set UnlockDetail(e) {
                Yse = e
            }
        });
        let Qse = {
            "milestone-page": "milestone-page_dL2",
            milestonePage: "milestone-page_dL2",
            "milestone-list": "milestone-list_C7c",
            milestoneList: "milestone-list_C7c",
            "milestone-detail": "milestone-detail_zdr",
            milestoneDetail: "milestone-detail_zdr",
            "unlock-detail": "unlock-detail_LWQ",
            unlockDetail: "unlock-detail_LWQ"
        };
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-page.module.scss", {
            get classes() {
                return Qse
            },
            set classes(e) {
                Object.assign(Qse, e)
            }
        });
        const Zse = Qse;
        var Jse = () => {
            lg(kx.value?.progressionPanelMilestonesPage);
            const [e, t] = (0, Y.useState)(eie), [n, s, i] = bse(yse), a = ll(hN, e), o = ll(gN, e), r = (0, Y.useCallback)((e => {
                t(e), n.clear()
            }), [n]);
            return (0, z.jsxs)("div", {
                className: Zse.milestonePage,
                children: [(0, z.jsxs)(tp, {
                    direction: Rg.Horizontal,
                    children: [(0, z.jsx)(Wse, {
                        selectedMilestone: e,
                        onSelectMilestone: r,
                        className: Zse.milestoneList
                    }), (0, z.jsx)(Ese.Provider, {
                        value: n,
                        children: (0, z.jsx)(Fse, {
                            details: a,
                            unlocks: o,
                            selectedUnlock: s,
                            className: Zse.milestoneDetail
                        }, Dr(e))
                    })]
                }), (0, z.jsx)(Yse, {
                    id: i,
                    milestoneDetails: a,
                    className: Zse.unlockDetail
                })]
            })
        };

        function eie() {
            const e = uN.value;
            if (0 === e.length) return Lx;
            const t = e.findIndex((e => e.locked));
            return e[t > 1 ? t - 1 : -1 === t ? e.length - 1 : 0].entity
        }
        X.add("game-ui/game/components/progression/progression-panel/milestone-page/milestone-page.tsx", {
            get MilestonePage() {
                return Jse
            },
            set MilestonePage(e) {
                Jse = e
            }
        });
        let tie = {
            "dev-tree-node-detail": "dev-tree-node-detail_k9G",
            devTreeNodeDetail: "dev-tree-node-detail_k9G",
            content: "content_w8i",
            "detail-layout": "detail-layout_dX7",
            detailLayout: "detail-layout_dX7",
            button: "button_cM0",
            "gamepad-hint": "gamepad-hint_EXG",
            gamepadHint: "gamepad-hint_EXG",
            "button-label": "button-label_mXV",
            buttonLabel: "button-label_mXV",
            cost: "cost_DHr",
            "cost-dp-icon": "cost-dp-icon_C7u",
            costDpIcon: "cost-dp-icon_C7u",
            "unlock-hint": "unlock-hint_PFh",
            unlockHint: "unlock-hint_PFh",
            "points-display": "points-display_S2s",
            pointsDisplay: "points-display_S2s",
            "points-icon": "points-icon_f8_",
            pointsIcon: "points-icon_f8_",
            "points-value": "points-value_cTm",
            pointsValue: "points-value_cTm",
            "hint-icon": "hint-icon_CA0",
            hintIcon: "hint-icon_CA0",
            hint: "hint_ioT"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/dev-tree-node-detail/dev-tree-node-detail.module.scss", {
            get classes() {
                return tie
            },
            set classes(e) {
                Object.assign(tie, e)
            }
        });
        const nie = tie,
            sie = {
                hint: nie.hint,
                icon: nie.hintIcon
            };
        var iie = ({
            node: e,
            className: t
        }) => {
            const n = ll(wC, e),
                s = sl(jC),
                i = (0, Y.useCallback)((() => {
                    LC(e), kx.value?.progressionPanelDevelopmentUnlockNode && ag(kx.value?.progressionPanelDevelopmentUnlockNode)
                }), [e]),
                a = function (e, t) {
                    if (null === e) return null;
                    if (e.unlockable) return t < e.cost ? (0, z.jsx)(Pc.Progression.NODE_DEV_POINTS_REQUIREMENT, {}) : null;
                    if (e.requirementCount > 0) return (0, z.jsx)(Pc.Progression.NODE_PARENT_REQUIREMENT, {});
                    if (e.milestoneRequirement > 0) return (0, z.jsx)(Pc.Progression.NODE_MILESTONE_REQUIREMENT, {
                        INDEX: (0, z.jsx)(Gc, {
                            value: e.milestoneRequirement,
                            unit: Oc.Integer
                        })
                    })
                }(n, s);
            return (0, z.jsx)(c0, {
                focusKey: Ig,
                theme: l0,
                className: Zu()(nie.devTreeNodeDetail, t),
                children: (0, z.jsxs)("div", {
                    className: nie.content,
                    children: [null != n && (0, z.jsxs)($9, {
                        icon: n.icon,
                        title: (0, z.jsx)(Pc.Progression.NODE_NAME, {
                            hash: n.name
                        }),
                        description: (0, z.jsx)(Pc.Progression.NODE_DESCRIPTION, {
                            hash: n.name
                        }),
                        children: [(0, z.jsx)(Q9, {
                            state: n.locked ? "Locked" : "Unlocked"
                        }), n.locked && (0, z.jsxs)(z.Fragment, {
                            children: [n.cost > 0 && (0, z.jsx)(wx, {
                                uiTag: kx.value?.progressionPanelDevelopmentUnlockNode,
                                children: (0, z.jsxs)(Gp, {
                                    theme: LI,
                                    selectSound: rp.purchase,
                                    className: nie.button,
                                    disabled: !n.unlockable || n.cost > s,
                                    onSelect: i,
                                    children: [(0, z.jsx)(Pf, {
                                        action: "Purchase Dev Tree Node",
                                        active: !0 === n?.unlockable && s >= n?.cost,
                                        theme: sie
                                    }), (0, z.jsx)("div", {
                                        className: nie.buttonLabel,
                                        children: (0, z.jsx)(Pc.Progression.UNLOCK_NODE_BUTTON, {})
                                    }), (0, z.jsxs)("div", {
                                        className: nie.cost,
                                        children: [(0, z.jsx)(Gc, {
                                            value: n.cost,
                                            unit: Oc.Integer
                                        }), (0, z.jsx)("img", {
                                            src: "Media/Game/Icons/DevPoint.svg",
                                            className: nie.costDpIcon
                                        })]
                                    })]
                                })
                            }), null != a && (0, z.jsx)("div", {
                                className: nie.unlockHint,
                                children: a
                            })]
                        })]
                    }), (0, z.jsxs)("div", {
                        className: nie.pointsDisplay,
                        children: [(0, z.jsx)("img", {
                            src: "Media/Game/Icons/DevPoint.svg",
                            className: nie.pointsIcon
                        }), (0, z.jsx)("div", {
                            className: nie.pointsValue,
                            children: (0, z.jsx)(Pc.Progression.AVAILABLE_DEV_POINTS, {
                                VALUE: (0, z.jsx)(Gc, {
                                    value: s,
                                    unit: Oc.Integer
                                })
                            })
                        })]
                    })]
                })
            })
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/dev-tree-node-detail/dev-tree-node-detail.tsx", {
            get DevTreeNodeDetail() {
                return iie
            },
            set DevTreeNodeDetail(e) {
                iie = e
            }
        });
        let aie = {
            "service-detail-header": "service-detail-header_uCS",
            serviceDetailHeader: "service-detail-header_uCS",
            title: "title_XWg",
            "progress-bar": "progress-bar_PBl",
            progressBar: "progress-bar_PBl"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-detail-header.module.scss", {
            get classes() {
                return aie
            },
            set classes(e) {
                Object.assign(aie, e)
            }
        });
        const oie = aie;
        var rie = ({
            details: e
        }) => {
            const t = sl(iN);
            return (0, z.jsxs)("div", {
                className: oie.serviceDetailHeader,
                children: [(0, z.jsx)("div", {
                    className: oie.title,
                    children: (0, z.jsx)(Pc.Services.NAME, {
                        hash: e.name
                    })
                }), e.milestoneRequirement > t && (0, z.jsx)(lie, {
                    currentMilestone: t,
                    targetMilestone: e.milestoneRequirement
                })]
            })
        };
        const lie = ({
            currentMilestone: e,
            targetMilestone: t
        }) => (0, z.jsx)(Vee, {
            progress: e,
            max: t,
            theme: dse,
            className: oie.progressBar,
            children: (0, z.jsx)(Pc.Progression.MILESTONE_UNLOCK_REQUIREMENT, {
                INDEX: (0, z.jsx)(Gc, {
                    value: t,
                    unit: Oc.Integer
                }),
                NAME: (0, z.jsx)(Pc.Progression.MILESTONE_NAME, {
                    index: t
                })
            })
        });
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-detail-header.tsx", {
            get ServiceDetailHeader() {
                return rie
            },
            set ServiceDetailHeader(e) {
                rie = e
            }
        });
        let cie = {
            "service-dev-tree": "service-dev-tree_Azt",
            serviceDevTree: "service-dev-tree_Azt",
            canvas: "canvas_xTK",
            "node-layer": "node-layer_Qxl",
            nodeLayer: "node-layer_Qxl",
            node: "node_qXI",
            container: "container_Y6w",
            title: "title_iof",
            selected: "selected_tgO",
            "circle-outline": "circle-outline_wOz",
            circleOutline: "circle-outline_wOz",
            circle: "circle_wRS",
            unlockable: "unlockable_RZR",
            locked: "locked_g7f",
            "cost-container": "cost-container_RMQ",
            costContainer: "cost-container_RMQ",
            cost: "cost_x8o",
            "cost-dp-icon": "cost-dp-icon_sWc",
            costDpIcon: "cost-dp-icon_sWc",
            hint: "hint_gGk",
            hintIcon: "hintIcon_otz"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-dev-tree.module.scss", {
            get classes() {
                return cie
            },
            set classes(e) {
                Object.assign(cie, e)
            }
        });
        const uie = cie,
            die = {
                hint: uie.hint,
                icon: uie.hintIcon
            };
        var mie = ({
            service: e,
            selectedNode: t,
            locked: n,
            className: s,
            onHoverNode: i,
            onSelectNode: a
        }) => {
            const o = (0, Y.useRef)(null),
                r = Hd(hm(o) ?? Ad),
                l = Hm(),
                c = ll(NC, e),
                u = c.reduce(((e, t) => ({
                    x: Math.max(e.x, t.position.x + 1),
                    y: Math.max(e.y, t.position.y + 1)
                })), {
                    x: 5,
                    y: 0
                });
            (0, Y.useEffect)((() => {
                if (null == t || !c.some((e => Ur(e.entity, t)))) {
                    const e = c.reduce(((e, t) => null == e || t.position.x < e.position.x || t.position.x === e.position.x && t.position.y < e.position.y ? t : e), null);
                    null != e && a(e.entity)
                }
            }), [c, a, t]);
            const d = vp(a),
                m = r.x / u.x,
                h = 128 * l,
                g = h * u.y,
                p = .5 * (r.y - g);
            return (0, z.jsxs)("div", {
                ref: o,
                className: Zu()(uie.serviceDevTree, s),
                children: [(0, z.jsx)(hie, {
                    canvasWidth: r.x,
                    canvasHeight: r.y,
                    columnCount: u.x,
                    columnWidth: m,
                    rowHeight: h,
                    verticalOffset: p,
                    lineWidth: 4 * l,
                    nodeRadius: 31 * l,
                    locked: n,
                    nodes: c
                }), (0, z.jsx)("div", {
                    className: uie.nodeLayer,
                    children: (0, z.jsx)(Qg, {
                        focused: Dr(t),
                        onChange: d,
                        children: !Fd(r, Ad) && c.map((e => (0, z.jsx)(xie, {
                            node: e,
                            selected: Ur(t, e.entity),
                            style: {
                                top: p + e.position.y * h + "px",
                                left: m * e.position.x + "px",
                                width: m + "px",
                                height: h + "px"
                            },
                            onHover: i,
                            onSelect: a
                        }, Dr(e.entity))))
                    })
                })]
            })
        };
        const hie = ({
            canvasWidth: e,
            canvasHeight: t,
            columnWidth: n,
            rowHeight: s,
            verticalOffset: i,
            lineWidth: a,
            nodeRadius: o,
            columnCount: r,
            locked: l,
            nodes: c
        }) => {
            const [u, d] = (0, Y.useState)(null), m = (0, Y.useCallback)((e => d(e?.getContext("2d") ?? null)), []);
            return (0, Y.useEffect)((() => {
                if (!u) return;
                u.clearRect(0, 0, e, t), u.fillStyle = "#ffffff", u.globalAlpha = .05;
                for (let e = 1; e < r; e += 2) u.fillRect(e * n, 0, n, t);
                u.globalAlpha = 1, u.lineWidth = a;
                const l = c.sort(gie);
                for (const e of l) {
                    const t = (e.position.x + .5) * n,
                        a = i + (e.position.y + .5) * s,
                        r = e.requirements;
                    if (r.length > 0) {
                        const l = r.map((e => c.find((t => Ur(e, t.entity))))).filter((e => null != e)).sort(gie).reverse();
                        for (const r of l) {
                            if (Fd(r.position, e.position) || r.position.x > e.position.x) continue;
                            u.strokeStyle = pie(r, e);
                            const l = (r.position.x + .5) * n,
                                c = i + (r.position.y + .5) * s;
                            if (e.position.x > r.position.x) {
                                const n = l + o,
                                    s = t - o,
                                    i = fie(r, e),
                                    d = n + (s - n) * i,
                                    m = n + (s - n) * (1 - i),
                                    h = c,
                                    g = a;
                                u.beginPath(), u.moveTo(l + o, c), u.bezierCurveTo(d, h, m, g, s, a), u.stroke()
                            } else {
                                const n = Math.sign(e.position.y - r.position.y),
                                    s = c + n * o,
                                    i = a - n * o;
                                u.beginPath(), u.moveTo(l, s), u.lineTo(t, i), u.stroke()
                            }
                        }
                    } else if (0 === e.position.x) {
                        u.strokeStyle = pie(null, e);
                        const n = 0,
                            s = t - o;
                        u.beginPath(), u.moveTo(n, a), u.lineTo(s, a), u.stroke()
                    }
                }
            }), [u, t, e, c, r, n, i, s, a, o, l]), e > 0 && t > 0 ? (0, z.jsx)("canvas", {
                ref: m,
                width: e,
                height: t,
                className: uie.canvas
            }) : null
        };

        function gie(e, t) {
            return !e.locked && t.locked ? 1 : e.locked && !t.locked ? -1 : e.unlockable && !t.unlockable ? 1 : !e.unlockable && t.unlockable ? -1 : 0
        }

        function pie(e, t) {
            return t.locked ? (null != e ? !e.locked : t.unlockable) ? "#2378CD" : "#555" : "#8bdb46"
        }

        function fie(e, t) {
            return t.position.x - e.position.x <= 1 ? .7 : .4
        }
        const xie = ({
                node: e,
                selected: t,
                style: n,
                className: s,
                onHover: i,
                onSelect: a
            }) => {
                const [o, r] = (0, Y.useState)(!1), l = sl(jC), c = (0, Y.useCallback)((() => {
                    lp(rp.selectItem), a(e.entity)
                }), [e.entity, a]), u = vie(e, l), d = (0, Y.useMemo)((() => ({
                    "Purchase Dev Tree Node": u ? () => {
                        lp(rp.purchase), LC(e.entity)
                    } : null
                })), [e.entity, u]), m = (0, Y.useCallback)((() => lp(rp.hoverItem)), []), h = (0, Y.useCallback)((() => i(e.entity)), [e.entity, i]), g = (0, Y.useCallback)((() => i(Lx)), [i]), p = (0, Y.useMemo)((() => e.unlockable && e.cost > 0 && l >= e.cost ? kx.value?.progressionPanelDevelopmentUnlockableNode : kx.value?.progressionPanelDevelopmentNode), [l, e.cost, e.unlockable]);
                return (0, z.jsx)(Ag, {
                    actions: d,
                    children: (0, z.jsxs)(Ip, {
                        focusKey: Dr(e.entity),
                        focusSound: rp.hoverItem,
                        className: Zu()(s, uie.node, t && uie.selected, e.locked && (e.unlockable ? uie.unlockable : uie.locked)),
                        style: n,
                        onClick: c,
                        onMouseOver: h,
                        onMouseEnter: m,
                        onMouseLeave: g,
                        onFocusChange: r,
                        children: [(0, z.jsx)(Pf, {
                            action: "Purchase Dev Tree Node",
                            active: o && u,
                            theme: die
                        }), (0, z.jsxs)("div", {
                            className: uie.container,
                            children: [(0, z.jsx)("div", {
                                className: uie.circleOutline,
                                children: (0, z.jsx)(wx, {
                                    uiTag: p,
                                    children: (0, z.jsx)("div", {
                                        className: uie.circle,
                                        children: (0, z.jsx)("img", {
                                            src: e.icon
                                        })
                                    })
                                })
                            }), (0, z.jsx)("div", {
                                className: uie.title,
                                children: (0, z.jsx)(Pc.Progression.NODE_NAME, {
                                    hash: e.name
                                })
                            }), (0, z.jsx)("div", {
                                className: uie.costContainer,
                                children: e.locked && e.cost > 0 && (0, z.jsx)(kY, {
                                    title: (0, z.jsx)(Pc.Progression.TOOLTIP_TITLE_POINTS_COST, {}),
                                    description: (0, z.jsx)(Pc.Progression.TOOLTIP_DESCRIPTION_POINTS_COST, {}),
                                    children: (0, z.jsxs)("div", {
                                        className: uie.cost,
                                        children: [(0, z.jsx)(Gc, {
                                            value: e.cost,
                                            unit: Oc.Integer
                                        }), (0, z.jsx)("img", {
                                            src: "Media/Game/Icons/DevPoint.svg",
                                            className: uie.costDpIcon
                                        })]
                                    })
                                })
                            })]
                        })]
                    })
                })
            },
            vie = (e, t) => !(!e.locked || !e.unlockable || t < e.cost);
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-dev-tree.tsx", {
            get ServiceDevTree() {
                return mie
            },
            set ServiceDevTree(e) {
                mie = e
            }
        });
        let _ie = {
            "service-detail": "service-detail_Cba",
            serviceDetail: "service-detail_Cba",
            "dev-tree": "dev-tree_af6",
            devTree: "dev-tree_af6"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-detail.module.scss", {
            get classes() {
                return _ie
            },
            set classes(e) {
                Object.assign(_ie, e)
            }
        });
        const bie = _ie;
        var Tie = ({
            service: e,
            selectedNode: t,
            className: n,
            onHoverNode: s,
            onSelectNode: i
        }) => {
            const a = ll(CC, e),
                o = a?.locked ?? !1;
            return (0, z.jsx)(c0, {
                theme: l0,
                header: null != a && (0, z.jsx)(rie, {
                    details: a
                }),
                className: Zu()(bie.serviceDetail, o && l0.locked, n),
                children: (0, z.jsx)(mie, {
                    service: e,
                    selectedNode: t,
                    locked: o,
                    className: bie.devTree,
                    onHoverNode: s,
                    onSelectNode: i
                })
            })
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-detail/service-detail.tsx", {
            get ServiceDetail() {
                return Tie
            },
            set ServiceDetail(e) {
                Tie = e
            }
        });
        let Eie = {
            button: "button_Sxm button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "toggle-states": "toggle-states_q6D",
            toggleStates: "toggle-states_q6D",
            icon: "icon_FKY icon_soN icon_Iwk",
            locked: "locked_K2j locked_H2O locked_dBl"
        };
        X.add("game-ui/game/themes/panel-service-button.module.scss", {
            get classes() {
                return Eie
            },
            set classes(e) {
                Object.assign(Eie, e)
            }
        });
        const Iie = Eie;
        let yie = {
            "service-list": "service-list_RLT",
            serviceList: "service-list_RLT",
            lock: "lock_H9c"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-list/service-list.module.scss", {
            get classes() {
                return yie
            },
            set classes(e) {
                Object.assign(yie, e)
            }
        });
        const jie = yie;
        var Sie = ({
            selectedService: e,
            className: t,
            onSelectService: n
        }) => {
            const s = vp(n),
                i = sl(SC);
            return (0, z.jsx)(c0, {
                theme: l0,
                className: Zu()(jie.serviceList, t),
                children: (0, z.jsx)(Qg, {
                    focused: Dr(e),
                    direction: Rg.Vertical,
                    onChange: s,
                    onRefocus: Zg,
                    children: i.map(((t, s) => (0, z.jsx)(Cie, {
                        index: s,
                        service: t,
                        selected: Ur(t.entity, e),
                        onSelect: n
                    }, Dr(t.entity))))
                })
            })
        };
        const Cie = ({
            index: e,
            service: t,
            selected: n,
            onSelect: s
        }) => {
            const i = Hm(),
                a = (0, Y.useCallback)((() => s(t.entity)), [t.entity, s]),
                o = (0, Y.useMemo)((() => `${kx.value?.progressionPanelDevelopmentService}+${t.uiTag}`), [t.uiTag]);
            return (0, z.jsx)(wx, {
                uiTag: o,
                children: (0, z.jsx)($2, {
                    title: (0, z.jsx)(Pc.Services.NAME, {
                        hash: t.name
                    }),
                    description: (0, z.jsx)(Pc.Services.DESCRIPTION, {
                        hash: t.name
                    }),
                    locked: t.locked,
                    requirements: t.requirements,
                    children: (0, z.jsx)(sf, {
                        disableHint: !0,
                        focusKey: Dr(t.entity),
                        src: t.icon,
                        selected: n,
                        theme: Iie,
                        className: Zu()(t.locked && Iie.locked),
                        onClick: a,
                        children: t.locked && (0, z.jsx)(C$, {
                            className: jie.lock,
                            style: {
                                top: (48 * (e + 1) - 12) * i
                            }
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-list/service-list.tsx", {
            get ServiceList() {
                return Sie
            },
            set ServiceList(e) {
                Sie = e
            }
        });
        let Nie = {
            "service-page": "service-page_Rls",
            servicePage: "service-page_Rls",
            "list-column": "list-column_KaJ",
            listColumn: "list-column_KaJ",
            "main-column": "main-column_vAd",
            mainColumn: "main-column_vAd",
            "info-column": "info-column_Za4",
            infoColumn: "info-column_Za4"
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-page.module.scss", {
            get classes() {
                return Nie
            },
            set classes(e) {
                Object.assign(Nie, e)
            }
        });
        const wie = Nie;
        var Oie = () => {
            lg(kx.value?.progressionPanelDevelopmentPage);
            const e = sl(SC),
                t = sl(OC),
                n = Ur(t, Lx) ? e.length > 0 ? e[0].entity : Lx : t,
                s = sl(PC),
                [i, a] = (0, Y.useState)(Lx);
            return (0, z.jsx)(tp, {
                children: (0, z.jsxs)("div", {
                    className: wie.servicePage,
                    children: [(0, z.jsx)(Sie, {
                        selectedService: n,
                        onSelectService: OC.update,
                        className: wie.listColumn
                    }), (0, z.jsx)(Tie, {
                        service: n,
                        selectedNode: s,
                        onHoverNode: a,
                        onSelectNode: PC.update,
                        className: wie.mainColumn
                    }), (0, z.jsx)(iie, {
                        node: Ur(i, Lx) ? s : i,
                        className: wie.infoColumn
                    })]
                })
            })
        };
        X.add("game-ui/game/components/progression/progression-panel/service-page/service-page.tsx", {
            get ServicePage() {
                return Oie
            },
            set ServicePage(e) {
                Oie = e
            }
        });
        let Pie = {
            "progression-panel": "progression-panel_vIm",
            progressionPanel: "progression-panel_vIm"
        };
        X.add("game-ui/game/components/progression/progression-panel/progression-panel.module.scss", {
            get classes() {
                return Pie
            },
            set classes(e) {
                Object.assign(Pie, e)
            }
        });
        const Lie = Pie;
        var Aie = ({
            selectedTab: e,
            onSelectTab: t,
            onClose: n
        }) => {
            lg(kx.value?.progressionPanel);
            const s = sl(lse);
            return (0, z.jsx)(YT, {
                header: (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(QT, {
                        children: (0, z.jsx)(Pc.Progression.PANEL_TITLE, {})
                    }), (0, z.jsxs)(P$, {
                        children: [(0, z.jsx)(Mie, {
                            tab: Db.Development,
                            uiTag: kx.value?.progressionPanelDevelopmentTab,
                            selectedTab: e,
                            onSelect: t
                        }), (0, z.jsx)(Mie, {
                            tab: Db.Milestones,
                            uiTag: kx.value?.progressionPanelMilestonesTab,
                            selectedTab: e,
                            onSelect: t
                        }), s && (0, z.jsx)(Mie, {
                            tab: Db.Achievements,
                            selectedTab: e,
                            onSelect: t
                        })]
                    })]
                }),
                transitionSounds: cp,
                className: Lie.progressionPanel,
                onClose: n,
                children: (0, z.jsx)(O$, {
                    tabs: [Db.Development, Db.Milestones, ...s ? [Db.Achievements] : []],
                    selectedTab: e,
                    onSelect: t,
                    children: Rie(e)
                })
            })
        };
        const Mie = ({
            tab: e,
            uiTag: t,
            selectedTab: n,
            onSelect: s,
            className: i
        }) => {
            const a = sl(bE);
            return (0, z.jsx)(kY, {
                title: (0, z.jsx)(Pc.Progression.TOOLTIP_TITLE_TAB, {
                    hash: Db[e]
                }),
                description: (0, z.jsx)(Pc.Progression.TOOLTIP_DESCRIPTION_TAB, {
                    hash: Db[e]
                }),
                children: (0, z.jsx)(L$, {
                    id: e,
                    uiTag: t,
                    selectedId: n,
                    onSelect: s,
                    className: i,
                    children: (0, z.jsx)(Pc.Progression.TAB_TITLE, {
                        hash: e === Db.Achievements && 0 != (a & uE.PS) ? "Trophies" : Db[e]
                    })
                })
            })
        };

        function Rie(e) {
            switch (e) {
            case Db.Development:
                return (0, z.jsx)(Oie, {});
            case Db.Milestones:
                return (0, z.jsx)(Jse, {});
            case Db.Achievements:
                return (0, z.jsx)(xse, {});
            default:
                return null
            }
        }
        X.add("game-ui/game/components/progression/progression-panel/progression-panel.tsx", {
            get ProgressionPanel() {
                return Aie
            },
            set ProgressionPanel(e) {
                Aie = e
            }
        });
        const kie = {
                focusController: ed,
                inputController: Cg
            },
            Die = Y.createContext(kie),
            Fie = Y.createContext({
                attach: () => {},
                detach: () => {}
            });
        var Uie = ({
                children: e
            }) => {
                const [t, n] = (0, Y.useState)(kie), s = (0, Y.useMemo)((() => ({
                    attach: e => n(e),
                    detach: e => n((t => t === e ? kie : t))
                })), []);
                return (0, z.jsx)(Fie.Provider, {
                    value: s,
                    children: (0, z.jsx)(Die.Provider, {
                        value: t,
                        children: e
                    })
                })
            },
            Bie = ({
                children: e
            }) => {
                const t = (0, Y.useContext)(Fie),
                    n = (0, Y.useContext)(Ju),
                    s = (0, Y.useContext)(Ng);
                return (0, Y.useEffect)((() => {
                    const e = {
                        focusController: n,
                        inputController: s
                    };
                    return t.attach(e), () => t.detach(e)
                }), [t, s, n]), (0, z.jsx)(Ju.Provider, {
                    value: ed,
                    children: (0, z.jsx)(Ng.Provider, {
                        value: Cg,
                        children: e
                    })
                })
            },
            Gie = ({
                enabled: e,
                children: t
            }) => {
                const n = (0, Y.useContext)(Die),
                    s = (0, Y.useContext)(Ju),
                    i = (0, Y.useContext)(Ng);
                return (0, z.jsx)(Ju.Provider, {
                    value: e ? n.focusController : s,
                    children: (0, z.jsx)(Ng.Provider, {
                        value: e ? n.inputController : i,
                        children: t
                    })
                })
            };

        function Vie() {
            return vf(CO(sl(gO), sl(pO)))
        }

        function Hie() {
            return NO(sl(gO), sl(pO))
        }
        X.add("game-ui/game/components/radio/radio-context-override.tsx", {
            get RadioContextOverrideProvider() {
                return Uie
            },
            set RadioContextOverrideProvider(e) {
                Uie = e
            },
            get RadioContextRedirector() {
                return Bie
            },
            set RadioContextRedirector(e) {
                Bie = e
            },
            get RadioContextOverride() {
                return Gie
            },
            set RadioContextOverride(e) {
                Gie = e
            }
        }), X.add("game-ui/common/hooks/use-simulation-date-time.tsx", {
            get useSimulationDateTime() {
                return Vie
            },
            set useSimulationDateTime(e) {
                Vie = e
            },
            get useSimulationMinutesSinceMidnight() {
                return Hie
            },
            set useSimulationMinutesSinceMidnight(e) {
                Hie = e
            }
        });
        let Kie = {
            "progress-bar": "progress-bar_sYi progress-bar_xWR",
            progressBar: "progress-bar_sYi progress-bar_xWR",
            progress: "progress_y5v progress_JAQ"
        };
        X.add("game-ui/common/progress-bar/themes/light-progress-bar.module.scss", {
            get classes() {
                return Kie
            },
            set classes(e) {
                Object.assign(Kie, e)
            }
        });
        const Wie = Kie;
        let zie = {
            "station-detail": "station-detail_zWr",
            stationDetail: "station-detail_zWr",
            header: "header_gDJ",
            "station-name": "station-name_T0f",
            stationName: "station-name_T0f",
            "section-title": "section-title_lV4",
            sectionTitle: "section-title_lV4",
            list: "list_Kl3",
            "program-item": "program-item_KE_",
            programItem: "program-item_KE_",
            time: "time_A1a",
            column: "column_p_F",
            title: "title_nsV",
            description: "description_knq",
            progress: "progress_eLk"
        };
        X.add("game-ui/game/components/radio/radio-panel/station-detail/station-detail.module.scss", {
            get classes() {
                return zie
            },
            set classes(e) {
                Object.assign(zie, e)
            }
        });
        const Yie = zie,
            $ie = [];
        var qie = ({
            className: e
        }) => {
            const t = sl(wN),
                n = sl(PN).find((e => e.name === t)),
                s = n?.schedule ?? $ie;
            return (0, z.jsxs)("div", {
                className: Zu()(Yie.stationDetail, e),
                children: [(0, z.jsxs)("div", {
                    className: Yie.header,
                    children: [(0, z.jsx)("div", {
                        className: Yie.stationName,
                        children: n?.nameId ? (0, z.jsx)(Tc, {
                            id: n.nameId
                        }) : n?.name
                    }), (0, z.jsx)("div", {
                        className: Yie.sectionTitle,
                        children: (0, z.jsx)(Pc.Radio.PROGRAM_TITLE, {})
                    })]
                }), (0, z.jsx)(ff, {
                    className: Yie.list,
                    children: s.map(((e, t) => (0, z.jsx)(Xie, {
                        item: e
                    }, t)))
                })]
            })
        };
        const Xie = ({
                item: e
            }) => {
                const t = sl(LN);
                return (0, z.jsx)(kY, {
                    disabled: null == t,
                    title: t?.title,
                    description: t?.info,
                    children: (0, z.jsxs)("div", {
                        className: Yie.programItem,
                        children: [(0, z.jsx)("div", {
                            className: Yie.time,
                            children: (0, z.jsx)(wu, {
                                value: yO(e.startTime)
                            })
                        }), (0, z.jsxs)("div", {
                            className: Yie.column,
                            children: [(0, z.jsx)("div", {
                                className: Yie.title,
                                children: e.name
                            }), (0, z.jsx)("div", {
                                className: Yie.description,
                                children: e.description
                            }), e.active && (0, z.jsx)(Qie, {
                                startTime: e.startTime,
                                duration: e.duration
                            })]
                        })]
                    })
                })
            },
            Qie = ({
                startTime: e,
                duration: t
            }) => {
                const n = (Hie() - e + 1440) % 1440;
                return (0, z.jsx)(Vee, {
                    progress: n,
                    max: t,
                    theme: Wie,
                    className: Yie.progress
                })
            };
        X.add("game-ui/game/components/radio/radio-panel/station-detail/station-detail.tsx", {
            get StationDetail() {
                return qie
            },
            set StationDetail(e) {
                qie = e
            }
        });
        let Zie = {
            "stations-menu": "stations-menu_kAr",
            stationsMenu: "stations-menu_kAr",
            networks: "networks_SQ5",
            stations: "stations_mU1",
            "network-item": "network-item_tGo",
            networkItem: "network-item_tGo",
            "station-item": "station-item_cOt",
            stationItem: "station-item_cOt",
            icon: "icon_Yr0",
            column: "column_j5W",
            title: "title_Bsq",
            program: "program_xd2",
            progress: "progress_zBM",
            hint: "hint_kqJ",
            "hint-left": "hint-left_PV1",
            hintLeft: "hint-left_PV1",
            "hint-right": "hint-right_KvE",
            hintRight: "hint-right_KvE",
            "stations-hint": "stations-hint_x9S",
            stationsHint: "stations-hint_x9S"
        };
        X.add("game-ui/game/components/radio/radio-panel/stations-menu/stations-menu.module.scss", {
            get classes() {
                return Zie
            },
            set classes(e) {
                Object.assign(Zie, e)
            }
        });
        const Jie = Zie;
        var eae = ({
            className: e
        }) => {
            const t = sl(NN),
                n = sl(wN),
                s = sl(ON),
                i = sl(PN).filter((e => e.network === t));
            return (0, z.jsxs)("div", {
                className: Zu()(Jie.stationsMenu, e),
                children: [(0, z.jsx)(wx, {
                    uiTag: kx.value?.radioPanelNetworks,
                    children: (0, z.jsxs)("div", {
                        className: Jie.networks,
                        children: [(0, z.jsx)(Pf, {
                            action: "Switch Radio Network",
                            bindingIndex: 0,
                            className: Zu()(Jie.hint, Jie.hintLeft)
                        }), s.map((e => (0, z.jsx)(tae, {
                            item: e,
                            selected: e.name === t,
                            onSelect: KN
                        }, e.name))), (0, z.jsx)(Pf, {
                            action: "Switch Radio Network",
                            bindingIndex: 1,
                            className: Zu()(Jie.hint, Jie.hintRight)
                        })]
                    })
                }), (0, z.jsxs)("div", {
                    children: [(0, z.jsx)(Pf, {
                        action: "Switch Radio Station",
                        className: Jie.stationsHint
                    }), (0, z.jsx)(wx, {
                        uiTag: kx.value?.radioPanelStations,
                        children: (0, z.jsx)(ff, {
                            className: Jie.stations,
                            children: i.map((e => (0, z.jsx)(nae, {
                                item: e,
                                selected: e.name === n,
                                onSelect: WN
                            }, e.name)))
                        })
                    })]
                })]
            })
        };
        const tae = ({
                item: e,
                selected: t,
                onSelect: n
            }) => {
                const s = (0, Y.useCallback)((() => n(e.name)), [n, e.name]);
                return (0, z.jsx)(Tg, {
                    tooltip: (0, z.jsx)(DY, {
                        title: e.nameId ? (0, z.jsx)(Tc, {
                            id: e.nameId
                        }) : e.name,
                        description: e.descriptionId ? (0, z.jsx)(Tc, {
                            id: e.descriptionId
                        }) : e.description
                    }),
                    children: (0, z.jsx)(sf, {
                        disableHint: !0,
                        src: e.icon,
                        selected: t,
                        selectSound: t ? null : rp.selectRadioNetwork,
                        className: Jie.networkItem,
                        onSelect: t ? void 0 : s
                    })
                })
            },
            nae = ({
                item: e,
                selected: t,
                onSelect: n
            }) => {
                const s = (0, Y.useCallback)((() => n(e.name)), [n, e.name]),
                    i = Hie(),
                    a = (i - (e.currentProgram?.startTime ?? i) + 1440) % 1440,
                    o = e.currentProgram?.duration ?? 0;
                return (0, z.jsxs)(Gp, {
                    disableHint: !0,
                    selected: t,
                    selectSound: rp.selectRadioStation,
                    className: Jie.stationItem,
                    onSelect: t ? void 0 : s,
                    children: [(0, z.jsx)("img", {
                        src: e.icon,
                        className: Jie.icon
                    }), (0, z.jsxs)("div", {
                        className: Jie.column,
                        children: [(0, z.jsx)("div", {
                            className: Jie.title,
                            children: e.nameId ? (0, z.jsx)(Tc, {
                                id: e.nameId
                            }) : e.name
                        }), (0, z.jsx)("div", {
                            className: Jie.program,
                            children: e.currentProgram?.name
                        }), (0, z.jsx)(Vee, {
                            progress: a,
                            max: o,
                            theme: Wie,
                            className: Jie.progress
                        })]
                    })]
                })
            };
        X.add("game-ui/game/components/radio/radio-panel/stations-menu/stations-menu.tsx", {
            get StationsMenu() {
                return eae
            },
            set StationsMenu(e) {
                eae = e
            }
        });
        let sae = {
            "radio-panel": "radio-panel_rXp",
            radioPanel: "radio-panel_rXp",
            enter: "enter_TNo",
            "exit-active": "exit-active_hJq",
            exitActive: "exit-active_hJq",
            "enter-active": "enter-active_cuF",
            enterActive: "enter-active_cuF",
            exit: "exit_B88",
            content: "content_r9x",
            "stations-menu": "stations-menu_m2f",
            stationsMenu: "stations-menu_m2f",
            "station-detail": "station-detail_KRp",
            stationDetail: "station-detail_KRp"
        };
        X.add("game-ui/game/components/radio/radio-panel/radio-panel.module.scss", {
            get classes() {
                return sae
            },
            set classes(e) {
                Object.assign(sae, e)
            }
        });
        const iae = sae;
        var aae, oae = ({
            className: e,
            onClose: t
        }) => {
            lg(kx.value?.radioPanel);
            const n = sl(ON),
                s = sl(NN),
                i = sl(PN),
                a = (0, Y.useMemo)((() => i.filter((e => e.network === s))), [s, i]),
                o = sl(wN),
                r = (0, Y.useMemo)((() => ({
                    "Switch Radio Network": n.length >= 2 ? e => {
                        const t = n.findIndex((e => e.name === s)),
                            i = e < 0 ? QN(t, n.length, !0) : qN(t, n.length, !0);
                        null != i && i !== t && (KN(n[i].name), lp(rp.selectRadioNetwork))
                    } : null,
                    "Switch Radio Station": a.length >= 2 ? e => {
                        const t = a.findIndex((e => e.name === o)),
                            n = e < 0 ? qN(t, a.length, !1) : QN(t, a.length, !1);
                        null != n && n !== t && (WN(a[n].name), lp(rp.selectRadioStation))
                    } : null
                })), [n, s, o, a]);
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.radioPanel,
                children: (0, z.jsx)(YT, {
                    header: (0, z.jsx)(QT, {
                        children: (0, z.jsx)(Pc.Radio.PANEL_TITLE, {})
                    }),
                    theme: j9,
                    transitionSounds: cp,
                    className: Zu()(iae.radioPanel, e),
                    contentClassName: iae.content,
                    onClose: t,
                    children: (0, z.jsx)(Ag, {
                        actions: r,
                        children: (0, z.jsxs)(Bie, {
                            children: [(0, z.jsx)(eae, {
                                className: iae.stationsMenu
                            }), (0, z.jsx)(qie, {
                                className: iae.stationDetail
                            })]
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/radio/radio-panel/radio-panel.tsx", {
                get RadioPanel() {
                    return oae
                },
                set RadioPanel(e) {
                    oae = e
                }
            }),
            function (e) {
                e[e.HourMonth = 0] = "HourMonth", e[e.Date = 1] = "Date", e[e.Year = 2] = "Year"
            }(aae || (aae = {}));
        class rae extends na {
            static id = "simulationTime";
            static defaults = {
                timeSettings: {
                    daysPerYear: 12,
                    ticksPerDay: 1 << 17,
                    epochTicks: 0,
                    epochYear: 0
                },
                ticks: {
                    _scriptable: e => "timeFormat" !== e && "dateFormat" !== e,
                    timeFormat: e => JSON.stringify(["hhmm", e.hour, e.minute]),
                    dateFormat: e => JSON.stringify(["MMyy", e.month, e.year]),
                    maxTicksLimit: 11
                }
            };
            constructor(e) {
                super(e), this._startValue = 0, this._valueRange = 0, this._tickFormat = aae.HourMonth, this._majorTickInterval = 1, this._firstMajorTickValue = 0, this._tickInterval = 1, this._firstTickValue = 0
            }
            determineDataLimits() {
                const {
                    min: e,
                    max: t
                } = this.getMinMax(!0);
                this.min = isFinite(e) ? e : 0, this.max = isFinite(t) ? t : 0
            }
            beforeBuildTicks() {
                super.beforeBuildTicks();
                const e = this.options.ticks.maxTicksLimit,
                    t = this.options.timeSettings;
                let n = 0,
                    s = (this.max - this.min) / t.ticksPerDay * 24;
                if (this._tickFormat = aae.HourMonth, this._tickInterval = t.ticksPerDay / 24, this._majorTickInterval = t.ticksPerDay, s >= e && (s /= 3, this._tickInterval = t.ticksPerDay / 8), s >= e && (s /= 2, this._tickInterval = t.ticksPerDay / 4), s >= e && (s /= 2, this._tickInterval = t.ticksPerDay / 2), s >= e && (s /= 2, this._tickFormat = aae.Date, this._tickInterval = t.ticksPerDay), s >= e && (s /= 3, this._tickInterval = 3 * t.ticksPerDay), s >= e && (s /= 4, this._tickFormat = aae.Year, this._tickInterval = t.daysPerYear * t.ticksPerDay), s >= e) {
                    let i = 1;
                    do {
                        s /= 5, i *= 5, this._tickInterval *= 5, s >= e && (s /= 2, i *= 2, this._tickInterval *= 2)
                    } while (s >= e && i < 1e3);
                    n = (i - t.epochYear % i) % i * t.ticksPerDay * t.daysPerYear
                }
                const i = t.epochTicks - n,
                    a = this.min + i;
                this._firstMajorTickValue = Math.ceil(a / this._majorTickInterval) * this._majorTickInterval - i, this._firstTickValue = Math.ceil(a / this._tickInterval) * this._tickInterval - i
            }
            buildTicks() {
                const e = [],
                    t = this._tickInterval;
                for (let n = this._firstTickValue; n <= this.max; n += t) {
                    const t = Math.abs((n - this._firstMajorTickValue) % this._majorTickInterval / this._majorTickInterval) < .001;
                    e.push({
                        value: n,
                        major: t
                    })
                }
                return e
            }
            generateTickLabels(e) {
                let t, n, s;
                for (t = 0, n = e.length; t < n; t++) s = e[t], s.label = this.generateTickLabel(s.value, s.major)
            }
            generateTickLabel(e, t) {
                const n = CO(this.options.timeSettings, Math.ceil(e));
                return this._tickFormat === aae.HourMonth ? t ? [this.options.ticks.timeFormat(n), this.options.ticks.dateFormat(n)] : this.options.ticks.timeFormat(n) : this._tickFormat === aae.Date ? this.options.ticks.dateFormat(n) : n.year.toFixed(0)
            }
            configure() {
                super.configure(), this._startValue = this.min, this._valueRange = this.max - this.min
            }
            getPixelForValue(e) {
                return this.getPixelForDecimal((e - this._startValue) / this._valueRange)
            }
            getValueForPixel(e) {
                return this._startValue + this.getDecimalForPixel(e) * this._valueRange
            }
        }

        function lae() {
            Pa.register(rae)
        }
        X.add("game-ui/common/charts/simulation-time-scale.ts", {
            get registerSimulationTimeScale() {
                return lae
            },
            set registerSimulationTimeScale(e) {
                lae = e
            }
        });
        let cae = {
            chartFontColor: "rgba(255, 255, 255, 0.6)",
            chartLineColor: "rgba(255, 255, 255, 0.1)",
            content: "content_nkU",
            legend: "legend_nMX",
            "legend-item": "legend-item_all",
            legendItem: "legend-item_all",
            graph: "graph_zE6",
            "time-scale": "time-scale_ShR",
            timeScale: "time-scale_ShR",
            "time-scale-label": "time-scale-label_VSV",
            timeScaleLabel: "time-scale-label_VSV",
            "time-scale-field": "time-scale-field_lEQ",
            timeScaleField: "time-scale-field_lEQ",
            "time-scale-title": "time-scale-title_Ow0",
            timeScaleTitle: "time-scale-title_Ow0",
            "action-icon": "action-icon_T6_",
            actionIcon: "action-icon_T6_",
            slider: "slider_mN3"
        };
        X.add("game-ui/game/components/statistics-panel/graph/statistics-graph.module.scss", {
            get classes() {
                return cae
            },
            set classes(e) {
                Object.assign(cae, e)
            }
        });
        const uae = cae;
        lae();
        var dae = ({
            data: e,
            selectedStatistics: t,
            timeScale: n,
            stepCount: s,
            onSetTimeScale: i,
            className: a
        }) => {
            const o = Kc(Oc.Money),
                r = Kc(Oc.Integer),
                l = sl(kw),
                c = function (e, t = !0, n) {
                    const s = Ou(),
                        i = Cu(),
                        a = sl(Lw),
                        o = sl(pO),
                        r = sl(gO),
                        l = sl(Ml),
                        c = sl(Hw),
                        u = o - r.ticksPerDay / c * a,
                        d = o + r.ticksPerDay / 1440 + 1;
                    return (0, Y.useMemo)((() => {
                        const a = {
                            layout: {
                                padding: {
                                    top: 0,
                                    right: 50,
                                    bottom: 0,
                                    left: 25
                                }
                            },
                            elements: {
                                line: {
                                    fill: t,
                                    borderWidth: 3,
                                    tension: 0
                                },
                                point: {
                                    radius: 0
                                }
                            },
                            scales: {
                                x: {
                                    type: "simulationTime",
                                    min: u,
                                    max: d,
                                    grid: {
                                        color: uae.chartLineColor,
                                        lineWidth: 1
                                    },
                                    border: {
                                        color: uae.chartLineColor,
                                        width: 1
                                    },
                                    timeSettings: r,
                                    ticks: {
                                        maxTicksLimit: 11,
                                        font: {
                                            size: mae * l
                                        },
                                        color: uae.chartFontColor,
                                        padding: hae,
                                        timeFormat: s,
                                        dateFormat: i
                                    }
                                },
                                y: {
                                    beginAtZero: !0,
                                    max: n,
                                    grid: {
                                        color: uae.chartLineColor,
                                        lineWidth: 1
                                    },
                                    border: {
                                        color: uae.chartLineColor,
                                        width: 1
                                    },
                                    ticks: {
                                        font: {
                                            size: mae * l
                                        },
                                        maxTicksLimit: 10,
                                        color: uae.chartFontColor,
                                        padding: hae,
                                        autoSkip: !1,
                                        callback: function (t) {
                                            return e ? e(t) : t
                                        }
                                    },
                                    stacked: t
                                }
                            }
                        };
                        return a
                    }), [t, u, d, r, l, s, i, n, e])
                }(t.length > 0 && 1 === t[0].unitType ? o : r, l, t.length > 0 && 2 === t[0].unitType ? 100 : void 0),
                u = function () {
                    const e = sl(Lw),
                        t = sl(pO),
                        n = sl(Hw),
                        s = sl(gO);
                    return {
                        x: t - s.ticksPerDay / n * e,
                        y: t + s.ticksPerDay / 1440 + 1
                    }
                }(),
                d = (0, Y.useMemo)((() => ({
                    ...e,
                    datasets: e.datasets.map((e => {
                        const t = e.data.map(((e, t, n) => {
                            if (0 === t) {
                                const t = n.length > 1 && n[0].x < u.x ? function (e, t, n) {
                                    const s = e.x,
                                        i = e.y,
                                        a = t.x,
                                        o = t.y,
                                        r = i + (n - s) * (o - i) / (a - s);
                                    return {
                                        x: n,
                                        y: r
                                    }
                                }(n[0], n[1], u.x) : null;
                                return {
                                    x: t?.x ?? Math.max(e.x, u.x),
                                    y: t?.y ?? e.y
                                }
                            }
                            return t === n.length - 1 ? {
                                x: u.y,
                                y: e.y
                            } : e
                        }));
                        return {
                            ...e,
                            data: t
                        }
                    }))
                })), [e, u.x, u.y]);
            return (0, z.jsx)(c0, {
                focusKey: Ig,
                theme: l0,
                className: Zu()(uae.statisticsGraph, a),
                children: (0, z.jsxs)("div", {
                    className: uae.content,
                    children: [(0, z.jsx)("div", {
                        className: uae.legend,
                        children: t.map(((e, t) => (0, z.jsx)(yR, {
                            color: WC(e.color),
                            label: (0, z.jsx)(Pc.StatisticsPanel.STAT_TITLE, {
                                hash: e.key
                            }),
                            className: uae.legendItem
                        }, t)))
                    }), (0, z.jsx)(SR, {
                        type: "line",
                        data: d,
                        options: c,
                        className: uae.graph
                    }), (0, z.jsx)(wx, {
                        uiTag: kx.value?.statisticsPanelTimeScale,
                        children: (0, z.jsxs)("div", {
                            className: uae.timeScale,
                            children: [(0, z.jsx)("div", {
                                className: uae.timeScaleTitle,
                                children: (0, z.jsx)(Pc.StatisticsPanel.TIME_SCALE_TITLE, {})
                            }), (0, z.jsx)(I$, {
                                action: "Change Time Scale",
                                hidden: 0 === s,
                                children: (0, z.jsx)(CM, {
                                    focusKey: Ig,
                                    theme: yM,
                                    className: uae.slider,
                                    start: 0,
                                    end: 0 === s ? 1 : s,
                                    value: n,
                                    gamepadStep: 1,
                                    disabled: 0 === s,
                                    onChange: i,
                                    valueTransformer: wM
                                })
                            }), (0, z.jsx)("div", {
                                className: uae.timeScaleLabel,
                                children: (0, z.jsx)("div", {
                                    className: uae.timeScaleField,
                                    children: (0, z.jsx)(Pc.StatisticsPanel.TIME_SCALE, {
                                        index: n
                                    })
                                })
                            })]
                        })
                    })]
                })
            })
        };
        const mae = 10,
            hae = 10;
        X.add("game-ui/game/components/statistics-panel/graph/statistics-graph.tsx", {
            get StatisticsGraph() {
                return dae
            },
            set StatisticsGraph(e) {
                dae = e
            }
        });
        let gae = {
            "foldout-item": "foldout-item_dah foldout-item_wOF",
            foldoutItem: "foldout-item_dah foldout-item_wOF",
            header: "header_MP_ header_8H_ item-mouse-states_Fmi item-focused_FuT",
            "disable-active-state": "disable-active-state_G7o disable-active-state_w8a",
            disableActiveState: "disable-active-state_G7o disable-active-state_w8a",
            "header-content": "header-content_SqG header-content_wUX",
            headerContent: "header-content_SqG header-content_wUX",
            icon: "icon_nAL undefined",
            toggle: "toggle_RV4 toggle_yQv"
        };
        X.add("game-ui/common/foldout/themes/statistics-item.module.scss", {
            get classes() {
                return gae
            },
            set classes(e) {
                Object.assign(gae, e)
            }
        });
        const pae = gae;
        let fae = {
            toggle: "toggle_GGm toggle_cca item-mouse-states_Fmi"
        };
        X.add("game-ui/game/components/statistics-panel/menu/item/statistics-checkbox.module.scss", {
            get classes() {
                return fae
            },
            set classes(e) {
                Object.assign(fae, e)
            }
        });
        const xae = fae;
        let vae = {
            locked: "locked_XuG",
            label: "label_VRN",
            icon: "icon_xRc",
            hint: "hint_U4i"
        };
        X.add("game-ui/game/components/statistics-panel/menu/item/statistics-item.module.scss", {
            get classes() {
                return vae
            },
            set classes(e) {
                Object.assign(vae, e)
            }
        });
        const _ae = vae;
        let bae = {
            size: "size_DD8",
            toggle: "toggle_mte size_DD8 toggle_H7r item-mouse-states_Fmi"
        };
        X.add("game-ui/game/components/statistics-panel/menu/item/statistics-toggle.module.scss", {
            get classes() {
                return bae
            },
            set classes(e) {
                Object.assign(bae, e)
            }
        });
        const Tae = bae;
        var Eae = ({
            statItem: e,
            selectedStatistics: t,
            nesting: n = 0
        }) => {
            const [s, i] = (0, Y.useState)(!1), [a, o] = (0, Y.useState)(!1), r = (0, Y.useCallback)((() => i(!0)), []), l = (0, Y.useCallback)((() => i(!1)), []), c = ll(Uw, e.entity), u = sl(Mw), d = (0, Y.useMemo)((() => function (e, t, n) {
                return e.isGroup || e.isSubgroup ? n.index === e.entity.index || void 0 !== t.find((t => t.entity.index === e.entity.index)) : void 0 !== t.find((t => t.key === e.key)) || void 0 !== t.find((t => t.isSubgroup && t.entity.index === e.entity.index))
            }(e, t, u)), [u, t, e]), m = (0, Y.useCallback)((() => {
                d ? Ww(e) : Kw(e)
            }), [d, e]), h = ll(Vw, e.entity), g = (0, Y.useMemo)((() => n + 1), [n]), p = (0, Y.useMemo)((() => -1 !== t.findIndex((t => Ur(t.entity, e.entity))) || t.some((e => -1 !== c.findIndex((t => Ur(e.entity, t.entity)))))), [c, t, e.entity]);
            return (0, z.jsx)(hy, {
                initialExpanded: p,
                type: (e.isGroup || e.isSubgroup) && c.length > 0 ? "Group" : "Item",
                className: Zu()(_ae.statisticsItem, e.locked && "locked", s && pae.disableActiveState),
                theme: pae,
                nesting: n,
                header: (0, z.jsx)($2, {
                    locked: e.locked,
                    requirements: h,
                    direction: "right",
                    children: (0, z.jsxs)(gy, {
                        onFocusChange: o,
                        children: [(0, z.jsx)(Pf, {
                            action: "Select",
                            active: a && !e.locked,
                            className: _ae.hint
                        }), e.locked ? (0, z.jsx)(C$, {
                            className: Tae.size
                        }) : e.isGroup ? (0, z.jsx)(b6, {
                            theme: Tae,
                            disabled: e.locked,
                            onChange: m,
                            onMouseOver: r,
                            onMouseLeave: l,
                            checked: d,
                            focusKey: e.key,
                            style: {
                                borderColor: WC(e.color)
                            },
                            className: _ae.icon
                        }) : (0, z.jsx)(ox, {
                            theme: xae,
                            disabled: e.locked,
                            onChange: m,
                            onMouseOver: r,
                            onMouseLeave: l,
                            checked: d,
                            focusKey: e.key,
                            style: {
                                borderColor: WC(e.color)
                            },
                            className: _ae.icon
                        }), (0, z.jsx)("div", {
                            className: Zu()(_ae.label, e.locked && _ae.locked),
                            children: (0, z.jsx)(Pc.StatisticsPanel.STAT_TITLE, {
                                hash: e.key
                            })
                        })]
                    })
                }),
                children: (e.isGroup || e.isSubgroup) && c.length > 0 ? c.map((e => (0, z.jsx)(Eae, {
                    statItem: e,
                    nesting: g,
                    selectedStatistics: t
                }, e.key))) : void 0
            })
        };
        X.add("game-ui/game/components/statistics-panel/menu/item/statistics-item.tsx", {
            get StatisticsItem() {
                return Eae
            },
            set StatisticsItem(e) {
                Eae = e
            }
        });
        let Iae = {
            "statistics-category-item": "statistics-category-item_qVI",
            statisticsCategoryItem: "statistics-category-item_qVI",
            items: "items_AIY",
            header: "header_Ld7"
        };
        X.add("game-ui/game/components/statistics-panel/menu/category/statistics-category-item.module.scss", {
            get classes() {
                return Iae
            },
            set classes(e) {
                Object.assign(Iae, e)
            }
        });
        const yae = Iae;
        var jae = ({
            category: e,
            selectedStatistics: t
        }) => {
            const n = ll(Uw, e.entity);
            return (0, z.jsxs)("div", {
                className: yae.statisticsCategoryItem,
                children: [(0, z.jsx)("div", {
                    className: yae.header,
                    children: (0, z.jsx)(Pc.StatisticsPanel.STAT_TITLE, {
                        hash: e.key
                    })
                }), (0, z.jsx)("div", {
                    className: yae.items,
                    children: n.map((e => (0, z.jsx)(Eae, {
                        statItem: e,
                        selectedStatistics: t
                    }, e.key)))
                })]
            })
        };
        X.add("game-ui/game/components/statistics-panel/menu/category/statistics-category-item.tsx", {
            get StatisticsCategory() {
                return jae
            },
            set StatisticsCategory(e) {
                jae = e
            }
        });
        let Sae = {
            "statistics-menu": "statistics-menu_y86",
            statisticsMenu: "statistics-menu_y86",
            content: "content_Q1O",
            scrollable: "scrollable_By7"
        };
        X.add("game-ui/game/components/statistics-panel/menu/statistics-menu.module.scss", {
            get classes() {
                return Sae
            },
            set classes(e) {
                Object.assign(Sae, e)
            }
        });
        const Cae = Sae;
        var Nae = ({
            selectedStatistics: e
        }) => {
            const t = sl(Dw);
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.statisticsPanelMenu,
                children: (0, z.jsx)(c0, {
                    theme: l0,
                    className: Cae.statisticsMenu,
                    children: (0, z.jsx)(ff, {
                        className: Cae.scrollable,
                        children: (0, z.jsx)("div", {
                            className: Cae.content,
                            children: (0, z.jsx)(tp, {
                                direction: Rg.Vertical,
                                children: t.map((t => (0, z.jsx)(jae, {
                                    category: t,
                                    selectedStatistics: e
                                }, t.key)))
                            })
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/statistics-panel/menu/statistics-menu.tsx", {
            get StatisticsMenu() {
                return Nae
            },
            set StatisticsMenu(e) {
                Nae = e
            }
        });
        let wae = {
            "city-statistics-panel": "city-statistics-panel_ECW",
            cityStatisticsPanel: "city-statistics-panel_ECW",
            content: "content_BIL",
            graph: "graph_Qba"
        };
        X.add("game-ui/game/components/statistics-panel/statistics-panel.module.scss", {
            get classes() {
                return wae
            },
            set classes(e) {
                Object.assign(wae, e)
            }
        });
        const Oae = wae;
        var Pae = ({
            onClose: e
        }) => {
            lg(kx.value?.statisticsPanel);
            const t = sl(Gw),
                n = sl(Bw),
                s = (0, Y.useMemo)((() => ({
                    datasets: n
                })), [n]),
                i = sl(Hw),
                a = sl(Aw),
                o = sl(Lw),
                r = (0, Y.useMemo)((() => function (e, t) {
                    const n = e / t,
                        s = n / 12;
                    return s > 1e3 ? 9 : s > 500 ? 8 : s > 100 ? 7 : s > 50 ? 6 : s > 10 ? 5 : s > 5 ? 4 : n > 12 ? 3 : n > 6 ? 2 : n > 1 ? 1 : 0
                }(a, i)), [a, i]),
                l = (0, Y.useMemo)((() => function (e, t) {
                    switch (e) {
                    case t:
                        return 0;
                    case 6 * t:
                        return 1;
                    case 12 * t:
                        return 2;
                    case 60 * t:
                        return 3;
                    case 120 * t:
                        return 4;
                    case 600 * t:
                        return 5;
                    case 1200 * t:
                        return 6;
                    case 6e3 * t:
                        return 7;
                    case 12e3 * t:
                        return 8;
                    default:
                        return 9
                    }
                }(o, i)), [o, i]),
                c = (0, Y.useMemo)((() => ({
                    "Change Time Scale": r > 0 ? e => {
                        if (lp(rp.dragSlider), e < 0) {
                            Yw(Lae(Math.max(0, l - 1), a, i))
                        } else if (e > 0) {
                            Yw(Lae(Math.min(r, l + 1), a, i))
                        }
                    } : null
                })), [a, r, l, i]),
                u = (0, Y.useCallback)((e => {
                    Yw(Lae(e, a, i))
                }), [a, i]),
                d = (0, Y.useCallback)((() => {
                    e()
                }), [e]);
            return (0, Y.useEffect)((() => {
                if (0 === Gw.value.length) {
                    const e = Dw.value;
                    if (e.length > 0) {
                        const t = Uw.getValue(e[0].entity);
                        t.length > 0 && Kw(t[0])
                    }
                }
            }), []), (0, z.jsx)(Ag, {
                actions: c,
                children: (0, z.jsxs)(YT, {
                    transitionSounds: cp,
                    header: (0, z.jsx)(QT, {
                        children: (0, z.jsx)(Pc.Statistics.PANEL_TITLE, {})
                    }),
                    className: Oae.cityStatisticsPanel,
                    contentClassName: Oae.content,
                    onClose: d,
                    children: [(0, z.jsx)(Nae, {
                        selectedStatistics: t
                    }), (0, z.jsx)(wx, {
                        uiTag: kx.value?.statisticsPanel,
                        children: (0, z.jsx)(dae, {
                            data: s,
                            selectedStatistics: t,
                            timeScale: l,
                            stepCount: r,
                            onSetTimeScale: u,
                            className: Oae.graph
                        })
                    })]
                })
            })
        };

        function Lae(e, t, n) {
            switch (e) {
            case 0:
                return n;
            case 1:
                return 6 * n;
            case 2:
                return 12 * n;
            case 3:
                return 60 * n;
            case 4:
                return 120 * n;
            case 5:
                return 600 * n;
            case 6:
                return 1200 * n;
            case 7:
                return 6e3 * n;
            case 8:
                return 12e3 * n;
            default:
                return t
            }
        }

        function Aae(e) {
            switch (e) {
            case 0:
                return "Media/Game/Misc/ScheduleDay.svg";
            case 1:
                return "Media/Game/Misc/ScheduleNight.svg";
            default:
                return "Media/Game/Misc/ScheduleDayNight.svg"
            }
        }

        function Mae(e) {
            const [t, n] = (0, Y.useState)(), [s, i] = (0, Y.useState)(), a = Wu(e.name);
            (0, Y.useEffect)((() => {
                null != e && t !== a && (n(a), i(a))
            }), [e, t, a]);
            const o = (0, Y.useCallback)((e => i(e.target.value)), []),
                r = (0, Y.useCallback)((() => {
                    null != e && s && "" !== s ? TL(e.lineData.entity, s) : i(t)
                }), [e, t, s]),
                l = (0, Y.useCallback)((() => i(t)), [t]);
            return [s ?? "", o, r, l]
        }
        X.add("game-ui/game/components/statistics-panel/statistics-panel.tsx", {
            get StatisticsPanel() {
                return Pae
            },
            set StatisticsPanel(e) {
                Pae = e
            }
        }), X.add("game-ui/game/components/transportation-overview-panel/lines-utils.ts", {
            get getScheduleIcon() {
                return Aae
            },
            set getScheduleIcon(e) {
                Aae = e
            },
            get useLineName() {
                return Mae
            },
            set useLineName(e) {
                Mae = e
            }
        });
        let Rae = {
            "transportation-overview-page": "transportation-overview-page_NsJ",
            transportationOverviewPage: "transportation-overview-page_NsJ",
            types: "types_Mco",
            lines: "lines_iup",
            scrollable: "scrollable_lwl",
            "no-lines": "no-lines_xtM",
            noLines: "no-lines_xtM",
            header: "header_cSe",
            title: "title_kUy",
            "sort-indicator": "sort-indicator_ToO",
            sortIndicator: "sort-indicator_ToO",
            legends: "legends_mcP",
            button: "button_cuw item-mouse-states_Fmi item-focused_FuT icon-focused_FJS",
            icon: "icon_hDV",
            "buton-label": "buton-label_mGB",
            butonLabel: "buton-label_mGB",
            cell: "cell_geG",
            "cell-single": "cell-single_qTE cell_geG",
            cellSingle: "cell-single_qTE cell_geG",
            "cell-double": "cell-double_hmA cell_geG",
            cellDouble: "cell-double_hmA cell_geG",
            "cell-wide": "cell-wide_yZB cell_geG",
            cellWide: "cell-wide_yZB cell_geG",
            hint: "hint_vhW"
        };
        X.add("game-ui/game/components/transportation-overview-panel/transportation-overview-page.module.scss", {
            get classes() {
                return Rae
            },
            set classes(e) {
                Object.assign(Rae, e)
            }
        });
        const kae = Rae;
        let Dae = {
            input: "input_hDw",
            label: "label_NCg",
            container: "container_sRs"
        };
        X.add("game-ui/game/components/transportation-overview-panel/transport-line-item/text-input/text-input.module.scss", {
            get classes() {
                return Dae
            },
            set classes(e) {
                Object.assign(Dae, e)
            }
        });
        const Fae = Dae;
        let Uae = {
            "transportation-line-item": "transportation-line-item_ZFw",
            transportationLineItem: "transportation-line-item_ZFw",
            button: "button_PV4 item-mouse-states_Fmi item-focused_FuT",
            container: "container_G2A item-normal_Wb_ item-hover_WK8 item-focused_FuT",
            "color-field": "color-field_jwA",
            colorField: "color-field_jwA",
            eye: "eye_jyX",
            "schedule-button": "schedule-button_nz2",
            scheduleButton: "schedule-button_nz2",
            toggle: "toggle__VM",
            "toggle-off": "toggle-off_MTK",
            toggleOff: "toggle-off_MTK",
            "smaller-icon": "smaller-icon_f0S",
            smallerIcon: "smaller-icon_f0S",
            hint: "hint_AXQ"
        };
        X.add("game-ui/game/components/transportation-overview-panel/transport-line-item/transport-line-item.module.scss", {
            get classes() {
                return Uae
            },
            set classes(e) {
                Object.assign(Uae, e)
            }
        });
        const Bae = Uae,
            Gae = new Eg("INPUT_KEY"),
            Vae = new Eg("COLOR_KEY");
        var Hae = ({
            focusKey: e,
            line: t
        }) => {
            const [n, s, i] = Mae(t), [a, o] = (0, Y.useState)(!1), [r, l] = (0, Y.useState)(Gae), c = (0, Y.useContext)(sE), u = (0, Y.useCallback)((() => bL(t.lineData.entity)), [t]), d = (0, Y.useCallback)((e => EL(t.lineData.entity, e)), [t]), m = (0, Y.useCallback)((() => IL(t.lineData.entity, !t.lineData.active)), [t]), h = (0, Y.useCallback)((() => {
                c.showDialog((0, z.jsx)(jI, {
                    title: (0, z.jsx)(Pc.Common.WARNING, {}),
                    message: (0, z.jsx)(Pc.SelectedInfoPanel.CONFIRM_DELETE_WARNING, {}),
                    onConfirm: u
                }))
            }), [c, u]), g = (0, Y.useCallback)((() => {
                t.lineData.visible ? jL(t.lineData.entity, !1) : yL(t.lineData.entity, !1)
            }), [t]), p = (0, Y.useCallback)((() => {
                _L(t.lineData.entity)
            }), [t]), f = (0, Y.useCallback)((e => {
                e !== a && NL(t.lineData.entity), o(e)
            }), [a, t.lineData.entity]), x = (0, Y.useCallback)((() => {
                NL(t.lineData.entity)
            }), [t.lineData.entity]), v = (0, Y.useCallback)((() => {
                l(Vae)
            }), []), _ = (0, Y.useCallback)((() => r), [r]), b = (0, Y.useCallback)((() => {
                switch (t.lineData.schedule) {
                case 0:
                    SL(t.lineData.entity, 1);
                    break;
                case 1:
                    SL(t.lineData.entity, 2);
                    break;
                default:
                    SL(t.lineData.entity, 0)
                }
            }), [t]), T = (0, Y.useMemo)((() => t.lineData.isCargo ? "Route" : "Line"), [t.lineData.isCargo]);
            return (0, z.jsx)(Ah, {
                onFocusChange: f,
                children: (0, z.jsx)("div", {
                    className: Bae.transportationLineItem,
                    children: (0, z.jsx)(Ip, {
                        focusKey: e,
                        onMouseEnter: x,
                        onMouseLeave: x,
                        className: Bae.container,
                        children: (0, z.jsxs)(tp, {
                            direction: Rg.Horizontal,
                            initialFocused: r,
                            onChange: l,
                            onRefocus: _,
                            children: [(0, z.jsx)("div", {
                                className: kae.cellWide,
                                children: (0, z.jsx)(H3, {
                                    focusKey: Gae,
                                    value: n,
                                    onChange: s,
                                    onBlur: i,
                                    onClick: nx,
                                    theme: Fae,
                                    vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                                        hash: "LineName"
                                    })
                                })
                            }), (0, z.jsx)("div", {
                                className: kae.cellDouble,
                                children: (0, z.jsx)(Gc, {
                                    value: t.lineData.length,
                                    unit: Oc.Length
                                })
                            }), (0, z.jsx)("div", {
                                className: kae.cellDouble,
                                children: t.lineData.stops
                            }), (0, z.jsx)("div", {
                                className: kae.cellDouble,
                                children: t.lineData.vehicles
                            }), (0, z.jsx)("div", {
                                className: kae.cellDouble,
                                children: t.lineData.isCargo ? (0, z.jsx)(Gc, {
                                    value: t.lineData.cargo,
                                    unit: Oc.Weight
                                }) : t.lineData.cargo
                            }), (0, z.jsx)("div", {
                                className: kae.cellDouble,
                                children: (0, z.jsx)(Gc, {
                                    value: 100 * t.lineData.usage,
                                    unit: Oc.Percentage
                                })
                            }), (0, z.jsx)("div", {
                                className: kae.cellSingle,
                                children: (0, z.jsx)(Tg, {
                                    tooltip: (0, z.jsx)(Pc.Transport.TOOLTIP_COLOR, {
                                        hash: T
                                    }),
                                    children: (0, z.jsx)(PQ, {
                                        value: t.lineData.color,
                                        className: Bae.colorField,
                                        onChange: d,
                                        onClick: nx,
                                        onClosePicker: v
                                    })
                                })
                            }), (0, z.jsx)("div", {
                                className: kae.cellSingle,
                                children: (0, z.jsx)(Tg, {
                                    tooltip: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP_TITLE, {
                                        hash: t.lineData.active ? "Deactivate" : "Reactivate"
                                    }),
                                    children: (0, z.jsx)(Kae, {
                                        tinted: !0,
                                        src: "Media/Glyphs/OnOff.svg",
                                        className: Zu()(Bae.button, Bae.toggle, !t.lineData.active && Bae.toggleOff),
                                        onSelect: m
                                    })
                                })
                            }), (0, z.jsx)("div", {
                                className: kae.cellSingle,
                                children: (0, z.jsx)(Tg, {
                                    tooltip: (0, z.jsx)(Pc.Transport.TOOLTIP_SCHEDULE, {
                                        hash: T
                                    }),
                                    children: (0, z.jsx)(Kae, {
                                        src: Aae(t.lineData.schedule),
                                        onSelect: b,
                                        className: Zu()(Bae.button, Bae.scheduleButton)
                                    })
                                })
                            }), (0, z.jsx)("div", {
                                className: kae.cellSingle,
                                children: (0, z.jsx)(Tg, {
                                    tooltip: (0, z.jsx)(Pc.Transport.TOOLTIP_VISIBLE, {
                                        hash: T
                                    }),
                                    children: (0, z.jsx)(Kae, {
                                        tinted: !0,
                                        src: t.lineData.visible ? "Media/Glyphs/EyeOpen.svg" : "Media/Glyphs/EyeClosed.svg",
                                        onSelect: g,
                                        className: Zu()(Bae.button, Bae.smallerIcon)
                                    })
                                })
                            }), (0, z.jsx)("div", {
                                className: kae.cellSingle,
                                children: (0, z.jsx)(Tg, {
                                    tooltip: (0, z.jsx)(Pc.Transport.TOOLTIP_DETAILS, {
                                        hash: T
                                    }),
                                    children: (0, z.jsx)(Kae, {
                                        tinted: !0,
                                        src: "Media/Glyphs/ViewInfo.svg",
                                        onSelect: p,
                                        className: Zu()(Bae.button, Bae.smallerIcon)
                                    })
                                })
                            }), (0, z.jsx)("div", {
                                className: kae.cellSingle,
                                children: (0, z.jsx)(Tg, {
                                    tooltip: (0, z.jsx)(Pc.Transport.TOOLTIP_DELETE, {
                                        hash: T
                                    }),
                                    children: (0, z.jsx)(Kae, {
                                        tinted: !0,
                                        src: "Media/Glyphs/Trash.svg",
                                        onSelect: h,
                                        className: Bae.button
                                    })
                                })
                            })]
                        })
                    })
                })
            })
        };
        const Kae = ({
            tinted: e = !1,
            src: t,
            className: n,
            onSelect: s
        }) => {
            const [i, a] = (0, Y.useState)(!1);
            return (0, z.jsx)(Ah, {
                onFocusChange: a,
                children: (0, z.jsx)(sf, {
                    disableHint: !0,
                    tinted: e,
                    src: t,
                    onSelect: s,
                    className: Zu()(Bae.button, n),
                    onClick: nx,
                    children: (0, z.jsx)(Pf, {
                        action: "Select",
                        active: i,
                        className: Bae.hint
                    })
                })
            })
        };
        X.add("game-ui/game/components/transportation-overview-panel/transport-line-item/transport-line-item.tsx", {
            get TransportLineItem() {
                return Hae
            },
            set TransportLineItem(e) {
                Hae = e
            }
        });
        let Wae = {
            "transport-type-item": "transport-type-item__xs",
            transportTypeItem: "transport-type-item__xs",
            lock: "lock_GRv"
        };
        X.add("game-ui/game/components/transportation-overview-panel/transport-type-item/transport-type-item.module.scss", {
            get classes() {
                return Wae
            },
            set classes(e) {
                Object.assign(Wae, e)
            }
        });
        const zae = Wae;
        var Yae = ({
            type: e,
            cargo: t,
            selected: n,
            focusKey: s,
            onSelect: i
        }) => {
            const a = (0, Y.useCallback)((() => i(e.id)), [i, e]);
            return (0, z.jsx)($2, {
                title: t ? (0, z.jsx)(Pc.Transport.ROUTES, {
                    hash: e.id
                }) : (0, z.jsx)(Pc.Transport.LINES, {
                    hash: e.id
                }),
                locked: e.locked,
                requirements: e.requirements,
                direction: "right",
                children: (0, z.jsx)(sf, {
                    disableHint: !0,
                    focusKey: s,
                    src: e.icon,
                    selected: !e.locked && n,
                    disabled: e.locked,
                    theme: Iie,
                    className: Zu()(zae.transportTypeItem, e.locked && Iie.locked),
                    onSelect: a,
                    children: e.locked && (0, z.jsx)(C$, {
                        className: zae.lock
                    })
                })
            })
        };
        X.add("game-ui/game/components/transportation-overview-panel/transport-type-item/transport-type-item.tsx", {
            get TransportTypeItem() {
                return Yae
            },
            set TransportTypeItem(e) {
                Yae = e
            }
        });
        const $ae = new Eg("HEADER_KEY");
        var qae;
        ! function (e) {
            e[e.Name = 0] = "Name", e[e.Length = 1] = "Length", e[e.Stops = 2] = "Stops", e[e.Vehicles = 3] = "Vehicles", e[e.Cargo = 4] = "Cargo", e[e.Usage = 5] = "Usage"
        }(qae || (qae = {}));
        var Xae = ({
            cargo: e,
            lines: t,
            types: n,
            selectedType: s,
            setSelectedType: i
        }) => {
            lg(kx.value?.transportationOverviewPanelLines);
            const [a, o] = (0, Y.useState)(qae.Name), [r, l] = (0, Y.useState)(!0), c = (0, Y.useCallback)((e => {
                "string" == typeof e && i(e)
            }), [i]), u = (0, Y.useCallback)((e => {
                i(e)
            }), [i]), d = (0, Y.useCallback)((e => {
                l(e !== a || !r), o(e)
            }), [r, a]), m = zu(), h = (0, Y.useMemo)((() => function (e, t, n, s) {
                const i = x4({
                    order: n ? "asc" : "desc"
                });
                switch (t) {
                case qae.Name:
                    return e.sort(((e, t) => i(s(e.name), s(t.name))));
                case qae.Length:
                    return e.sort(((e, t) => i(e.lineData.length, t.lineData.length)));
                case qae.Stops:
                    return e.sort(((e, t) => i(e.lineData.stops, t.lineData.stops)));
                case qae.Vehicles:
                    return e.sort(((e, t) => i(e.lineData.vehicles, t.lineData.vehicles)));
                case qae.Cargo:
                    return e.sort(((e, t) => i(e.lineData.cargo, t.lineData.cargo)));
                case qae.Usage:
                    return e.sort(((e, t) => i(e.lineData.usage, t.lineData.usage)))
                }
            }(t, a, r, m)), [r, t, m, a]), [g, p] = (0, Y.useState)(h.some((e => e.lineData.visible)) || 0 === h.length), f = (0, Y.useCallback)((() => {
                for (let e = 0; e < h.length; e++) {
                    const t = h[e];
                    g ? jL(t.lineData.entity, !1) : yL(t.lineData.entity, !1)
                }
                p(!g)
            }), [g, h]);
            (0, Y.useEffect)((() => {
                p(h.some((e => e.lineData.visible)) || 0 === h.length)
            }), [h]);
            const x = (0, Y.useCallback)((() => h?.length > 0 ? Dr(h[0].lineData.entity) : null), [h]);
            return (0, z.jsx)(tp, {
                direction: Rg.Horizontal,
                children: (0, z.jsxs)("div", {
                    className: kae.transportationOverviewPage,
                    children: [(0, z.jsx)(wx, {
                        uiTag: kx.value?.transportationOverviewPanelTransportTypes,
                        children: (0, z.jsx)(c0, {
                            theme: l0,
                            className: kae.types,
                            children: (0, z.jsx)(Qg, {
                                focused: s,
                                onChange: c,
                                onRefocus: Zg,
                                children: (0, z.jsx)(ff, {
                                    children: n.map((t => (0, z.jsx)(Yae, {
                                        type: t,
                                        cargo: e,
                                        focusKey: t.id,
                                        selected: t.id === s,
                                        onSelect: u
                                    }, t.id)))
                                })
                            })
                        })
                    }), (0, z.jsx)(wx, {
                        uiTag: kx.value?.transportationOverviewPanelLines,
                        children: (0, z.jsx)(c0, {
                            focusKey: h.length > 0 ? yg : Ig,
                            theme: l0,
                            className: kae.lines,
                            initialFocused: h?.length > 0 ? Dr(h[0].lineData.entity) : $ae,
                            onRefocus: x,
                            header: (0, z.jsx)(Qae, {
                                focusKey: h.length > 0 ? $ae : Ig,
                                type: s,
                                cargo: e,
                                sortBy: a,
                                ascending: r,
                                someVisible: g,
                                onSort: d,
                                toggleVisibility: f
                            }),
                            children: (0, z.jsx)(ff, {
                                className: kae.scrollable,
                                children: h.length > 0 ? h.map((e => (0, z.jsx)(Hae, {
                                    focusKey: Dr(e.lineData.entity),
                                    line: e
                                }, Dr(e.lineData.entity)))) : (0, z.jsx)("div", {
                                    className: kae.noLines,
                                    children: e ? (0, z.jsx)(Pc.Transport.NO_ROUTES, {}) : (0, z.jsx)(Pc.Transport.NO_LINES, {})
                                })
                            })
                        })
                    })]
                })
            })
        };
        const Qae = ({
                type: e,
                cargo: t,
                sortBy: n,
                ascending: s,
                someVisible: i,
                focusKey: a,
                onSort: o,
                toggleVisibility: r
            }) => {
                const l = (0, Y.useCallback)((() => {
                        o(qae.Name)
                    }), [o]),
                    c = (0, Y.useCallback)((() => {
                        o(qae.Stops)
                    }), [o]),
                    u = (0, Y.useCallback)((() => {
                        o(qae.Vehicles)
                    }), [o]),
                    d = (0, Y.useCallback)((() => {
                        o(qae.Cargo)
                    }), [o]),
                    m = (0, Y.useCallback)((() => {
                        o(qae.Usage)
                    }), [o]),
                    h = (0, Y.useCallback)((() => {
                        o(qae.Length)
                    }), [o]),
                    g = (0, z.jsx)(ef, {
                        className: kae.sortIndicator,
                        src: `Media/Glyphs/ThickStrokeArrow${s?"Down":"Up"}.svg`
                    });
                return (0, z.jsx)(Ip, {
                    focusKey: a,
                    className: kae.header,
                    children: (0, z.jsxs)(tp, {
                        direction: Rg.Horizontal,
                        children: [(0, z.jsx)("div", {
                            className: kae.title,
                            children: t ? (0, z.jsx)(Pc.Transport.ROUTES, {
                                hash: e
                            }) : (0, z.jsx)(Pc.Transport.LINES, {
                                hash: e
                            })
                        }), (0, z.jsx)(wx, {
                            uiTag: kx.value?.transportationOverviewPanelLegend,
                            children: (0, z.jsxs)("div", {
                                className: kae.legends,
                                children: [(0, z.jsx)("div", {
                                    className: kae.cellWide,
                                    children: (0, z.jsxs)(Zae, {
                                        onSelect: l,
                                        className: kae.button,
                                        children: [(0, z.jsx)("div", {
                                            className: kae.butonLabel,
                                            children: (0, z.jsx)(Pc.Transport.LEGEND_NAME, {})
                                        }), n === qae.Name && g]
                                    })
                                }), (0, z.jsx)("div", {
                                    className: kae.cellDouble,
                                    children: (0, z.jsxs)(Zae, {
                                        onSelect: h,
                                        className: kae.button,
                                        children: [(0, z.jsx)("div", {
                                            className: kae.butonLabel,
                                            children: (0, z.jsx)(Pc.Transport.LEGEND_LENGTH, {})
                                        }), n === qae.Length && g]
                                    })
                                }), (0, z.jsx)("div", {
                                    className: kae.cellDouble,
                                    children: (0, z.jsxs)(Zae, {
                                        onSelect: c,
                                        className: kae.button,
                                        children: [(0, z.jsx)("div", {
                                            className: kae.butonLabel,
                                            children: (0, z.jsx)(Pc.Transport.LEGEND_STOPS, {
                                                hash: e
                                            })
                                        }), n === qae.Stops && g]
                                    })
                                }), (0, z.jsx)("div", {
                                    className: kae.cellDouble,
                                    children: (0, z.jsxs)(Zae, {
                                        onSelect: u,
                                        className: kae.button,
                                        children: [(0, z.jsx)("div", {
                                            className: kae.butonLabel,
                                            children: (0, z.jsx)(Pc.Transport.LEGEND_VEHICLES, {
                                                hash: e
                                            })
                                        }), n === qae.Vehicles && g]
                                    })
                                }), (0, z.jsx)("div", {
                                    className: kae.cellDouble,
                                    children: (0, z.jsxs)(Zae, {
                                        onSelect: d,
                                        className: kae.button,
                                        children: [(0, z.jsx)("div", {
                                            className: kae.butonLabel,
                                            children: t ? (0, z.jsx)(Pc.Transport.LEGEND_CARGO, {}) : (0, z.jsx)(Pc.Transport.LEGEND_PASSENGERS, {
                                                hash: e
                                            })
                                        }), n === qae.Cargo && g]
                                    })
                                }), (0, z.jsx)("div", {
                                    className: kae.cellDouble,
                                    children: (0, z.jsxs)(Zae, {
                                        onSelect: m,
                                        className: kae.button,
                                        children: [(0, z.jsx)("div", {
                                            className: kae.butonLabel,
                                            children: (0, z.jsx)(Pc.Transport.LEGEND_USAGE, {})
                                        }), n === qae.Usage && g]
                                    })
                                }), (0, z.jsx)("div", {
                                    className: kae.cellSingle
                                }), (0, z.jsx)("div", {
                                    className: kae.cellSingle
                                }), (0, z.jsx)("div", {
                                    className: kae.cellSingle
                                }), (0, z.jsx)("div", {
                                    className: kae.cellSingle,
                                    children: (0, z.jsx)(Tg, {
                                        tooltip: (0, z.jsx)(Pc.Transport.TOOLTIP_VISIBLE, {
                                            hash: t ? "Route" : "Line"
                                        }),
                                        children: (0, z.jsx)(Zae, {
                                            onSelect: r,
                                            className: kae.button,
                                            children: (0, z.jsx)(ef, {
                                                src: i ? "Media/Glyphs/EyeOpen.svg" : "Media/Glyphs/EyeClosed.svg",
                                                className: kae.icon
                                            })
                                        })
                                    })
                                }), (0, z.jsx)("div", {
                                    className: kae.cellSingle
                                }), (0, z.jsx)("div", {
                                    className: kae.cellSingle
                                })]
                            })
                        })]
                    })
                })
            },
            Zae = ({
                children: e,
                className: t,
                onSelect: n
            }) => {
                const [s, i] = (0, Y.useState)(!1);
                return (0, z.jsx)(Ah, {
                    onFocusChange: i,
                    children: (0, z.jsxs)(Gp, {
                        disableHint: !0,
                        onSelect: n,
                        className: Zu()(kae.button, t),
                        onClick: nx,
                        children: [(0, z.jsx)(Pf, {
                            action: "Select",
                            active: s,
                            className: kae.hint
                        }), e]
                    })
                })
            };
        X.add("game-ui/game/components/transportation-overview-panel/transportation-overview-page.tsx", {
            get TransportationOverviewPage() {
                return Xae
            },
            set TransportationOverviewPage(e) {
                Xae = e
            }
        });
        let Jae = {
            "transportation-overview-panel": "transportation-overview-panel_VlO",
            transportationOverviewPanel: "transportation-overview-panel_VlO"
        };
        X.add("game-ui/game/components/transportation-overview-panel/transportation-overview-panel.module.scss", {
            get classes() {
                return Jae
            },
            set classes(e) {
                Object.assign(Jae, e)
            }
        });
        const eoe = Jae,
            toe = [Xb.PublicTransport, Xb.Cargo];
        var noe = ({
            selectedTab: e,
            onSelectTab: t,
            onClose: n
        }) => {
            lg(kx.value?.transportationOverviewPanel);
            const s = sl(gL),
                i = sl(pL),
                a = sl(fL),
                o = sl(xL),
                r = sl(vL),
                l = (0, Y.useMemo)((() => e === Xb.Cargo ? i : s), [e, i, s]),
                c = (0, Y.useMemo)((() => e === Xb.Cargo ? r : o), [r, e, o]),
                u = (0, Y.useMemo)((() => e === Xb.Cargo ? a.filter((e => e.lineData?.isCargo)).filter((e => e.lineData?.type === r)) : a.filter((e => !e.lineData?.isCargo)).filter((e => e.lineData?.type === o))), [r, e, o, a]),
                d = (0, Y.useCallback)((() => {
                    n(), CL()
                }), [n]),
                m = MC("Cargo Transport");
            return (0, z.jsx)(wx, {
                uiTag: kx.value?.transportationOverviewPanel,
                children: (0, z.jsx)(YT, {
                    header: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(QT, {
                            children: (0, z.jsx)(Pc.Transport.LINES_OVERVIEW_TITLE, {})
                        }), (0, z.jsxs)(P$, {
                            children: [(0, z.jsx)(L$, {
                                uiTag: kx.value?.transportationOverviewPanelTabPublicTransport,
                                id: Xb.PublicTransport,
                                selectedId: e,
                                onSelect: t,
                                children: (0, z.jsx)(Pc.Transport.TAB, {
                                    hash: Xb[Xb.PublicTransport]
                                })
                            }), (0, z.jsx)($2, {
                                locked: m.locked,
                                requirements: m.requirements,
                                children: (0, z.jsx)(L$, {
                                    uiTag: kx.value?.transportationOverviewPanelTabCargo,
                                    disabled: m.locked,
                                    locked: m.locked,
                                    id: Xb.Cargo,
                                    selectedId: e,
                                    onSelect: t,
                                    children: (0, z.jsx)(Pc.Transport.TAB, {
                                        hash: Xb[Xb.Cargo]
                                    })
                                })
                            })]
                        })]
                    }),
                    className: eoe.transportationOverviewPanel,
                    transitionSounds: cp,
                    onClose: d,
                    children: (0, z.jsx)(O$, {
                        tabs: toe,
                        selectedTab: e,
                        onSelect: t,
                        children: (0, z.jsx)(Xae, {
                            lines: u,
                            types: l,
                            selectedType: c,
                            setSelectedType: e === Xb.Cargo ? OL : wL,
                            cargo: e === Xb.Cargo
                        }, e)
                    })
                })
            })
        };
        X.add("game-ui/game/components/transportation-overview-panel/transportation-overview-panel.tsx", {
            get TransportationOverviewPanel() {
                return noe
            },
            set TransportationOverviewPanel(e) {
                noe = e
            }
        });
        let soe = {
            "game-main-screen": "game-main-screen_TRK child-opacity-transition_nkS",
            gameMainScreen: "game-main-screen_TRK child-opacity-transition_nkS",
            "main-container": "main-container__E2",
            mainContainer: "main-container__E2",
            "main-column": "main-column_g42",
            mainColumn: "main-column_g42",
            "action-hints": "action-hints_sBV",
            actionHints: "action-hints_sBV",
            "center-panel-layout": "center-panel-layout_X2p",
            centerPanelLayout: "center-panel-layout_X2p",
            "info-menu-layout": "info-menu-layout_E8i",
            infoMenuLayout: "info-menu-layout_E8i",
            "top-layout": "top-layout_QtO",
            topLayout: "top-layout_QtO",
            "info-layout": "info-layout_BVk",
            infoLayout: "info-layout_BVk",
            "tool-options-visible": "tool-options-visible_EaE",
            toolOptionsVisible: "tool-options-visible_EaE",
            "infoview-menu": "infoview-menu_VQI",
            infoviewMenu: "infoview-menu_VQI",
            "selected-info-panel": "selected-info-panel_iIe",
            selectedInfoPanel: "selected-info-panel_iIe",
            "tool-layout": "tool-layout_SqM",
            toolLayout: "tool-layout_SqM",
            "tool-side-column": "tool-side-column_l9i",
            toolSideColumn: "tool-side-column_l9i",
            "tool-main-column": "tool-main-column_PaC",
            toolMainColumn: "tool-main-column_PaC",
            "tool-panel": "tool-panel_V_j",
            toolPanel: "tool-panel_V_j",
            "social-panel-layout": "social-panel-layout_JFt",
            socialPanelLayout: "social-panel-layout_JFt",
            "emergency-mode": "emergency-mode_zZ8",
            emergencyMode: "emergency-mode_zZ8",
            "photo-mode-panel-layout": "photo-mode-panel-layout_poh",
            photoModePanelLayout: "photo-mode-panel-layout_poh",
            "radio-panel": "radio-panel_otL",
            radioPanel: "radio-panel_otL",
            "bp-indicator": "bp-indicator_dvA",
            bpIndicator: "bp-indicator_dvA",
            "pause-menu-layout": "pause-menu-layout_eGE",
            pauseMenuLayout: "pause-menu-layout_eGE",
            horizontal: "horizontal_xPW",
            vertical: "vertical_txi",
            "pause-menu-toggle": "pause-menu-toggle_ewR",
            pauseMenuToggle: "pause-menu-toggle_ewR",
            hint: "hint_d21",
            "pause-overlay": "pause-overlay_rOw",
            pauseOverlay: "pause-overlay_rOw",
            paused: "paused_kMX"
        };
        X.add("game-ui/game/components/game-main-screen.module.scss", {
            get classes() {
                return soe
            },
            set classes(e) {
                Object.assign(soe, e)
            }
        });
        const ioe = soe;
        var aoe = {
                [kb.InfoviewMenu]: ({
                    onClose: e
                }) => (0, z.jsx)("div", {
                    className: ioe.infoLayout,
                    children: (0, z.jsx)($5, {
                        className: ioe.infoviewMenu,
                        onClose: e
                    })
                }),
                [kb.Progression]: ({
                    selectedTab: e,
                    onClose: t
                }) => (0, z.jsx)("div", {
                    className: ioe.centerPanelLayout,
                    children: (0, z.jsx)(Aie, {
                        selectedTab: e,
                        onSelectTab: Yb,
                        onClose: t
                    })
                }),
                [kb.Economy]: ({
                    selectedTab: e,
                    onClose: t
                }) => (0, z.jsx)("div", {
                    className: ioe.centerPanelLayout,
                    children: (0, z.jsx)(une, {
                        selectedTab: e,
                        onSelectTab: qb,
                        onClose: t
                    })
                }),
                [kb.CityInfo]: ({
                    selectedTab: e,
                    onClose: t
                }) => (0, z.jsx)("div", {
                    className: ioe.centerPanelLayout,
                    children: (0, z.jsx)(N7, {
                        selectedTab: e,
                        onSelectTab: Qb,
                        onClose: t
                    })
                }),
                [kb.Statistics]: ({
                    onClose: e
                }) => (0, z.jsx)("div", {
                    className: ioe.centerPanelLayout,
                    children: (0, z.jsx)(Pae, {
                        onClose: e
                    })
                }),
                [kb.TransportationOverview]: ({
                    selectedTab: e,
                    onClose: t
                }) => (0, z.jsx)("div", {
                    className: ioe.centerPanelLayout,
                    children: (0, z.jsx)(noe, {
                        selectedTab: e,
                        onSelectTab: Zb,
                        onClose: t
                    })
                }),
                [kb.Chirper]: ({
                    onClose: e
                }) => (0, z.jsx)(roe, {
                    children: (0, z.jsx)(K9, {
                        onClose: e
                    })
                }),
                [kb.LifePath]: ({
                    selectedEntity: e,
                    onClose: t
                }) => (0, z.jsx)(roe, {
                    children: (0, z.jsx)(Gne, {
                        selectedCitizen: e,
                        onClose: t
                    })
                }),
                [kb.Journal]: ({
                    onClose: e
                }) => (0, z.jsx)(roe, {
                    children: (0, z.jsx)(_ne, {
                        onClose: e
                    })
                }),
                [kb.Radio]: ({
                    onClose: e
                }) => (0, z.jsx)(oae, {
                    className: ioe.radioPanel,
                    onClose: e
                }),
                [kb.PhotoMode]: ({
                    onClose: e
                }) => (0, z.jsx)(loe, {
                    children: (0, z.jsx)(o1, {
                        onClose: e
                    })
                }),
                [kb.Notifications]: ({
                    onClose: e
                }) => (0, z.jsx)(roe, {
                    children: (0, z.jsx)(ose, {
                        onClose: e
                    })
                })
            },
            ooe = ({
                panel: e
            }) => {
                const t = (0, Y.useCallback)((() => Hb(e.__Type)), [e.__Type]);
                return (0, z.jsx)(YA, {
                    components: aoe,
                    data: e,
                    props: {
                        onClose: t
                    }
                })
            },
            roe = ({
                children: e
            }) => {
                const t = sl(jN);
                return (0, z.jsx)("div", {
                    className: Zu()(ioe.socialPanelLayout, t && ioe.emergencyMode),
                    children: e
                })
            },
            loe = ({
                children: e
            }) => (0, z.jsx)("div", {
                className: Zu()(ioe.photoModePanelLayout),
                children: e
            });
        X.add("game-ui/game/components/game-panel-renderer.tsx", {
            get gamePanelComponents() {
                return aoe
            },
            set gamePanelComponents(e) {
                aoe = e
            },
            get GamePanelRenderer() {
                return ooe
            },
            set GamePanelRenderer(e) {
                ooe = e
            },
            get SocialPanelLayout() {
                return roe
            },
            set SocialPanelLayout(e) {
                roe = e
            },
            get PhotoModePanelLayout() {
                return loe
            },
            set PhotoModePanelLayout(e) {
                loe = e
            }
        });
        let coe = {
            "infoview-menu-toggle": "infoview-menu-toggle_bYF",
            infoviewMenuToggle: "infoview-menu-toggle_bYF",
            "mini-panel-visible": "mini-panel-visible_mDg",
            miniPanelVisible: "mini-panel-visible_mDg",
            button: "button_H9N",
            "active-infoview": "active-infoview_J2h",
            activeInfoview: "active-infoview_J2h",
            exit: "exit_Oop",
            "enter-active": "enter-active_Wti",
            enterActive: "enter-active_Wti",
            enter: "enter_zBP",
            "exit-active": "exit-active__MZ",
            exitActive: "exit-active__MZ",
            label: "label_UhV",
            "close-button": "close-button_TMO",
            closeButton: "close-button_TMO",
            lock: "lock_Mbc",
            hint: "hint_oTi"
        };
        X.add("game-ui/game/components/infoviews/infoview-menu-toggle/infoview-menu-toggle.module.scss", {
            get classes() {
                return coe
            },
            set classes(e) {
                Object.assign(coe, e)
            }
        });
        const uoe = coe;
        var doe = ({
            miniPanelVisible: e,
            className: t
        }) => {
            const n = E1(kb.InfoviewMenu).visible;
            return (0, z.jsx)(moe, {
                miniPanelVisible: e,
                className: t,
                visible: n
            })
        };
        const moe = (0, Y.memo)((function ({
            miniPanelVisible: e,
            className: t,
            visible: n
        }) {
            const s = sl(iv),
                i = MC("Infoviews"),
                a = Dm(),
                o = sl(Ul),
                r = (0, Y.useCallback)((() => {
                    !n && kx.value?.infoviewsButton && ag(kx.value.infoviewsButton), s && !n ? rv() : Wb()
                }), [s, n]);
            return (0, z.jsxs)("div", {
                className: Zu()(uoe.infoviewMenuToggle, e && uoe.miniPanelVisible, t),
                children: [(0, z.jsx)(ud, {
                    children: null != s && e && (0, z.jsx)(mh, {
                        styles: uoe,
                        children: (0, z.jsxs)("div", {
                            className: uoe.activeInfoview,
                            children: [(0, z.jsx)("div", {
                                className: uoe.label,
                                children: (0, z.jsx)(Pc.Infoviews.INFOVIEW, {
                                    hash: s.id
                                })
                            }), !a && (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.Infoviews.CLOSE_INFO_VIEW, {}),
                                children: (0, z.jsx)(sf, {
                                    disableHint: !0,
                                    tinted: !0,
                                    src: "Media/Glyphs/Close.svg",
                                    theme: of ,
                                    className: uoe.closeButton,
                                    onSelect: rv
                                })
                            })]
                        })
                    })
                }), (0, z.jsx)(wx, {
                    uiTag: kx.value?.infoviewsButton,
                    children: (0, z.jsx)($2, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_INFO_VIEWS, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_INFO_VIEWS, {}),
                        shortcut: (0, z.jsx)(Lf, {
                            action: "Info View",
                            active: o
                        }),
                        requirements: i.requirements,
                        locked: i.locked,
                        children: (0, z.jsx)(u3, {
                            src: "Media/Glyphs/Info.svg",
                            className: uoe.button,
                            selected: n,
                            onSelect: r,
                            disabled: i.locked,
                            children: i.locked && (0, z.jsx)(C$, {
                                className: uoe.lock
                            })
                        })
                    })
                }), (0, z.jsx)(Pf, {
                    action: "Info View",
                    className: uoe.hint
                })]
            })
        }));
        X.add("game-ui/game/components/infoviews/infoview-menu-toggle/infoview-menu-toggle.tsx", {
            get InfoviewMenuToggle() {
                return doe
            },
            set InfoviewMenuToggle(e) {
                doe = e
            }
        });
        let hoe = {
            row: "row_ZqL",
            col: "col_zHI"
        };
        X.add("game-ui/ui/layout.module.scss", {
            get classes() {
                return hoe
            },
            set classes(e) {
                Object.assign(hoe, e)
            }
        });
        const goe = hoe;
        var poe = e => (0, z.jsx)("div", {
                style: e.style,
                className: Zu()(goe.row, e.className),
                children: e.children
            }),
            foe = e => (0, z.jsx)("div", {
                style: e.style,
                className: Zu()(goe.col, e.className),
                children: e.children
            });
        X.add("game-ui/ui/layout.tsx", {
            get Row() {
                return poe
            },
            set Row(e) {
                poe = e
            },
            get Col() {
                return foe
            },
            set Col(e) {
                foe = e
            }
        });
        let xoe = {
            field: "field_eZ6",
            header: "header_oa2",
            icon: "icon_t1n",
            label: "label_pzR",
            content: "content_DHv",
            error: "error_XxO"
        };
        X.add("game-ui/game/components/map-tile-purchase-panel/map-tile-purchase-field.module.scss", {
            get classes() {
                return xoe
            },
            set classes(e) {
                Object.assign(xoe, e)
            }
        });
        const voe = xoe;
        let _oe = {
            "map-tile-purchase-panel": "map-tile-purchase-panel_RTg",
            mapTilePurchasePanel: "map-tile-purchase-panel_RTg",
            section: "section_JVp",
            resources: "resources_F7B",
            "resource-item": "resource-item_xdp",
            resourceItem: "resource-item_xdp",
            "resource-icon": "resource-icon_sHE",
            resourceIcon: "resource-icon_sHE",
            "resource-title": "resource-title_UvF",
            resourceTitle: "resource-title_UvF",
            purchase: "purchase_qTi",
            button: "button_adT",
            problems: "problems_b5X",
            problem: "problem_d8F",
            "cost-icon": "cost-icon_Tn1",
            costIcon: "cost-icon_Tn1",
            "cost-icon-disabled": "cost-icon-disabled_Dzu",
            costIconDisabled: "cost-icon-disabled_Dzu",
            label: "label_ASS",
            field: "field_z8Y"
        };
        X.add("game-ui/game/components/map-tile-purchase-panel/map-tile-purchase-panel.module.scss", {
            get classes() {
                return _oe
            },
            set classes(e) {
                Object.assign(_oe, e)
            }
        });
        const boe = _oe,
            Toe = {
                enter: rp.mapTilePurchaseMode,
                exit: rp.mapTilePurchaseModeEnd
            };
        var Eoe = ({
            focusKey: e,
            className: t,
            onClose: n
        }) => {
            og(kx.value?.mapTilePanel);
            const s = sl(LS),
                i = sl(AS),
                a = sl(MS),
                o = sl(DS),
                r = o === wS.None,
                l = 0 == (o & (wS.NoAvailable | wS.NoCurrentlyAvailable)),
                c = (0, Y.useMemo)((() => ({
                    "Purchase Map Tile": l && r ? () => {
                        lp(rp.purchase), VS(), kx.value?.mapTilePanelPurchase && ag(kx.value?.mapTilePanelPurchase)
                    } : null
                })), [r, l]);
            return (0, z.jsx)(Ag, {
                actions: c,
                children: (0, z.jsx)(wx, {
                    uiTag: kx.value?.mapTilePanel,
                    children: (0, z.jsxs)(YT, {
                        focusKey: e,
                        className: Zu()(boe.mapTilePurchasePanel, t),
                        header: (0, z.jsx)(QT, {
                            children: (0, z.jsx)(Pc.MapTilePurchase.TITLE, {})
                        }),
                        transitionSounds: Toe,
                        backActionOverride: "Leave Map Tile View",
                        onClose: n,
                        children: [l && (0, z.jsx)(wx, {
                            uiTag: kx.value?.mapTilePanelResources,
                            children: (0, z.jsx)("div", {
                                className: Zu()(boe.section, boe.resources),
                                children: [s, i, ...a].map((e => (0, z.jsx)(Ioe, {
                                    resource: e
                                }, e.id)))
                            })
                        }), (0, z.jsx)(yoe, {
                            purchasePosible: l,
                            purchaseEnabled: r
                        })]
                    })
                })
            })
        };
        const Ioe = ({
                resource: e
            }) => (0, z.jsx)(kY, {
                title: (0, z.jsx)(Pc.MapTilePurchase.TOOLTIP_TITLE_RESOURCE, {
                    hash: e.id
                }),
                description: (0, z.jsx)(Pc.MapTilePurchase.TOOLTIP_RESOURCE, {
                    hash: e.id
                }),
                children: (0, z.jsxs)("div", {
                    className: boe.resourceItem,
                    children: [(0, z.jsxs)("div", {
                        className: boe.resourceTitle,
                        children: [(0, z.jsx)("img", {
                            src: e.icon,
                            className: boe.resourceIcon
                        }), (0, z.jsx)(Pc.MapTilePurchase.RESOURCE, {
                            hash: e.id
                        })]
                    }), (0, z.jsx)("div", {
                        className: boe.resourceValue,
                        children: (0, z.jsx)(Gc, {
                            value: e.value,
                            unit: e.unit
                        })
                    })]
                })
            }),
            yoe = ({
                purchasePosible: e,
                purchaseEnabled: t
            }) => {
                const n = (0, Y.useCallback)((() => {
                    VS(), kx.value?.mapTilePanelPurchase && ag(kx.value?.mapTilePanelPurchase)
                }), []);
                return (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)("div", {
                        className: Zu()(boe.section, boe.purchase),
                        children: (0, z.jsxs)(poe, {
                            children: [(0, z.jsx)(foe, {
                                children: (0, z.jsx)(joe, {})
                            }), e && (0, z.jsx)(foe, {
                                children: (0, z.jsx)(wx, {
                                    uiTag: kx.value?.mapTilePanelPurchase,
                                    children: (0, z.jsx)(Tg, {
                                        tooltip: Coe(DS.value),
                                        children: (0, z.jsx)(Gp, {
                                            focusKey: Ig,
                                            theme: LI,
                                            selectSound: rp.purchase,
                                            className: boe.button,
                                            disabled: !t,
                                            onSelect: n,
                                            hintAction: "Purchase Map Tile",
                                            forceHint: t,
                                            children: (0, z.jsx)(Pc.MapTilePurchase.PURCHASE_STATUS, {
                                                hash: wS[wS.None]
                                            })
                                        })
                                    })
                                })
                            })]
                        })
                    }), 0 != (DS.value & (wS.InsufficientFunds | wS.InsufficientPermits)) && (0, z.jsx)("div", {
                        className: boe.problems,
                        children: Soe(DS.value)
                    })]
                })
            },
            joe = () => {
                const e = sl(FS),
                    t = sl(US),
                    n = sl(RS),
                    s = sl(kS);
                return 0 != (DS.value & wS.NoSelection) ? Soe(wS.NoSelection) || null : 0 != (DS.value & wS.NoAvailable) ? Soe(wS.NoAvailable) || null : 0 != (DS.value & wS.NoCurrentlyAvailable) ? Soe(wS.NoCurrentlyAvailable) || null : (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(T4, {
                        theme: voe,
                        label: (0, z.jsx)(Pc.MapTilePurchase.PERMITS_USED, {}),
                        icon: "Media/Game/Icons/ExpansionPermit.svg",
                        className: Zu()(boe.field, 0 != (DS.value & wS.InsufficientPermits) && voe.error),
                        children: (0, z.jsx)(cu, {
                            value: t,
                            total: e
                        })
                    }), (0, z.jsx)(T4, {
                        theme: voe,
                        label: (0, z.jsx)(Pc.MapTilePurchase.TILE_UPKEEP, {}),
                        icon: "Media/Game/Icons/MapTile.svg",
                        className: Zu()(boe.field, 0 != (DS.value & wS.InsufficientFunds) && voe.error),
                        children: (0, z.jsx)(Gc, {
                            value: s,
                            unit: Oc.MoneyPerMonth
                        })
                    }), (0, z.jsx)(T4, {
                        theme: voe,
                        label: (0, z.jsx)(Pc.MapTilePurchase.COST, {}),
                        icon: "Media/Game/Icons/Money.svg",
                        className: Zu()(boe.field, 0 != (DS.value & wS.InsufficientFunds) && voe.error),
                        children: (0, z.jsx)(Gc, {
                            value: n,
                            unit: Oc.Money
                        })
                    })]
                })
            };

        function Soe(e) {
            return e === (wS.InsufficientPermits | wS.InsufficientFunds) ? (0, z.jsx)("div", {
                className: boe.problem,
                children: (0, z.jsx)(Pc.MapTilePurchase.PURCHASE_STATUS, {
                    hash: `${wS[wS.InsufficientPermits]}${wS[wS.InsufficientFunds]}`
                })
            }) : (0, z.jsx)("div", {
                className: boe.problem,
                children: (0, z.jsx)(Pc.MapTilePurchase.PURCHASE_STATUS, {
                    hash: wS[e]
                })
            })
        }

        function Coe(e) {
            switch (e) {
            case wS.NoSelection:
                return (0, z.jsx)(Pc.MapTilePurchase.PURCHASE_STATUS_TOOLTIP, {
                    hash: wS[wS.NoSelection]
                });
            case wS.InsufficientPermits | wS.InsufficientFunds:
                return (0, z.jsx)(Pc.MapTilePurchase.PURCHASE_STATUS_TOOLTIP, {
                    hash: `${wS[wS.InsufficientPermits]}${wS[wS.InsufficientFunds]}`
                });
            case wS.InsufficientPermits:
                return (0, z.jsx)(Pc.MapTilePurchase.PURCHASE_STATUS_TOOLTIP, {
                    hash: wS[wS.InsufficientPermits]
                });
            case wS.InsufficientFunds:
                return (0, z.jsx)(Pc.MapTilePurchase.PURCHASE_STATUS_TOOLTIP, {
                    hash: wS[wS.InsufficientFunds]
                })
            }
        }
        X.add("game-ui/game/components/map-tile-purchase-panel/map-tile-purchase-panel.tsx", {
            get MapTilePurchasePanel() {
                return Eoe
            },
            set MapTilePurchasePanel(e) {
                Eoe = e
            }
        });
        let Noe = {
            "button-row": "button-row_Idj",
            buttonRow: "button-row_Idj"
        };
        X.add("game-ui/common/input/button/button-row.module.scss", {
            get classes() {
                return Noe
            },
            set classes(e) {
                Object.assign(Noe, e)
            }
        });
        const woe = Noe;
        var Ooe = ({
            className: e,
            children: t
        }) => (0, z.jsx)("div", {
            className: Zu()(woe.buttonRow, e),
            children: t
        });
        X.add("game-ui/common/input/button/button-row.tsx", {
            get ButtonRow() {
                return Ooe
            },
            set ButtonRow(e) {
                Ooe = e
            }
        });
        let Poe = {
            "milestone-trophy-animation": "milestone-trophy-animation_ZMt",
            milestoneTrophyAnimation: "milestone-trophy-animation_ZMt",
            waterdrop: "waterdrop_Qpf",
            scale: "scale_v4R",
            MILESTONE_WATERDROP_FADE: "MILESTONE_WATERDROP_FADE_WQi",
            milestoneWaterdropFade: "MILESTONE_WATERDROP_FADE_WQi",
            two: "two_RoL",
            three: "three_pjZ",
            trophy: "trophy_RwE"
        };
        X.add("game-ui/game/components/progression/milestone-unlock-event-panel/milestone-trophy-animation.module.scss", {
            get classes() {
                return Poe
            },
            set classes(e) {
                Object.assign(Poe, e)
            }
        });
        const Loe = Poe;
        var Aoe = ({
            className: e
        }) => (0, z.jsxs)("div", {
            className: Zu()(Loe.milestoneTrophyAnimation, e),
            children: [(0, z.jsx)("div", {
                className: Loe.waterdrop
            }), (0, z.jsx)("div", {
                className: Zu()(Loe.waterdrop, Loe.two)
            }), (0, z.jsx)("div", {
                className: Zu()(Loe.waterdrop, Loe.three)
            }), (0, z.jsx)("img", {
                src: "Media/Game/Icons/Trophy.svg",
                className: Loe.trophy
            })]
        });
        X.add("game-ui/game/components/progression/milestone-unlock-event-panel/milestone-trophy-animation.tsx", {
            get MilestoneTrophyAnimation() {
                return Aoe
            },
            set MilestoneTrophyAnimation(e) {
                Aoe = e
            }
        });
        let Moe = {
            "milestone-unlock-event-panel": "milestone-unlock-event-panel_zd2",
            milestoneUnlockEventPanel: "milestone-unlock-event-panel_zd2",
            title: "title_K9M",
            "title-primary": "title-primary_m30",
            titlePrimary: "title-primary_m30",
            "title-secondary": "title-secondary_mRY",
            titleSecondary: "title-secondary_mRY",
            header: "header_Uqs",
            "header-layer": "header-layer_ChU",
            headerLayer: "header-layer_ChU",
            cityscape: "cityscape_b4P",
            trophy: "trophy_Q30",
            "city-title": "city-title_U_b",
            cityTitle: "city-title_U_b",
            description: "description_Iei",
            "rewards-label": "rewards-label_q85",
            rewardsLabel: "rewards-label_q85",
            rewards: "rewards_cr_",
            "reward-field": "reward-field_v6Q",
            rewardField: "reward-field_v6Q",
            actions: "actions_YbO",
            "button-label": "button-label_VUl",
            buttonLabel: "button-label_VUl",
            "button-container": "button-container_uMR",
            buttonContainer: "button-container_uMR"
        };
        X.add("game-ui/game/components/progression/milestone-unlock-event-panel/milestone-unlock-event-panel.module.scss", {
            get classes() {
                return Moe
            },
            set classes(e) {
                Object.assign(Moe, e)
            }
        });
        const Roe = Moe,
            koe = new Eg("continueButton");
        var Doe = ({
            focusKey: e,
            milestone: t,
            onClose: n
        }) => {
            const s = (0, Y.useCallback)((() => {
                    n(), Yb(Db.Milestones)
                }), [n]),
                i = ll(hN, t) ?? sN,
                [a, o] = (0, Y.useState)(!1),
                [r, l] = (0, Y.useState)(!1);
            return (0, Y.useEffect)((() => {
                lp(rp.milestoneEvent)
            }), []), (0, z.jsx)("div", {
                className: Roe.milestoneUnlockEventPanel,
                children: (0, z.jsx)(Dg, {
                    onAction: n,
                    children: (0, z.jsxs)(tp, {
                        focusKey: e,
                        initialFocused: koe,
                        children: [(0, z.jsxs)("div", {
                            className: Roe.title,
                            children: [(0, z.jsx)("div", {
                                className: Roe.titlePrimary,
                                children: (0, z.jsx)(Pc.Progression.MILESTONE_UNLOCK_PANEL_TITLE_PRIMARY, {
                                    INDEX: (0, z.jsx)(Gc, {
                                        value: i.index,
                                        unit: Oc.Integer
                                    })
                                })
                            }), (0, z.jsx)("div", {
                                className: Roe.titleSecondary,
                                children: (0, z.jsx)(Pc.Progression.MILESTONE_UNLOCK_PANEL_TITLE_SECONDARY, {})
                            })]
                        }), (0, z.jsxs)("div", {
                            className: Roe.header,
                            children: [(0, z.jsx)("img", {
                                src: i.image,
                                className: Roe.cityscape
                            }), (0, z.jsx)(Aoe, {
                                className: Roe.trophy
                            })]
                        }), (0, z.jsx)("div", {
                            className: Roe.cityTitle,
                            children: (0, z.jsx)(Pc.Progression.MILESTONE_NAME, {
                                index: i.index
                            })
                        }), (0, z.jsx)("div", {
                            className: Roe.description,
                            children: (0, z.jsx)(zf, {
                                children: (0, z.jsx)(Pc.Progression.MILESTONE_DESCRIPTION, {
                                    index: i.index
                                })
                            })
                        }), (0, z.jsx)("div", {
                            className: Roe.rewardsLabel,
                            children: (0, z.jsx)(Pc.Progression.MILESTONE_REWARDS_LABEL, {})
                        }), (0, z.jsxs)("div", {
                            className: Roe.rewards,
                            children: [i.reward > 0 && (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.Progression.REWARD_FIELD_LABEL, {}),
                                children: (0, z.jsx)(T4, {
                                    icon: "Media/Game/Icons/Money.svg",
                                    className: Roe.rewardField,
                                    children: (0, z.jsx)(Gc, {
                                        value: i.reward,
                                        unit: Oc.Money
                                    })
                                })
                            }), i.devTreePoints > 0 && (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.Progression.DEVELOPMENT_POINTS_FIELD_LABEL, {}),
                                children: (0, z.jsx)(T4, {
                                    icon: "Media/Game/Icons/DevPoint.svg",
                                    className: Roe.rewardField,
                                    children: (0, z.jsx)(Gc, {
                                        value: i.devTreePoints,
                                        unit: Oc.Integer,
                                        signed: !0
                                    })
                                })
                            }), i.mapTiles > 0 && (0, z.jsx)(Tg, {
                                tooltip: (0, z.jsx)(Pc.Progression.MAP_TILES_FIELD_LABEL, {}),
                                children: (0, z.jsx)(T4, {
                                    icon: "Media/Game/Icons/ExpansionPermit.svg",
                                    className: Roe.rewardField,
                                    children: (0, z.jsx)(Gc, {
                                        value: i.mapTiles,
                                        unit: Oc.Integer,
                                        signed: !0
                                    })
                                })
                            })]
                        }), (0, z.jsxs)(Ooe, {
                            className: Roe.actions,
                            children: [(0, z.jsx)(Ah, {
                                onFocusChange: o,
                                children: (0, z.jsx)(Gp, {
                                    disableHint: !0,
                                    theme: AE,
                                    onSelect: s,
                                    children: (0, z.jsxs)("div", {
                                        className: Roe.buttonContainer,
                                        children: [(0, z.jsx)(Pf, {
                                            action: "Select",
                                            active: a
                                        }), (0, z.jsx)("div", {
                                            className: Roe.buttonLabel,
                                            children: (0, z.jsx)(Pc.Progression.PROGRESSION_PANEL_BUTTON, {})
                                        })]
                                    })
                                })
                            }), (0, z.jsx)(Ah, {
                                onFocusChange: l,
                                children: (0, z.jsx)(Gp, {
                                    disableHint: !0,
                                    focusKey: koe,
                                    theme: AE,
                                    onSelect: n,
                                    children: (0, z.jsxs)("div", {
                                        className: Roe.buttonContainer,
                                        children: [(0, z.jsx)(Pf, {
                                            action: "Select",
                                            active: r
                                        }), (0, z.jsx)("div", {
                                            className: Roe.buttonLabel,
                                            children: (0, z.jsx)(Pc.Common.CLOSE, {})
                                        })]
                                    })
                                })
                            })]
                        })]
                    })
                })
            })
        };
        X.add("game-ui/game/components/progression/milestone-unlock-event-panel/milestone-unlock-event-panel.tsx", {
            get MilestoneUnlockEventPanel() {
                return Doe
            },
            set MilestoneUnlockEventPanel(e) {
                Doe = e
            }
        });
        let Foe = {
            "signature-unlock-event-panel": "signature-unlock-event-panel_f8P",
            signatureUnlockEventPanel: "signature-unlock-event-panel_f8P",
            image: "image_Pwi",
            content: "content_vd9",
            title: "title_vLU",
            description: "description_cRG",
            stats: "stats_FqV",
            "stat-field": "stat-field_yOa",
            statField: "stat-field_yOa",
            actions: "actions_kVJ",
            "button-label": "button-label_MBu",
            buttonLabel: "button-label_MBu",
            "button-container": "button-container_qHR",
            buttonContainer: "button-container_qHR"
        };
        X.add("game-ui/game/components/progression/signature-unlock-event-panel/signature-unlock-event-panel.module.scss", {
            get classes() {
                return Foe
            },
            set classes(e) {
                Object.assign(Foe, e)
            }
        });
        const Uoe = Foe;
        var Boe = ({
            focusKey: e,
            entities: t,
            onClose: n
        }) => {
            const [s, i] = (0, Y.useState)(0), a = t.length > s ? t[s] : Lx, o = ll(Rx, a) ?? Dx, [r, l] = (0, Y.useState)(!1);
            return (0, Y.useEffect)((() => lp(rp.signatureBuildingEvent)), []), (0, Y.useEffect)((() => {
                t.length <= s && (t.length > 0 ? i(0) : n())
            }), [s, t.length, n]), (0, z.jsx)(YT, {
                focusKey: e,
                theme: XT,
                header: (0, z.jsx)(QT, {
                    icon: "Media/Game/Icons/ZoneSignature.svg",
                    children: (0, z.jsx)(Pc.Progression.BUILDING_UNLOCK_EVENT_PANEL_TITLE, {})
                }),
                className: Uoe.signatureUnlockEventPanel,
                onClose: n,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)(qp, {
                        src: o?.preview ?? "",
                        className: Uoe.image
                    }), (0, z.jsxs)("div", {
                        className: Uoe.content,
                        children: [(0, z.jsx)("div", {
                            className: Uoe.title,
                            children: (0, z.jsx)(Tc, {
                                id: o.titleId
                            })
                        }), o.descriptionId && (0, z.jsx)("div", {
                            className: Uoe.description,
                            children: (0, z.jsx)(Tc, {
                                id: o.descriptionId
                            })
                        }), (0, z.jsx)("div", {
                            className: Uoe.stats,
                            children: null != o.constructionCost && (0, z.jsx)(T4, {
                                label: (0, z.jsx)(Pc.Properties.CONSTRUCTION_COST, {}),
                                className: Uoe.statField,
                                children: (0, z.jsx)(Gc, {
                                    value: d9(o, "max"),
                                    unit: o.constructionCost.unit
                                })
                            })
                        }), (0, z.jsx)(Ooe, {
                            className: Uoe.actions,
                            children: (0, z.jsx)(Ah, {
                                onFocusChange: l,
                                children: (0, z.jsx)(Gp, {
                                    disableHint: !0,
                                    theme: AE,
                                    onSelect: n,
                                    children: (0, z.jsxs)("div", {
                                        className: Uoe.buttonContainer,
                                        children: [(0, z.jsx)(Pf, {
                                            action: "Select",
                                            active: r
                                        }), (0, z.jsx)("div", {
                                            className: Uoe.buttonLabel,
                                            children: (0, z.jsx)(Pc.Common.OK, {})
                                        })]
                                    })
                                })
                            })
                        })]
                    })]
                })
            })
        };
        X.add("game-ui/game/components/progression/signature-unlock-event-panel/signature-unlock-event-panel.tsx", {
            get SignatureUnlockEventPanel() {
                return Boe
            },
            set SignatureUnlockEventPanel(e) {
                Boe = e
            }
        });
        const Goe = function (e) {
            const [t, n] = (0, Y.useState)();
            return (0, Y.useEffect)((() => {
                let t = 0;
                const s = () => {
                    e.current ? n(e.current.getBoundingClientRect()) : n(void 0), t = window.requestAnimationFrame(s)
                };
                return setTimeout((() => s()), 0), () => window.cancelAnimationFrame(t)
            }), [e]), t
        };
        X.add("game-ui/common/hooks/use-bounding-client-rect.ts", {});
        let Voe = {
            scrollable: "scrollable_A57",
            value: "value_GiO",
            button: "button_kAx"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/developer-section.module.scss", {
            get classes() {
                return Voe
            },
            set classes(e) {
                Object.assign(Voe, e)
            }
        });
        const Hoe = Voe;
        let Koe = {
            section: "section_Czw section_gUk",
            "title-bar": "title-bar_tE1 title-bar_wU9",
            titleBar: "title-bar_tE1 title-bar_wU9",
            expandable: "expandable_HXj",
            title: "title_dyN title_bwV",
            content: "content_YjM content_owQ"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/section.module.scss", {
            get classes() {
                return Koe
            },
            set classes(e) {
                Object.assign(Koe, e)
            }
        });
        const Woe = Koe;
        var zoe = ({
            label: e,
            value: t,
            max: n
        }) => (0, z.jsx)(c0, {
            header: (0, z.jsx)(Kee, {
                children: e
            }),
            theme: Woe,
            className: Hoe.capacityInfo,
            children: (0, z.jsx)(Vee, {
                progress: t,
                max: n,
                children: `${t}/${n}`
            })
        });
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/capacity-info.tsx", {
            get CapacityInfo() {
                return zoe
            },
            set CapacityInfo(e) {
                zoe = e
            }
        });
        var Yoe = ({
            label: e,
            value: t,
            target: n
        }) => {
            const s = (0, Y.useCallback)((() => {
                null != n && Tw(n)
            }), [n]);
            return (0, z.jsx)(c0, {
                className: Hoe.genericInfo,
                theme: Woe,
                header: (0, z.jsx)(Kee, {
                    children: e
                }),
                children: (0, z.jsx)(Gp, {
                    className: Zu()(Hoe.button, null != n && Hoe.link),
                    disabled: null == n || 0 === n?.index,
                    onSelect: s,
                    children: t
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/generic-info.tsx", {
            get GenericInfo() {
                return Yoe
            },
            set GenericInfo(e) {
                Yoe = e
            }
        });
        var $oe = ({
            label: e,
            list: t
        }) => (0, z.jsx)(Hee, {
            header: (0, z.jsx)(Kee, {
                children: e
            }),
            theme: Woe,
            className: Hoe.infoList,
            transition: null,
            children: (0, z.jsx)(tp, {
                children: t.map(((e, t) => (0, z.jsx)(qoe, {
                    item: e
                }, t)))
            })
        });
        const qoe = ({
            item: e
        }) => {
            const t = (0, Y.useCallback)((() => {
                null != e.entity && Tw(e.entity)
            }), [e.entity]);
            return (0, z.jsx)(Gp, {
                className: Zu()(Hoe.button, null != e?.entity && Hoe.link),
                disabled: null == e?.entity || 0 === e?.entity.index,
                onSelect: t,
                children: e.text
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/info-list.tsx", {
            get InfoList() {
                return $oe
            },
            set InfoList(e) {
                $oe = e
            }
        });
        var Xoe = ({
                focusKey: e,
                subsections: t
            }) => (0, z.jsx)(ff, {
                className: Hoe.scrollable,
                children: (0, z.jsx)(tp, {
                    focusKey: e,
                    children: (0, z.jsx)($A, {
                        components: Qoe,
                        data: t
                    })
                })
            }),
            Qoe = {
                [aw.GenericInfo]: Yoe,
                [aw.CapacityInfo]: zoe,
                [aw.InfoList]: $oe
            };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/developer-section/developer-section.tsx", {
            get DeveloperSection() {
                return Xoe
            },
            set DeveloperSection(e) {
                Xoe = e
            },
            get developerSubsectionComponents() {
                return Qoe
            },
            set developerSubsectionComponents(e) {
                Qoe = e
            }
        });
        let Zoe = {
            "developer-info-panel": "developer-info-panel_GEQ",
            developerInfoPanel: "developer-info-panel_GEQ"
        };
        X.add("game-ui/game/components/selected-info-panel/developer-info-panel.module.scss", {
            get classes() {
                return Zoe
            },
            set classes(e) {
                Object.assign(Zoe, e)
            }
        });
        const Joe = Zoe;
        var ere = ({
            onClose: e,
            developerInfoSection: t
        }) => {
            const n = sl(PO),
                s = (0, Y.useRef)(null),
                i = function (e) {
                    const t = sl(dw),
                        n = Um(),
                        s = Hm();
                    if (e && t && n) return {
                        x: Math.trunc(Od(t.x * n.x + tre * s, 0, n.x - e.width - 70)),
                        y: Math.trunc(Od((1 - t.y) * n.y + tre * s, 90, n.y - e.height - 120))
                    };
                    return
                }(Goe(s)),
                a = (0, Y.useCallback)((() => {
                    e()
                }), [e]);
            return (0, z.jsx)(z.Fragment, {
                children: "Default Tool" === n.id && (0, z.jsx)(YT, {
                    ref: s,
                    className: Joe.developerInfoPanel,
                    style: nre(i),
                    onClose: a,
                    header: (0, z.jsx)(QT, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.DEVELOPER_INFO_TITLE, {})
                    }),
                    children: (0, z.jsx)(Xoe, {
                        ...t
                    })
                })
            })
        };
        const tre = 10;

        function nre(e) {
            return e ? {
                left: e.x + "px",
                top: e.y + "px"
            } : {
                visibility: "hidden"
            }
        }
        X.add("game-ui/game/components/selected-info-panel/developer-info-panel.tsx", {
            get DeveloperInfoPanel() {
                return ere
            },
            set DeveloperInfoPanel(e) {
                ere = e
            }
        });
        let sre = {
            header: "header_SUX header_H_U header_Bpo child-opacity-transition_nkS",
            content: "content_KYp content_XD5 content_AD7 child-opacity-transition_nkS",
            footer: "footer_IlY footer_Pa9 footer_pD5 child-opacity-transition_nkS",
            title: "title_tEn title_SVH title_zQN"
        };
        X.add("game-ui/game/themes/selected-info-panel.module.scss", {
            get classes() {
                return sre
            },
            set classes(e) {
                Object.assign(sre, e)
            }
        });
        const ire = sre,
            are = "DistrictsSection";
        var ore = $r(are, "selecting"),
            rre = el(are, "removeDistrict"),
            lre = Jr(are, "toggleSelectionTool"),
            cre = Jr(are, "toggleDistrictTool");
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/districts-section/districts-section-bindings.ts", {
            get selecting() {
                return selecting
            },
            set selecting(e) {
                selecting = e
            },
            get removeDistrict() {
                return rre
            },
            set removeDistrict(e) {
                rre = e
            },
            get toggleSelectionTool() {
                return lre
            },
            set toggleSelectionTool(e) {
                lre = e
            },
            get toggleDistrictTool() {
                return cre
            },
            set toggleDistrictTool(e) {
                cre = e
            }
        });
        const ure = 18,
            dre = 26;

        function mre(e, t, n, s, i, a) {
            const o = fre(s, i, n.position),
                r = 12 * a,
                l = (Ire / 2 + Ere) * a,
                c = o.x + l,
                u = o.y + l;
            return (e - c) * (e - c) + (t - u) * (t - u) <= r * r
        }

        function hre(e, t, n, s, i, a, o, r, l, c) {
            const u = 12 * c,
                d = 2 * c,
                m = fre(s, i, t.position),
                h = l ? 1.25 * u : r ? 1.125 * u : u,
                g = l ? 1.25 * d : r ? 1.125 * d : d,
                p = (Ire / 2 + Ere) * c,
                f = n > 0 ? Math.min(t.cargo / n, 1) : 0,
                x = Math.sqrt(f) * (h - g),
                v = {
                    r: o.r,
                    g: o.g,
                    b: o.b,
                    a: f
                },
                _ = WC(a),
                b = WC(v);
            e.beginPath(), e.arc(m.x + p, m.y + p, h, 2 * Math.PI, 0, !1), e.closePath(), e.fillStyle = _, e.fill(), e.beginPath(), e.arc(m.x + p, m.y + p, x, 2 * Math.PI, 0, !1), e.closePath(), e.fillStyle = b, e.fill()
        }

        function gre(e, t, n, s, i, a, o, r) {
            const l = fre(a, o, n.position),
                c = xre(r, s, i),
                u = xre(r, s, i),
                d = (Ire / 2 + Ere) * r;
            return function (e, t, n, s, i, a, o) {
                let r = e - n,
                    l = t - s;
                const c = (a * a + o * o) / 4;
                if (r * r + l * l > c) return !1;
                const u = Math.sin(-i),
                    d = Math.cos(-i);
                return r = r * d - l * u, l = r * u + l * d, r += n, l += s, r >= n - a / 2 && r <= n + a / 2 && l >= s - o / 2 && l <= s + a / 2
            }(e, t, l.x + d, l.y + d, l.z, c, u)
        }

        function pre(e, t, n, s, i, a, o, r, l) {
            const c = 2 * l,
                u = 3 * l,
                d = fre(n, s, t.position),
                m = xre(l, r, o),
                h = function (e, t, n) {
                    return dre * e * (t ? 1.25 : n ? 1.125 : 1)
                }(l, r, o),
                g = (Ire / 2 + Ere) * l,
                p = m / 2,
                f = h / 2,
                x = t.capacity > 0 ? t.cargo / t.capacity : 0,
                v = 6 * Math.min(x, 1),
                _ = r ? 1.25 * c : o ? 1.125 * c : c,
                b = r ? 1.25 * u : o ? 1.125 * u : u,
                T = _ / 2 + b,
                E = _ + 2 * b,
                I = WC(i),
                y = WC(a);
            e.save(), e.translate(d.x + g, d.y + g), e.rotate(d.z), e.fillStyle = I, e.fillRect(-p, -f, m, h), v > 0 && (e.beginPath(), e.moveTo(-T, -E), e.arc(-T, -E, b, 0, 2 * Math.PI), v > 1 && (e.moveTo(T, -E), e.arc(T, -E, b, 0, 2 * Math.PI)), v > 2 && (e.moveTo(-T, 0), e.arc(-T, 0, b, 0, 2 * Math.PI)), v > 3 && (e.moveTo(T, 0), e.arc(T, 0, b, 0, 2 * Math.PI)), v > 4 && (e.moveTo(-T, E), e.arc(-T, E, b, 0, 2 * Math.PI)), v > 5 && (e.moveTo(T, E), e.arc(T, E, b, 0, 2 * Math.PI)), e.fillStyle = y, e.fill()), e.restore()
        }

        function fre(e, t, n) {
            const s = e * Math.PI,
                i = t - 2 * e,
                a = 2 * s + 2 * i,
                o = s / a,
                r = i / a;
            if (n < o / 2) {
                const t = Math.PI * n / o;
                return {
                    x: e + e * Math.sin(t),
                    y: e - e * Math.cos(t),
                    z: t + Math.PI / 2
                }
            }
            if ((n -= o / 2) < r) return {
                x: 2 * e,
                y: e + n / r * i,
                z: Math.PI
            };
            if ((n -= r) < o) {
                const t = Math.PI * (n / o + .5);
                return {
                    x: e + e * Math.sin(t),
                    y: e - e * Math.cos(t) + i,
                    z: t + Math.PI / 2
                }
            }
            if ((n -= o) < r) return {
                x: 0,
                y: e + i - n / r * i,
                z: 0
            };
            n -= r;
            const l = Math.PI * (n / o + 1.5);
            return {
                x: e + e * Math.sin(l),
                y: e - e * Math.cos(l),
                z: l + Math.PI / 2
            }
        }

        function xre(e, t, n) {
            return ure * e * (t ? 1.25 : n ? 1.125 : 1)
        }

        function vre(e, t, n, s, i, a) {
            a.broken ? function (e, t, n, s, i, a, o, r) {
                const l = s * Math.PI,
                    c = i - 2 * s,
                    u = 2 * l + 2 * c,
                    d = u / Math.max(2 * Math.floor(u / (2 * r)), 2) / u,
                    m = 2 * d;
                for (let r = a - a % m; r < o; r += m) {
                    _re(e, t, n, s, i, Math.max(r, a), Math.min(r + d, o))
                }
            }(e, t, n, s, i, a.start, a.end, 10) : _re(e, t, n, s, i, a.start, a.end)
        }

        function _re(e, t, n, s, i, a, o) {
            if (o <= a) return;
            const r = s * Math.PI,
                l = i - 2 * s,
                c = 2 * r + 2 * l,
                u = r / c,
                d = l / c,
                m = o - a;
            o = (a = (a + u / 2) % 1) + m;
            let h = !0;
            for (; !(!(o > 0) || (a < u && (bre(e, t, n - l / 2, Math.PI, s, a / u, o / u, h), h = !1), a -= u, (o -= u) < 0) || (o > 0 && a < d && (Tre(e, t + s, n, -l, a / d, o / d, h), h = !1), a -= d, (o -= d) < 0) || (a < u && (bre(e, t, n + l / 2, 0, s, a / u, o / u, h), h = !1), a -= u, (o -= u) < 0));) o > 0 && a < d && (Tre(e, t - s, n, l, a / d, o / d, h), h = !1), a -= d, o -= d
        }

        function bre(e, t, n, s, i, a, o, r) {
            const l = Math.PI * Math.max(a, 0) + s,
                c = Math.max(Math.PI * Math.min(o, 1), a) + s;
            r && e.moveTo(t + i * Math.cos(l), n + i * Math.sin(l)), e.arc(t, n, i, l, c)
        }

        function Tre(e, t, n, s, i, a, o) {
            if (o) {
                const a = -s * Od(i - .5, -.5, .5);
                e.moveTo(t, n + a)
            }
            const r = -s * Od(a - .5, -.5, .5);
            e.lineTo(t, n + r)
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-visualizer-section/items.tsx", {
            get mouseOverStop() {
                return mre
            },
            set mouseOverStop(e) {
                mre = e
            },
            get drawStop() {
                return hre
            },
            set drawStop(e) {
                hre = e
            },
            get mouseOverVehicle() {
                return gre
            },
            set mouseOverVehicle(e) {
                gre = e
            },
            get drawVehicle() {
                return pre
            },
            set drawVehicle(e) {
                pre = e
            }
        }), X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-visualizer-section/segments.tsx", {
            get segment() {
                return vre
            },
            set segment(e) {
                vre = e
            }
        });
        var Ere = 20,
            Ire = 8;
        const yre = GC(255, 255, 255, .75),
            jre = GC(255, 255, 255, 1);
        var Sre = Y.memo((function ({
            canvasHeight: e,
            canvasWidth: t,
            color: n,
            stops: s,
            vehicles: i,
            segments: a,
            stopCapacity: o
        }) {
            const [r, l] = (0, Y.useState)(null), [c, u] = (0, Y.useState)(null), d = (0, Y.useRef)(null), m = Hm(), h = t, g = e, p = h / 2, f = Ere * m, x = Ire * m, v = (h - x - 2 * f) / 2, _ = g - 2 * f - x, b = sl(rw), T = (0, Y.useCallback)((e => {
                if (null == d.current) return;
                const t = d.current.getBoundingClientRect(),
                    n = e.clientX - t.left,
                    a = e.clientY - t.top;
                for (let e = 0; e < s.length; e++) {
                    const t = s[e];
                    if (mre(n, a, t, v, _, m)) return void Tw(t.entity)
                }
                for (let e = 0; e < i.length; e++) {
                    const t = i[e];
                    if (gre(n, a, t, !!c && c.entity === t.entity, !!r && r.entity === t.entity, v, _, m)) return void Tw(t.entity)
                }
            }), [r, _, v, m, c, s, i]), E = (0, Y.useCallback)((e => {
                if (null == d.current) return;
                const t = d.current.getBoundingClientRect(),
                    n = e.clientX - t.left,
                    a = e.clientY - t.top;
                for (let e = 0; e < s.length; e++) {
                    const t = s[e];
                    if (mre(n, a, t, v, _, m)) return void l((e => (e?.entity.index !== t.entity.index && lp(rp.hoverItem), t)))
                }
                for (let e = 0; e < i.length; e++) {
                    const t = i[e],
                        s = !!c && c.entity === t.entity,
                        o = !!r && r.entity === t.entity;
                    if (gre(n, a, t, s, o, v, _, m)) return void l((e => (e?.entity.index !== t.entity.index && lp(rp.hoverItem), t)))
                }
                l(null)
            }), [r, _, v, m, c, s, i]), I = (0, Y.useCallback)((() => {
                l(null)
            }), []);
            return (0, Y.useEffect)((() => {
                const e = i.find((e => Ur(e.entity, b))) || s.find((e => Ur(e.entity, b)));
                u(void 0 !== e ? t => (t?.entity.index !== e.entity.index && lp(rp.selectItem), e) : null)
            }), [b, s, i]), (0, Y.useEffect)((() => {
                if (!d.current) return;
                const e = d.current.getContext("2d");
                if (e.clearRect(0, 0, h, g), e.save(), e.beginPath(), a && a.length > 0)
                    for (let t = 0; t < a.length; t++) vre(e, h / 2, g / 2, v, _, a[t]);
                if (e.lineWidth = x, e.strokeStyle = WC(Cre(null, c, r, n)), e.stroke(), i && i.length > 0)
                    for (let t = 0; t < i.length; t++) {
                        const s = i[t],
                            a = Cre(s, c, r, n),
                            o = Cre(s, c, r, yre);
                        pre(e, s, v, _, a, o, Ur(r?.entity, s.entity), Ur(b, s.entity), m)
                    }
                if (e.setTransform(1, 0, 0, 1, 0, 0), s && s.length > 0)
                    for (let t = 0; t < s.length; t++) {
                        const i = s[t],
                            a = Cre(i, c, r, jre),
                            l = Cre(i, c, r, n);
                        hre(e, i, o, v, _, a, l, Ur(r?.entity, i.entity), Ur(b, i.entity), m)
                    }
            }), [n, g, r, _, v, f, p, m, a, b, o, s, x, i, h, c]), (0, z.jsx)(ZB, {
                tooltip: r && (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(Ku, {
                        value: r.name
                    }), (0, z.jsx)(Ty, {
                        left: r.isCargo ? (0, z.jsx)(Pc.SelectedInfoPanel.CARGO_TOOLTIP, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.PASSENGERS_TOOLTIP, {}),
                        right: r.__Type === jw ? (0, z.jsx)(Gc, {
                            value: r.cargo,
                            unit: r.isCargo ? Oc.Weight : Oc.Integer
                        }) : (0, z.jsx)(cu, {
                            value: r.cargo,
                            total: r.capacity,
                            unit: r.isCargo ? Oc.Weight : Oc.Integer
                        })
                    })]
                }),
                children: (0, z.jsx)("canvas", {
                    ref: d,
                    width: h,
                    height: g,
                    onClick: T,
                    onMouseMove: E,
                    onMouseLeave: I
                })
            })
        }), ((e, t) => {
            const {
                vehicles: n,
                stops: s,
                ...i
            } = e, {
                vehicles: a,
                stops: o,
                ...r
            } = t;
            return function (e, t) {
                if (e.length !== t.length) return !1;
                for (let n = 0; n < t.length; n++) {
                    if (t[n].position !== e[n].position) return !1;
                    if (t[n].cargo !== e[n].cargo) return !1;
                    if (t[n].capacity !== e[n].capacity) return !1;
                    if (!Ur(t[n].entity, e[n].entity)) return !1;
                    if (!Yu(t[n].name, e[n].name)) return !1
                }
                return !0
            }(n, a) && function (e, t) {
                if (e.length !== t.length) return !1;
                for (let n = 0; n < t.length; n++) {
                    if (t[n].position !== e[n].position) return !1;
                    if (t[n].cargo !== e[n].cargo) return !1;
                    if (!Ur(t[n].entity, e[n].entity)) return !1;
                    if (!Yu(t[n].name, e[n].name)) return !1
                }
                return !0
            }(s, o) && Kr(i, r, 3)
        }));

        function Cre(e, t, n, s) {
            return null == t || Ur(e?.entity, t.entity) ? null == n || Ur(e?.entity, n.entity) ? s : Nre(-.35, s) : null != n && Ur(e?.entity, n.entity) ? s : Nre(-.5, s)
        }

        function Nre(e, t) {
            const [n, s, i, a] = [t.r, t.g, t.b, t.a], o = e < 0, r = o ? 0 : e, l = o ? 1 + e : 1 - e;
            return {
                r: n * l + r,
                g: s * l + r,
                b: i * l + r,
                a
            }
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-visualizer-section/line-visualizer-canvas.tsx", {
            get LINE_VISUALIZER_PADDING() {
                return Ere
            },
            set LINE_VISUALIZER_PADDING(e) {
                Ere = e
            },
            get LINE_VISUALIZER_TRACKWIDTH() {
                return Ire
            },
            set LINE_VISUALIZER_TRACKWIDTH(e) {
                Ire = e
            },
            get LineVisualizerCanvas() {
                return Sre
            },
            set LineVisualizerCanvas(e) {
                Sre = e
            }
        });
        let wre = {
            "line-visualizer-section": "line-visualizer-section_MKT",
            lineVisualizerSection: "line-visualizer-section_MKT",
            "gamepad-active": "gamepad-active_YL5",
            gamepadActive: "gamepad-active_YL5",
            "track-container": "track-container_c4L",
            trackContainer: "track-container_c4L"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-visualizer-section/line-visualizer-section.module.scss", {
            get classes() {
                return wre
            },
            set classes(e) {
                Object.assign(wre, e)
            }
        });
        const Ore = wre;
        var Pre = ({
            focusKey: e,
            stops: t,
            className: n,
            ...s
        }) => {
            const i = Dm(),
                a = (0, Y.useRef)(null),
                o = Hd(hm(a) ?? Ad);
            return (0, z.jsx)(YT, {
                focusKey: e,
                header: (0, z.jsx)(QT, {
                    children: t.find((e => e.isCargo)) ? (0, z.jsx)(Pc.SelectedInfoPanel.ROUTE, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.LINE, {})
                }),
                className: Zu()(Ore.lineVisualizerSection, i && Ore.gamepadActive, n),
                children: (0, z.jsx)("div", {
                    ref: a,
                    className: Ore.trackContainer,
                    children: o.x > 0 && o.y > 0 && (0, z.jsx)(Sre, {
                        canvasWidth: o.x,
                        canvasHeight: o.y,
                        stops: t,
                        ...s
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-visualizer-section/line-visualizer-section.tsx", {
            get LineVisualizerSection() {
                return Pre
            },
            set LineVisualizerSection(e) {
                Pre = e
            }
        });
        let Lre = {
            "attractiveness-factors": "attractiveness-factors_CDA",
            attractivenessFactors: "attractiveness-factors_CDA",
            positive: "positive_KO_",
            negative: "negative_gWG"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/attractiveness-section/attractiveness-section.module.scss", {
            get classes() {
                return Lre
            },
            set classes(e) {
                Object.assign(Lre, e)
            }
        });
        const Are = Lre;
        var Mre = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            attractiveness: s,
            baseAttractiveness: i,
            factors: a
        }) => {
            const o = ww(e, t, n);
            return (0, z.jsx)(iy, {
                tooltip: (0, z.jsxs)(z.Fragment, {
                    children: [o && (0, z.jsx)(zf, {
                        text: o
                    }), a.length > 0 && (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(ay, {}), (0, z.jsxs)("div", {
                            className: Are.attractivenessFactors,
                            children: [(0, z.jsx)(Ey, {
                                left: (0, z.jsx)(Pc.SelectedInfoPanel.ATTRACTIVENESS_BASE, {}),
                                right: (0, z.jsx)(Gc, {
                                    value: i,
                                    unit: Oc.Integer
                                })
                            }), a.map(((e, t) => (0, z.jsx)(Ey, {
                                left: (0, z.jsx)(Pc.SelectedInfoPanel.ATTRACTIVENESS_FACTORS, {
                                    hash: e.localeKey
                                }),
                                right: (0, z.jsx)("div", {
                                    className: Jx(Are, e.delta),
                                    children: (0, z.jsx)(Gc, {
                                        value: e.delta,
                                        unit: Oc.Percentage,
                                        signed: !0
                                    })
                                })
                            }, t)))]
                        })]
                    })]
                }),
                children: (0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.ATTRACTIVENESS, {}),
                    right: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.Integer
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/attractiveness-section/attractiveness-section.tsx", {
            get AttractivenessSection() {
                return Mre
            },
            set AttractivenessSection(e) {
                Mre = e
            }
        });
        let Rre = {
            "capacity-bar": "capacity-bar_uEN",
            capacityBar: "capacity-bar_uEN",
            "progress-bar": "progress-bar_AtB",
            progressBar: "progress-bar_AtB",
            excellent: "excellent_cFG",
            good: "good_f9U",
            medium: "medium_P2l",
            bad: "bad_BRS",
            critical: "critical_cqP",
            "progress-bounds": "progress-bounds_D6g",
            progressBounds: "progress-bounds_D6g",
            progress: "progress_EvF",
            label: "label_y0j",
            "progress-label": "progress-label_DqS",
            progressLabel: "progress-label_DqS"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/capacity-bar/capacity-bar.module.scss", {
            get classes() {
                return Rre
            },
            set classes(e) {
                Object.assign(Rre, e)
            }
        });
        const kre = Rre;
        var Dre = ({
            progress: e,
            max: t,
            plain: n = !1,
            invertColorCodes: s = !1,
            children: i,
            className: a
        }) => {
            const o = t > 0 ? 100 * Od(e / t, 0, 1) : 0,
                r = sl(rw);
            return (0, z.jsx)("div", {
                className: Zu()(kre.capacityBar, a),
                children: (0, z.jsx)(Vee, {
                    progress: e,
                    max: t,
                    theme: kre,
                    className: Zu()(!n && Fre(o, s)),
                    children: i
                }, Dr(r))
            })
        };

        function Fre(e, t) {
            return e > 90 ? t ? kre.excellent : kre.critical : e > 80 ? t ? kre.good : kre.bad : e > 50 ? kre.medium : e > 20 ? t ? kre.bad : kre.good : t ? kre.critical : kre.excellent
        }
        X.add("game-ui/game/components/selected-info-panel/shared-components/capacity-bar/capacity-bar.tsx", {
            get CapacityBar() {
                return Dre
            },
            set CapacityBar(e) {
                Dre = e
            }
        });
        var Ure = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            batteryCharge: s,
            batteryCapacity: i,
            flow: a,
            remainingTime: o
        }) => {
            const r = ww(e, t, n),
                l = function (e) {
                    return e < 0 ? (0, z.jsx)(Pc.SelectedInfoPanel.BATTERY_STATE_DISCHARGING, {}) : e > 0 ? (0, z.jsx)(Pc.SelectedInfoPanel.BATTERY_STATE_CHARGING, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.BATTERY_STATE_IDLE, {})
                }(a),
                c = function (e, t) {
                    const n = sl(gO);
                    return e < 0 ? (0, z.jsx)(Pc.SelectedInfoPanel.EMPTY_IN, {
                        DURATION: (0, z.jsx)(Uu, {
                            value: t,
                            daysPerYear: n.daysPerYear
                        })
                    }) : e > 0 ? (0, z.jsx)(Pc.SelectedInfoPanel.FULL_IN, {
                        DURATION: (0, z.jsx)(Uu, {
                            value: t,
                            daysPerYear: n.daysPerYear
                        })
                    }) : ""
                }(a, o);
            return (0, z.jsxs)(iy, {
                tooltip: r && (0, z.jsx)(zf, {
                    text: r
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.ELECTRICITY_BATTERY_STATE, {}),
                    right: l
                }), (0, z.jsx)(Ty, {
                    subRow: !0,
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.ELECTRICITY_BATTERY_FLOW, {}),
                    right: (0, z.jsx)(Gc, {
                        signed: !0,
                        value: a,
                        unit: Oc.Power
                    })
                }), (0, z.jsx)(Ty, {
                    subRow: !0,
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.ELECTRICITY_BATTERY_CHARGE, {}),
                    right: c
                }), (0, z.jsx)(Dre, {
                    progress: s,
                    max: i,
                    invertColorCodes: !0,
                    children: (0, z.jsx)(cu, {
                        value: s,
                        total: i,
                        unit: Oc.Energy
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/battery-section.tsx", {
            get BatterySection() {
                return Ure
            },
            set BatterySection(e) {
                Ure = e
            }
        });
        var Bre = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            comfort: s
        }) => {
            const i = ww(e, n, t);
            return (0, z.jsx)(iy, {
                tooltip: i && (0, z.jsx)(zf, {
                    text: i
                }),
                children: (0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.Properties.COMFORT, {}),
                    right: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.Integer
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/comfort-section.tsx", {
            get ComfortSection() {
                return Bre
            },
            set ComfortSection(e) {
                Bre = e
            }
        });
        let Gre = {
            icon: "icon_BF2",
            concatenator: "concatenator_bTa"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/company-section/company-section.module.scss", {
            get classes() {
                return Gre
            },
            set classes(e) {
                Object.assign(Gre, e)
            }
        });
        const Vre = Gre;
        var Hre = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            companyName: s,
            input1: i,
            input2: a,
            output: o,
            sells: r,
            stores: l,
            customers: c
        }) => {
            const u = ww(e, t, n);
            return (0, z.jsxs)(iy, {
                tooltip: u && (0, z.jsx)(zf, {
                    text: u
                }),
                children: [(0, z.jsx)(Ty, {
                    disableFocus: !0,
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.COMPANY, {}),
                    right: s ? (0, z.jsx)(Ku, {
                        value: s
                    }) : (0, z.jsx)(Pc.Common.NONE, {})
                }), null == s && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.BUILDING_FOR_RENT, {})
                }), (i || a) && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.COMPANY_REQUIRES, {}),
                    right: (0, z.jsxs)(z.Fragment, {
                        children: [i && (0, z.jsx)("img", {
                            src: `Media/Game/Resources/${i}.svg`,
                            className: Vre.icon
                        }), i && (0, z.jsx)(Pc.Resources.TITLE, {
                            hash: i
                        }), a && (0, z.jsx)("div", {
                            className: Vre.concatenator,
                            children: "+"
                        }), a && (0, z.jsx)("img", {
                            src: `Media/Game/Resources/${a}.svg`,
                            className: Vre.icon
                        }), a && (0, z.jsx)(Pc.Resources.TITLE, {
                            hash: a
                        })]
                    })
                }), o && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.COMPANY_PRODUCES, {}),
                    right: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)("img", {
                            src: `Media/Game/Resources/${o}.svg`,
                            className: Vre.icon
                        }), (0, z.jsx)(Pc.Resources.TITLE, {
                            hash: o
                        })]
                    })
                }), r && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.COMPANY_SELLS, {}),
                    right: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)("img", {
                            src: `Media/Game/Resources/${r}.svg`,
                            className: Vre.icon
                        }), (0, z.jsx)(Pc.Resources.TITLE, {
                            hash: r
                        })]
                    })
                }), l && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.COMPANY_STORES, {}),
                    right: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)("img", {
                            src: `Media/Game/Resources/${l}.svg`,
                            className: Vre.icon
                        }), (0, z.jsx)(Pc.Resources.TITLE, {
                            hash: l
                        })]
                    })
                }), c && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.COMPANY_ROOMS, {}),
                    right: (0, z.jsx)(cu, {
                        value: c.x,
                        total: c.y
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/company-section/company-section.tsx", {
            get CompanySection() {
                return Hre
            },
            set CompanySection(e) {
                Hre = e
            }
        });
        var Kre = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            bodyCount: s,
            bodyCapacity: i,
            processingSpeed: a,
            processingCapacity: o
        }) => {
            const r = ww(e, t, n);
            return (0, z.jsxs)(iy, {
                tooltip: r && (0, z.jsx)(zf, {
                    text: r
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: "Cemetery" === e ? (0, z.jsx)(Pc.SelectedInfoPanel.GRAVES_IN_USE, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.DEATHCARE_BODIES, {})
                }), (0, z.jsx)(Dre, {
                    progress: s,
                    max: i,
                    children: (0, z.jsx)(cu, {
                        value: s,
                        total: i
                    })
                }), o > 0 ? (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(yde, {
                        small: !0
                    }), (0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DEATHCARE_PROCESSING_SPEED, {})
                    }), (0, z.jsx)(Dre, {
                        invertColorCodes: !0,
                        progress: a,
                        max: o,
                        children: (0, z.jsx)(cu, {
                            value: a,
                            total: o,
                            unit: Oc.BodiesPerMonth
                        })
                    })]
                }) : void 0]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/deathcare-section.tsx", {
            get DeathcareSection() {
                return Kre
            },
            set DeathcareSection(e) {
                Kre = e
            }
        });
        let Wre = {
            "description-row": "description-row_Xb1 info-row_QQ9 item-focused_FuT",
            descriptionRow: "description-row_Xb1 info-row_QQ9 item-focused_FuT"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/description-row/description-row.module.scss", {
            get classes() {
                return Wre
            },
            set classes(e) {
                Object.assign(Wre, e)
            }
        });
        const zre = Wre;
        var Yre = ({
            children: e
        }) => (0, z.jsx)("div", {
            className: zre.descriptionRow,
            children: e
        });
        X.add("game-ui/game/components/selected-info-panel/shared-components/description-row/description-row.tsx", {
            get DescriptionRow() {
                return Yre
            },
            set DescriptionRow(e) {
                Yre = e
            }
        });
        let $re = {
            button: "button_ibf button_YEx item-states_QjV toggle-states_oKG",
            icon: "icon__uJ icon_vbQ",
            label: "label_KgQ"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/primary-button/section-primary-button.module.scss", {
            get classes() {
                return $re
            },
            set classes(e) {
                Object.assign($re, e)
            }
        });
        const qre = $re;
        let Xre = {
            "info-button": "info-button_n9m",
            infoButton: "info-button_n9m",
            button: "button_hTp",
            label: "label_MAK",
            container: "container_Et5",
            hint: "hint_bps"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-button/info-button.module.scss", {
            get classes() {
                return Xre
            },
            set classes(e) {
                Object.assign(Xre, e)
            }
        });
        const Qre = Xre;
        var Zre = ({
            label: e,
            icon: t,
            selected: n,
            onSelect: s
        }) => {
            const [i, a] = (0, Y.useState)(!1);
            return (0, z.jsx)("div", {
                className: Qre.infoButton,
                children: (0, z.jsx)(Ah, {
                    onFocusChange: a,
                    children: t ? (0, z.jsx)(Gp, {
                        disableHint: !0,
                        selected: n,
                        onSelect: s,
                        onClick: nx,
                        className: Qre.button,
                        theme: qre,
                        children: (0, z.jsxs)("div", {
                            className: Qre.container,
                            children: [(0, z.jsx)(Pf, {
                                action: "Select",
                                active: i,
                                className: Qre.hint
                            }), (0, z.jsxs)("div", {
                                className: Qre.label,
                                children: [(0, z.jsx)("img", {
                                    src: t,
                                    className: qre.icon,
                                    onError: Qp
                                }), e]
                            })]
                        })
                    }) : (0, z.jsx)(Gp, {
                        disableHint: !0,
                        selected: n,
                        onSelect: s,
                        onClick: nx,
                        className: Qre.button,
                        theme: qre,
                        children: (0, z.jsxs)("div", {
                            className: Qre.container,
                            children: [(0, z.jsx)(Pf, {
                                action: "Select",
                                active: i,
                                className: Qre.hint
                            }), (0, z.jsx)("div", {
                                className: Qre.label,
                                children: e
                            })]
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-button/info-button.tsx", {
            get InfoButton() {
                return Zre
            },
            set InfoButton(e) {
                Zre = e
            }
        });
        var Jre = $r("DestroyedBuildingSection", "rebuilding");

        function ele() {
            tl("DestroyedBuildingSection", "toggleRebuild")
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/destroyed-building-section/destroyed-building-section-bindings.ts", {
            get rebuilding() {
                return rebuilding
            },
            set rebuilding(e) {
                rebuilding = e
            },
            get toggleRebuild() {
                return ele
            },
            set toggleRebuild(e) {
                ele = e
            }
        });
        var tle = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            destroyer: s,
            cleared: i,
            progress: a,
            status: o
        }) => {
            const r = ww(e, t, n),
                l = sl(Jre),
                c = (0, Y.useCallback)((() => ele()), []);
            return (0, z.jsxs)(iy, {
                disableFocus: i,
                tooltip: r && (0, z.jsx)(zf, {
                    text: r
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTROYED, {})
                }), null != s && (0, z.jsx)(Yre, {
                    children: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.DESTROYED_DESCRIPTION, {
                            hash: s
                        })
                    })
                }), "None" !== o && "Rebuild" !== o && (0, z.jsx)(Ty, {
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTROYED_STATUS, {
                        hash: o
                    })
                }), !i && "Searching" === o && (0, z.jsx)(Dre, {
                    plain: !0,
                    progress: a,
                    max: 100,
                    children: (0, z.jsx)(Gc, {
                        value: a,
                        unit: Oc.Percentage
                    })
                }), i && (0, z.jsx)(Zre, {
                    label: (0, z.jsx)(Pc.SelectedInfoPanel.REBUILD, {}),
                    selected: l,
                    onSelect: c
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/destroyed-building-section/destroyed-building-section.tsx", {
            get DestroyedBuildingSection() {
                return tle
            },
            set DestroyedBuildingSection(e) {
                tle = e
            }
        });
        let nle = {
            "info-link": "info-link_Mpc item-focused_FuT",
            infoLink: "info-link_Mpc item-focused_FuT",
            row: "row_Q8R",
            ellipsis: "ellipsis_C0N",
            smallText: "smallText_DnB",
            uppercase: "uppercase_qZ8",
            icon: "icon_hE2",
            hint: "hint_IBf"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-link/info-link.module.scss", {
            get classes() {
                return nle
            },
            set classes(e) {
                Object.assign(nle, e)
            }
        });
        const sle = nle;
        var ile = ({
            icon: e,
            tooltip: t,
            uppercase: n = !1,
            onSelect: s,
            children: i
        }) => {
            const [a, o] = (0, Y.useState)(!1);
            return (0, z.jsx)(Tg, {
                tooltip: t,
                children: (0, z.jsx)(Ah, {
                    onFocusChange: o,
                    children: (0, z.jsxs)(Gp, {
                        disableHint: !0,
                        onSelect: s,
                        onClick: nx,
                        className: Zu()(sle.row, sle.infoLink, n && sle.uppercase),
                        children: [(0, z.jsx)("img", {
                            src: "Media/Glyphs/ViewInfo.svg",
                            className: sle.icon
                        }), e && (0, z.jsx)("img", {
                            src: e,
                            className: sle.icon
                        }), (0, z.jsx)("div", {
                            className: sle.ellipsis,
                            children: i
                        }), (0, z.jsx)(Pf, {
                            action: "Select",
                            active: a,
                            className: sle.hint
                        })]
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-link/info-link.tsx", {
            get InfoLink() {
                return ile
            },
            set InfoLink(e) {
                ile = e
            }
        });
        let ale = {
            "districts-section": "districts-section_UaO",
            districtsSection: "districts-section_UaO",
            details: "details_abN",
            detail: "detail_DhZ",
            "delete-button": "delete-button_UKV",
            deleteButton: "delete-button_UKV"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/districts-section/districts-section.module.scss", {
            get classes() {
                return ale
            },
            set classes(e) {
                Object.assign(ale, e)
            }
        });
        const ole = ale;
        var rle = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            districtMissing: s,
            districts: i
        }) => {
            const a = ww(e, t, n),
                o = sl(ore);
            return (0, z.jsxs)(iy, {
                disableFocus: !0,
                tooltip: a && (0, z.jsx)(zf, {
                    text: a
                }),
                className: ole.districtsSection,
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.OPERATING_DISTRICTS, {})
                }), (0, z.jsx)(tp, {
                    children: i.length > 0 && (0, z.jsx)("div", {
                        className: ole.details,
                        children: i.map(((e, t) => (0, z.jsx)(lle, {
                            district: e
                        }, t)))
                    })
                }), s ? (0, z.jsx)(Zre, {
                    label: (0, z.jsx)(Pc.SelectedInfoPanel.CREATE_DISTRICT, {}),
                    icon: "Media/Game/Icons/Districts.svg",
                    selected: o,
                    onSelect: cre
                }) : (0, z.jsx)(Zre, {
                    label: (0, z.jsx)(Pc.SelectedInfoPanel.SELECT_OPERATING_DISTRICT, {}),
                    icon: "Media/Game/Icons/Districts.svg",
                    selected: o,
                    onSelect: lre
                })]
            })
        };
        const lle = ({
            district: e
        }) => {
            const t = (0, Y.useCallback)((() => Tw(e.entity)), [e]),
                n = (0, Y.useCallback)((() => rre(e.entity)), [e]),
                s = (0, Y.useMemo)((() => ({
                    Select: () => {
                        lp(rp.selectItem), t()
                    },
                    "Remove Operating District": () => {
                        lp(rp.removeItem), n()
                    }
                })), [n, t]),
                i = Dm();
            return (0, z.jsx)(Ag, {
                actions: s,
                children: (0, z.jsx)(Ty, {
                    subRow: !0,
                    left: (0, z.jsx)(Ku, {
                        value: e.name
                    }),
                    link: (0, z.jsx)(ile, {
                        onSelect: t,
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.DETAILS, {})
                    }),
                    right: !i && (0, z.jsx)(Tg, {
                        tooltip: (0, z.jsx)(Pc.SelectedInfoPanel.REMOVE_OPERATING_DISTRICT, {}),
                        children: (0, z.jsx)(sf, {
                            tinted: !0,
                            focusKey: Ig,
                            onClick: nx,
                            onSelect: n,
                            src: "Media/Glyphs/Trash.svg",
                            className: ole.deleteButton
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/districts-section/districts-section.tsx", {
            get DistrictsSection() {
                return rle
            },
            set DistrictsSection(e) {
                rle = e
            }
        });
        var cle = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            studentCount: s,
            studentCapacity: i,
            graduationTime: a,
            failProbability: o
        }) => {
            const r = sl(gO),
                l = ww(e, t, n);
            return (0, z.jsxs)(iy, {
                tooltip: l && (0, z.jsx)(zf, {
                    text: l
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.EDUCATION_STUDENTS, {})
                }), (0, z.jsx)(Dre, {
                    progress: s,
                    max: i,
                    children: (0, z.jsx)(cu, {
                        value: s,
                        total: i,
                        unit: Oc.Integer
                    })
                }), (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.EDUCATION_GRADUATION_TIME, {}),
                    right: o < 1 ? (0, z.jsx)(Uu, {
                        value: a * r.daysPerYear,
                        daysPerYear: r.daysPerYear,
                        maxMonths: 3 * r.daysPerYear
                    }) : (0, z.jsx)(Pc.SelectedInfoPanel.EDUCATION_NO_GRADUATIONS, {})
                }), (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.EDUCATION_DROPOUT_RATE, {}),
                    right: (0, z.jsx)($u, {
                        value: o,
                        max: 1
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/education-section.tsx", {
            get EducationSection() {
                return cle
            },
            set EducationSection(e) {
                cle = e
            }
        });
        let ule = {
            "efficiency-factors": "efficiency-factors_QAK",
            efficiencyFactors: "efficiency-factors_QAK",
            "factor-item": "factor-item_vlO",
            factorItem: "factor-item_vlO",
            name: "name_enb",
            value: "value_A66",
            result: "result_QHn"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/efficiency-section/efficiency-section.module.scss", {
            get classes() {
                return ule
            },
            set classes(e) {
                Object.assign(ule, e)
            }
        });
        const dle = ule;
        var mle = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            efficiency: s,
            factors: i
        }) => {
            const a = ww(e, t, n);
            return (0, z.jsx)(iy, {
                tooltip: (0, z.jsxs)(z.Fragment, {
                    children: [i.length > 0 && (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(hle, {
                            factors: i
                        }), (0, z.jsx)(ay, {})]
                    }), a && (0, z.jsx)(zf, {
                        text: a
                    })]
                }),
                children: (0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.EFFICIENCY, {}),
                    right: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.PercentageSingleFraction
                    })
                })
            })
        };
        const hle = ({
            factors: e
        }) => (0, z.jsx)("div", {
            className: dle.efficiencyFactors,
            children: e.map(((e, t) => (0, z.jsxs)("div", {
                className: dle.factorItem,
                children: [(0, z.jsx)("div", {
                    className: dle.name,
                    children: (0, z.jsx)(Pc.SelectedInfoPanel.EFFICIENCY_FACTORS, {
                        hash: e.factor
                    })
                }), (0, z.jsx)("div", {
                    className: Zu()(dle.value, Jx(I2, e.value)),
                    children: (0, z.jsx)(Gc, {
                        value: e.value,
                        unit: Oc.Percentage,
                        signed: !0
                    })
                }), (0, z.jsx)("div", {
                    className: dle.result,
                    children: (0, z.jsx)(Gc, {
                        value: e.result,
                        unit: Oc.Percentage
                    })
                })]
            }, t)))
        });
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/efficiency-section/efficiency-section.tsx", {
            get EfficiencySection() {
                return mle
            },
            set EfficiencySection(e) {
                mle = e
            }
        });
        var gle = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            capacity: s,
            production: i
        }) => {
            const a = ww(e, t, n),
                o = i > 0 && s > 0 ? Od(100 * i / s, 1, 100) : 0;
            return (0, z.jsxs)(iy, {
                tooltip: a && (0, z.jsx)(zf, {
                    text: a
                }),
                children: [(0, z.jsx)(Ty, {
                    disableFocus: !0,
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.ELECTRICITY_POWER_PRODUCTION, {}),
                    right: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.Power
                    })
                }), (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.ELECTRICITY_POWER_USAGE, {}),
                    right: (0, z.jsx)(Gc, {
                        value: o,
                        unit: Oc.Percentage
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/electricity-section.tsx", {
            get ElectricitySection() {
                return gle
            },
            set ElectricitySection(e) {
                gle = e
            }
        });
        var ple = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            employeeCount: s,
            maxEmployees: i,
            educationDataEmployees: a,
            educationDataWorkplaces: o
        }) => {
            const r = ww(e, n, t);
            return (0, z.jsx)(iy, {
                tooltip: (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(u2, {
                        colors: M5,
                        labels: R5,
                        data: a,
                        customLegend: a.values.map(((e, t) => (o.values[t] > 0 || t === a.values.length - 1) && (0, z.jsx)(yR, {
                            color: M5[t],
                            label: R5[t],
                            children: t < a.values.length - 1 ? (0, z.jsx)(cu, {
                                value: e,
                                total: o.values[t],
                                unit: Oc.Integer
                            }) : (0, z.jsx)(Gc, {
                                value: e,
                                unit: Oc.Integer
                            })
                        }, t)))
                    }), (0, z.jsx)(yde, {}), r && (0, z.jsx)(zf, {
                        text: r
                    })]
                }),
                children: (0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.EMPLOYEES, {}),
                    right: (0, z.jsx)(cu, {
                        value: s,
                        total: i,
                        unit: Oc.Integer
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/employees-section.tsx", {
            get EmployeesSection() {
                return ple
            },
            set EmployeesSection(e) {
                ple = e
            }
        });
        var fle = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            vehicleEfficiency: s
        }) => {
            const i = ww(e, t, n);
            return (0, z.jsx)(iy, {
                tooltip: i && (0, z.jsx)(zf, {
                    text: i
                }),
                children: (0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.EFFICIENCY, {}),
                    right: s
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/fire-section.tsx", {
            get FireSection() {
                return fle
            },
            set FireSection(e) {
                fle = e
            }
        });
        var xle = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            garbage: s,
            garbageCapacity: i,
            processingSpeed: a,
            processingCapacity: o,
            loadKey: r
        }) => {
            const l = ww(e, n, t);
            return (0, z.jsxs)(iy, {
                tooltip: l && (0, z.jsx)(zf, {
                    text: l
                }),
                children: [i > 0 ? (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(Ty, {
                        disableFocus: !0,
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.GARBAGE_MANAGEMENT_STORAGE_LABEL, {
                            hash: r
                        })
                    }), (0, z.jsx)(Dre, {
                        progress: s,
                        max: i,
                        children: (0, z.jsx)(cu, {
                            value: s,
                            total: i,
                            unit: Oc.Weight
                        })
                    })]
                }) : void 0, o > 0 ? (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(yde, {
                        small: !0
                    }), (0, z.jsx)(Ty, {
                        disableFocus: !0,
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.GARBAGE_MANAGEMENT_PROCESSING_SPEED, {})
                    }), (0, z.jsx)(Dre, {
                        invertColorCodes: !0,
                        progress: a,
                        max: o,
                        children: (0, z.jsx)(cu, {
                            value: a,
                            total: o,
                            unit: Oc.WeightPerMonth
                        })
                    })]
                }) : void 0]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/garbage-section.tsx", {
            get GarbageSection() {
                return xle
            },
            set GarbageSection(e) {
                xle = e
            }
        });
        var vle = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            patientCount: s,
            patientCapacity: i
        }) => {
            const a = ww(e, t, n);
            return (0, z.jsxs)(iy, {
                tooltip: a && (0, z.jsx)(zf, {
                    text: a
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.HEALTHCARE_PATIENTS, {})
                }), (0, z.jsxs)(Dre, {
                    progress: s,
                    max: i,
                    children: [s, "/", i]
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/healthcare-section.tsx", {
            get HealthcareSection() {
                return vle
            },
            set HealthcareSection(e) {
                vle = e
            }
        });
        let _le = {
            "progress-bar": "progress-bar_H27 progress-bar_xWR",
            progressBar: "progress-bar_H27 progress-bar_xWR",
            progress: "progress_Yn6 progress_JAQ"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/level-section/level-progress-bar.module.scss", {
            get classes() {
                return _le
            },
            set classes(e) {
                Object.assign(_le, e)
            }
        });
        const ble = _le;
        let Tle = {
            bar: "bar_PEM",
            "level-segment": "level-segment_Reo",
            levelSegment: "level-segment_Reo",
            "construction-segment": "construction-segment_skQ",
            constructionSegment: "construction-segment_skQ",
            label: "label_qUU"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/level-section/level-section.module.scss", {
            get classes() {
                return Tle
            },
            set classes(e) {
                Object.assign(Tle, e)
            }
        });
        const Ele = Tle;
        var Ile = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            ...s
        }) => {
            const i = ww(e, t, n, s.isUnderConstruction);
            return (0, z.jsx)(iy, {
                tooltip: i && (0, z.jsx)(zf, {
                    text: i
                }),
                children: (0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: s.isUnderConstruction ? (0, z.jsx)(Pc.SelectedInfoPanel.UNDER_CONSTRUCTION, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.LEVEL, {}),
                    right: (0, z.jsx)(yle, {
                        group: e,
                        tooltipKeys: t,
                        tooltipTags: n,
                        ...s
                    })
                })
            })
        };
        const yle = ({
                level: e,
                maxLevel: t,
                isUnderConstruction: n,
                progress: s
            }) => {
                const i = (0, Y.useMemo)((() => t - e), [e, t]);
                return (0, z.jsxs)("div", {
                    className: Ele.bar,
                    children: [(0, z.jsx)("div", {
                        className: Ele.label,
                        children: n ? (0, z.jsx)($u, {
                            value: s,
                            max: 100
                        }) : (0, z.jsx)(cu, {
                            value: e,
                            total: t,
                            unit: Oc.Integer
                        })
                    }), n ? (0, z.jsx)(jle, {
                        progress: s,
                        max: 100,
                        className: Ele.constructionSegment
                    }) : (0, z.jsxs)(z.Fragment, {
                        children: [
                            [...Array(e).keys()].map((e => (0, z.jsx)(jle, {
                                progress: 100,
                                className: Ele.levelSegment
                            }, e))), i > 0 && (0, z.jsx)(jle, {
                                progress: s,
                                className: Ele.levelSegment
                            }), i > 1 && [...Array(i - 1).keys()].map((e => (0, z.jsx)(jle, {
                                progress: 0,
                                className: Ele.levelSegment
                            }, e)))
                        ]
                    })]
                })
            },
            jle = ({
                progress: e,
                max: t = 100,
                className: n
            }) => (0, z.jsx)(Vee, {
                progress: e,
                max: t,
                className: n,
                theme: ble
            });

        function Sle({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            sortingRate: s,
            sortingCapacity: i,
            localAmount: a,
            unsortedAmount: o,
            outgoingAmount: r,
            storedAmount: l,
            storageCapacity: c,
            localKey: u,
            unsortedKey: d,
            type: m
        }) {
            const h = ww(e, n, t),
                g = Dm();
            return (0, z.jsxs)(iy, {
                tooltip: h && (0, z.jsx)(zf, {
                    text: h
                }),
                disableFocus: !g,
                children: [m === iw.PostFacility && (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        disableFocus: g,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.MAIL_STORED_MAIL, {
                            hash: u
                        }),
                        right: a
                    }), i > 0 || r > 0 ? (0, z.jsx)(Ty, {
                        uppercase: !0,
                        disableFocus: g,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.MAIL_STORED_MAIL, {
                            hash: "Outgoing"
                        }),
                        right: r
                    }) : void 0, (0, z.jsx)(Ty, {
                        uppercase: !0,
                        disableFocus: g,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.MAIL_STORED_MAIL, {
                            hash: d
                        }),
                        right: o
                    }), i > 0 ? (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(Ty, {
                            uppercase: !0,
                            disableFocus: g,
                            left: (0, z.jsx)(Pc.SelectedInfoPanel.MAIL_SORTING_SPEED, {})
                        }), (0, z.jsx)(Dre, {
                            progress: s,
                            max: i,
                            children: (0, z.jsx)(cu, {
                                value: s,
                                total: i,
                                unit: Oc.IntegerPerMonth
                            })
                        })]
                    }) : void 0]
                }), c > 0 ? (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        disableFocus: g,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.MAIL_STORED_MAIL, {
                            hash: "Stored"
                        })
                    }), (0, z.jsxs)(Dre, {
                        progress: l,
                        max: c,
                        children: [l, "/", c]
                    })]
                }) : void 0]
            })
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/level-section/level-section.tsx", {
            get LevelSection() {
                return Ile
            },
            set LevelSection(e) {
                Ile = e
            }
        }), X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/mail-section.tsx", {
            get MailSection() {
                return Sle
            },
            set MailSection(e) {
                Sle = e
            }
        });
        var Cle = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            maintenance: s
        }) => {
            const i = ww(e, t, n);
            return (0, z.jsxs)(iy, {
                tooltip: i && (0, z.jsx)(zf, {
                    text: i
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.PARK_MAINTENANCE, {})
                }), (0, z.jsx)(Dre, {
                    progress: s,
                    max: 100,
                    invertColorCodes: !0,
                    children: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.Percentage
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/park-section.tsx", {
            get ParkSection() {
                return Cle
            },
            set ParkSection(e) {
                Cle = e
            }
        });
        var Nle = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            parkedCars: s,
            parkingCapacity: i
        }) => {
            const a = ww(e, n, t);
            return (0, z.jsx)(iy, {
                tooltip: a && (0, z.jsx)(zf, {
                    text: a
                }),
                children: i > 0 ? (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.PARKING_PARKED, {})
                    }), (0, z.jsx)(Dre, {
                        progress: s,
                        max: i,
                        children: (0, z.jsx)(cu, {
                            value: s,
                            total: i,
                            unit: Oc.Integer
                        })
                    })]
                }) : (0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.PARKING_PARKED, {}),
                    right: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.Integer
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/parking-section.tsx", {
            get ParkingSection() {
                return Nle
            },
            set ParkingSection(e) {
                Nle = e
            }
        });
        var wle = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            prisonerCount: s,
            prisonerCapacity: i
        }) => {
            const a = ww(e, n, t);
            return (0, z.jsxs)(iy, {
                tooltip: a && (0, z.jsx)(zf, {
                    text: a
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.POLICE_PRISONERS, {})
                }), (0, z.jsxs)(Dre, {
                    progress: s,
                    max: i,
                    children: [s, "/", i]
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/police-section.tsx", {
            get PoliceSection() {
                return wle
            },
            set PoliceSection(e) {
                wle = e
            }
        });
        let Ole = {
            disabled: "disabled__qz",
            icon: "icon_rxa",
            indicator: "indicator_DKN",
            label: "label_Pzb",
            pollution: "pollution_USw"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/pollution-section/pollution-section.module.scss", {
            get classes() {
                return Ole
            },
            set classes(e) {
                Object.assign(Ole, e)
            }
        });
        const Ple = Ole;
        var Lle = ({
            groundPollutionKey: e,
            airPollutionKey: t,
            noisePollutionKey: n
        }) => (0, z.jsx)(iy, {
            disableFocus: !0,
            children: (0, z.jsxs)(tp, {
                children: [e !== sw.none && (0, z.jsx)(Ty, {
                    uppercase: !0,
                    tooltip: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                            hash: "PollutionSectionGround"
                        })
                    }),
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS_GROUND, {}),
                    right: (0, z.jsx)(Ale, {
                        pollutionKey: e,
                        icon: "Media/Game/Icons/GroundPollution.svg"
                    })
                }), t !== sw.none && (0, z.jsx)(Ty, {
                    uppercase: !0,
                    tooltip: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                            hash: "PollutionSectionAir"
                        })
                    }),
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS_AIR, {}),
                    right: (0, z.jsx)(Ale, {
                        pollutionKey: t,
                        icon: "Media/Game/Icons/AirPollution.svg"
                    })
                }), n !== sw.none && (0, z.jsx)(Ty, {
                    uppercase: !0,
                    tooltip: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                            hash: "PollutionSectionNoise"
                        })
                    }),
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS_NOISE, {}),
                    right: (0, z.jsx)(Ale, {
                        pollutionKey: n,
                        icon: "Media/Game/Icons/NoisePollution.svg"
                    })
                })]
            })
        });
        const Ale = ({
            pollutionKey: e,
            icon: t
        }) => (0, z.jsxs)("div", {
            className: Ple.indicator,
            children: [(0, z.jsx)("div", {
                className: Ple.label,
                children: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS, {
                    index: e
                })
            }), (0, z.jsx)("img", {
                src: t,
                className: Zu()(Ple.icon, Mle(0, e))
            }), (0, z.jsx)("img", {
                src: t,
                className: Zu()(Ple.icon, Mle(1, e))
            }), (0, z.jsx)("img", {
                src: t,
                className: Zu()(Ple.icon, Mle(2, e))
            })]
        });

        function Mle(e, t) {
            switch (t) {
            case sw.none:
                return Ple.disabled;
            case sw.low:
                return e > 0 ? Ple.disabled : void 0;
            case sw.medium:
                return e > 1 ? Ple.disabled : void 0;
            default:
                return
            }
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/pollution-section/pollution-section.tsx", {
            get PollutionSection() {
                return Lle
            },
            set PollutionSection(e) {
                Lle = e
            }
        });
        var Rle = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            prisonerCount: s,
            prisonerCapacity: i
        }) => {
            const a = ww(e, n, t);
            return (0, z.jsxs)(iy, {
                tooltip: a && (0, z.jsx)(zf, {
                    text: a
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.PRISON_PRISONERS, {})
                }), (0, z.jsxs)(Dre, {
                    progress: s,
                    max: i,
                    children: [s, "/", i]
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/prison-section.tsx", {
            get PrisonSection() {
                return Rle
            },
            set PrisonSection(e) {
                Rle = e
            }
        });
        var kle = ({
            isHousehold: e,
            householdCount: t,
            maxHouseholds: n,
            residentCount: s,
            petCount: i,
            wealthKey: a,
            residence: o,
            residenceEntity: r,
            residenceKey: l,
            educationData: c,
            ageData: u
        }) => {
            const d = (0, Y.useCallback)((() => r && Tw(r)), [r]);
            return (0, z.jsxs)(z.Fragment, {
                children: [null != o && (0, z.jsx)(iy, {
                    tooltip: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                            hash: "ResidentsSectionResidence"
                        })
                    }),
                    children: (0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_RESIDENCE, {
                            hash: l
                        }),
                        link: (0, z.jsx)(ile, {
                            onSelect: d,
                            children: (0, z.jsx)(Ku, {
                                value: o
                            })
                        })
                    })
                }), n > 1 && (0, z.jsx)(iy, {
                    tooltip: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                            hash: "ResidentsSectionHouseholds"
                        })
                    }),
                    children: (0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.HOUSEHOLDS, {}),
                        right: (0, z.jsx)(cu, {
                            value: t,
                            total: n,
                            unit: Oc.Integer
                        })
                    })
                }), (0, z.jsxs)(iy, {
                    tooltip: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(zf, {
                            children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                                hash: e ? "ResidentsSectionHouseholdMembers" : "ResidentsSectionResidents"
                            })
                        }), (0, z.jsx)(ay, {}), (0, z.jsx)(u2, {
                            colors: n5,
                            labels: s5,
                            data: u
                        }), (0, z.jsx)(yde, {}), (0, z.jsx)(zf, {
                            children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                                hash: "ResidentsSectionAge"
                            })
                        }), (0, z.jsx)(ay, {}), (0, z.jsx)(u2, {
                            colors: d2,
                            labels: m2,
                            data: c
                        }), (0, z.jsx)(yde, {}), (0, z.jsx)(zf, {
                            children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                                hash: "ResidentsSectionEducation"
                            })
                        })]
                    }),
                    children: [(0, z.jsx)(Ty, {
                        disableFocus: !0,
                        uppercase: !0,
                        left: e ? (0, z.jsx)(Pc.SelectedInfoPanel.HOUSEHOLD_MEMBERS, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.RESIDENTS, {}),
                        right: s
                    }), i > 0 && (0, z.jsx)(Ty, {
                        disableFocus: !0,
                        subRow: !0,
                        icon: "Media/Game/Icons/Pet.svg",
                        left: (0, z.jsx)(Gc, {
                            value: i
                        })
                    })]
                }), (e || 1 === n && t > 0 || n > 1 && t > 0) && (0, z.jsx)(iy, {
                    tooltip: n > 1 ? (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                            hash: "ResidentsSectionAverageHouseholdWealth"
                        })
                    }) : (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                            hash: "ResidentsSectionHouseholdWealth"
                        })
                    }),
                    children: (0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: n > 1 ? (0, z.jsx)(Pc.SelectedInfoPanel.AVERAGE_HOUSEHOLD_WEALTH, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_WEALTH_TITLE, {}),
                        right: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_WEALTH, {
                            hash: a
                        })
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/residents-section.tsx", {
            get ResidentsSection() {
                return kle
            },
            set ResidentsSection(e) {
                kle = e
            }
        });
        var Dle = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            capacity: s,
            lastProcessed: i,
            purification: a
        }) => {
            const o = ww(e, t, n),
                r = i > 0 && s > 0 ? Od(100 * i / s, 1, 100) : 0;
            return (0, z.jsxs)(iy, {
                tooltip: o && (0, z.jsx)(zf, {
                    text: o
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.SEWAGE_PROCESSING_CAPACITY, {}),
                    right: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.VolumePerMonth
                    })
                }), (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.SEWAGE_OUTLET_USAGE, {}),
                    right: (0, z.jsx)(Gc, {
                        value: r,
                        unit: Oc.Percentage
                    })
                }), a > 0 && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.SEWAGE_PURIFICATION_RATE, {}),
                    right: (0, z.jsx)(Gc, {
                        value: 100 * a,
                        unit: Oc.Percentage
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/sewage-section.tsx", {
            get SewageSection() {
                return Dle
            },
            set SewageSection(e) {
                Dle = e
            }
        });
        var Fle = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            sheltered: s,
            shelterCapacity: i
        }) => {
            const a = ww(e, n, t);
            return (0, z.jsxs)(iy, {
                tooltip: a && (0, z.jsx)(zf, {
                    text: a
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.SHELTER_OCCUPANTS, {})
                }), (0, z.jsxs)(Dre, {
                    progress: s,
                    max: i,
                    children: [s, "/", i]
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/shelter-section.tsx", {
            get ShelterSection() {
                return Fle
            },
            set ShelterSection(e) {
                Fle = e
            }
        });
        var Ule = ({
            children: e,
            className: t
        }) => (0, z.jsx)("div", {
            className: Zu()(sy.infoWrapBox, t),
            children: e
        });
        X.add("game-ui/game/components/selected-info-panel/shared-components/info-section/info-wrap-box.tsx", {
            get InfoWrapBox() {
                return Ule
            },
            set InfoWrapBox(e) {
                Ule = e
            }
        });
        let Ble = {
            field: "field_lUX",
            header: "header_WRn",
            icon: "icon__9P",
            label: "label_vVZ",
            content: "content_n5J",
            last: "last_uXj"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/resource-item/resource-item.module.scss", {
            get classes() {
                return Ble
            },
            set classes(e) {
                Object.assign(Ble, e)
            }
        });
        const Gle = Ble;
        var Vle = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            stored: s,
            capacity: i,
            resources: a
        }) => {
            const o = ww(e, n, t),
                r = a?.filter((e => "NoResource" !== e.key && e.amount > 0));
            return (0, z.jsxs)(iy, {
                tooltip: o && (0, z.jsx)(zf, {
                    text: o
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.WAREHOUSE_STORAGE, {})
                }), (0, z.jsx)(Dre, {
                    plain: !0,
                    progress: s,
                    max: i,
                    children: (0, z.jsx)(cu, {
                        value: s,
                        total: i,
                        unit: Oc.Weight
                    })
                }), r.length > 0 && (0, z.jsx)(Ule, {
                    children: r?.map(((e, t) => (0, z.jsx)(T4, {
                        theme: Gle,
                        className: Zu()(r.length > 1 && r.length % 2 == 1 && t === r.length - 1 && Gle.last),
                        icon: `Media/Game/Resources/${e.key}.svg`,
                        label: (0, z.jsx)(Pc.Resources.TITLE, {
                            hash: e.key
                        }),
                        children: (0, z.jsx)(Gc, {
                            value: e.amount,
                            unit: Oc.Weight
                        })
                    }, e.key)))
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/storage-section.tsx", {
            get StorageSection() {
                return Vle
            },
            set StorageSection(e) {
                Vle = e
            }
        });
        var Hle = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            capacity: s,
            flow: i
        }) => {
            const a = ww(e, t, n),
                o = Math.abs(i) > 0 && s > 0 ? Od(100 * Math.abs(i) / s, 1, 100) : 0;
            return (0, z.jsxs)(iy, {
                tooltip: a && (0, z.jsx)(zf, {
                    text: a
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.ELECTRICITY_TRANSFORMER_CAPACITY, {}),
                    right: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.Power
                    })
                }), (0, z.jsx)(Ty, {
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.ELECTRICITY_POWER_USAGE, {}),
                    right: (0, z.jsx)(Gc, {
                        value: o,
                        unit: Oc.Percentage
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/transformer-section.tsx", {
            get TransformerSection() {
                return Hle
            },
            set TransformerSection(e) {
                Hle = e
            }
        });
        var Kle = ({
                group: e,
                tooltipTags: t,
                tooltipKeys: n,
                mainBuilding: s,
                mainBuildingName: i,
                upgrade: a,
                type: o
            }) => {
                const r = ww(e, n, t),
                    l = (0, Y.useCallback)((() => Tw(s)), [s]),
                    c = ll(AL, a) ?? Dx;
                return (0, z.jsxs)(iy, {
                    disableFocus: !0,
                    tooltip: r && (0, z.jsx)(zf, {
                        text: r
                    }),
                    children: [(0, z.jsx)(Ty, {
                        disableFocus: !0,
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.UPGRADE_TYPE, {
                            hash: o
                        })
                    }), (0, z.jsx)($A, {
                        components: $le,
                        data: c.properties
                    }), (0, z.jsx)(Ty, {
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.MAIN_BUILDING, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: l,
                            children: (0, z.jsx)(Ku, {
                                value: i
                            })
                        })
                    })]
                })
            },
            Wle = ({
                labelId: e,
                unit: t,
                value: n,
                signed: s
            }) => (0, z.jsx)(Ty, {
                disableFocus: !0,
                left: (0, z.jsx)(Tc, {
                    id: e
                }),
                right: (0, z.jsx)(Gc, {
                    value: n,
                    unit: t,
                    signed: s
                })
            }),
            zle = ({
                labelId: e,
                unit: t,
                value: n,
                signed: s
            }) => {
                const i = t.includes("money");
                return (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Tc, {
                        id: e
                    }),
                    right: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(Gc, {
                            value: n.x,
                            unit: i ? Oc.Money : void 0
                        }), "–", (0, z.jsx)(Gc, {
                            value: n.y,
                            unit: t,
                            signed: s
                        })]
                    })
                })
            },
            Yle = ({
                labelId: e,
                valueId: t
            }) => (0, z.jsx)(Ty, {
                disableFocus: !0,
                left: (0, z.jsx)(Tc, {
                    id: e
                }),
                right: (0, z.jsx)(Tc, {
                    id: t
                })
            });
        const $le = {
            [EC]: () => null,
            [IC]: () => null,
            [D8]: Wle,
            [F8]: zle,
            [B8]: Yle,
            [pC]: ({
                electricityConsumption: e,
                waterConsumption: t,
                garbageAccumulation: n
            }) => (0, z.jsxs)(z.Fragment, {
                children: [e > 0 && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.Properties.ELECTRICITY_CONSUMPTION, {}),
                    right: (0, z.jsx)(Gc, {
                        value: e,
                        unit: Oc.Power
                    })
                }), t > 0 && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.Properties.WATER_CONSUMPTION, {}),
                    right: (0, z.jsx)(Gc, {
                        value: t,
                        unit: Oc.VolumePerMonth
                    })
                }), n > 0 && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.Properties.GARBAGE_ACCUMULATION, {}),
                    right: (0, z.jsx)(Gc, {
                        value: n,
                        unit: Oc.WeightPerMonth
                    })
                })]
            }),
            [fC]: ({
                groundPollution: e,
                airPollution: t,
                noisePollution: n
            }) => (0, z.jsxs)(z.Fragment, {
                children: [e > gC.none && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS_GROUND, {}),
                    right: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)("img", {
                            src: "Media/Game/Icons/GroundPollution.svg",
                            className: by.icon
                        }), (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS, {
                            index: e
                        })]
                    })
                }), t > gC.none && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS_AIR, {}),
                    right: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)("img", {
                            src: "Media/Game/Icons/AirPollution.svg",
                            className: by.icon
                        }), (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS, {
                            index: t
                        })]
                    })
                }), n > gC.none && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS_NOISE, {}),
                    right: (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)("img", {
                            src: "Media/Game/Icons/NoisePollution.svg",
                            className: by.icon
                        }), (0, z.jsx)(Pc.SelectedInfoPanel.POLLUTION_LEVELS, {
                            index: n
                        })]
                    })
                })]
            }),
            [vC]: ({
                labelId: e,
                minCapacity: t,
                maxCapacity: n,
                voltage: s
            }) => (0, z.jsx)(Ty, {
                disableFocus: !0,
                left: (0, z.jsx)(Tc, {
                    id: e
                }),
                right: (0, z.jsx)(Pc.Properties.POWER_VOLTAGE_FORMAT, {
                    VALUE: (0, z.jsx)(au, {
                        min: t,
                        max: n,
                        unit: Oc.Power
                    }),
                    VOLTAGE: (0, z.jsx)(Pc.Properties.VOLTAGE, {
                        index: s
                    })
                })
            }),
            [TC]: ({
                stops: e
            }) => (0, z.jsx)(z.Fragment, {
                children: Object.entries(e).map((([e, t], n) => t > 0 && (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.Properties.TRANSPORT_STOP_COUNT, {
                        hash: e
                    }),
                    right: (0, z.jsx)(Gc, {
                        value: t,
                        unit: Oc.Integer
                    })
                }, n)))
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/upgrade-properties-section.tsx", {
            get UpgradePropertiesSection() {
                return Kle
            },
            set UpgradePropertiesSection(e) {
                Kle = e
            },
            get NumberPropertyField() {
                return Wle
            },
            set NumberPropertyField(e) {
                Wle = e
            },
            get Number2PropertyField() {
                return zle
            },
            set Number2PropertyField(e) {
                zle = e
            },
            get StringPropertyField() {
                return Yle
            },
            set StringPropertyField(e) {
                Yle = e
            }
        });
        const qle = "UpgradesSection";
        var Xle = el(qle, "delete"),
            Qle = el(qle, "relocate"),
            Zle = el(qle, "focus"),
            Jle = el(qle, "toggle");
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/upgrades-section/upgrades-section-bindings.ts", {
            get deleteUpgrade() {
                return Xle
            },
            set deleteUpgrade(e) {
                Xle = e
            },
            get relocateUpgrade() {
                return Qle
            },
            set relocateUpgrade(e) {
                Qle = e
            },
            get focusUpgrade() {
                return Zle
            },
            set focusUpgrade(e) {
                Zle = e
            },
            get toggleUpgrade() {
                return Jle
            },
            set toggleUpgrade(e) {
                Jle = e
            }
        });
        let ece = {
            "upgrades-section": "upgrades-section_Zb5",
            upgradesSection: "upgrades-section_Zb5",
            details: "details_pZM",
            detail: "detail_kBc",
            "delete-button": "delete-button_z_s",
            deleteButton: "delete-button_z_s",
            dropdown: "dropdown_Rc8",
            toolIcon: "toolIcon_nit",
            item: "item_q7g",
            thumb: "thumb_zKj",
            label: "label_TkD",
            hint: "hint_ZRS",
            "dropdown-item-hint": "dropdown-item-hint_iFL",
            dropdownItemHint: "dropdown-item-hint_iFL",
            "dropdown-item": "dropdown-item_NmT",
            dropdownItem: "dropdown-item_NmT",
            "pad-left": "pad-left_Uwn",
            padLeft: "pad-left_Uwn",
            "pad-right": "pad-right_syk",
            padRight: "pad-right_syk"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/upgrades-section/upgrades-section.module.scss", {
            get classes() {
                return ece
            },
            set classes(e) {
                Object.assign(ece, e)
            }
        });
        const tce = ece;
        var nce = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            extensions: s,
            subBuildings: i
        }) => {
            const a = ww(e, n, t),
                o = Dm();
            return (0, z.jsxs)(iy, {
                disableFocus: !0,
                tooltip: a && (0, z.jsx)(zf, {
                    children: a
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    disableFocus: !o || s.length + i.length > 0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.UPGRADES, {}),
                    right: (0, z.jsx)(Gc, {
                        value: s.length + i.length
                    })
                }), s.length > 0 && (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(Ty, {
                        disableFocus: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.EXTENSIONS, {})
                    }), (0, z.jsx)(tp, {
                        children: s.map(((e, t) => (0, z.jsx)(ice, {
                            upgrade: e
                        }, t)))
                    })]
                }), i.length > 0 && (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(Ty, {
                        disableFocus: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.SUB_BUILDINGS, {})
                    }), (0, z.jsx)(tp, {
                        children: i.map(((e, t) => (0, z.jsx)(sce, {
                            upgrade: e
                        }, t)))
                    })]
                })]
            })
        };
        const sce = ({
                upgrade: e
            }) => {
                const t = (0, Y.useContext)(sE),
                    n = (0, Y.useCallback)((() => {
                        Xle(e.entity)
                    }), [e.entity]),
                    s = (0, Y.useCallback)((() => {
                        t.showDialog((0, z.jsx)(jI, {
                            title: (0, z.jsx)(Pc.Common.WARNING, {}),
                            message: (0, z.jsx)(Pc.SelectedInfoPanel.CONFIRM_DELETE_WARNING, {}),
                            onConfirm: n
                        }))
                    }), [t, n]),
                    i = (0, Y.useCallback)((() => Qle(e.entity)), [e]),
                    a = (0, Y.useCallback)((() => Zle(e.entity)), [e]),
                    o = (0, Y.useCallback)((() => Jle(e.entity)), [e]),
                    r = (0, Y.useCallback)((() => Tw(e.entity)), [e]);
                return (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0, z.jsx)(Ku, {
                        value: e.name
                    }),
                    right: (0, z.jsx)(rce, {
                        disabled: e.disabled,
                        focused: e.focused,
                        handleDelete: s,
                        handleToggle: o,
                        handleRelocate: i,
                        handleFocus: a,
                        handleSelect: r
                    })
                })
            },
            ice = ({
                upgrade: e
            }) => {
                const t = (0, Y.useContext)(sE),
                    n = (0, Y.useCallback)((() => {
                        Xle(e.entity)
                    }), [e.entity]),
                    s = (0, Y.useCallback)((() => {
                        t.showDialog((0, z.jsx)(jI, {
                            title: (0, z.jsx)(Pc.Common.WARNING, {}),
                            message: (0, z.jsx)(Pc.SelectedInfoPanel.CONFIRM_DELETE_WARNING, {}),
                            onConfirm: n
                        }))
                    }), [t, n]),
                    i = (0, Y.useCallback)((() => Jle(e.entity)), [e]),
                    a = (0, Y.useCallback)((() => Tw(e.entity)), [e]);
                return (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    subRow: !0,
                    left: (0, z.jsx)(Ku, {
                        value: e.name
                    }),
                    right: (0, z.jsx)(rce, {
                        disabled: e.disabled,
                        focused: e.focused,
                        handleSelect: a,
                        handleDelete: s,
                        handleToggle: i
                    })
                })
            },
            ace = {
                ...Bp,
                hover: null,
                focus: null
            },
            oce = new Eg("SELECT_KEY"),
            rce = ({
                disabled: e,
                focused: t,
                handleSelect: n,
                handleToggle: s,
                handleDelete: i,
                handleRelocate: a,
                handleFocus: o
            }) => {
                const [r, l] = (0, Y.useState)(!1), [c, u] = (0, Y.useState)(!1);
                return (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(Pf, {
                        action: r ? "Back" : "Select",
                        active: c,
                        className: tce.hint
                    }), (0, z.jsx)(Ah, {
                        onFocusChange: u,
                        children: (0, z.jsx)(qI, {
                            theme: xW,
                            initialFocused: oce,
                            alignment: "right",
                            onToggle: l,
                            content: (0, z.jsxs)(z.Fragment, {
                                children: [(0, z.jsx)(lce, {
                                    onChange: n,
                                    focusKey: oce,
                                    children: (0, z.jsxs)("div", {
                                        className: tce.item,
                                        children: [(0, z.jsx)(ef, {
                                            src: "Media/Glyphs/ViewInfo.svg",
                                            className: tce.thumb
                                        }), (0, z.jsx)("div", {
                                            className: tce.label,
                                            children: (0, z.jsx)(Pc.SelectedInfoPanel.SELECT_UPGRADE, {})
                                        })]
                                    })
                                }), o && (0, z.jsx)(lce, {
                                    onChange: o,
                                    children: (0, z.jsxs)("div", {
                                        className: tce.item,
                                        children: [(0, z.jsx)("img", {
                                            src: "Media/Game/Icons/MapMarker.svg",
                                            className: tce.thumb
                                        }), (0, z.jsx)("div", {
                                            className: tce.label,
                                            children: t ? (0, z.jsx)(Pc.SelectedInfoPanel.UNFOCUS_UPGRADE, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.FOCUS_UPGRADE, {})
                                        })]
                                    })
                                }), a && (0, z.jsx)(lce, {
                                    onChange: a,
                                    children: (0, z.jsxs)("div", {
                                        className: tce.item,
                                        children: [(0, z.jsx)("img", {
                                            src: "Media/Game/Icons/Relocate.svg",
                                            className: tce.thumb
                                        }), (0, z.jsx)("div", {
                                            className: tce.label,
                                            children: (0, z.jsx)(Pc.SelectedInfoPanel.RELOCATE_UPGRADE, {})
                                        })]
                                    })
                                }), (0, z.jsx)(lce, {
                                    onChange: s,
                                    children: (0, z.jsxs)("div", {
                                        className: tce.item,
                                        children: [(0, z.jsx)(ef, {
                                            src: "Media/Glyphs/OnOff.svg",
                                            className: tce.thumb
                                        }), (0, z.jsx)("div", {
                                            className: tce.label,
                                            children: e ? (0, z.jsx)(Pc.SelectedInfoPanel.REACTIVATE_UPGRADE, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.DEACTIVATE_UPGRADE, {})
                                        })]
                                    })
                                }), (0, z.jsx)(lce, {
                                    onChange: i,
                                    children: (0, z.jsxs)("div", {
                                        className: tce.item,
                                        children: [(0, z.jsx)(ef, {
                                            src: "Media/Glyphs/Trash.svg",
                                            className: tce.thumb
                                        }), (0, z.jsx)("div", {
                                            className: tce.label,
                                            children: (0, z.jsx)(Pc.SelectedInfoPanel.REMOVE_UPGRADE, {})
                                        })]
                                    })
                                })]
                            }),
                            children: (0, z.jsx)(XI, {
                                sounds: ace,
                                className: tce.dropdown,
                                children: (0, z.jsx)(ef, {
                                    src: "Media/Glyphs/Gear.svg",
                                    className: tce.toolIcon
                                })
                            })
                        })
                    })]
                })
            },
            lce = ({
                focusKey: e,
                children: t,
                onChange: n
            }) => {
                const [s, i] = (0, Y.useState)(!1), a = Dm();
                return (0, z.jsx)(Ah, {
                    onFocusChange: i,
                    children: (0, z.jsxs)(JI, {
                        value: n,
                        onChange: n,
                        focusKey: e,
                        className: Zu()(a && tce.padRight, a && !s && tce.padLeft, tce.dropdownItem),
                        children: [(0, z.jsx)(Pf, {
                            action: "Select",
                            active: s,
                            className: tce.dropdownItemHint
                        }), t]
                    })
                })
            };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/upgrades-section/upgrades-section.tsx", {
            get UpgradesSection() {
                return nce
            },
            set UpgradesSection(e) {
                nce = e
            }
        });
        var cce = Y.memo((function ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            upkeeps: s,
            total: i,
            inactive: a
        }) {
            const o = ww(e, n, t);
            return (0, z.jsxs)(iy, {
                tooltip: o && (0, z.jsx)(zf, {
                    children: o
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.UPKEEP, {})
                }), s.map(((e, t) => (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: uce(e, a),
                    right: (0, z.jsx)(Gc, {
                        value: e.price,
                        unit: Oc.MoneyPerMonth
                    })
                }, t))), (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.UPKEEP_TOTAL, {}),
                    right: (0, z.jsx)(Gc, {
                        value: i,
                        unit: Oc.MoneyPerMonth
                    })
                })]
            })
        }), ((e, t) => Kr(e, t, 10)));

        function uce(e, t) {
            return "Money" === e.localeKey ? 0 === e.titleId.length ? (0, z.jsx)(Pc.SelectedInfoPanel.WAGES, {}) : t ? e.count > 1 ? (0, z.jsx)(Pc.SelectedInfoPanel.UPKEEP_MAINTENANCE_INACTIVE_COMBINED, {
                BUILDING: (0, z.jsx)(Tc, {
                    id: e.titleId
                }),
                AMOUNT: (0, z.jsx)(Gc, {
                    value: e.count
                })
            }) : (0, z.jsx)(Pc.SelectedInfoPanel.UPKEEP_MAINTENANCE_INACTIVE, {
                BUILDING: (0, z.jsx)(Tc, {
                    id: e.titleId
                })
            }) : e.count > 1 ? (0, z.jsx)(Pc.SelectedInfoPanel.UPKEEP_MAINTENANCE_COMBINED, {
                BUILDING: (0, z.jsx)(Tc, {
                    id: e.titleId
                }),
                AMOUNT: (0, z.jsx)(Gc, {
                    value: e.count
                })
            }) : (0, z.jsx)(Pc.SelectedInfoPanel.UPKEEP_MAINTENANCE, {
                BUILDING: (0, z.jsx)(Tc, {
                    id: e.titleId
                })
            }) : (0, z.jsx)(Pc.SelectedInfoPanel.UPKEEPFORMAT, {
                RESOURCE: (0, z.jsx)(Pc.Resources.TITLE, {
                    hash: e.localeKey
                }),
                AMOUNT: (0, z.jsx)(Gc, {
                    value: e.amount,
                    unit: dce(e.localeKey)
                })
            })
        }

        function dce(e) {
            switch (e) {
            case "Telecom":
            case "Financial":
            case "Media":
            case "Entertainment":
            case "Recreation":
                return Oc.Integer;
            default:
                return Oc.Weight
            }
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/upkeep-section.tsx", {
            get UpkeepSection() {
                return cce
            },
            set UpkeepSection(e) {
                cce = e
            }
        });
        var mce = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            capacity: s,
            lastProduction: i,
            pollution: a
        }) => {
            const o = ww(e, n, t),
                r = i > 0 && s > 0 ? Od(100 * i / s, 1, 100) : 0;
            return (0, z.jsxs)(iy, {
                tooltip: o && (0, z.jsx)(zf, {
                    text: o
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.WATER_OUTPUT, {}),
                    right: (0, z.jsx)(Gc, {
                        value: s,
                        unit: Oc.VolumePerMonth
                    })
                }), (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.WATER_PUMP_USAGE, {}),
                    right: (0, z.jsx)(Gc, {
                        value: r,
                        unit: Oc.Percentage
                    })
                }), (0, z.jsx)(Ty, {
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.WATER_PUMP_POLLUTION, {}),
                    right: (0, z.jsx)($u, {
                        value: a,
                        max: 1
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/building-sections/water-section.tsx", {
            get WaterSection() {
                return mce
            },
            set WaterSection(e) {
                mce = e
            }
        });
        var hce = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            typeKey: s,
            owner: i,
            ownerEntity: a,
            destination: o,
            destinationEntity: r
        }) => {
            const l = (0, Y.useCallback)((() => a && Tw(a)), [a]),
                c = (0, Y.useCallback)((() => r && Tw(r)), [r]),
                u = ww(e, t, n, !0);
            return (0, z.jsx)(iy, {
                disableFocus: !0,
                tooltip: u && (0, z.jsx)(zf, {
                    text: u
                }),
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.ANIMAL_TYPE, {
                            hash: s
                        })
                    }), null != i && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: l,
                            children: (0, z.jsx)(Ku, {
                                value: i
                            })
                        })
                    }), null != o && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: c,
                            children: (0, z.jsx)(Ku, {
                                value: o
                            })
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/citizen-sections/animal-section.tsx", {
            get AnimalSection() {
                return hce
            },
            set AnimalSection(e) {
                hce = e
            }
        });
        var gce = ({
            citizenKey: e,
            stateKey: t,
            household: n,
            householdEntity: s,
            residence: i,
            residenceEntity: a,
            residenceKey: o,
            workplace: r,
            workplaceEntity: l,
            workplaceKey: c,
            schoolLevel: u,
            tooltipTags: d,
            school: m,
            schoolEntity: h,
            destination: g,
            destinationEntity: p,
            educationKey: f,
            ageKey: x,
            wealthKey: v,
            occupationKey: _,
            jobLevelKey: b
        }) => {
            const T = (0, Y.useCallback)((() => s && Tw(s)), [s]),
                E = (0, Y.useCallback)((() => a && Tw(a)), [a]),
                I = (0, Y.useCallback)((() => l && Tw(l)), [l]),
                y = (0, Y.useCallback)((() => h && Tw(h)), [h]),
                j = (0, Y.useCallback)((() => p && Tw(p)), [p]),
                S = Nw(["CitizenSectionOccupation", "Unknown" !== b ? "CitizenSectionJobTitle" : null]),
                C = d.includes("Male");
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsxs)(iy, {
                    disableFocus: null != m,
                    tooltip: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                            hash: "CitizenSection" + e
                        })
                    }),
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        disableFocus: null == m,
                        left: C ? (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_TYPE_MALE, {
                            hash: e
                        }) : (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_TYPE_FEMALE, {
                            hash: e
                        }),
                        right: C ? (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_STATE_MALE, {
                            hash: t
                        }) : (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_STATE_FEMALE, {
                            hash: t
                        })
                    }), (0, z.jsx)(Ty, {
                        subRow: !0,
                        disableFocus: null == m,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_AGE_TITLE, {}),
                        right: C ? (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_AGE_MALE, {
                            hash: x
                        }) : (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_AGE_FEMALE, {
                            hash: x
                        })
                    }), (0, z.jsx)(Ty, {
                        subRow: !0,
                        disableFocus: null == m,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_EDUCATION_TITLE, {}),
                        right: C ? (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_EDUCATION_MALE, {
                            hash: f
                        }) : (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_EDUCATION_FEMALE, {
                            hash: f
                        })
                    }), null != m && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_SCHOOL_TITLE, {
                            index: u
                        }),
                        link: (0, z.jsx)(ile, {
                            onSelect: y,
                            children: (0, z.jsx)(Ku, {
                                value: m
                            })
                        })
                    })]
                }), (0, z.jsx)(iy, {
                    disableFocus: !0,
                    tooltip: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                            hash: "CitizenSectionHousehold" + e
                        })
                    }),
                    children: (0, z.jsxs)(tp, {
                        direction: Rg.Vertical,
                        children: [null != n && (0, z.jsx)(Ty, {
                            uppercase: !0,
                            left: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_HOUSEHOLD, {}),
                            link: (0, z.jsx)(ile, {
                                onSelect: T,
                                children: (0, z.jsx)(Ku, {
                                    value: n
                                })
                            })
                        }), (0, z.jsx)(Ty, {
                            subRow: !0,
                            left: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_WEALTH_TITLE, {}),
                            right: C ? (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_WEALTH_MALE, {
                                hash: v
                            }) : (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_WEALTH_FEMALE, {
                                hash: v
                            })
                        }), null != i && (0, z.jsx)(Ty, {
                            subRow: !0,
                            left: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_RESIDENCE, {
                                hash: o
                            }),
                            link: (0, z.jsx)(ile, {
                                onSelect: E,
                                children: (0, z.jsx)(Ku, {
                                    value: i
                                })
                            })
                        })]
                    })
                }), "Tourist" !== _ && (0, z.jsxs)(iy, {
                    disableFocus: null != r,
                    tooltip: null != S && (0, z.jsx)(zf, {
                        children: S
                    }),
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_OCCUPATION_TITLE, {}),
                        right: C ? (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_OCCUPATION_MALE, {
                            hash: _
                        }) : (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_OCCUPATION_FEMALE, {
                            hash: _
                        })
                    }), "Unknown" !== b && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_JOB_TITLE, {}),
                        right: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_JOB_LEVEL, {
                            hash: b
                        })
                    }), null != r && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_WORKPLACE, {
                            hash: c
                        }),
                        link: (0, z.jsx)(ile, {
                            onSelect: I,
                            children: (0, z.jsx)(Ku, {
                                value: r
                            })
                        })
                    })]
                }), null != g && (0, z.jsx)(iy, {
                    disableFocus: !0,
                    tooltip: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                            hash: "CitizenSectionDestination"
                        })
                    }),
                    children: (0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: j,
                            children: (0, z.jsx)(Ku, {
                                value: g
                            })
                        })
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/citizen-sections/citizen-section.tsx", {
            get CitizenSection() {
                return gce
            },
            set CitizenSection(e) {
                gce = e
            }
        });
        var pce = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            origin: s,
            originEntity: i,
            destination: a,
            destinationEntity: o
        }) => {
            const r = (0, Y.useCallback)((() => i && Tw(i)), [i]),
                l = (0, Y.useCallback)((() => o && Tw(o)), [o]),
                c = ww(e, t, n, !0);
            return (0, z.jsx)(iy, {
                disableFocus: !0,
                tooltip: c && (0, z.jsx)(zf, {
                    text: c
                }),
                children: (0, z.jsxs)(tp, {
                    children: [null != s && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: r,
                            children: (0, z.jsx)(Ku, {
                                value: s
                            })
                        })
                    }), null != a && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: l,
                            children: (0, z.jsx)(Ku, {
                                value: a
                            })
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/citizen-sections/dummy-human-section.tsx", {
            get DummyHumanSection() {
                return pce
            },
            set DummyHumanSection(e) {
                pce = e
            }
        });
        let fce = {
            notification: "notification_CLy item-focused_FuT",
            "full-width": "full-width_Qk1",
            fullWidth: "full-width_Qk1",
            icon: "icon_UMr",
            label: "label_RLF",
            badge: "badge_ooc",
            "badge-icon": "badge-icon_ubF",
            badgeIcon: "badge-icon_ubF"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/notification/notification.module.scss", {
            get classes() {
                return fce
            },
            set classes(e) {
                Object.assign(fce, e)
            }
        });
        const xce = fce;
        var vce = ({
                notification: e,
                anchorElRef: t
            }) => (0, z.jsx)(Tg, {
                direction: "right",
                alignment: "center",
                anchorElRef: t,
                tooltip: (0, z.jsx)(zf, {
                    children: (0, z.jsx)(Pc.Notifications.DESCRIPTION, {
                        hash: e.key
                    })
                }),
                children: (0, z.jsxs)(Ip, {
                    className: Zu()(xce.notification, xce.fullWidth),
                    children: [(0, z.jsx)("img", {
                        src: e.iconPath,
                        className: xce.icon
                    }), (0, z.jsxs)("div", {
                        className: xce.label,
                        children: [(0, z.jsx)(Pc.Notifications.TITLE, {
                            hash: e.key
                        }), e.count > 1 && (0, z.jsx)(Ice, {
                            className: xce.badge,
                            children: (0, z.jsx)(Gc, {
                                value: e.count
                            })
                        })]
                    })]
                })
            }),
            _ce = ({
                notification: e,
                anchorElRef: t,
                tooltipTags: n
            }) => {
                const s = n?.includes("Male");
                return (0, z.jsx)(z.Fragment, {
                    children: (0, z.jsx)(Tg, {
                        direction: "right",
                        alignment: "center",
                        anchorElRef: t,
                        tooltip: (0, z.jsx)(zf, {
                            children: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_HAPPINESS_DESCRIPTION, {
                                hash: e.key
                            })
                        }),
                        children: (0, z.jsxs)(Ip, {
                            className: xce.notification,
                            children: [(0, z.jsx)("img", {
                                src: e.iconPath,
                                className: xce.icon
                            }), (0, z.jsx)("div", {
                                className: xce.label,
                                children: s ? (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_HAPPINESS_TITLE_MALE, {
                                    hash: e.key
                                }) : (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_HAPPINESS_TITLE_FEMALE, {
                                    hash: e.key
                                })
                            })]
                        })
                    })
                })
            },
            bce = ({
                notification: e
            }) => (0, z.jsxs)(Ip, {
                className: xce.notification,
                children: [(0, z.jsx)("img", {
                    src: e.iconPath,
                    className: xce.icon
                }), (0, z.jsx)("div", {
                    className: xce.label,
                    children: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_HAPPINESS_TITLE, {
                        hash: e.key
                    })
                })]
            }),
            Tce = ({
                notification: e
            }) => (0, z.jsxs)(Ip, {
                className: xce.notification,
                children: [(0, z.jsx)("img", {
                    src: e.iconPath,
                    className: xce.icon
                }), (0, z.jsx)("div", {
                    className: xce.label,
                    children: (0, z.jsx)(Pc.SelectedInfoPanel.COMPANY_PROFITABILITY_TITLE, {
                        hash: e.key
                    })
                })]
            }),
            Ece = ({
                notification: e,
                anchorElRef: t,
                tooltipTags: n
            }) => {
                const s = n?.includes("Male");
                return (0, z.jsx)(z.Fragment, {
                    children: (0, z.jsx)(Tg, {
                        direction: "right",
                        alignment: "center",
                        anchorElRef: t,
                        tooltip: (0, z.jsx)(zf, {
                            children: (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_CONDITION_DESCRIPTION, {
                                hash: e.key
                            })
                        }),
                        children: (0, z.jsxs)(Ip, {
                            className: xce.notification,
                            children: [(0, z.jsx)("img", {
                                src: e.iconPath,
                                className: xce.icon
                            }), (0, z.jsx)("div", {
                                className: xce.label,
                                children: s ? (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_CONDITION_TITLE_MALE, {
                                    hash: e.key
                                }) : (0, z.jsx)(Pc.SelectedInfoPanel.CITIZEN_CONDITION_TITLE_FEMALE, {
                                    hash: e.key
                                })
                            })]
                        })
                    })
                })
            },
            Ice = ({
                className: e,
                children: t
            }) => (0, z.jsxs)("div", {
                className: Zu()(xce.badge, e),
                children: [t, (0, z.jsx)(ef, {
                    src: "Media/Game/Icons/Citizen.svg",
                    className: xce.badgeIcon
                })]
            });
        X.add("game-ui/game/components/selected-info-panel/shared-components/notification/notification.tsx", {
            get Notification() {
                return vce
            },
            set Notification(e) {
                vce = e
            },
            get HappinessNotification() {
                return _ce
            },
            set HappinessNotification(e) {
                _ce = e
            },
            get AverageHappinessNotification() {
                return bce
            },
            set AverageHappinessNotification(e) {
                bce = e
            },
            get ProfitabilityNotification() {
                return Tce
            },
            set ProfitabilityNotification(e) {
                Tce = e
            },
            get ConditionNotification() {
                return Ece
            },
            set ConditionNotification(e) {
                Ece = e
            },
            get NotificationBadge() {
                return Ice
            },
            set NotificationBadge(e) {
                Ice = e
            }
        });
        let yce = {
            "status-section": "status-section_J1G notifications-section_cKq",
            statusSection: "status-section_J1G notifications-section_cKq",
            row: "row_Azp",
            bottom: "bottom_Xm5"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/citizen-sections/status-section.module.scss", {
            get classes() {
                return yce
            },
            set classes(e) {
                Object.assign(yce, e)
            }
        });
        const jce = yce;
        var Sce = ({
            conditions: e,
            notifications: t,
            happiness: n,
            focusKey: s,
            tooltipTags: i
        }) => {
            const a = (0, Y.useRef)(null);
            return (0, z.jsx)(Ip, {
                ref: a,
                focusKey: s,
                className: jce.statusSection,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsxs)("div", {
                        className: Zu()(jce.row, jce.top),
                        children: [n && (0, z.jsx)(_ce, {
                            anchorElRef: a,
                            notification: n,
                            tooltipTags: i
                        }), e?.length > 0 && e?.map((e => (0, z.jsx)(Ece, {
                            anchorElRef: a,
                            notification: e,
                            tooltipTags: i
                        }, e.key)))]
                    }), t?.length > 0 && t?.map(((e, t) => (0, z.jsx)("div", {
                        className: Zu()(jce.row, jce.bottom),
                        children: (0, z.jsx)(vce, {
                            anchorElRef: a,
                            notification: e,
                            tooltipTags: i
                        })
                    }, t)))]
                })
            })
        };

        function Cce(e) {
            tl("ColorSection", "setColor", Vu(e, "Game.UI.Common.UIColor"))
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/citizen-sections/status-section.tsx", {
            get StatusSection() {
                return Sce
            },
            set StatusSection(e) {
                Sce = e
            }
        }), X.add("game-ui/game/components/selected-info-panel/selected-info-sections/color-section/color-section-bindings.ts", {
            get setColor() {
                return Cce
            },
            set setColor(e) {
                Cce = e
            }
        });
        var Nce = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            color: s
        }) => {
            const i = ww(e, n, t);
            return (0, z.jsx)(iy, {
                disableFocus: !0,
                tooltip: i && (0, z.jsx)(zf, {
                    text: i
                }),
                children: (0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.COLOR, {}),
                    right: (0, z.jsx)(PQ, {
                        value: s,
                        onChange: Cce,
                        className: Bae.colorField
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/color-section/color-section.tsx", {
            get ColorSection() {
                return Nce
            },
            set ColorSection(e) {
                Nce = e
            }
        });
        var wce = el("LinesSection", "toggle");
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/lines-section/lines-section-bindings.ts", {
            get toggleRouteActive() {
                return wce
            },
            set toggleRouteActive(e) {
                wce = e
            }
        });
        let Oce = {
            detail: "detail_dEX item-focused_FuT",
            color: "color_YMp",
            toggle: "toggle_MTW",
            button: "button_UgX item-mouse-states_Fmi item-focused_FuT",
            row: "row_aZw",
            "focusable-toggle": "focusable-toggle_EKK",
            focusableToggle: "focusable-toggle_EKK",
            "space-between": "space-between_r5l",
            spaceBetween: "space-between_r5l",
            icon: "icon_BuO icon_hE2",
            "toggle-icon": "toggle-icon_tCU",
            toggleIcon: "toggle-icon_tCU",
            "toggle-icon-off": "toggle-icon-off_pNM",
            toggleIconOff: "toggle-icon-off_pNM",
            "toggle-button": "toggle-button_lLq",
            toggleButton: "toggle-button_lLq"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/lines-section/lines-section.module.scss", {
            get classes() {
                return Oce
            },
            set classes(e) {
                Object.assign(Oce, e)
            }
        });
        const Pce = Oce;
        var Lce = ({
                group: e,
                tooltipTags: t,
                tooltipKeys: n,
                hasLines: s,
                lines: i,
                hasPassengers: a,
                passengers: o
            }) => {
                const r = ww(e, n, t, !0),
                    l = Dm();
                return (0, z.jsxs)(z.Fragment, {
                    children: [a && (0, z.jsx)(iy, {
                        tooltip: (0, z.jsx)(zf, {
                            children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                                hash: "LinesSectionWaitingPassengers"
                            })
                        }),
                        children: (0, z.jsx)(Ty, {
                            uppercase: !0,
                            left: (0, z.jsx)(Pc.SelectedInfoPanel.WAITING_PASSENGERS, {}),
                            right: (0, z.jsx)(Gc, {
                                value: o,
                                unit: Oc.Integer
                            })
                        })
                    }), s && (0, z.jsxs)(iy, {
                        disableFocus: !0,
                        tooltip: r && (0, z.jsx)(zf, {
                            text: r
                        }),
                        children: [(0, z.jsx)(Ty, {
                            uppercase: !0,
                            disableFocus: !!i.length,
                            left: (0, z.jsx)(Pc.SelectedInfoPanel.LINES, {}),
                            right: i.length
                        }), (0, z.jsx)(Ip, {
                            children: (0, z.jsx)(tp, {
                                children: i && i.length > 0 && i.map(((e, t) => (0, z.jsx)(Ace, {
                                    line: e
                                }, t)))
                            })
                        }), l && (0, z.jsx)(Zre, {
                            label: (0, z.jsx)(Pc.Transport.LINES_OVERVIEW_BUTTON, {}),
                            onSelect: sT
                        })]
                    })]
                })
            },
            Ace = ({
                line: e
            }) => {
                const t = sl(bw),
                    n = (0, Y.useMemo)((() => Ur(e.entity, t)), [e.entity, t]),
                    s = (0, Y.useCallback)((() => Tw(e.entity)), [e.entity]),
                    i = (0, Y.useCallback)((() => Ew(e.entity)), [e.entity]),
                    a = (0, Y.useCallback)((() => wce(e.entity, !e.active)), [e.active, e.entity]),
                    o = (0, Y.useMemo)((() => ({
                        Select: s,
                        "Select Route": i
                    })), [s, i]),
                    r = Dm();
                return (0, z.jsx)(Ep, {
                    className: Zu()(Pce.detail, Pce.row, Pce.spaceBetween),
                    children: (0, z.jsx)(Ag, {
                        actions: o,
                        children: (0, z.jsxs)(tp, {
                            children: [(0, z.jsxs)("div", {
                                className: Zu()(Pce.focusableToggle, Pce.row),
                                children: [(0, z.jsx)(b6, {
                                    focusKey: Ig,
                                    className: Pce.toggle,
                                    onChange: i,
                                    checked: n,
                                    style: {
                                        borderColor: WC(e.color)
                                    }
                                }), (0, z.jsx)(Ku, {
                                    value: e.name
                                })]
                            }), !r && (0, z.jsxs)(Gp, {
                                onSelect: s,
                                onClick: nx,
                                className: Pce.button,
                                children: [(0, z.jsx)("img", {
                                    src: "Media/Glyphs/ViewInfo.svg",
                                    className: Pce.icon
                                }), (0, z.jsx)(Pc.SelectedInfoPanel.DETAILS, {})]
                            }), (0, z.jsx)(Gp, {
                                className: Zu()(Pce.button, Pce.toggleButton),
                                onSelect: a,
                                onClick: nx,
                                children: (0, z.jsx)(ef, {
                                    src: "Media/Glyphs/OnOff.svg",
                                    className: Zu()(Pce.toggleIcon, !e.active && Pce.toggleIconOff)
                                })
                            })]
                        })
                    })
                })
            };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/lines-section/lines-section.tsx", {
            get LinesSection() {
                return Lce
            },
            set LinesSection(e) {
                Lce = e
            },
            get LineItem() {
                return Ace
            },
            set LineItem(e) {
                Ace = e
            }
        });
        var Mce = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            localServiceBuildings: s
        }) => {
            const i = ww(e, n, t);
            return (0, z.jsxs)(iy, {
                disableFocus: s.length > 0,
                tooltip: i && (0, z.jsx)(zf, {
                    text: i
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.LOCAL_SERVICES_TITLE, {}),
                    right: s.length
                }), s.length > 0 ? (0, z.jsx)(tp, {
                    children: s.map(((e, t) => (0, z.jsx)(Rce, {
                        building: e
                    }, t)))
                }) : (0, z.jsx)(Ty, {
                    subRow: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.LOCAL_SERVICES_NONE_ASSIGNED, {})
                })]
            })
        };
        const Rce = ({
            building: e
        }) => {
            const t = (0, Y.useCallback)((() => Tw(e.entity)), [e]);
            return (0, z.jsx)(Ty, {
                subRow: !0,
                icon: e.serviceIcon ?? void 0,
                left: (0, z.jsx)(Ku, {
                    value: e.name
                }),
                link: (0, z.jsx)(ile, {
                    onSelect: t,
                    children: (0, z.jsx)(Pc.SelectedInfoPanel.DETAILS, {})
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/local-services-section/local-services-section.tsx", {
            get LocalServicesSection() {
                return Mce
            },
            set LocalServicesSection(e) {
                Mce = e
            }
        });
        var kce = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            destroyer: s
        }) => {
            const i = ww(e, t, n);
            return (0, z.jsxs)(iy, {
                tooltip: i && (0, z.jsx)(zf, {
                    text: i
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTROYED_TREE, {})
                }), null != s && (0, z.jsx)(Yre, {
                    children: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.DESTROYED_TREE_DESCRIPTION, {
                            hash: s
                        })
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/object-sections/destroyed-tree-section.tsx", {
            get DestroyedTreeSection() {
                return kce
            },
            set DestroyedTreeSection(e) {
                kce = e
            }
        });
        var Dce = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            resourceAmount: s,
            resourceKey: i
        }) => {
            const a = ww(e, t, n);
            return (0, z.jsx)(iy, {
                tooltip: a && (0, z.jsx)(zf, {
                    text: a
                }),
                children: (0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.RESOURCE, {
                        hash: i
                    }),
                    right: s
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/resource-section.tsx", {
            get ResourceSection() {
                return Dce
            },
            set ResourceSection(e) {
                Dce = e
            }
        });
        let Fce = {
            "border-highlight": "border-highlight_ze2",
            borderHighlight: "border-highlight_ze2"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/road-section/road-section.module.scss", {
            get classes() {
                return Fce
            },
            set classes(e) {
                Object.assign(Fce, e)
            }
        });
        const Uce = Fce;
        var Bce = ({
            volumeData: e,
            flowData: t,
            length: n,
            bestCondition: s,
            worstCondition: i,
            condition: a,
            upkeep: o
        }) => {
            const r = Cw("RoadSectionLength"),
                l = Cw("RoadSectionCondition"),
                c = Cw("RoadSectionUpkeep"),
                u = Cw("RoadSectionFlow"),
                d = Cw("RoadSectionVolume");
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)(iy, {
                    tooltip: c && (0, z.jsx)(zf, {
                        text: c
                    }),
                    children: (0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.ROAD_UPKEEP, {}),
                        right: (0, z.jsx)(Gc, {
                            value: o,
                            unit: Oc.MoneyPerMonth
                        })
                    })
                }), (0, z.jsx)(iy, {
                    tooltip: r && (0, z.jsx)(zf, {
                        text: r
                    }),
                    children: (0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.ROAD_LENGTH, {}),
                        right: (0, z.jsx)(Gc, {
                            value: n,
                            unit: Oc.Length
                        })
                    })
                }), (0, z.jsx)(iy, {
                    tooltip: l && (0, z.jsx)(zf, {
                        text: l
                    }),
                    children: (0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.ROAD_CONDITION, {}),
                        right: s === a || i === s || a === s ? (0, z.jsx)(Gc, {
                            value: s,
                            unit: Oc.Percentage
                        }) : (0, z.jsx)(Pc.SelectedInfoPanel.ROAD_CONDITION_FORMAT, {
                            WORST: (0, z.jsx)(Gc, {
                                value: i,
                                unit: Oc.Percentage
                            }),
                            BEST: (0, z.jsx)(Gc, {
                                value: s,
                                unit: Oc.Percentage
                            }),
                            AVG: (0, z.jsx)(Gc, {
                                value: a,
                                unit: Oc.Percentage
                            })
                        })
                    })
                }), (0, z.jsx)(iy, {
                    disableFocus: !0,
                    tooltip: u && (0, z.jsx)(zf, {
                        text: u
                    }),
                    children: (0, z.jsxs)(Ip, {
                        className: Uce.borderHighlight,
                        children: [(0, z.jsx)(Ty, {
                            uppercase: !0,
                            disableFocus: !0,
                            left: (0, z.jsx)(Pc.SelectedInfoPanel.ROAD_TRAFFIC_FLOW, {})
                        }), (0, z.jsx)(d5, {
                            data: t
                        })]
                    })
                }), (0, z.jsx)(iy, {
                    disableFocus: !0,
                    tooltip: d && (0, z.jsx)(zf, {
                        text: d
                    }),
                    children: (0, z.jsxs)(Ip, {
                        className: Uce.borderHighlight,
                        children: [(0, z.jsx)(Ty, {
                            uppercase: !0,
                            disableFocus: !0,
                            left: (0, z.jsx)(Pc.SelectedInfoPanel.ROAD_TRAFFIC_VOLUME, {})
                        }), (0, z.jsx)(u5, {
                            data: e
                        })]
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/road-section/road-section.tsx", {
            get RoadSection() {
                return Bce
            },
            set RoadSection(e) {
                Bce = e
            }
        });
        var Gce = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            stops: s,
            length: i,
            usage: a,
            cargo: o
        }) => {
            const r = Dm(),
                l = ww(e, t, n, !0),
                c = sl(_w).includes("CargoRoute");
            return (0, z.jsx)(z.Fragment, {
                children: (0, z.jsxs)(iy, {
                    disableFocus: !0,
                    tooltip: l && (0, z.jsx)(zf, {
                        text: l
                    }),
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        disableFocus: !0,
                        left: c ? (0, z.jsx)(Pc.SelectedInfoPanel.CARGO_TRANSPORT_ROUTE, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.PUBLIC_TRANSPORT_LINE, {})
                    }), (0, z.jsx)(Ty, {
                        subRow: !0,
                        disableFocus: !0,
                        right: (0, z.jsx)(Gc, {
                            value: i,
                            unit: Oc.Length
                        }),
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.LINE_VISUALIZER_LENGTH, {})
                    }), (0, z.jsx)(Ty, {
                        subRow: !0,
                        disableFocus: !0,
                        right: (0, z.jsx)(Gc, {
                            value: s,
                            unit: Oc.Integer
                        }),
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.LINE_VISUALIZER_STOPS, {})
                    }), (0, z.jsx)(Ty, {
                        subRow: !0,
                        disableFocus: !0,
                        right: (0, z.jsx)(Gc, {
                            value: o,
                            unit: c ? Oc.Weight : Oc.Integer
                        }),
                        left: c ? (0, z.jsx)(Pc.Transport.LEGEND_CARGO, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.PASSENGERS_TITLE, {})
                    }), (0, z.jsx)(Ty, {
                        subRow: !0,
                        disableFocus: !0,
                        right: (0, z.jsx)(Gc, {
                            value: 100 * a,
                            unit: Oc.Percentage
                        }),
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.LINE_USAGE, {})
                    }), r && (0, z.jsx)(Zre, {
                        label: (0, z.jsx)(Pc.Transport.LINES_OVERVIEW_BUTTON, {}),
                        onSelect: sT
                    })]
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/line-section.tsx", {
            get LineSection() {
                return Gce
            },
            set LineSection(e) {
                Gce = e
            }
        });
        let Vce = {
            button: "button_YEx item-states_QjV",
            "toggle-states": "toggle-states_oKG",
            toggleStates: "toggle-states_oKG",
            icon: "icon_vbQ",
            locked: "locked_Q0p"
        };
        X.add("game-ui/game/themes/primary-button.module.scss", {
            get classes() {
                return Vce
            },
            set classes(e) {
                Object.assign(Vce, e)
            }
        });
        const Hce = Vce;

        function Kce(e) {
            tl("ScheduleSection", "setSchedule", e)
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/schedule-section/schedule-bindings.ts", {
            get setSchedule() {
                return Kce
            },
            set setSchedule(e) {
                Kce = e
            }
        });
        let Wce = {
            buttons: "buttons_XOL",
            button: "button_kxx",
            left: "left_X6Y",
            right: "right_IAC",
            icon: "icon_Sz0",
            hint: "hint_h1_"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/schedule-section/schedule-section.module.scss", {
            get classes() {
                return Wce
            },
            set classes(e) {
                Object.assign(Wce, e)
            }
        });
        const zce = Wce;
        var Yce = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            schedule: s
        }) => {
            const i = (0, Y.useCallback)((() => Kce(0)), []),
                a = (0, Y.useCallback)((() => Kce(1)), []),
                o = (0, Y.useCallback)((() => Kce(2)), []),
                r = ww(e, n, t, !0),
                l = sl(_w),
                c = (0, Y.useMemo)((() => l.includes("CargoRoute") ? "CargoRoute" : "TransportLine"), [l]),
                [u, d] = (0, Y.useState)(!1),
                m = (0, Y.useMemo)((() => ({
                    "Change Line Schedule": e => {
                        if (0 !== e) {
                            const t = s + e > 2 ? 0 : s + e < 0 ? 2 : s + e;
                            t !== s && (Kce(t), lp(jM.drag))
                        }
                    }
                })), [s]);
            return (0, z.jsx)(Ag, {
                actions: m,
                children: (0, z.jsx)(Ah, {
                    onFocusChange: d,
                    children: (0, z.jsx)(iy, {
                        tooltip: r && (0, z.jsx)(zf, {
                            text: r
                        }),
                        children: (0, z.jsx)(Ty, {
                            uppercase: !0,
                            disableFocus: !0,
                            left: (0, z.jsx)(Pc.SelectedInfoPanel.SCHEDULE, {}),
                            right: (0, z.jsxs)("div", {
                                className: zce.buttons,
                                children: [(0, z.jsx)(Pf, {
                                    action: "Change Line Schedule",
                                    active: u,
                                    className: zce.hint
                                }), (0, z.jsxs)(tp, {
                                    children: [(0, z.jsx)(Tg, {
                                        tooltip: (0, z.jsx)(Pc.SelectedInfoPanel.SCHEDULE_DAY_TOOLTIP, {
                                            hash: c
                                        }),
                                        children: (0, z.jsx)($ce, {
                                            icon: Aae(0),
                                            onSelect: i,
                                            selected: 0 === s,
                                            className: Zu()(zce.button, zce.left)
                                        })
                                    }), (0, z.jsx)(Tg, {
                                        tooltip: (0, z.jsx)(Pc.SelectedInfoPanel.SCHEDULE_NIGHT_TOOLTIP, {
                                            hash: c
                                        }),
                                        children: (0, z.jsx)($ce, {
                                            icon: Aae(1),
                                            onSelect: a,
                                            selected: 1 === s,
                                            className: zce.button
                                        })
                                    }), (0, z.jsx)(Tg, {
                                        tooltip: (0, z.jsx)(Pc.SelectedInfoPanel.SCHEDULE_CONTINUOUS_TOOLTIP, {
                                            hash: c
                                        }),
                                        children: (0, z.jsx)($ce, {
                                            icon: Aae(2),
                                            selected: 2 === s,
                                            onSelect: o,
                                            className: Zu()(zce.button, zce.right)
                                        })
                                    })]
                                })]
                            })
                        })
                    })
                })
            })
        };
        const $ce = ({
            icon: e,
            selected: t,
            className: n,
            onSelect: s
        }) => (0, z.jsx)(Gp, {
            focusKey: Ig,
            theme: Hce,
            onSelect: s,
            selected: t,
            className: n,
            children: (0, z.jsx)("img", {
                src: e,
                className: zce.icon
            })
        });
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/schedule-section/schedule-section.tsx", {
            get ScheduleSection() {
                return Yce
            },
            set ScheduleSection(e) {
                Yce = e
            }
        });
        let qce = {
            "route-slider": "route-slider__kp",
            routeSlider: "route-slider__kp"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/route-slider.module.scss", {
            get classes() {
                return qce
            },
            set classes(e) {
                Object.assign(qce, e)
            }
        });
        const Xce = qce;

        function Qce(e) {
            tl("TicketPriceSection", "setTicketPrice", e)
        }
        var Zce = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            sliderData: s
        }) => {
            const [i, a] = (0, Y.useState)(s.value), o = Dm(), r = (0, Y.useCallback)((e => {
                a(e), o && Qce(e)
            }), [o]), l = (0, Y.useCallback)((() => {
                Qce(i)
            }), [i]), c = OM(s.step), u = ww(e, t, n);
            return (0, z.jsxs)(iy, {
                tooltip: u && (0, z.jsx)(zf, {
                    text: u
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.TICKET_PRICE, {}),
                    right: 0 === i ? (0, z.jsx)(Pc.SelectedInfoPanel.TICKET_PRICE_FREE, {}) : (0, z.jsx)(Gc, {
                        value: i,
                        unit: Oc.Money
                    })
                }), (0, z.jsx)("div", {
                    className: Xce.routeSlider,
                    children: (0, z.jsx)(CM, {
                        valueTransformer: c,
                        value: i,
                        start: 0,
                        end: s.range.max,
                        gamepadStep: s.step,
                        onDragEnd: l,
                        onChange: r
                    })
                })]
            })
        };

        function Jce(e) {
            tl("VehicleCountSection", "setVehicleCount", e)
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/ticket-price-section.tsx", {
            get TicketPriceSection() {
                return Zce
            },
            set TicketPriceSection(e) {
                Zce = e
            }
        });
        var eue = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            vehicleCount: s,
            activeVehicles: i,
            vehicleCountMin: a,
            vehicleCountMax: o
        }) => {
            const r = ww(e, t, n, !0),
                l = OM(1);
            return (0, z.jsxs)(iy, {
                tooltip: r && (0, z.jsx)(zf, {
                    text: r
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_COUNT, {}),
                    right: (0, z.jsx)(cu, {
                        value: s,
                        total: o,
                        unit: Oc.Integer
                    })
                }), (0, z.jsx)("div", {
                    className: Xce.routeSlider,
                    children: (0, z.jsx)(CM, {
                        valueTransformer: l,
                        value: s,
                        start: a,
                        end: o,
                        gamepadStep: 1,
                        onChange: Jce
                    })
                }), (0, z.jsx)(Ty, {
                    subRow: !0,
                    disableFocus: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.ACTIVE_VEHICLES, {}),
                    right: (0, z.jsx)(Gc, {
                        value: i
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/route-sections/vehicle-count-section.tsx", {
            get VehicleCountSection() {
                return eue
            },
            set VehicleCountSection(e) {
                eue = e
            }
        });
        const tue = "ActionsSection";
        $r(tue, "moveableObjectName");
        var nue = $r(tue, "moving"),
            sue = $r(tue, "editingLot"),
            iue = Jr(tue, "focus"),
            aue = Jr(tue, "toggleMove"),
            oue = Jr(tue, "follow"),
            rue = Jr(tue, "delete"),
            lue = Jr(tue, "toggle"),
            cue = Jr(tue, "toggleEmptying"),
            uue = Jr(tue, "toggleLotTool");
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/actions-section/actions-section-bindings.ts", {
            get moveableObjectName() {
                return moveableObjectName
            },
            set moveableObjectName(e) {
                moveableObjectName = e
            },
            get moving() {
                return moving
            },
            set moving(e) {
                moving = e
            },
            get editingLot() {
                return editingLot
            },
            set editingLot(e) {
                editingLot = e
            },
            get focusSelectedEntity() {
                return iue
            },
            set focusSelectedEntity(e) {
                iue = e
            },
            get toggleMove() {
                return aue
            },
            set toggleMove(e) {
                aue = e
            },
            get followSelectedEntity() {
                return oue
            },
            set followSelectedEntity(e) {
                oue = e
            },
            get deleteSelectedEntity() {
                return rue
            },
            set deleteSelectedEntity(e) {
                rue = e
            },
            get toggleSelectedEntity() {
                return lue
            },
            set toggleSelectedEntity(e) {
                lue = e
            },
            get toggleEmptying() {
                return cue
            },
            set toggleEmptying(e) {
                cue = e
            },
            get toggleLotTool() {
                return uue
            },
            set toggleLotTool(e) {
                uue = e
            }
        });
        let due = {
            button: "button_Z9O button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            icon: "icon_Tdt icon_soN icon_Iwk"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/actions-section/action-button.module.scss", {
            get classes() {
                return due
            },
            set classes(e) {
                Object.assign(due, e)
            }
        });
        const mue = due;
        let hue = {
            "actions-section": "actions-section_X1x",
            actionsSection: "actions-section_X1x",
            button: "button_xGY",
            toggle: "toggle_LKL",
            off: "off_X4Y",
            "out-of-service": "out-of-service_Kfh",
            outOfService: "out-of-service_Kfh",
            label: "label_y4N",
            hint: "hint_Grf",
            "hint-icon": "hint-icon_pyg",
            hintIcon: "hint-icon_pyg"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/actions-section/actions-section.module.scss", {
            get classes() {
                return hue
            },
            set classes(e) {
                Object.assign(hue, e)
            }
        });
        const gue = hue,
            pue = new Eg("FOCUS_BUTTON"),
            fue = new Eg("RELOCATE_BUTTON_KEY"),
            xue = new Eg("FOLLOW_BUTTON_KEY"),
            vue = new Eg("EMPTY_BUTTON_KEY"),
            _ue = new Eg("LOT_BUTTON_KEY"),
            bue = new Eg("DELETE_BUTTON_KEY"),
            Tue = new Eg("DISABLE_BUTTON_KEY");
        var Eue = ({
            focusable: e,
            focusing: t,
            following: n,
            followable: s,
            moveable: i,
            deletable: a,
            disabled: o,
            disableable: r,
            emptying: l,
            emptiable: c,
            hasLotTool: u,
            focusKey: d
        }) => {
            const [m, h] = (0, Y.useState)(null), g = sl(nue), p = sl(sue), f = (0, Y.useContext)(sE), x = sl(ES), v = sl(jS), _ = sl(_w), b = sl(cw), T = (0, Y.useMemo)((() => `${kx.value?.selectedInfoPanelDelete}+${b}`), [b]);
            lg(T, a);
            const E = sl(Ul),
                I = (0, Y.useCallback)((() => {
                    f.showDialog((0, z.jsx)(jI, {
                        title: (0, z.jsx)(Pc.Common.WARNING, {}),
                        message: (0, z.jsx)(Pc.SelectedInfoPanel.CONFIRM_DELETE_WARNING, {}),
                        onConfirm: rue
                    }))
                }), [f]),
                y = (0, Y.useCallback)((() => {
                    uue()
                }), []),
                j = (0, Y.useMemo)((() => _.includes("Destroyed")), [_]),
                S = !n || x.length < v,
                C = (0, Y.useCallback)((() => oue()), []),
                N = (0, Y.useCallback)((e => {
                    e || h(null)
                }), []);
            return (0, z.jsx)("div", {
                className: gue.actionsSection,
                children: (0, z.jsx)(Ah, {
                    onFocusChange: N,
                    children: (0, z.jsxs)(tp, {
                        focusKey: d,
                        initialFocused: pue,
                        onChange: h,
                        children: [e && (0, z.jsx)(kY, {
                            title: t ? (0, z.jsx)(Pc.SelectedInfoPanel.UNFOCUS, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.FOCUS, {}),
                            description: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                                hash: t ? "ActionsSectionUnfocus" : "ActionsSectionFocus"
                            }),
                            shortcut: (0, z.jsx)(Lf, {
                                action: "Focus Selected Object",
                                active: E
                            }),
                            children: (0, z.jsx)(sf, {
                                disableHint: !0,
                                focusKey: pue,
                                theme: mue,
                                className: gue.button,
                                selected: t,
                                src: "Media/Game/Icons/MapMarker.svg",
                                onSelect: iue,
                                onClick: nx,
                                shortcut: "Focus Selected Object",
                                children: (0, z.jsx)(Pf, {
                                    action: "Select",
                                    active: m === pue,
                                    className: gue.hint
                                })
                            })
                        }), i && (0, z.jsx)(kY, {
                            title: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP_TITLE, {
                                hash: "ActionsSectionRelocate"
                            }),
                            description: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                                hash: "ActionsSectionRelocate"
                            }),
                            shortcut: (0, z.jsx)(Lf, {
                                action: "Relocate Selected Object",
                                active: E
                            }),
                            children: (0, z.jsx)(sf, {
                                disableHint: !0,
                                focusKey: fue,
                                theme: mue,
                                className: gue.button,
                                selected: g,
                                disabled: j,
                                src: "Media/Game/Icons/Relocate.svg",
                                selectSound: rp.relocateBuilding,
                                onSelect: aue,
                                onClick: nx,
                                shortcut: "Relocate Selected Object",
                                children: (0, z.jsx)(Pf, {
                                    action: "Select",
                                    active: m === fue,
                                    className: gue.hint
                                })
                            })
                        }), s && (0, z.jsx)(kY, {
                            title: n ? (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP_TITLE, {
                                hash: "ActionsSectionUnfollowCitizen"
                            }) : x.length === v ? (0, z.jsx)(Pc.SelectedInfoPanel.MAX_FOLLOWED_CITIZENS_REACHED, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP_TITLE, {
                                hash: "ActionsSectionFollowCitizen"
                            }),
                            description: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                                hash: n ? "ActionsSectionUnfollowCitizen" : "ActionsSectionFollowCitizen"
                            }),
                            shortcut: (0, z.jsx)(Lf, {
                                action: "Toggle Follow Selected Citizen",
                                active: E
                            }),
                            children: (0, z.jsx)(sf, {
                                disableHint: !0,
                                focusKey: xue,
                                disabled: !S,
                                theme: mue,
                                selected: n,
                                className: gue.button,
                                src: n ? "Media/Game/Icons/Unfollow.svg" : "Media/Game/Icons/Follow.svg",
                                onSelect: C,
                                onClick: nx,
                                shortcut: "Toggle Follow Selected Citizen",
                                children: (0, z.jsx)(Pf, {
                                    action: "Select",
                                    active: m === xue,
                                    className: gue.hint
                                })
                            })
                        }), c && (0, z.jsx)(kY, {
                            title: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP_TITLE, {
                                hash: l ? "ActionsSectionStopEmptying" : "ActionsSectionStartEmptying"
                            }),
                            description: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                                hash: l ? "ActionsSectionStopEmptying" : "ActionsSectionStartEmptying"
                            }),
                            shortcut: (0, z.jsx)(Lf, {
                                action: "Toggle Selected Object Emptying",
                                active: E
                            }),
                            children: (0, z.jsx)(sf, {
                                disableHint: !0,
                                focusKey: vue,
                                selected: l,
                                disabled: j,
                                theme: mue,
                                className: gue.button,
                                onSelect: cue,
                                onClick: nx,
                                src: "Media/Game/Icons/Empty.svg",
                                shortcut: "Toggle Selected Object Emptying",
                                children: (0, z.jsx)(Pf, {
                                    action: "Select",
                                    active: m === vue,
                                    className: gue.hint
                                })
                            })
                        }), u && (0, z.jsx)(kY, {
                            title: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP_TITLE, {
                                hash: "ActionsSectionAreaTool"
                            }),
                            description: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                                hash: "ActionsSectionAreaTool"
                            }),
                            shortcut: (0, z.jsx)(Lf, {
                                action: "Toggle Selected Lot Edit",
                                active: E
                            }),
                            children: (0, z.jsx)(sf, {
                                disableHint: !0,
                                focusKey: _ue,
                                selected: p,
                                disabled: j,
                                theme: mue,
                                className: gue.button,
                                onSelect: y,
                                onClick: nx,
                                src: "Media/Game/Icons/LotTool.svg",
                                shortcut: "Toggle Selected Lot Edit",
                                children: (0, z.jsx)(Pf, {
                                    action: "Select",
                                    active: m === _ue,
                                    className: gue.hint
                                })
                            })
                        }), a && (0, z.jsx)(wx, {
                            uiTag: T,
                            children: (0, z.jsx)(kY, {
                                title: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP_TITLE, {
                                    hash: "ActionsSectionDelete"
                                }),
                                description: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                                    hash: "ActionsSectionDelete"
                                }),
                                shortcut: (0, z.jsx)(Lf, {
                                    action: "Delete Selected Object",
                                    active: E
                                }),
                                children: (0, z.jsx)(sf, {
                                    disableHint: !0,
                                    focusKey: bue,
                                    tinted: !0,
                                    theme: mue,
                                    className: gue.button,
                                    src: "Media/Glyphs/Trash.svg",
                                    onSelect: I,
                                    onClick: nx,
                                    shortcut: "Delete Selected Object",
                                    children: (0, z.jsx)(Pf, {
                                        action: "Select",
                                        active: m === bue,
                                        className: gue.hint
                                    })
                                })
                            })
                        }), r && (0, z.jsxs)("div", {
                            className: gue.outOfService,
                            children: [o && (0, z.jsx)("div", {
                                className: gue.label,
                                children: (0, z.jsx)(Pc.SelectedInfoPanel.OUT_OF_SERVICE, {})
                            }), (0, z.jsx)(kY, {
                                title: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP_TITLE, {
                                    hash: o ? "Reactivate" : "Deactivate"
                                }),
                                description: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                                    hash: Iue(o, _)
                                }),
                                shortcut: (0, z.jsx)(Lf, {
                                    action: "Toggle Selected Object Active",
                                    active: E
                                }),
                                children: (0, z.jsx)(sf, {
                                    disableHint: !0,
                                    focusKey: Tue,
                                    tinted: !0,
                                    src: "Media/Glyphs/OnOff.svg",
                                    theme: mue,
                                    disabled: j,
                                    className: Zu()(gue.button, gue.toggle, o && gue.off),
                                    selectSound: o ? rp.enableBuilding : rp.disableBuilding,
                                    onSelect: lue,
                                    onClick: nx,
                                    shortcut: "Toggle Selected Object Active",
                                    children: (0, z.jsx)(Pf, {
                                        action: "Select",
                                        active: m === Tue,
                                        className: gue.hint
                                    })
                                })
                            })]
                        })]
                    })
                })
            })
        };

        function Iue(e, t) {
            return t.includes("TransportLine") ? t.includes("CargoRoute") ? e ? "ReactivateCargoRoute" : "DeactivateCargoRoute" : e ? "ReactivatePublicTransportLine" : "DeactivatePublicTransportLine" : e ? "Reactivate" : "Deactivate"
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/actions-section/actions-section.tsx", {
            get ActionsSection() {
                return Eue
            },
            set ActionsSection(e) {
                Eue = e
            }
        });
        let yue = {
            "description-section": "description-section_wKs",
            descriptionSection: "description-section_wKs",
            description: "description_jgm",
            "effects-row": "effects-row_FPw",
            effectsRow: "effects-row_FPw"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/description-section/description-section.module.scss", {
            get classes() {
                return yue
            },
            set classes(e) {
                Object.assign(yue, e)
            }
        });
        const jue = yue;
        var Sue = ({
            localeId: e,
            effects: t
        }) => {
            const n = Dm();
            return (0, z.jsxs)(iy, {
                focusKey: n ? yg : Ig,
                className: jue.descriptionSection,
                children: [(0, z.jsx)("div", {
                    className: jue.description,
                    children: (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Tc, {
                            id: e
                        })
                    })
                }), t && (0, z.jsx)("div", {
                    className: jue.effectsRow,
                    children: (0, z.jsx)($A, {
                        components: q8,
                        data: t
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/description-section/description-section.tsx", {
            get DescriptionSection() {
                return Sue
            },
            set DescriptionSection(e) {
                Sue = e
            }
        });
        let Cue = {
            "notifications-section": "notifications-section_cKq",
            notificationsSection: "notifications-section_cKq",
            factors: "factors_Y7i"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/notification-sections/notifications-section.module.scss", {
            get classes() {
                return Cue
            },
            set classes(e) {
                Object.assign(Cue, e)
            }
        });
        const Nue = Cue;
        var wue = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            averageHappiness: s,
            happinessFactors: i
        }) => {
            const a = ww(e, n, t, !0);
            return (0, z.jsx)(Tg, {
                direction: "right",
                tooltip: (0, z.jsxs)(z.Fragment, {
                    children: [i.length > 0 && (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)("div", {
                            className: Nue.factors,
                            children: i.map(((e, t) => (0, z.jsx)(Ey, {
                                left: e.weight > 0 ? (0, z.jsx)(Pc.Common.HAPPINESS_FACTOR_POSITIVE, {
                                    hash: e.factor
                                }) : (0, z.jsx)(Pc.Common.HAPPINESS_FACTOR_NEGATIVE, {
                                    hash: e.factor
                                }),
                                right: (0, z.jsx)("div", {
                                    className: Jx(I2, e.weight),
                                    children: (0, z.jsx)(Gc, {
                                        value: e.weight,
                                        signed: !0
                                    })
                                })
                            }, t)))
                        }), (0, z.jsx)(ay, {})]
                    }), a && (0, z.jsx)(zf, {
                        text: a
                    })]
                }),
                children: (0, z.jsx)(Ep, {
                    className: Nue.notificationsSection,
                    children: (0, z.jsx)(bce, {
                        notification: s
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/notification-sections/average-happiness-section.tsx", {
            get AverageHappinessSection() {
                return wue
            },
            set AverageHappinessSection(e) {
                wue = e
            }
        });
        var Oue = ({
            focusKey: e,
            notifications: t
        }) => (0, z.jsx)(Ip, {
            focusKey: e,
            className: Nue.notificationsSection,
            children: t.length > 0 && (0, z.jsx)(tp, {
                children: t?.map((e => (0, z.jsx)(vce, {
                    notification: e
                }, e.key)))
            })
        });
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/notification-sections/notifications-section.tsx", {
            get NotificationsSection() {
                return Oue
            },
            set NotificationsSection(e) {
                Oue = e
            }
        });
        var Pue = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            profitability: s,
            profitabilityFactors: i
        }) => {
            const a = ww(e, n, t, !0);
            return (0, z.jsx)(Tg, {
                direction: "right",
                tooltip: (0, z.jsxs)(z.Fragment, {
                    children: [i.length > 0 && (0, z.jsx)(z.Fragment, {
                        children: (0, z.jsx)("div", {
                            className: Nue.factors,
                            children: i.map(((e, t) => (0, z.jsx)(Ey, {
                                left: e.weight > 0 ? (0, z.jsx)(Pc.Common.HAPPINESS_FACTOR_POSITIVE, {
                                    hash: e.factor
                                }) : (0, z.jsx)(Pc.Common.HAPPINESS_FACTOR_NEGATIVE, {
                                    hash: e.factor
                                }),
                                right: (0, z.jsx)("div", {
                                    className: Jx(I2, e.weight),
                                    children: (0, z.jsx)(Gc, {
                                        value: e.weight,
                                        signed: !0
                                    })
                                })
                            }, t)))
                        })
                    }), (0, z.jsx)(ay, {}), a && (0, z.jsx)(zf, {
                        text: a
                    })]
                }),
                children: (0, z.jsx)(Ep, {
                    className: Nue.notificationsSection,
                    children: (0, z.jsx)(Tce, {
                        notification: s
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/notification-sections/profitability-section.tsx", {
            get ProfitabilitySection() {
                return Pue
            },
            set ProfitabilitySection(e) {
                Pue = e
            }
        });
        let Lue = {
            policy: "policy_oHN item-focused_FuT",
            "pad-first": "pad-first_WSR",
            padFirst: "pad-first_WSR",
            lock: "lock_uXt",
            compact: "compact_QL9",
            top: "top_LI4 item-mouse-states_Fmi",
            expanded: "expanded_g0B",
            "active-disabled": "active-disabled_HoS",
            activeDisabled: "active-disabled_HoS",
            locked: "locked_ihM",
            bottom: "bottom_qDc",
            disabled: "disabled_NSK",
            icon: "icon_BTB",
            label: "label_obe",
            "slider-wrapper": "slider-wrapper_Sx6",
            sliderWrapper: "slider-wrapper_Sx6",
            slider: "slider_jk5",
            value: "value_vMh",
            checkbox: "checkbox_OrD",
            "space-between": "space-between_mx0",
            spaceBetween: "space-between_mx0",
            "checkbox-hint": "checkbox-hint_cQ5",
            checkboxHint: "checkbox-hint_cQ5"
        };
        X.add("game-ui/game/components/policy/policy.module.scss", {
            get classes() {
                return Lue
            },
            set classes(e) {
                Object.assign(Lue, e)
            }
        });
        const Aue = Lue;
        var Mue = ({
                policy: e,
                className: t,
                onAdjust: n
            }) => {
                const [s, i] = (0, Y.useState)(e.active), [a, o] = (0, Y.useState)(!1), [r, l] = (0, Y.useState)(e.data?.value ?? 0), [c, u] = (0, Y.useState)(!1), d = Dm();
                (0, Y.useEffect)((() => {
                    const t = e.data?.value ?? 0;
                    c || r === t || l(t)
                }), [e, c, r]);
                const m = (0, Y.useCallback)((() => {
                        n(e.entity, !s, r), i(!s)
                    }), [s, n, e, r]),
                    h = (0, Y.useCallback)((() => {
                        u(!0)
                    }), []),
                    g = (0, Y.useCallback)((t => {
                        l(t), d && n(e.entity, s, t)
                    }), [s, d, n, e]),
                    p = (0, Y.useCallback)((() => {
                        n(e.entity, s, r), u(!1)
                    }), [s, n, e, r]),
                    f = (0, Y.useCallback)((() => {
                        m(), lp(rp.selectItem)
                    }), [m]),
                    x = !e.locked && e.active && null !== e.data;
                return (0, z.jsx)(wx, {
                    uiTag: e.uiTag,
                    children: (0, z.jsx)($2, {
                        title: (0, z.jsx)(Pc.Policy.TITLE, {
                            hash: e.id
                        }),
                        description: (0, z.jsx)(Pc.Policy.DESCRIPTION, {
                            hash: e.id
                        }),
                        locked: e.locked,
                        direction: "right",
                        requirements: e.requirements,
                        children: (0, z.jsx)(Ip, {
                            className: Zu()(Aue.policy, t),
                            onFocusChange: o,
                            children: (0, z.jsxs)(kg, {
                                onAction: f,
                                children: [(0, z.jsx)(kue, {
                                    focusKey: x ? Ig : yg,
                                    policy: e,
                                    active: s,
                                    focused: a,
                                    onToggle: m,
                                    className: Zu()(Aue.top, x && Aue.expanded)
                                }), x && e.data && r && (0, z.jsxs)("div", {
                                    className: Aue.bottom,
                                    children: [(0, z.jsx)("div", {
                                        className: Aue.sliderWrapper,
                                        children: (0, z.jsx)(CM, {
                                            value: r,
                                            start: e.data.range.min,
                                            end: e.data.range.max,
                                            gamepadStep: e.data.step,
                                            onDragStart: h,
                                            onDragEnd: p,
                                            onChange: g,
                                            disabled: !e.active,
                                            className: Aue.slider
                                        })
                                    }), (0, z.jsx)("div", {
                                        className: Aue.value,
                                        children: (0, z.jsx)(Gc, {
                                            value: r,
                                            unit: e.data.unit
                                        })
                                    })]
                                })]
                            })
                        })
                    })
                })
            },
            Rue = ({
                policy: e,
                onAdjust: t,
                onMouseOver: n,
                onMouseLeave: s
            }) => {
                const [i, a] = (0, Y.useState)(e.active), o = (0, Y.useCallback)((() => {
                    t(e.entity, !i, e.data?.value ?? 0), a(!i)
                }), [i, t, e.entity, e.data?.value]);
                return (0, z.jsx)(wx, {
                    uiTag: e.uiTag,
                    children: (0, z.jsx)($2, {
                        title: (0, z.jsx)(Pc.Policy.TITLE, {
                            hash: e.id
                        }),
                        description: (0, z.jsx)(Pc.Policy.DESCRIPTION, {
                            hash: e.id
                        }),
                        locked: e.locked,
                        direction: "down",
                        alignment: "end",
                        requirements: e.requirements,
                        children: (0, z.jsx)(kue, {
                            compact: !0,
                            onMouseOver: n,
                            onMouseLeave: s,
                            className: Aue.compact,
                            focusKey: Ig,
                            policy: e,
                            active: i,
                            onToggle: o
                        })
                    })
                })
            };
        const kue = ({
            focusKey: e,
            policy: t,
            active: n,
            compact: s = !1,
            focused: i,
            className: a,
            onToggle: o,
            onMouseOver: r,
            onMouseLeave: l
        }) => {
            const [c, u] = (0, Y.useState)(!1), d = (0, Y.useCallback)((() => u(!0)), []), m = (0, Y.useCallback)((() => u(!1)), []);
            return (0, z.jsxs)(Gp, {
                disableHint: !0,
                focusKey: e,
                onSelect: o,
                onClick: nx,
                onMouseOver: r,
                onMouseLeave: l,
                selectSound: rp.togglePolicy,
                disabled: t.locked,
                className: Zu()(t.locked && Aue.locked, c && Aue.activeDisabled, a),
                children: [(0, z.jsx)("img", {
                    src: t.icon,
                    className: Zu()(Aue.icon, !t.locked && !t.active && Aue.disabled)
                }), t.locked && (0, z.jsx)(C$, {
                    className: Aue.lock
                }), !s && (0, z.jsxs)("div", {
                    className: Aue.spaceBetween,
                    children: [(0, z.jsx)("div", {
                        className: Aue.label,
                        children: (0, z.jsx)(Pc.Policy.TITLE, {
                            hash: t.id
                        })
                    }), !t.locked && (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)(Pf, {
                            action: "Select",
                            active: i && !t.locked
                        }), (0, z.jsx)(ox, {
                            checked: n,
                            focusKey: Ig,
                            className: Aue.checkbox,
                            onMouseOver: d,
                            onMouseLeave: m
                        })]
                    })]
                })]
            })
        };
        X.add("game-ui/game/components/policy/policy.tsx", {
            get Policy() {
                return Mue
            },
            set Policy(e) {
                Mue = e
            },
            get CompactPolicy() {
                return Rue
            },
            set CompactPolicy(e) {
                Rue = e
            }
        });
        let Due = {
            "compact-policies": "compact-policies_qEr",
            compactPolicies: "compact-policies_qEr",
            label: "label_wgk"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/policies-section/policies-section.module.scss", {
            get classes() {
                return Due
            },
            set classes(e) {
                Object.assign(Due, e)
            }
        });
        const Fue = Due;
        var Uue = ({
            policies: e,
            group: t,
            tooltipKeys: n,
            tooltipTags: s
        }) => {
            const [i, a] = (0, Y.useState)(e?.length < 3), [o, r] = (0, Y.useState)(!1), l = (0, Y.useCallback)((() => r(!0)), []), c = (0, Y.useCallback)((() => r(!1)), []), u = ww(t, n, s, !0), d = sl(cw), m = (0, Y.useMemo)((() => `${kx.value?.selectedInfoPanelPolicies}+${d}`), [d]);
            return lg(m), (0, z.jsx)(wx, {
                uiTag: m,
                children: (0, z.jsx)(vy, {
                    disableFocus: !0,
                    initialExpanded: e?.length < 3,
                    tooltip: i && u && (0, z.jsx)(zf, {
                        text: u
                    }),
                    className: o ? xy.disableActiveState : void 0,
                    expandFromContent: !0,
                    onToggleExpanded: a,
                    header: i ? (0, z.jsx)(Ty, {
                        uppercase: !0,
                        disableFocus: !0,
                        className: Fue.label,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.POLICIES, {})
                    }) : (0, z.jsx)("div", {
                        className: Fue.compactPolicies,
                        children: e?.map((e => (0, z.jsx)(Rue, {
                            policy: e,
                            onAdjust: hC,
                            onMouseOver: l,
                            onMouseLeave: c
                        }, Dr(e.entity))))
                    }),
                    children: (0, z.jsx)(tp, {
                        children: e?.map(((e, t) => (0, z.jsx)(Mue, {
                            policy: e,
                            onAdjust: hC,
                            className: 0 === t ? Aue.padFirst : void 0
                        }, Dr(e.entity))))
                    })
                })
            })
        };

        function Bue({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            vehicleKey: s,
            vehicleCount: i,
            availableVehicleCount: a,
            vehicleCapacity: o,
            vehicleList: r
        }) {
            const l = ww(e, n, t, !0);
            return o > 0 ? (0, z.jsxs)(iy, {
                disableFocus: !0,
                children: [o - a > 0 && (0, z.jsx)(Ty, {
                    uppercase: !0,
                    tooltip: l && (0, z.jsx)(zf, {
                        children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                            hash: "VehiclesInMaintenance"
                        })
                    }),
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.MAINTENANCED_VEHICLES, {}),
                    right: (0, z.jsx)(Gc, {
                        value: o - a
                    })
                }), (0, z.jsx)(Ty, {
                    uppercase: !0,
                    tooltip: l && (0, z.jsx)(zf, {
                        text: l
                    }),
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLES, {
                        hash: s
                    }),
                    right: 0 === o ? (0, z.jsx)(Gc, {
                        value: i
                    }) : (0, z.jsx)(cu, {
                        value: i,
                        total: o
                    })
                }), r.length > 0 && (0, z.jsx)(tp, {
                    children: r.map(((e, t) => (0, z.jsx)(Gue, {
                        vehicle: e
                    }, t)))
                })]
            }) : null
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/policies-section/policies-section.tsx", {
            get PoliciesSection() {
                return Uue
            },
            set PoliciesSection(e) {
                Uue = e
            }
        });
        var Gue = ({
            vehicle: e
        }) => {
            const t = (0, Y.useCallback)((() => Tw(e.entity)), [e.entity]);
            return (0, z.jsx)(Ty, {
                subRow: !0,
                tooltip: (0, z.jsx)(zf, {
                    children: (0, z.jsx)(Pc.SelectedInfoPanel.TOOLTIP, {
                        hash: e.vehicleKey
                    })
                }),
                left: (0, z.jsx)(Ku, {
                    value: e.name
                }),
                link: (0, z.jsx)(ile, {
                    onSelect: t,
                    children: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                        hash: e.stateKey
                    })
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/vehicles-section/vehicles-section.tsx", {
            get VehiclesSection() {
                return Bue
            },
            set VehiclesSection(e) {
                Bue = e
            },
            get VehicleItem() {
                return Gue
            },
            set VehicleItem(e) {
                Gue = e
            }
        });
        var Vue = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            vehicleList: s
        }) => {
            const i = ww(e, n, t);
            return (0, z.jsxs)(iy, {
                disableFocus: !0,
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    tooltip: i && (0, z.jsx)(zf, {
                        text: i
                    }),
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.DISPATCHED_VEHICLES, {}),
                    right: (0, z.jsx)(Gc, {
                        value: s.length
                    })
                }), s.length > 0 && (0, z.jsx)(tp, {
                    children: s.map(((e, t) => (0, z.jsx)(Gue, {
                        vehicle: e
                    }, t)))
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/vehicles-section/dispatched-vehicles-section.tsx", {
            get DispatchedVehiclesSection() {
                return Vue
            },
            set DispatchedVehiclesSection(e) {
                Vue = e
            }
        });
        var Hue = ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            cargo: s,
            capacity: i,
            resources: a,
            cargoKey: o
        }) => {
            const r = ww(e, n, t),
                l = a?.filter((e => "NoResource" !== e.key && e.amount > 0));
            return (0, z.jsxs)(iy, {
                tooltip: r && (0, z.jsx)(zf, {
                    text: r
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.CARGO_TITLE, {
                        hash: o
                    })
                }), (0, z.jsx)(Dre, {
                    plain: !0,
                    progress: s,
                    max: i,
                    children: (0, z.jsx)(cu, {
                        value: s,
                        total: i,
                        unit: Oc.Weight
                    })
                }), l?.length > 0 && (0, z.jsx)(Ule, {
                    children: l?.map(((e, t) => (0, z.jsx)(T4, {
                        theme: Gle,
                        className: Zu()(l.length > 1 && l.length % 2 == 1 && t === l.length - 1 && Gle.last),
                        icon: "NoResource" !== e.key ? `Media/Game/Resources/${e.key}.svg` : null,
                        label: (0, z.jsx)(Pc.Resources.TITLE, {
                            hash: e.key
                        }),
                        children: (0, z.jsx)(Gc, {
                            value: e.amount,
                            unit: Oc.Weight
                        })
                    }, e.key)))
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/cargo-section.tsx", {
            get CargoSection() {
                return Hue
            },
            set CargoSection(e) {
                Hue = e
            }
        });
        var Kue = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            owner: s,
            fromOutside: i,
            line: a,
            lineEntity: o,
            nextStop: r,
            stateKey: l
        }) => {
            const c = (0, Y.useCallback)((() => s.entity && Tw(s.entity)), [s]),
                u = (0, Y.useCallback)((() => o && Tw(o)), [o]),
                d = (0, Y.useCallback)((() => r.entity && Tw(r.entity)), [r]),
                m = ww(e, t, n);
            return (0, z.jsx)(iy, {
                tooltip: m && (0, z.jsx)(zf, {
                    text: m
                }),
                disableFocus: null != o || null != r.entity || null != s.entity,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.CARGO_TRANSPORT_VEHICLE_TITLE, {}),
                        right: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: i ? (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: c,
                            children: (0, z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != r.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: d,
                            children: (0, z.jsx)(Ku, {
                                value: r.name
                            })
                        })
                    }), null != a && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.ROUTE, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: u,
                            children: (0, z.jsx)(Ku, {
                                value: a
                            })
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/cargo-transport-vehicle-section.tsx", {
            get CargoTransportVehicleSection() {
                return Kue
            },
            set CargoTransportVehicleSection(e) {
                Kue = e
            }
        });
        var Wue = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            owner: s,
            fromOutside: i,
            nextStop: a,
            dead: o,
            deadEntity: r,
            stateKey: l
        }) => {
            const c = (0, Y.useCallback)((() => s.entity && Tw(s.entity)), [s]),
                u = (0, Y.useCallback)((() => r && Tw(r)), [r]),
                d = (0, Y.useCallback)((() => a.entity && Tw(a.entity)), [a]),
                m = ww(e, t, n);
            return (0, z.jsx)(iy, {
                tooltip: m && (0, z.jsx)(zf, {
                    text: m
                }),
                disableFocus: null != r || null != a.entity || null != s.entity,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DEATHCARE_VEHICLE_TITLE, {}),
                        right: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: i ? (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: c,
                            children: (0, z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != a.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: d,
                            children: (0, z.jsx)(Ku, {
                                value: a.name
                            })
                        })
                    }), null != o && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DEATHCARE_VEHICLE_DEAD, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: u,
                            children: (0, z.jsx)(Ku, {
                                value: o
                            })
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/deathcare-vehicle-section.tsx", {
            get DeathcareVehicleSection() {
                return Wue
            },
            set DeathcareVehicleSection(e) {
                Wue = e
            }
        });
        var zue = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            owner: s,
            fromOutside: i,
            nextStop: a,
            stateKey: o,
            vehicleKey: r
        }) => {
            const l = (0, Y.useCallback)((() => s.entity && Tw(s.entity)), [s]),
                c = (0, Y.useCallback)((() => a.entity && Tw(a.entity)), [a]),
                u = ww(e, t, n, !0);
            return (0, z.jsx)(iy, {
                tooltip: u && (0, z.jsx)(zf, {
                    text: u
                }),
                disableFocus: !0,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        disableFocus: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DELIVERY_VEHICLE_TITLE, {
                            hash: r
                        }),
                        right: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: o
                        })
                    }), null != s.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        disableFocus: !0,
                        left: i ? (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: l,
                            children: (0, z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != a.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        disableFocus: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: c,
                            children: (0, z.jsx)(Ku, {
                                value: a.name
                            })
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/delivery-vehicle-section.tsx", {
            get DeliveryVehicleSection() {
                return zue
            },
            set DeliveryVehicleSection(e) {
                zue = e
            }
        });
        var Yue = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            owner: s,
            fromOutside: i,
            nextStop: a,
            stateKey: o,
            vehicleKey: r
        }) => {
            const l = (0, Y.useCallback)((() => s.entity && Tw(s.entity)), [s]),
                c = (0, Y.useCallback)((() => a.entity && Tw(a.entity)), [a]),
                u = ww(e, t, n, !0);
            return (0, z.jsx)(iy, {
                tooltip: u && (0, z.jsx)(zf, {
                    text: u
                }),
                disableFocus: null != a.entity || null != s.entity,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.FIRE_VEHICLE_TITLE, {
                            hash: r
                        }),
                        right: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: o
                        })
                    }), null != s.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: i ? (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: l,
                            children: (0, z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != a.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: c,
                            children: (0, z.jsx)(Ku, {
                                value: a.name
                            })
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/fire-vehicle-section.tsx", {
            get FireVehicleSection() {
                return Yue
            },
            set FireVehicleSection(e) {
                Yue = e
            }
        });
        var $ue = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            owner: s,
            fromOutside: i,
            nextStop: a,
            stateKey: o,
            vehicleKey: r
        }) => {
            const l = (0, Y.useCallback)((() => s.entity && Tw(s.entity)), [s]),
                c = (0, Y.useCallback)((() => a.entity && Tw(a.entity)), [a]),
                u = ww(e, t, n, !0);
            return (0, z.jsxs)(iy, {
                tooltip: u && (0, z.jsx)(zf, {
                    text: u
                }),
                disableFocus: null != a.entity || null != s.entity,
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.GARBAGE_VEHICLE_TITLE, {
                        hash: r
                    }),
                    right: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                        hash: o
                    })
                }), null != s.entity && (0, z.jsx)(Ty, {
                    subRow: !0,
                    left: i ? (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                    link: (0, z.jsx)(ile, {
                        onSelect: l,
                        children: (0, z.jsx)(Ku, {
                            value: s.name
                        })
                    })
                }), null != a.entity && (0, z.jsx)(Ty, {
                    subRow: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                    link: (0, z.jsx)(ile, {
                        onSelect: c,
                        children: (0, z.jsx)(Ku, {
                            value: a.name
                        })
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/garbage-vehicle-section.tsx", {
            get GarbageVehicleSection() {
                return $ue
            },
            set GarbageVehicleSection(e) {
                $ue = e
            }
        });
        var que = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            owner: s,
            fromOutside: i,
            nextStop: a,
            patient: o,
            patientEntity: r,
            stateKey: l,
            vehicleKey: c
        }) => {
            const u = (0, Y.useCallback)((() => s.entity && Tw(s.entity)), [s]),
                d = (0, Y.useCallback)((() => r && Tw(r)), [r]),
                m = (0, Y.useCallback)((() => a.entity && Tw(a.entity)), [a]),
                h = ww(e, t, n, !0);
            return (0, z.jsx)(iy, {
                tooltip: h && (0, z.jsx)(zf, {
                    text: h
                }),
                disableFocus: null != r || null != a.entity || null != s.entity,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.HEALTHCARE_VEHICLE_TITLE, {
                            hash: c
                        }),
                        right: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: i ? (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: u,
                            children: (0, z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != a.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: m,
                            children: (0, z.jsx)(Ku, {
                                value: a.name
                            })
                        })
                    }), null != o && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.HEALTHCARE_VEHICLE_PATIENT, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: d,
                            children: (0, z.jsx)(Ku, {
                                value: o
                            })
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/healthcare-vehicle-section.tsx", {
            get HealthcareVehicleSection() {
                return que
            },
            set HealthcareVehicleSection(e) {
                que = e
            }
        });
        var Xue = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            load: s,
            capacity: i,
            loadKey: a
        }) => {
            const o = ww(e, t, n);
            return (0, z.jsxs)(iy, {
                tooltip: o && (0, z.jsx)(zf, {
                    text: o
                }),
                children: [(0, z.jsx)(Ty, {
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.LOAD_TITLE, {
                        hash: a
                    })
                }), (0, z.jsx)(Dre, {
                    progress: s,
                    max: i,
                    plain: !0,
                    children: (0, z.jsx)(cu, {
                        value: s,
                        total: i,
                        unit: Que(a)
                    })
                })]
            })
        };

        function Que(e) {
            return "Water" === e ? Oc.Volume : Oc.Weight
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/load-section.tsx", {
            get LoadSection() {
                return Xue
            },
            set LoadSection(e) {
                Xue = e
            }
        });
        var Zue = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            workShift: s,
            owner: i,
            fromOutside: a,
            nextStop: o,
            stateKey: r
        }) => {
            const l = (0, Y.useCallback)((() => i.entity && Tw(i.entity)), [i]),
                c = (0, Y.useCallback)((() => o.entity && Tw(o.entity)), [o]),
                u = ww(e, t, n),
                d = Cw("MaintenanceVehicleSectionWorkshift");
            return (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsxs)(iy, {
                    tooltip: u && (0, z.jsx)(zf, {
                        text: u
                    }),
                    disableFocus: null != o.entity || null != i.entity,
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.MAINTENANCE_VEHICLE_TITLE, {}),
                        right: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: r
                        })
                    }), null != i.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: a ? (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: l,
                            children: (0, z.jsx)(Ku, {
                                value: i.name
                            })
                        })
                    }), null != o.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: c,
                            children: (0, z.jsx)(Ku, {
                                value: o.name
                            })
                        })
                    })]
                }), (0, z.jsxs)(iy, {
                    tooltip: d && (0, z.jsx)(zf, {
                        text: d
                    }),
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.WORK_SHIFT, {})
                    }), (0, z.jsx)(Dre, {
                        progress: s,
                        max: 100,
                        plain: !0,
                        children: (0, z.jsx)(Gc, {
                            value: s,
                            unit: Oc.Percentage
                        })
                    })]
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/maintenance-vehicle-section.tsx", {
            get MaintenanceVehicleSection() {
                return Zue
            },
            set MaintenanceVehicleSection(e) {
                Zue = e
            }
        });
        var Jue = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            passengers: s,
            maxPassengers: i,
            pets: a,
            vehiclePassengerKey: o
        }) => {
            const r = ww(e, t, n);
            return (0, z.jsxs)(iy, {
                tooltip: r && (0, z.jsx)(zf, {
                    text: r
                }),
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.PASSENGERS, {
                        hash: o
                    })
                }), (0, z.jsx)(Dre, {
                    progress: s,
                    max: i,
                    plain: !0,
                    children: (0, z.jsx)(cu, {
                        value: s,
                        total: i,
                        unit: Oc.Integer
                    })
                }), a > 0 && (0, z.jsx)(Ty, {
                    subRow: !0,
                    icon: "Media/Game/Icons/Pet.svg",
                    left: (0, z.jsx)(Gc, {
                        value: a,
                        unit: Oc.Integer
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/passengers-section.tsx", {
            get PassengersSection() {
                return Jue
            },
            set PassengersSection(e) {
                Jue = e
            }
        });
        var ede = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            owner: s,
            fromOutside: i,
            nextStop: a,
            criminal: o,
            criminalEntity: r,
            stateKey: l,
            vehicleKey: c
        }) => {
            const u = (0, Y.useCallback)((() => s.entity && Tw(s.entity)), [s]),
                d = (0, Y.useCallback)((() => r && Tw(r)), [r]),
                m = (0, Y.useCallback)((() => a.entity && Tw(a.entity)), [a]),
                h = ww(e, t, n, !0);
            return (0, z.jsx)(iy, {
                tooltip: h && (0, z.jsx)(zf, {
                    text: h
                }),
                disableFocus: null != r || null != a.entity || null != s.entity,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.POLICE_VEHICLE_TITLE, {
                            hash: c
                        }),
                        right: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: i ? (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: u,
                            children: (0, z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != a.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: m,
                            children: (0, z.jsx)(Ku, {
                                value: a.name
                            })
                        })
                    }), null != o && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.POLICE_VEHICLE_CRIMINAL, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: d,
                            children: (0, z.jsx)(Ku, {
                                value: o
                            })
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/police-vehicle-section.tsx", {
            get PoliceVehicleSection() {
                return ede
            },
            set PoliceVehicleSection(e) {
                ede = e
            }
        });
        var tde = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            owner: s,
            fromOutside: i,
            nextStop: a,
            stateKey: o
        }) => {
            const r = (0, Y.useCallback)((() => s.entity && Tw(s.entity)), [s.entity]),
                l = (0, Y.useCallback)((() => a.entity && Tw(a.entity)), [a]),
                c = ww(e, t, n);
            return (0, z.jsxs)(iy, {
                tooltip: c && (0, z.jsx)(zf, {
                    text: c
                }),
                disableFocus: null != s.entity,
                children: [(0, z.jsx)(Ty, {
                    uppercase: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.POST_VEHICLE_TITLE, {}),
                    right: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                        hash: o
                    })
                }), null != s.entity && (0, z.jsx)(Ty, {
                    subRow: !0,
                    left: i ? (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                    link: (0, z.jsx)(ile, {
                        onSelect: r,
                        children: (0, z.jsx)(Ku, {
                            value: s.name
                        })
                    })
                }), null != a.entity && (0, z.jsx)(Ty, {
                    subRow: !0,
                    left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                    link: (0, z.jsx)(ile, {
                        onSelect: l,
                        children: (0, z.jsx)(Ku, {
                            value: a.name
                        })
                    })
                })]
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/post-vehicle-section.tsx", {
            get PostVehicleSection() {
                return tde
            },
            set PostVehicleSection(e) {
                tde = e
            }
        });
        var nde = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            owner: s,
            fromOutside: i,
            keeper: a,
            keeperEntity: o,
            nextStop: r,
            stateKey: l,
            vehicleKey: c
        }) => {
            const u = (0, Y.useCallback)((() => s.entity && Tw(s.entity)), [s]),
                d = (0, Y.useCallback)((() => o && Tw(o)), [o]),
                m = (0, Y.useCallback)((() => r.entity && Tw(r.entity)), [r]),
                h = ww(e, t, n, !0);
            return (0, z.jsx)(iy, {
                tooltip: h && (0, z.jsx)(zf, {
                    text: h
                }),
                disableFocus: null != a || null != r.entity || null != s.entity,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.PRIVATE_VEHICLE_TITLE, {
                            hash: c
                        }),
                        right: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: i ? (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: u,
                            children: (0, z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != r.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: m,
                            children: (0, z.jsx)(Ku, {
                                value: r.name
                            })
                        })
                    }), null != a && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DRIVER, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: d,
                            children: (0, z.jsx)(Ku, {
                                value: a
                            })
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/private-vehicle-section.tsx", {
            get PrivateVehicleSection() {
                return nde
            },
            set PrivateVehicleSection(e) {
                nde = e
            }
        });
        var sde = ({
            group: e,
            tooltipKeys: t,
            tooltipTags: n,
            owner: s,
            fromOutside: i,
            line: a,
            lineEntity: o,
            nextStop: r,
            stateKey: l,
            vehicleKey: c
        }) => {
            const u = (0, Y.useCallback)((() => s.entity && Tw(s.entity)), [s]),
                d = (0, Y.useCallback)((() => o && Tw(o)), [o]),
                m = (0, Y.useCallback)((() => r.entity && Tw(r.entity)), [r]),
                h = ww(e, t, n, !0);
            return (0, z.jsx)(iy, {
                tooltip: h && (0, z.jsx)(zf, {
                    text: h
                }),
                disableFocus: null != o || null != r.entity || null != s.entity,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)(Ty, {
                        uppercase: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.PUBLIC_TRANSPORT_VEHICLE_TITLE, {
                            hash: c
                        }),
                        right: (0, z.jsx)(Pc.SelectedInfoPanel.VEHICLE_STATES, {
                            hash: l
                        })
                    }), null != s.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: i ? (0, z.jsx)(Pc.SelectedInfoPanel.ORIGIN, {}) : (0, z.jsx)(Pc.SelectedInfoPanel.OWNED_BY, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: u,
                            children: (0, z.jsx)(Ku, {
                                value: s.name
                            })
                        })
                    }), null != r.entity && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.DESTINATION, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: m,
                            children: (0, z.jsx)(Ku, {
                                value: r.name
                            })
                        })
                    }), null != a && (0, z.jsx)(Ty, {
                        subRow: !0,
                        left: (0, z.jsx)(Pc.SelectedInfoPanel.LINE, {}),
                        link: (0, z.jsx)(ile, {
                            onSelect: d,
                            children: (0, z.jsx)(Ku, {
                                value: a
                            })
                        })
                    })]
                })
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/vehicle-sections/public-transport-vehicle-section.tsx", {
            get PublicTransportVehicleSection() {
                return sde
            },
            set PublicTransportVehicleSection(e) {
                sde = e
            }
        });
        var ide = {
            [nw.Resource]: Dce,
            [nw.LocalServices]: Mce,
            [nw.Actions]: Eue,
            [nw.Description]: Sue,
            [nw.Developer]: () => null,
            [nw.Residents]: kle,
            [nw.HouseholdSidebar]: () => null,
            [nw.Districts]: rle,
            [nw.Title]: () => null,
            [nw.Notifications]: Oue,
            [nw.Policies]: Uue,
            [nw.Profitability]: Pue,
            [nw.AverageHappiness]: wue,
            [nw.Schedule]: Yce,
            [nw.Line]: Gce,
            [nw.Lines]: Lce,
            [nw.Color]: Nce,
            [nw.LineVisualizer]: () => null,
            [nw.TicketPrice]: Zce,
            [nw.VehicleCount]: eue,
            [nw.Attractiveness]: Mre,
            [nw.Efficiency]: mle,
            [nw.Employees]: ple,
            [nw.Upkeep]: cce,
            [nw.Level]: Ile,
            [nw.Education]: cle,
            [nw.Pollution]: Lle,
            [nw.Healthcare]: vle,
            [nw.Deathcare]: Kre,
            [nw.Garbage]: xle,
            [nw.Police]: wle,
            [nw.Vehicles]: Bue,
            [nw.DispatchedVehicles]: Vue,
            [nw.Electricity]: gle,
            [nw.Transformer]: Hle,
            [nw.Battery]: Ure,
            [nw.Water]: mce,
            [nw.Sewage]: Dle,
            [nw.Fire]: fle,
            [nw.Prison]: Rle,
            [nw.Shelter]: Fle,
            [nw.Parking]: Nle,
            [nw.Park]: Cle,
            [nw.Mail]: Sle,
            [nw.Road]: Bce,
            [nw.Company]: Hre,
            [nw.Storage]: Vle,
            [nw.PrivateVehicle]: nde,
            [nw.PublicTransportVehicle]: sde,
            [nw.CargoTransportVehicle]: Kue,
            [nw.DeliveryVehicle]: zue,
            [nw.HealthcareVehicle]: que,
            [nw.FireVehicle]: Yue,
            [nw.PoliceVehicle]: ede,
            [nw.MaintenanceVehicle]: Zue,
            [nw.DeathcareVehicle]: Wue,
            [nw.PostVehicle]: tde,
            [nw.GarbageVehicle]: $ue,
            [nw.Passengers]: Jue,
            [nw.Cargo]: Hue,
            [nw.Load]: Xue,
            [nw.Status]: Sce,
            [nw.Citizen]: gce,
            [nw.DummyHuman]: pce,
            [nw.Animal]: hce,
            [nw.SelectVehicles]: EW,
            [nw.DestroyedBuilding]: tle,
            [nw.DestroyedTree]: kce,
            [nw.Comfort]: Bre,
            [nw.Upgrades]: nce,
            [nw.UpgradeProperties]: Kle
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/selected-info-sections.tsx", {
            get selectedInfoSectionComponents() {
                return ide
            },
            set selectedInfoSectionComponents(e) {
                ide = e
            }
        });
        let ade = {
            virtualListWidth: "46",
            "household-sidebar-section": "household-sidebar-section_Pp8",
            householdSidebarSection: "household-sidebar-section_Pp8",
            "gamepad-active": "gamepad-active_M6w",
            gamepadActive: "gamepad-active_M6w",
            content: "content_uZM",
            "fixed-list": "fixed-list_leU",
            fixedList: "fixed-list_leU",
            "virtual-list": "virtual-list_kom",
            virtualList: "virtual-list_kom",
            item: "item_Pjq button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "item-label": "item-label_NoI",
            itemLabel: "item-label_NoI",
            ellipsis: "ellipsis_siY",
            icon: "icon_cU0",
            household: "household_aFZ",
            divider: "divider_hD0",
            badge: "badge_PNB",
            avatar: "avatar_R0M",
            hint: "hint_MRA"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/household-sidebar-section/household-sidebar-section.module.scss", {
            get classes() {
                return ade
            },
            set classes(e) {
                Object.assign(ade, e)
            }
        });
        const ode = ade;
        var rde = ({
            householdSidebarVariant: e,
            residence: t,
            households: n,
            householdMembers: s,
            householdPets: i,
            focusKey: a,
            className: o
        }) => {
            const r = Dm(),
                l = (0, Y.useMemo)((() => e === yw.Building && n.length > 1 ? n : [...s, ...i]), [s, i, n, e]);
            return (0, z.jsx)(YT, {
                focusKey: a,
                className: Zu()(ode.householdSidebarSection, r && ode.gamepadActive, o),
                contentClassName: ode.content,
                children: (0, z.jsxs)(tp, {
                    direction: Rg.Vertical,
                    children: [(0, z.jsxs)("div", {
                        className: ode.fixedList,
                        children: [null != t.entity && (0, z.jsx)(ude, {
                            item: t
                        }), cde(e, n) && (0, z.jsx)(ude, {
                            item: n[0]
                        })]
                    }), (0, z.jsx)("div", {
                        className: ode.divider
                    }), (0, z.jsx)(lde, {
                        data: l
                    })]
                })
            })
        };
        const lde = ({
            data: e
        }) => {
            const t = Hm(),
                n = TK(parseFloat(ode.virtualListWidth) * t, e.length, 4),
                s = (0, Y.useCallback)((t => t >= 0 && t < e.length ? (0, z.jsx)(ude, {
                    item: e[t],
                    useFamilyName: !0
                }, t) : null), [e]);
            return (0, z.jsx)(vK, {
                renderItem: s,
                sizeProvider: n,
                className: ode.virtualList
            })
        };

        function cde(e, t) {
            return e === yw.Citizen || e === yw.Household || 1 === t.length
        }
        const ude = ({
            item: e,
            useFamilyName: t = !1
        }) => {
            const [n, s] = (0, Y.useState)(!1), i = Wu(e.name), a = Wu(e.familyName), o = (0, Y.useCallback)((() => {
                !e.selected && Tw(e.entity)
            }), [e]), r = t && a || i, l = r.length > 20;
            return (0, z.jsx)(Ah, {
                onFocusChange: s,
                children: (0, z.jsx)(Tg, {
                    tooltip: l ? r : void 0,
                    children: (0, z.jsxs)(Gp, {
                        disableHint: !0,
                        selected: e?.selected,
                        onSelect: o,
                        className: Zu()(ode.item, e.memberCount && ode.household),
                        children: [e.iconPath ? (0, z.jsx)(ef, {
                            src: e.iconPath,
                            className: ode.icon
                        }) : (0, z.jsx)(w9, {
                            entity: e.entity,
                            className: ode.avatar
                        }), e.memberCount && (0, z.jsx)("div", {
                            className: ode.badge,
                            children: e.memberCount
                        }), (0, z.jsx)("div", {
                            className: Zu()(ode.itemLabel, l && ode.ellipsis),
                            children: r
                        }), (0, z.jsx)(Pf, {
                            action: "Select",
                            active: n,
                            className: ode.hint
                        })]
                    })
                })
            })
        };

        function dde(e, t) {
            const n = Wu(e),
                [s, i] = (0, Y.useState)(null),
                a = (0, Y.useCallback)((e => {
                    i(e.target.value)
                }), []),
                o = (0, Y.useCallback)((() => {
                    null != s && s !== n && t(s), i(null)
                }), [s, n, t]),
                r = (0, Y.useCallback)((() => {
                    i(null)
                }), []);
            return [s ?? n, a, o, r]
        }

        function mde(e) {
            tl("TitleSection", "renameEntity", e)
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/household-sidebar-section/household-sidebar-section.tsx", {
            get HouseholdSidebarSection() {
                return rde
            },
            set HouseholdSidebarSection(e) {
                rde = e
            }
        }), X.add("game-ui/common/hooks/use-input-name.ts", {
            get useInputName() {
                return dde
            },
            set useInputName(e) {
                dde = e
            }
        }), X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/title-section/title-section-bindings.ts", {
            get renameSelectedEntity() {
                return mde
            },
            set renameSelectedEntity(e) {
                mde = e
            }
        });
        let hde = {
            container: "container_Q9t",
            input: "input_lbJ",
            label: "label_GFm"
        };
        X.add("game-ui/game/components/selected-info-panel/shared-components/text-input/text-input.module.scss", {
            get classes() {
                return hde
            },
            set classes(e) {
                Object.assign(hde, e)
            }
        });
        const gde = hde;
        var pde = Y.memo((function ({
            icon: e,
            tooltip: t,
            panelTag: n,
            focusKey: s,
            name: i,
            vkLocaleKey: a,
            onChangeName: o,
            onSubmitName: r
        }) {
            return (0, z.jsx)(QT, {
                icon: e || void 0,
                children: (0, z.jsx)(wx, {
                    uiTag: n,
                    children: (0, z.jsx)(Tg, {
                        direction: "right",
                        alignment: "start",
                        tooltip: t && (0, z.jsx)(zf, {
                            text: t
                        }),
                        children: (0, z.jsx)(H3, {
                            theme: gde,
                            focusKey: s,
                            value: i,
                            vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                                hash: a
                            }),
                            onChange: o,
                            onBlur: r
                        })
                    })
                })
            })
        }), ((e, t) => Kr(e, t, 3)));
        const fde = function ({
            group: e,
            tooltipTags: t,
            tooltipKeys: n,
            focusKey: s,
            name: i,
            vkLocaleKey: a,
            icon: o
        }) {
            const [r, l, c] = dde(i, mde), u = ww(e, n, t), d = sl(cw), m = (0, Y.useMemo)((() => `${kx.value?.selectedInfoPanelTitle}+${d}`), [d]);
            return lg(m), (0, z.jsx)(pde, {
                icon: o,
                name: r,
                tooltip: u,
                vkLocaleKey: a,
                panelTag: m,
                onChangeName: l,
                onSubmitName: c,
                focusKey: s
            })
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-sections/shared-sections/title-section/title-section.tsx", {
            get TitleSection() {
                return fde
            },
            set TitleSection(e) {
                fde = e
            }
        });
        let xde = {
            "selected-info-panel": "selected-info-panel_gG8",
            selectedInfoPanel: "selected-info-panel_gG8",
            wrapper: "wrapper_SgH",
            container: "container_Ty2",
            "gamepad-active": "gamepad-active_TBU",
            gamepadActive: "gamepad-active_TBU",
            scrollable: "scrollable_gsV",
            space: "space_N1X",
            smallSpace: "smallSpace_Bas",
            row: "row_OqM",
            sidebar: "sidebar_fgt",
            hints: "hints_HGp",
            hint: "hint_Kc1"
        };
        X.add("game-ui/game/components/selected-info-panel/selected-info-panel.module.scss", {
            get classes() {
                return xde
            },
            set classes(e) {
                Object.assign(xde, e)
            }
        });
        const vde = xde,
            _de = new Eg("SelectedInfoPanel"),
            bde = new Eg("LineVisualizer"),
            Tde = new Eg("HouseholdSidebar");
        var Ede = (0, Y.memo)((0, Y.forwardRef)((function ({
            elKey: e,
            titleSection: t,
            topSections: n,
            middleSections: s,
            bottomSections: i,
            onClose: a
        }, o) {
            const r = (0, Y.useMemo)((() => {
                if (!t) return null;
                const {
                    name: e,
                    vkLocaleKey: n,
                    icon: s,
                    group: i,
                    tooltipKeys: a,
                    tooltipTags: o
                } = t;
                return t && (0, z.jsx)(fde, {
                    name: e,
                    vkLocaleKey: n,
                    icon: s,
                    group: i,
                    tooltipKeys: a,
                    tooltipTags: o
                })
            }), [t]);
            return (0, z.jsx)(YT, {
                ref: o,
                focusKey: _de,
                header: r,
                footer: (0, z.jsx)($A, {
                    components: ide,
                    data: i
                }),
                transitionSounds: cp,
                theme: ire,
                className: Zu()(vde.selectedInfoPanel),
                onClose: a,
                allowLooping: !0,
                children: (0, z.jsxs)(tp, {
                    children: [(0, z.jsx)($A, {
                        components: ide,
                        data: n
                    }), (0, z.jsx)(ff, {
                        className: vde.scrollable,
                        children: (0, z.jsx)($A, {
                            components: ide,
                            data: s
                        })
                    })]
                })
            }, e)
        })), ((e, t) => Kr(e, t, 20)));
        const Ide = (0, Y.forwardRef)((function ({
            focusKey: e,
            className: t,
            onClose: n,
            showHint: s
        }, i) {
            const a = sl(mw),
                o = sl(hw),
                r = sl(gw),
                l = sl(pw),
                c = sl(xw),
                u = sl(vw),
                d = null != c || null != u,
                m = al(sue),
                h = al(ore),
                g = al(nue),
                p = null != c ? bde : Tde,
                f = Dm(),
                [x, v] = (0, Y.useState)(!1),
                [_, b] = (0, Y.useState)(_de),
                T = (0, Y.useMemo)((() => ({
                    Back: () => {
                        m.current || h.current || g.current ? QO(uP) : n()
                    },
                    "Move Horizontal": d ? e => {
                        b(e < 0 ? p : _de)
                    } : () => {}
                })), [p, m, d, g, n, h]);
            (0, Y.useEffect)((() => {
                d || b(_de)
            }), [d]);
            const E = sl(rw),
                I = sl(lw),
                y = sl(bw),
                j = (0, Y.useMemo)((() => u?.residence.entity), [u?.residence.entity]),
                S = (0, Y.useMemo)((() => u?.households[0]?.entity), [u?.households]),
                C = (0, Y.useMemo)((() => Ur(y, Lx) ? Ur(I, Lx) ? Ur(j, E) || !S ? `${j?.index}${E.version}${E.index}${j?.version}` : S && Dr(S) : `${Dr(I)}->SIP` : `${Dr(E)}->SIP`), [S, j, y, E, I]),
                N = sl(cw),
                w = !Ur(Lx, E) && "" !== N,
                O = (0, Y.useMemo)((() => `${kx.value?.selectedInfoPanel}+${N}`), [N]);
            lg(O, w);
            const P = sl(wm).find((e => "Back" === e.name));
            return (0, z.jsxs)("div", {
                className: vde.wrapper,
                children: [(0, z.jsx)(Ip, {
                    ref: i,
                    focusKey: e,
                    className: Zu()(vde.row, vde.container, f && vde.gamepadActive, t),
                    onFocusChange: v,
                    children: (0, z.jsx)(Ag, {
                        actions: T,
                        children: (0, z.jsxs)(ap, {
                            focused: _,
                            children: [c && (0, z.jsx)(Pre, {
                                focusKey: bde,
                                className: vde.sidebar,
                                ...c
                            }, `${Dr(y)}->LV`), u && (0, z.jsx)(rde, {
                                focusKey: Tde,
                                ...u,
                                className: vde.sidebar
                            }, j && Dr(j)), (0, z.jsx)(wx, {
                                uiTag: O,
                                active: w,
                                children: (0, z.jsx)(Ede, {
                                    elKey: (1 === u?.households.length ? S && Dr(S) : C) || "key",
                                    titleSection: l,
                                    topSections: a,
                                    middleSections: o,
                                    bottomSections: r,
                                    onClose: n
                                })
                            })]
                        })
                    })
                }), (0, z.jsx)("div", {
                    className: vde.hints,
                    children: (0, z.jsx)(Pf, {
                        action: "Back",
                        active: s && !!P?.items.length && !x,
                        className: vde.hint
                    })
                })]
            })
        }));
        var yde = ({
            small: e
        }) => (0, z.jsx)("div", {
            className: Zu()(e ? vde.smallSpace : vde.space)
        });

        function jde() {
            const e = sl(YP),
                t = sl(rw),
                n = sl(PO),
                s = sl(nue),
                i = sl(ore),
                a = sl(RL),
                o = sl(sue);
            if (Ur(t, Lx)) return !1;
            if (!Ur(e, Lx)) return !1;
            switch (n.id) {
            case uP:
                return !0;
            case xP:
                return i;
            case gP:
                return a || s;
            case mP:
                return o;
            case pP:
                return !0;
            default:
                return !1
            }
        }
        X.add("game-ui/game/components/selected-info-panel/selected-info-panel.tsx", {
            get SelectedInfoPanel() {
                return Ide
            },
            set SelectedInfoPanel(e) {
                Ide = e
            },
            get PanelSpace() {
                return yde
            },
            set PanelSpace(e) {
                yde = e
            },
            get useSelectedInfoPanelVisible() {
                return jde
            },
            set useSelectedInfoPanelVisible(e) {
                jde = e
            }
        });
        let Sde = {
            "left-menu": "left-menu_L1D",
            leftMenu: "left-menu_L1D"
        };
        X.add("game-ui/game/components/left-menu/left-menu.module.scss", {
            get classes() {
                return Sde
            },
            set classes(e) {
                Object.assign(Sde, e)
            }
        });
        const Cde = Sde;
        var Nde = ({
            className: e
        }) => (0, z.jsx)("div", {
            className: Zu()(Cde.leftMenu, e),
            children: (0, z.jsx)(tQ, {
                name: "GameBottomLeft"
            })
        });
        X.add("game-ui/game/components/left-menu/left-menu.tsx", {
            get LeftMenu() {
                return Nde
            },
            set LeftMenu(e) {
                Nde = e
            }
        });
        let wde = {
            "chirper-popup": "chirper-popup_pEX",
            chirperPopup: "chirper-popup_pEX",
            item: "item_Pf8",
            enter: "enter_is9",
            "enter-active": "enter-active_pX6",
            enterActive: "enter-active_pX6",
            "exit-active": "exit-active_Mg7",
            exitActive: "exit-active_Mg7",
            "item-inner": "item-inner_Xwb",
            itemInner: "item-inner_Xwb",
            "chirp-layout": "chirp-layout_xHZ",
            chirpLayout: "chirp-layout_xHZ"
        };
        X.add("game-ui/game/components/chirper/chirper-popup.module.scss", {
            get classes() {
                return wde
            },
            set classes(e) {
                Object.assign(wde, e)
            }
        });
        const Ode = wde;
        var Pde = ({
            disabled: e,
            className: t,
            onClick: n
        }) => {
            const [s, i] = (0, Y.useState)([]), [a, o] = (0, Y.useState)(null), r = s.length > 0;
            return (0, Y.useEffect)((() => {
                if (!e) {
                    const e = Fy.subscribe((e => i((t => [...t, e]))));
                    let t = 0;
                    if (r) {
                        const e = () => {
                            i((e => e.slice(1, e.length))), t = window.setTimeout(e, 7e3)
                        };
                        t = window.setTimeout(e, 7e3)
                    }
                    return () => {
                        e.dispose(), window.clearTimeout(t)
                    }
                }
                i([])
            }), [e, r]), (0, Y.useEffect)((() => {
                Ur(null !== a ? a.entity : Lx, s.length > 0 ? s[0].entity : Lx) || (s.length > 0 ? (o(s[0]), lp(rp.chirpEvent)) : o(null))
            }), [a, s]), (0, z.jsx)("div", {
                className: Zu()(Ode.chirperPopup, t),
                children: (0, z.jsx)(ud, {
                    skipInitial: !1,
                    children: a && (0, z.jsx)(mh, {
                        styles: Ode,
                        children: (0, z.jsx)("div", {
                            className: Ode.item,
                            onClick: n,
                            children: (0, z.jsx)("div", {
                                className: Ode.itemInner,
                                children: (0, z.jsx)(k9, {
                                    focusKey: Ig,
                                    chirp: a,
                                    className: Ode.chirpLayout
                                })
                            })
                        })
                    }, Dr(a.entity))
                })
            })
        };
        X.add("game-ui/game/components/chirper/chirper-popup.tsx", {
            get ChirperPopup() {
                return Pde
            },
            set ChirperPopup(e) {
                Pde = e
            }
        });
        let Lde = {
            button: "button_iKo button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "emergency-mode": "emergency-mode_MW7",
            emergencyMode: "emergency-mode_MW7",
            "toggle-states": "toggle-states_Yz9 toggle-states_DTm",
            toggleStates: "toggle-states_Yz9 toggle-states_DTm",
            icon: "icon_qLJ icon_soN icon_Iwk"
        };
        X.add("game-ui/game/components/right-menu/right-menu-button.module.scss", {
            get classes() {
                return Lde
            },
            set classes(e) {
                Object.assign(Lde, e)
            }
        });
        const Ade = Lde;
        let Mde = {
            "horizontal-scroller": "horizontal-scroller_lkP",
            horizontalScroller: "horizontal-scroller_lkP",
            space: "space_FBs",
            content: "content_LaN"
        };
        X.add("game-ui/game/components/radio/horizontal-scroller/horizontal-scroller.module.scss", {
            get classes() {
                return Mde
            },
            set classes(e) {
                Object.assign(Mde, e)
            }
        });
        const Rde = Mde;
        var kde = ({
            className: e,
            children: t
        }) => {
            const n = (0, Y.useRef)(null),
                s = Hm();
            return (0, Y.useEffect)((() => {
                const e = performance.now();
                let t = 0;
                const i = a => {
                    if (!n.current) return;
                    const o = Math.max(n.current.scrollWidth, 1);
                    n.current.scrollLeft = .08 * (a - e) * s % (o / 2), t = window.requestAnimationFrame(i)
                };
                return t = window.requestAnimationFrame(i), () => window.cancelAnimationFrame(t)
            }), [s]), (0, z.jsxs)("div", {
                ref: n,
                className: Zu()(Rde.horizontalScroller, e),
                children: [(0, z.jsx)("div", {
                    className: Rde.space
                }), (0, z.jsx)("div", {
                    className: Rde.content,
                    children: t
                }), (0, z.jsx)("div", {
                    className: Rde.space
                }), (0, z.jsx)("div", {
                    className: Rde.content,
                    children: t
                }), (0, z.jsx)("div", {
                    className: Rde.space
                }), (0, z.jsx)("div", {
                    className: Rde.content,
                    children: t
                }), (0, z.jsx)("div", {
                    className: Rde.space
                }), (0, z.jsx)("div", {
                    className: Rde.content,
                    children: t
                })]
            })
        };
        X.add("game-ui/game/components/radio/horizontal-scroller/horizontal-scroller.tsx", {
            get HorizontalScroller() {
                return kde
            },
            set HorizontalScroller(e) {
                kde = e
            }
        });
        let Dde = {
            "emergency-radio-player": "emergency-radio-player_v9P",
            emergencyRadioPlayer: "emergency-radio-player_v9P",
            expanded: "expanded_G9_",
            "right-space": "right-space_TPn",
            rightSpace: "right-space_TPn",
            controls: "controls_mbB",
            "volume-controls": "volume-controls_Pqk",
            volumeControls: "volume-controls_Pqk",
            "volume-slider": "volume-slider_jT_",
            volumeSlider: "volume-slider_jT_",
            "center-controls": "center-controls_rY1",
            centerControls: "center-controls_rY1",
            "message-field": "message-field_Qua",
            messageField: "message-field_Qua",
            space: "space_MTH",
            button: "button_Hpo",
            hint: "hint_enz hint_Rv8",
            "hint-segment": "hint-segment_rYk",
            hintSegment: "hint-segment_rYk"
        };
        X.add("game-ui/game/components/radio/emergency-radio-player/emergency-radio-player.module.scss", {
            get classes() {
                return Dde
            },
            set classes(e) {
                Object.assign(Dde, e)
            }
        });
        const Fde = Dde,
            Ude = new Eg("FOCUS_EMERGENCY"),
            Bde = new Eg("MUTE"),
            Gde = new Eg("VOLUME");
        var Vde = (0, Y.forwardRef)((function ({
            expanded: e,
            className: t
        }, n) {
            const s = sl(IN),
                i = sl(TN),
                a = sl(SN),
                o = sl(CN),
                [r, l] = (0, Y.useState)(null),
                [c, u] = (0, Y.useState)(!1),
                [d, m] = (0, Y.useState)(!1);
            return (0, z.jsx)(Gie, {
                enabled: e,
                children: (0, z.jsx)(Ep, {
                    onFocusChange: u,
                    ref: n,
                    className: Zu()(Fde.emergencyRadioPlayer, e && Fde.expanded, t),
                    children: (0, z.jsx)(Op, {
                        children: (0, z.jsxs)(Qg, {
                            focused: r,
                            onChange: l,
                            direction: Rg.Horizontal,
                            children: [(0, z.jsxs)("div", {
                                className: Fde.controls,
                                children: [a && (0, z.jsx)(Tg, {
                                    tooltip: (0, z.jsx)(Pc.Radio.FOCUS_EMERGENCY, {}),
                                    children: (0, z.jsx)(sf, {
                                        disableHint: !0,
                                        tinted: !0,
                                        focusKey: Ude,
                                        src: "Media/Radio/MapMarker.svg",
                                        className: Fde.button,
                                        onSelect: HN
                                    })
                                }), (0, z.jsx)(Tg, {
                                    tooltip: s ? (0, z.jsx)(Pc.Radio.UNMUTE, {}) : (0, z.jsx)(Pc.Radio.MUTE, {}),
                                    children: (0, z.jsx)(sf, {
                                        disableHint: !0,
                                        tinted: !0,
                                        focusKey: Bde,
                                        src: s ? "Media/Radio/VolumeMuted.svg" : "Media/Radio/Volume.svg",
                                        className: Fde.button,
                                        onSelect: FN,
                                        children: (0, z.jsx)(Pf, {
                                            action: "Select",
                                            active: c && r === Bde,
                                            className: Fde.hint
                                        })
                                    })
                                }), (0, z.jsxs)(Ep, {
                                    focusSound: rp.hoverItem,
                                    className: Fde.volumeControls,
                                    children: [(0, z.jsx)(Pf, {
                                        action: "Select",
                                        active: c && r === Gde && !d,
                                        className: Zu()(Fde.hint, Fde.hintSegment)
                                    }), (0, z.jsx)(Np, {
                                        onSelectedStateChanged: m,
                                        children: (0, z.jsx)(wx, {
                                            uiTag: kx.value?.radioPanelVolumeSlider,
                                            children: (0, z.jsx)(CM, {
                                                focusKey: e ? Gde : Ig,
                                                start: 0,
                                                end: 1,
                                                value: i,
                                                onChange: MN,
                                                sounds: SM,
                                                className: Fde.volumeSlider
                                            })
                                        })
                                    })]
                                }), (0, z.jsx)("div", {
                                    className: Fde.centerControls,
                                    children: (0, z.jsx)(kde, {
                                        className: Fde.messageField,
                                        children: null != o && (0, z.jsx)(gu, {
                                            value: o
                                        })
                                    })
                                })]
                            }), (0, z.jsx)("div", {
                                className: Fde.rightSpace
                            })]
                        })
                    })
                })
            })
        }));
        X.add("game-ui/game/components/radio/emergency-radio-player/emergency-radio-player.tsx", {
            get EmergencyRadioPlayer() {
                return Vde
            },
            set EmergencyRadioPlayer(e) {
                Vde = e
            }
        });
        let Hde = {
            "radio-player": "radio-player_FIM",
            radioPlayer: "radio-player_FIM",
            expanded: "expanded_feM",
            "right-space": "right-space_BDk",
            rightSpace: "right-space_BDk",
            "segment-field": "segment-field_jsn",
            segmentField: "segment-field_jsn",
            "segment-field-scroller": "segment-field-scroller_sCs",
            segmentFieldScroller: "segment-field-scroller_sCs",
            "segment-title": "segment-title_OlY",
            segmentTitle: "segment-title_OlY",
            "segment-subtitle": "segment-subtitle_S9e",
            segmentSubtitle: "segment-subtitle_S9e",
            "controls-bounds": "controls-bounds_ty4",
            controlsBounds: "controls-bounds_ty4",
            "controls-visible": "controls-visible_Rcf",
            controlsVisible: "controls-visible_Rcf",
            controls: "controls_YUi",
            "volume-controls": "volume-controls_PII",
            volumeControls: "volume-controls_PII",
            "volume-slider": "volume-slider_daK",
            volumeSlider: "volume-slider_daK",
            "ads-control": "ads-control_pkw",
            adsControl: "ads-control_pkw",
            "ads-control-inner": "ads-control-inner_NuT",
            adsControlInner: "ads-control-inner_NuT",
            "ads-label": "ads-label_XQP",
            adsLabel: "ads-label_XQP",
            "center-controls": "center-controls_IeA",
            centerControls: "center-controls_IeA",
            button: "button_hbJ button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "play-pause-button": "play-pause-button_s9V button_hbJ button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            playPauseButton: "play-pause-button_s9V button_hbJ button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            hint: "hint_shY",
            "hint-segment": "hint-segment_aVl",
            hintSegment: "hint-segment_aVl",
            "hint-left": "hint-left_lOq",
            hintLeft: "hint-left_lOq",
            "hint-right": "hint-right_Xfk",
            hintRight: "hint-right_Xfk",
            icon: "icon_teM"
        };
        X.add("game-ui/game/components/radio/radio-player/radio-player.module.scss", {
            get classes() {
                return Hde
            },
            set classes(e) {
                Object.assign(Hde, e)
            }
        });
        const Kde = Hde,
            Wde = new Eg("MUTE"),
            zde = new Eg("VOLUME"),
            Yde = new Eg("PREVIOUS"),
            $de = new Eg("PLAY_PAUSE"),
            qde = new Eg("NEXT"),
            Xde = new Eg("ADS"),
            Qde = {
                hint: Kde.hint,
                icon: Kde.icon
            },
            Zde = rp.selectToggle;
        var Jde = Y.forwardRef((function ({
            controlsVisible: e,
            expanded: t,
            className: n
        }, s) {
            const i = sl(LN),
                a = sl(EN),
                o = sl(IN),
                r = sl(TN),
                l = sl(yN),
                [c, u] = (0, Y.useState)(null),
                [d, m] = (0, Y.useState)(!1),
                [h, g] = (0, Y.useState)(!1);
            (0, Y.useEffect)((() => {
                u(t ? $de : qde)
            }), [t]);
            const p = (0, Y.useCallback)((() => {
                lp(Zde), BN()
            }), []);
            return (0, z.jsx)(Gie, {
                enabled: t,
                children: (0, z.jsx)("div", {
                    ref: s,
                    className: Zu()(Kde.radioPlayer, e && Kde.controlsVisible, t && Kde.expanded, n),
                    children: (0, z.jsx)(Op, {
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: m,
                            children: (0, z.jsxs)(Qg, {
                                focused: c,
                                direction: Rg.Horizontal,
                                onChange: u,
                                onRefocus: Zg,
                                children: [i && (0, z.jsx)("div", {
                                    className: Kde.segmentField,
                                    children: (0, z.jsxs)(kde, {
                                        className: Kde.segmentFieldScroller,
                                        children: [(0, z.jsx)("div", {
                                            className: Kde.segmentTitle,
                                            children: i.title
                                        }), (0, z.jsx)("div", {
                                            className: Kde.segmentSubtitle,
                                            children: i.info
                                        })]
                                    }, t ? 1 : 0)
                                }), (0, z.jsx)("div", {
                                    className: Kde.controlsBounds,
                                    children: (0, z.jsxs)("div", {
                                        className: Kde.controls,
                                        children: [(0, z.jsx)(Tg, {
                                            tooltip: o ? (0, z.jsx)(Pc.Radio.UNMUTE, {}) : (0, z.jsx)(Pc.Radio.MUTE, {}),
                                            children: (0, z.jsx)(sf, {
                                                disableHint: !0,
                                                tinted: !0,
                                                focusKey: Wde,
                                                src: o ? "Media/Radio/VolumeMuted.svg" : "Media/Radio/Volume.svg",
                                                className: Kde.button,
                                                onSelect: FN,
                                                children: (0, z.jsx)(Pf, {
                                                    action: "Select",
                                                    active: d && c === Wde,
                                                    theme: Qde
                                                })
                                            })
                                        }), (0, z.jsxs)(Ip, {
                                            focusKey: zde,
                                            focusSound: rp.hoverItem,
                                            className: Kde.volumeControls,
                                            children: [(0, z.jsx)(Np, {
                                                onSelectedStateChanged: g,
                                                children: (0, z.jsx)(wx, {
                                                    uiTag: kx.value?.radioPanelVolumeSlider,
                                                    children: (0, z.jsx)(CM, {
                                                        start: 0,
                                                        end: 1,
                                                        value: r,
                                                        onChange: MN,
                                                        sounds: SM,
                                                        className: Kde.volumeSlider
                                                    })
                                                })
                                            }), (0, z.jsx)(Pf, {
                                                action: h ? "Back" : "Select",
                                                active: d && c === zde,
                                                theme: Qde,
                                                className: Kde.hintRight
                                            })]
                                        }), (0, z.jsxs)("div", {
                                            className: Kde.centerControls,
                                            children: [(0, z.jsx)(Tg, {
                                                tooltip: (0, z.jsx)(Pc.Radio.PREVIOUS_BUTTON_TOOLTIP, {}),
                                                children: (0, z.jsx)(sf, {
                                                    disableHint: !0,
                                                    tinted: !0,
                                                    focusKey: Yde,
                                                    src: "Media/Radio/Previous.svg",
                                                    className: Kde.button,
                                                    onSelect: GN,
                                                    children: (0, z.jsx)(Pf, {
                                                        action: "Select",
                                                        active: d && c === Yde,
                                                        theme: Qde
                                                    })
                                                })
                                            }), (0, z.jsx)(Tg, {
                                                tooltip: a ? (0, z.jsx)(Pc.Radio.PLAY_BUTTON_TOOLTIP, {}) : (0, z.jsx)(Pc.Radio.PAUSE_BUTTON_TOOLTIP, {}),
                                                children: (0, z.jsx)(sf, {
                                                    disableHint: !0,
                                                    tinted: !0,
                                                    focusKey: $de,
                                                    src: a ? "Media/Radio/Play.svg" : "Media/Radio/Pause.svg",
                                                    className: Kde.playPauseButton,
                                                    onSelect: kN,
                                                    children: (0, z.jsx)(Pf, {
                                                        action: "Select",
                                                        active: d && c === $de,
                                                        theme: Qde
                                                    })
                                                })
                                            }), (0, z.jsx)(Tg, {
                                                tooltip: (0, z.jsx)(Pc.Radio.NEXT_BUTTON_TOOLTIP, {}),
                                                children: (0, z.jsx)(sf, {
                                                    disableHint: !0,
                                                    tinted: !0,
                                                    focusKey: qde,
                                                    src: "Media/Radio/Next.svg",
                                                    className: Kde.button,
                                                    onSelect: VN,
                                                    children: (0, z.jsx)(Pf, {
                                                        action: "Select",
                                                        active: d && c === qde,
                                                        theme: Qde
                                                    })
                                                })
                                            })]
                                        }), (0, z.jsx)(wx, {
                                            uiTag: kx.value?.radioPanelAdsToggle,
                                            children: (0, z.jsx)("div", {
                                                className: Kde.adsControl,
                                                onClick: p,
                                                children: (0, z.jsx)(Tg, {
                                                    tooltip: (0, z.jsx)(Pc.Radio.ADS_BUTTON_TOOLTIP, {}),
                                                    children: (0, z.jsxs)(Ip, {
                                                        focusKey: t ? Xde : Ig,
                                                        className: Kde.adsControlInner,
                                                        children: [(0, z.jsx)(Pf, {
                                                            action: "Select",
                                                            active: d && c === Xde,
                                                            className: Kde.hintLeft,
                                                            theme: Qde
                                                        }), (0, z.jsx)("div", {
                                                            className: Kde.adsLabel,
                                                            children: "Ads"
                                                        }), (0, z.jsx)(b6, {
                                                            checked: !l,
                                                            className: Kde.adsToggle,
                                                            onChange: BN,
                                                            toggleSound: Zde
                                                        })]
                                                    })
                                                })
                                            })
                                        })]
                                    })
                                }), (0, z.jsx)("div", {
                                    className: Kde.rightSpace
                                })]
                            })
                        })
                    })
                })
            })
        }));
        X.add("game-ui/game/components/radio/radio-player/radio-player.tsx", {
            get RadioPlayer() {
                return Jde
            },
            set RadioPlayer(e) {
                Jde = e
            }
        });
        let eme = {
            "station-icon": "station-icon_PgB",
            stationIcon: "station-icon_PgB",
            "warning-icon": "warning-icon_VOz",
            warningIcon: "warning-icon_VOz",
            anchor: "anchor_tuN",
            "anchor-inner": "anchor-inner_KV5",
            anchorInner: "anchor-inner_KV5",
            expanded: "expanded_SgP",
            "player-bounds": "player-bounds_x19",
            playerBounds: "player-bounds_x19",
            player: "player_rRd",
            enter: "enter_eXw",
            "enter-active": "enter-active_zDg",
            enterActive: "enter-active_zDg",
            "exit-active": "exit-active_gQZ",
            exitActive: "exit-active_gQZ",
            hint: "hint_Nwu hint_Rv8"
        };
        X.add("game-ui/game/components/radio/radio-player-button/radio-player-button.module.scss", {
            get classes() {
                return eme
            },
            set classes(e) {
                Object.assign(eme, e)
            }
        });
        const tme = eme,
            nme = new Eg("RADIO_BUTTON"),
            sme = new Eg("PLAYER");
        var ime = ({
            className: e
        }) => {
            const t = sl(jN),
                n = E1(kb.Radio),
                s = RC("Radio"),
                i = sl(PN),
                a = sl(wN),
                o = i.find((e => e.name === a)),
                r = o?.icon,
                [l, c] = (0, Y.useState)(!1),
                [u, d] = (0, Y.useState)(!1),
                m = (0, Y.useCallback)((() => d(!0)), []),
                h = (0, Y.useCallback)((() => {
                    c(!1), d(!1)
                }), []);
            (0, Y.useEffect)((() => {
                let e = 0;
                const t = AN.subscribe((() => {
                    window.clearTimeout(e), c(!0), e = window.setTimeout((() => c(!1)), 3e3)
                }));
                return () => {
                    window.clearTimeout(e), t.dispose()
                }
            }), []);
            const g = Dm(),
                [p, f] = (0, Y.useState)(!1),
                [x, v] = (0, Y.useState)(!1),
                [_, b] = (0, Y.useState)(!1),
                T = _ ? sme : nme,
                E = (0, Y.useMemo)((() => ({
                    "Move Horizontal": e => {
                        const t = e < 0;
                        return _ !== t && (b(t), !0)
                    }
                })), [_]),
                I = (0, Y.useCallback)((e => {
                    f(e), e || b(!1)
                }), []),
                y = u || p && g;
            return (0, z.jsx)("div", {
                className: Zu()(tme.anchor, e),
                onMouseEnter: m,
                onMouseLeave: h,
                children: (0, z.jsx)(Ag, {
                    actions: E,
                    children: (0, z.jsx)(Ah, {
                        onFocusChange: I,
                        children: (0, z.jsxs)(ap, {
                            focused: T,
                            children: [(0, z.jsx)(ip, {
                                focusKey: sme,
                                children: (0, z.jsxs)(ud, {
                                    children: [(n.visible || l || y) && !t && !s && (0, z.jsx)("div", {
                                        className: Zu()(tme.anchorInner, n.visible && tme.expanded),
                                        children: (0, z.jsx)("div", {
                                            className: tme.playerBounds,
                                            children: (0, z.jsx)(mh, {
                                                styles: tme,
                                                children: (0, z.jsx)(Jde, {
                                                    controlsVisible: y,
                                                    expanded: n.visible,
                                                    className: tme.player
                                                })
                                            })
                                        })
                                    }), t && (0, z.jsx)("div", {
                                        className: Zu()(tme.anchorInner, n.visible && tme.expanded),
                                        children: (0, z.jsx)("div", {
                                            className: tme.playerBounds,
                                            children: (0, z.jsx)(mh, {
                                                styles: tme,
                                                children: (0, z.jsx)(Vde, {
                                                    expanded: n.visible,
                                                    className: tme.player
                                                })
                                            })
                                        })
                                    })]
                                })
                            }, "player"), (0, z.jsx)(wx, {
                                uiTag: kx.value?.radioPanelButton,
                                children: (0, z.jsx)(Ah, {
                                    onFocusChange: v,
                                    children: (0, z.jsxs)(Gp, {
                                        disableHint: !0,
                                        focusKey: nme,
                                        theme: Ade,
                                        selected: n.visible,
                                        className: Zu()(tme.button, Ade.toggleStates, t && Ade.emergencyMode),
                                        disabled: s,
                                        onSelect: n.toggle,
                                        shortcut: "Radio Panel",
                                        children: [(0, z.jsx)(Pf, {
                                            action: n.visible ? "Back" : "Select",
                                            active: (x || n.visible) && !s,
                                            className: tme.hint
                                        }), t ? (0, z.jsx)(ef, {
                                            src: "Media/Glyphs/Warning.svg",
                                            className: tme.warningIcon
                                        }) : (0, z.jsx)("img", {
                                            src: r,
                                            className: tme.stationIcon
                                        })]
                                    })
                                })
                            })]
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/radio/radio-player-button/radio-player-button.tsx", {
            get RadioPlayerButton() {
                return ime
            },
            set RadioPlayerButton(e) {
                ime = e
            }
        });
        let ame = {
            "number-badge": "number-badge__VH",
            numberBadge: "number-badge__VH",
            animated: "animated_mNr",
            pulsate: "pulsate_TNZ",
            "map-tile-badge": "map-tile-badge_wN7",
            mapTileBadge: "map-tile-badge_wN7",
            "dev-point-badge": "dev-point-badge_B9x",
            devPointBadge: "dev-point-badge_B9x"
        };
        X.add("game-ui/game/components/toolbar/components/number-badge/number-badge.module.scss", {
            get classes() {
                return ame
            },
            set classes(e) {
                Object.assign(ame, e)
            }
        });
        const ome = ame;
        var rme = ({
                className: e,
                children: t
            }) => (0, z.jsx)("div", {
                className: Zu()(ome.numberBadge, e),
                children: t
            }),
            lme = ({
                value: e,
                className: t
            }) => {
                const n = sl(Wh),
                    s = sl(dN),
                    i = n || !Ur(s, Lx),
                    [a, o] = (0, Y.useState)(!1),
                    r = (0, Y.useRef)(null);
                return (0, Y.useEffect)((() => {
                    if (null != r.current && (o(!0), e > r.current)) {
                        r.current = e;
                        const t = window.setTimeout((() => o(!1)), 100);
                        return () => window.clearTimeout(t)
                    }
                    r.current = e
                }), [e]), (0, z.jsx)(rme, {
                    className: Zu()(!i && !a && ome.animated, t),
                    children: bu(e)
                })
            };
        X.add("game-ui/game/components/toolbar/components/number-badge/number-badge.tsx", {
            get ButtonBadge() {
                return rme
            },
            set ButtonBadge(e) {
                rme = e
            },
            get AnimatedNumberBadge() {
                return lme
            },
            set AnimatedNumberBadge(e) {
                lme = e
            }
        });
        let cme = {
            "right-menu": "right-menu_u58",
            rightMenu: "right-menu_u58",
            item: "item_sWO",
            "chirper-popup-anchor": "chirper-popup-anchor_p7b",
            chirperPopupAnchor: "chirper-popup-anchor_p7b",
            "chirper-popup": "chirper-popup_H95",
            chirperPopup: "chirper-popup_H95",
            lock: "lock_IUS lock_EMU",
            hint: "hint_Rv8"
        };
        X.add("game-ui/game/components/right-menu/right-menu.module.scss", {
            get classes() {
                return cme
            },
            set classes(e) {
                Object.assign(cme, e)
            }
        });
        const ume = cme;
        let dme = {
            base: "base_GQv",
            enter: "enter_ZkJ",
            "exit-active": "exit-active__eD",
            exitActive: "exit-active__eD",
            "enter-active": "enter-active_x_X",
            enterActive: "enter-active_x_X",
            exit: "exit_B1r"
        };
        X.add("game-ui/game/components/right-menu/right-menu-notifications.module.scss", {
            get classes() {
                return dme
            },
            set classes(e) {
                Object.assign(dme, e)
            }
        });
        const mme = dme,
            hme = {
                direction: "left",
                alignment: "center"
            },
            gme = AT({
                chirper: "Media/Game/Icons/Chirper.svg",
                notifications: "Media/Game/Icons/Notifications.svg",
                lifepath: "Media/Game/Icons/Lifepath.svg",
                journal: "Media/Game/Icons/Journal.svg"
            });
        var pme = ({
            className: e
        }) => {
            const t = sl(Kne).length,
                n = E1(kb.Notifications),
                s = E1(kb.Chirper),
                i = E1(kb.Journal),
                a = E1(kb.LifePath),
                o = E1(kb.CinematicCamera),
                r = sl(OS),
                l = MC("Chirper"),
                c = MC("Followed Citizens"),
                u = MC("Event Journal"),
                d = sl(bN),
                m = sl(jN),
                h = sl(kl),
                g = sl(Ob),
                p = sl(Ub),
                f = h && !p && !s.visible && !i.visible && !a.visible && !o.visible && !r && g === Nb.main,
                x = (0, Y.useCallback)((() => {
                    i.visible ? _S() : vS(), i.toggle()
                }), [i]);
            return (0, z.jsxs)("div", {
                className: Zu()(ume.rightMenu, e),
                children: [(0, z.jsx)(tQ, {
                    name: "GameBottomRight"
                }), (0, z.jsx)(ly, {
                    in: t > 0 || n.visible,
                    children: (0, z.jsx)(mh, {
                        styles: mme,
                        children: (0, z.jsx)(fme, {
                            src: gme.notifications,
                            selected: n.visible,
                            onSelect: n.toggle,
                            shortcut: "Notification Panel",
                            ...hme,
                            title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_NOTIFICATIONS, {}),
                            description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_NOTIFICATIONS, {}),
                            children: t > 0 && (0, z.jsx)(rme, {
                                children: (0, z.jsx)(Gc, {
                                    value: t,
                                    unit: Oc.Integer
                                })
                            })
                        })
                    })
                }), (0, z.jsxs)("div", {
                    className: Zu()(ume.item, ume.chirperPopupAnchor),
                    children: [(0, z.jsx)(Pde, {
                        disabled: !f,
                        className: ume.chirperPopup,
                        onClick: s.toggle
                    }), (0, z.jsx)(wx, {
                        uiTag: kx.value?.chirperPanelButton,
                        children: (0, z.jsx)(fme, {
                            src: gme.chirper,
                            selected: s.visible,
                            locked: l.locked,
                            selectSound: rp.chirper,
                            onSelect: s.toggle,
                            shortcut: "Chirper Panel",
                            ...hme,
                            title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_CHIRPER, {}),
                            description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_CHIRPER, {}),
                            requirements: l.requirements,
                            direction: "left",
                            alignment: "start"
                        })
                    })]
                }), (0, z.jsx)(wx, {
                    uiTag: kx.value?.lifePathPanelButton,
                    children: (0, z.jsx)(fme, {
                        src: gme.lifepath,
                        selected: a.visible,
                        locked: c.locked,
                        onSelect: a.toggle,
                        shortcut: "Lifepath Panel",
                        ...hme,
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_FOLLOWED_CITIZENS, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_FOLLOWED_CITIZENS, {}),
                        requirements: c.requirements,
                        direction: "left",
                        alignment: "start"
                    })
                }), (0, z.jsx)(wx, {
                    uiTag: kx.value?.eventJournalPanelButton,
                    children: (0, z.jsx)(fme, {
                        src: gme.journal,
                        selected: i.visible,
                        locked: u.locked,
                        onSelect: x,
                        shortcut: "Event Journal Panel",
                        ...hme,
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_EVENT_JOURNAL, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_EVENT_JOURNAL, {}),
                        requirements: u.requirements,
                        direction: "left",
                        alignment: "start"
                    })
                }), (d || m) && (0, z.jsx)(ime, {
                    className: ume.item
                })]
            })
        };
        const fme = Y.forwardRef((function ({
            src: e,
            selected: t,
            locked: n,
            selectSound: s,
            shortcut: i,
            children: a,
            className: o,
            onSelect: r,
            ...l
        }, c) {
            const u = Dm(),
                d = sl(Ul),
                [m, h] = (0, Y.useState)(!1),
                [g, p] = (0, Y.useState)(!1);
            ol(wm, (e => u && p(!!e.find((e => "Back" === e.name)))));
            const f = m && !n && !t,
                x = t && !g;
            return (0, z.jsx)($2, {
                ...l,
                locked: n,
                shortcut: (0, z.jsx)(Lf, {
                    action: i,
                    active: d && !t,
                    shortName: pf.FallbackToControl
                }),
                children: (0, z.jsxs)("div", {
                    ref: c,
                    className: Zu()(ume.item, o),
                    children: [(0, z.jsx)(Pf, {
                        action: f ? "Select" : x ? "Back" : void 0,
                        className: ume.hint
                    }), (0, z.jsx)(Ah, {
                        onFocusChange: h,
                        children: (0, z.jsxs)(sf, {
                            disableHint: !0,
                            src: e,
                            selected: t,
                            disabled: n,
                            selectSound: s,
                            theme: Ade,
                            className: Ade.toggleStates,
                            onSelect: r,
                            focusKey: u ? yg : void 0,
                            shortcut: i,
                            children: [a, n && (0, z.jsx)(C$, {
                                className: ume.lock
                            })]
                        })
                    })]
                })
            })
        }));
        X.add("game-ui/game/components/right-menu/right-menu.tsx", {
            get RightMenu() {
                return pme
            },
            set RightMenu(e) {
                pme = e
            }
        });
        let xme = {
            "city-name-field": "city-name-field_XDy field_eKJ selectable_otQ",
            cityNameField: "city-name-field_XDy field_eKJ selectable_otQ",
            container: "container_MC3",
            input: "input_JJ_ content_syM",
            label: "label_mWz content_syM"
        };
        X.add("game-ui/game/components/toolbar/bottom/city-name-field/city-name-field.module.scss", {
            get classes() {
                return xme
            },
            set classes(e) {
                Object.assign(xme, e)
            }
        });
        const vme = xme;
        var _me = Y.memo((function (e) {
            const [t, n] = (0, Y.useState)(!1), [s, i] = (0, Y.useState)(!1), a = (0, Y.useCallback)((() => n(!0)), []), o = (0, Y.useCallback)((() => n(!1)), []);
            return (0, z.jsx)(kY, {
                disabled: t,
                title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_CITY_NAME, {}),
                description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_CITY_NAME, {}),
                children: (0, z.jsxs)(Ip, {
                    className: vme.cityNameField,
                    onFocusChange: i,
                    children: [(0, z.jsx)(Pf, {
                        action: t ? "Back" : "Select",
                        active: s,
                        className: HY.hint
                    }), (0, z.jsx)(H3, {
                        disableHint: !0,
                        value: e.name,
                        vkTitle: (0, z.jsx)(Pc.VirtualKeyboard.TITLE, {
                            hash: "CityName"
                        }),
                        theme: vme,
                        onChange: e.onChange,
                        onFocus: a,
                        onBlur: o
                    })]
                })
            })
        }), ((e, t) => e.name === t.name));
        const bme = () => {
            const e = sl(lL),
                t = (0, Y.useCallback)((e => mL(e.target.value)), []);
            return (0, z.jsx)(_me, {
                name: e,
                onChange: t
            })
        };
        X.add("game-ui/game/components/toolbar/bottom/city-name-field/city-name-field.tsx", {
            get CityNameField() {
                return bme
            },
            set CityNameField(e) {
                bme = e
            }
        });
        let Tme = {
            content: "content_B0O",
            indicators: "indicators_ZC7",
            icon: "icon_Tkh",
            active: "active_nrD",
            trend: "trend_NRr",
            visible: "visible__qP",
            "dev-info": "dev-info_PVK",
            devInfo: "dev-info_PVK",
            factors: "factors_IuM"
        };
        X.add("game-ui/game/components/toolbar/bottom/happiness-field/happiness-field.module.scss", {
            get classes() {
                return Tme
            },
            set classes(e) {
                Object.assign(Tme, e)
            }
        });
        const Eme = Tme,
            Ime = ["Media/Game/Icons/Depressed.svg", "Media/Game/Icons/Sad.svg", "Media/Game/Icons/Neutral.svg", "Media/Game/Icons/Content.svg", "Media/Game/Icons/Happy.svg"],
            yme = () => {
                const e = sl(Rj);
                return e.length > 0 ? (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)(ay, {}), (0, z.jsx)("div", {
                        className: Eme.factors,
                        children: e.map(((e, t) => (0, z.jsx)(Ey, {
                            left: e.weight > 0 ? (0, z.jsx)(Pc.Common.HAPPINESS_FACTOR_POSITIVE, {
                                hash: e.factor
                            }) : (0, z.jsx)(Pc.Common.HAPPINESS_FACTOR_NEGATIVE, {
                                hash: e.factor
                            }),
                            right: (0, z.jsx)("div", {
                                className: Jx(I2, e.weight),
                                children: (0, z.jsx)(Gc, {
                                    value: e.weight,
                                    signed: !0
                                })
                            })
                        }, t)))
                    })]
                }) : null
            };
        var jme = () => {
            const [e, t] = (0, Y.useState)(!1), n = sl(lA), s = sl(Mj), i = function (e) {
                return e > 70 ? 4 : e > 55 ? 3 : e > 40 ? 2 : e > 25 ? 1 : 0
            }(s), a = function (e) {
                const [t, n] = (0, Y.useState)(0), s = (0, Y.useRef)(e), i = (0, Y.useRef)(e), a = (0, Y.useRef)(null), o = (0, Y.useRef)(null), r = (0, Y.useMemo)((() => {
                    const e = () => {
                            n(0), o.current = null
                        },
                        t = () => {
                            const r = i.current - s.current;
                            Math.abs(r) > 0 ? (s.current = i.current, n(r), o.current && window.clearTimeout(o.current), o.current = window.setTimeout(e, Cme), a.current = window.setTimeout(t, Sme)) : a.current = null
                        };
                    return t
                }), []);
                return (0, Y.useEffect)((() => {
                    i.current = e, null == a.current && r()
                }), [r, e]), (0, Y.useEffect)((() => () => {
                    null != a.current && window.clearTimeout(a.current), null != o.current && window.clearTimeout(o.current)
                }), []), t
            }(s), o = Sb("Happiness");
            return (0, z.jsx)(kY, {
                title: (0, z.jsx)(Pc.CityInfoPanel.TOOLTIP_HAPPINESS_TITLE, {}),
                description: (0, z.jsx)(Pc.CityInfoPanel.TOOLTIP_HAPPINESS_DESCRIPTION, {}),
                content: (0, z.jsx)(yme, {}),
                children: (0, z.jsx)(Ah, {
                    onFocusChange: t,
                    children: (0, z.jsxs)(BY, {
                        contentClassName: Eme.content,
                        onSelect: o,
                        children: [(0, z.jsx)(Pf, {
                            action: "Select",
                            active: e,
                            className: HY.hint
                        }), (0, z.jsx)("img", {
                            src: "Media/Game/Misc/HappinessMinus.svg",
                            className: Zu()(Eme.trend, a < 0 && Eme.visible)
                        }), (0, z.jsx)("div", {
                            className: Eme.indicators,
                            children: Ime.map(((e, t) => (0, z.jsx)("img", {
                                src: e,
                                className: Zu()(Eme.icon, t === i && Eme.active)
                            }, t)))
                        }), (0, z.jsx)("img", {
                            src: "Media/Game/Misc/HappinessPlus.svg",
                            className: Zu()(Eme.trend, a > 0 && Eme.visible)
                        }), n && (0, z.jsx)("div", {
                            className: Eme.devInfo,
                            children: s
                        })]
                    })
                })
            })
        };
        const Sme = 15e3,
            Cme = 1e4;
        X.add("game-ui/game/components/toolbar/bottom/happiness-field/happiness-field.tsx", {
            get HappinessField() {
                return jme
            },
            set HappinessField(e) {
                jme = e
            }
        });
        let Nme = {
            content: "content_QTZ",
            icon: "icon_bCS",
            value: "value_ruP",
            negative: "negative_xQP",
            trend: "trend_IAr",
            "trend-icon": "trend-icon_AgE",
            trendIcon: "trend-icon_AgE",
            positive: "positive_PUr",
            unlimited: "unlimited_Dsm"
        };
        X.add("game-ui/game/components/toolbar/components/stat-field/stat-field.module.scss", {
            get classes() {
                return Nme
            },
            set classes(e) {
                Object.assign(Nme, e)
            }
        });
        const wme = Nme;
        var Ome = ({
                icon: e,
                value: t,
                valueUnit: n,
                trend: s,
                trendIcon: i,
                unlimited: a = !1,
                className: o,
                onSelect: r
            }) => a ? (0, z.jsx)(Pme, {
                icon: e,
                onSelect: r,
                className: o
            }) : (0, z.jsxs)(BY, {
                contentClassName: wme.content,
                onSelect: r,
                className: Zu()(wme.statField, o),
                children: [(0, z.jsx)("img", {
                    src: e,
                    className: wme.icon
                }), a ? (0, z.jsx)("div", {
                    className: wme.unlimited,
                    children: "∞"
                }) : (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsx)("div", {
                        className: Zu()(wme.value, t < 0 && wme.negative),
                        children: (0, z.jsx)(Gc, {
                            value: t,
                            unit: n
                        })
                    }), i && "number" == typeof s && (0, z.jsx)("div", {
                        className: wme.trend,
                        children: (0, z.jsx)(ef, {
                            src: i,
                            className: Zu()(wme.trendIcon, Jx(wme, s))
                        })
                    })]
                })]
            }),
            Pme = ({
                icon: e,
                className: t,
                onSelect: n
            }) => (0, z.jsxs)(BY, {
                contentClassName: wme.content,
                onSelect: n,
                className: Zu()(wme.statField, t),
                children: [(0, z.jsx)("img", {
                    src: e,
                    className: wme.icon
                }), (0, z.jsx)("div", {
                    className: wme.unlimited,
                    children: "∞"
                })]
            }),
            Lme = ({
                icon: e,
                value: t,
                valueUnit: n,
                trend: s,
                thresholdt: i,
                unlimited: a = !1,
                className: o,
                onSelect: r
            }) => {
                const l = (0, Y.useRef)(null),
                    c = t.value,
                    u = s.value,
                    d = (0, Y.useCallback)((() => {
                        const e = i.value,
                            n = Math.abs(t.value),
                            a = Math.abs(s.value);
                        return 0 === a ? void 0 : a <= n * e.x ? `Media/Glyphs/${s.value<0?"TrendDown":"TrendUp"}.svg` : a <= n * e.y ? `Media/Glyphs/${s.value<0?"TrendDownMedium":"TrendUpMedium"}.svg` : `Media/Glyphs/${s.value<0?"TrendDownHigh":"TrendUpHigh"}.svg`
                    }), [i, s, t]),
                    m = (0, Y.useRef)(),
                    [h, g] = (0, Y.useState)((() => (0, z.jsx)("div", {
                        className: wme.trendIcon
                    }))),
                    p = ac();
                return ol(t, (e => {
                    l.current && (l.current.innerHTML = iu(p, e, n), l.current.classList[e >= 0 ? "remove" : "add"](wme.negative))
                })), ol(s, (e => {
                    const t = d();
                    m.current !== t && (m.current = t, g(t ? (0, z.jsx)(ef, {
                        src: t,
                        className: Zu()(wme.trendIcon, Jx(wme, e))
                    }) : (0, z.jsx)("div", {
                        className: wme.trendIcon
                    })))
                })), a ? (0, z.jsx)(Pme, {
                    icon: e,
                    onSelect: r,
                    className: o
                }) : (0, z.jsxs)(BY, {
                    contentClassName: wme.content,
                    onSelect: r,
                    className: Zu()(wme.statField, o),
                    children: [(0, z.jsx)("img", {
                        src: e,
                        className: wme.icon
                    }), a ? (0, z.jsx)("div", {
                        className: wme.unlimited,
                        children: "∞"
                    }) : (0, z.jsxs)(z.Fragment, {
                        children: [(0, z.jsx)("div", {
                            className: Zu()(wme.value, c < 0 && wme.negative),
                            ref: l,
                            children: (0, z.jsx)(Gc, {
                                value: c,
                                unit: n
                            })
                        }), h && "number" == typeof u && (0, z.jsx)("div", {
                            className: wme.trend,
                            children: h
                        })]
                    })]
                })
            };
        X.add("game-ui/game/components/toolbar/components/stat-field/stat-field.tsx", {
            get StatField() {
                return Ome
            },
            set StatField(e) {
                Ome = e
            },
            get UnlimitedStatField() {
                return Pme
            },
            set UnlimitedStatField(e) {
                Pme = e
            },
            get StatFieldTrend() {
                return Lme
            },
            set StatFieldTrend(e) {
                Lme = e
            }
        });
        let Ame = {
            trend: "trend_K7y",
            positive: "positive_n5t",
            negative: "negative_Moc",
            container: "container_DC2"
        };
        X.add("game-ui/game/components/toolbar/bottom/money-field/money-field.module.scss", {
            get classes() {
                return Ame
            },
            set classes(e) {
                Object.assign(Ame, e)
            }
        });
        const Mme = Ame;
        var Rme = () => {
            const e = (0, Y.useRef)(null),
                t = ac(),
                n = al(rL),
                [s, i] = (0, Y.useState)((() => Jx(Mme, n.current)));
            return ol(rL, (s => {
                e.current && (e.current.innerHTML = iu(t, s, Oc.MoneyPerHour, !0), i(Jx(Mme, n.current)))
            })), (0, z.jsxs)("div", {
                className: Mme.trend,
                children: [(0, z.jsx)(Pc.Toolbar.CURRENT_TREND, {}), (0, z.jsx)("div", {
                    className: s,
                    ref: e,
                    children: (0, z.jsx)(Gc, {
                        value: n.current,
                        unit: Oc.MoneyPerHour,
                        signed: !0
                    })
                })]
            })
        };
        const kme = () => {
            const [e, t] = (0, Y.useState)(!1), n = sl(cL), s = RC("City Budget");
            return (0, z.jsxs)("div", {
                className: Mme.container,
                children: [(0, z.jsx)(kY, {
                    title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_MONEY, {}),
                    description: n ? (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_UNLIMITED_MONEY, {}) : (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_MONEY, {}),
                    content: (0, z.jsx)(Rme, {}),
                    children: (0, z.jsx)(Ah, {
                        onFocusChange: t,
                        children: (0, z.jsx)(Lme, {
                            icon: "Media/Game/Icons/Money.svg",
                            value: oL,
                            unlimited: n,
                            valueUnit: Oc.Integer,
                            trend: rL,
                            thresholdt: dL,
                            onSelect: s ? void 0 : Dme,
                            className: Mme.moneyField
                        })
                    })
                }), (0, z.jsx)(Pf, {
                    action: "Select",
                    active: !s && e,
                    className: HY.hint
                })]
            })
        };

        function Dme() {
            Gb(kb.Economy)
        }
        X.add("game-ui/game/components/toolbar/bottom/money-field/money-field.tsx", {
            get MoneyField() {
                return kme
            },
            set MoneyField(e) {
                kme = e
            }
        });
        let Fme = {
            trend: "trend_IdP",
            positive: "positive_yei",
            negative: "negative_LzO",
            container: "container_Kmm"
        };
        X.add("game-ui/game/components/toolbar/bottom/population-field/population-field.module.scss", {
            get classes() {
                return Fme
            },
            set classes(e) {
                Object.assign(Fme, e)
            }
        });
        const Ume = Fme;
        var Bme = () => {
            const e = (0, Y.useRef)(null),
                t = ac(),
                [n] = (0, Y.useState)((() => aL.value));
            return ol(aL, (n => {
                e.current && (e.current.innerHTML = iu(t, n, Oc.IntegerPerHour, !0), e.current.className = Jx(Ume, n) ?? "")
            })), (0, z.jsxs)("div", {
                className: Ume.trend,
                children: [(0, z.jsx)(Pc.Toolbar.CURRENT_TREND, {}), (0, z.jsx)("div", {
                    className: Jx(Ume, n),
                    ref: e,
                    children: (0, z.jsx)(Gc, {
                        value: n,
                        unit: Oc.IntegerPerHour,
                        signed: !0
                    })
                })]
            })
        };
        const Gme = () => {
            const [e, t] = (0, Y.useState)(!1), n = Sb("Population");
            return (0, z.jsxs)(Ep, {
                onFocusChange: t,
                className: Ume.container,
                children: [(0, z.jsx)(kY, {
                    title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_POPULATION, {}),
                    description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_POPULATION, {}),
                    content: (0, z.jsx)(Bme, {}),
                    children: (0, z.jsx)(Lme, {
                        icon: "Media/Game/Icons/Citizen.svg",
                        value: iL,
                        valueUnit: Oc.Integer,
                        trend: aL,
                        thresholdt: uL,
                        onSelect: n,
                        className: Ume.populationField
                    })
                }), (0, z.jsx)(Pf, {
                    action: "Select",
                    active: void 0 !== n && e,
                    className: HY.hint
                })]
            })
        };
        X.add("game-ui/game/components/toolbar/bottom/population-field/population-field.tsx", {
            get PopulationField() {
                return Gme
            },
            set PopulationField(e) {
                Gme = e
            }
        });
        let Vme = {
            width: "116px",
            height: "36px",
            shadowHeight: "1.5px",
            rangeFill: "rgba(255, 255, 255, 0.08)",
            shadowFill: "rgba(0, 0, 0, 0.2)",
            image: "image_E3g"
        };
        X.add("game-ui/game/components/toolbar/top/city-info-field/demand-bars.module.scss", {
            get classes() {
                return Vme
            },
            set classes(e) {
                Object.assign(Vme, e)
            }
        });
        const Hme = Vme;
        var Kme = (0, Y.memo)((function ({
            items: e,
            className: t
        }) {
            const n = Vm(Hme.width),
                s = Vm(Hme.height),
                i = s / Math.max(1, e.length),
                a = i / 2,
                o = Vm(Hme.shadowHeight);
            return (0, z.jsx)(xd, {
                children: (0, z.jsx)("div", {
                    className: Zu()(Hme.demandBars, t),
                    children: (0, z.jsxs)("svg", {
                        viewBox: `0 0 ${n} ${s}`,
                        className: Hme.image,
                        children: [(0, z.jsxs)("linearGradient", {
                            id: "shadow",
                            gradientUnits: "objectBoundingBox",
                            x1: 0,
                            x2: 0,
                            y1: 1,
                            y2: 0,
                            children: [(0, z.jsx)("stop", {
                                offset: "0",
                                stopColor: Hme.shadowFill
                            }), (0, z.jsx)("stop", {
                                offset: o / i,
                                stopColor: Hme.shadowFill
                            }), (0, z.jsx)("stop", {
                                offset: o / i,
                                stopColor: "rgba(0, 0, 0, 0)"
                            }), (0, z.jsx)("stop", {
                                offset: "1",
                                stopColor: "rgba(0, 0, 0, 0)"
                            })]
                        }), e.map(((e, t) => (0, z.jsxs)(Y.Fragment, {
                            children: [(0, z.jsx)("clipPath", {
                                id: e.key,
                                children: (0, z.jsx)("rect", {
                                    x: "0",
                                    y: t * i,
                                    width: n,
                                    height: i,
                                    rx: a,
                                    ry: a
                                })
                            }), (0, z.jsx)("rect", {
                                x: "0",
                                y: t * i,
                                width: n,
                                height: i,
                                rx: a,
                                ry: a,
                                fill: Hme.rangeFill
                            }), (0, z.jsx)("rect", {
                                id: `${e.key}-bar`,
                                x: 0,
                                y: t * i,
                                width: 100 * Od(e.value, 0, 1) + "%",
                                height: i,
                                rx: a,
                                ry: a,
                                clipPath: `url(#${e.key})`,
                                fill: e.color
                            }), (0, z.jsx)("rect", {
                                x: "0",
                                y: t * i,
                                width: n,
                                height: i,
                                rx: a,
                                ry: a,
                                fill: "url(#shadow)"
                            })]
                        }, e.key)))]
                    })
                })
            })
        }));
        X.add("game-ui/game/components/toolbar/top/city-info-field/demand-bars.tsx", {
            get DemandBars() {
                return Kme
            },
            set DemandBars(e) {
                Kme = e
            }
        });
        let Wme = {
            button: "button_s2g button_ECf item_It6 item-mouse-states_Fmi item-selected_tAM item-focused_FuT",
            "no-border": "no-border_Kqc",
            noBorder: "no-border_Kqc",
            "toggle-states": "toggle-states_X82 toggle-states_DTm",
            toggleStates: "toggle-states_X82 toggle-states_DTm",
            icon: "icon_KJZ icon_soN icon_Iwk"
        };
        X.add("game-ui/game/components/toolbar/components/feature-button/toolbar-feature-button.module.scss", {
            get classes() {
                return Wme
            },
            set classes(e) {
                Object.assign(Wme, e)
            }
        });
        const zme = Wme;
        let Yme = {
            "city-info-field": "city-info-field_kp7",
            cityInfoField: "city-info-field_kp7",
            field: "field_OvX",
            "unlocking-tooltip": "unlocking-tooltip_WHX",
            unlockingTooltip: "unlocking-tooltip_WHX",
            toggle: "toggle_kzL",
            "small-lock": "small-lock_k2N",
            smallLock: "small-lock_k2N",
            lock: "lock_D8i lock_EMU",
            legend: "legend_wn_",
            hint: "hint_n9h"
        };
        X.add("game-ui/game/components/toolbar/top/city-info-field/city-info-field.module.scss", {
            get classes() {
                return Yme
            },
            set classes(e) {
                Object.assign(Yme, e)
            }
        });
        const $me = Yme,
            qme = AT({
                City: "Media/Game/Icons/City.svg"
            });
        var Xme = () => {
            const [e, t] = (0, Y.useState)(!1), n = E1(kb.CityInfo), s = MC("City Info Panel"), i = RC("Residential Medium"), a = RC("Residential High"), o = RC("ZonesOffice"), r = Dm(), l = sl(Ul), c = e && !s.locked && !n.visible, u = n.visible;
            return (0, z.jsxs)("div", {
                className: $me.cityInfoField,
                children: [(0, z.jsx)(wx, {
                    uiTag: kx.value?.cityInfoPanelButton,
                    children: (0, z.jsx)($2, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_CITY_INFO, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_CITY_INFO, {}),
                        shortcut: (0, z.jsx)(Lf, {
                            action: "City Information Panel",
                            active: l
                        }),
                        locked: s.locked,
                        requirements: s.requirements,
                        content: r && (0, z.jsx)(DY, {
                            title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_DEMAND, {}),
                            description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_DEMAND, {}),
                            content: (0, z.jsxs)("div", {
                                className: $me.legend,
                                children: [(0, z.jsx)(ehe, {
                                    type: g7.ResidentialLow
                                }), !i && (0, z.jsx)(ehe, {
                                    type: g7.ResidentialMedium
                                }), !a && (0, z.jsx)(ehe, {
                                    type: g7.ResidentialHigh
                                }), (0, z.jsx)(ehe, {
                                    type: g7.Commercial
                                }), (0, z.jsx)(ehe, {
                                    type: g7.Industrial
                                }), !o && (0, z.jsx)(ehe, {
                                    type: g7.Office
                                })]
                            })
                        }),
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: t,
                            children: (0, z.jsxs)(sf, {
                                disableHint: !0,
                                src: qme.City,
                                selected: n.visible,
                                disabled: s.locked,
                                theme: zme,
                                focusKey: r ? yg : void 0,
                                className: Zu()($me.toggle, zme.toggleStates),
                                onSelect: n.toggle,
                                shortcut: "City Information Panel",
                                children: [(0, z.jsx)(Pf, {
                                    action: c ? "Select" : u ? "Back" : void 0,
                                    className: $me.hint
                                }), s.locked && (0, z.jsx)(C$, {
                                    className: $me.lock
                                })]
                            })
                        })
                    })
                }), (0, z.jsx)(wx, {
                    uiTag: kx.value?.toolbarDemand,
                    children: (0, z.jsx)(kY, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_DEMAND, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_DEMAND, {}),
                        content: (0, z.jsxs)("div", {
                            className: $me.legend,
                            children: [(0, z.jsx)(ehe, {
                                type: g7.ResidentialLow
                            }), !i && (0, z.jsx)(ehe, {
                                type: g7.ResidentialMedium
                            }), !a && (0, z.jsx)(ehe, {
                                type: g7.ResidentialHigh
                            }), (0, z.jsx)(ehe, {
                                type: g7.Commercial
                            }), (0, z.jsx)(ehe, {
                                type: g7.Industrial
                            }), !o && (0, z.jsx)(ehe, {
                                type: g7.Office
                            })]
                        }),
                        children: (0, z.jsx)(Jme, {
                            resMedLocked: i,
                            resHighLocked: a,
                            officeLocked: o
                        })
                    })
                })]
            })
        };
        const Qme = parseInt(Hme.width),
            Zme = (e, t) => {
                const n = document.querySelector(`#${e}-bar`);
                n && (n.style.width = `${Math.round(Od(t,0,1)*Qme)}px`)
            },
            Jme = ({
                resMedLocked: e,
                resHighLocked: t,
                officeLocked: n
            }) => {
                const s = (0, Y.useCallback)((e => Zme("ResidentialLow", e)), []),
                    i = (0, Y.useCallback)((e => Zme("ResidentialMedium", e)), []),
                    a = (0, Y.useCallback)((e => Zme("ResidentialHigh", e)), []),
                    o = (0, Y.useCallback)((e => Zme("Commercial", e)), []),
                    r = (0, Y.useCallback)((e => Zme("Industrial", e)), []),
                    l = (0, Y.useCallback)((e => Zme("Office", e)), []),
                    c = ol(Ej, s),
                    u = ol(Ij, i),
                    d = ol(yj, a),
                    m = ol(jj, o),
                    h = ol(Sj, r),
                    g = ol(Cj, l),
                    p = (0, Y.useMemo)((() => {
                        const s = [];
                        return s.push({
                            key: "ResidentialLow",
                            color: p7[g7.ResidentialLow],
                            value: c
                        }), e || s.push({
                            key: "ResidentialMedium",
                            color: p7[g7.ResidentialMedium],
                            value: u
                        }), t || s.push({
                            key: "ResidentialHigh",
                            color: p7[g7.ResidentialHigh],
                            value: d
                        }), s.push({
                            key: "Commercial",
                            color: p7[g7.Commercial],
                            value: m
                        }), s.push({
                            key: "Industrial",
                            color: p7[g7.Industrial],
                            value: h
                        }), n || s.push({
                            key: "Office",
                            color: p7[g7.Office],
                            value: g
                        }), s
                    }), [n, t, e]);
                return (0, z.jsx)(Kme, {
                    items: p,
                    className: $me.field
                })
            },
            ehe = ({
                type: e
            }) => (0, z.jsx)(yR, {
                color: p7[e],
                label: (0, z.jsx)(Pc.CityInfoPanel.DEMAND_TITLE, {
                    hash: g7[e]
                })
            });
        X.add("game-ui/game/components/toolbar/top/city-info-field/city-info-field.tsx", {
            get CityInfoField() {
                return Xme
            },
            set CityInfoField(e) {
                Xme = e
            }
        });
        let the = {
            "progression-message-feed": "progression-message-feed_P4X",
            progressionMessageFeed: "progression-message-feed_P4X",
            "item-transition": "item-transition_ugO",
            itemTransition: "item-transition_ugO",
            enter: "enter_nmi",
            "enter-active": "enter-active_bWQ",
            enterActive: "enter-active_bWQ",
            exit: "exit_mXQ",
            "exit-active": "exit-active_SEi",
            exitActive: "exit-active_SEi",
            item: "item_XMq",
            amount: "amount_nbC",
            reason: "reason_tLs",
            space: "space_m_Q"
        };
        X.add("game-ui/game/components/toolbar/top/progression-field/progression-message-feed.module.scss", {
            get classes() {
                return the
            },
            set classes(e) {
                Object.assign(the, e)
            }
        });
        const nhe = the;
        var she = ({
            className: e
        }) => {
            const [t, n] = (0, Y.useState)([]);
            return (0, Y.useEffect)((() => {
                const e = new ahe(n);
                return () => e.dispose()
            }), []), (0, z.jsx)("div", {
                className: Zu()(nhe.progressionMessageFeed, e),
                children: (0, z.jsx)(ud, {
                    children: t.map((e => (0, z.jsx)(ihe, {
                        data: e
                    }, e.time)))
                })
            })
        };
        const ihe = ({
            data: e
        }) => ((0, Y.useEffect)((() => lp(rp.xpEvent)), []), (0, z.jsx)(ry, {
            styles: nhe,
            exitCollapseHeight: !1,
            children: (0, z.jsxs)("div", {
                className: nhe.itemTransition,
                children: [(0, z.jsxs)("div", {
                    className: nhe.item,
                    children: [(0, z.jsx)("div", {
                        className: nhe.amount,
                        children: (0, z.jsx)(Gc, {
                            signed: !0,
                            value: e.message.amount,
                            unit: Oc.XP
                        })
                    }), (0, z.jsx)("div", {
                        className: nhe.reason,
                        children: (0, z.jsx)(Pc.Progression.XP_REASON, {
                            hash: e.message.reason
                        })
                    })]
                }), (0, z.jsx)("div", {
                    className: nhe.space
                })]
            })
        }));
        class ahe {
            constructor(e) {
                this.listener = e, this.activeMessages = [], this.pendingMessages = [], this.updateTimeoutHandle = 0, this.subscription = lN.subscribe(this.handleMessageAdded.bind(this))
            }
            handleMessageAdded(e) {
                this.pendingMessages.unshift(e), window.clearTimeout(this.updateTimeoutHandle), this.update()
            }
            update() {
                const e = performance.now();
                let t = !1;
                for (let n = this.activeMessages.length - 1; n >= 0; n--) {
                    const s = this.activeMessages[n];
                    (s.time + 4e3 < e || s.time > e) && (this.activeMessages.splice(n, 1), t = !0)
                }
                let n = this.activeMessages.reduce(((e, t) => Math.max(e, t.time)), 0);
                if (this.activeMessages.length < 4 && e - n > 500) {
                    const s = this.pendingMessages.pop();
                    null != s && (this.activeMessages.push({
                        message: s,
                        time: e
                    }), n = e, t = !0)
                }
                t && this.listener([...this.activeMessages]);
                let s = null;
                if (this.activeMessages.length > 0) {
                    const t = this.activeMessages.reduce(((e, t) => Math.min(e, t.time)), e);
                    s = Math.min(t + 4e3, s ?? Number.MAX_VALUE)
                }
                this.pendingMessages.length > 0 && (s = Math.min(e + 500, s ?? Number.MAX_VALUE)), null != s && window.setTimeout(this.update.bind(this), s - e)
            }
            dispose() {
                window.clearTimeout(this.updateTimeoutHandle), this.subscription.dispose()
            }
        }
        X.add("game-ui/game/components/toolbar/top/progression-field/progression-message-feed.tsx", {
            get ProgressionMessageFeed() {
                return she
            },
            set ProgressionMessageFeed(e) {
                she = e
            }
        });
        let ohe = {
            strokeWidth: "6",
            "progress-circle": "progress-circle_jvw progress-circle_OLN",
            progressCircle: "progress-circle_jvw progress-circle_OLN",
            progress: "progress_i1E progress_mlv",
            circle: "circle_Apc"
        };
        X.add("game-ui/game/components/toolbar/top/progression-field/progress-circle.module.scss", {
            get classes() {
                return ohe
            },
            set classes(e) {
                Object.assign(ohe, e)
            }
        });
        const rhe = ohe;
        let lhe = {
            "progression-field": "progression-field_Lho",
            progressionField: "progression-field_Lho",
            field: "field_p2F",
            "max-milestone-reached": "max-milestone-reached___5",
            maxMilestoneReached: "max-milestone-reached___5",
            toggle: "toggle_bAE",
            icon: "icon_Gzn",
            progress: "progress_NK4",
            feed: "feed_zoj",
            lock: "lock_YHO lock_EMU",
            milestone: "milestone_Eev",
            hint: "hint_PkL",
            "gamepad-tooltip-content": "gamepad-tooltip-content_aSN",
            gamepadTooltipContent: "gamepad-tooltip-content_aSN"
        };
        X.add("game-ui/game/components/toolbar/top/progression-field/progression-field.module.scss", {
            get classes() {
                return lhe
            },
            set classes(e) {
                Object.assign(lhe, e)
            }
        });
        const che = lhe,
            uhe = {
                tension: 150,
                friction: 20
            },
            dhe = () => {
                const e = sl(aN),
                    t = sl(oN),
                    n = sl(rN),
                    s = RW(uhe, n),
                    i = Math.max(t - e, 0),
                    a = Od(s - e, 0, i);
                return (0, z.jsx)(EF, {
                    progress: a,
                    max: i,
                    theme: rhe,
                    className: che.progress
                })
            },
            mhe = () => {
                const e = sl(aN),
                    t = sl(oN),
                    n = sl(rN),
                    s = RW(uhe, n),
                    i = Math.max(t - e, 0),
                    a = Od(s - e, 0, i);
                return (0, z.jsx)(cu, {
                    value: a,
                    total: i,
                    unit: Oc.XP
                })
            };
        var hhe = () => {
            const [e, t] = (0, Y.useState)(!1), n = E1(kb.Progression), s = MC("Progression Panel"), i = Dm(), a = sl(iN), o = sl(cN), r = sl(jC), l = sl(Ul), c = !o && !s.locked, u = e && !s.locked && !n.visible, d = n.visible;
            return (0, z.jsxs)("div", {
                className: che.progressionField,
                children: [(0, z.jsx)(wx, {
                    uiTag: kx.value?.progressionPanelButton,
                    children: (0, z.jsx)($2, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_PROGRESSION, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_PROGRESSION, {}),
                        content: (0, z.jsxs)(z.Fragment, {
                            children: [o ? void 0 : (0, z.jsx)(z.Fragment, {
                                children: (0, z.jsx)(mhe, {})
                            }), i && (0, z.jsx)(DY, {
                                className: che.gamepadTooltipContent,
                                title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_CURRENT_MILESTONE, {}),
                                description: o ? (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_MAX_MILESTONE, {}) : (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_CURRENT_MILESTONE, {})
                            })]
                        }),
                        shortcut: (0, z.jsx)(Lf, {
                            action: "Statistic Panel",
                            active: l
                        }),
                        locked: s.locked,
                        requirements: s.requirements,
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: t,
                            children: (0, z.jsxs)(Gp, {
                                disableHint: !0,
                                selected: n.visible,
                                disabled: s.locked,
                                focusKey: i ? yg : void 0,
                                className: Zu()(che.toggle, zme.toggleStates, c && zme.noBorder),
                                theme: zme,
                                onSelect: n.toggle,
                                shortcut: "Progression Panel",
                                children: [o ? (0, z.jsx)("img", {
                                    src: "Media/Game/Icons/Trophy.svg",
                                    className: zme.icon
                                }) : (0, z.jsx)("div", {
                                    className: che.milestone,
                                    children: (0, z.jsx)(Gc, {
                                        value: a
                                    })
                                }), c && (0, z.jsx)(dhe, {}), r > 0 && (0, z.jsx)(lme, {
                                    value: r,
                                    className: ome.devPointBadge
                                }), s.locked && (0, z.jsx)(C$, {
                                    className: che.lock
                                }), (0, z.jsx)(Pf, {
                                    action: u ? "Select" : d ? "Back" : void 0,
                                    className: che.hint
                                })]
                            })
                        })
                    })
                }), (0, z.jsx)(kY, {
                    title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_CURRENT_MILESTONE, {}),
                    description: o ? (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_MAX_MILESTONE, {}) : (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_CURRENT_MILESTONE, {}),
                    children: (0, z.jsx)("div", {
                        className: Zu()(che.field, o && che.maxMilestoneReached),
                        children: (0, z.jsx)(Pc.Progression.MILESTONE_NAME, {
                            index: a
                        })
                    })
                }), !o && (0, z.jsx)(she, {
                    className: che.feed
                })]
            })
        };
        X.add("game-ui/game/components/toolbar/top/progression-field/progression-field.tsx", {
            get ProgressionField() {
                return hhe
            },
            set ProgressionField(e) {
                hhe = e
            }
        });
        let ghe = {
            lock: "lock_EMU",
            hint: "hint_Wu1",
            "hint-right": "hint-right_flW",
            hintRight: "hint-right_flW"
        };
        X.add("game-ui/game/components/toolbar/top/toggles.module.scss", {
            get classes() {
                return ghe
            },
            set classes(e) {
                Object.assign(ghe, e)
            }
        });
        const phe = ghe,
            fhe = AT({
                Economy: "Media/Game/Icons/Economy.svg",
                TransportationOverview: "Media/Game/Icons/TransportationOverview.svg",
                CityStatistics: "Media/Game/Icons/CityStatistics.svg",
                MapTile: "Media/Game/Icons/MapTile.svg",
                PhotoMode: "Media/Game/Icons/PhotoMode.svg"
            });
        var xhe = () => {
                const [e, t] = (0, Y.useState)(!1), n = E1(kb.Economy), s = MC("City Budget"), i = Dm(), [a, o] = (0, Y.useState)(!1);
                ol(wm, (e => i && o(!!e.find((e => "Close" === e.name)))));
                const r = sl(Ul),
                    l = e && !s.locked && !n.visible,
                    c = n.visible && a;
                return (0, z.jsx)(wx, {
                    uiTag: kx.value?.economyPanelButton,
                    children: (0, z.jsx)($2, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_CITY_ECONOMY, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_CITY_ECONOMY, {}),
                        shortcut: (0, z.jsx)(Lf, {
                            action: "Economy Panel",
                            active: r,
                            shortName: pf.FallbackToControl
                        }),
                        locked: s.locked,
                        requirements: s.requirements,
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: t,
                            children: (0, z.jsxs)(sf, {
                                disableHint: !0,
                                src: fhe.Economy,
                                selected: n.visible,
                                disabled: s.locked,
                                selectSound: rp.economy,
                                theme: zme,
                                className: zme.toggleStates,
                                onSelect: n.toggle,
                                focusKey: i ? yg : void 0,
                                shortcut: "Economy Panel",
                                children: [(0, z.jsx)(Pf, {
                                    action: l ? "Select" : c ? "Back" : void 0,
                                    className: phe.hint
                                }), s.locked && (0, z.jsx)(C$, {
                                    className: phe.lock
                                })]
                            })
                        })
                    })
                })
            },
            vhe = () => {
                const [e, t] = (0, Y.useState)(!1), n = E1(kb.TransportationOverview), s = MC("Transportation Overview"), i = Dm(), [a, o] = (0, Y.useState)(!1);
                ol(wm, (e => i && o(!!e.find((e => "Close" === e.name)))));
                const r = sl(Ul),
                    l = e && !s.locked && !n.visible,
                    c = n.visible && a;
                return (0, z.jsx)(wx, {
                    uiTag: kx.value?.transportationOverviewPanelButton,
                    children: (0, z.jsx)($2, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_LINES_OVERVIEW, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_LINES_OVERVIEW, {}),
                        shortcut: (0, z.jsx)(Lf, {
                            action: "Transportation Overview Panel",
                            active: r,
                            shortName: pf.FallbackToControl
                        }),
                        locked: s.locked,
                        requirements: s.requirements,
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: t,
                            children: (0, z.jsxs)(sf, {
                                disableHint: !0,
                                src: fhe.TransportationOverview,
                                selected: n.visible,
                                disabled: s.locked,
                                theme: zme,
                                className: zme.toggleStates,
                                onSelect: n.toggle,
                                focusKey: i ? yg : void 0,
                                shortcut: "Transportation Overview Panel",
                                children: [(0, z.jsx)(Pf, {
                                    action: l ? "Select" : c ? "Back" : void 0,
                                    className: phe.hint
                                }), s.locked && (0, z.jsx)(C$, {
                                    className: phe.lock
                                })]
                            })
                        })
                    })
                })
            },
            _he = () => {
                const [e, t] = (0, Y.useState)(!1), n = E1(kb.Statistics), s = MC("City Statistics"), i = Dm(), a = sl(Ul), o = e && !s.locked && !n.visible, r = n.visible;
                return (0, z.jsx)(wx, {
                    uiTag: kx.value?.statisticsPanelButton,
                    children: (0, z.jsx)($2, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_CITY_STATISTICS, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_CITY_STATISTICS, {}),
                        shortcut: (0, z.jsx)(Lf, {
                            action: "Statistic Panel",
                            active: a,
                            shortName: pf.FallbackToControl
                        }),
                        locked: s.locked,
                        requirements: s.requirements,
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: t,
                            children: (0, z.jsxs)(sf, {
                                disableHint: !0,
                                src: fhe.CityStatistics,
                                selected: n.visible,
                                disabled: s.locked,
                                theme: zme,
                                className: zme.toggleStates,
                                onSelect: n.toggle,
                                focusKey: i ? yg : void 0,
                                shortcut: "Statistic Panel",
                                children: [(0, z.jsx)(Pf, {
                                    action: o ? "Select" : r ? "Back" : void 0,
                                    className: phe.hint
                                }), s.locked && (0, z.jsx)(C$, {
                                    className: phe.lock
                                })]
                            })
                        })
                    })
                })
            },
            bhe = () => {
                const [e, t] = (0, Y.useState)(!1), n = sl(PS), s = (0, Y.useRef)(!1), i = !Ur(sl(YP), Lx), a = sl(PO), o = sl(FS), r = MC("Map Tiles"), l = (0, Y.useCallback)((() => BS(!n)), [n]), c = Dm(), u = sl(Ul);
                (0, Y.useEffect)((() => {
                    n && s.current && (i || a.id !== xP) && BS(!1), n && !s.current && (QO(xP), JP(Lx), s.current = !0), n || (s.current = !1)
                }), [n, i, a.id]);
                const d = n ? "Back" : "Select";
                return (0, z.jsx)(wx, {
                    uiTag: kx.value?.mapTilePanelButton,
                    children: (0, z.jsx)($2, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_MAP_TILES, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_MAP_TILES, {}),
                        shortcut: (0, z.jsx)(Lf, {
                            action: "Map Tile Purchase Panel",
                            active: u,
                            shortName: pf.FallbackToControl
                        }),
                        locked: r.locked,
                        requirements: r.requirements,
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: t,
                            children: (0, z.jsxs)(sf, {
                                disableHint: !0,
                                selectAction: d,
                                src: fhe.MapTile,
                                selected: n,
                                disabled: r.locked,
                                focusKey: c ? yg : void 0,
                                theme: zme,
                                className: zme.toggleStates,
                                onSelect: l,
                                shortcut: "Map Tile Purchase Panel",
                                children: [(0, z.jsx)(Pf, {
                                    action: d,
                                    active: (n || e) && !r.locked,
                                    className: Zu()(phe.hint, phe.hintRight)
                                }), !r.locked && o > 0 && (0, z.jsx)(lme, {
                                    value: o,
                                    className: ome.mapTileBadge
                                }), r.locked && (0, z.jsx)(C$, {
                                    className: phe.lock
                                })]
                            })
                        })
                    })
                })
            },
            The = () => {
                const [e, t] = (0, Y.useState)(!1), n = E1(kb.PhotoMode), s = MC("Photo Mode"), i = Dm(), a = sl(Ul), o = e && !s.locked && !n.visible, r = n.visible;
                return (0, z.jsx)(wx, {
                    uiTag: kx.value?.photoModePanelButton,
                    children: (0, z.jsx)($2, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_PHOTO_MODE, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_PHOTO_MODE, {}),
                        shortcut: (0, z.jsx)(Lf, {
                            action: "Photo Mode Panel",
                            active: a,
                            shortName: pf.FallbackToControl
                        }),
                        locked: s.locked,
                        requirements: s.requirements,
                        children: (0, z.jsx)(Ah, {
                            onFocusChange: t,
                            children: (0, z.jsxs)(sf, {
                                disableHint: !0,
                                src: fhe.PhotoMode,
                                selected: n.visible,
                                disabled: s.locked,
                                theme: zme,
                                className: zme.toggleStates,
                                onSelect: n.toggle,
                                focusKey: i ? yg : void 0,
                                shortcut: "Photo Mode Panel",
                                children: [(0, z.jsx)(Pf, {
                                    action: o ? "Select" : r ? "Back" : void 0,
                                    className: phe.hint
                                }), s.locked && (0, z.jsx)(C$, {
                                    className: phe.lock
                                })]
                            })
                        })
                    })
                })
            };
        X.add("game-ui/game/components/toolbar/top/toggles.tsx", {
            get EconomyPanelToggle() {
                return xhe
            },
            set EconomyPanelToggle(e) {
                xhe = e
            },
            get TransportationOverviewToggle() {
                return vhe
            },
            set TransportationOverviewToggle(e) {
                vhe = e
            },
            get CityStatisticsToggle() {
                return _he
            },
            set CityStatisticsToggle(e) {
                _he = e
            },
            get MapTilePurchaseToggle() {
                return bhe
            },
            set MapTilePurchaseToggle(e) {
                bhe = e
            },
            get PhotoModeToggle() {
                return The
            },
            set PhotoModeToggle(e) {
                The = e
            }
        });
        let Ehe = {
            "toolbar-button-strip": "toolbar-button-strip_CoK",
            toolbarButtonStrip: "toolbar-button-strip_CoK",
            group: "group_i85",
            button: "button_cBV",
            highlight: "highlight_XBc",
            lock: "lock_bNk",
            "item-inner": "item-inner_R9q",
            itemInner: "item-inner_R9q",
            hint: "hint_j1W"
        };
        X.add("game-ui/game/components/toolbar/top/toolbar-button-strip/toolbar-button-strip.module.scss", {
            get classes() {
                return Ehe
            },
            set classes(e) {
                Object.assign(Ehe, e)
            }
        });
        const Ihe = Ehe;
        var yhe = ({
            focusKey: e,
            className: t
        }) => {
            const n = sl(FP),
                s = (0, Y.useMemo)((() => {
                    const e = Math.min(n.length - 1, 1);
                    return -1 !== e && n[e].children.length > 0 ? Dr(n[e].children[0].entity) : null
                }), [n]);
            return (0, z.jsx)("div", {
                className: Zu()(Ihe.toolbarButtonStrip, t),
                children: (0, z.jsx)(tp, {
                    focusKey: e,
                    initialFocused: s,
                    direction: Rg.Horizontal,
                    children: n.map((e => (0, z.jsx)("div", {
                        className: Ihe.group,
                        children: e.children.map((e => (0, z.jsx)(jhe, {
                            item: e
                        }, Dr(e.entity))))
                    }, Dr(e.entity))))
                })
            })
        };
        const jhe = ({
            item: e
        }) => {
            const [t, n] = (0, Y.useState)(!1), s = (0, Y.useCallback)((() => {
                l(Ur(e.entity, $P.value) || Ur(e.entity, zP.value))
            }), [e]), i = RC("IntroListCompleted"), a = ol($P, s), o = ol(zP, s), [r, l] = (0, Y.useState)((() => Ur(e.entity, a) || Ur(e.entity, o))), c = (0, Y.useCallback)((() => {
                e.type === kP.menu ? JP(e.entity) : (tL(e.entity), ig(e.uiTag, !0))
            }), [e.entity, e.type, e.uiTag]), u = e.locked && (e.type === kP.asset || i), d = ll(Rx, e.entity), m = sl(Ul), [h, g] = (0, Y.useState)(!1);
            ol(wm, (e => g(!!e.find((e => "Close" === e.name)))));
            const p = t && !u && !r,
                f = r && h;
            return (0, z.jsx)(Ah, {
                onFocusChange: n,
                children: (0, z.jsxs)(sf, {
                    disableHint: !0,
                    focusKey: Dr(e.entity),
                    src: e.icon,
                    selected: r,
                    disabled: u,
                    selectSound: (r ? e.deselectSound : e.selectSound) ?? void 0,
                    theme: NJ,
                    allowFocusableChildren: !0,
                    className: Zu()(Ihe.button, NJ.toggleStates, e.locked && NJ.locked),
                    onSelect: r ? nL : c,
                    shortcut: e.shortcut,
                    children: [(0, z.jsx)(wx, {
                        uiTag: e.uiTag,
                        active: !(e.locked && e.type === kP.asset),
                        children: (0, z.jsx)($2, {
                            title: null != d ? (0, z.jsx)(Tc, {
                                id: d.titleId
                            }) : e.name,
                            description: null != d ? (0, z.jsx)(Tc, {
                                id: d.descriptionId
                            }) : void 0,
                            shortcut: (0, z.jsx)(Lf, {
                                action: e.shortcut,
                                active: m,
                                shortName: pf.FallbackToControl
                            }),
                            locked: e.locked,
                            requirements: e.requirements,
                            children: (0, z.jsx)(Ip, {
                                className: Ihe.itemInner
                            })
                        })
                    }), e.highlight && (0, z.jsx)(FQ, {
                        className: Ihe.highlight
                    }), e.locked && (0, z.jsx)(C$, {
                        className: Ihe.lock
                    }), (0, z.jsx)(Pf, {
                        action: p ? "Select" : f ? "Back" : void 0,
                        className: Ihe.hint
                    })]
                })
            })
        };
        X.add("game-ui/game/components/toolbar/top/toolbar-button-strip/toolbar-button-strip.tsx", {
            get ToolbarButtonStrip() {
                return yhe
            },
            set ToolbarButtonStrip(e) {
                yhe = e
            }
        });
        let She = {
            icon: "icon_rqi icon_KJZ icon_soN icon_Iwk",
            underground: "underground_heZ",
            lock: "lock_okm lock_EMU",
            hint: "hint_Y7P hint_Wu1"
        };
        X.add("game-ui/game/components/toolbar/top/undergound-mode-toggle/underground-mode-toggle.module.scss", {
            get classes() {
                return She
            },
            set classes(e) {
                Object.assign(She, e)
            }
        });
        const Che = She;
        AT({
            underground: "Media/Game/Misc/Underground.svg",
            undergroundMask: "Media/Game/Misc/UndergroundToggleMask.svg"
        });
        var Nhe = () => {
            const [e, t] = (0, Y.useState)(!1), n = sl(HO), s = sl(KO), i = (0, Y.useCallback)((() => lP(!s)), [s]), a = MC("Underground Mode"), o = Dm(), r = sl(Ul);
            return og(kx.value?.toolbarUnderground, s), (0, z.jsx)(wx, {
                uiTag: kx.value?.toolbarUnderground,
                children: (0, z.jsx)($2, {
                    title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_UNDERGROUND, {}),
                    description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_UNDERGROUND, {}),
                    shortcut: (0, z.jsx)(Lf, {
                        action: "Change Elevation",
                        active: !a.locked && n && r,
                        shortName: pf.FallbackToControl
                    }),
                    locked: a.locked,
                    requirements: a.requirements,
                    children: (0, z.jsx)(Ah, {
                        onFocusChange: t,
                        children: (0, z.jsxs)(Gp, {
                            disableHint: !0,
                            selected: s,
                            disabled: a.locked || !n,
                            selectSound: s ? rp.increaseElevation : rp.decreaseElevation,
                            theme: zme,
                            className: zme.toggleStates,
                            focusKey: o ? yg : void 0,
                            onSelect: i,
                            shortcut: s ? "Increase Elevation" : "Decrease Elevation",
                            children: [(0, z.jsx)("div", {
                                className: Zu()(Che.icon, s && Che.underground)
                            }), a.locked && (0, z.jsx)(C$, {
                                className: Che.lock
                            }), (0, z.jsx)(Pf, {
                                action: "Select",
                                active: e && !a.locked && !s,
                                className: Che.hint
                            }), (0, z.jsx)(Pf, {
                                action: "Back",
                                active: s,
                                className: Che.hint
                            })]
                        })
                    })
                })
            })
        };
        X.add("game-ui/game/components/toolbar/top/undergound-mode-toggle/underground-mode-toggle.tsx", {
            get UndergroundModeToggle() {
                return Nhe
            },
            set UndergroundModeToggle(e) {
                Nhe = e
            }
        });
        let whe = {
            toolbar: "toolbar_QYu",
            hidden: "hidden__OM",
            "only-status-visible": "only-status-visible_lx7",
            onlyStatusVisible: "only-status-visible_lx7",
            "social-menu-anchor": "social-menu-anchor_oJe",
            socialMenuAnchor: "social-menu-anchor_oJe",
            "social-menu": "social-menu_nHI",
            socialMenu: "social-menu_nHI",
            "left-side-menu": "left-side-menu_DLV",
            leftSideMenu: "left-side-menu_DLV",
            top: "top_ZSs",
            bottom: "bottom_vae",
            paused: "paused_ICO",
            container: "container_yy5",
            "top-inner": "top-inner_v2o container_yy5",
            topInner: "top-inner_v2o container_yy5",
            "bottom-inner": "bottom-inner_ZYV container_yy5",
            bottomInner: "bottom-inner_ZYV container_yy5",
            "extra-padding": "extra-padding_z3b",
            extraPadding: "extra-padding_z3b",
            spacer: "spacer_oEi",
            start: "start_hR7",
            end: "end_G0e",
            divider: "divider_GaZ",
            "large-divider": "large-divider_XGP",
            largeDivider: "large-divider_XGP",
            "extra-large-divider": "extra-large-divider_Bc3",
            extraLargeDivider: "extra-large-divider_Bc3",
            "bulldoze-bar": "bulldoze-bar_D37",
            bulldozeBar: "bulldoze-bar_D37",
            active: "active_hed"
        };
        X.add("game-ui/game/components/toolbar/toolbar.module.scss", {
            get classes() {
                return whe
            },
            set classes(e) {
                Object.assign(whe, e)
            }
        });
        const Ohe = whe,
            Phe = new Eg("toolbar_top"),
            Lhe = new Eg("toolbar_bottom"),
            Ahe = new Eg("button_strip"),
            Mhe = (0, z.jsx)("div", {
                className: Ohe.divider
            }),
            Rhe = (0, z.jsx)("div", {
                className: Ohe.spacer
            });
        var khe = (0, Y.memo)((function ({
            focusKey: e,
            className: t,
            hidden: n,
            onlyStatusVisible: s
        }) {
            sl(kx);
            const i = E1(kb.PhotoMode);
            return (0, z.jsx)(yp, {
                children: (0, z.jsx)(tp, {
                    focusKey: e,
                    initialFocused: Phe,
                    direction: Rg.Vertical,
                    onRefocus: Zg,
                    children: (0, z.jsxs)("div", {
                        className: Zu()(Ohe.toolbar, t, {
                            [Ohe.hidden]: n || i.visible,
                            [Ohe.onlyStatusVisible]: s
                        }),
                        children: [(0, z.jsxs)(Tp, {
                            disabled: s,
                            children: [(0, z.jsxs)("div", {
                                className: Ohe.socialMenuAnchor,
                                children: [(0, z.jsx)(Nde, {
                                    className: Ohe.leftSideMenu
                                }), (0, z.jsx)(pme, {
                                    className: Ohe.socialMenu
                                })]
                            }), (0, z.jsx)(Dhe, {}), (0, z.jsx)(Fhe, {})]
                        }), (0, z.jsx)(Uhe, {})]
                    })
                })
            })
        }));
        const Dhe = () => {
                const e = sl(PO).id === cP;
                return lg(kx.value?.toolbarBulldozerBar, e), (0, z.jsx)("div", {
                    className: Zu()(Ohe.bulldozeBar, e && Ohe.active)
                })
            },
            Fhe = () => (0, z.jsx)("div", {
                className: Ohe.top,
                children: (0, z.jsx)("div", {
                    className: Ohe.topInner,
                    children: (0, z.jsxs)(tp, {
                        allowLooping: !0,
                        focusKey: Phe,
                        initialFocused: Ahe,
                        direction: Rg.Horizontal,
                        children: [(0, z.jsxs)("div", {
                            className: Ohe.start,
                            children: [(0, z.jsx)(bhe, {}), Mhe, (0, z.jsx)(hhe, {}), Mhe, (0, z.jsx)(Xme, {})]
                        }), (0, z.jsx)(yhe, {
                            focusKey: Ahe
                        }), (0, z.jsxs)("div", {
                            className: Ohe.end,
                            children: [Rhe, (0, z.jsx)(xhe, {}), Mhe, (0, z.jsx)(vhe, {}), Mhe, (0, z.jsx)(_he, {}), Mhe, (0, z.jsx)(Nhe, {}), Rhe, (0, z.jsx)(The, {})]
                        })]
                    })
                })
            }),
            Uhe = () => {
                const e = sl(vO),
                    t = Dm();
                return (0, z.jsx)("div", {
                    className: Zu()(Ohe.bottom, e && Ohe.paused),
                    children: (0, z.jsx)("div", {
                        className: Zu()(Ohe.bottomInner, t && Ohe.extraPadding),
                        children: (0, z.jsxs)(tp, {
                            allowLooping: !0,
                            direction: Rg.Horizontal,
                            focusKey: Lhe,
                            children: [(0, z.jsx)(YY, {}), (0, z.jsx)(XZ, {}), (0, z.jsx)(bme, {}), (0, z.jsx)(Gme, {}), (0, z.jsx)(kme, {}), (0, z.jsx)(jme, {})]
                        })
                    })
                })
            };
        X.add("game-ui/game/components/toolbar/toolbar.tsx", {
            get Toolbar() {
                return khe
            },
            set Toolbar(e) {
                khe = e
            }
        });
        var Bhe = ({
            children: e
        }) => {
            const t = sl(Wh),
                n = sl(zh),
                s = sl(Dh),
                i = vx(),
                a = sl(Fh);
            (0, Y.useEffect)((() => {
                null !== n && Hh(!1)
            }), [n]);
            const o = (0, Y.useMemo)((() => {
                const e = null != s && null != a && null === t,
                    o = null != s && null == n,
                    r = null != t && null != n && hx(t, n),
                    l = null != t && null != n && gx(t, n),
                    c = null != t && (t.completed || t.advisorActivation || !t.mandatory);
                let u = !1;
                if (t && n) {
                    const e = t.phases.findIndex((e => Ur(e.entity, n.entity))),
                        [s, i] = xx(t, e);
                    u = s === i - 1
                }
                return {
                    "Continue Tutorial": r && !u ? Jh : null,
                    "Finish Tutorial": r && u ? Jh : null,
                    "Previous Tutorial Phase": l ? fx : null,
                    "Focus Tutorial List": o ? Zh : null,
                    "Start Next Tutorial": e ? function () {
                        nL(), Qh(a, Lx, !1)
                    } : null,
                    Advisor: i ? hg : null,
                    "Close Tutorial": c ? eg : null
                }
            }), [t, s, n, i, a]);
            return (0, z.jsx)(Ag, {
                actions: o,
                children: e
            })
        };
        X.add("game-ui/game/components/tutorials/tutorial-action-consumer.tsx", {
            get TutorialActionConsumer() {
                return Bhe
            },
            set TutorialActionConsumer(e) {
                Bhe = e
            }
        });
        var Ghe = ({
            onTutorialActionNeeded: e,
            onSetControlledFocusKey: t
        }) => {
            const n = sl(kh),
                s = sl(Wh),
                i = sl(Yh) && null === s,
                a = sl($h),
                o = sl(mg),
                r = sl(Vh),
                l = sl(Rh),
                c = r && l;
            return (0, Y.useEffect)((() => Zh(c)), [c]), (0, Y.useEffect)((() => {
                n ? t(Xhe.tutorialIntro) : i ? t(Xhe.tutorialListIntro) : a ? t(Xhe.tutorialListOutro) : c ? t(Xhe.tutorialList) : t()
            }), [t, n, c, i, a]), (0, z.jsx)(Bge, {
                tutorialIntroVisible: n,
                tutorialListIntroVisible: i,
                tutorialListOutroVisible: a,
                localization: Pc.Tutorials,
                advisorPanelVisible: o,
                onCompleteListIntro: ng,
                onTutorialActionNeeded: e,
                onSetControlledFocusKey: t
            })
        };
        X.add("game-ui/game/components/tutorials/tutorial-wrapper.tsx", {
            get TutorialWrapper() {
                return Ghe
            },
            set TutorialWrapper(e) {
                Ghe = e
            }
        });
        let Vhe = {
            enter: "enter_iKV enter_kO6",
            "enter-active": "enter-active_qll enter-active_lrI",
            enterActive: "enter-active_qll enter-active_lrI",
            exit: "exit_pg6 exit_Von",
            "exit-active": "exit-active_feg exit-active_jtN",
            exitActive: "exit-active_feg exit-active_jtN"
        };
        X.add("game-ui/game/transitions/asset-detail-panel.module.scss", {
            get classes() {
                return Vhe
            },
            set classes(e) {
                Object.assign(Vhe, e)
            }
        });
        const Hhe = Vhe;
        let Khe = {
            rowCount: "2",
            columnCount: "10",
            "upgrades-grid": "upgrades-grid_RYy",
            upgradesGrid: "upgrades-grid_RYy",
            content: "content_TtB",
            row: "row_KSZ",
            item: "item_jVa item-hover_WK8 item-active_Spn",
            thumbnail: "thumbnail_aLl",
            "not-enough-money": "not-enough-money_YuH",
            notEnoughMoney: "not-enough-money_YuH",
            highlight: "highlight_hy5",
            lock: "lock_W9x",
            dlc: "dlc_LZ3",
            theme: "theme_YuE",
            "already-built": "already-built_J1f",
            alreadyBuilt: "already-built_J1f",
            "not-enough-money-badge": "not-enough-money-badge_pBb",
            notEnoughMoneyBadge: "not-enough-money-badge_pBb",
            "page-indicators": "page-indicators_Oap",
            pageIndicators: "page-indicators_Oap",
            "page-indicator": "page-indicator_y1n",
            pageIndicator: "page-indicator_y1n"
        };
        X.add("game-ui/game/components/upgrades-menu/upgrade-grid/upgrade-grid.module.scss", {
            get classes() {
                return Khe
            },
            set classes(e) {
                Object.assign(Khe, e)
            }
        });
        const Whe = Khe;
        var zhe = ({
            className: e,
            upgrades: t,
            selectedUpgrade: n,
            onSelectUpgrade: s
        }) => {
            const i = vp(s),
                a = Math.ceil(t.length / 9),
                o = b9(t, 9, n),
                r = u9(t, 9, o);
            og(kx.value?.upgradeGrid);
            const l = (0, Y.useMemo)((() => (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsx)("div", {
                    className: Whe.content,
                    children: (0, z.jsx)(Qg, {
                        allowFocusExit: !1,
                        focused: Dr(n),
                        onChange: i,
                        children: (0, z.jsx)("div", {
                            className: Whe.row,
                            children: r.map((e => (0, z.jsx)(Yhe, {
                                upgrade: e,
                                selected: Ur(e.entity, n),
                                onSelect: s
                            }, Dr(e.entity))))
                        })
                    })
                }), (0, z.jsx)("div", {
                    className: Whe.pageIndicators,
                    children: a > 1 && [...Array(a).keys()].map((e => (0, z.jsx)("div", {
                        onClick: () => s(t[9 * e].entity),
                        className: Zu()(Whe.pageIndicator, e === o && "selected")
                    }, e)))
                })]
            })), [i, s, a, r, o, n, t]);
            return (0, z.jsx)("div", {
                className: Zu()(Whe.upgradesGrid, e),
                children: wp(l)
            })
        };
        const Yhe = ({
            upgrade: e,
            selected: t,
            onSelect: n
        }) => {
            const [s, i] = (0, Y.useState)(!1), a = (0, Y.useContext)(O8), o = sl(oL), r = (0, Y.useCallback)((() => n(e.entity)), [e.entity, n]), l = (0, Y.useCallback)((() => a && a.showDetails(e.entity)), [e.entity, a]), c = (0, Y.useCallback)((() => a && a.hideDetails(e.entity)), [e.entity, a]), u = e.locked || e.uniquePlaced, d = d9(e), m = !u && d > 0 && o < d, h = Dm() && s;
            return (0, Y.useEffect)((() => {
                null != a && (h ? a.showDetails(e.entity) : a.hideDetails(e.entity))
            }), [e.entity, a, h]), (0, z.jsx)(Ah, {
                onFocusChange: i,
                children: (0, z.jsx)(Tg, {
                    tooltip: !a && (0, z.jsx)(Pc.Assets.NAME, {
                        hash: e.name
                    }),
                    children: (0, z.jsxs)(Gp, {
                        disableHint: !0,
                        focusKey: Dr(e.entity),
                        selected: t,
                        className: Zu()(Whe.item, m && Whe.notEnoughMoney),
                        onClick: r,
                        disabled: e.locked || e.uniquePlaced,
                        onMouseOver: l,
                        onMouseLeave: c,
                        children: [(0, z.jsx)("img", {
                            src: e.icon,
                            onError: Qp,
                            className: Whe.thumbnail
                        }), e.uniquePlaced && (0, z.jsx)("img", {
                            src: "Media/Game/Icons/AlreadyBuilt.svg",
                            className: Whe.alreadyBuilt
                        }), m && (0, z.jsx)("img", {
                            src: "Media/Game/Icons/NoMoney.svg",
                            className: Whe.notEnoughMoneyBadge
                        }), e.highlight && (0, z.jsx)(FQ, {
                            className: Whe.highlight
                        }), e.locked && (0, z.jsx)(C$, {
                            className: Whe.lock
                        }), e.dlc && (0, z.jsx)(g9, {
                            icon: e.dlc,
                            className: Whe.dlc
                        }), e.theme && (0, z.jsx)(g9, {
                            icon: e.theme,
                            className: Whe.theme
                        })]
                    })
                })
            })
        };
        X.add("game-ui/game/components/upgrades-menu/upgrade-grid/upgrade-grid.tsx", {
            get UpgradeGrid() {
                return zhe
            },
            set UpgradeGrid(e) {
                zhe = e
            }
        });
        let $he = {
            "asset-panel": "asset-panel_BKG",
            assetPanel: "asset-panel_BKG",
            "gamepad-active": "gamepad-active_dUD",
            gamepadActive: "gamepad-active_dUD",
            "detail-container": "detail-container_J4D",
            detailContainer: "detail-container_J4D",
            "detail-panel": "detail-panel_qkF",
            detailPanel: "detail-panel_qkF",
            "title-bar": "title-bar_L4S title-bar_I7O child-opacity-transition_nkS",
            titleBar: "title-bar_L4S title-bar_I7O child-opacity-transition_nkS",
            title: "title_vx4 title_qub",
            hints: "hints_IMR",
            back: "back_UcS",
            hint: "hint_WuS"
        };
        X.add("game-ui/game/components/upgrades-menu/upgrades-menu.module.scss", {
            get classes() {
                return $he
            },
            set classes(e) {
                Object.assign($he, e)
            }
        });
        const qhe = $he;
        var Xhe, Qhe = ({
            focusKey: e,
            showOpenHint: t,
            showBackHint: n,
            className: s
        }) => {
            dp(cp);
            const i = Dm(),
                a = sl(rw),
                o = (0, Y.useRef)(a),
                r = sl(ML),
                l = ll(LL, a),
                c = (0, Y.useCallback)((e => {
                    kL(a, e)
                }), [a]);
            (0, Y.useEffect)((() => {
                a !== o.current && (i && DL(), o.current = a)
            }), [i, a]);
            const [u, d] = (0, Y.useState)(Lx), m = !Ur(u, Lx), h = (0, Y.useMemo)((() => ({
                showDetails: e => d(e),
                hideDetails: e => d((t => Ur(t, e) ? Lx : t))
            })), []);
            (0, Y.useEffect)((() => {
                if (i && m) {
                    const e = jm.subscribe((e => {
                        e && d(Lx)
                    }));
                    return () => e.dispose()
                }
            }), [i, m]);
            const g = sl(wm),
                p = g.find((e => "Upgrades Menu" === e.name)),
                f = g.find((e => "Back" === e.name));
            return (0, z.jsx)(Ah, {
                children: (0, z.jsx)(Dg, {
                    onAction: DL,
                    children: (0, z.jsx)(mh, {
                        styles: w8,
                        children: (0, z.jsxs)(Ip, {
                            focusKey: e,
                            className: s,
                            children: [(0, z.jsx)("div", {
                                className: qhe.hints,
                                children: (0, z.jsx)(Pf, {
                                    action: "Upgrades Menu",
                                    active: t && !!p?.items.length,
                                    className: qhe.hint
                                })
                            }), (0, z.jsx)("div", {
                                className: Zu()(qhe.hints, qhe.back),
                                children: (0, z.jsx)(Pf, {
                                    action: "Back",
                                    active: n && !!f?.items.length,
                                    className: qhe.hint
                                })
                            }), (0, z.jsx)("div", {
                                className: qhe.detailContainer,
                                children: (0, z.jsx)(ud, {
                                    children: m && (0, z.jsx)(mh, {
                                        styles: Hhe,
                                        children: (0, z.jsx)(o9, {
                                            entity: u,
                                            className: qhe.detailPanel,
                                            upgrade: !0
                                        })
                                    }, "details")
                                })
                            }), (0, z.jsx)(O8.Provider, {
                                value: h,
                                children: (0, z.jsx)(YT, {
                                    className: Zu()(qhe.assetPanel, i && qhe.gamepadActive),
                                    header: (0, z.jsx)("div", {
                                        className: qhe.titleBar,
                                        children: (0, z.jsx)("div", {
                                            className: qhe.title,
                                            children: (0, z.jsx)(Pc.UpgradesMenu.TITLE, {})
                                        })
                                    }),
                                    children: (0, z.jsx)(zhe, {
                                        upgrades: l,
                                        selectedUpgrade: r,
                                        onSelectUpgrade: c
                                    })
                                })
                            })]
                        })
                    })
                })
            })
        };

        function Zhe(e, t, n) {
            const s = ll(LL, t);
            return e && s && s.length > 0 && !n
        }

        function Jhe(e) {
            const t = ll(LL, e),
                n = sl(ML),
                s = (0, Y.useCallback)((s => {
                    if (s) {
                        if (t.length > 0) {
                            const s = t.find((e => Ur(e.entity, n))) ?? t[0];
                            kL(e, s.entity)
                        }
                    } else DL()
                }), [e, n, t]);
            return [t.length > 0 && null != t.find((e => Ur(e.entity, n))), s]
        }
        X.add("game-ui/game/components/upgrades-menu/upgrades-menu.tsx", {
                get UpgradesMenu() {
                    return Qhe
                },
                set UpgradesMenu(e) {
                    Qhe = e
                },
                get useUpgradesMenuVisible() {
                    return Zhe
                },
                set useUpgradesMenuVisible(e) {
                    Zhe = e
                },
                get useUpgradingActive() {
                    return Jhe
                },
                set useUpgradingActive(e) {
                    Jhe = e
                }
            }),
            function (e) {
                e[e.none = 0] = "none", e[e.toolbar = 1] = "toolbar", e[e.toolOptions = 2] = "toolOptions", e[e.assetMenu = 3] = "assetMenu", e[e.upgradesMenu = 4] = "upgradesMenu", e[e.mapTilePurchase = 5] = "mapTilePurchase", e[e.selectedInfo = 6] = "selectedInfo", e[e.infoViews = 7] = "infoViews", e[e.advisorPanel = 8] = "advisorPanel", e[e.tutorialIntro = 9] = "tutorialIntro", e[e.tutorialListIntro = 10] = "tutorialListIntro", e[e.tutorialListOutro = 11] = "tutorialListOutro", e[e.tutorialList = 12] = "tutorialList", e[e.tutorialCardCenter = 13] = "tutorialCardCenter", e[e.tutorialReminder = 14] = "tutorialReminder", e[e.signatureUnlocks = 15] = "signatureUnlocks", e[e.milestoneUnlocks = 16] = "milestoneUnlocks", e[e.activeTool = 17] = "activeTool"
            }(Xhe || (Xhe = {}));
        const ege = [Xhe.tutorialIntro, Xhe.tutorialListIntro, Xhe.tutorialListOutro, Xhe.signatureUnlocks, Xhe.milestoneUnlocks];
        var tge = ({
            focusKey: e
        }) => {
            const [t, n] = (0, Y.useState)(!1), [s, i] = (0, Y.useState)(!1), a = sl(vO), o = !Ur(sl(YP), Lx), r = RZ(), [l, c] = (0, Y.useState)(!1), [u, d] = (0, Y.useState)(!1), [m, h] = (0, Y.useState)();
            (0, Y.useEffect)((() => {
                r || c(!1)
            }), [r]);
            const g = sl(Fb),
                p = Gu(g, kb.InfoviewMenu),
                f = sl(OS),
                x = sl(PS),
                v = sl(fw),
                _ = sl(dN),
                b = !Ur(_, Lx),
                T = sl(xN),
                E = !b && T.length > 0,
                I = sl(PO),
                y = Dm(),
                j = sl(Ub),
                S = sl(mg),
                C = sl(nue),
                N = jde(),
                w = sl(rw),
                O = Zhe(N, w, C),
                [P, L] = Jhe(w);
            (0, Y.useEffect)((() => {
                P && !O && L(!1)
            }), [L, O, P]);
            const A = (0, Y.useRef)(w);
            N && (A.current = w);
            const M = MC("Infoviews"),
                R = null !== sl(iv),
                k = R && !j && !N && !p,
                D = R && !p && !k,
                [F, U] = (0, Y.useState)(!1);
            (0, Y.useEffect)((() => {
                R || U(!1)
            }), [R]), (0, Y.useEffect)((() => {
                f || x || (i(!1), GS()), x && !f && i(!0)
            }), [f, x]);
            const B = sl(Ob),
                G = O && (I.id === uP || P),
                V = o8(),
                H = C8(),
                K = (0, Y.useMemo)((() => ({
                    "Info View": M.locked ? null : () => {
                        Gu(Fb.value, kb.InfoviewMenu) ? av() : R ? F ? (Vb(kb.InfoviewMenu), U(!0)) : U((e => !e)) : Vb(kb.InfoviewMenu)
                    },
                    "Tool Options": !l && r ? () => {
                        c((e => !e))
                    } : null,
                    "Upgrades Menu": !G || P || r ? null : () => {
                        L(!P)
                    },
                    "Move Vertical": f ? e => {
                        i(-1 === e)
                    } : void 0,
                    "Move Horizontal": G ? e => {
                        L(e > 0)
                    } : null,
                    Quicksave: V,
                    Quickload: H
                })), [f, l, r, G, P, V, H, R, F, M.locked, L]),
                W = (0, Y.useCallback)((() => c(!1)), []),
                $ = (0, Y.useCallback)((() => Iw()), []);
            let q;
            q = b ? Xhe.milestoneUnlocks : E ? Xhe.signatureUnlocks : m || (null != g ? g.__Type : S && !u ? Xhe.advisorPanel : r && l ? Xhe.toolOptions : N && C ? Xhe.none : N && !P ? Xhe.selectedInfo : O && P ? Xhe.upgradesMenu : R && F ? Xhe.infoViews : f && !s ? Xhe.mapTilePurchase : o ? Xhe.assetMenu : I.id !== uP ? Xhe.activeTool : Xhe.toolbar), (f || x) && s && q === Xhe.activeTool && (q = Xhe.toolbar), Qx(!s);
            c3(!(ege.includes(q) && B !== Nb.freeCamera));
            const X = P || o,
                Q = l,
                Z = S || p,
                J = q === Xhe.activeTool ? 66 : 0;
            return (0, z.jsxs)(Ah, {
                onFocusChange: n,
                children: [(0, z.jsx)(yQ, {
                    blockingPanelActive: j
                }), (0, z.jsx)(Uie, {
                    children: (0, z.jsx)(Bhe, {
                        children: (0, z.jsx)(Ag, {
                            actions: K,
                            children: (0, z.jsx)(Wm, {
                                children: (0, z.jsxs)("div", {
                                    className: Zu()(ioe.gameMainScreen, r && ioe.toolOptionsVisible),
                                    children: [(0, z.jsxs)(ap, {
                                        focusKey: e,
                                        focused: q,
                                        activation: qu.Always,
                                        debugName: "GameMainScreen",
                                        children: [(0, z.jsxs)("div", {
                                            className: ioe.mainContainer,
                                            children: [y ? t && (0, z.jsxs)("div", {
                                                className: ioe.topLayout,
                                                children: [(0, z.jsx)(doe, {
                                                    miniPanelVisible: D
                                                }), (0, z.jsx)(wx, {
                                                    uiTag: kx.value?.actionHints,
                                                    children: (0, z.jsx)(Gx, {
                                                        className: ioe.actionHints,
                                                        delay: J,
                                                        delayIgnoreCounter: 3,
                                                        excludedActions: Bx
                                                    })
                                                }), (0, z.jsx)(nge, {
                                                    visible: S,
                                                    orientation: "Vertical"
                                                })]
                                            }) : (0, z.jsxs)("div", {
                                                className: ioe.infoMenuLayout,
                                                children: [(0, z.jsx)(doe, {
                                                    miniPanelVisible: D
                                                }), (0, z.jsx)(tQ, {
                                                    name: "GameTopLeft"
                                                })]
                                            }), (0, z.jsxs)("div", {
                                                className: ioe.infoLayout,
                                                children: [(0, z.jsx)(ly, {
                                                    in: N,
                                                    children: (0, z.jsx)(Ide, {
                                                        focusKey: I.id === uP ? Xhe.selectedInfo : Ig,
                                                        className: ioe.selectedInfoPanel,
                                                        onClose: $,
                                                        showHint: X !== Z && !Q
                                                    })
                                                }), (0, z.jsx)(ly, {
                                                    in: k,
                                                    children: (0, z.jsx)(U5, {
                                                        focusKey: Xhe.infoViews,
                                                        className: ioe.infoviewMenu,
                                                        onClose: rv
                                                    })
                                                })]
                                            }), (0, z.jsxs)("div", {
                                                className: ioe.toolLayout,
                                                children: [(0, z.jsx)("div", {
                                                    className: ioe.toolSideColumn,
                                                    children: (0, z.jsx)(ly, {
                                                        in: r,
                                                        children: (0, z.jsx)(AZ, {
                                                            focusKey: Xhe.toolOptions,
                                                            onClose: W,
                                                            showOpenHint: r && !Q,
                                                            showBackHint: l && Z
                                                        })
                                                    })
                                                }), (0, z.jsxs)("div", {
                                                    className: ioe.toolMainColumn,
                                                    children: [(0, z.jsx)(ly, {
                                                        in: o,
                                                        children: (0, z.jsx)(I9, {
                                                            focusKey: Xhe.assetMenu,
                                                            onClose: nL,
                                                            className: ioe.toolPanel,
                                                            showBackHint: Q !== Z
                                                        })
                                                    }), (0, z.jsx)(ly, {
                                                        in: O,
                                                        children: (0, z.jsx)(Qhe, {
                                                            focusKey: Xhe.upgradesMenu,
                                                            className: ioe.toolPanel,
                                                            showOpenHint: !P && O,
                                                            showBackHint: P && Q !== Z
                                                        })
                                                    }), (0, z.jsx)(ly, {
                                                        in: f,
                                                        children: (0, z.jsx)(Eoe, {
                                                            focusKey: Xhe.mapTilePurchase,
                                                            className: ioe.mapTilePurchasePanel,
                                                            onClose: GS
                                                        })
                                                    })]
                                                }), (0, z.jsx)("div", {
                                                    className: ioe.toolSideColumn
                                                })]
                                            }), (0, z.jsx)(ud, {
                                                children: g && (0, z.jsx)(ip, {
                                                    focusKey: g.__Type,
                                                    children: (0, z.jsx)(ooe, {
                                                        panel: g
                                                    })
                                                }, g.__Type)
                                            }), (0, z.jsx)(YZ, {
                                                className: ioe.bpIndicator
                                            }), !y && (0, z.jsx)(nge, {
                                                visible: S
                                            })]
                                        }), (0, z.jsx)(khe, {
                                            onlyStatusVisible: f,
                                            focusKey: Xhe.toolbar
                                        }), (0, z.jsx)(ly, {
                                            in: N && null !== v,
                                            children: N && v && (0, z.jsx)(ere, {
                                                onClose: $,
                                                developerInfoSection: v
                                            })
                                        }), (0, z.jsx)("div", {
                                            className: Zu()(ioe.pauseOverlay, a && ioe.paused)
                                        }), (0, z.jsx)(Ghe, {
                                            focusKey: e,
                                            onTutorialActionNeeded: d,
                                            onSetControlledFocusKey: h
                                        }), E && (0, z.jsx)(oT, {
                                            children: (0, z.jsx)(Boe, {
                                                focusKey: Xhe.signatureUnlocks,
                                                entities: T,
                                                onClose: vN
                                            })
                                        }), b && (0, z.jsx)(oT, {
                                            children: (0, z.jsx)(Doe, {
                                                focusKey: Xhe.milestoneUnlocks,
                                                milestone: _,
                                                onClose: mN
                                            })
                                        }), (0, z.jsx)(tQ, {
                                            name: "Game"
                                        })]
                                    }), (0, z.jsx)(T3, {})]
                                })
                            })
                        })
                    })
                })]
            })
        };
        const nge = (0, Y.memo)((function ({
            visible: e,
            orientation: t = "Horizontal"
        }) {
            const n = vx(),
                s = sl(Ul);
            return (0, z.jsxs)("div", {
                className: Zu()(ioe.pauseMenuLayout, "Horizontal" === t && ioe.horizontal, "Vertical" === t && ioe.vertical),
                children: [(0, z.jsx)(tQ, {
                    name: "GameTopRight"
                }), n && (0, z.jsxs)("div", {
                    className: ioe.pauseMenuToggle,
                    children: [(0, z.jsx)(Pf, {
                        action: "Advisor",
                        className: ioe.hint
                    }), (0, z.jsx)(kY, {
                        title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_ADVISOR, {}),
                        description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_ADVISOR, {}),
                        shortcut: (0, z.jsx)(Lf, {
                            action: "Advisor",
                            active: s
                        }),
                        children: (0, z.jsx)(u3, {
                            src: "Media/Glyphs/Advisor.svg",
                            selected: e,
                            className: ioe.pauseMenuToggle,
                            onSelect: hg
                        })
                    })]
                }), (0, z.jsxs)("div", {
                    className: ioe.pauseMenuToggle,
                    children: [(0, z.jsx)(Pf, {
                        action: "Pause Menu",
                        className: ioe.hint
                    }), (0, z.jsx)(wx, {
                        uiTag: kx.value?.pauseMenuButton,
                        children: (0, z.jsx)(kY, {
                            title: (0, z.jsx)(Pc.Main.TOOLTIP_TITLE_PAUSE_MENU, {}),
                            description: (0, z.jsx)(Pc.Main.TOOLTIP_DESCRIPTION_PAUSE_MENU, {}),
                            shortcut: (0, z.jsx)(Lf, {
                                action: "Pause Menu",
                                active: s
                            }),
                            children: (0, z.jsx)(u3, {
                                src: "Media/Glyphs/Gear.svg",
                                onSelect: Mb
                            })
                        })
                    })]
                })]
            })
        }), ((e, t) => e.visible === t.visible));
        X.add("game-ui/game/components/game-main-screen.tsx", {
            get Key() {
                return Xhe
            },
            set Key(e) {
                Xhe = e
            },
            get GameMainScreen() {
                return tge
            },
            set GameMainScreen(e) {
                tge = e
            }
        });
        let sge = {
            header: "header_Quv header_Bpo child-opacity-transition_nkS",
            content: "content_OGC content_AD7 child-opacity-transition_nkS",
            footer: "footer_H3w footer_pD5 child-opacity-transition_nkS"
        };
        X.add("game-ui/common/panel/themes/light.module.scss", {
            get classes() {
                return sge
            },
            set classes(e) {
                Object.assign(sge, e)
            }
        });
        const ige = sge;
        let age = {
            wrapper: "wrapper_GJY",
            wide: "wide_RVn",
            intro: "intro_dph",
            "image-layout": "image-layout_DU8",
            imageLayout: "image-layout_DU8",
            image: "image_KoE",
            chirper: "chirper_KjN",
            logo: "logo_igH",
            content: "content_vpm",
            title: "title_QRS",
            subtitle: "subtitle_gN8",
            description: "description_VKr",
            "checkbox-container": "checkbox-container_ety",
            checkboxContainer: "checkbox-container_ety",
            "checkbox-label": "checkbox-label_YsL",
            checkboxLabel: "checkbox-label_YsL",
            checkbox: "checkbox_OCf",
            divider: "divider_agt",
            "button-container": "button-container_vXF",
            buttonContainer: "button-container_vXF",
            button: "button_b9w",
            "dialog-button": "dialog-button_iCQ",
            dialogButton: "dialog-button_iCQ",
            hint: "hint_f_u",
            header: "header_Abn"
        };
        X.add("game-ui/game/components/tutorials/tutorial-intro-panel/tutorial-intro-panel.module.scss", {
            get classes() {
                return age
            },
            set classes(e) {
                Object.assign(age, e)
            }
        });
        const oge = age,
            rge = new Eg("BEGIN");
        var lge;
        ! function (e) {
            e[e.Welcome = 0] = "Welcome", e[e.Preface = 1] = "Preface", e[e.TutorialConfirmation = 2] = "TutorialConfirmation"
        }(lge || (lge = {}));
        var cge = ({
            focusKey: e
        }) => {
            const [t, n] = (0, Y.useState)(lge.Welcome), s = (0, Y.useCallback)((e => n(e ? lge.Preface : lge.TutorialConfirmation)), []), i = (0, Y.useCallback)((e => {
                e ? n(lge.Welcome) : tg(!1)
            }), []), a = (0, Y.useCallback)((() => tg(!0)), []);
            return (0, z.jsx)(YT, {
                focusKey: e,
                theme: ige,
                className: Zu()(oge.tutorialIntroPanel, {
                    [oge.intro]: t === lge.Welcome
                }),
                contentClassName: oge.content,
                children: (0, z.jsxs)(tp, {
                    initialFocused: rge,
                    children: [t === lge.Welcome && (0, z.jsx)(uge, {
                        onContinue: s
                    }), t === lge.Preface && (0, z.jsx)(dge, {
                        onContinue: a
                    }), t === lge.TutorialConfirmation && (0, z.jsx)(mge, {
                        onContinue: i
                    })]
                })
            })
        };
        const uge = ({
                onContinue: e
            }) => {
                const [t, n] = (0, Y.useState)(!0), s = (0, Y.useCallback)((() => {
                    e(t)
                }), [t, e]), [i, a] = (0, Y.useState)(!1);
                return (0, z.jsxs)("div", {
                    className: Zu()(oge.wrapper, oge.wide),
                    children: [(0, z.jsxs)("div", {
                        className: oge.imageLayout,
                        children: [(0, z.jsx)("img", {
                            src: "Media/Game/Milestones/Cityscape01.svg",
                            className: oge.image
                        }), (0, z.jsx)("img", {
                            src: "Media/Tutorials/GameLogo.svg",
                            className: oge.logo
                        })]
                    }), (0, z.jsx)("div", {
                        className: oge.title,
                        children: (0, z.jsx)(Pc.Tutorials.INTRO_TITLE, {})
                    }), (0, z.jsx)("div", {
                        className: oge.subtitle,
                        children: (0, z.jsx)(Pc.Tutorials.INTRO_SUBTITLE, {})
                    }), (0, z.jsx)("div", {
                        className: oge.description,
                        children: (0, z.jsx)(zf, {
                            children: (0, z.jsx)(Pc.Tutorials.INTRO, {})
                        })
                    }), (0, z.jsx)(Gp, {
                        focusKey: rge,
                        theme: AE,
                        className: oge.button,
                        onSelect: s,
                        children: (0, z.jsx)(Pc.Tutorials.BEGIN_WITH_TUTORIALS, {})
                    }), (0, z.jsxs)(Ep, {
                        onFocusChange: a,
                        className: oge.checkboxContainer,
                        children: [(0, z.jsx)(Pf, {
                            action: "Select",
                            active: i,
                            className: oge.hint
                        }), (0, z.jsx)(ox, {
                            checked: t,
                            onChange: n,
                            className: oge.checkbox
                        }), (0, z.jsx)("div", {
                            className: oge.checkboxLabel,
                            children: (0, z.jsx)(Pc.Tutorials.ENABLE_TUTORIALS_CONFIRM, {})
                        })]
                    })]
                })
            },
            dge = ({
                onContinue: e
            }) => {
                const t = (0, Y.useCallback)((() => e(!0)), [e]);
                return (0, z.jsxs)("div", {
                    className: oge.wrapper,
                    children: [(0, z.jsxs)("div", {
                        className: oge.imageLayout,
                        children: [(0, z.jsx)("img", {
                            src: "Media/Tutorials/GameLogo.svg",
                            className: oge.logo
                        }), (0, z.jsx)("img", {
                            src: "Media/Game/Icons/Chirper.svg",
                            className: oge.chirper
                        })]
                    }), (0, z.jsx)("div", {
                        className: oge.divider
                    }), (0, z.jsx)("div", {
                        className: oge.description,
                        children: (0, z.jsx)(zf, {
                            children: (0, z.jsx)(Pc.Tutorials.BEFORE_STARTING, {})
                        })
                    }), (0, z.jsx)(Gp, {
                        theme: AE,
                        className: oge.button,
                        onSelect: t,
                        children: (0, z.jsx)(Pc.Tutorials.BEFORE_STARTING_CONFIRM, {})
                    })]
                })
            },
            mge = ({
                onContinue: e
            }) => {
                const t = (0, Y.useCallback)((() => e(!1)), [e]),
                    n = (0, Y.useCallback)((() => e(!0)), [e]),
                    s = Dm();
                return (0, z.jsxs)("div", {
                    className: oge.wrapper,
                    children: [(0, z.jsxs)("div", {
                        className: oge.imageLayout,
                        children: [(0, z.jsx)("img", {
                            src: "Media/Tutorials/GameLogo.svg",
                            className: oge.logo
                        }), (0, z.jsx)("img", {
                            src: "Media/Game/Icons/Chirper.svg",
                            className: oge.chirper
                        })]
                    }), (0, z.jsx)("div", {
                        className: oge.divider
                    }), (0, z.jsx)("div", {
                        className: oge.description,
                        children: (0, z.jsx)(zf, {
                            renderer: ex,
                            children: s ? (0, z.jsx)(Pc.Tutorials.DISABLE_CONFIRMATION_TEXT_GAMEPAD, {}) : (0, z.jsx)(Pc.Tutorials.DISABLE_CONFIRMATION_TEXT, {})
                        })
                    }), (0, z.jsxs)("div", {
                        className: oge.buttonContainer,
                        children: [(0, z.jsx)(Gp, {
                            theme: AE,
                            className: Zu()(oge.button, oge.dialogButton),
                            onSelect: t,
                            children: (0, z.jsx)(Pc.Common.YES, {})
                        }), (0, z.jsx)(Gp, {
                            theme: AE,
                            className: Zu()(oge.button, oge.dialogButton, AE.negative),
                            onSelect: n,
                            children: (0, z.jsx)(Pc.Common.NO, {})
                        })]
                    })]
                })
            };
        X.add("game-ui/game/components/tutorials/tutorial-intro-panel/tutorial-intro-panel.tsx", {
            get TutorialIntroPanel() {
                return cge
            },
            set TutorialIntroPanel(e) {
                cge = e
            }
        });
        const hge = new Eg("BEGIN");
        var gge = ({
            focusKey: e,
            localization: t,
            onCompleteListIntro: n
        }) => (0, z.jsx)(YT, {
            focusKey: e,
            theme: ige,
            className: oge.tutorialIntroPanel,
            contentClassName: oge.content,
            children: (0, z.jsx)(tp, {
                initialFocused: hge,
                children: (0, z.jsxs)("div", {
                    className: oge.wrapper,
                    children: [(0, z.jsxs)("div", {
                        className: oge.imageLayout,
                        children: [(0, z.jsx)("img", {
                            src: "Media/Tutorials/GameLogo.svg",
                            className: oge.logo
                        }), (0, z.jsx)("img", {
                            src: "Media/Game/Icons/Chirper.svg",
                            className: oge.chirper
                        })]
                    }), (0, z.jsx)("div", {
                        className: oge.divider
                    }), (0, z.jsx)("div", {
                        className: oge.header,
                        children: (0, z.jsx)(t.TITLE, {
                            hash: "Welcome"
                        })
                    }), (0, z.jsx)("div", {
                        className: oge.description,
                        children: (0, z.jsx)(zf, {
                            children: (0, z.jsx)(t.TODO_INTRO, {})
                        })
                    }), t === Pc.EditorTutorials ? (0, z.jsxs)("div", {
                        className: oge.buttonContainer,
                        children: [(0, z.jsx)(Gp, {
                            theme: AE,
                            className: Zu()(oge.button, oge.dialogButton),
                            onSelect: () => n(!0),
                            children: (0, z.jsx)(Pc.Common.YES, {})
                        }), (0, z.jsx)(Gp, {
                            theme: AE,
                            className: Zu()(oge.button, oge.dialogButton, AE.negative),
                            onSelect: () => n(!1),
                            children: (0, z.jsx)(Pc.Common.NO, {})
                        })]
                    }) : (0, z.jsx)(Gp, {
                        theme: AE,
                        className: oge.button,
                        onSelect: () => n(!0),
                        children: (0, z.jsx)(Pc.Tutorials.TODO_INTRO_CONFIRM, {})
                    })]
                })
            })
        });
        X.add("game-ui/game/components/tutorials/tutorial-intro-panel/tutorial-list-intro-panel.tsx", {
            get TutorialListIntroPanel() {
                return gge
            },
            set TutorialListIntroPanel(e) {
                gge = e
            }
        });
        const pge = new Eg("BEGIN");
        var fge = ({
            focusKey: e
        }) => {
            const t = Dm(),
                n = (0, Y.useCallback)((() => {
                    Pb(Nb.newGame), sg()
                }), []);
            return (0, z.jsx)(YT, {
                focusKey: e,
                theme: ige,
                className: oge.tutorialIntroPanel,
                contentClassName: oge.content,
                children: (0, z.jsx)(tp, {
                    initialFocused: pge,
                    children: (0, z.jsxs)("div", {
                        className: Zu()(oge.wrapper, oge.wide),
                        children: [(0, z.jsxs)("div", {
                            className: oge.imageLayout,
                            children: [(0, z.jsx)("img", {
                                src: "Media/Tutorials/GameLogo.svg",
                                className: oge.logo
                            }), (0, z.jsx)("img", {
                                src: "Media/Game/Icons/Chirper.svg",
                                className: oge.chirper
                            })]
                        }), (0, z.jsx)("div", {
                            className: oge.divider
                        }), (0, z.jsx)("div", {
                            className: oge.description,
                            children: (0, z.jsx)(zf, {
                                renderer: ex,
                                children: t ? (0, z.jsx)(Pc.Tutorials.TODO_OUTRO_GAMEPAD, {}) : (0, z.jsx)(Pc.Tutorials.TODO_OUTRO, {})
                            })
                        }), (0, z.jsxs)("div", {
                            className: oge.buttonContainer,
                            children: [(0, z.jsx)(Gp, {
                                theme: AE,
                                className: Zu()(oge.button, oge.dialogButton),
                                onSelect: sg,
                                children: (0, z.jsx)(Pc.Tutorials.TODO_OUTRO_CONTINUE, {})
                            }), (0, z.jsx)(Gp, {
                                theme: AE,
                                className: Zu()(oge.button, oge.dialogButton, AE.negative),
                                onSelect: n,
                                children: (0, z.jsx)(Pc.Tutorials.TODO_OUTRO_NEW_CITY, {})
                            })]
                        })]
                    })
                })
            })
        };
        X.add("game-ui/game/components/tutorials/tutorial-intro-panel/tutorial-list-outro-panel.tsx", {
            get TutorialListOutroPanel() {
                return fge
            },
            set TutorialListOutroPanel(e) {
                fge = e
            }
        });
        let xge = {
            enter: "enter_wwI",
            "enter-active": "enter-active_p_T",
            enterActive: "enter-active_p_T",
            exit: "exit_rZO",
            "exit-active": "exit-active_vTx",
            exitActive: "exit-active_vTx"
        };
        X.add("game-ui/game/components/tutorials/tutorial-panel-transition.module.scss", {
            get classes() {
                return xge
            },
            set classes(e) {
                Object.assign(xge, e)
            }
        });
        const vge = xge;
        let _ge = {
            "panel-content": "panel-content_p59",
            panelContent: "panel-content_p59",
            "tutorial-layout": "tutorial-layout_dTO tutorial-layout_iuN",
            tutorialLayout: "tutorial-layout_dTO tutorial-layout_iuN",
            image: "image_e92 image_NyN",
            columns: "columns_WiK columns_ITy",
            scrollable: "scrollable_pas scrollable_ErH"
        };
        X.add("game-ui/game/components/tutorials/tutorial-card/tutorial-card.module.scss", {
            get classes() {
                return _ge
            },
            set classes(e) {
                Object.assign(_ge, e)
            }
        });
        const bge = _ge;
        var Tge = ({
            tutorial: e,
            phase: t,
            className: n,
            expanded: s,
            localization: i,
            onToggle: a,
            onClose: o
        }) => {
            const r = Dm(),
                l = e?.completed || e?.advisorActivation || !e?.mandatory;
            return (0, z.jsx)(hJ, {
                isFocusRoot: !0,
                headerText: t && (0, z.jsx)(Pc.Tutorials.TITLE, {
                    hash: t.name
                }),
                theme: j9,
                expanded: s,
                transition: vge,
                transitionSounds: cp,
                className: Zu()(bge.tutorialCard, n),
                contentClassName: bge.panelContent,
                onToggleExpanded: a,
                onClose: l ? o : void 0,
                showCloseHint: l,
                togglable: !r,
                children: e && t && (0, z.jsx)(Tx, {
                    pagesVisible: !0,
                    tutorial: e,
                    phase: t,
                    theme: bge,
                    localization: i,
                    scrollable: !0
                })
            })
        };
        X.add("game-ui/game/components/tutorials/tutorial-card/tutorial-card.tsx", {
            get TutorialCard() {
                return Tge
            },
            set TutorialCard(e) {
                Tge = e
            }
        });
        let Ege = {
            "tutorial-layout": "tutorial-layout_QpW tutorial-layout_iuN",
            tutorialLayout: "tutorial-layout_QpW tutorial-layout_iuN",
            "tutorial-center-card": "tutorial-center-card_j6a",
            tutorialCenterCard: "tutorial-center-card_j6a",
            image: "image_khW image_NyN",
            triggers: "triggers_tif"
        };
        X.add("game-ui/game/components/tutorials/tutorial-center-card/tutorial-center-card.module.scss", {
            get classes() {
                return Ege
            },
            set classes(e) {
                Object.assign(Ege, e)
            }
        });
        const Ige = Ege;
        var yge = ({
            tutorial: e,
            phase: t,
            className: n,
            localization: s,
            onClose: i
        }) => {
            const a = e?.completed || e?.advisorActivation || !e?.mandatory;
            return (0, z.jsx)(YT, {
                focusKey: Xhe.tutorialCardCenter,
                header: e && (0, z.jsx)(QT, {
                    children: (0, z.jsx)(Pc.Tutorials.TITLE, {
                        hash: e.name
                    })
                }),
                theme: j9,
                transitionSounds: cp,
                className: Zu()(Ige.tutorialCenterCard, n),
                onClose: a ? i : void 0,
                children: e && t && (0, z.jsx)(Tx, {
                    theme: Ige,
                    tutorial: e,
                    phase: t,
                    pagesVisible: !0,
                    localization: s,
                    scrollable: !0
                })
            })
        };
        X.add("game-ui/game/components/tutorials/tutorial-center-card/tutorial-center-card.tsx", {
            get TutorialCenterCard() {
                return yge
            },
            set TutorialCenterCard(e) {
                yge = e
            }
        });
        let jge = {
            toggle: "toggle_Tm5"
        };
        X.add("game-ui/game/components/tutorials/tutorial-list-panel/tutorial-list-checkbox.module.scss", {
            get classes() {
                return jge
            },
            set classes(e) {
                Object.assign(jge, e)
            }
        });
        const Sge = jge;
        let Cge = {
            "tutorial-list-panel": "tutorial-list-panel_lGU",
            tutorialListPanel: "tutorial-list-panel_lGU",
            header: "header_GVY",
            "item-right": "item-right_ay5",
            itemRight: "item-right_ay5",
            "item-left": "item-left_Wz1",
            itemLeft: "item-left_Wz1",
            content: "content_oLZ tutorial-layout_iuN",
            hints: "hints_enS tutorial-layout_iuN",
            "item-hint": "item-hint_hBI",
            itemHint: "item-hint_hBI",
            "hints-content": "hints-content_Mmn",
            hintsContent: "hints-content_Mmn",
            item: "item_GYF",
            completed: "completed_tbu",
            selected: "selected_txY",
            checkbox: "checkbox_y4W",
            title: "title_SfK",
            label: "label_nNX",
            "play-button": "play-button_Zaj",
            playButton: "play-button_Zaj",
            blink: "blink_hSS",
            none: "none_tvP",
            "play-icon": "play-icon_Bax",
            playIcon: "play-icon_Bax"
        };
        X.add("game-ui/game/components/tutorials/tutorial-list-panel/tutorial-list-panel.module.scss", {
            get classes() {
                return Cge
            },
            set classes(e) {
                Object.assign(Cge, e)
            }
        });
        const Nge = Cge;
        var wge = ({
            list: e,
            className: t,
            expanded: n,
            onToggle: s,
            focusKey: i
        }) => {
            const a = sl(Wh),
                o = sl(Fh),
                r = (0, Y.useMemo)((() => e?.hints.filter((e => null != e && e.completed)).sort(((e, t) => (e?.priority ?? 0) - (t?.priority ?? 0)))), [e?.hints]),
                l = (0, Y.useMemo)((() => ({
                    Back: () => {
                        Hh(!1)
                    }
                })), []),
                c = sl(Vh),
                u = Dm();
            Qx(!c || !u), (0, Y.useEffect)((() => (Hh(!0), () => Hh(!1))), []);
            const d = e?.tutorials.reduce(((e, t) => {
                const n = t?.alternatives?.some((e => Ur(e, o))),
                    s = Ur(t.entity, a?.entity),
                    i = null == t || !Ur(t.entity, o) && !n && !(t.active || t.completed);
                return s || i ? e : t
            }), void 0);
            return (0, z.jsx)(Ag, {
                actions: l,
                children: (0, z.jsx)(hJ, {
                    isFocusRoot: !0,
                    expanded: n,
                    focusKey: i,
                    headerText: e && (0, z.jsx)(Pc.Tutorials.TITLE, {
                        hash: e.name
                    }),
                    theme: j9,
                    onToggleExpanded: s,
                    transition: vge,
                    transitionSounds: cp,
                    headerIcon: d && !n ? (0, z.jsx)("div", {
                        className: Zu()(Nge.playButton),
                        children: (0, z.jsx)(ef, {
                            src: "Media/Radio/Play.svg",
                            className: Nge.playIcon
                        })
                    }) : void 0,
                    showCloseHint: !0,
                    className: Zu()(Nge.tutorialListPanel, t),
                    togglable: !u,
                    children: (0, z.jsxs)(tp, {
                        onRefocus: () => d?.name || e?.tutorials[0].name || "",
                        children: [(0, z.jsxs)("div", {
                            className: Nge.content,
                            children: [(0, z.jsx)("div", {
                                className: Nge.header,
                                children: (0, z.jsx)(Pc.Tutorials.TASKS, {})
                            }), e?.tutorials.map((e => {
                                const t = e?.alternatives?.some((e => Ur(e, o))),
                                    n = null == e || !Ur(e.entity, o) && !t && !(e.active || e.completed);
                                return null != e && (0, z.jsx)(Oge, {
                                    tutorial: e,
                                    active: Ur(e.entity, a?.entity),
                                    disabled: n
                                }, Dr(e.entity))
                            }))]
                        }), r && r.length > 0 && (0, z.jsx)(Lge, {
                            activeTutorial: a,
                            hints: r
                        })]
                    })
                })
            })
        };
        const Oge = ({
                tutorial: e,
                disabled: t = !1,
                active: n = !1,
                hint: s = !1
            }) => {
                const i = (0, Y.useCallback)((() => {
                    nL(), Hh(!1), !n && Qh(e.entity, Lx, !1)
                }), [n, e.entity]);
                return (0, z.jsxs)(Gp, {
                    focusKey: t ? Ig : e.name,
                    disabled: t,
                    className: Zu()(Nge.item, {
                        [Nge.completed]: e.completed,
                        [Nge.selected]: n
                    }),
                    onSelect: i,
                    disableHint: !0,
                    children: [(0, z.jsxs)("div", {
                        className: Nge.itemLeft,
                        children: [(0, z.jsx)(Pge, {
                            active: n,
                            disabled: t,
                            completed: e.completed
                        }), (0, z.jsx)("div", {
                            className: Zu()(Nge.playButton, t && "disabled"),
                            children: (0, z.jsx)(ef, {
                                src: "Media/Radio/Play.svg",
                                className: Nge.playIcon
                            })
                        })]
                    }), (0, z.jsxs)("div", {
                        className: Nge.title,
                        children: [(0, z.jsx)("div", {
                            className: Nge.label,
                            children: (0, z.jsx)(Pc.Tutorials.TITLE, {
                                hash: e.name
                            })
                        }), (0, z.jsx)("div", {
                            className: Nge.itemRight,
                            children: !s && (0, z.jsx)(ox, {
                                focusKey: Ig,
                                checked: e.completed,
                                disabled: t,
                                theme: Sge,
                                className: Nge.checkbox
                            })
                        })]
                    })]
                })
            },
            Pge = ({
                active: e,
                disabled: t,
                completed: n
            }) => {
                const s = wh((0, Y.useContext)(Ju)),
                    i = !(s || t || n || e),
                    a = s && !t;
                return (0, z.jsx)(Pf, {
                    action: i ? "Start Next Tutorial" : "Select",
                    active: i || a,
                    className: Nge.itemHint
                })
            },
            Lge = ({
                activeTutorial: e,
                hints: t
            }) => (0, z.jsxs)("div", {
                className: Nge.hints,
                children: [(0, z.jsx)("div", {
                    className: Nge.header,
                    children: (0, z.jsx)(Pc.Tutorials.HINTS_TITLE, {})
                }), (0, z.jsx)(ff, {
                    className: Nge.hintsContent,
                    children: t.map((t => t && (0, z.jsx)(Oge, {
                        hint: !0,
                        tutorial: t,
                        active: Ur(e?.entity, t.entity)
                    }, Dr(t.entity))))
                })]
            });
        X.add("game-ui/game/components/tutorials/tutorial-list-panel/tutorial-list-panel.tsx", {
            get TutorialListPanel() {
                return wge
            },
            set TutorialListPanel(e) {
                wge = e
            }
        });
        var Age = ({
            onClose: e,
            className: t
        }) => (0, z.jsx)(YT, {
            focusKey: Xhe.tutorialReminder,
            onClose: e,
            header: (0, z.jsx)(QT, {
                children: (0, z.jsx)(Pc.Tutorials.LIST_REMINDER_TITLE, {})
            }),
            theme: j9,
            transitionSounds: cp,
            className: Zu()(Ige.tutorialCenterCard, "tutorial-reminder", t),
            showCloseHint: !0,
            children: (0, z.jsx)(Ex, {
                image: "Media/Tutorials/ReminderPanel.png",
                description: (0, z.jsx)(Pc.Tutorials.LIST_REMINDER_DESCRIPTION, {}),
                nextVisible: !0,
                onActivateNextPhase: e
            })
        });
        X.add("game-ui/game/components/tutorials/tutorial-list-reminder.tsx", {
            get TutorialListReminder() {
                return Age
            },
            set TutorialListReminder(e) {
                Age = e
            }
        });
        let Mge = {
            "tutorial-renderer": "tutorial-renderer_wve",
            tutorialRenderer: "tutorial-renderer_wve",
            "top-right-layout": "top-right-layout_sSC",
            topRightLayout: "top-right-layout_sSC",
            "bottom-left-layout": "bottom-left-layout_TpC",
            bottomLeftLayout: "bottom-left-layout_TpC",
            "top-right-panel": "top-right-panel_A2r",
            topRightPanel: "top-right-panel_A2r",
            "list-panel": "list-panel_MBq top-right-panel_A2r",
            listPanel: "list-panel_MBq top-right-panel_A2r",
            "advisor-panel": "advisor-panel_mrr top-right-panel_A2r",
            advisorPanel: "advisor-panel_mrr top-right-panel_A2r",
            "card-panel": "card-panel_UGb top-right-panel_A2r",
            cardPanel: "card-panel_UGb top-right-panel_A2r",
            "center-layout": "center-layout_Uqg",
            centerLayout: "center-layout_Uqg"
        };
        X.add("game-ui/game/components/tutorials/tutorial-renderer/tutorial-renderer.module.scss", {
            get classes() {
                return Mge
            },
            set classes(e) {
                Object.assign(Mge, e)
            }
        });
        const Rge = Mge;
        var kge = (0, Y.memo)((function ({
            className: e,
            onTutorialActionNeeded: t,
            localization: n,
            onSetControlledFocusKey: s,
            onTutorialReminder: i
        }) {
            const a = sl(Dh),
                o = sl(Wh),
                r = sl(zh),
                l = sl(kh),
                c = sl(Yh),
                u = sl($h),
                d = sl(Uh),
                m = sl(mg),
                h = sl(Bb),
                g = sl(Vh),
                p = [wb.Center, wb.Right].includes(h),
                f = r?.type === dg.Card,
                x = r?.type === dg.CenterCard,
                v = (0, Y.useMemo)((() => {
                    if (null !== a) {
                        if (null !== o) return !a.tutorials.find((e => Ur(e.entity, o.entity))) && !a.hints.find((e => Ur(e.entity, o.entity)));
                        if (!Ur(d, Lx)) return !a.tutorials.find((e => Ur(e.entity, d))) && !a.hints.find((e => Ur(e.entity, d)))
                    }
                    return !1
                }), [o, a, d]),
                [_, b] = (0, Y.useState)(!1),
                [T, E] = (0, Y.useState)(!1),
                [I, y] = (0, Y.useState)(!0),
                j = (0, Y.useCallback)((e => {
                    b(e), e && (E(!1), y(!1)), e && !Gu(Fb, kb.InfoviewMenu) && Kb()
                }), []),
                S = (0, Y.useCallback)((e => {
                    E(e), e && (b(!1), y(!1)), e && !Gu(Fb, kb.InfoviewMenu) && Kb()
                }), []),
                C = (0, Y.useCallback)((e => {
                    y(e), e && (b(!1), E(!1)), e && !Gu(Fb, kb.InfoviewMenu) && Kb()
                }), []),
                N = null !== a && !v && !c && !u,
                w = (0, Y.useMemo)((() => {
                    const e = !p && !I && !_ && (T || f),
                        t = !(p || _ || f && e || !a);
                    return {
                        finalCard: e,
                        finalList: t,
                        finalAdvisorPanel: !p && (!e || !f) && (!t || !N) && m
                    }
                }), [_, m, p, T, f, a, I, N]),
                [O, P] = Dge(o, a);
            return (0, Y.useEffect)((() => () => hg(!1)), []), (0, Y.useEffect)((() => {
                S(f), y(!f)
            }), [S, f]), (0, Y.useEffect)((() => {
                g && P()
            }), [P, g]), (0, Y.useEffect)((() => {
                if (i?.(O), O) return s?.(Xhe.tutorialReminder), () => s?.(void 0)
            }), [O, s, i]), (0, Y.useEffect)((() => {
                t?.(!!r)
            }), [r, t]), l ? null : (0, z.jsxs)("div", {
                className: Zu()(Rge.tutorialRenderer, e),
                children: [n === Pc.Tutorials && (0, z.jsxs)("div", {
                    className: Rge.topRightLayout,
                    children: [(0, z.jsx)(ly, {
                        in: m,
                        children: (0, z.jsx)(TJ, {
                            focusKey: w.finalCard || g ? Ig : Xhe.advisorPanel,
                            expanded: w.finalAdvisorPanel,
                            onToggle: j,
                            onClose: hg,
                            className: Rge.advisorPanel,
                            localization: n
                        })
                    }), (0, z.jsx)(ly, {
                        in: N,
                        children: (0, z.jsx)(wge, {
                            focusKey: Xhe.tutorialList,
                            list: a,
                            expanded: I && w.finalList,
                            onToggle: C,
                            className: Rge.listPanel
                        })
                    }), (0, z.jsx)(ly, {
                        in: f,
                        children: (0, z.jsx)(Tge, {
                            tutorial: o,
                            phase: r,
                            expanded: w.finalCard,
                            onToggle: S,
                            onClose: eg,
                            className: Rge.cardPanel,
                            localization: n
                        })
                    })]
                }), (0, z.jsxs)("div", {
                    className: Rge.centerLayout,
                    children: [(0, z.jsx)(ly, {
                        in: x,
                        children: (0, z.jsx)(yge, {
                            tutorial: o,
                            phase: r,
                            onClose: eg,
                            className: Rge.phasePanel,
                            localization: n
                        })
                    }), (0, z.jsx)(ly, {
                        in: O,
                        children: (0, z.jsx)(Age, {
                            onClose: P,
                            className: Rge.phasePanel
                        })
                    })]
                })]
            })
        }));
        const Dge = (e, t) => {
            const [n, s] = (0, Y.useState)(!1), i = sl(Yh), a = (0, Y.useRef)(), o = (0, Y.useCallback)((() => {
                s(!1), clearTimeout(a.current)
            }), []);
            return (0, Y.useEffect)((() => {
                if (!e && t && t.intro && !i) return a.current = setTimeout((() => s(!0)), 6e4), () => clearTimeout(a.current);
                s(!1)
            }), [e, t, i]), [n, o]
        };
        X.add("game-ui/game/components/tutorials/tutorial-renderer/tutorial-renderer.tsx", {
            get TutorialRenderer() {
                return kge
            },
            set TutorialRenderer(e) {
                kge = e
            }
        });
        let Fge = {
            "tutorials-renderer": "tutorials-renderer_BtC",
            tutorialsRenderer: "tutorials-renderer_BtC"
        };
        X.add("game-ui/game/components/tutorials/tutorial-container.module.scss", {
            get classes() {
                return Fge
            },
            set classes(e) {
                Object.assign(Fge, e)
            }
        });
        const Uge = Fge,
            Bge = ({
                tutorialIntroVisible: e,
                tutorialListIntroVisible: t,
                tutorialListOutroVisible: n,
                advisorPanelVisible: s,
                onCompleteListIntro: i,
                onSetControlledFocusKey: a,
                onTutorialActionNeeded: o,
                localization: r
            }) => {
                const [l, c] = (0, Y.useState)(!1);
                let u;
                return u = e ? Xhe.tutorialIntro : t ? Xhe.tutorialListIntro : n ? Xhe.tutorialListOutro : s ? Xhe.advisorPanel : l ? Xhe.tutorialReminder : Xhe.tutorialList, (0, z.jsx)(z.Fragment, {
                    children: (0, z.jsxs)(ap, {
                        focusKey: u || Ig,
                        focused: u,
                        activation: qu.Always,
                        debugName: "TutorialContainer",
                        children: [e && (0, z.jsx)(oT, {
                            children: (0, z.jsx)(cge, {
                                focusKey: Xhe.tutorialIntro
                            })
                        }), t && (0, z.jsxs)(oT, {
                            children: [(0, z.jsx)(gge, {
                                focusKey: Xhe.tutorialListIntro,
                                localization: r,
                                onCompleteListIntro: i
                            }), ";"]
                        }), n && (0, z.jsx)(oT, {
                            children: (0, z.jsx)(fge, {
                                focusKey: Xhe.tutorialListOutro
                            })
                        }), (0, z.jsx)(kge, {
                            className: Uge.tutorialsRenderer,
                            localization: r,
                            onSetControlledFocusKey: a,
                            onTutorialActionNeeded: o,
                            onTutorialReminder: c
                        })]
                    })
                })
            };
        X.add("game-ui/game/components/tutorials/tutorial-container.tsx", {});
        var Gge = () => {
            const e = sl(UZ),
                t = sl(HZ),
                n = sl(GZ) && null === t,
                s = sl(VZ);
            return (0, z.jsx)(Bge, {
                tutorialIntroVisible: e,
                tutorialListIntroVisible: n,
                tutorialListOutroVisible: s,
                localization: Pc.EditorTutorials,
                onCompleteListIntro: KZ
            })
        };
        X.add("game-ui/editor/components/editor-tutorial-container.tsx", {
            get EditorTutorialContainer() {
                return Gge
            },
            set EditorTutorialContainer(e) {
                Gge = e
            }
        });
        const Vge = "editorTool";
        var Hge = $r(Vge, "tools"),
            Kge = $r(Vge, "activeTool"),
            Wge = el(Vge, "selectTool");
        X.add("game-ui/editor/data-binding/editor-tool-bindings.ts", {
            get tools() {
                return tools
            },
            set tools(e) {
                tools = e
            },
            get activeTool() {
                return activeTool
            },
            set activeTool(e) {
                activeTool = e
            },
            get selectTool() {
                return Wge
            },
            set selectTool(e) {
                Wge = e
            }
        });
        let zge = {
            button: "button_iZC",
            icon: "icon_oET"
        };
        X.add("game-ui/editor/themes/editor-tool-button.module.scss", {
            get classes() {
                return zge
            },
            set classes(e) {
                Object.assign(zge, e)
            }
        });
        const Yge = zge;
        let $ge = {
            "editor-toolbar": "editor-toolbar_i1J",
            editorToolbar: "editor-toolbar_i1J",
            button: "button_i0V"
        };
        X.add("game-ui/editor/components/toolbar/toolbar.module.scss", {
            get classes() {
                return $ge
            },
            set classes(e) {
                Object.assign($ge, e)
            }
        });
        const qge = $ge;
        var Xge = ({
            className: e
        }) => {
            const t = sl(Hge),
                n = sl(Kge),
                s = (0, Y.useCallback)((e => Wge(Kge.value !== e ? e : null)), []);
            return (0, z.jsx)("div", {
                className: Zu()(qge.editorToolbar, e),
                children: (0, z.jsx)(tp, {
                    direction: Rg.Horizontal,
                    children: t.map((({
                        id: e,
                        icon: t,
                        uiTag: i,
                        disabled: a
                    }) => (0, z.jsx)(Qge, {
                        id: e,
                        icon: t,
                        uiTag: i,
                        tooltip: (0, z.jsx)(Pc.Editor.TOOL, {
                            hash: e
                        }),
                        selected: n === e,
                        disabled: a,
                        onSelect: s
                    }, e)))
                })
            })
        };
        const Qge = ({
            id: e,
            icon: t,
            tooltip: n,
            uiTag: s,
            selected: i,
            disabled: a,
            onSelect: o
        }) => {
            const r = (0, Y.useCallback)((() => o(e)), [e, o]);
            return (0, z.jsx)(wx, {
                uiTag: s,
                editor: !0,
                children: (0, z.jsx)(Tg, {
                    tooltip: n,
                    children: (0, z.jsx)(sf, {
                        src: t,
                        disabled: a,
                        theme: Yge,
                        selected: i,
                        className: qge.button,
                        onSelect: r
                    })
                })
            })
        };
        X.add("game-ui/editor/components/toolbar/toolbar.tsx", {
            get Toolbar() {
                return Xge
            },
            set Toolbar(e) {
                Xge = e
            }
        });
        let Zge = {
            "editor-main-screen": "editor-main-screen_m89",
            editorMainScreen: "editor-main-screen_m89",
            main: "main_k4u",
            "top-layout": "top-layout_cRm",
            topLayout: "top-layout_cRm",
            "tool-options": "tool-options_Cqd",
            toolOptions: "tool-options_Cqd",
            toolbar: "toolbar_Qbd",
            "editor-panel": "editor-panel_oDZ",
            editorPanel: "editor-panel_oDZ",
            "tutorials-renderer": "tutorials-renderer_Vfx",
            tutorialsRenderer: "tutorials-renderer_Vfx"
        };
        X.add("game-ui/editor/components/editor-main-screen.module.scss", {
            get classes() {
                return Zge
            },
            set classes(e) {
                Object.assign(Zge, e)
            }
        });
        const Jge = Zge;
        var epe = "Tool Options",
            tpe = "Editor Panel",
            npe = "Infoview",
            spe = ({
                focusKey: e,
                className: t,
                onPauseMenuToggle: n
            }) => {
                const s = sl(eD),
                    i = sl(pQ),
                    a = RZ(),
                    [o, r] = (0, Y.useState)(!1),
                    l = a$(),
                    c = sl(PO),
                    u = c.id === uP,
                    d = sl(iv),
                    [m, h] = (0, Y.useState)(!1),
                    g = sl(DZ),
                    [p, f] = (0, Y.useState)(null),
                    x = (0, Y.useCallback)((e => f(e)), []),
                    v = (0, Y.useCallback)((() => {
                        a && r((e => !e))
                    }), [a]),
                    _ = (0, Y.useCallback)((() => r(!1)), []),
                    b = (0, Y.useCallback)((() => {
                        const e = Object.keys(iQ).length / 2;
                        fQ((i + 1) % e)
                    }), [i]),
                    T = (0, Y.useMemo)((() => ({
                        ...l,
                        Back: !u || s || null !== d || o ? () => {
                            u ? s ? rD() : null !== d ? ov(Lx) : o && _() : (c.id === cP && lp(rp.bulldozeEnd), QO(uP))
                        } : null,
                        "Pause Menu": n,
                        Bulldozer: () => {
                            c.id === cP ? (lp(rp.bulldozeEnd), QO(uP)) : (lp(rp.bulldoze), QO(cP))
                        },
                        "Change Elevation": eP,
                        "Photo Mode Panel": b,
                        "Tool Options": a ? v : null,
                        "Info View": () => h((e => !e))
                    })), [d, c.id, _, u, s, n, b, l, v, o, a]);
                (0, Y.useEffect)((() => {
                    p || r(!1)
                }), [s, p, a]);
                const E = (0, Y.useMemo)((() => o ? epe : m ? npe : s ? tpe : void 0), [s, m, o]);
                return (0, z.jsx)(Ag, {
                    actions: T,
                    children: (0, z.jsxs)(xg, {
                        children: [(0, z.jsx)(yQ, {}), (0, z.jsx)(tp, {
                            focusKey: e,
                            activation: qu.Always,
                            forceFocus: E,
                            children: (0, z.jsxs)("div", {
                                className: Zu()(Jge.editorMainScreen, t),
                                children: [(0, z.jsxs)("div", {
                                    className: Jge.main,
                                    children: [(0, z.jsxs)("div", {
                                        className: Jge.topLayout,
                                        children: [(0, z.jsx)($k, {}), (0, z.jsx)(l3, {})]
                                    }), (0, z.jsx)(Xge, {
                                        className: Jge.toolbar
                                    }), (0, z.jsx)(_1, {
                                        resizeDirection: "left",
                                        className: Jge.editorPanel,
                                        displayFooter: !0,
                                        ref: x,
                                        focusKey: tpe,
                                        active: s
                                    }), p && a && (0, z.jsx)(zm, {
                                        container: p,
                                        children: (0, z.jsx)(tp, {
                                            focusKey: o ? epe : Ig,
                                            children: (0, z.jsx)(MZ, {
                                                onClose: _,
                                                focusKey: epe
                                            })
                                        })
                                    })]
                                }), (0, z.jsx)(cJ, {
                                    onPauseMenuToggle: n
                                }), (0, z.jsx)(tQ, {
                                    name: "Editor"
                                }), !g && (0, z.jsx)(Gge, {})]
                            })
                        })]
                    })
                })
            };
        X.add("game-ui/editor/components/editor-main-screen.tsx", {
            get TOOL_OPTIONS_KEY() {
                return epe
            },
            set TOOL_OPTIONS_KEY(e) {
                epe = e
            },
            get EDITOR_PANEL_KEY() {
                return tpe
            },
            set EDITOR_PANEL_KEY(e) {
                tpe = e
            },
            get INFOVIEW_KEY() {
                return npe
            },
            set INFOVIEW_KEY(e) {
                npe = e
            },
            get EditorMainScreen() {
                return spe
            },
            set EditorMainScreen(e) {
                spe = e
            }
        });
        var ipe = () => {
            const e = sl(LY);
            (0, Y.useEffect)((() => {
                AY(CY.main)
            }), []);
            const t = e !== CY.main,
                n = (0, Y.useCallback)((() => {
                    e !== CY.pauseMenu ? AY(CY.pauseMenu) : AY(CY.main)
                }), [e]),
                s = (0, Y.useCallback)((() => AY(CY.pauseMenu)), []),
                i = (0, Y.useCallback)((() => AY(CY.main)), []),
                a = (0, Y.useContext)(sE);
            (0, Y.useEffect)((() => {
                const e = _E.subscribe((e => {
                    a.showDialog((0, z.jsx)(II, {
                        ...e
                    }))
                }));
                return () => e.dispose()
            }), [a]);
            const o = (0, Y.useCallback)((() => {
                a.showDialog((0, z.jsx)(jI, {
                    message: (0, z.jsx)(Pc.Common.DIALOG_MESSAGE, {
                        hash: "ProgressLoss"
                    }),
                    onConfirm: Pk
                }))
            }), [a]);
            return (0, z.jsx)(Kz, {
                children: (0, z.jsxs)(ap, {
                    focused: e,
                    activation: qu.Always,
                    children: [(0, z.jsx)(spe, {
                        focusKey: CY.main,
                        onPauseMenuToggle: n
                    }), e === CY.freeCamera && (0, z.jsx)(o$, {
                        focusKey: CY.freeCamera,
                        onClose: i
                    }), (0, z.jsx)(ud, {
                        children: t && (0, z.jsx)(eQ, {
                            children: (0, z.jsxs)(ud, {
                                children: [e === CY.pauseMenu && (0, z.jsx)(v$, {
                                    focusKey: CY.pauseMenu,
                                    onSelectScreen: AY,
                                    onClose: i,
                                    onNewMap: o
                                }, CY.pauseMenu), e === CY.options && (0, z.jsx)(YX, {
                                    focusKey: CY.options,
                                    onClose: s
                                }, CY.options)]
                            })
                        }, "pause")
                    })]
                })
            })
        };
        X.add("game-ui/editor/components/editor-ui.tsx", {
            get EditorUI() {
                return ipe
            },
            set EditorUI(e) {
                ipe = e
            }
        });
        let ape = {
            "debug-prefab-tool-panel": "debug-prefab-tool-panel_xQO",
            debugPrefabToolPanel: "debug-prefab-tool-panel_xQO"
        };
        X.add("game-ui/debug/components/debug-prefab-tool/debug-prefab-tool.module.scss", {
            get classes() {
                return ape
            },
            set classes(e) {
                Object.assign(ape, e)
            }
        });
        const ope = ape,
            rpe = new Eg("CHILDREN");
        var lpe = ({
            children: e
        }) => {
            const t = sl(eA),
                n = sl(eD),
                s = (0, Y.useMemo)((() => ({
                    "Debug Prefab Tool": () => Wge(n ? null : "PrefabTool")
                })), [n]);
            return t ? (0, z.jsx)(Ag, {
                actions: s,
                children: (0, z.jsxs)(ap, {
                    focused: rpe,
                    children: [(0, z.jsx)(ip, {
                        focusKey: rpe,
                        children: e
                    }), n && (0, z.jsx)(_1, {
                        active: !0,
                        resizeDirection: "left",
                        className: ope.debugPrefabToolPanel
                    })]
                })
            }) : (0, z.jsx)(z.Fragment, {
                children: e
            })
        };
        X.add("game-ui/debug/components/debug-prefab-tool/debug-prefab-tool.tsx", {
            get DebugPrefabToolRenderer() {
                return lpe
            },
            set DebugPrefabToolRenderer(e) {
                lpe = e
            }
        });
        let cpe = {
            button: "button_Qvi",
            psn: "psn_Xvd",
            gdk: "gdk_VmN",
            icon: "icon_Z6Y",
            label: "label_yYE"
        };
        X.add("game-ui/menu/components/paradox-panel/account-link-button.module.scss", {
            get classes() {
                return cpe
            },
            set classes(e) {
                Object.assign(cpe, e)
            }
        });
        const upe = cpe;
        let dpe = {
            "paradox-panel": "paradox-panel_iFS",
            paradoxPanel: "paradox-panel_iFS",
            "incentive-container": "incentive-container_e7Y",
            incentiveContainer: "incentive-container_e7Y",
            "incentive-image": "incentive-image_Qzc",
            incentiveImage: "incentive-image_Qzc",
            "incentive-main": "incentive-main_IhA",
            incentiveMain: "incentive-main_IhA",
            "incentive-prompt": "incentive-prompt_k0u",
            incentivePrompt: "incentive-prompt_k0u",
            "incentive-footer": "incentive-footer_UuL",
            incentiveFooter: "incentive-footer_UuL",
            "incentive-legal": "incentive-legal_MJN",
            incentiveLegal: "incentive-legal_MJN",
            header: "header_MiJ",
            logo: "logo_opg",
            title: "title_S09",
            content: "content_VTM",
            error: "error_HSS",
            user: "user_LhQ",
            "user-info": "user-info_n0Q",
            userInfo: "user-info_n0Q",
            "user-name": "user-name_GiO",
            userName: "user-name_GiO",
            "avatar-mask": "avatar-mask_EqN",
            avatarMask: "avatar-mask_EqN",
            avatar: "avatar_rvW",
            "button-row": "button-row_LTO",
            buttonRow: "button-row_LTO",
            "button-container": "button-container_sgE",
            buttonContainer: "button-container_sgE",
            button: "button_o5e",
            "legal-row": "legal-row_qI2",
            legalRow: "legal-row_qI2",
            "legal-row-center": "legal-row-center_ZHk",
            legalRowCenter: "legal-row-center_ZHk",
            "legal-link": "legal-link_Cxy item-states_QjV",
            legalLink: "legal-link_Cxy item-states_QjV"
        };
        X.add("game-ui/menu/components/paradox-panel/paradox-panel.module.scss", {
            get classes() {
                return dpe
            },
            set classes(e) {
                Object.assign(dpe, e)
            }
        });
        const mpe = dpe;
        var hpe = ({
            className: e
        }) => {
            const t = sl(VE),
                n = sl($E),
                s = sl(qE);
            return (0, z.jsx)("div", {
                className: Zu()(mpe.paradoxPanel, e),
                children: n && s ? t ? (0, z.jsx)(ppe, {}) : (0, z.jsx)(gpe, {}) : (0, z.jsx)(fpe, {
                    label: s ? (0, z.jsx)(Pc.Paradox.NO_INTERNET_CONNECTION, {}) : (0, z.jsx)(Pc.Paradox.SDK_DISABLED, {})
                })
            })
        };
        const gpe = () => {
                const e = sl($E);
                return (0, z.jsxs)("div", {
                    className: mpe.incentiveContainer,
                    children: [(0, z.jsxs)("div", {
                        className: mpe.incentiveMain,
                        children: [(0, z.jsx)("div", {
                            className: mpe.incentiveImage
                        }), (0, z.jsx)("div", {
                            className: mpe.incentivePrompt,
                            children: (0, z.jsx)(Pc.Paradox.LOGIN_INCENTIVE, {})
                        })]
                    }), (0, z.jsxs)("div", {
                        className: mpe.incentiveFooter,
                        children: [(0, z.jsx)(Tg, {
                            tooltip: e ? null : (0, z.jsx)(Pc.Paradox.NO_INTERNET_CONNECTION, {}),
                            children: (0, z.jsx)(NI, {
                                tinted: e,
                                src: "Media/Menu/Paradox/ParadoxLogoNoText.svg",
                                theme: lq,
                                onSelect: sI,
                                disabled: !e,
                                children: (0, z.jsx)(Pc.Paradox.LOGIN_BUTTON, {})
                            })
                        }), (0, z.jsx)("div", {
                            className: mpe.incentiveLegal,
                            children: (0, z.jsx)(xpe, {
                                className: mpe.legalRowCenter
                            })
                        })]
                    })]
                })
            },
            ppe = () => {
                const e = sl(HE),
                    t = sl(KE),
                    n = sl(WE),
                    s = sl(YE),
                    i = function (e) {
                        return (0, Y.useMemo)((() => null !== e && e.length >= 3 && e.indexOf("@") >= 1 ? e[0] + "***@***" + e[e.length - 1] : e), [e])
                    }(sl(zE));
                return (0, z.jsxs)(z.Fragment, {
                    children: [(0, z.jsxs)("div", {
                        className: mpe.header,
                        children: [(0, z.jsx)(ef, {
                            src: "Media/Menu/Paradox/ParadoxLogoNoText.svg",
                            className: mpe.logo
                        }), (0, z.jsx)("div", {
                            className: mpe.title,
                            children: (0, z.jsx)(Pc.Paradox.PARADOX_ACCOUNT, {})
                        })]
                    }), (0, z.jsxs)("div", {
                        className: mpe.content,
                        children: [(0, z.jsxs)("div", {
                            className: mpe.user,
                            children: [(0, z.jsx)("div", {
                                className: mpe.avatarMask,
                                children: (0, z.jsx)("img", {
                                    className: mpe.avatar,
                                    src: s ?? "Media/Menu/Paradox/ParadoxLogoNoText.svg"
                                })
                            }), (0, z.jsxs)("div", {
                                className: mpe.userInfo,
                                children: [(0, z.jsx)("div", {
                                    className: mpe.userName,
                                    children: n
                                }), (0, z.jsx)("div", {
                                    className: mpe.userName,
                                    children: i
                                })]
                            })]
                        }), (0, z.jsxs)("div", {
                            className: mpe.buttonContainer,
                            children: [(0, z.jsxs)("div", {
                                className: mpe.buttonRow,
                                children: [e === oI.unlinked && (0, z.jsx)(NI, {
                                    src: `Media/Menu/Platforms/${t}.svg`,
                                    theme: upe,
                                    className: Zu()(mpe.button, {
                                        [upe.psn]: "PSN" === t,
                                        [upe.gdk]: "XboxLive" === t
                                    }),
                                    onSelect: XE,
                                    children: (0, z.jsx)(Pc.Paradox.ACCOUNT_LINK_PROMPT, {})
                                }), e === oI.linked && (0, z.jsx)(Gp, {
                                    theme: lq,
                                    className: mpe.button,
                                    onSelect: QE,
                                    children: (0, z.jsx)(Pc.Paradox.UNLINK_ACCOUNT_BUTTON, {})
                                }), (0, z.jsx)(Gp, {
                                    theme: lq,
                                    className: mpe.button,
                                    onSelect: ZE,
                                    children: (0, z.jsx)(Pc.Paradox.LOGOUT_BUTTON, {})
                                })]
                            }), (0, z.jsx)(xpe, {})]
                        })]
                    })]
                })
            },
            fpe = ({
                label: e
            }) => (0, z.jsxs)(z.Fragment, {
                children: [(0, z.jsxs)("div", {
                    className: mpe.header,
                    children: [(0, z.jsx)(ef, {
                        src: "Media/Menu/Paradox/ParadoxLogoNoText.svg",
                        className: mpe.logo
                    }), (0, z.jsx)("div", {
                        className: mpe.title,
                        children: (0, z.jsx)(Pc.Paradox.PARADOX_ACCOUNT, {})
                    })]
                }), (0, z.jsx)("div", {
                    className: mpe.content,
                    children: (0, z.jsx)("div", {
                        className: mpe.error,
                        children: e
                    })
                })]
            }),
            xpe = ({
                className: e
            }) => (0, z.jsxs)("div", {
                className: Zu()(mpe.legalRow, e),
                children: [(0, z.jsx)(Gp, {
                    className: mpe.legalLink,
                    onSelect: gI,
                    children: (0, z.jsx)(Pc.Paradox.TERMS_OF_USE, {})
                }), (0, z.jsx)(Gp, {
                    className: mpe.legalLink,
                    onSelect: pI,
                    children: (0, z.jsx)(Pc.Paradox.PRIVACY_POLICY, {})
                })]
            });
        X.add("game-ui/menu/components/paradox-panel/paradox-panel.tsx", {
            get ParadoxPanel() {
                return hpe
            },
            set ParadoxPanel(e) {
                hpe = e
            }
        });
        let vpe = {
            logo: "logo_C34 child-opacity-transition_nkS",
            content: "content_reP",
            column: "column_cmR",
            panel: "panel_X0A child-opacity-transition_nkS",
            last: "last_ljC",
            "paradox-panel": "paradox-panel_CK7 child-opacity-transition_nkS",
            paradoxPanel: "paradox-panel_CK7 child-opacity-transition_nkS",
            "notifications-panel": "notifications-panel_AGm child-opacity-transition_nkS",
            notificationsPanel: "notifications-panel_AGm child-opacity-transition_nkS"
        };
        X.add("game-ui/menu/components/game-pause-screen/game-pause-screen.module.scss", {
            get classes() {
                return vpe
            },
            set classes(e) {
                Object.assign(vpe, e)
            }
        });
        const _pe = vpe;
        var bpe = Y.forwardRef((function ({
            focusKey: e,
            className: t,
            onClose: n
        }, s) {
            const i = sl(bk),
                a = sl(Lb),
                o = (0, Y.useMemo)((() => ({
                    Back: n,
                    "Pause Menu": n
                })), [n]),
                r = c$();
            return (0, z.jsx)(p$, {
                ref: s,
                focusKey: e,
                className: t,
                children: (0, z.jsx)(Kz, {
                    children: (0, z.jsx)(Cp, {
                        children: (0, z.jsxs)(Ag, {
                            actions: o,
                            children: [(0, z.jsx)("img", {
                                src: "Media/Menu/GameLogo.svg",
                                className: _pe.logo
                            }), (0, z.jsx)(tp, {
                                children: (0, z.jsxs)("div", {
                                    className: _pe.content,
                                    children: [(0, z.jsx)("div", {
                                        className: _pe.column
                                    }), (0, z.jsx)("div", {
                                        className: _pe.column,
                                        children: (0, z.jsxs)(tp, {
                                            allowLooping: !0,
                                            direction: Rg.Vertical,
                                            children: [(0, z.jsx)(NI, {
                                                tinted: !0,
                                                src: "Media/Glyphs/ArrowRight.svg",
                                                theme: MI,
                                                onSelect: n,
                                                children: (0, z.jsx)(Pc.Menu.RESUME_GAME, {})
                                            }), (0, z.jsx)(NI, {
                                                tinted: !0,
                                                src: "Media/Glyphs/Save.svg",
                                                theme: MI,
                                                onSelect: () => Pb(Nb.saveGame),
                                                children: (0, z.jsx)(Pc.Menu.SAVE_GAME, {})
                                            }), (0, z.jsx)(NI, {
                                                tinted: !0,
                                                src: "Media/Glyphs/Plus.svg",
                                                theme: MI,
                                                onSelect: () => Pb(Nb.newGame),
                                                children: (0, z.jsx)(Pc.Menu.NEW_GAME, {})
                                            }), (0, z.jsx)(NI, {
                                                tinted: !0,
                                                disabled: 0 === i.length,
                                                src: "Media/Glyphs/Progress.svg",
                                                theme: MI,
                                                onSelect: () => Pb(Nb.loadGame),
                                                children: (0, z.jsx)(Pc.Menu.LOAD_GAME, {})
                                            }), (0, z.jsx)(NI, {
                                                tinted: !0,
                                                src: "Media/Glyphs/Gear.svg",
                                                theme: MI,
                                                onSelect: () => Pb(Nb.options),
                                                children: (0, z.jsx)(Pc.Menu.OPTIONS, {})
                                            }), (0, z.jsx)(NI, {
                                                tinted: !0,
                                                src: "Media/Glyphs/Close.svg",
                                                theme: MI,
                                                onSelect: r,
                                                disabled: !a,
                                                children: (0, z.jsx)(Pc.Menu.EXIT_GAME, {})
                                            })]
                                        })
                                    }), (0, z.jsxs)("div", {
                                        className: _pe.column,
                                        children: [(0, z.jsx)(hpe, {
                                            className: _pe.paradoxPanel
                                        }), (0, z.jsx)(Qne, {
                                            className: _pe.notificationsPanel
                                        })]
                                    }), (0, z.jsx)("div", {
                                        className: _pe.column
                                    })]
                                })
                            })]
                        })
                    })
                })
            })
        }));
        X.add("game-ui/menu/components/game-pause-screen/game-pause-screen.tsx", {
            get GamePauseScreen() {
                return bpe
            },
            set GamePauseScreen(e) {
                bpe = e
            }
        });
        var Tpe = (0, Y.memo)((function () {
            const e = sl(Ob),
                t = e !== Nb.main && e !== Nb.freeCamera;
            return (0, z.jsx)(lpe, {
                children: (0, z.jsx)(xg, {
                    children: (0, z.jsxs)(Epe, {
                        children: [(0, z.jsx)(ype, {}), (0, z.jsx)(jpe, {
                            menuVisible: t
                        }), (0, z.jsxs)(ap, {
                            focused: e,
                            activation: qu.Always,
                            debugName: "GameUI",
                            children: [(0, z.jsxs)(ud, {
                                children: [!t && (0, z.jsx)(tge, {
                                    focusKey: Nb.main
                                }), t && (0, z.jsx)(Ipe, {
                                    activeScreen: e
                                }, "game:pause")]
                            }), e === Nb.freeCamera && (0, z.jsx)(o$, {
                                focusKey: Nb.freeCamera,
                                onClose: Ab
                            }, Nb.freeCamera)]
                        })]
                    })
                })
            })
        }));
        const Epe = ({
                children: e
            }) => {
                const t = i$();
                return (0, z.jsx)(Ag, {
                    actions: t,
                    children: e
                })
            },
            Ipe = ({
                activeScreen: e
            }) => (0, z.jsx)(eQ, {
                children: (0, z.jsxs)(ud, {
                    children: [e === Nb.pauseMenu && (0, z.jsx)(bpe, {
                        focusKey: Nb.pauseMenu,
                        onClose: Ab
                    }, Nb.pauseMenu), e === Nb.saveGame && (0, z.jsx)(i8, {
                        focusKey: Nb.saveGame,
                        onClose: Mb
                    }, Nb.saveGame), e === Nb.newGame && (0, z.jsx)(Q4, {
                        focusKey: Nb.newGame,
                        onClose: Mb
                    }, Nb.newGame), e === Nb.loadGame && (0, z.jsx)(j8, {
                        focusKey: Nb.loadGame,
                        onClose: Mb,
                        requireConfirmation: !0
                    }, Nb.loadGame), e === Nb.options && (0, z.jsx)(YX, {
                        focusKey: Nb.options,
                        onClose: Mb
                    }, Nb.options)]
                })
            }),
            ype = (0, Y.memo)((function () {
                const e = (0, Y.useContext)(sE);
                return (0, Y.useEffect)((() => {
                    const t = _E.subscribe((t => {
                        e.showDialog((0, z.jsx)(II, {
                            ...t
                        }))
                    }));
                    return () => t.dispose()
                }), [e]), null
            })),
            jpe = (0, Y.memo)((function ({
                menuVisible: e
            }) {
                c3(!e);
                const t = sl(pk),
                    n = Wz();
                return (0, Y.useEffect)((() => {
                    !e && (n.length > 0 || t) && Mb()
                }), [e, t, n.length]), null
            }));
        X.add("game-ui/game/components/game-ui.tsx", {
            get GameUI() {
                return Tpe
            },
            set GameUI(e) {
                Tpe = e
            }
        });
        var Spe = ({
            children: e
        }) => {
            const t = sl(Lp),
                n = (0, Y.useMemo)((() => ({
                    "Switch User": () => {
                        lp(rp.selectItem), kp()
                    }
                })), []);
            return (0, z.jsx)(Ag, {
                actions: n,
                disabled: !t,
                children: e
            })
        };
        X.add("game-ui/menu/components/user-switch-prompt/user-switch-prompt-consumer.tsx", {
            get UserSwitchPromptConsumer() {
                return Spe
            },
            set UserSwitchPromptConsumer(e) {
                Spe = e
            }
        });
        let Cpe = {
            "credits-renderer": "credits-renderer_BaD",
            creditsRenderer: "credits-renderer_BaD",
            h1: "h1_z8F",
            h2: "h2_xgG",
            h3: "h3_LtF",
            line: "line_hIW",
            licenses: "licenses_RXV",
            "image-line": "image-line_lv2",
            imageLine: "image-line_lv2",
            image: "image_idP"
        };
        X.add("game-ui/menu/components/credits-screen/credits-renderer/credits-renderer.module.scss", {
            get classes() {
                return Cpe
            },
            set classes(e) {
                Object.assign(Cpe, e)
            }
        });
        const Npe = Cpe;
        var wpe = ({
            lines: e,
            images: t,
            onComplete: n
        }) => {
            const s = (0, Y.useRef)(null),
                i = (0, Y.useMemo)((() => [{
                    data: {
                        node: null,
                        style: Ff.None,
                        images: []
                    }
                }, ...e, {
                    data: {
                        node: null,
                        style: Ff.None,
                        images: []
                    }
                }]), [e]),
                a = function (e, t) {
                    const n = Hm(),
                        s = (0, Y.useCallback)(((s, i) => 0 === i ? Ape * n : i === e.length - 1 ? Mpe * n : s.data.images.length > 0 ? (Bpe(s.data.style, s.data.images, t) + Lpe) * n : Ope[s.data.style] * n), [n, e.length, t]);
                    return EK(s, e, 1)
                }(i, t),
                o = function (e, t) {
                    const n = Hm();
                    return (0, Y.useCallback)((s => {
                        if (0 === s) return (0, z.jsx)("div", {
                            style: kpe
                        }, "start");
                        if (s === e.length - 1) return (0, z.jsx)("div", {
                            style: Dpe
                        }, "end");
                        const i = e[s];
                        if (i.data.images.length > 0) {
                            const e = Bpe(i.data.style, i.data.images, t);
                            return (0, z.jsx)("div", {
                                className: Npe.imageLine,
                                style: {
                                    height: (e + Lpe) * n
                                },
                                children: i.data.images.map(((e, s) => {
                                    const a = Gpe(i.data.style, e, t);
                                    return (0, z.jsx)("img", {
                                        src: e,
                                        width: a.x * n,
                                        height: a.y * n,
                                        className: Npe.image
                                    }, s)
                                }))
                            }, s)
                        }
                        return (0, z.jsx)("div", {
                            className: Zu()(Rpe[i.data.style], Upe(i.source)),
                            style: {
                                height: Ope[i.data.style] * n
                            },
                            children: i.data.node
                        }, s)
                    }), [t, e, n])
                }(i, t),
                {
                    list: r,
                    onScroll: l
                } = _K(s, a, "vertical", void 0, o),
                c = Hm(),
                u = (0, Y.useMemo)((() => performance.now()), []);
            return (0, Y.useEffect)((() => {
                if (!s.current) return;
                let e = 0;
                const t = i => {
                    if (!s.current) return;
                    const a = (i - u) / 1e3,
                        o = Math.round(100 * a * c),
                        r = s.current.scrollHeight - s.current.offsetHeight;
                    s.current.scrollTop = o, l(), o < r ? e = window.requestAnimationFrame(t) : n()
                };
                return e = window.requestAnimationFrame(t), () => window.cancelAnimationFrame(e)
            }), [l, n, c, u]), (0, z.jsx)("div", {
                ref: s,
                className: Npe.creditsRenderer,
                onScroll: l,
                children: r
            })
        };
        const Ope = [32, 160, 80, 68, 32, 32, 32],
            Ppe = [240, 720, 480, 312, 240, 240, 240],
            Lpe = 80,
            Ape = 700,
            Mpe = 920;
        const Rpe = [Npe.line, Npe.h1, Npe.h2, Npe.h3, Npe.line, Npe.line, Npe.line],
            kpe = Fpe(Ape),
            Dpe = Fpe(Mpe);

        function Fpe(e) {
            return {
                height: `${e}rem`
            }
        }

        function Upe(e) {
            if ("Licenses" === e) return Npe.licenses
        }

        function Bpe(e, t, n) {
            let s = 0;
            for (const i of t) s = Math.max(s, Gpe(e, i, n).y);
            return s
        }

        function Gpe(e, t, n) {
            const s = n.get(t),
                i = Ppe[e];
            if (null != s && s.width > 0 && s.height > 0) {
                const e = Math.sqrt(i * i / (s.width * s.height));
                return {
                    x: e * s.width,
                    y: e * s.height
                }
            }
            return {
                x: Ppe[e],
                y: Ppe[e]
            }
        }
        X.add("game-ui/menu/components/credits-screen/credits-renderer/credits-renderer.tsx", {
            get CreditsRenderer() {
                return wpe
            },
            set CreditsRenderer(e) {
                wpe = e
            }
        });
        let Vpe = {
            content: "content_qY6 child-opacity-transition_nkS"
        };
        X.add("game-ui/menu/components/credits-screen/credits-screen.module.scss", {
            get classes() {
                return Vpe
            },
            set classes(e) {
                Object.assign(Vpe, e)
            }
        });
        const Hpe = Vpe;
        var Kpe = 150,
            Wpe = 250,
            zpe = Y.forwardRef((function ({
                focusKey: e,
                className: t,
                onClose: n
            }, s) {
                const i = function (e) {
                        const [t, n] = (0, Y.useState)(null), s = Array.isArray(e) ? e : [e];
                        return (0, Y.useEffect)((() => {
                            let e = 0;
                            const t = [],
                                i = s.map(((i, a) => $pe(i, (i => {
                                    t[a] = i, e++, e === s.length && n(t.flat())
                                }))));
                            return () => {
                                i.forEach((e => e()))
                            }
                        }), [s.join(" ")]), t
                    }(sl(Tk)),
                    a = function (e) {
                        const [t, n] = (0, Y.useState)(null);
                        return (0, Y.useEffect)((() => {
                            let t = 0;
                            const s = new Map,
                                i = () => {
                                    t++, t === s.size && n(s)
                                };
                            if (null != e)
                                for (const t of e)
                                    for (const e of t.data.images)
                                        if (!s.has(e)) {
                                            const t = new Image;
                                            t.src = e, t.addEventListener("load", i), t.addEventListener("error", i), s.set(e, t)
                                        } return 0 === s.size && n(s), () => {
                                for (const e of s.values()) e.removeEventListener("load", i), e.removeEventListener("error", i)
                            }
                        }), [e]), t
                    }(i);
                return (0, z.jsx)(q$, {
                    ref: s,
                    focusKey: e,
                    title: (0, z.jsx)(Pc.Menu.CREDITS, {}),
                    className: t,
                    onClose: n,
                    children: (0, z.jsx)("div", {
                        className: Hpe.content,
                        children: i?.length && null != a && (0, z.jsx)(wpe, {
                            lines: i,
                            images: a,
                            onComplete: n
                        })
                    })
                })
            }));
        const Ype = /(\w+[/])*(?<name>\w+)\.\w+$/,
            $pe = (e, t) => {
                const n = new XMLHttpRequest;
                return n.open("GET", e), n.onload = function () {
                    const s = new Py,
                        i = Xf(n.responseText, !0, !0, Wpe, Kpe),
                        a = Ype.exec(e),
                        o = a && a.groups ? a.groups.name : e,
                        r = i.map((e => ({
                            data: s.render(e),
                            source: o
                        })));
                    t(r)
                }, n.send(), () => {
                    n.abort()
                }
            };
        X.add("game-ui/menu/components/credits-screen/credits-screen.tsx", {
            get longCreditLineLength() {
                return Kpe
            },
            set longCreditLineLength(e) {
                Kpe = e
            },
            get maxCreditLineLength() {
                return Wpe
            },
            set maxCreditLineLength(e) {
                Wpe = e
            },
            get CreditsScreen() {
                return zpe
            },
            set CreditsScreen(e) {
                zpe = e
            }
        });
        let qpe = {
            logo: "logo_xOs child-opacity-transition_nkS",
            content: "content_LhM",
            column: "column_y44",
            panel: "panel_H2O child-opacity-transition_nkS",
            "paradox-panel": "paradox-panel_t14 child-opacity-transition_nkS",
            paradoxPanel: "paradox-panel_t14 child-opacity-transition_nkS",
            "notifications-panel": "notifications-panel_c5F child-opacity-transition_nkS",
            notificationsPanel: "notifications-panel_c5F child-opacity-transition_nkS",
            "button-label-left": "button-label-left_YKT",
            buttonLabelLeft: "button-label-left_YKT",
            "button-label-right": "button-label-right_ZdY",
            buttonLabelRight: "button-label-right_ZdY"
        };
        X.add("game-ui/menu/components/main-menu-screen/main-menu-screen.module.scss", {
            get classes() {
                return qpe
            },
            set classes(e) {
                Object.assign(qpe, e)
            }
        });
        const Xpe = qpe,
            Qpe = (0, z.jsx)(jI, {
                title: (0, z.jsx)(Pc.Common.CONFIRMATION, {}),
                message: (0, z.jsx)(Pc.Menu.APPLICATION_QUIT_MESSAGE, {}),
                onConfirm: () => yE()
            });
        var Zpe = e => (0, z.jsx)("div", {
                className: Xpe.column,
                children: e.children
            }),
            Jpe = Y.forwardRef((function ({
                focusKey: e,
                className: t
            }, n) {
                const s = (0, Y.useContext)(sE),
                    i = sl(tk),
                    a = sl(bk),
                    o = sl(ok),
                    r = sl(hk);
                return (0, z.jsx)(z.Fragment, {
                    children: (0, z.jsxs)(p$, {
                        ref: n,
                        focusKey: e,
                        className: t,
                        children: [(0, z.jsx)("img", {
                            src: "Media/Menu/GameLogo.svg",
                            className: Xpe.logo
                        }), (0, z.jsxs)(tp, {
                            children: [(0, z.jsxs)("div", {
                                className: Xpe.content,
                                children: [(0, z.jsx)("div", {
                                    className: Xpe.column
                                }), (0, z.jsx)(tp, {
                                    allowLooping: !0,
                                    direction: Rg.Vertical,
                                    children: (0, z.jsxs)(Zpe, {
                                        children: [(0, z.jsx)(NI, {
                                            tinted: !0,
                                            disabled: !i,
                                            src: "Media/Glyphs/ArrowRight.svg",
                                            theme: MI,
                                            onSelect: yk,
                                            children: (0, z.jsx)(Pc.Menu.CONTINUE_GAME, {})
                                        }), (0, z.jsx)(NI, {
                                            tinted: !0,
                                            src: "Media/Glyphs/Plus.svg",
                                            theme: MI,
                                            onSelect: () => Ik(XR.NewGame),
                                            children: (0, z.jsx)(Pc.Menu.NEW_GAME, {})
                                        }), (0, z.jsx)(NI, {
                                            tinted: !0,
                                            disabled: 0 === a.length,
                                            src: "Media/Glyphs/Progress.svg",
                                            theme: MI,
                                            onSelect: () => Ik(XR.LoadGame),
                                            children: (0, z.jsx)(Pc.Menu.LOAD_GAME, {})
                                        }), !o && (0, z.jsxs)(NI, {
                                            tinted: !0,
                                            src: "Media/Glyphs/Pen.svg",
                                            theme: MI,
                                            onSelect: Pk,
                                            children: [(0, z.jsx)("div", {
                                                className: Xpe.buttonLabelLeft,
                                                children: (0, z.jsx)(Pc.Menu.EDITOR, {})
                                            }), (0, z.jsx)("div", {
                                                className: Xpe.buttonLabelRight,
                                                children: (0, z.jsx)(T$, {})
                                            })]
                                        }), (0, z.jsx)(efe, {
                                            fallbackToLogin: !0
                                        }), (0, z.jsx)(NI, {
                                            tinted: !0,
                                            src: "Media/Glyphs/Gear.svg",
                                            theme: MI,
                                            onSelect: () => Ik(XR.Options),
                                            children: (0, z.jsx)(Pc.Menu.OPTIONS, {})
                                        }), (0, z.jsx)(NI, {
                                            tinted: !0,
                                            src: "Media/Glyphs/Credits.svg",
                                            theme: MI,
                                            onSelect: () => Ik(XR.Credits),
                                            children: (0, z.jsx)(Pc.Menu.CREDITS, {})
                                        }), r && (0, z.jsx)(NI, {
                                            tinted: !0,
                                            src: "Media/Glyphs/Close.svg",
                                            theme: MI,
                                            onSelect: () => s.showDialog(Qpe),
                                            children: (0, z.jsx)(Pc.Menu.EXIT_APPLICATION, {})
                                        })]
                                    })
                                }), (0, z.jsxs)("div", {
                                    className: Xpe.column,
                                    children: [(0, z.jsx)(hpe, {
                                        className: Xpe.paradoxPanel
                                    }), (0, z.jsx)(Qne, {
                                        className: Xpe.notificationsPanel
                                    })]
                                }), (0, z.jsx)("div", {
                                    className: Xpe.column
                                })]
                            }), (0, z.jsx)(tQ, {
                                name: "Menu"
                            })]
                        })]
                    })
                })
            }));
        var efe = ({
            fallbackToLogin: e
        }) => {
            const t = sl(VE),
                n = sl($E),
                s = sl(qE),
                i = sl(ak),
                a = function (e, t, n) {
                    return e ? t ? n ? null : (0, z.jsx)(Pc.Paradox.NO_INTERNET_CONNECTION, {}) : (0, z.jsx)(Pc.Paradox.UGC_DISABLED, {}) : (0, z.jsx)(Pc.Paradox.SDK_DISABLED, {})
                }(s, i, n),
                o = sl(rk);
            return (0, z.jsx)(z.Fragment, {
                children: !o && (0, z.jsx)(Tg, {
                    tooltip: a,
                    children: (0, z.jsxs)(NI, {
                        tinted: !0,
                        src: "Media/Glyphs/ParadoxMods.svg",
                        theme: MI,
                        disabled: !i || !s || !e && !t,
                        onSelect: Ak,
                        children: [(0, z.jsx)("div", {
                            className: Xpe.buttonLabelLeft,
                            children: (0, z.jsx)(Pc.Menu.PDX_MODS, {})
                        }), (0, z.jsx)("div", {
                            className: Xpe.buttonLabelRight,
                            children: (0, z.jsx)(T$, {})
                        })]
                    })
                })
            })
        };
        X.add("game-ui/menu/components/main-menu-screen/main-menu-screen.tsx", {
            get MainMenuNavigation() {
                return Zpe
            },
            set MainMenuNavigation(e) {
                Zpe = e
            },
            get MainMenuScreen() {
                return Jpe
            },
            set MainMenuScreen(e) {
                Jpe = e
            },
            get ModsUIButton() {
                return efe
            },
            set ModsUIButton(e) {
                efe = e
            }
        });
        let tfe = {
            "user-switch-prompt": "user-switch-prompt_UJI",
            userSwitchPrompt: "user-switch-prompt_UJI",
            avatar: "avatar_MH0",
            label: "label_deh",
            action: "action_J_6"
        };
        X.add("game-ui/menu/components/user-switch-prompt/user-switch-prompt.module.scss", {
            get classes() {
                return tfe
            },
            set classes(e) {
                Object.assign(tfe, e)
            }
        });
        const nfe = tfe,
            sfe = "Media/AvatarFallback.svg";
        var ife = ({
            className: e
        }) => {
            const t = Dm(),
                n = sl(Ap),
                s = sl(Mp),
                [i, a] = function (e) {
                    const [t, n] = (0, Y.useState)(null);
                    (0, Y.useEffect)((() => n((t => e !== t ? null : e))), [e]);
                    const s = null !== e && e !== t ? e : sfe,
                        i = (0, Y.useCallback)((() => e !== sfe && n(e)), [e]);
                    return [s, i]
                }(n);
            return (0, z.jsxs)(Gp, {
                focusKey: Ig,
                className: Zu()(nfe.userSwitchPrompt, e),
                onSelect: kp,
                children: [(0, z.jsx)("img", {
                    src: i || void 0,
                    onError: a,
                    className: nfe.avatar
                }), (0, z.jsx)("div", {
                    className: nfe.label,
                    children: Vr(s) ? (0, z.jsx)(Pc.Menu.SWITCH_USER, {}) : s
                }), t && (0, z.jsx)(Gx, {
                    specifiedActions: ["Switch User"],
                    labels: !1,
                    buttonAs: "div"
                })]
            })
        };
        X.add("game-ui/menu/components/user-switch-prompt/user-switch-prompt.tsx", {
            get UserSwitchPrompt() {
                return ife
            },
            set UserSwitchPrompt(e) {
                ife = e
            }
        });
        let afe = {
            "menu-ui": "menu-ui_I8X menu-theme_k91",
            menuUi: "menu-ui_I8X menu-theme_k91",
            "content-container": "content-container_DDJ",
            contentContainer: "content-container_DDJ",
            content: "content_fc3",
            "action-hints": "action-hints_qUT child-opacity-transition_nkS",
            actionHints: "action-hints_qUT child-opacity-transition_nkS",
            version: "version_VJt",
            corner: "corner_Uxw",
            "bp-indicator": "bp-indicator_E_n",
            bpIndicator: "bp-indicator_E_n",
            "user-switch-prompt": "user-switch-prompt_m_H",
            userSwitchPrompt: "user-switch-prompt_m_H"
        };
        X.add("game-ui/menu/components/menu-ui.module.scss", {
            get classes() {
                return afe
            },
            set classes(e) {
                Object.assign(afe, e)
            }
        });
        const ofe = afe,
            rfe = "whatsnew";
        var lfe, cfe = $r(rfe, "panel"),
            ufe = $r(rfe, "visible"),
            dfe = $r(rfe, "initialTab"),
            mfe = el(rfe, "close");
        ! function (e) {
            e[e.Left = 0] = "Left", e[e.Center = 1] = "Center", e[e.Right = 2] = "Right"
        }(lfe || (lfe = {})), X.add("game-ui/menu/data-binding/whats-new-bindings.ts", {
            get whatsNewPanel() {
                return whatsNewPanel
            },
            set whatsNewPanel(e) {
                whatsNewPanel = e
            },
            get whatsNewPanelVisible() {
                return whatsNewPanelVisible
            },
            set whatsNewPanelVisible(e) {
                whatsNewPanelVisible = e
            },
            get whatsNewPanelInitialTab() {
                return whatsNewPanelInitialTab
            },
            set whatsNewPanelInitialTab(e) {
                whatsNewPanelInitialTab = e
            },
            get closeWhatsNewPanel() {
                return mfe
            },
            set closeWhatsNewPanel(e) {
                mfe = e
            },
            get Justify() {
                return lfe
            },
            set Justify(e) {
                lfe = e
            }
        });
        let hfe = {
            "page-switcher": "page-switcher_dTl",
            pageSwitcher: "page-switcher_dTl",
            page: "page_pOh"
        };
        X.add("game-ui/common/animations/paging/page-switcher.module.scss", {
            get classes() {
                return hfe
            },
            set classes(e) {
                Object.assign(hfe, e)
            }
        });
        const gfe = hfe;
        var pfe = Y.createContext(null),
            ffe = Y.createContext(null);
        const xfe = Y.forwardRef((function ({
            activePage: e,
            transitionStyles: t,
            className: n,
            children: s
        }, i) {
            const a = (0, Y.useRef)({
                activePage: e,
                previousPage: e
            });
            a.current.activePage !== e && (a.current = {
                activePage: e,
                previousPage: a.current.activePage
            });
            const o = a.current.previousPage,
                r = (0, Y.useMemo)((() => ({
                    activePage: e,
                    previousPage: o,
                    transitionStyles: t
                })), [e, o, t]);
            return (0, z.jsx)("div", {
                ref: i,
                className: Zu()(gfe.pageSwitcher, n),
                children: (0, z.jsx)(pfe.Provider, {
                    value: r,
                    children: (0, z.jsx)(ap, {
                        focused: e,
                        children: (0, z.jsx)(ud, {
                            children: (0, z.jsx)(ffe.Provider, {
                                value: e,
                                children: (0, z.jsx)(ip, {
                                    focusKey: e,
                                    children: s
                                })
                            }, e)
                        })
                    })
                })
            })
        }));
        var vfe;
        ! function (e) {
            e[e.None = 0] = "None", e[e.Previous = 1] = "Previous", e[e.Next = 2] = "Next"
        }(vfe || (vfe = {}));
        const _fe = ({
            className: e,
            children: t,
            ...n
        }) => {
            const s = (0, Y.useContext)(pfe),
                i = (0, Y.useContext)(ffe),
                a = (0, Y.useMemo)((() => null == s || null == i ? vfe.None : s.activePage === i ? s.previousPage > i ? vfe.Previous : vfe.Next : s.previousPage === i ? s.activePage > i ? vfe.Previous : vfe.Next : vfe.None), [s, i]);
            return (0, z.jsx)(mh, {
                styles: a !== vfe.None && null != s ? s.transitionStyles : null,
                children: (0, z.jsx)("div", {
                    ...n,
                    className: Zu()(gfe.page, e, a === vfe.Previous && s?.transitionStyles?.previous, a === vfe.Next && s?.transitionStyles?.next),
                    children: t
                })
            })
        };
        X.add("game-ui/common/animations/paging/page-switcher.tsx", {
            get PageSwitcher() {
                return xfe
            },
            set PageSwitcher(e) {
                xfe = e
            },
            get Page() {
                return _fe
            },
            set Page(e) {
                _fe = e
            }
        });
        let bfe = {
            enter: "enter_bXD",
            "enter-active": "enter-active_vgh",
            enterActive: "enter-active_vgh",
            exit: "exit_XFe",
            "exit-active": "exit-active_BSo",
            exitActive: "exit-active_BSo",
            previous: "previous_IPO",
            next: "next_K_o"
        };
        X.add("game-ui/common/animations/paging/transitions/horizontal-transition.module.scss", {
            get classes() {
                return bfe
            },
            set classes(e) {
                Object.assign(bfe, e)
            }
        });
        const Tfe = bfe;
        let Efe = {
            "dlc-selector": "dlc-selector_tES",
            dlcSelector: "dlc-selector_tES",
            button: "button_Sv_",
            header: "header_fRa",
            icon: "icon_m9v",
            title: "title_eie",
            page: "page_dx1",
            "page-content": "page-content_glG",
            pageContent: "page-content_glG",
            spacer: "spacer_YWX"
        };
        X.add("game-ui/menu/components/whats-new-panel/dlc-selector/dlc-selector.module.scss", {
            get classes() {
                return Efe
            },
            set classes(e) {
                Object.assign(Efe, e)
            }
        });
        const Ife = Efe,
            yfe = AT({
                ArrowLeft: "Media/Glyphs/ThickStrokeArrowLeft.svg",
                ArrowRight: "Media/Glyphs/ThickStrokeArrowRight.svg"
            });
        var jfe = ({
            selected: e,
            onSelect: t
        }) => {
            const n = cfe.value[e].dlc,
                s = (0, Y.useCallback)((() => {
                    t(Math.max(0, e - 1))
                }), [t, e]),
                i = (0, Y.useCallback)((() => {
                    t(Math.min(cfe.value.length - 1, e + 1))
                }), [t, e]);
            return (0, z.jsxs)(Ip, {
                className: Ife.dlcSelector,
                children: [cfe.value.length > 1 && (0, z.jsx)(sf, {
                    focusKey: Ig,
                    tinted: !0,
                    disabled: 0 === e,
                    src: yfe.ArrowLeft,
                    className: Ife.button,
                    onSelect: s
                }), (0, z.jsx)("div", {
                    className: Ife.spacer
                }), (0, z.jsx)(xfe, {
                    transitionStyles: Tfe,
                    className: Ife.header,
                    activePage: e,
                    children: (0, z.jsx)(_fe, {
                        className: Ife.page,
                        children: (0, z.jsxs)("div", {
                            className: Ife.pageContent,
                            children: [(0, z.jsx)(qp, {
                                src: `Media/DLC/${n}.svg`,
                                className: Ife.icon
                            }), (0, z.jsx)("div", {
                                className: Ife.title,
                                children: (0, z.jsx)(Pc.Common.DLC_TITLE, {
                                    hash: n
                                })
                            })]
                        })
                    })
                }), cfe.value.length > 1 && (0, z.jsx)(sf, {
                    focusKey: Ig,
                    tinted: !0,
                    disabled: e === cfe.value.length - 1,
                    src: yfe.ArrowRight,
                    className: Ife.button,
                    onSelect: i
                })]
            })
        };
        X.add("game-ui/menu/components/whats-new-panel/dlc-selector/dlc-selector.tsx", {
            get DlcSelector() {
                return jfe
            },
            set DlcSelector(e) {
                jfe = e
            }
        });
        let Sfe = {
            "page-selector": "page-selector_JA1",
            pageSelector: "page-selector_JA1",
            toggle: "toggle_nf2"
        };
        X.add("game-ui/menu/components/whats-new-panel/page-selector/page-selector.module.scss", {
            get classes() {
                return Sfe
            },
            set classes(e) {
                Object.assign(Sfe, e)
            }
        });
        const Cfe = Sfe;
        var Nfe = ({
            pages: e,
            selected: t,
            onSelect: n
        }) => (0, z.jsx)("div", {
            className: Cfe.pageSelector,
            children: e > 1 && Array.from({
                length: e
            }, ((e, s) => (0, z.jsx)(b6, {
                focusKey: Ig,
                checked: t === s,
                className: Cfe.toggle,
                onChange: () => n(s)
            }, s)))
        });
        X.add("game-ui/menu/components/whats-new-panel/page-selector/page-selector.tsx", {
            get PageSelector() {
                return Nfe
            },
            set PageSelector(e) {
                Nfe = e
            }
        });
        let wfe = {
            "whats-new-page": "whats-new-page_s08",
            whatsNewPage: "whats-new-page_s08",
            scrollable: "scrollable_xNZ",
            item: "item_ze5",
            images: "images_cAd",
            text: "text_pzC",
            title: "title_kTI",
            "sub-title": "sub-title_ltz",
            subTitle: "sub-title_ltz",
            paragraphs: "paragraphs_pOF",
            paragraphsLeft: "paragraphsLeft_AkP",
            paragraphsRight: "paragraphsRight_HVa",
            paragraphsCenter: "paragraphsCenter_PXp"
        };
        X.add("game-ui/menu/components/whats-new-panel/whats-new-page/whats-new-page.module.scss", {
            get classes() {
                return wfe
            },
            set classes(e) {
                Object.assign(wfe, e)
            }
        });
        const Ofe = wfe;
        var Pfe = ({
            page: e
        }) => {
            const t = Dm();
            return (0, z.jsx)(_fe, {
                className: Ofe.whatsNewPage,
                children: (0, z.jsx)(ff, {
                    className: Ofe.scrollable,
                    autoScroll: t,
                    children: e.items?.map(((e, t) => (0, z.jsx)(Lfe, {
                        item: e
                    }, t)))
                })
            })
        };
        const Lfe = ({
            item: e
        }) => (0, z.jsxs)("div", {
            className: Ofe.item,
            style: {
                alignItems: e.justify === lfe.Left ? "flex-start" : e.justify === lfe.Right ? "flex-end" : "center"
            },
            children: [e.images?.length > 0 && (0, z.jsx)("div", {
                className: Ofe.images,
                children: e.images.map(((t, n) => (0, z.jsx)(qp, {
                    src: t.image,
                    className: Ofe.image,
                    style: Afe(e.justify, t)
                }, n)))
            }), e.title && (0, z.jsx)("div", {
                className: Zu()(Ofe.title, Ofe.text, Ofe.heading),
                children: (0, z.jsx)(Tc, {
                    id: e.title
                })
            }), e.subtitle && (0, z.jsx)("div", {
                className: Zu()(Ofe.subTitle, Ofe.text, Ofe.heading),
                children: (0, z.jsx)(Tc, {
                    id: e.subtitle
                })
            }), e.paragraphs && (0, z.jsx)("div", {
                className: Zu()(Ofe.paragraphs, Ofe.text),
                children: (0, z.jsx)(zf, {
                    className: Zu()(e.justify === lfe.Left ? Ofe.paragraphsLeft : e.justify === lfe.Right ? Ofe.paragraphsRight : Ofe.paragraphsCenter),
                    children: (0, z.jsx)(Tc, {
                        id: e.paragraphs
                    })
                })
            })]
        });

        function Afe(e, t) {
            return {
                marginLeft: e === lfe.Right ? "2%" : e === lfe.Left ? void 0 : "1%",
                marginRight: e === lfe.Left ? "2%" : e === lfe.Right ? void 0 : "1%",
                width: `${t.width}%`,
                "--w": t.aspectRatio.x,
                "--h": t.aspectRatio.y
            }
        }
        X.add("game-ui/menu/components/whats-new-panel/whats-new-page/whats-new-page.tsx", {
            get WhatsNewPage() {
                return Pfe
            },
            set WhatsNewPage(e) {
                Pfe = e
            }
        });
        let Mfe = {
            "whats-new-tab": "whats-new-tab_F6q",
            whatsNewTab: "whats-new-tab_F6q",
            fadeIn: "fadeIn_VdL"
        };
        X.add("game-ui/menu/components/whats-new-panel/whats-new-tab/whats-new-tab.module.scss", {
            get classes() {
                return Mfe
            },
            set classes(e) {
                Object.assign(Mfe, e)
            }
        });
        const Rfe = Mfe;
        var kfe = ({
            tab: e,
            selectedPage: t
        }) => (0, z.jsx)(xfe, {
            activePage: t,
            transitionStyles: Tfe,
            className: Rfe.whatsNewTab,
            children: (0, z.jsx)(Pfe, {
                page: e.pages[t]
            })
        }, e.id);
        X.add("game-ui/menu/components/whats-new-panel/whats-new-tab/whats-new-tab.tsx", {
            get WhatsNewTab() {
                return kfe
            },
            set WhatsNewTab(e) {
                kfe = e
            }
        });
        let Dfe = {
            layout: "layout_Wtx",
            "whats-new-panel": "whats-new-panel_hJt menu-theme_k91",
            whatsNewPanel: "whats-new-panel_hJt menu-theme_k91",
            "button-container": "button-container_iYr",
            buttonContainer: "button-container_iYr",
            button: "button__xS",
            dismiss: "dismiss_Z9k",
            checkbox: "checkbox_WJa",
            label: "label_Zni"
        };
        X.add("game-ui/menu/components/whats-new-panel/whats-new-panel.module.scss", {
            get classes() {
                return Dfe
            },
            set classes(e) {
                Object.assign(Dfe, e)
            }
        });
        const Ffe = Dfe,
            Ufe = new Eg("CHILDREN"),
            Bfe = new Eg("WHATS_NEW_KEY"),
            Gfe = new Eg("OK"),
            Vfe = new Eg("DISMISS");
        var Hfe = ({
            children: e
        }) => {
            const t = sl(cfe),
                n = sl(dfe),
                s = Dm(),
                [i, a] = (0, Y.useState)(n),
                [o, r] = (0, Y.useState)(0),
                [l, c] = (0, Y.useState)(!1),
                u = sl(ufe) && t.length > 0,
                d = (0, Y.useCallback)((() => mfe(l)), [l]);
            let m;
            m = u ? Bfe : Ufe;
            const h = (0, Y.useMemo)((() => ({
                    "Switch Slide": t?.length > 0 && t[i].pages?.length > 1 ? e => {
                        e < 0 && o > 0 ? (lp(rp.selectPreviousItem), r(Math.max(0, o - 1))) : e > 0 && o < cfe.value[i].pages.length - 1 && (lp(rp.selectNextItem), r(Math.min(cfe.value[i].pages.length - 1, o + 1)))
                    } : null,
                    "Switch DLC": t?.length > 1 ? e => {
                        e < 0 && i > 0 ? (lp(rp.selectPreviousItem), r(0), a(Math.max(0, i - 1))) : e > 0 && i < cfe.value.length - 1 && (lp(rp.selectNextItem), r(0), a(Math.min(cfe.value.length - 1, i + 1)))
                    } : null
                })), [o, i, t]),
                g = (0, Y.useCallback)((e => {
                    r(0), a(e)
                }), []),
                p = (0, Y.useCallback)((e => {
                    e.deltaY < 0 ? (lp(rp.selectPreviousItem), r(Math.max(0, o - 1))) : e.deltaY > 0 && (lp(rp.selectNextItem), r(Math.min(cfe.value[i].pages.length - 1, o + 1)))
                }), [o, i]);
            return (0, z.jsxs)(ap, {
                focused: m,
                children: [(0, z.jsx)(ip, {
                    focusKey: Ufe,
                    children: e
                }), u && (0, z.jsx)(ip, {
                    focusKey: Bfe,
                    children: (0, z.jsx)(oT, {
                        children: (0, z.jsx)(Dg, {
                            onAction: d,
                            children: (0, z.jsx)(Ag, {
                                actions: h,
                                children: (0, z.jsx)(yp, {
                                    children: (0, z.jsx)(mh, {
                                        styles: P3,
                                        children: (0, z.jsxs)("div", {
                                            className: Ffe.layout,
                                            children: [(0, z.jsx)(Ep, {
                                                onWheel: p,
                                                className: Ffe.whatsNewPanel,
                                                children: (0, z.jsxs)(tp, {
                                                    direction: Rg.Horizontal,
                                                    initialFocused: Gfe,
                                                    children: [(0, z.jsx)(jfe, {
                                                        selected: i,
                                                        onSelect: g
                                                    }), (0, z.jsx)(kfe, {
                                                        tab: t[i],
                                                        selectedPage: o
                                                    }), (0, z.jsx)(Ep, {
                                                        className: Ffe.buttonContainer,
                                                        children: (0, z.jsx)(Gp, {
                                                            focusKey: Gfe,
                                                            theme: AE,
                                                            onSelect: d,
                                                            className: Ffe.button,
                                                            children: (0, z.jsx)(Pc.Common.OK, {})
                                                        })
                                                    }), (0, z.jsx)(Nfe, {
                                                        selected: o,
                                                        onSelect: r,
                                                        pages: t[i].pages?.length
                                                    }), (0, z.jsxs)(Ep, {
                                                        className: Ffe.dismiss,
                                                        children: [(0, z.jsx)(ox, {
                                                            focusKey: Vfe,
                                                            checked: l,
                                                            onChange: c,
                                                            className: Ffe.checkbox
                                                        }), (0, z.jsx)("div", {
                                                            className: Ffe.label,
                                                            children: (0, z.jsx)(Pc.Common.DONT_SHOW_AGAIN, {})
                                                        })]
                                                    })]
                                                })
                                            }), s && (0, z.jsx)(Gx, {
                                                className: ofe.actionHints
                                            })]
                                        })
                                    })
                                })
                            })
                        })
                    })
                })]
            })
        };
        X.add("game-ui/menu/components/whats-new-panel/whats-new-panel.tsx", {
            get WhatsNewPanel() {
                return Hfe
            },
            set WhatsNewPanel(e) {
                Hfe = e
            }
        });
        var Kfe = () => {
            const [e, t] = (0, Y.useState)(!1), n = Dm(), s = sl(ek), i = sl(JR), a = sl(Lp), o = (0, Y.useCallback)((() => Ik(XR.Menu)), []), r = (0, Y.useContext)(sE);
            return Xx(!e), Qx(!e), (0, Y.useEffect)((() => {
                const e = _E.subscribe((e => {
                    r.showDialog((0, z.jsx)(II, {
                        ...e
                    }))
                }));
                return () => e.dispose()
            }), [r]), (0, z.jsx)(Hfe, {
                children: (0, z.jsx)(Kz, {
                    children: (0, z.jsx)(Spe, {
                        children: (0, z.jsx)(Oq, {
                            children: (0, z.jsxs)("div", {
                                className: ofe.menuUi,
                                children: [(0, z.jsxs)("div", {
                                    className: ofe.contentContainer,
                                    children: [(0, z.jsx)("div", {
                                        className: ofe.content,
                                        children: (0, z.jsx)(Ah, {
                                            onFocusChange: t,
                                            children: (0, z.jsx)(ap, {
                                                focused: i,
                                                activation: qu.Always,
                                                children: (0, z.jsxs)(ud, {
                                                    children: [i === XR.Menu && (0, z.jsx)(Jpe, {
                                                        focusKey: XR.Menu
                                                    }, XR.Menu), i === XR.NewGame && (0, z.jsx)(Q4, {
                                                        focusKey: XR.NewGame,
                                                        onClose: o
                                                    }, XR.NewGame), i === XR.LoadGame && (0, z.jsx)(j8, {
                                                        focusKey: XR.LoadGame,
                                                        onClose: o
                                                    }, XR.LoadGame), i === XR.Options && (0, z.jsx)(YX, {
                                                        focusKey: XR.Options,
                                                        onClose: o
                                                    }, XR.Options), i === XR.Credits && (0, z.jsx)(zpe, {
                                                        focusKey: XR.Credits,
                                                        onClose: o
                                                    }, XR.Credits)]
                                                })
                                            })
                                        })
                                    }), n && (0, z.jsx)(Gx, {
                                        disabled: !e,
                                        className: ofe.actionHints
                                    })]
                                }), (0, z.jsx)("div", {
                                    className: ofe.version,
                                    children: s
                                }), (0, z.jsxs)("div", {
                                    className: ofe.corner,
                                    children: [a && (0, z.jsx)(ife, {
                                        className: ofe.userSwitchPrompt
                                    }), (0, z.jsx)(YZ, {
                                        className: ofe.bpIndicator
                                    })]
                                })]
                            })
                        })
                    })
                })
            })
        };
        X.add("game-ui/menu/components/menu-ui.tsx", {
            get MenuUI() {
                return Kfe
            },
            set MenuUI(e) {
                Kfe = e
            }
        });
        let Wfe = {
            "engagement-screen": "engagement-screen_EQg",
            engagementScreen: "engagement-screen_EQg",
            pulse: "pulse_kns",
            icon: "icon_D4A"
        };
        X.add("game-ui/overlay/engagement-screen/engagement-screen.module.scss", {
            get classes() {
                return Wfe
            },
            set classes(e) {
                Object.assign(Wfe, e)
            }
        });
        const zfe = Wfe,
            Yfe = "buttonSouth";
        var $fe = () => {
            const e = qfe();
            return (0, z.jsx)(Wx, {
                className: zfe.engagementScreen,
                disabled: !0,
                children: e
            })
        };
        const qfe = () => {
                const e = Dm(),
                    t = oc((0, z.jsx)(Pc.Overlay.ENGAGEMENT_PROMPT_KEYBOARD, {})),
                    n = oc((0, z.jsx)(Pc.Overlay.ENGAGEMENT_PROMPT_GAMEPAD, {}));
                return (0, Y.useMemo)((() => e ? Xfe(n, "<KEY>", (0, z.jsx)(jf, {
                    binding: {
                        name: Yfe,
                        displayName: Yfe,
                        device: "Gamepad"
                    },
                    modifier: !1
                })) : t), [e, n, t])
            },
            Xfe = (e, t, n) => {
                const s = e.indexOf(t);
                return s >= 0 ? (0, z.jsxs)(z.Fragment, {
                    children: [e.substring(0, s), n, e.substring(s + t.length)]
                }) : e
            };
        X.add("game-ui/overlay/engagement-screen/engagement-screen.tsx", {
            get Engagement() {
                return $fe
            },
            set Engagement(e) {
                $fe = e
            }
        });
        let Qfe = {
            "overlay-action": "overlay-action_CD_",
            overlayAction: "overlay-action_CD_",
            icon: "icon_Cu3",
            "action-hints": "action-hints_TjM",
            actionHints: "action-hints_TjM"
        };
        X.add("game-ui/overlay/overlay-actions/action/overlay-action.module.scss", {
            get classes() {
                return Qfe
            },
            set classes(e) {
                Object.assign(Qfe, e)
            }
        });
        const Zfe = Qfe;
        var Jfe = ({
            displayButtonHints: e = !0,
            text: t,
            className: n
        }) => (0, z.jsxs)("div", {
            className: Zu()(Zfe.overlayAction, n),
            children: [e ? (0, z.jsx)(Gx, {
                className: Zfe.actionHints
            }) : null, t]
        });
        X.add("game-ui/overlay/overlay-actions/action/overlay-action.tsx", {
            get OverlayAction() {
                return Jfe
            },
            set OverlayAction(e) {
                Jfe = e
            }
        });
        let exe = {
            "overlay-actions": "overlay-actions_epi",
            overlayActions: "overlay-actions_epi"
        };
        X.add("game-ui/overlay/overlay-actions/overlay-actions.module.scss", {
            get classes() {
                return exe
            },
            set classes(e) {
                Object.assign(exe, e)
            }
        });
        const txe = exe;
        var nxe = ({
            className: e,
            children: t
        }) => (0, z.jsx)("div", {
            className: Zu()(txe.overlayActions, e),
            children: t
        });
        X.add("game-ui/overlay/overlay-actions/overlay-actions.tsx", {
            get OverlayActions() {
                return nxe
            },
            set OverlayActions(e) {
                nxe = e
            }
        });
        let sxe = {
            "overlay-content": "overlay-content_AYd",
            overlayContent: "overlay-content_AYd",
            content: "content_HTa"
        };
        X.add("game-ui/overlay/overlay-content/overlay-content.module.scss", {
            get classes() {
                return sxe
            },
            set classes(e) {
                Object.assign(sxe, e)
            }
        });
        const ixe = sxe;
        var axe = ({
            actions: e,
            className: t,
            children: n
        }) => (0, z.jsxs)("div", {
            className: Zu()(ixe.overlayContent, t),
            children: [(0, z.jsx)("div", {
                className: ixe.content,
                children: n
            }), e && e]
        });
        X.add("game-ui/overlay/overlay-content/overlay-content.tsx", {
            get OverlayScreen() {
                return axe
            },
            set OverlayScreen(e) {
                axe = e
            }
        });
        let oxe = {
            "overlay-text": "overlay-text_AzR",
            overlayText: "overlay-text_AzR"
        };
        X.add("game-ui/overlay/overlay-text/overlay-text.module.scss", {
            get classes() {
                return oxe
            },
            set classes(e) {
                Object.assign(oxe, e)
            }
        });
        const rxe = oxe;
        var lxe = ({
            className: e,
            children: t
        }) => (0, z.jsx)("div", {
            className: Zu()(rxe.overlayText, e),
            children: t
        });
        X.add("game-ui/overlay/overlay-text/overlay-text.tsx", {
            get OverlayText() {
                return lxe
            },
            set OverlayText(e) {
                lxe = e
            }
        });
        var cxe = () => {
            const e = TE(uE.PS, (0, z.jsx)(Pc.Overlay.CONTROLLER_DISCONNECTED_PS, {}), (0, z.jsx)(Pc.Overlay.CONTROLLER_DISCONNECTED, {}));
            return (0, z.jsx)(axe, {
                actions: (0, z.jsx)(nxe, {
                    children: (0, z.jsx)(Jfe, {})
                }),
                children: (0, z.jsx)(lxe, {
                    children: e
                })
            })
        };
        X.add("game-ui/overlay/logo-screen/controller-disconnected.tsx", {
            get ControllerDisconnected() {
                return cxe
            },
            set ControllerDisconnected(e) {
                cxe = e
            }
        });
        var uxe = () => {
            const e = TE(uE.PS, (0, z.jsx)(Pc.Overlay.CONTROLLER_PAIRING_CHANGED_PS, {}), (0, z.jsx)(Pc.Overlay.CONTROLLER_PAIRING_CHANGED, {}));
            return (0, z.jsx)(axe, {
                actions: (0, z.jsx)(nxe, {
                    children: (0, z.jsx)(Jfe, {})
                }),
                children: (0, z.jsxs)(lxe, {
                    children: [e, (0, z.jsx)(Pc.Overlay.SWITCH_USER, {})]
                })
            })
        };
        X.add("game-ui/overlay/logo-screen/controller-pairing-changed.tsx", {
            get ControllerPairingChanged() {
                return uxe
            },
            set ControllerPairingChanged(e) {
                uxe = e
            }
        });
        let dxe = {
            title: "title_oqw",
            messages: "messages_v_4",
            message: "message_LOu"
        };
        X.add("game-ui/overlay/logo-screen/corrupt-save-data/corrupt-save-data.module.scss", {
            get classes() {
                return dxe
            },
            set classes(e) {
                Object.assign(dxe, e)
            }
        });
        const mxe = dxe;
        var hxe = () => {
            const e = sl(H$),
                t = (0, Y.useRef)(null),
                n = Hm();
            return (0, Y.useEffect)((() => {
                const e = performance.now();
                let s = 0;
                const i = a => {
                    if (!t.current) return;
                    const o = t.current.scrollHeight;
                    t.current.scrollTop = .08 * (a - e) * n % (o / 2), s = window.requestAnimationFrame(i)
                };
                return s = window.requestAnimationFrame(i), () => window.cancelAnimationFrame(s)
            }), [n]), (0, z.jsxs)(axe, {
                actions: (0, z.jsx)(nxe, {
                    children: (0, z.jsx)(Jfe, {
                        displayButtonHints: !1,
                        text: (0, z.jsx)(Pc.Overlay.PRESS_ANY_KEY_ACTION, {})
                    })
                }),
                children: [(0, z.jsxs)(lxe, {
                    children: [(0, z.jsx)(Pc.Overlay.CORRUPT_SAVE_DATA, {}), (0, z.jsx)("div", {
                        className: mxe.title,
                        children: (0, z.jsx)(Pc.Overlay.DELETED_ITEMS, {})
                    })]
                }), (0, z.jsx)("div", {
                    ref: t,
                    className: mxe.messages,
                    children: e?.map(((e, t) => (0, z.jsx)("div", {
                        className: mxe.message,
                        children: e
                    }, t)))
                })]
            })
        };
        X.add("game-ui/overlay/logo-screen/corrupt-save-data/corrupt-save-data.tsx", {
            get CorruptSaveData() {
                return hxe
            },
            set CorruptSaveData(e) {
                hxe = e
            }
        });
        const gxe = {
            tension: 30,
            friction: 10
        };
        var pxe = ({
            size: e,
            lineWidth: t,
            progress: n,
            progressColors: s,
            className: i
        }) => {
            const a = Od(RW(gxe, n[0], 0), .01, 1),
                o = Od(RW(gxe, n[1], 0), .01, 1),
                r = Od(RW(gxe, n[2], 0), .01, 1),
                l = n.length > 0 ? n.reduce(((e, t) => e + t)) / n.length : 0,
                c = Hm(),
                u = e * c,
                d = Math.ceil(u),
                m = (0, Y.useRef)(null);
            return (0, Y.useEffect)((() => {
                if (!m.current) return;
                const e = m.current.getContext("2d");
                e.clearRect(0, 0, d, d);
                let n = .5 * d - t * c;
                const i = .5 * d;
                e.lineCap = "round", e.lineWidth = t * c;
                const l = [a, o, r];
                for (let a = 0; a < l.length; ++a) {
                    e.beginPath();
                    const o = a * Math.PI;
                    e.arc(i, i, n, o, o + 2 * l[a] * Math.PI), e.strokeStyle = s[a], e.stroke(), n -= (t + 2) * c
                }
            }), [d, t, s, c, a, o, r]), (0, z.jsx)("div", {
                children: (0, z.jsx)("canvas", {
                    ref: m,
                    width: d,
                    height: d,
                    className: i,
                    style: {
                        width: u,
                        height: u,
                        opacity: Od(20 * l, 0, 1)
                    }
                })
            })
        };
        X.add("game-ui/overlay/logo-screen/loading/loading-progress.tsx", {
            get LoadingProgress() {
                return pxe
            },
            set LoadingProgress(e) {
                pxe = e
            }
        });
        let fxe = {
            "overlay-loading": "overlay-loading_xAc",
            overlayLoading: "overlay-loading_xAc",
            title: "title_xw2",
            progress: "progress_xKD",
            hint: "hint_KWz"
        };
        X.add("game-ui/overlay/logo-screen/loading/loading.module.scss", {
            get classes() {
                return fxe
            },
            set classes(e) {
                Object.assign(fxe, e)
            }
        });
        const xxe = fxe,
            vxe = ["#E1F8FF", "#84E2FF", "#12C8FF"];
        var _xe = () => {
            const e = sl(G$),
                t = sl(V$),
                [n, s] = (0, Y.useState)(0);
            return (0, Y.useEffect)((() => {
                s(Math.floor(Math.random() * t.length));
                const e = window.setInterval((() => {
                    s(Math.floor(Math.random() * t.length))
                }), 1e4);
                return () => {
                    window.clearInterval(e)
                }
            }), [t.length]), (0, z.jsxs)("div", {
                className: xxe.overlayLoading,
                children: [(0, z.jsx)("div", {
                    className: xxe.title,
                    children: (0, z.jsx)(Pc.Loading.LOADING_TITLE, {})
                }), (0, z.jsx)(pxe, {
                    progress: e,
                    progressColors: vxe,
                    size: 128,
                    lineWidth: 8,
                    className: xxe.progress
                }), (0, z.jsx)("div", {
                    className: xxe.hint,
                    children: t.length > n && (0, z.jsx)(Tc, {
                        id: t[n]
                    })
                })]
            })
        };
        X.add("game-ui/overlay/logo-screen/loading/loading.tsx", {
            get LoadingScreen() {
                return _xe
            },
            set LoadingScreen(e) {
                _xe = e
            }
        });
        let bxe = {
            enter: "enter_Hgx",
            "enter-active": "enter-active_hYc",
            enterActive: "enter-active_hYc",
            exit: "exit_mhm",
            "exit-active": "exit-active_via",
            exitActive: "exit-active_via"
        };
        X.add("game-ui/overlay/transitions/screen.module.scss", {
            get classes() {
                return bxe
            },
            set classes(e) {
                Object.assign(bxe, e)
            }
        });
        const Txe = bxe;
        let Exe = {
            "logo-screen": "logo-screen_KLI",
            logoScreen: "logo-screen_KLI",
            logo: "logo_IpH",
            content: "content_sOm"
        };
        X.add("game-ui/overlay/logo-screen/logo-screen.module.scss", {
            get classes() {
                return Exe
            },
            set classes(e) {
                Object.assign(Exe, e)
            }
        });
        const Ixe = Exe;
        var yxe = ({
            children: e
        }) => (0, z.jsx)(mh, {
            styles: Txe,
            children: (0, z.jsxs)("div", {
                className: Ixe.logoScreen,
                children: [(0, z.jsx)("img", {
                    src: "Media/Menu/GameLogo.svg",
                    className: Ixe.logo
                }), (0, z.jsx)("div", {
                    className: Ixe.content,
                    children: e
                })]
            })
        });
        X.add("game-ui/overlay/logo-screen/logo-screen.tsx", {
            get LogoScreen() {
                return yxe
            },
            set LogoScreen(e) {
                yxe = e
            }
        });
        var jxe = () => (0, z.jsx)(axe, {
            children: (0, z.jsxs)(lxe, {
                children: [(0, z.jsx)(Pc.Overlay.USER_LOGGED_OUT, {}), (0, z.jsx)(Pc.Overlay.PLEASE_LOG_IN, {})]
            })
        });
        X.add("game-ui/overlay/logo-screen/user-logged-out.tsx", {
            get UserLoggedOut() {
                return jxe
            },
            set UserLoggedOut(e) {
                jxe = e
            }
        });
        var Sxe = () => (0, z.jsx)(axe, {
            actions: (0, z.jsx)(nxe, {
                children: (0, z.jsx)(Jfe, {})
            }),
            children: (0, z.jsx)(lxe, {
                children: (0, z.jsx)(Pc.Overlay.VALIDATION, {})
            })
        });
        X.add("game-ui/overlay/logo-screen/validation.tsx", {
            get Validation() {
                return Sxe
            },
            set Validation(e) {
                Sxe = e
            }
        });
        var Cxe = () => (0, z.jsx)(axe, {
            children: (0, z.jsx)(lxe, {
                children: (0, z.jsx)(Pc.Overlay.PLEASE_WAIT, {})
            })
        });
        X.add("game-ui/overlay/logo-screen/wait.tsx", {
            get Wait() {
                return Cxe
            },
            set Wait(e) {
                Cxe = e
            }
        });
        let Nxe = {
            "splash-screen": "splash-screen_vso",
            splashScreen: "splash-screen_vso",
            "step-container": "step-container_CQz",
            stepContainer: "step-container_CQz",
            enter: "enter_A2e",
            "enter-active": "enter-active_IRn",
            enterActive: "enter-active_IRn",
            exit: "exit_qYD",
            "exit-active": "exit-active_Fge",
            exitActive: "exit-active_Fge",
            logo: "logo_ceO",
            splashLogoScale: "splashLogoScale_CGf",
            "splash3-container": "splash3-container_iqq",
            splash3Container: "splash3-container_iqq",
            "legal-text": "legal-text_p0a",
            legalText: "legal-text_p0a",
            "disclaimer-text": "disclaimer-text_uUS",
            disclaimerText: "disclaimer-text_uUS",
            "coherent-logo": "coherent-logo_ykj logo_ceO",
            coherentLogo: "coherent-logo_ykj logo_ceO",
            "didimo-logo": "didimo-logo_ar3 logo_ceO",
            didimoLogo: "didimo-logo_ar3 logo_ceO",
            "instalod-logo": "instalod-logo_Iyq logo_ceO",
            instalodLogo: "instalod-logo_Iyq logo_ceO",
            "unity-logo": "unity-logo_WZ0 logo_ceO",
            unityLogo: "unity-logo_WZ0 logo_ceO",
            "colossal-logo": "colossal-logo_gge logo_ceO",
            colossalLogo: "colossal-logo_gge logo_ceO",
            "paradox-logo": "paradox-logo_FKO logo_ceO",
            paradoxLogo: "paradox-logo_FKO logo_ceO",
            "sega-logo": "sega-logo_yCR logo_ceO",
            segaLogo: "sega-logo_yCR logo_ceO"
        };
        X.add("game-ui/overlay/splash-screen/splash-screen.module.scss", {
            get classes() {
                return Nxe
            },
            set classes(e) {
                Object.assign(Nxe, e)
            }
        });
        const wxe = Nxe;
        var Oxe = ({
            screen: e
        }) => (0, z.jsx)(mh, {
            styles: Txe,
            children: (0, z.jsx)("div", {
                className: wxe.splashScreen,
                children: (0, z.jsx)(ud, {
                    skipInitial: !1,
                    children: (0, z.jsx)(mh, {
                        styles: wxe,
                        children: (0, z.jsxs)("div", {
                            className: wxe.stepContainer,
                            children: [e === U$.Splash1 && (0, z.jsx)("img", {
                                src: "Media/Menu/ParadoxLogo.svg",
                                className: wxe.paradoxLogo
                            }), e === U$.Splash2 && (0, z.jsx)("img", {
                                src: "Media/Menu/ColossalLogo.svg",
                                className: wxe.colossalLogo
                            }), e === U$.Splash3 && (0, z.jsx)("img", {
                                src: "Media/Menu/SegaLogo.svg",
                                className: wxe.segaLogo
                            }), e === U$.Splash4 && (0, z.jsxs)(z.Fragment, {
                                children: [(0, z.jsxs)("div", {
                                    className: wxe.splash3Container,
                                    children: [(0, z.jsx)("img", {
                                        src: "Media/Menu/CL_logo_full_horizontal_white.svg",
                                        className: wxe.coherentLogo
                                    }), (0, z.jsx)("img", {
                                        src: "Media/Menu/InstaLOD-Logo-BW-WhiteOnBlack.svg",
                                        className: wxe.instalodLogo
                                    }), (0, z.jsx)("img", {
                                        src: "Media/Menu/U_Logo_MadeWith_RichBlack_Knockout_RGB.svg",
                                        className: wxe.unityLogo
                                    }), (0, z.jsx)("img", {
                                        src: "Media/Menu/Didimo_logo_White_Flat.svg",
                                        className: wxe.didimoLogo
                                    })]
                                }), (0, z.jsxs)("div", {
                                    className: wxe.legalText,
                                    children: [(0, z.jsx)("p", {
                                        children: "Cities: Skylines II uses Coherent Labs user interface technology. Copyright © 2012-2024 Coherent Labs. All Rights Reserved."
                                    }), (0, z.jsx)("p", {
                                        children: "Cities: Skylines II uses Didimo Popul8™ characters technology. Copyright © 2023 Didimo, Inc. All Rights Reserved."
                                    }), (0, z.jsx)("p", {
                                        children: "Cities: Skylines II uses InstaLOD. Copyright © 2016-2024 InstaLOD GmbH. All Rights Reserved."
                                    }), (0, z.jsx)("p", {
                                        children: "Powered by the Unity Engine. Copyright © 2024 Unity Technologies. All Rights Reserved."
                                    })]
                                })]
                            }), e === U$.PiracyDisclaimer && (0, z.jsxs)("div", {
                                className: wxe.disclaimerText,
                                children: [(0, z.jsx)("p", {
                                    children: "＜ご注意＞"
                                }), (0, z.jsx)("p", {
                                    children: "ゲームソフトを権利者の許諾なく、インターネットを通じて配信、"
                                }), (0, z.jsx)("p", {
                                    children: "配布する行為、また、違法なインターネット配信と知りながら"
                                }), (0, z.jsx)("p", {
                                    children: "ダウンロードする行為は、法律で固く禁じられております。"
                                }), (0, z.jsx)("p", {
                                    children: "みなさまのご理解とご協力をお願いいたします。"
                                })]
                            }), e === U$.PhotosensitivityDisclaimer && (0, z.jsxs)("div", {
                                className: wxe.disclaimerText,
                                children: [(0, z.jsx)("p", {
                                    children: "このゲームには、画面の点滅やフラッシュ効果などを利用した演出が登場します。"
                                }), (0, z.jsx)("p", {
                                    children: "ごくまれに、強い光の刺激や点滅、テレビ画面などを見ていて、"
                                }), (0, z.jsx)("p", {
                                    children: "一時的に筋肉のけいれん、意識の喪失などの症状を起こす人がいます。"
                                }), (0, z.jsx)("p", {
                                    children: "こうした経験のある方は、このソフトをプレイする前に必ず医師と相談してください。"
                                }), (0, z.jsx)("p", {
                                    children: "また、プレイ中にこのような症状が起きた時はすぐにプレイをやめ、"
                                }), (0, z.jsx)("p", {
                                    children: "医師の診察を受けてください。"
                                })]
                            })]
                        })
                    }, e)
                })
            })
        });
        X.add("game-ui/overlay/splash-screen/splash-screen.tsx", {
            get SplashScreen() {
                return Oxe
            },
            set SplashScreen(e) {
                Oxe = e
            }
        });
        let Pxe = {
            "overlay-ui": "overlay-ui_UIz",
            overlayUi: "overlay-ui_UIz",
            "exit-active": "exit-active_iXm",
            exitActive: "exit-active_iXm"
        };
        X.add("game-ui/overlay/overlay-ui.module.scss", {
            get classes() {
                return Pxe
            },
            set classes(e) {
                Object.assign(Pxe, e)
            }
        });
        const Lxe = Pxe,
            Axe = [U$.Engagement, U$.Wait, U$.Validation, U$.Splash1, U$.Splash2, U$.Splash3, U$.Splash4, U$.None, U$.PiracyDisclaimer, U$.PhotosensitivityDisclaimer];
        var Mxe = ({
            forcedScreen: e,
            uiReady: t
        }) => {
            const n = sl(B$);
            let s = e || n;
            const i = s !== U$.None;
            return t || Axe.includes(s) || (s = U$.Loading), jY(), (0, z.jsx)(ly, {
                in: i,
                children: (0, z.jsx)(mh, {
                    styles: Lxe,
                    children: (0, z.jsx)("div", {
                        className: Lxe.overlayUi,
                        children: (0, z.jsx)(ud, {
                            children: Rxe(s)
                        })
                    })
                })
            })
        };

        function Rxe(e) {
            switch (e) {
            case U$.Splash1:
            case U$.Splash2:
            case U$.Splash3:
            case U$.Splash4:
            case U$.PiracyDisclaimer:
            case U$.PhotosensitivityDisclaimer:
                return (0, z.jsx)(Oxe, {
                    screen: e
                }, "splashScreen");
            case U$.None:
                return null;
            default:
                return (0, z.jsx)(yxe, {
                    children: (0, z.jsx)(ud, {
                        children: kxe(e)
                    })
                }, "logoScreen")
            }
        }

        function kxe(e) {
            switch (e) {
            case U$.Loading:
                return (0, z.jsx)(_xe, {}, U$[U$.Loading]);
            case U$.Engagement:
                return (0, z.jsx)($fe, {}, U$[U$.Engagement]);
            case U$.Wait:
                return (0, z.jsx)(Cxe, {}, U$[U$.Wait]);
            case U$.Validation:
                return (0, z.jsx)(Sxe, {}, U$[U$.Validation]);
            case U$.ControllerDisconnected:
                return (0, z.jsx)(cxe, {}, U$[U$.ControllerDisconnected]);
            case U$.ControllerPairingChanged:
                return (0, z.jsx)(uxe, {}, U$[U$.ControllerPairingChanged]);
            case U$.UserLoggedOut:
                return (0, z.jsx)(jxe, {}, U$[U$.UserLoggedOut]);
            case U$.CorruptSaveData:
                return (0, z.jsx)(hxe, {}, U$[U$.CorruptSaveData]);
            default:
                return null
            }
        }
        X.add("game-ui/overlay/overlay-ui.tsx", {
            get OverlayUI() {
                return Mxe
            },
            set OverlayUI(e) {
                Mxe = e
            },
            get renderLogoScreenContent() {
                return kxe
            },
            set renderLogoScreenContent(e) {
                kxe = e
            }
        });
        const Dxe = () => {
            const e = sl(mE),
                t = (() => {
                    const e = sl(wE),
                        [t, n] = (0, Y.useState)(!1),
                        [s, i] = (0, Y.useState)(GL);
                    return (0, Y.useEffect)((() => {
                        let t = 0,
                            s = e?.length || 0;
                        e && e.length ? async function () {
                            const a = [],
                                o = () => {
                                    t++, t === s && s > 0 && (HL(a), i(a), n(!0))
                                };
                            e.forEach((e => {
                                if (VL.has(e)) return o();
                                VL.add(e), import(e).then((t => {
                                    if (a.push(t.default), t.hasCSS) {
                                        s++;
                                        const t = e.replace(".mjs", ".css");
                                        VL.has(t) ? o() : (VL.add(t), BL(t, o))
                                    }
                                    o()
                                })).catch((e => {
                                    o()
                                }))
                            }))
                        }(): (HL(GL), i(GL), n(!0))
                    }), [e]), {
                        ready: t,
                        registry: s,
                        mods: e
                    }
                })(),
                n = t.ready ? e : null;
            return (0, z.jsxs)(NY, {
                children: [n && (0, z.jsx)(yY, {
                    activeUiClassName: String(n).toLowerCase(),
                    children: "Menu" === n ? (0, z.jsx)(Kfe, {}) : "Game" === n ? (0, z.jsx)(Tpe, {}) : "Editor" === n && (0, z.jsx)(ipe, {})
                }), (0, z.jsx)(Mxe, {
                    uiReady: !!n
                }, "overlayUI")]
            })
        };
        let Fxe = {
            "app-container": "app-container_Y5l",
            appContainer: "app-container_Y5l"
        };
        X.add("game-ui/common/app/app-container.module.scss", {
            get classes() {
                return Fxe
            },
            set classes(e) {
                Object.assign(Fxe, e)
            }
        });
        const Uxe = Fxe;

        function Bxe() {
            const e = document.createElement("div");
            return e.className = Uxe.appContainer, document.body.appendChild(e), e
        }
        X.add("game-ui/common/app/app-container.ts", {
            get createAppContainer() {
                return Bxe
            },
            set createAppContainer(e) {
                Bxe = e
            }
        }), Rr().whenReady.then((() => {
            function e(e) {
                e && (t.dispose(), function () {
                    const e = (0, Q.createRoot)(Bxe());
                    e.render((0, z.jsx)(Dxe, {}))
                }())
            }
            const t = dE.subscribe(e);
            e(t.value)
        })), X.add("game-ui/index.tsx", {})
    })()
})();